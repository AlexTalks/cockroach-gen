// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) fetchCursor() *tree.FetchCursor {
	return u.val.(*tree.FetchCursor)
}

//line sql-gen.y:923
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14472

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 39,
	-2, 1708,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 58,
	270, 439,
	-2, 0,
	-1, 70,
	8, 892,
	29, 892,
	617, 892,
	618, 892,
	-2, 0,
	-1, 77,
	252, 264,
	539, 264,
	-2, 0,
	-1, 91,
	240, 1441,
	254, 1441,
	270, 435,
	407, 435,
	418, 1188,
	459, 435,
	473, 1188,
	523, 1188,
	551, 435,
	578, 1188,
	-2, 0,
	-1, 97,
	137, 1708,
	247, 1708,
	562, 1708,
	563, 1708,
	-2, 0,
	-1, 115,
	156, 1679,
	176, 1679,
	189, 1679,
	250, 1679,
	283, 1679,
	356, 1679,
	367, 1679,
	557, 1679,
	-2, 1650,
	-1, 157,
	164, 1019,
	269, 1019,
	410, 980,
	478, 980,
	522, 980,
	542, 1019,
	544, 980,
	-2, 0,
	-1, 162,
	4, 1710,
	21, 1710,
	22, 1710,
	23, 1710,
	24, 1710,
	25, 1710,
	26, 1710,
	27, 1710,
	28, 1710,
	30, 1710,
	31, 1710,
	37, 1710,
	41, 1710,
	43, 1710,
	44, 1710,
	46, 1710,
	47, 1710,
	48, 1710,
	49, 1710,
	50, 1710,
	51, 1710,
	52, 1710,
	53, 1710,
	54, 1710,
	56, 1710,
	57, 1710,
	58, 1710,
	59, 1710,
	61, 1710,
	62, 1710,
	63, 1710,
	64, 1710,
	65, 1710,
	66, 1710,
	67, 1710,
	71, 1710,
	72, 1710,
	73, 1710,
	74, 1710,
	76, 1710,
	77, 1710,
	78, 1710,
	82, 1710,
	83, 1710,
	84, 1710,
	85, 1710,
	86, 1710,
	87, 1710,
	88, 1710,
	89, 1710,
	92, 1710,
	93, 1710,
	94, 1710,
	95, 1710,
	96, 1710,
	98, 1710,
	100, 1710,
	101, 1710,
	102, 1710,
	103, 1710,
	104, 1710,
	105, 1710,
	107, 1710,
	108, 1710,
	109, 1710,
	111, 1710,
	112, 1710,
	113, 1710,
	121, 1710,
	122, 1710,
	123, 1710,
	124, 1710,
	125, 1710,
	127, 1710,
	128, 1710,
	129, 1710,
	130, 1710,
	132, 1710,
	133, 1710,
	134, 1710,
	136, 1710,
	137, 1710,
	138, 1710,
	140, 1710,
	141, 1710,
	142, 1710,
	145, 1710,
	146, 1710,
	147, 1710,
	149, 1710,
	150, 1710,
	151, 1710,
	153, 1710,
	154, 1710,
	155, 1710,
	157, 1710,
	158, 1710,
	159, 1710,
	160, 1710,
	161, 1710,
	162, 1710,
	163, 1710,
	164, 1710,
	165, 1710,
	166, 1710,
	167, 1710,
	168, 1710,
	169, 1710,
	170, 1710,
	171, 1710,
	172, 1710,
	173, 1710,
	175, 1710,
	181, 1710,
	182, 1710,
	183, 1710,
	184, 1710,
	188, 1710,
	190, 1710,
	191, 1710,
	192, 1710,
	194, 1710,
	197, 1710,
	198, 1710,
	199, 1710,
	200, 1710,
	201, 1710,
	202, 1710,
	203, 1710,
	204, 1710,
	205, 1710,
	206, 1710,
	207, 1710,
	208, 1710,
	209, 1710,
	210, 1710,
	212, 1710,
	213, 1710,
	215, 1710,
	216, 1710,
	218, 1710,
	219, 1710,
	220, 1710,
	221, 1710,
	222, 1710,
	223, 1710,
	224, 1710,
	225, 1710,
	226, 1710,
	227, 1710,
	229, 1710,
	230, 1710,
	232, 1710,
	233, 1710,
	234, 1710,
	235, 1710,
	236, 1710,
	240, 1710,
	241, 1710,
	242, 1710,
	243, 1710,
	246, 1710,
	247, 1710,
	248, 1710,
	249, 1710,
	251, 1710,
	253, 1710,
	254, 1710,
	256, 1710,
	258, 1710,
	259, 1710,
	260, 1710,
	262, 1710,
	266, 1710,
	267, 1710,
	268, 1710,
	269, 1710,
	270, 1710,
	271, 1710,
	273, 1710,
	274, 1710,
	275, 1710,
	277, 1710,
	278, 1710,
	280, 1710,
	281, 1710,
	284, 1710,
	285, 1710,
	286, 1710,
	287, 1710,
	288, 1710,
	289, 1710,
	290, 1710,
	293, 1710,
	294, 1710,
	295, 1710,
	296, 1710,
	298, 1710,
	299, 1710,
	300, 1710,
	301, 1710,
	302, 1710,
	303, 1710,
	304, 1710,
	305, 1710,
	306, 1710,
	307, 1710,
	308, 1710,
	309, 1710,
	310, 1710,
	311, 1710,
	312, 1710,
	313, 1710,
	314, 1710,
	315, 1710,
	316, 1710,
	317, 1710,
	318, 1710,
	319, 1710,
	321, 1710,
	323, 1710,
	324, 1710,
	325, 1710,
	326, 1710,
	327, 1710,
	328, 1710,
	329, 1710,
	330, 1710,
	331, 1710,
	332, 1710,
	333, 1710,
	334, 1710,
	335, 1710,
	336, 1710,
	337, 1710,
	338, 1710,
	339, 1710,
	341, 1710,
	342, 1710,
	344, 1710,
	346, 1710,
	347, 1710,
	348, 1710,
	349, 1710,
	351, 1710,
	352, 1710,
	353, 1710,
	354, 1710,
	355, 1710,
	358, 1710,
	360, 1710,
	362, 1710,
	363, 1710,
	364, 1710,
	365, 1710,
	368, 1710,
	369, 1710,
	370, 1710,
	372, 1710,
	374, 1710,
	375, 1710,
	376, 1710,
	377, 1710,
	378, 1710,
	379, 1710,
	380, 1710,
	381, 1710,
	382, 1710,
	383, 1710,
	384, 1710,
	385, 1710,
	386, 1710,
	388, 1710,
	389, 1710,
	390, 1710,
	391, 1710,
	392, 1710,
	393, 1710,
	394, 1710,
	395, 1710,
	396, 1710,
	397, 1710,
	398, 1710,
	399, 1710,
	400, 1710,
	401, 1710,
	402, 1710,
	404, 1710,
	405, 1710,
	406, 1710,
	408, 1710,
	409, 1710,
	410, 1710,
	411, 1710,
	412, 1710,
	413, 1710,
	414, 1710,
	415, 1710,
	416, 1710,
	417, 1710,
	418, 1710,
	419, 1710,
	420, 1710,
	422, 1710,
	424, 1710,
	425, 1710,
	426, 1710,
	432, 1710,
	433, 1710,
	434, 1710,
	436, 1710,
	437, 1710,
	438, 1710,
	439, 1710,
	440, 1710,
	441, 1710,
	442, 1710,
	443, 1710,
	444, 1710,
	445, 1710,
	447, 1710,
	448, 1710,
	449, 1710,
	451, 1710,
	452, 1710,
	453, 1710,
	454, 1710,
	455, 1710,
	456, 1710,
	457, 1710,
	459, 1710,
	460, 1710,
	461, 1710,
	462, 1710,
	463, 1710,
	464, 1710,
	465, 1710,
	466, 1710,
	467, 1710,
	468, 1710,
	469, 1710,
	470, 1710,
	471, 1710,
	473, 1710,
	474, 1710,
	475, 1710,
	476, 1710,
	477, 1710,
	478, 1710,
	480, 1710,
	481, 1710,
	482, 1710,
	483, 1710,
	484, 1710,
	485, 1710,
	487, 1710,
	488, 1710,
	489, 1710,
	490, 1710,
	491, 1710,
	492, 1710,
	493, 1710,
	494, 1710,
	496, 1710,
	498, 1710,
	499, 1710,
	500, 1710,
	501, 1710,
	502, 1710,
	503, 1710,
	504, 1710,
	505, 1710,
	506, 1710,
	507, 1710,
	508, 1710,
	509, 1710,
	510, 1710,
	511, 1710,
	512, 1710,
	513, 1710,
	514, 1710,
	515, 1710,
	516, 1710,
	518, 1710,
	519, 1710,
	521, 1710,
	522, 1710,
	524, 1710,
	525, 1710,
	526, 1710,
	527, 1710,
	528, 1710,
	529, 1710,
	531, 1710,
	532, 1710,
	534, 1710,
	535, 1710,
	536, 1710,
	537, 1710,
	538, 1710,
	540, 1710,
	542, 1710,
	543, 1710,
	544, 1710,
	545, 1710,
	546, 1710,
	547, 1710,
	548, 1710,
	550, 1710,
	551, 1710,
	552, 1710,
	553, 1710,
	555, 1710,
	556, 1710,
	559, 1710,
	560, 1710,
	561, 1710,
	562, 1710,
	563, 1710,
	564, 1710,
	565, 1710,
	566, 1710,
	568, 1710,
	571, 1710,
	572, 1710,
	573, 1710,
	574, 1710,
	575, 1710,
	576, 1710,
	578, 1710,
	579, 1710,
	580, 1710,
	581, 1710,
	582, 1710,
	583, 1710,
	584, 1710,
	585, 1710,
	590, 1710,
	591, 1710,
	592, 1710,
	593, 1710,
	594, 1710,
	595, 1710,
	-2, 0,
	-1, 163,
	1, 1558,
	135, 1558,
	258, 1558,
	343, 1558,
	405, 1558,
	414, 1558,
	599, 1558,
	630, 1558,
	-2, 0,
	-1, 165,
	1, 1558,
	630, 1558,
	-2, 0,
	-1, 166,
	1, 1558,
	630, 1558,
	-2, 0,
	-1, 167,
	1, 1558,
	539, 1558,
	630, 1558,
	-2, 0,
	-1, 199,
	156, 1678,
	176, 1678,
	189, 1678,
	250, 1678,
	283, 1678,
	356, 1678,
	367, 1678,
	557, 1678,
	-2, 1653,
	-1, 249,
	4, 1717,
	5, 1717,
	6, 1717,
	7, 1717,
	8, 1717,
	9, 1717,
	10, 1717,
	21, 1717,
	22, 1717,
	23, 1717,
	24, 1717,
	25, 1717,
	26, 1717,
	27, 1717,
	28, 1717,
	30, 1717,
	31, 1717,
	37, 1717,
	38, 1717,
	41, 1717,
	43, 1717,
	44, 1717,
	45, 1717,
	46, 1717,
	47, 1717,
	48, 1717,
	49, 1717,
	50, 1717,
	51, 1717,
	52, 1717,
	53, 1717,
	54, 1717,
	56, 1717,
	57, 1717,
	58, 1717,
	59, 1717,
	61, 1717,
	62, 1717,
	63, 1717,
	64, 1717,
	65, 1717,
	66, 1717,
	67, 1717,
	68, 1717,
	69, 1717,
	70, 1717,
	71, 1717,
	72, 1717,
	73, 1717,
	74, 1717,
	76, 1717,
	77, 1717,
	78, 1717,
	80, 1717,
	82, 1717,
	83, 1717,
	84, 1717,
	85, 1717,
	86, 1717,
	87, 1717,
	88, 1717,
	89, 1717,
	92, 1717,
	93, 1717,
	94, 1717,
	95, 1717,
	96, 1717,
	98, 1717,
	100, 1717,
	101, 1717,
	102, 1717,
	103, 1717,
	104, 1717,
	105, 1717,
	107, 1717,
	108, 1717,
	109, 1717,
	110, 1717,
	111, 1717,
	112, 1717,
	113, 1717,
	114, 1717,
	115, 1717,
	116, 1717,
	117, 1717,
	118, 1717,
	119, 1717,
	120, 1717,
	121, 1717,
	122, 1717,
	123, 1717,
	124, 1717,
	125, 1717,
	126, 1717,
	127, 1717,
	128, 1717,
	129, 1717,
	130, 1717,
	131, 1717,
	132, 1717,
	133, 1717,
	134, 1717,
	136, 1717,
	137, 1717,
	138, 1717,
	140, 1717,
	141, 1717,
	142, 1717,
	145, 1717,
	146, 1717,
	147, 1717,
	149, 1717,
	150, 1717,
	151, 1717,
	153, 1717,
	154, 1717,
	155, 1717,
	157, 1717,
	158, 1717,
	159, 1717,
	160, 1717,
	161, 1717,
	162, 1717,
	163, 1717,
	164, 1717,
	165, 1717,
	166, 1717,
	167, 1717,
	168, 1717,
	169, 1717,
	170, 1717,
	171, 1717,
	172, 1717,
	173, 1717,
	174, 1717,
	175, 1717,
	181, 1717,
	182, 1717,
	183, 1717,
	184, 1717,
	188, 1717,
	190, 1717,
	191, 1717,
	192, 1717,
	194, 1717,
	196, 1717,
	197, 1717,
	198, 1717,
	199, 1717,
	200, 1717,
	201, 1717,
	202, 1717,
	203, 1717,
	204, 1717,
	205, 1717,
	206, 1717,
	207, 1717,
	208, 1717,
	209, 1717,
	210, 1717,
	212, 1717,
	213, 1717,
	215, 1717,
	216, 1717,
	218, 1717,
	219, 1717,
	220, 1717,
	221, 1717,
	222, 1717,
	223, 1717,
	224, 1717,
	225, 1717,
	226, 1717,
	227, 1717,
	228, 1717,
	229, 1717,
	230, 1717,
	232, 1717,
	233, 1717,
	234, 1717,
	235, 1717,
	236, 1717,
	240, 1717,
	241, 1717,
	242, 1717,
	243, 1717,
	245, 1717,
	246, 1717,
	247, 1717,
	248, 1717,
	249, 1717,
	251, 1717,
	253, 1717,
	254, 1717,
	255, 1717,
	256, 1717,
	257, 1717,
	258, 1717,
	259, 1717,
	260, 1717,
	261, 1717,
	262, 1717,
	266, 1717,
	267, 1717,
	268, 1717,
	269, 1717,
	270, 1717,
	271, 1717,
	273, 1717,
	274, 1717,
	275, 1717,
	277, 1717,
	278, 1717,
	279, 1717,
	280, 1717,
	281, 1717,
	282, 1717,
	284, 1717,
	285, 1717,
	286, 1717,
	287, 1717,
	288, 1717,
	289, 1717,
	290, 1717,
	291, 1717,
	292, 1717,
	293, 1717,
	294, 1717,
	295, 1717,
	296, 1717,
	298, 1717,
	299, 1717,
	300, 1717,
	301, 1717,
	302, 1717,
	303, 1717,
	304, 1717,
	305, 1717,
	306, 1717,
	307, 1717,
	308, 1717,
	309, 1717,
	310, 1717,
	311, 1717,
	312, 1717,
	313, 1717,
	314, 1717,
	315, 1717,
	316, 1717,
	317, 1717,
	318, 1717,
	319, 1717,
	321, 1717,
	322, 1717,
	323, 1717,
	324, 1717,
	325, 1717,
	326, 1717,
	327, 1717,
	328, 1717,
	329, 1717,
	330, 1717,
	331, 1717,
	332, 1717,
	333, 1717,
	334, 1717,
	335, 1717,
	336, 1717,
	337, 1717,
	338, 1717,
	339, 1717,
	340, 1717,
	341, 1717,
	342, 1717,
	343, 1717,
	344, 1717,
	345, 1717,
	346, 1717,
	347, 1717,
	348, 1717,
	349, 1717,
	350, 1717,
	351, 1717,
	352, 1717,
	353, 1717,
	354, 1717,
	355, 1717,
	358, 1717,
	360, 1717,
	363, 1717,
	364, 1717,
	365, 1717,
	368, 1717,
	369, 1717,
	370, 1717,
	371, 1717,
	372, 1717,
	373, 1717,
	374, 1717,
	375, 1717,
	376, 1717,
	377, 1717,
	378, 1717,
	379, 1717,
	380, 1717,
	381, 1717,
	382, 1717,
	383, 1717,
	384, 1717,
	385, 1717,
	386, 1717,
	388, 1717,
	389, 1717,
	390, 1717,
	391, 1717,
	392, 1717,
	393, 1717,
	394, 1717,
	395, 1717,
	396, 1717,
	397, 1717,
	398, 1717,
	399, 1717,
	400, 1717,
	401, 1717,
	402, 1717,
	404, 1717,
	405, 1717,
	406, 1717,
	408, 1717,
	409, 1717,
	410, 1717,
	411, 1717,
	412, 1717,
	413, 1717,
	414, 1717,
	415, 1717,
	416, 1717,
	417, 1717,
	418, 1717,
	419, 1717,
	420, 1717,
	422, 1717,
	424, 1717,
	425, 1717,
	426, 1717,
	432, 1717,
	433, 1717,
	434, 1717,
	436, 1717,
	437, 1717,
	438, 1717,
	439, 1717,
	440, 1717,
	441, 1717,
	442, 1717,
	443, 1717,
	444, 1717,
	445, 1717,
	447, 1717,
	448, 1717,
	449, 1717,
	450, 1717,
	451, 1717,
	452, 1717,
	453, 1717,
	454, 1717,
	455, 1717,
	456, 1717,
	457, 1717,
	459, 1717,
	460, 1717,
	461, 1717,
	462, 1717,
	463, 1717,
	464, 1717,
	465, 1717,
	466, 1717,
	467, 1717,
	468, 1717,
	469, 1717,
	470, 1717,
	471, 1717,
	473, 1717,
	474, 1717,
	475, 1717,
	476, 1717,
	477, 1717,
	478, 1717,
	479, 1717,
	480, 1717,
	481, 1717,
	482, 1717,
	483, 1717,
	484, 1717,
	485, 1717,
	486, 1717,
	487, 1717,
	488, 1717,
	489, 1717,
	490, 1717,
	491, 1717,
	492, 1717,
	493, 1717,
	494, 1717,
	496, 1717,
	498, 1717,
	499, 1717,
	500, 1717,
	501, 1717,
	502, 1717,
	503, 1717,
	504, 1717,
	505, 1717,
	506, 1717,
	507, 1717,
	508, 1717,
	509, 1717,
	510, 1717,
	511, 1717,
	512, 1717,
	513, 1717,
	514, 1717,
	515, 1717,
	516, 1717,
	518, 1717,
	519, 1717,
	520, 1717,
	521, 1717,
	522, 1717,
	524, 1717,
	525, 1717,
	526, 1717,
	527, 1717,
	528, 1717,
	529, 1717,
	531, 1717,
	532, 1717,
	534, 1717,
	535, 1717,
	536, 1717,
	537, 1717,
	538, 1717,
	540, 1717,
	542, 1717,
	543, 1717,
	544, 1717,
	545, 1717,
	546, 1717,
	547, 1717,
	548, 1717,
	549, 1717,
	550, 1717,
	551, 1717,
	552, 1717,
	553, 1717,
	555, 1717,
	556, 1717,
	558, 1717,
	559, 1717,
	560, 1717,
	561, 1717,
	562, 1717,
	563, 1717,
	564, 1717,
	565, 1717,
	566, 1717,
	567, 1717,
	568, 1717,
	571, 1717,
	572, 1717,
	573, 1717,
	574, 1717,
	575, 1717,
	576, 1717,
	578, 1717,
	579, 1717,
	580, 1717,
	581, 1717,
	582, 1717,
	583, 1717,
	584, 1717,
	585, 1717,
	590, 1717,
	591, 1717,
	592, 1717,
	593, 1717,
	594, 1717,
	595, 1717,
	596, 1717,
	610, 1717,
	617, 1717,
	618, 1717,
	619, 1717,
	627, 1717,
	631, 1717,
	-2, 0,
	-1, 789,
	4, 1439,
	21, 1439,
	22, 1439,
	23, 1439,
	24, 1439,
	25, 1439,
	26, 1439,
	27, 1439,
	28, 1439,
	30, 1439,
	31, 1439,
	37, 1439,
	41, 1439,
	43, 1439,
	44, 1439,
	46, 1439,
	47, 1439,
	48, 1439,
	49, 1439,
	50, 1439,
	51, 1439,
	52, 1439,
	53, 1439,
	54, 1439,
	56, 1439,
	57, 1439,
	58, 1439,
	59, 1439,
	61, 1439,
	62, 1439,
	63, 1439,
	64, 1439,
	65, 1439,
	66, 1439,
	67, 1439,
	71, 1439,
	72, 1439,
	73, 1439,
	74, 1439,
	76, 1439,
	77, 1439,
	78, 1439,
	82, 1439,
	83, 1439,
	84, 1439,
	85, 1439,
	86, 1439,
	87, 1439,
	88, 1439,
	89, 1439,
	92, 1439,
	93, 1439,
	94, 1439,
	95, 1439,
	96, 1439,
	98, 1439,
	100, 1439,
	101, 1439,
	102, 1439,
	103, 1439,
	104, 1439,
	105, 1439,
	107, 1439,
	108, 1439,
	109, 1439,
	111, 1439,
	112, 1439,
	113, 1439,
	121, 1439,
	122, 1439,
	123, 1439,
	124, 1439,
	125, 1439,
	127, 1439,
	128, 1439,
	129, 1439,
	130, 1439,
	132, 1439,
	133, 1439,
	134, 1439,
	136, 1439,
	137, 1439,
	138, 1439,
	140, 1439,
	141, 1439,
	142, 1439,
	145, 1439,
	146, 1439,
	147, 1439,
	149, 1439,
	150, 1439,
	151, 1439,
	153, 1439,
	154, 1439,
	155, 1439,
	157, 1439,
	158, 1439,
	159, 1439,
	160, 1439,
	161, 1439,
	162, 1439,
	163, 1439,
	164, 1439,
	165, 1439,
	166, 1439,
	167, 1439,
	168, 1439,
	169, 1439,
	170, 1439,
	171, 1439,
	172, 1439,
	173, 1439,
	175, 1439,
	181, 1439,
	182, 1439,
	183, 1439,
	184, 1439,
	188, 1439,
	190, 1439,
	191, 1439,
	192, 1439,
	194, 1439,
	197, 1439,
	198, 1439,
	199, 1439,
	200, 1439,
	201, 1439,
	202, 1439,
	203, 1439,
	204, 1439,
	205, 1439,
	206, 1439,
	207, 1439,
	208, 1439,
	209, 1439,
	210, 1439,
	212, 1439,
	213, 1439,
	215, 1439,
	216, 1439,
	218, 1439,
	219, 1439,
	220, 1439,
	221, 1439,
	222, 1439,
	223, 1439,
	224, 1439,
	225, 1439,
	226, 1439,
	227, 1439,
	229, 1439,
	230, 1439,
	232, 1439,
	233, 1439,
	234, 1439,
	235, 1439,
	236, 1439,
	240, 1439,
	241, 1439,
	242, 1439,
	243, 1439,
	246, 1439,
	247, 1439,
	248, 1439,
	249, 1439,
	251, 1439,
	253, 1439,
	254, 1439,
	256, 1439,
	258, 1439,
	259, 1439,
	260, 1439,
	262, 1439,
	266, 1439,
	267, 1439,
	268, 1439,
	269, 1439,
	270, 1439,
	271, 1439,
	273, 1439,
	274, 1439,
	275, 1439,
	277, 1439,
	278, 1439,
	280, 1439,
	281, 1439,
	284, 1439,
	285, 1439,
	286, 1439,
	287, 1439,
	288, 1439,
	289, 1439,
	290, 1439,
	293, 1439,
	294, 1439,
	295, 1439,
	296, 1439,
	298, 1439,
	299, 1439,
	300, 1439,
	301, 1439,
	302, 1439,
	303, 1439,
	304, 1439,
	305, 1439,
	306, 1439,
	307, 1439,
	308, 1439,
	309, 1439,
	310, 1439,
	311, 1439,
	312, 1439,
	313, 1439,
	314, 1439,
	315, 1439,
	316, 1439,
	317, 1439,
	318, 1439,
	319, 1439,
	321, 1439,
	323, 1439,
	324, 1439,
	325, 1439,
	326, 1439,
	327, 1439,
	328, 1439,
	329, 1439,
	330, 1439,
	331, 1439,
	332, 1439,
	333, 1439,
	334, 1439,
	335, 1439,
	336, 1439,
	337, 1439,
	338, 1439,
	339, 1439,
	341, 1439,
	342, 1439,
	344, 1439,
	346, 1439,
	347, 1439,
	348, 1439,
	349, 1439,
	351, 1439,
	352, 1439,
	353, 1439,
	354, 1439,
	355, 1439,
	358, 1439,
	360, 1439,
	363, 1439,
	364, 1439,
	365, 1439,
	368, 1439,
	369, 1439,
	370, 1439,
	372, 1439,
	374, 1439,
	375, 1439,
	376, 1439,
	377, 1439,
	378, 1439,
	379, 1439,
	380, 1439,
	381, 1439,
	382, 1439,
	383, 1439,
	384, 1439,
	385, 1439,
	386, 1439,
	388, 1439,
	389, 1439,
	390, 1439,
	391, 1439,
	392, 1439,
	393, 1439,
	394, 1439,
	395, 1439,
	396, 1439,
	397, 1439,
	398, 1439,
	399, 1439,
	400, 1439,
	401, 1439,
	402, 1439,
	404, 1439,
	405, 1439,
	406, 1439,
	408, 1439,
	409, 1439,
	410, 1439,
	411, 1439,
	412, 1439,
	413, 1439,
	414, 1439,
	415, 1439,
	416, 1439,
	417, 1439,
	418, 1439,
	419, 1439,
	420, 1439,
	422, 1439,
	424, 1439,
	425, 1439,
	426, 1439,
	432, 1439,
	433, 1439,
	434, 1439,
	436, 1439,
	437, 1439,
	438, 1439,
	439, 1439,
	440, 1439,
	441, 1439,
	442, 1439,
	443, 1439,
	444, 1439,
	445, 1439,
	447, 1439,
	448, 1439,
	449, 1439,
	451, 1439,
	452, 1439,
	453, 1439,
	454, 1439,
	455, 1439,
	456, 1439,
	457, 1439,
	459, 1439,
	460, 1439,
	461, 1439,
	462, 1439,
	463, 1439,
	464, 1439,
	465, 1439,
	466, 1439,
	467, 1439,
	468, 1439,
	469, 1439,
	470, 1439,
	471, 1439,
	473, 1439,
	474, 1439,
	475, 1439,
	476, 1439,
	477, 1439,
	478, 1439,
	480, 1439,
	481, 1439,
	482, 1439,
	483, 1439,
	484, 1439,
	485, 1439,
	487, 1439,
	488, 1439,
	489, 1439,
	490, 1439,
	491, 1439,
	492, 1439,
	493, 1439,
	494, 1439,
	496, 1439,
	498, 1439,
	499, 1439,
	500, 1439,
	501, 1439,
	502, 1439,
	503, 1439,
	504, 1439,
	505, 1439,
	506, 1439,
	507, 1439,
	508, 1439,
	509, 1439,
	510, 1439,
	511, 1439,
	512, 1439,
	513, 1439,
	514, 1439,
	515, 1439,
	516, 1439,
	518, 1439,
	519, 1439,
	521, 1439,
	522, 1439,
	524, 1439,
	525, 1439,
	526, 1439,
	527, 1439,
	528, 1439,
	529, 1439,
	531, 1439,
	532, 1439,
	534, 1439,
	535, 1439,
	536, 1439,
	537, 1439,
	538, 1439,
	540, 1439,
	542, 1439,
	543, 1439,
	544, 1439,
	545, 1439,
	546, 1439,
	547, 1439,
	548, 1439,
	550, 1439,
	551, 1439,
	552, 1439,
	553, 1439,
	555, 1439,
	556, 1439,
	559, 1439,
	560, 1439,
	561, 1439,
	562, 1439,
	563, 1439,
	564, 1439,
	565, 1439,
	566, 1439,
	568, 1439,
	571, 1439,
	572, 1439,
	573, 1439,
	574, 1439,
	575, 1439,
	576, 1439,
	578, 1439,
	579, 1439,
	580, 1439,
	581, 1439,
	582, 1439,
	583, 1439,
	584, 1439,
	585, 1439,
	590, 1439,
	591, 1439,
	592, 1439,
	593, 1439,
	594, 1439,
	595, 1439,
	-2, 0,
	-1, 808,
	195, 2513,
	539, 2513,
	609, 2513,
	629, 2513,
	-2, 0,
	-1, 809,
	195, 2499,
	539, 2499,
	609, 2499,
	629, 2499,
	-2, 0,
	-1, 811,
	195, 2776,
	539, 2776,
	609, 2776,
	629, 2776,
	-2, 0,
	-1, 814,
	195, 2627,
	539, 2627,
	609, 2627,
	629, 2627,
	-2, 0,
	-1, 815,
	195, 2820,
	539, 2820,
	609, 2820,
	629, 2820,
	-2, 0,
	-1, 823,
	195, 2654,
	539, 2654,
	609, 2654,
	629, 2654,
	-2, 760,
	-1, 839,
	8, 891,
	29, 891,
	617, 891,
	618, 891,
	-2, 896,
	-1, 843,
	1, 2567,
	630, 2567,
	-2, 896,
	-1, 844,
	1, 2615,
	630, 2615,
	-2, 896,
	-1, 847,
	1, 2659,
	630, 2659,
	-2, 889,
	-1, 848,
	1, 2715,
	630, 2715,
	-2, 890,
	-1, 849,
	1, 2572,
	630, 2572,
	-2, 893,
	-1, 850,
	1, 2486,
	630, 2486,
	-2, 894,
	-1, 883,
	629, 2445,
	632, 2445,
	-2, 1105,
	-1, 884,
	629, 2447,
	632, 2447,
	-2, 1106,
	-1, 885,
	629, 2446,
	632, 2446,
	-2, 1107,
	-1, 886,
	632, 2371,
	-2, 1108,
	-1, 911,
	189, 283,
	-2, 0,
	-1, 935,
	45, 2418,
	-2, 0,
	-1, 936,
	578, 1417,
	-2, 1189,
	-1, 952,
	4, 1851,
	21, 1851,
	22, 1851,
	23, 1851,
	24, 1851,
	25, 1851,
	26, 1851,
	27, 1851,
	28, 1851,
	30, 1851,
	31, 1851,
	37, 1851,
	41, 1851,
	43, 1851,
	44, 1851,
	46, 1851,
	47, 1851,
	48, 1851,
	49, 1851,
	50, 1851,
	51, 1851,
	52, 1851,
	53, 1851,
	54, 1851,
	56, 1851,
	57, 1851,
	58, 1851,
	59, 1851,
	61, 1851,
	62, 1851,
	63, 1851,
	64, 1851,
	65, 1851,
	66, 1851,
	67, 1851,
	71, 1851,
	72, 1851,
	73, 1851,
	74, 1851,
	76, 1851,
	77, 1851,
	78, 1851,
	82, 1851,
	83, 1851,
	84, 1851,
	85, 1851,
	86, 1851,
	87, 1851,
	88, 1851,
	89, 1851,
	92, 1851,
	93, 1851,
	94, 1851,
	95, 1851,
	96, 1851,
	98, 1851,
	100, 1851,
	101, 1851,
	102, 1851,
	103, 1851,
	104, 1851,
	105, 1851,
	107, 1851,
	108, 1851,
	109, 1851,
	111, 1851,
	112, 1851,
	113, 1851,
	121, 1851,
	122, 1851,
	123, 1851,
	124, 1851,
	125, 1851,
	127, 1851,
	128, 1851,
	129, 1851,
	130, 1851,
	132, 1851,
	133, 1851,
	134, 1851,
	136, 1851,
	137, 1851,
	138, 1851,
	140, 1851,
	141, 1851,
	142, 1851,
	145, 1851,
	146, 1851,
	147, 1851,
	149, 1851,
	150, 1851,
	151, 1851,
	153, 1851,
	154, 1851,
	155, 1851,
	157, 1851,
	158, 1851,
	159, 1851,
	160, 1851,
	161, 1851,
	162, 1851,
	163, 1851,
	164, 1851,
	165, 1851,
	166, 1851,
	167, 1851,
	168, 1851,
	169, 1851,
	170, 1851,
	171, 1851,
	172, 1851,
	173, 1851,
	175, 1851,
	181, 1851,
	182, 1851,
	183, 1851,
	184, 1851,
	188, 1851,
	190, 1851,
	191, 1851,
	192, 1851,
	194, 1851,
	197, 1851,
	198, 1851,
	199, 1851,
	200, 1851,
	201, 1851,
	202, 1851,
	203, 1851,
	204, 1851,
	205, 1851,
	206, 1851,
	207, 1851,
	208, 1851,
	209, 1851,
	210, 1851,
	212, 1851,
	213, 1851,
	215, 1851,
	216, 1851,
	218, 1851,
	219, 1851,
	220, 1851,
	221, 1851,
	222, 1851,
	223, 1851,
	224, 1851,
	225, 1851,
	226, 1851,
	227, 1851,
	229, 1851,
	230, 1851,
	232, 1851,
	233, 1851,
	234, 1851,
	235, 1851,
	236, 1851,
	240, 1851,
	241, 1851,
	242, 1851,
	243, 1851,
	246, 1851,
	247, 1851,
	248, 1851,
	249, 1851,
	251, 1851,
	253, 1851,
	254, 1851,
	256, 1851,
	258, 1851,
	259, 1851,
	260, 1851,
	262, 1851,
	266, 1851,
	267, 1851,
	268, 1851,
	269, 1851,
	270, 1851,
	271, 1851,
	273, 1851,
	274, 1851,
	275, 1851,
	277, 1851,
	278, 1851,
	280, 1851,
	281, 1851,
	284, 1851,
	285, 1851,
	286, 1851,
	287, 1851,
	288, 1851,
	289, 1851,
	290, 1851,
	293, 1851,
	294, 1851,
	295, 1851,
	296, 1851,
	298, 1851,
	299, 1851,
	300, 1851,
	301, 1851,
	302, 1851,
	303, 1851,
	304, 1851,
	305, 1851,
	306, 1851,
	307, 1851,
	308, 1851,
	309, 1851,
	310, 1851,
	311, 1851,
	312, 1851,
	313, 1851,
	314, 1851,
	315, 1851,
	316, 1851,
	317, 1851,
	318, 1851,
	319, 1851,
	321, 1851,
	323, 1851,
	324, 1851,
	325, 1851,
	326, 1851,
	327, 1851,
	328, 1851,
	329, 1851,
	330, 1851,
	331, 1851,
	332, 1851,
	333, 1851,
	334, 1851,
	335, 1851,
	336, 1851,
	337, 1851,
	338, 1851,
	339, 1851,
	341, 1851,
	342, 1851,
	344, 1851,
	346, 1851,
	347, 1851,
	348, 1851,
	349, 1851,
	351, 1851,
	352, 1851,
	353, 1851,
	354, 1851,
	355, 1851,
	358, 1851,
	360, 1851,
	363, 1851,
	364, 1851,
	365, 1851,
	368, 1851,
	369, 1851,
	370, 1851,
	372, 1851,
	374, 1851,
	375, 1851,
	376, 1851,
	377, 1851,
	378, 1851,
	379, 1851,
	380, 1851,
	381, 1851,
	382, 1851,
	383, 1851,
	384, 1851,
	385, 1851,
	386, 1851,
	388, 1851,
	389, 1851,
	390, 1851,
	391, 1851,
	392, 1851,
	393, 1851,
	394, 1851,
	395, 1851,
	396, 1851,
	397, 1851,
	398, 1851,
	399, 1851,
	400, 1851,
	401, 1851,
	402, 1851,
	404, 1851,
	405, 1851,
	406, 1851,
	408, 1851,
	409, 1851,
	410, 1851,
	411, 1851,
	412, 1851,
	413, 1851,
	414, 1851,
	415, 1851,
	416, 1851,
	417, 1851,
	418, 1851,
	419, 1851,
	420, 1851,
	422, 1851,
	424, 1851,
	425, 1851,
	426, 1851,
	432, 1851,
	433, 1851,
	434, 1851,
	436, 1851,
	437, 1851,
	438, 1851,
	439, 1851,
	440, 1851,
	441, 1851,
	442, 1851,
	443, 1851,
	444, 1851,
	445, 1851,
	447, 1851,
	448, 1851,
	449, 1851,
	451, 1851,
	452, 1851,
	453, 1851,
	454, 1851,
	455, 1851,
	456, 1851,
	457, 1851,
	459, 1851,
	460, 1851,
	461, 1851,
	462, 1851,
	463, 1851,
	464, 1851,
	465, 1851,
	466, 1851,
	467, 1851,
	468, 1851,
	469, 1851,
	470, 1851,
	471, 1851,
	473, 1851,
	474, 1851,
	475, 1851,
	476, 1851,
	477, 1851,
	478, 1851,
	480, 1851,
	481, 1851,
	482, 1851,
	483, 1851,
	484, 1851,
	485, 1851,
	487, 1851,
	488, 1851,
	489, 1851,
	490, 1851,
	491, 1851,
	492, 1851,
	493, 1851,
	494, 1851,
	496, 1851,
	498, 1851,
	499, 1851,
	500, 1851,
	501, 1851,
	502, 1851,
	503, 1851,
	504, 1851,
	505, 1851,
	506, 1851,
	507, 1851,
	508, 1851,
	509, 1851,
	510, 1851,
	511, 1851,
	512, 1851,
	513, 1851,
	514, 1851,
	515, 1851,
	516, 1851,
	518, 1851,
	519, 1851,
	521, 1851,
	522, 1851,
	524, 1851,
	525, 1851,
	526, 1851,
	527, 1851,
	528, 1851,
	529, 1851,
	531, 1851,
	532, 1851,
	534, 1851,
	535, 1851,
	536, 1851,
	537, 1851,
	538, 1851,
	540, 1851,
	542, 1851,
	543, 1851,
	544, 1851,
	545, 1851,
	546, 1851,
	547, 1851,
	548, 1851,
	550, 1851,
	551, 1851,
	552, 1851,
	553, 1851,
	555, 1851,
	556, 1851,
	559, 1851,
	560, 1851,
	561, 1851,
	562, 1851,
	563, 1851,
	564, 1851,
	565, 1851,
	566, 1851,
	568, 1851,
	571, 1851,
	572, 1851,
	573, 1851,
	574, 1851,
	575, 1851,
	576, 1851,
	578, 1851,
	579, 1851,
	580, 1851,
	581, 1851,
	582, 1851,
	583, 1851,
	584, 1851,
	585, 1851,
	590, 1851,
	591, 1851,
	592, 1851,
	593, 1851,
	594, 1851,
	595, 1851,
	-2, 0,
	-1, 962,
	270, 439,
	-2, 0,
	-1, 1041,
	410, 981,
	478, 981,
	522, 981,
	544, 981,
	-2, 0,
	-1, 1042,
	410, 980,
	478, 980,
	522, 980,
	544, 980,
	-2, 909,
	-1, 1046,
	1, 1033,
	626, 1033,
	628, 1033,
	630, 1033,
	-2, 0,
	-1, 1048,
	1, 955,
	626, 955,
	628, 955,
	630, 955,
	-2, 0,
	-1, 1049,
	1, 959,
	626, 959,
	628, 959,
	630, 959,
	-2, 0,
	-1, 1050,
	1, 1104,
	189, 1104,
	626, 1104,
	628, 1104,
	630, 1104,
	-2, 0,
	-1, 1058,
	1, 986,
	626, 986,
	628, 986,
	630, 986,
	-2, 0,
	-1, 1065,
	1, 1033,
	626, 1033,
	628, 1033,
	630, 1033,
	-2, 0,
	-1, 1066,
	1, 1035,
	626, 1035,
	628, 1035,
	630, 1035,
	-2, 0,
	-1, 1067,
	1, 1038,
	626, 1038,
	628, 1038,
	630, 1038,
	-2, 0,
	-1, 1075,
	1, 1068,
	626, 1068,
	628, 1068,
	630, 1068,
	-2, 0,
	-1, 1076,
	1, 1070,
	626, 1070,
	628, 1070,
	630, 1070,
	-2, 0,
	-1, 1081,
	1, 1098,
	626, 1098,
	628, 1098,
	630, 1098,
	-2, 0,
	-1, 1135,
	176, 1721,
	189, 1721,
	283, 1721,
	356, 1721,
	-2, 1657,
	-1, 1151,
	176, 1720,
	189, 1720,
	283, 1720,
	356, 1720,
	-2, 1654,
	-1, 1178,
	629, 2444,
	-2, 768,
	-1, 1207,
	5, 2436,
	627, 2434,
	-2, 2425,
	-1, 1215,
	5, 2457,
	627, 2454,
	-2, 2445,
	-1, 1216,
	5, 2458,
	627, 2455,
	-2, 2446,
	-1, 1224,
	629, 2442,
	-2, 2424,
	-1, 1225,
	627, 2908,
	-2, 2443,
	-1, 1248,
	627, 2907,
	-2, 2459,
	-1, 1249,
	5, 1926,
	-2, 2878,
	-1, 1250,
	5, 1927,
	-2, 2879,
	-1, 1251,
	5, 1928,
	-2, 2893,
	-1, 1252,
	5, 1929,
	-2, 2857,
	-1, 1253,
	5, 1930,
	-2, 2891,
	-1, 1254,
	5, 1938,
	-2, 2870,
	-1, 1255,
	5, 1925,
	-2, 2866,
	-1, 1256,
	5, 1925,
	-2, 2865,
	-1, 1257,
	5, 1925,
	-2, 2884,
	-1, 1258,
	5, 1936,
	-2, 2859,
	-1, 1259,
	5, 1941,
	-2, 2858,
	-1, 1260,
	5, 1943,
	-2, 2903,
	-1, 1263,
	5, 1965,
	-2, 2896,
	-1, 1264,
	5, 1957,
	-2, 2897,
	-1, 1265,
	5, 1965,
	-2, 2898,
	-1, 1266,
	5, 1961,
	-2, 2899,
	-1, 1267,
	5, 1911,
	-2, 2871,
	-1, 1268,
	5, 1912,
	-2, 2872,
	-1, 1269,
	5, 1913,
	-2, 2860,
	-1, 1297,
	5, 1948,
	-2, 2904,
	-1, 1298,
	5, 1949,
	-2, 2894,
	-1, 1299,
	5, 1950,
	579, 1950,
	-2, 2861,
	-1, 1300,
	5, 1951,
	579, 1951,
	-2, 2862,
	-1, 1338,
	627, 2454,
	-2, 2445,
	-1, 1339,
	627, 2455,
	-2, 2446,
	-1, 1437,
	195, 2820,
	539, 2820,
	609, 2820,
	629, 2820,
	-2, 0,
	-1, 1442,
	1, 744,
	630, 744,
	-2, 1566,
	-1, 1589,
	376, 2419,
	436, 2419,
	480, 2419,
	619, 2419,
	-2, 2409,
	-1, 1595,
	195, 143,
	277, 143,
	341, 143,
	585, 143,
	-2, 2816,
	-1, 1596,
	195, 144,
	277, 144,
	341, 144,
	585, 144,
	-2, 2558,
	-1, 1597,
	195, 145,
	277, 145,
	341, 145,
	585, 145,
	-2, 2737,
	-1, 1603,
	631, 2419,
	-2, 2421,
	-1, 1627,
	1, 1414,
	441, 1369,
	480, 1369,
	602, 1369,
	626, 1414,
	628, 1414,
	630, 1414,
	-2, 1706,
	-1, 1633,
	211, 1511,
	231, 1511,
	449, 1511,
	-2, 0,
	-1, 1682,
	418, 1188,
	578, 1188,
	-2, 434,
	-1, 1699,
	45, 2417,
	-2, 1151,
	-1, 1706,
	1, 1414,
	626, 1414,
	628, 1414,
	630, 1414,
	-2, 1706,
	-1, 1714,
	4, 1439,
	21, 1439,
	22, 1439,
	23, 1439,
	24, 1439,
	25, 1439,
	26, 1439,
	27, 1439,
	28, 1439,
	30, 1439,
	31, 1439,
	37, 1439,
	41, 1439,
	43, 1439,
	44, 1439,
	46, 1439,
	47, 1439,
	48, 1439,
	49, 1439,
	50, 1439,
	51, 1439,
	52, 1439,
	53, 1439,
	54, 1439,
	56, 1439,
	57, 1439,
	58, 1439,
	59, 1439,
	61, 1439,
	62, 1439,
	63, 1439,
	64, 1439,
	65, 1439,
	66, 1439,
	67, 1439,
	71, 1439,
	72, 1439,
	73, 1439,
	74, 1439,
	76, 1439,
	77, 1439,
	78, 1439,
	82, 1439,
	83, 1439,
	84, 1439,
	85, 1439,
	86, 1439,
	87, 1439,
	88, 1439,
	89, 1439,
	92, 1439,
	93, 1439,
	94, 1439,
	95, 1439,
	96, 1439,
	98, 1439,
	100, 1439,
	101, 1439,
	102, 1439,
	103, 1439,
	104, 1439,
	105, 1439,
	107, 1439,
	108, 1439,
	109, 1439,
	111, 1439,
	112, 1439,
	113, 1439,
	121, 1439,
	122, 1439,
	123, 1439,
	124, 1439,
	125, 1439,
	127, 1439,
	128, 1439,
	129, 1439,
	130, 1439,
	132, 1439,
	133, 1439,
	134, 1439,
	136, 1439,
	137, 1439,
	138, 1439,
	140, 1439,
	141, 1439,
	142, 1439,
	145, 1439,
	146, 1439,
	147, 1439,
	149, 1439,
	150, 1439,
	151, 1439,
	153, 1439,
	154, 1439,
	155, 1439,
	157, 1439,
	158, 1439,
	159, 1439,
	160, 1439,
	161, 1439,
	162, 1439,
	163, 1439,
	164, 1439,
	165, 1439,
	166, 1439,
	167, 1439,
	168, 1439,
	169, 1439,
	170, 1439,
	171, 1439,
	172, 1439,
	173, 1439,
	181, 1439,
	182, 1439,
	183, 1439,
	184, 1439,
	188, 1439,
	190, 1439,
	191, 1439,
	192, 1439,
	194, 1439,
	197, 1439,
	198, 1439,
	199, 1439,
	200, 1439,
	201, 1439,
	202, 1439,
	203, 1439,
	204, 1439,
	205, 1439,
	206, 1439,
	207, 1439,
	208, 1439,
	209, 1439,
	210, 1439,
	212, 1439,
	213, 1439,
	215, 1439,
	216, 1439,
	218, 1439,
	219, 1439,
	220, 1439,
	221, 1439,
	222, 1439,
	223, 1439,
	224, 1439,
	225, 1439,
	226, 1439,
	227, 1439,
	229, 1439,
	230, 1439,
	232, 1439,
	233, 1439,
	234, 1439,
	235, 1439,
	236, 1439,
	241, 1439,
	242, 1439,
	243, 1439,
	246, 1439,
	247, 1439,
	248, 1439,
	249, 1439,
	251, 1439,
	253, 1439,
	254, 1439,
	256, 1439,
	258, 1439,
	259, 1439,
	260, 1439,
	262, 1439,
	266, 1439,
	267, 1439,
	268, 1439,
	269, 1439,
	270, 1439,
	271, 1439,
	273, 1439,
	274, 1439,
	275, 1439,
	277, 1439,
	278, 1439,
	280, 1439,
	281, 1439,
	284, 1439,
	285, 1439,
	286, 1439,
	287, 1439,
	288, 1439,
	289, 1439,
	290, 1439,
	293, 1439,
	294, 1439,
	295, 1439,
	296, 1439,
	298, 1439,
	299, 1439,
	300, 1439,
	301, 1439,
	302, 1439,
	303, 1439,
	304, 1439,
	305, 1439,
	306, 1439,
	307, 1439,
	308, 1439,
	309, 1439,
	310, 1439,
	311, 1439,
	312, 1439,
	313, 1439,
	314, 1439,
	315, 1439,
	316, 1439,
	317, 1439,
	318, 1439,
	319, 1439,
	321, 1439,
	323, 1439,
	324, 1439,
	325, 1439,
	326, 1439,
	327, 1439,
	328, 1439,
	329, 1439,
	330, 1439,
	331, 1439,
	332, 1439,
	333, 1439,
	334, 1439,
	335, 1439,
	336, 1439,
	337, 1439,
	338, 1439,
	339, 1439,
	341, 1439,
	342, 1439,
	346, 1439,
	347, 1439,
	348, 1439,
	349, 1439,
	351, 1439,
	352, 1439,
	353, 1439,
	354, 1439,
	355, 1439,
	358, 1439,
	360, 1439,
	361, 1439,
	363, 1439,
	364, 1439,
	365, 1439,
	368, 1439,
	369, 1439,
	370, 1439,
	372, 1439,
	374, 1439,
	375, 1439,
	376, 1439,
	377, 1439,
	378, 1439,
	379, 1439,
	380, 1439,
	381, 1439,
	382, 1439,
	383, 1439,
	384, 1439,
	385, 1439,
	386, 1439,
	388, 1439,
	389, 1439,
	390, 1439,
	391, 1439,
	392, 1439,
	393, 1439,
	394, 1439,
	395, 1439,
	396, 1439,
	397, 1439,
	398, 1439,
	399, 1439,
	400, 1439,
	401, 1439,
	402, 1439,
	404, 1439,
	405, 1439,
	406, 1439,
	408, 1439,
	409, 1439,
	410, 1439,
	411, 1439,
	412, 1439,
	413, 1439,
	414, 1439,
	415, 1439,
	416, 1439,
	417, 1439,
	418, 1439,
	419, 1439,
	420, 1439,
	422, 1439,
	424, 1439,
	425, 1439,
	426, 1439,
	432, 1439,
	433, 1439,
	434, 1439,
	436, 1439,
	437, 1439,
	438, 1439,
	439, 1439,
	440, 1439,
	441, 1439,
	442, 1439,
	443, 1439,
	444, 1439,
	445, 1439,
	447, 1439,
	448, 1439,
	449, 1439,
	451, 1439,
	452, 1439,
	453, 1439,
	454, 1439,
	455, 1439,
	456, 1439,
	457, 1439,
	459, 1439,
	460, 1439,
	461, 1439,
	462, 1439,
	463, 1439,
	464, 1439,
	465, 1439,
	466, 1439,
	467, 1439,
	468, 1439,
	469, 1439,
	470, 1439,
	471, 1439,
	473, 1439,
	474, 1439,
	475, 1439,
	476, 1439,
	477, 1439,
	478, 1439,
	480, 1439,
	481, 1439,
	482, 1439,
	483, 1439,
	484, 1439,
	485, 1439,
	487, 1439,
	488, 1439,
	489, 1439,
	490, 1439,
	491, 1439,
	492, 1439,
	493, 1439,
	494, 1439,
	496, 1439,
	498, 1439,
	499, 1439,
	500, 1439,
	501, 1439,
	502, 1439,
	503, 1439,
	504, 1439,
	505, 1439,
	506, 1439,
	507, 1439,
	508, 1439,
	509, 1439,
	510, 1439,
	511, 1439,
	512, 1439,
	513, 1439,
	514, 1439,
	515, 1439,
	516, 1439,
	518, 1439,
	519, 1439,
	521, 1439,
	522, 1439,
	524, 1439,
	525, 1439,
	526, 1439,
	527, 1439,
	528, 1439,
	529, 1439,
	531, 1439,
	532, 1439,
	534, 1439,
	535, 1439,
	536, 1439,
	537, 1439,
	538, 1439,
	540, 1439,
	542, 1439,
	543, 1439,
	544, 1439,
	545, 1439,
	546, 1439,
	547, 1439,
	548, 1439,
	550, 1439,
	551, 1439,
	552, 1439,
	553, 1439,
	555, 1439,
	556, 1439,
	559, 1439,
	560, 1439,
	561, 1439,
	562, 1439,
	563, 1439,
	564, 1439,
	565, 1439,
	566, 1439,
	568, 1439,
	571, 1439,
	572, 1439,
	573, 1439,
	574, 1439,
	575, 1439,
	576, 1439,
	578, 1439,
	579, 1439,
	580, 1439,
	581, 1439,
	582, 1439,
	583, 1439,
	584, 1439,
	585, 1439,
	590, 1439,
	591, 1439,
	592, 1439,
	593, 1439,
	594, 1439,
	595, 1439,
	-2, 0,
	-1, 1737,
	1, 579,
	626, 579,
	628, 579,
	630, 579,
	-2, 1677,
	-1, 1740,
	4, 2902,
	11, 2902,
	12, 2902,
	14, 2902,
	15, 2902,
	16, 2902,
	17, 2902,
	18, 2902,
	19, 2902,
	21, 2902,
	22, 2902,
	23, 2902,
	24, 2902,
	25, 2902,
	26, 2902,
	27, 2902,
	28, 2902,
	30, 2902,
	31, 2902,
	34, 2902,
	35, 2902,
	37, 2902,
	39, 2902,
	41, 2902,
	43, 2902,
	44, 2902,
	46, 2902,
	47, 2902,
	48, 2902,
	49, 2902,
	50, 2902,
	51, 2902,
	52, 2902,
	53, 2902,
	54, 2902,
	56, 2902,
	57, 2902,
	58, 2902,
	59, 2902,
	61, 2902,
	62, 2902,
	63, 2902,
	64, 2902,
	65, 2902,
	66, 2902,
	67, 2902,
	70, 2902,
	71, 2902,
	72, 2902,
	73, 2902,
	74, 2902,
	76, 2902,
	77, 2902,
	78, 2902,
	79, 2902,
	82, 2902,
	83, 2902,
	84, 2902,
	85, 2902,
	86, 2902,
	87, 2902,
	88, 2902,
	89, 2902,
	90, 2902,
	92, 2902,
	93, 2902,
	94, 2902,
	95, 2902,
	96, 2902,
	98, 2902,
	99, 2902,
	100, 2902,
	101, 2902,
	102, 2902,
	103, 2902,
	104, 2902,
	105, 2902,
	107, 2902,
	108, 2902,
	109, 2902,
	110, 2902,
	111, 2902,
	112, 2902,
	113, 2902,
	121, 2902,
	122, 2902,
	123, 2902,
	124, 2902,
	125, 2902,
	127, 2902,
	128, 2902,
	129, 2902,
	130, 2902,
	132, 2902,
	133, 2902,
	134, 2902,
	136, 2902,
	137, 2902,
	138, 2902,
	140, 2902,
	141, 2902,
	142, 2902,
	145, 2902,
	146, 2902,
	147, 2902,
	149, 2902,
	150, 2902,
	151, 2902,
	153, 2902,
	154, 2902,
	155, 2902,
	157, 2902,
	158, 2902,
	159, 2902,
	160, 2902,
	161, 2902,
	162, 2902,
	163, 2902,
	164, 2902,
	165, 2902,
	166, 2902,
	167, 2902,
	168, 2902,
	169, 2902,
	170, 2902,
	171, 2902,
	172, 2902,
	173, 2902,
	177, 2902,
	178, 2902,
	179, 2902,
	180, 2902,
	181, 2902,
	182, 2902,
	183, 2902,
	184, 2902,
	187, 2902,
	188, 2902,
	190, 2902,
	191, 2902,
	192, 2902,
	194, 2902,
	196, 2902,
	197, 2902,
	198, 2902,
	199, 2902,
	200, 2902,
	201, 2902,
	202, 2902,
	203, 2902,
	204, 2902,
	205, 2902,
	206, 2902,
	207, 2902,
	208, 2902,
	209, 2902,
	210, 2902,
	212, 2902,
	213, 2902,
	215, 2902,
	216, 2902,
	218, 2902,
	219, 2902,
	220, 2902,
	221, 2902,
	222, 2902,
	223, 2902,
	224, 2902,
	225, 2902,
	226, 2902,
	227, 2902,
	228, 2902,
	229, 2902,
	230, 2902,
	231, 2902,
	232, 2902,
	233, 2902,
	234, 2902,
	235, 2902,
	236, 2902,
	238, 2902,
	239, 2902,
	241, 2902,
	242, 2902,
	243, 2902,
	245, 2902,
	246, 2902,
	247, 2902,
	248, 2902,
	249, 2902,
	251, 2902,
	253, 2902,
	254, 2902,
	255, 2902,
	256, 2902,
	257, 2902,
	258, 2902,
	259, 2902,
	260, 2902,
	261, 2902,
	262, 2902,
	264, 2902,
	265, 2902,
	266, 2902,
	267, 2902,
	268, 2902,
	269, 2902,
	270, 2902,
	271, 2902,
	273, 2902,
	274, 2902,
	275, 2902,
	277, 2902,
	278, 2902,
	279, 2902,
	280, 2902,
	281, 2902,
	282, 2902,
	284, 2902,
	285, 2902,
	286, 2902,
	287, 2902,
	288, 2902,
	289, 2902,
	290, 2902,
	293, 2902,
	294, 2902,
	295, 2902,
	296, 2902,
	297, 2902,
	298, 2902,
	299, 2902,
	300, 2902,
	301, 2902,
	302, 2902,
	303, 2902,
	304, 2902,
	305, 2902,
	306, 2902,
	307, 2902,
	308, 2902,
	309, 2902,
	310, 2902,
	311, 2902,
	312, 2902,
	313, 2902,
	314, 2902,
	315, 2902,
	316, 2902,
	317, 2902,
	318, 2902,
	319, 2902,
	321, 2902,
	322, 2902,
	323, 2902,
	324, 2902,
	325, 2902,
	326, 2902,
	327, 2902,
	328, 2902,
	329, 2902,
	330, 2902,
	331, 2902,
	332, 2902,
	333, 2902,
	334, 2902,
	335, 2902,
	336, 2902,
	337, 2902,
	338, 2902,
	339, 2902,
	341, 2902,
	342, 2902,
	345, 2902,
	346, 2902,
	347, 2902,
	348, 2902,
	349, 2902,
	351, 2902,
	352, 2902,
	353, 2902,
	354, 2902,
	355, 2902,
	358, 2902,
	360, 2902,
	363, 2902,
	364, 2902,
	365, 2902,
	366, 2902,
	368, 2902,
	369, 2902,
	370, 2902,
	372, 2902,
	374, 2902,
	375, 2902,
	376, 2902,
	377, 2902,
	378, 2902,
	379, 2902,
	380, 2902,
	381, 2902,
	382, 2902,
	383, 2902,
	384, 2902,
	385, 2902,
	386, 2902,
	388, 2902,
	389, 2902,
	390, 2902,
	391, 2902,
	392, 2902,
	393, 2902,
	394, 2902,
	395, 2902,
	396, 2902,
	397, 2902,
	398, 2902,
	399, 2902,
	400, 2902,
	401, 2902,
	402, 2902,
	404, 2902,
	405, 2902,
	406, 2902,
	408, 2902,
	409, 2902,
	410, 2902,
	411, 2902,
	412, 2902,
	413, 2902,
	414, 2902,
	415, 2902,
	416, 2902,
	417, 2902,
	418, 2902,
	419, 2902,
	420, 2902,
	422, 2902,
	424, 2902,
	425, 2902,
	426, 2902,
	432, 2902,
	433, 2902,
	434, 2902,
	435, 2902,
	436, 2902,
	437, 2902,
	438, 2902,
	439, 2902,
	440, 2902,
	441, 2902,
	442, 2902,
	443, 2902,
	444, 2902,
	445, 2902,
	447, 2902,
	448, 2902,
	449, 2902,
	450, 2902,
	451, 2902,
	452, 2902,
	453, 2902,
	454, 2902,
	455, 2902,
	456, 2902,
	457, 2902,
	458, 2902,
	459, 2902,
	460, 2902,
	461, 2902,
	462, 2902,
	463, 2902,
	464, 2902,
	465, 2902,
	466, 2902,
	467, 2902,
	468, 2902,
	469, 2902,
	470, 2902,
	471, 2902,
	473, 2902,
	474, 2902,
	475, 2902,
	476, 2902,
	477, 2902,
	478, 2902,
	480, 2902,
	481, 2902,
	482, 2902,
	483, 2902,
	484, 2902,
	485, 2902,
	486, 2902,
	487, 2902,
	488, 2902,
	489, 2902,
	490, 2902,
	491, 2902,
	492, 2902,
	493, 2902,
	494, 2902,
	496, 2902,
	498, 2902,
	499, 2902,
	500, 2902,
	501, 2902,
	502, 2902,
	503, 2902,
	504, 2902,
	505, 2902,
	506, 2902,
	507, 2902,
	508, 2902,
	509, 2902,
	510, 2902,
	511, 2902,
	512, 2902,
	513, 2902,
	514, 2902,
	515, 2902,
	516, 2902,
	518, 2902,
	519, 2902,
	520, 2902,
	521, 2902,
	522, 2902,
	524, 2902,
	525, 2902,
	526, 2902,
	527, 2902,
	528, 2902,
	529, 2902,
	531, 2902,
	532, 2902,
	534, 2902,
	535, 2902,
	536, 2902,
	537, 2902,
	538, 2902,
	540, 2902,
	542, 2902,
	543, 2902,
	544, 2902,
	545, 2902,
	546, 2902,
	547, 2902,
	548, 2902,
	550, 2902,
	551, 2902,
	552, 2902,
	553, 2902,
	555, 2902,
	556, 2902,
	559, 2902,
	560, 2902,
	561, 2902,
	562, 2902,
	563, 2902,
	564, 2902,
	565, 2902,
	566, 2902,
	568, 2902,
	571, 2902,
	572, 2902,
	573, 2902,
	574, 2902,
	575, 2902,
	576, 2902,
	578, 2902,
	579, 2902,
	580, 2902,
	581, 2902,
	582, 2902,
	583, 2902,
	584, 2902,
	585, 2902,
	590, 2902,
	591, 2902,
	592, 2902,
	593, 2902,
	594, 2902,
	595, 2902,
	596, 2902,
	598, 2902,
	607, 2902,
	608, 2902,
	609, 2902,
	610, 2902,
	611, 2902,
	612, 2902,
	614, 2902,
	615, 2902,
	616, 2902,
	617, 2902,
	618, 2902,
	619, 2902,
	620, 2902,
	621, 2902,
	622, 2902,
	625, 2902,
	628, 2902,
	629, 2902,
	631, 2902,
	632, 2902,
	-2, 0,
	-1, 1745,
	195, 2776,
	539, 2776,
	609, 2776,
	629, 2776,
	-2, 0,
	-1, 1799,
	410, 981,
	478, 981,
	522, 981,
	544, 981,
	-2, 0,
	-1, 1810,
	1, 1511,
	626, 1511,
	628, 1511,
	630, 1511,
	-2, 0,
	-1, 1827,
	1, 976,
	626, 976,
	628, 976,
	630, 976,
	-2, 0,
	-1, 1828,
	1, 1020,
	626, 1020,
	628, 1020,
	630, 1020,
	-2, 0,
	-1, 1829,
	1, 1028,
	626, 1028,
	628, 1028,
	630, 1028,
	-2, 0,
	-1, 1832,
	1, 985,
	626, 985,
	628, 985,
	630, 985,
	-2, 0,
	-1, 1834,
	1, 991,
	626, 991,
	628, 991,
	630, 991,
	-2, 0,
	-1, 1837,
	1, 987,
	626, 987,
	628, 987,
	630, 987,
	-2, 0,
	-1, 1842,
	1, 1001,
	626, 1001,
	628, 1001,
	630, 1001,
	-2, 0,
	-1, 1876,
	1, 2758,
	626, 2758,
	628, 2758,
	629, 2758,
	630, 2758,
	-2, 0,
	-1, 1880,
	1, 1079,
	626, 1079,
	628, 1079,
	630, 1079,
	-2, 0,
	-1, 1897,
	1, 1561,
	630, 1561,
	-2, 1566,
	-1, 1900,
	176, 1720,
	189, 1720,
	283, 1720,
	356, 1720,
	-2, 1658,
	-1, 2000,
	156, 1679,
	176, 1679,
	189, 1679,
	250, 1679,
	283, 1679,
	356, 1679,
	367, 1679,
	557, 1679,
	-2, 2130,
	-1, 2061,
	628, 2305,
	-2, 0,
	-1, 2097,
	156, 1679,
	176, 1679,
	189, 1679,
	250, 1679,
	283, 1679,
	356, 1679,
	367, 1679,
	557, 1679,
	-2, 1812,
	-1, 2137,
	539, 2773,
	629, 2773,
	632, 2773,
	-2, 0,
	-1, 2154,
	627, 1953,
	-2, 1941,
	-1, 2186,
	195, 2773,
	629, 2773,
	632, 2773,
	-2, 0,
	-1, 2229,
	1, 746,
	630, 746,
	-2, 1566,
	-1, 2403,
	231, 278,
	-2, 2453,
	-1, 2404,
	231, 279,
	-2, 334,
	-1, 2515,
	1, 978,
	626, 978,
	628, 978,
	630, 978,
	-2, 0,
	-1, 2516,
	1, 1022,
	626, 1022,
	628, 1022,
	630, 1022,
	-2, 0,
	-1, 2517,
	1, 1030,
	626, 1030,
	628, 1030,
	630, 1030,
	-2, 0,
	-1, 2518,
	1, 1081,
	626, 1081,
	628, 1081,
	630, 1081,
	-2, 0,
	-1, 2559,
	1, 1003,
	626, 1003,
	628, 1003,
	630, 1003,
	-2, 0,
	-1, 2581,
	1, 1064,
	626, 1064,
	628, 1064,
	630, 1064,
	-2, 0,
	-1, 2628,
	456, 1747,
	457, 1747,
	-2, 1986,
	-1, 2659,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2006,
	-1, 2660,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2007,
	-1, 2661,
	99, 0,
	264, 0,
	265, 0,
	611, 0,
	612, 0,
	-2, 2008,
	-1, 2662,
	99, 0,
	264, 0,
	265, 0,
	611, 0,
	612, 0,
	-2, 2009,
	-1, 2663,
	99, 0,
	264, 0,
	265, 0,
	611, 0,
	612, 0,
	-2, 2010,
	-1, 2664,
	99, 0,
	264, 0,
	265, 0,
	611, 0,
	612, 0,
	-2, 2011,
	-1, 2665,
	99, 0,
	264, 0,
	265, 0,
	611, 0,
	612, 0,
	-2, 2012,
	-1, 2666,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2013,
	-1, 2678,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2025,
	-1, 2679,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2026,
	-1, 2680,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2027,
	-1, 2684,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2034,
	-1, 2690,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2038,
	-1, 2692,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2046,
	-1, 2693,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2047,
	-1, 2694,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2048,
	-1, 2695,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2049,
	-1, 2869,
	5, 2457,
	195, 2316,
	627, 2454,
	-2, 2445,
	-1, 2870,
	195, 2317,
	-2, 2853,
	-1, 2871,
	195, 2318,
	-2, 2653,
	-1, 2872,
	195, 2319,
	-2, 2531,
	-1, 2873,
	195, 2320,
	-2, 2591,
	-1, 2874,
	195, 2321,
	-2, 2638,
	-1, 2875,
	195, 2322,
	-2, 2771,
	-1, 2876,
	195, 2323,
	-2, 2113,
	-1, 2948,
	1, 1813,
	2, 1813,
	110, 1813,
	156, 1813,
	176, 1813,
	189, 1813,
	196, 1813,
	214, 1813,
	217, 1813,
	245, 1813,
	250, 1813,
	261, 1813,
	279, 1813,
	283, 1813,
	322, 1813,
	356, 1813,
	361, 1813,
	367, 1813,
	446, 1813,
	450, 1813,
	557, 1813,
	569, 1813,
	587, 1813,
	588, 1813,
	589, 1813,
	599, 1813,
	626, 1813,
	628, 1813,
	630, 1813,
	632, 1813,
	-2, 1812,
	-1, 2961,
	627, 2426,
	-2, 2440,
	-1, 2963,
	1, 351,
	587, 351,
	-2, 1706,
	-1, 2993,
	627, 1952,
	-2, 1942,
	-1, 3207,
	1, 1414,
	441, 1369,
	480, 1369,
	602, 1369,
	626, 1414,
	628, 1414,
	630, 1414,
	-2, 1706,
	-1, 3384,
	362, 1750,
	-2, 2892,
	-1, 3385,
	362, 1751,
	-2, 2755,
	-1, 3389,
	456, 2382,
	457, 2382,
	-2, 2111,
	-1, 3390,
	456, 2386,
	457, 2386,
	-2, 2112,
	-1, 3391,
	456, 2383,
	457, 2383,
	-2, 2111,
	-1, 3392,
	456, 2387,
	457, 2387,
	-2, 2112,
	-1, 3405,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2036,
	-1, 3406,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2040,
	-1, 3412,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2042,
	-1, 3639,
	1, 741,
	626, 741,
	628, 741,
	630, 741,
	-2, 1566,
	-1, 3833,
	45, 2417,
	-2, 1152,
	-1, 3838,
	1, 1414,
	626, 1414,
	628, 1414,
	630, 1414,
	-2, 1706,
	-1, 3944,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2044,
	-1, 3951,
	255, 0,
	257, 0,
	345, 0,
	-2, 2063,
	-1, 4019,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2092,
	-1, 4020,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2093,
	-1, 4021,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2094,
	-1, 4025,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2098,
	-1, 4026,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2099,
	-1, 4027,
	14, 0,
	15, 0,
	16, 0,
	607, 0,
	608, 0,
	609, 0,
	-2, 2100,
	-1, 4075,
	627, 2427,
	-2, 2441,
	-1, 4283,
	629, 3009,
	-2, 1632,
	-1, 4339,
	255, 0,
	257, 0,
	345, 0,
	-2, 2064,
	-1, 4342,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2067,
	-1, 4343,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2069,
	-1, 4457,
	629, 2442,
	-2, 1449,
	-1, 4619,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2068,
	-1, 4620,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2070,
	-1, 4631,
	255, 0,
	-2, 2103,
	-1, 4820,
	255, 0,
	-2, 2104,
	-1, 5040,
	53, 0,
	228, 0,
	282, 0,
	486, 0,
	596, 0,
	610, 0,
	-2, 2856,
}

const sqlPrivate = 57344

const sqlLast = 146017

var sqlAct = [...]int{
	288, 5158, 4975, 5231, 4974, 3543, 5102, 3280, 1418, 4868,
	5086, 5039, 4860, 4688, 5026, 5052, 4912, 5172, 3821, 3131,
	3064, 2400, 1331, 3161, 4931, 4986, 5008, 5053, 4965, 5054,
	5111, 4322, 2478, 4989, 4670, 4753, 4766, 1474, 2289, 4789,
	4085, 4737, 3984, 3822, 5050, 1643, 1342, 4824, 4573, 5038,
	4567, 4578, 4534, 4507, 4693, 4640, 3936, 3665, 1410, 4608,
	2490, 1763, 2638, 4267, 3855, 4275, 1613, 4558, 4772, 4897,
	748, 4434, 4560, 1161, 2488, 2707, 1408, 4191, 885, 3250,
	4454, 1415, 3065, 2901, 3398, 4583, 2211, 3849, 3728, 3806,
	1909, 4241, 3795, 4222, 3671, 3146, 4224, 2141, 2646, 1493,
	820, 3811, 1152, 4636, 3883, 4453, 885, 3302, 2298, 3885,
	3668, 3239, 2486, 3269, 3653, 1218, 3810, 1586, 3813, 3788,
	3655, 3654, 3266, 2639, 3787, 4078, 759, 2451, 2198, 3566,
	2121, 2103, 2975, 3589, 3549, 3558, 3526, 1761, 964, 3596,
	4321, 3297, 3264, 960, 4, 4378, 3281, 2376, 3162, 5087,
	2072, 3547, 3214, 3692, 2310, 2387, 4045, 2389, 2643, 282,
	4825, 2785, 1160, 189, 2326, 281, 2941, 3525, 2720, 1978,
	3382, 2008, 3243, 2388, 1701, 3296, 882, 2943, 1413, 2374,
	816, 880, 3176, 2142, 2047, 2366, 955, 2347, 2354, 2940,
	3251, 2277, 1807, 1457, 2281, 1211, 1387, 2209, 2787, 1897,
	2073, 2776, 2921, 1216, 2704, 1476, 2627, 2608, 2610, 2976,
	2092, 793, 3274, 1738, 2438, 1704, 886, 1322, 2369, 887,
	2437, 3089, 1615, 3090, 4932, 3050, 1444, 1035, 735, 2779,
	1325, 3004, 757, 40, 2930, 3814, 2898, 891, 2042, 2082,
	2089, 2911, 1304, 894, 1472, 114, 829, 1179, 2757, 2865,
	2831, 199, 1339, 1992, 1910, 1911, 200, 1398, 2609, 801,
	189, 1842, 2397, 2611, 1736, 891, 1827, 2464, 1729, 1401,
	812, 894, 1594, 1637, 118, 2378, 104, 5103, 5159, 1469,
	2632, 1207, 981, 1192, 752, 749, 45, 761, 875, 44,
	776, 1321, 936, 42, 33, 31, 29, 1302, 1916, 1896,
	3435, 1327, 1649, 937, 1056, 4059, 3429, 4060, 5242, 2200,
	2200, 3545, 2920, 1156, 2200, 2200, 832, 836, 2200, 76,
	2200, 5234, 1156, 1924, 1925, 3768, 1957, 1958, 1959, 1968,
	1969, 1970, 5222, 4086, 5221, 5191, 2920, 77, 2920, 4692,
	5189, 5132, 4654, 5048, 4692, 2409, 1961, 1955, 5088, 5078,
	4660, 3768, 5089, 2920, 82, 1927, 3864, 5076, 5073, 5070,
	5036, 2920, 5074, 5071, 2409, 1974, 5035, 5034, 5024, 4657,
	2409, 3307, 4692, 1833, 5022, 2409, 2221, 5017, 4692, 1214,
	5012, 4775, 1980, 3865, 4692, 5011, 1319, 1642, 4984, 4692,
	4951, 1926, 4692, 4944, 2984, 91, 4943, 2920, 1453, 4936,
	2920, 4911, 1946, 2409, 4908, 2409, 4890, 3624, 4692, 4822,
	4524, 1943, 4803, 2984, 4768, 4711, 4301, 3621, 4119, 2409,
	4710, 1305, 1305, 4699, 2409, 1145, 4698, 2409, 4691, 4647,
	4692, 2487, 4692, 2409, 4621, 2218, 962, 4405, 2984, 4594,
	4591, 1136, 3606, 3307, 3768, 1453, 1135, 1157, 4502, 50,
	4481, 113, 2920, 3006, 2920, 4341, 2913, 97, 110, 2984,
	3496, 3497, 4291, 4285, 4238, 4150, 3878, 3878, 4239, 4151,
	4118, 4070, 4068, 4052, 4119, 4071, 4069, 2920, 4049, 3968,
	2221, 3964, 3877, 2409, 3542, 2920, 3878, 2980, 2920, 1949,
	1950, 1951, 1952, 3537, 3536, 1357, 3487, 2920, 2920, 1932,
	3488, 1151, 3485, 1663, 2221, 3477, 3486, 3475, 1261, 3478,
	3446, 2920, 3444, 1773, 2920, 3397, 3306, 1754, 3445, 98,
	3307, 3291, 3290, 3029, 2983, 2474, 2474, 2920, 2984, 1308,
	2221, 1309, 2973, 1337, 2965, 2218, 2920, 2919, 2409, 2920,
	1965, 2920, 1306, 1975, 2782, 2473, 2221, 97, 4952, 2474,
	1954, 1956, 3496, 3497, 1365, 4826, 4817, 1657, 4805, 4775,
	1651, 3307, 4049, 2912, 4571, 4524, 2218, 1971, 4482, 1972,
	4301, 4240, 3138, 2303, 3049, 2235, 1941, 1942, 2920, 2199,
	2215, 249, 3245, 1924, 1925, 1358, 2408, 3434, 1358, 3156,
	3040, 2068, 1636, 4168, 1963, 3939, 3911, 2090, 2359, 3866,
	1809, 2957, 2956, 2955, 2954, 2953, 1310, 1955, 249, 1947,
	1307, 1144, 1143, 1142, 1141, 1927, 1140, 1139, 1138, 3867,
	1209, 1134, 1133, 1132, 1131, 1130, 1650, 1129, 1128, 1127,
	3277, 1334, 251, 1126, 1125, 1124, 3502, 1123, 1122, 2783,
	3353, 4396, 1980, 1121, 1120, 1924, 1925, 1119, 1118, 1117,
	1116, 1926, 1115, 1097, 1033, 1032, 1031, 1973, 1030, 251,
	1029, 1028, 1946, 1027, 1026, 3496, 3497, 1025, 3514, 3515,
	3516, 1943, 102, 1024, 1023, 1022, 1021, 1927, 1962, 1020,
	3496, 3497, 1019, 250, 1018, 2201, 2201, 1017, 4337, 1977,
	2201, 2201, 1016, 1015, 2201, 1014, 2201, 1013, 243, 1012,
	1651, 1011, 1010, 1009, 1651, 1008, 1007, 244, 2551, 1006,
	250, 1005, 1004, 1926, 1003, 1002, 1001, 1000, 1213, 999,
	998, 2784, 997, 2781, 986, 1662, 985, 4335, 3502, 984,
	197, 105, 979, 978, 109, 971, 201, 970, 969, 1642,
	954, 953, 910, 909, 3511, 1777, 3512, 1953, 908, 1949,
	1950, 1951, 1952, 907, 898, 897, 896, 895, 857, 1932,
	856, 249, 827, 201, 826, 825, 3259, 807, 276, 963,
	1948, 275, 274, 273, 157, 272, 271, 270, 4353, 1656,
	2218, 269, 268, 267, 266, 1190, 265, 2218, 3496, 3497,
	264, 3514, 3515, 3516, 1420, 1216, 263, 262, 1966, 3496,
	3497, 261, 260, 259, 2814, 258, 2218, 257, 256, 255,
	1954, 1956, 251, 1651, 254, 253, 252, 2093, 4585, 4095,
	3864, 1932, 1216, 1216, 1216, 4064, 1977, 3057, 3879, 3592,
	3457, 3440, 1979, 3431, 3333, 3224, 1941, 1942, 3512, 162,
	2988, 3502, 2962, 249, 1358, 2947, 2050, 1923, 2812, 2798,
	2050, 249, 2600, 2049, 2218, 202, 3502, 2049, 2796, 3057,
	2262, 1496, 2220, 250, 157, 1216, 2116, 3511, 2019, 1947,
	1891, 1216, 1618, 1216, 2221, 3016, 1420, 5063, 243, 2199,
	2218, 3540, 2053, 2215, 1627, 2603, 2048, 244, 2786, 1645,
	1448, 198, 1465, 2912, 251, 1461, 1462, 1463, 1341, 5062,
	5059, 1216, 251, 1216, 5037, 1216, 5021, 3513, 1964, 3518,
	1758, 4916, 1618, 4814, 4635, 4592, 201, 1426, 1977, 1938,
	1939, 1945, 1967, 1944, 1940, 3541, 1937, 1935, 1936, 1928,
	1929, 1930, 1931, 1933, 1934, 4829, 4570, 4411, 1420, 4808,
	4363, 3496, 3497, 1604, 4362, 250, 1706, 2010, 4683, 1977,
	4376, 3512, 1599, 250, 4375, 4806, 4369, 1835, 1618, 4368,
	243, 4367, 4360, 4359, 3502, 1618, 3512, 4357, 243, 244,
	1333, 249, 4352, 249, 1216, 3502, 1216, 244, 4349, 4348,
	4251, 1618, 1159, 249, 1392, 1395, 4237, 249, 4099, 4098,
	1216, 1358, 1216, 4097, 4074, 1440, 4040, 4039, 201, 3513,
	4038, 1405, 3960, 3955, 4156, 3587, 201, 1953, 3519, 3533,
	3524, 2780, 3495, 3492, 3491, 1442, 1710, 1713, 3489, 3484,
	3511, 1640, 251, 3483, 251, 3261, 3482, 249, 3479, 1425,
	1948, 1977, 3518, 3476, 251, 4587, 3055, 1335, 251, 3456,
	3439, 1618, 3432, 3430, 2997, 2017, 1977, 3292, 891, 2948,
	2769, 1923, 2010, 1625, 894, 2733, 2734, 2735, 2752, 2753,
	2754, 1216, 1922, 1318, 1216, 3506, 3498, 3499, 3500, 3501,
	3503, 3504, 5237, 250, 3512, 250, 2755, 1489, 251, 1583,
	1588, 2012, 1434, 2454, 1468, 250, 1479, 1480, 243, 250,
	243, 2416, 1979, 5180, 5179, 5101, 249, 244, 2414, 244,
	243, 5099, 3496, 3497, 243, 1639, 3613, 1343, 1638, 244,
	4166, 1980, 3513, 244, 1699, 3986, 2011, 3502, 2009, 1471,
	1621, 189, 189, 1481, 1482, 4976, 3276, 3513, 201, 250,
	4252, 2745, 1778, 1591, 4895, 1648, 4880, 1655, 201, 1661,
	2741, 4876, 201, 4875, 243, 1741, 1743, 251, 4874, 4854,
	4853, 4851, 4828, 244, 1977, 3507, 3505, 3506, 3498, 3499,
	3500, 3501, 3503, 3504, 3054, 1977, 4827, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 4801, 1448, 2710, 249, 1448,
	1739, 4787, 201, 1944, 1940, 4784, 1937, 1935, 1936, 1928,
	1929, 1930, 1931, 1933, 1934, 4783, 3054, 4776, 250, 4831,
	1216, 4764, 4763, 1157, 4707, 4678, 1216, 4633, 1752, 3538,
	1757, 4616, 1716, 243, 4615, 249, 4554, 4550, 2746, 2747,
	2748, 2749, 244, 2716, 1771, 4547, 1776, 3512, 2740, 251,
	4525, 4395, 4374, 4302, 4154, 3513, 4153, 4134, 1901, 4133,
	3260, 4131, 3054, 4055, 1732, 4043, 3950, 1997, 3880, 4252,
	3874, 201, 3841, 1930, 1931, 1933, 1934, 3749, 1851, 3703,
	3670, 3508, 3509, 3510, 1783, 3615, 251, 3461, 3507, 3505,
	3506, 3498, 3499, 3500, 3501, 3503, 3504, 1753, 3502, 3460,
	250, 1730, 3455, 3421, 3505, 3506, 3498, 3499, 3500, 3501,
	3503, 3504, 1834, 1772, 3238, 243, 2986, 3082, 2056, 2055,
	2054, 4586, 2051, 2043, 244, 2750, 2751, 1977, 2041, 2995,
	3496, 3497, 1216, 1216, 1216, 2994, 1895, 250, 1216, 2959,
	2952, 2918, 2794, 1996, 2115, 1339, 2071, 1339, 2065, 1999,
	2064, 2063, 243, 201, 2062, 2061, 2060, 2059, 2743, 2058,
	2057, 244, 1496, 2038, 2037, 2036, 2035, 1800, 2034, 2033,
	2032, 2031, 2070, 2030, 1216, 2029, 2028, 885, 1420, 3584,
	2027, 1836, 2026, 2159, 885, 2025, 1420, 2024, 1420, 2023,
	201, 2012, 1998, 1995, 1902, 1990, 1433, 1362, 1353, 4830,
	249, 4557, 4407, 4345, 3508, 3509, 3510, 249, 3513, 2119,
	4094, 3507, 3505, 3506, 3498, 3499, 3500, 3501, 3503, 3504,
	4067, 2079, 4058, 4655, 1898, 3498, 3499, 3500, 3501, 3503,
	3504, 1906, 1136, 3443, 1735, 2950, 1905, 1135, 4409, 1924,
	1925, 4093, 2011, 3611, 1993, 4484, 3870, 2111, 1420, 1458,
	2813, 251, 1460, 3132, 1216, 2126, 1900, 2132, 251, 2138,
	1475, 3496, 3497, 5171, 4884, 1157, 1475, 2188, 4877, 2190,
	2052, 1927, 249, 1919, 1920, 5051, 5055, 3706, 1216, 4777,
	2127, 2100, 4590, 2076, 2077, 5128, 1496, 4528, 1924, 1925,
	4527, 4526, 4483, 4398, 2811, 2797, 4309, 1475, 2153, 4308,
	1475, 1305, 250, 4307, 2795, 4306, 3502, 1926, 4305, 250,
	4304, 189, 2292, 4303, 2253, 2044, 2045, 243, 1473, 2744,
	1927, 3108, 1459, 251, 243, 4120, 244, 4062, 4061, 2223,
	3882, 3881, 1448, 244, 3772, 3770, 891, 2227, 3769, 5126,
	1453, 2205, 894, 891, 2207, 2337, 4773, 2093, 3937, 894,
	2212, 2260, 2226, 2133, 2214, 201, 1926, 4809, 2101, 2217,
	2182, 1454, 201, 2124, 3507, 3505, 3506, 3498, 3499, 3500,
	3501, 3503, 3504, 4807, 250, 4255, 4182, 2098, 3481, 2033,
	2050, 1979, 2107, 2091, 3174, 1453, 2033, 2049, 1893, 243,
	3480, 3403, 1157, 4682, 1799, 2241, 2247, 2246, 244, 3093,
	1475, 2255, 1456, 4149, 3824, 1453, 3823, 3672, 2203, 1113,
	4114, 1852, 4115, 4846, 2021, 1808, 3512, 4847, 2479, 4767,
	5084, 2069, 2356, 4568, 3739, 3303, 1337, 201, 1337, 3796,
	4514, 1809, 2391, 4847, 2120, 2110, 4259, 4234, 2109, 4188,
	4179, 4159, 2108, 2106, 2105, 2104, 2095, 4245, 2390, 2125,
	4637, 2507, 3908, 2777, 3637, 1618, 1618, 2229, 1114, 2572,
	2484, 1735, 2422, 2139, 1932, 3545, 1496, 3988, 2730, 2731,
	2732, 2756, 2742, 2736, 5060, 2738, 2739, 2737, 2724, 2725,
	2726, 2727, 2728, 2729, 1450, 3449, 2993, 2018, 4702, 2066,
	4468, 2455, 3091, 4674, 2046, 3804, 1977, 1734, 4465, 2448,
	1709, 1632, 1429, 1391, 2303, 5075, 2336, 2225, 1317, 5072,
	3153, 4494, 3860, 4125, 3134, 3150, 2401, 2406, 1787, 3148,
	2333, 3332, 2341, 2250, 1334, 4869, 1334, 4574, 2351, 4983,
	3500, 3501, 3503, 3504, 2343, 3675, 2267, 4144, 2268, 3273,
	1766, 949, 3779, 5129, 3612, 2370, 5061, 4705, 2275, 2276,
	4701, 5130, 4680, 3931, 4732, 4201, 2346, 2256, 3641, 2581,
	2248, 4470, 2578, 1618, 1684, 1618, 1676, 1618, 3030, 1455,
	1849, 5233, 2269, 2270, 1111, 3067, 2301, 3513, 2346, 2273,
	2274, 2565, 4885, 4725, 2297, 1618, 1618, 3053, 4713, 5163,
	4517, 3053, 1109, 1460, 1155, 4516, 1107, 2309, 2346, 1618,
	4199, 4198, 1105, 3051, 1850, 5108, 1093, 3051, 1102, 2328,
	4190, 1618, 4174, 1618, 1618, 1618, 891, 2563, 2579, 4173,
	2782, 4171, 894, 4170, 2393, 2394, 2242, 4200, 4158, 4117,
	1634, 1451, 4116, 3643, 3785, 3784, 2331, 885, 2344, 3741,
	1452, 2444, 3605, 2252, 2506, 3454, 3453, 2580, 2618, 3452,
	3451, 950, 3407, 3172, 1977, 3171, 1685, 4128, 3270, 1216,
	3216, 3155, 3144, 1459, 3136, 3126, 3125, 2371, 3118, 3117,
	2395, 3116, 3098, 1639, 1460, 1848, 1638, 2827, 2303, 3097,
	3058, 2251, 2449, 2230, 2974, 2691, 2342, 2334, 1154, 2330,
	2327, 2156, 2350, 3070, 2461, 1899, 2826, 1216, 2648, 2067,
	1722, 2428, 1721, 2987, 3705, 1785, 799, 4614, 2482, 2616,
	4464, 1720, 4449, 1719, 4416, 2783, 2380, 2511, 2379, 2380,
	2383, 2379, 4703, 2492, 1734, 3095, 3001, 4675, 4466, 2469,
	2407, 2329, 2978, 1216, 2590, 1216, 3498, 3499, 3500, 3501,
	3503, 3504, 1216, 3037, 1459, 2159, 2159, 1496, 4442, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 1739, 1216, 1739, 1216, 1216,
	1216, 1216, 2458, 2471, 2430, 2429, 891, 2784, 3672, 2781,
	2345, 3737, 894, 2147, 4443, 1156, 2391, 5164, 1157, 2479,
	1157, 854, 2463, 2536, 1216, 2467, 1454, 3909, 1216, 1216,
	2498, 2620, 2345, 5109, 2607, 1453, 1216, 2475, 1099, 2476,
	1216, 2593, 1216, 1216, 2523, 1732, 1434, 2466, 1680, 2466,
	1496, 3112, 2345, 2602, 2302, 799, 1216, 1216, 1216, 1216,
	1934, 1780, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	2153, 2153, 4485, 1333, 4426, 1333, 2617, 1377, 2598, 1477,
	1478, 2499, 3504, 2299, 2503, 1477, 1478, 4742, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 2515, 1216, 1889,
	2339, 2552, 1216, 2526, 1928, 1929, 1930, 1931, 1933, 1934,
	2706, 2758, 2759, 3069, 1339, 3310, 1477, 1478, 2295, 1477,
	1478, 1496, 1801, 1693, 1443, 2758, 2774, 1635, 2706, 3348,
	1339, 1831, 3121, 2777, 4862, 3119, 2559, 852, 2644, 2645,
	1335, 4425, 1335, 2618, 2964, 1698, 1216, 1496, 1862, 1450,
	2631, 2300, 2822, 798, 2615, 1831, 3081, 2592, 1847, 2570,
	2524, 4467, 1866, 2557, 3395, 1868, 5195, 3380, 5165, 3080,
	2325, 2868, 2868, 2882, 2786, 2758, 952, 951, 2902, 2904,
	2338, 2296, 3738, 1781, 3918, 2910, 5129, 5057, 1797, 2604,
	2606, 1892, 1432, 2612, 2619, 2605, 2722, 2340, 1136, 2516,
	4613, 1136, 1136, 2635, 2616, 1153, 2636, 2637, 1809, 1904,
	2372, 2468, 1809, 2773, 2714, 3152, 2935, 2381, 3094, 2257,
	2258, 2712, 3122, 1828, 2977, 3120, 4438, 2589, 3917, 2960,
	2335, 2520, 2514, 4439, 1455, 2337, 3350, 2688, 3640, 2111,
	947, 2311, 946, 1830, 4444, 1705, 2786, 2384, 2927, 3151,
	4462, 4141, 1420, 1420, 3149, 4155, 2382, 1454, 3147, 3052,
	3024, 4864, 4837, 3977, 2100, 2517, 2315, 1830, 3068, 800,
	5175, 1157, 2824, 3000, 2332, 2718, 1305, 2825, 4515, 995,
	2828, 1157, 2829, 2830, 4172, 1157, 4441, 4169, 3003, 1829,
	2771, 2614, 798, 1496, 2373, 1786, 1451, 2780, 4102, 4089,
	1703, 3791, 5166, 3394, 4445, 1452, 4214, 3783, 3022, 2339,
	3735, 3154, 3361, 3115, 2981, 2926, 3096, 3646, 1844, 2081,
	5141, 2949, 3019, 2599, 2312, 1103, 1924, 1925, 747, 3044,
	2934, 2564, 2939, 189, 3025, 2945, 2946, 2864, 2877, 1448,
	2893, 2908, 2159, 1103, 4743, 2906, 2999, 1103, 2916, 2917,
	1955, 2932, 2933, 1104, 2928, 742, 1085, 4741, 1927, 1103,
	2098, 2617, 3011, 4739, 853, 5150, 4215, 2562, 3015, 5149,
	5058, 2413, 2412, 4139, 2989, 1157, 3974, 3387, 3388, 2360,
	1450, 1149, 3026, 3027, 2367, 1980, 2972, 5197, 2052, 5116,
	1496, 4327, 4326, 3722, 1926, 1337, 2336, 3912, 3792, 3033,
	3858, 3857, 3357, 5167, 2200, 2085, 1618, 3714, 800, 1682,
	4213, 1337, 2686, 4738, 3059, 2689, 855, 2996, 1863, 3130,
	851, 3418, 3035, 1420, 4960, 4665, 2386, 3021, 3364, 3010,
	2786, 3207, 5028, 3013, 5029, 3014, 2316, 2044, 2045, 2615,
	2591, 4440, 4740, 2522, 1216, 1216, 3734, 1216, 1679, 3165,
	3028, 3005, 3416, 3723, 2088, 3789, 3020, 2153, 3975, 3056,
	3036, 2357, 4460, 2156, 2156, 1455, 2685, 3715, 3043, 3113,
	2083, 3659, 885, 3731, 1420, 3145, 1086, 1376, 5056, 3133,
	4463, 3034, 3249, 4450, 4451, 3857, 2385, 4870, 2086, 4892,
	1453, 3031, 4948, 1334, 3100, 1705, 899, 3721, 3301, 1165,
	3300, 2361, 1932, 2317, 2318, 1618, 3211, 2323, 3642, 1334,
	1860, 3713, 3242, 3018, 2306, 797, 5169, 3752, 1618, 3284,
	1618, 3687, 1810, 906, 1633, 3101, 1618, 1451, 3257, 2313,
	5173, 2084, 3298, 3293, 1360, 2340, 1452, 2039, 1618, 3072,
	3075, 4863, 3085, 3124, 3219, 5094, 3045, 3046, 3062, 3221,
	3047, 3048, 3166, 1954, 1956, 5095, 3099, 5115, 3609, 1100,
	3313, 3314, 1420, 4544, 1420, 1864, 3212, 2324, 3363, 3114,
	3560, 3320, 3321, 3322, 2307, 2147, 2147, 2314, 2338, 3304,
	3686, 3776, 1782, 3173, 2357, 3409, 1216, 3123, 3208, 3209,
	3106, 3107, 3109, 3110, 3111, 3128, 3135, 3413, 891, 2303,
	3360, 4323, 3142, 2705, 894, 2702, 3253, 987, 3053, 4610,
	3210, 2322, 1947, 1347, 2558, 2293, 4626, 3158, 2305, 5139,
	4994, 3159, 3160, 3336, 3073, 2786, 1091, 1090, 3414, 1349,
	4461, 891, 3419, 4496, 988, 3308, 2700, 894, 766, 3693,
	3217, 3330, 3315, 3334, 3316, 3335, 5174, 2963, 3247, 3295,
	1861, 5193, 1989, 972, 1216, 1639, 1344, 3305, 3222, 2087,
	1216, 1216, 2282, 3311, 1865, 1867, 189, 2283, 1796, 1798,
	2687, 2301, 1431, 1087, 3459, 3236, 3225, 996, 3286, 3228,
	977, 3230, 2713, 5176, 3246, 2931, 2381, 3660, 4946, 1903,
	3288, 4227, 1977, 3790, 2768, 3695, 4906, 1784, 2884, 1085,
	5198, 4225, 1350, 2319, 2944, 1156, 4140, 3366, 3990, 3368,
	3279, 3362, 2519, 2513, 4561, 743, 1216, 1216, 3289, 4328,
	5182, 1453, 1216, 5168, 1149, 2382, 4556, 1739, 3275, 1351,
	2364, 3275, 3129, 4947, 4562, 1216, 1216, 4316, 4652, 4520,
	4090, 1216, 1216, 3287, 3327, 1366, 1364, 1216, 3268, 3933,
	1815, 4898, 4609, 900, 901, 3378, 4913, 5000, 4930, 4786,
	3338, 4227, 3340, 3694, 3342, 4899, 3344, 3345, 5114, 3217,
	4519, 4225, 1348, 1948, 4518, 3337, 4273, 3845, 3559, 3623,
	2201, 2696, 2971, 2436, 2284, 2320, 4229, 2078, 1363, 3354,
	2362, 4545, 1216, 1216, 1216, 3410, 1356, 734, 1216, 4900,
	744, 4733, 2288, 1088, 4250, 2697, 2085, 1913, 1216, 1913,
	5093, 1914, 2698, 2569, 3346, 4324, 2703, 2634, 4228, 1086,
	1908, 2304, 4372, 3329, 4029, 1216, 2243, 3415, 3386, 5203,
	4700, 1089, 1333, 4795, 2363, 1979, 3666, 3417, 3339, 3597,
	3341, 4844, 3343, 3376, 3442, 3377, 4274, 4194, 1333, 4175,
	2156, 3375, 745, 4126, 746, 2088, 4229, 4124, 4080, 2631,
	3381, 3396, 3846, 3837, 989, 990, 4902, 3662, 3258, 2240,
	4914, 2929, 3252, 3240, 2462, 2081, 3437, 3438, 2456, 2285,
	2290, 3441, 2450, 2442, 2421, 2357, 2420, 1092, 4228, 2086,
	4901, 2624, 3433, 3369, 3169, 4780, 3371, 4611, 3568, 1335,
	4110, 3973, 2922, 1673, 903, 902, 1368, 4044, 4903, 4966,
	973, 974, 3934, 4081, 1912, 1335, 1912, 1216, 1216, 1216,
	1216, 806, 3057, 3408, 4933, 2571, 1216, 1216, 1216, 2236,
	3074, 1216, 1928, 1929, 1930, 1931, 1933, 1934, 2925, 2302,
	4082, 2353, 4079, 1216, 1339, 1496, 2238, 1913, 4276, 1216,
	4579, 1216, 3552, 3553, 4759, 4449, 3237, 1379, 4559, 4757,
	1339, 2085, 2147, 4329, 2286, 4677, 3678, 3674, 2352, 1091,
	1090, 904, 905, 3673, 2504, 3401, 3379, 4057, 1496, 2924,
	3557, 1147, 3556, 1085, 2923, 4223, 1157, 1914, 2496, 1914,
	1339, 4442, 2239, 1496, 2485, 4435, 2418, 3569, 4226, 1345,
	1838, 1837, 1832, 2348, 4084, 1420, 2970, 3448, 1149, 2969,
	2088, 2699, 3590, 4433, 3535, 2159, 1087, 2293, 2968, 1496,
	3577, 2701, 4437, 2967, 4030, 2966, 2083, 3102, 1989, 1420,
	1728, 1726, 3554, 4373, 2625, 4031, 2300, 1420, 1714, 4233,
	994, 3244, 1154, 4857, 2086, 3625, 4535, 4443, 5202, 3567,
	3574, 4330, 1715, 2266, 1912, 1346, 1148, 3078, 4246, 1216,
	2087, 4132, 2460, 3799, 4121, 4972, 2349, 4761, 4226, 991,
	992, 1216, 845, 3648, 4915, 5136, 4689, 2377, 2291, 4663,
	4661, 3215, 2292, 3905, 3622, 3573, 3604, 2084, 3607, 1420,
	3309, 4436, 3220, 3591, 3562, 2159, 3218, 3661, 3564, 4779,
	2489, 3650, 3651, 1086, 4111, 2390, 1790, 4858, 846, 1816,
	3619, 4672, 1216, 4685, 3586, 975, 976, 3649, 2292, 4684,
	4420, 4419, 3753, 3676, 4980, 4963, 3680, 4379, 1420, 4046,
	2153, 2793, 3638, 3631, 4653, 1448, 3711, 3599, 3600, 3601,
	3602, 4402, 4760, 3546, 3644, 1885, 1088, 1420, 3583, 1420,
	3576, 3595, 4083, 5002, 3563, 3725, 1887, 3727, 4973, 3575,
	4673, 3561, 3530, 3531, 3532, 3578, 3579, 1216, 1216, 3627,
	4904, 2356, 3629, 3630, 1089, 1496, 4905, 3633, 2356, 3634,
	2585, 3635, 1884, 3740, 3598, 4690, 1420, 1882, 1856, 3581,
	5140, 3582, 5138, 3663, 3763, 3570, 3571, 3572, 3610, 3755,
	4859, 3757, 1854, 1420, 3761, 1826, 3103, 3104, 3767, 2287,
	2153, 3774, 3708, 5077, 3677, 2087, 3658, 3682, 805, 1824,
	3684, 1822, 1820, 3616, 3617, 1337, 3618, 1818, 4888, 1812,
	1092, 1806, 4122, 3690, 1174, 1618, 1804, 4878, 1724, 3628,
	3732, 1337, 4659, 4632, 4413, 3632, 4371, 4745, 1420, 1618,
	4232, 1618, 3527, 1091, 1090, 1496, 3712, 3710, 2265, 4438,
	3639, 3949, 885, 1618, 3906, 3726, 4439, 3903, 3742, 3620,
	3750, 1337, 3490, 3420, 3647, 1618, 3724, 4444, 3669, 3241,
	1727, 1725, 3143, 2375, 3137, 3092, 2998, 1420, 2594, 3809,
	993, 2495, 2480, 2118, 2114, 3838, 1888, 1765, 2561, 4418,
	1087, 3528, 2528, 2399, 1339, 3929, 3829, 3696, 3853, 3928,
	3794, 3920, 3797, 1908, 3352, 3762, 3351, 3704, 3318, 4441,
	3851, 4497, 2613, 1334, 1843, 2531, 1618, 3298, 2441, 3793,
	3836, 3717, 3773, 2419, 3720, 2189, 3298, 4445, 1618, 1334,
	1618, 3754, 2187, 4402, 2022, 1779, 1697, 1301, 2792, 1886,
	3700, 3701, 5049, 3702, 4181, 3873, 4180, 3745, 4501, 4480,
	4962, 4577, 5112, 3751, 2938, 4506, 4493, 2587, 4431, 1334,
	3844, 4430, 3764, 2586, 3862, 1883, 4572, 3771, 3970, 4856,
	1881, 1855, 3910, 3718, 3850, 3124, 2131, 3719, 3775, 4272,
	4263, 1496, 4197, 3781, 1496, 1853, 4177, 4147, 1825, 4145,
	4123, 3840, 3835, 3746, 3747, 3825, 3748, 1101, 3271, 3263,
	3256, 3782, 1823, 3248, 1821, 1819, 3233, 2125, 3232, 3213,
	1817, 891, 1811, 3017, 1805, 3012, 3736, 894, 1216, 1803,
	1088, 1723, 2417, 3921, 1216, 1216, 3100, 2415, 1216, 1216,
	1216, 3847, 1216, 3801, 2392, 2358, 3901, 2321, 3899, 2308,
	3832, 1216, 2159, 3834, 3904, 3854, 1146, 3833, 1089, 5107,
	1216, 3786, 2294, 2222, 2219, 1216, 2216, 2213, 2208, 2206,
	2202, 1496, 2193, 3765, 4440, 1314, 5033, 3902, 2367, 1917,
	1216, 3927, 3859, 189, 189, 2560, 3861, 3399, 1496, 2527,
	2398, 3868, 4561, 3926, 5130, 2244, 5014, 3372, 2159, 2159,
	1216, 1216, 1315, 1216, 1216, 1216, 3780, 3871, 3872, 2597,
	3370, 3206, 4562, 4924, 1092, 4593, 4450, 4451, 4513, 4417,
	3299, 1216, 3645, 2156, 2261, 1216, 1678, 2159, 2159, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 3952,
	1216, 3935, 1157, 4797, 4002, 3079, 4003, 2595, 1216, 1216,
	2159, 4790, 3914, 3053, 3915, 1216, 3916, 2153, 3053, 3962,
	3963, 3852, 4284, 1106, 1108, 1110, 1216, 2232, 2233, 3051,
	2303, 2518, 3932, 2459, 3076, 1337, 3400, 1339, 1339, 1879,
	1880, 1216, 1400, 1918, 2555, 3766, 2550, 1399, 5013, 2525,
	4471, 1924, 1925, 2156, 2596, 1924, 1925, 4508, 3170, 1148,
	1802, 4816, 4687, 2153, 2153, 3083, 1316, 1470, 4380, 4358,
	3691, 3084, 3105, 1496, 1921, 1427, 1367, 5124, 3957, 277,
	4076, 3959, 1467, 1927, 4193, 2147, 1420, 1420, 4260, 5085,
	3231, 2443, 2153, 2153, 3976, 3978, 3979, 3969, 4041, 3084,
	3985, 1420, 1420, 4063, 885, 1420, 3992, 1438, 4192, 3150,
	3148, 3924, 1333, 3157, 3139, 3141, 3088, 3086, 1859, 1926,
	3930, 4971, 1400, 1926, 1216, 2153, 5170, 731, 1333, 3140,
	3087, 2644, 3993, 1334, 3980, 4007, 1400, 4953, 837, 4923,
	4048, 4005, 4033, 4917, 4000, 4855, 4781, 4752, 4001, 4664,
	4270, 1216, 4262, 4249, 2231, 4073, 3839, 3999, 1333, 3278,
	2644, 4008, 4042, 2909, 2228, 2147, 2140, 4087, 4088, 4686,
	5004, 4053, 4054, 3127, 4034, 5005, 1631, 1630, 1624, 1335,
	1150, 189, 4100, 4101, 1216, 1216, 4107, 3608, 2377, 4050,
	4051, 5201, 4919, 4037, 4269, 1335, 5143, 3496, 3497, 1924,
	1925, 5004, 2272, 3039, 1789, 1641, 5005, 2271, 3038, 1642,
	1788, 1642, 4350, 2788, 4092, 3355, 2823, 2272, 2271, 4782,
	4726, 1858, 1216, 1216, 1857, 1335, 4510, 4505, 4065, 4504,
	1216, 4127, 4346, 4320, 4091, 3981, 3759, 4108, 3756, 3358,
	2016, 4109, 2015, 3374, 2601, 5186, 5151, 5019, 4957, 4956,
	1618, 1618, 4066, 1618, 4955, 4887, 4886, 1618, 4833, 4755,
	1618, 4717, 4656, 891, 4650, 1420, 4552, 4160, 4532, 894,
	4469, 4408, 4297, 4211, 4290, 4236, 4143, 4135, 3843, 3842,
	4103, 3683, 3626, 3359, 3349, 3326, 4164, 3325, 3324, 4146,
	2159, 4148, 3323, 3262, 4096, 3235, 4165, 4167, 3234, 3077,
	3008, 3002, 2991, 2990, 2979, 2717, 2588, 2556, 2549, 4183,
	2548, 2547, 4195, 4189, 4205, 2546, 2545, 2457, 1337, 1337,
	2431, 2427, 2426, 2425, 2424, 4152, 2423, 2196, 4157, 2195,
	4219, 2194, 1618, 2192, 2130, 2129, 1878, 1877, 1216, 1813,
	4216, 4217, 1692, 1691, 1690, 1689, 1339, 1216, 1688, 4286,
	4277, 1687, 4242, 1686, 1681, 3100, 1618, 1677, 1675, 1674,
	1608, 1618, 1618, 1618, 1607, 3284, 4196, 1606, 1487, 1486,
	1485, 4231, 1484, 1483, 1430, 1386, 1385, 1384, 4292, 3298,
	1383, 4256, 1382, 1381, 1618, 1380, 1618, 4221, 1378, 4294,
	4230, 1373, 1496, 4212, 4210, 1372, 1371, 4202, 4278, 3166,
	1370, 4281, 1369, 961, 8, 2153, 1296, 2234, 1112, 1098,
	2156, 1224, 4235, 4861, 4448, 4447, 1334, 1334, 4446, 2584,
	1496, 4298, 4248, 1216, 1216, 4220, 96, 4209, 1683, 1216,
	1216, 2159, 923, 4261, 1216, 1216, 4280, 1216, 90, 4244,
	4257, 2365, 1216, 4142, 1062, 4312, 5001, 4891, 4266, 1666,
	931, 4982, 4258, 1216, 3685, 3175, 2156, 2156, 284, 284,
	284, 2530, 737, 738, 1814, 753, 737, 753, 764, 1216,
	2532, 804, 1333, 3669, 4264, 824, 3585, 2951, 4945, 4354,
	831, 831, 831, 3458, 4823, 2156, 2156, 4310, 4282, 284,
	4279, 4287, 4313, 4625, 2791, 4311, 4295, 4288, 2020, 3539,
	4296, 92, 1200, 4331, 1246, 4543, 4542, 4432, 4129, 3812,
	968, 4539, 4538, 2144, 2146, 4332, 1164, 284, 2156, 1499,
	4344, 5027, 2147, 4314, 2245, 5192, 1206, 2259, 4340, 2254,
	1339, 2992, 2867, 1223, 1220, 2148, 2150, 1222, 1339, 1335,
	1221, 2149, 1496, 1496, 2040, 1496, 2153, 1219, 4325, 2143,
	4268, 3282, 1339, 4265, 3869, 1733, 1731, 1623, 1064, 2249,
	2711, 2775, 3447, 1618, 1618, 2013, 1180, 1202, 2147, 2147,
	2772, 1361, 1191, 3565, 3590, 3544, 1496, 3856, 4072, 2623,
	941, 4385, 3493, 2778, 1352, 2890, 2883, 2879, 3636, 3272,
	1894, 4639, 4319, 1991, 3283, 1890, 1464, 2147, 2147, 1184,
	2709, 1216, 2004, 3425, 2633, 3863, 3588, 2985, 4403, 4404,
	5007, 3989, 1339, 3356, 1339, 2435, 1313, 4421, 4422, 1312,
	4315, 1359, 4370, 1311, 4988, 4985, 2355, 1337, 4406, 4546,
	2147, 3807, 3808, 2237, 4455, 3032, 4455, 4388, 4390, 1420,
	2721, 4412, 3826, 1196, 4415, 1602, 4472, 4479, 2576, 1496,
	3922, 1420, 3550, 4247, 1420, 737, 737, 1694, 4694, 4488,
	4459, 1208, 4491, 284, 4381, 1976, 3202, 4377, 1216, 4387,
	4384, 1496, 4386, 3201, 4424, 1494, 4382, 4383, 4850, 4475,
	4476, 4393, 1449, 4397, 1447, 4394, 189, 1446, 1445, 5160,
	3168, 4427, 2368, 4138, 4137, 4136, 248, 3393, 4509, 1915,
	4511, 1907, 245, 247, 4401, 4429, 246, 3689, 4077, 3594,
	5083, 4162, 3798, 1618, 1618, 24, 838, 4414, 839, 4458,
	840, 4423, 3042, 2264, 1466, 1334, 4113, 834, 23, 22,
	21, 119, 43, 20, 161, 159, 136, 156, 4473, 155,
	4536, 1420, 128, 154, 153, 152, 4495, 151, 150, 4563,
	158, 149, 4474, 1496, 148, 1333, 1333, 4512, 1618, 143,
	147, 146, 4533, 145, 144, 142, 4503, 4478, 140, 141,
	135, 139, 4492, 4530, 138, 4531, 4580, 137, 134, 4489,
	4487, 133, 132, 4490, 1618, 1618, 1618, 1618, 1618, 1618,
	1618, 131, 130, 4569, 4523, 129, 127, 160, 2156, 126,
	125, 203, 124, 4529, 1496, 123, 122, 121, 120, 817,
	818, 1337, 62, 61, 116, 117, 1216, 1216, 1216, 1337,
	4522, 4564, 1335, 1335, 4581, 4521, 19, 41, 14, 66,
	67, 18, 13, 1337, 1496, 36, 95, 4541, 4537, 1216,
	108, 107, 1216, 1216, 106, 4555, 4598, 4553, 4575, 4549,
	4602, 4584, 1216, 37, 103, 2159, 35, 17, 16, 15,
	1216, 1216, 101, 100, 2628, 99, 34, 32, 4548, 4589,
	11, 4566, 9, 4582, 38, 2102, 12, 1496, 5, 1618,
	194, 193, 196, 192, 2002, 195, 94, 4596, 2007, 191,
	190, 4595, 93, 1337, 1420, 1337, 30, 4617, 10, 4604,
	4499, 186, 4771, 4612, 4254, 4605, 85, 4606, 188, 1334,
	2147, 187, 185, 184, 183, 86, 1496, 1334, 83, 182,
	89, 181, 84, 88, 1216, 87, 28, 6, 65, 7,
	4622, 1334, 4607, 3907, 111, 112, 39, 1216, 81, 2156,
	80, 79, 78, 27, 64, 26, 1216, 178, 227, 226,
	225, 2159, 4634, 224, 223, 222, 221, 220, 215, 219,
	217, 1216, 4628, 4551, 1216, 216, 4645, 4646, 218, 214,
	2153, 286, 239, 238, 237, 4658, 4565, 236, 230, 1216,
	229, 235, 1216, 234, 233, 232, 231, 228, 242, 1496,
	74, 1334, 4697, 1334, 213, 212, 211, 1420, 209, 4588,
	205, 4648, 208, 4649, 210, 4735, 207, 1618, 1618, 1618,
	2885, 206, 4666, 204, 4669, 4676, 241, 2292, 240, 75,
	4720, 176, 4667, 177, 4668, 73, 175, 174, 1339, 173,
	172, 171, 170, 169, 72, 180, 179, 4716, 25, 2,
	1, 4744, 0, 0, 0, 0, 4731, 0, 0, 0,
	4455, 2147, 0, 4754, 4770, 3809, 0, 0, 1496, 4758,
	0, 1618, 4719, 4714, 1333, 0, 2153, 0, 0, 4749,
	4750, 0, 0, 0, 0, 4718, 4765, 0, 0, 4791,
	0, 4708, 4709, 0, 0, 0, 0, 4728, 0, 0,
	0, 0, 0, 4778, 0, 0, 1216, 1216, 0, 4747,
	0, 4746, 0, 0, 4751, 4800, 0, 4802, 4756, 0,
	0, 4774, 4796, 1216, 2159, 0, 4727, 0, 4729, 0,
	4730, 0, 0, 0, 4769, 4736, 4734, 4792, 4794, 0,
	0, 1335, 4662, 4762, 4706, 1420, 0, 0, 1420, 0,
	1420, 1420, 0, 0, 0, 0, 4799, 0, 0, 0,
	4793, 1354, 0, 4788, 0, 4798, 2117, 0, 0, 1216,
	4584, 1216, 0, 1216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 1178, 0, 0, 0, 0, 4812,
	4813, 4811, 0, 2405, 0, 1375, 1216, 4843, 1339, 0,
	0, 0, 0, 0, 4804, 4455, 0, 284, 0, 284,
	284, 4845, 1404, 284, 1414, 0, 0, 0, 4815, 0,
	4455, 4821, 0, 0, 0, 1428, 4832, 0, 0, 4834,
	4842, 4835, 4836, 824, 0, 0, 824, 0, 0, 2153,
	4841, 0, 4838, 0, 0, 0, 0, 0, 0, 0,
	4872, 0, 0, 0, 1339, 1339, 4721, 0, 1333, 831,
	0, 0, 4894, 4865, 0, 0, 1333, 0, 1216, 4866,
	0, 0, 0, 0, 0, 1339, 4455, 4455, 1339, 0,
	1333, 284, 1618, 284, 284, 1404, 0, 284, 284, 0,
	2263, 0, 1618, 4896, 4881, 0, 1414, 4455, 0, 4883,
	4455, 0, 0, 4873, 0, 0, 4889, 1216, 1216, 0,
	284, 0, 1644, 0, 0, 0, 0, 1216, 0, 1337,
	0, 4907, 0, 0, 0, 1335, 0, 0, 1664, 0,
	4918, 0, 0, 1335, 4921, 1671, 4774, 4926, 4920, 0,
	1333, 0, 1333, 4941, 0, 4942, 0, 1335, 4934, 4935,
	4882, 0, 4939, 4938, 1696, 4940, 0, 1414, 0, 4909,
	4910, 284, 284, 4958, 1404, 0, 0, 1216, 1216, 0,
	4950, 1216, 4954, 2156, 0, 1618, 1420, 0, 0, 1420,
	4927, 0, 0, 4929, 0, 824, 4959, 284, 284, 4961,
	4949, 0, 0, 0, 0, 0, 4987, 4990, 4937, 1759,
	0, 5006, 4979, 0, 5003, 0, 5009, 1335, 5010, 1335,
	1767, 0, 4978, 4977, 0, 968, 0, 1334, 0, 0,
	0, 0, 0, 4969, 4970, 0, 0, 4996, 0, 0,
	0, 0, 5032, 0, 0, 0, 4997, 1216, 1216, 1216,
	0, 4992, 0, 5030, 0, 0, 0, 4879, 0, 0,
	4991, 0, 0, 0, 4995, 0, 0, 4998, 0, 5015,
	4999, 0, 0, 0, 1337, 0, 5020, 5023, 0, 2156,
	2410, 0, 0, 0, 1216, 0, 4893, 5031, 5064, 1337,
	0, 0, 0, 0, 5069, 2147, 5047, 5044, 5045, 0,
	5046, 0, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 4925, 0, 5092, 2292, 0,
	0, 5091, 5065, 5090, 0, 5066, 0, 0, 5067, 0,
	284, 0, 5098, 0, 0, 0, 0, 5100, 0, 5080,
	0, 1216, 5082, 0, 0, 1337, 1337, 5104, 0, 1420,
	0, 5096, 5113, 5097, 4754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 5110, 5105, 1337,
	5131, 5106, 1334, 0, 0, 5119, 5120, 0, 0, 0,
	0, 0, 5127, 5125, 5122, 0, 0, 1334, 0, 0,
	0, 2147, 0, 3383, 5123, 5146, 5133, 5135, 0, 0,
	1339, 0, 1339, 4987, 5147, 5156, 4990, 5142, 5137, 0,
	5009, 5154, 0, 5134, 5153, 5152, 5145, 0, 0, 0,
	0, 0, 4455, 0, 4455, 5079, 0, 0, 5081, 0,
	5121, 5162, 5144, 0, 0, 280, 5148, 0, 0, 0,
	0, 1420, 2156, 1334, 1334, 0, 0, 0, 5177, 5178,
	5161, 5016, 5184, 0, 5185, 0, 0, 5018, 0, 5188,
	0, 0, 0, 0, 1334, 0, 0, 1334, 0, 5187,
	0, 1216, 1216, 5196, 2885, 2885, 0, 5194, 0, 0,
	1216, 1216, 5199, 0, 0, 0, 3284, 0, 0, 5210,
	5183, 0, 5204, 0, 2715, 0, 5215, 0, 5212, 5214,
	5190, 5218, 5220, 5219, 5216, 5155, 5208, 5157, 0, 0,
	2002, 0, 0, 5217, 0, 0, 3284, 5224, 1420, 5225,
	5229, 5227, 5181, 0, 5232, 5230, 5228, 5226, 5211, 0,
	0, 5235, 5213, 5223, 0, 737, 0, 0, 1216, 0,
	0, 0, 5239, 0, 5241, 5232, 5243, 3496, 3497, 0,
	3514, 3515, 3516, 0, 2147, 0, 284, 0, 284, 0,
	0, 2647, 284, 5205, 5206, 1623, 1333, 0, 0, 2282,
	4336, 5236, 1623, 0, 2283, 1644, 1404, 2122, 284, 5238,
	284, 2128, 2282, 0, 0, 0, 0, 2283, 284, 0,
	753, 0, 1924, 1925, 0, 284, 0, 0, 1968, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5207, 2197, 0, 1178, 1178, 1178, 1955, 0, 0, 0,
	0, 5240, 0, 284, 1927, 0, 3511, 0, 0, 0,
	284, 0, 0, 1335, 1974, 0, 0, 3496, 3497, 0,
	3514, 3515, 3516, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 1580, 0, 2789, 0, 2885, 2885, 2885, 2885,
	1926, 0, 0, 824, 0, 0, 0, 0, 0, 0,
	0, 1946, 0, 3422, 3423, 0, 0, 0, 0, 0,
	1943, 1337, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 2284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 831, 0, 831, 2284, 0, 0, 3895, 0, 2288,
	0, 1333, 0, 831, 831, 0, 3511, 0, 0, 0,
	3893, 0, 2288, 3502, 0, 0, 1333, 0, 0, 0,
	3886, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 1925, 0, 0, 0, 0, 0,
	0, 2961, 0, 0, 0, 0, 0, 0, 1949, 1950,
	1951, 1952, 0, 0, 0, 0, 0, 1955, 1932, 0,
	0, 0, 0, 0, 0, 1927, 0, 0, 1335, 1334,
	0, 1334, 1333, 1333, 0, 0, 2285, 2290, 0, 0,
	0, 3518, 0, 1335, 0, 0, 0, 0, 0, 2285,
	2290, 0, 1980, 1333, 0, 0, 1333, 0, 0, 1965,
	0, 1926, 1975, 3502, 0, 3897, 0, 0, 0, 1954,
	1956, 0, 1946, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 3888, 3512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 1942, 3887, 0, 1335,
	1335, 0, 0, 0, 0, 3520, 3521, 3522, 3523, 0,
	0, 0, 0, 1963, 284, 0, 0, 0, 284, 0,
	1335, 2286, 0, 1335, 0, 1611, 0, 0, 1947, 0,
	0, 3518, 0, 0, 2286, 0, 0, 3948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3041, 0, 0,
	0, 0, 0, 3896, 0, 0, 0, 0, 0, 1949,
	1950, 1951, 1952, 1977, 0, 1668, 0, 0, 0, 1932,
	3699, 0, 0, 3512, 2293, 284, 0, 0, 0, 284,
	0, 0, 0, 2280, 0, 284, 0, 2293, 0, 0,
	0, 284, 0, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 1977, 284,
	0, 0, 0, 737, 0, 284, 0, 0, 1747, 0,
	1954, 1956, 0, 0, 0, 0, 0, 824, 0, 0,
	3697, 968, 0, 0, 1762, 2291, 0, 0, 0, 0,
	0, 0, 0, 2278, 3513, 0, 1941, 1942, 2291, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 1404, 284, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 3698, 0, 0, 0, 824, 1947,
	0, 0, 0, 0, 0, 284, 0, 2279, 0, 1948,
	0, 0, 0, 2529, 1791, 0, 0, 0, 284, 284,
	0, 284, 0, 284, 0, 284, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 3894, 3889,
	3890, 3891, 3892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2566, 0, 3513, 2567, 0, 2568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3895, 0,
	0, 1979, 284, 284, 284, 284, 0, 0, 3898, 1977,
	0, 3893, 0, 0, 0, 0, 2287, 0, 1333, 0,
	1333, 3886, 0, 0, 0, 0, 0, 0, 1623, 2287,
	0, 804, 0, 1580, 0, 824, 0, 0, 0, 0,
	0, 0, 0, 3508, 3509, 3510, 0, 0, 0, 0,
	3507, 3505, 3506, 3498, 3499, 3500, 3501, 3503, 3504, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 2885, 2885,
	0, 0, 0, 0, 0, 1335, 0, 1335, 0, 0,
	1948, 1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929,
	1930, 1931, 1933, 1934, 0, 0, 3897, 0, 0, 1623,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3888, 0, 0, 0, 1409, 2723, 0,
	0, 0, 0, 3508, 3509, 3510, 0, 0, 3887, 0,
	3507, 3505, 3506, 3498, 3499, 3500, 3501, 3503, 3504, 1178,
	0, 0, 1979, 0, 0, 0, 0, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2885, 2885,
	2885, 2885, 2885, 2885, 2885, 2885, 2885, 2885, 2885, 2885,
	2885, 2885, 2885, 2885, 2885, 2885, 2885, 2885, 0, 2885,
	0, 0, 0, 0, 3896, 0, 0, 0, 1589, 0,
	737, 1603, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 0, 0, 0, 0,
	0, 284, 0, 737, 0, 3884, 0, 0, 0, 0,
	0, 1924, 1925, 1944, 1940, 284, 1937, 1935, 1936, 1928,
	1929, 1930, 1931, 1933, 1934, 0, 0, 3496, 3497, 0,
	3514, 3515, 3516, 0, 0, 1955, 284, 1414, 0, 0,
	0, 0, 0, 1927, 0, 1409, 1409, 3945, 3946, 0,
	3954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1623, 1623, 1623, 1623, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 1926,
	0, 0, 0, 0, 0, 284, 1414, 0, 0, 753,
	1946, 753, 0, 0, 0, 3007, 0, 0, 0, 1943,
	0, 284, 0, 0, 284, 0, 3511, 1580, 284, 0,
	284, 0, 0, 0, 0, 1404, 0, 284, 284, 0,
	1414, 1414, 3023, 0, 0, 0, 0, 284, 0, 3894,
	3889, 3890, 3891, 3892, 0, 0, 0, 4009, 4010, 4011,
	4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021,
	4022, 4023, 4024, 4025, 4026, 4027, 4028, 0, 4032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3898,
	0, 831, 831, 0, 0, 831, 831, 1949, 1950, 1951,
	1952, 0, 0, 0, 3066, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 3502, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 3551,
	0, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 824, 0, 0, 0, 1954, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3580, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 1941, 1942, 0, 3593, 0, 0,
	0, 3518, 284, 284, 3163, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3614, 0, 3496, 3497, 1947, 3514, 3515,
	3516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 3223, 0, 3512, 0, 0, 0, 0, 3953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 284, 0, 284, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3066, 0, 737, 0, 3511, 0, 0, 1977, 0, 0,
	0, 3163, 968, 3066, 0, 0, 0, 0, 1580, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2477, 0, 0, 0, 284, 1404, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 1414, 284, 2491, 2493,
	1404, 0, 1404, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 2497, 0, 1603, 0, 0, 0, 1948, 0,
	0, 0, 0, 0, 2505, 0, 2508, 2509, 2510, 0,
	0, 3502, 0, 0, 3513, 0, 0, 0, 0, 0,
	0, 1580, 0, 1924, 1925, 0, 0, 0, 0, 0,
	0, 284, 284, 284, 284, 1404, 0, 0, 1404, 0,
	284, 0, 0, 0, 1603, 284, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 3593,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 3518,
	0, 0, 1980, 0, 284, 0, 0, 0, 0, 0,
	0, 1926, 1580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 1580, 0,
	0, 3512, 0, 1623, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 3508, 3509, 3510, 0, 3943, 0, 0,
	3507, 3505, 3506, 3498, 3499, 3500, 3501, 3503, 3504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	1950, 1951, 1952, 0, 0, 0, 0, 0, 0, 1932,
	0, 1977, 0, 0, 0, 3923, 0, 0, 1494, 0,
	1644, 0, 0, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
	1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
	1623, 1623, 1623, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 1942, 0, 0,
	0, 0, 3513, 0, 0, 3966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3982, 0, 0, 0, 0, 956, 0, 1947,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 76, 0, 959, 958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2447,
	0, 2885, 0, 77, 0, 284, 0, 0, 0, 0,
	0, 1580, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 284, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 737, 0, 0, 737, 0, 0, 737, 737, 1977,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2885, 0, 0, 0, 0, 0, 0,
	0, 3508, 3509, 3510, 0, 0, 0, 4075, 3507, 3505,
	3506, 3498, 3499, 3500, 3501, 3503, 3504, 1953, 0, 0,
	0, 0, 962, 0, 284, 0, 0, 0, 284, 284,
	0, 0, 0, 0, 0, 50, 0, 113, 0, 0,
	1948, 0, 0, 97, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3066, 3066, 284, 0, 3656, 2122, 0, 0,
	0, 1924, 1925, 3066, 0, 2128, 0, 0, 0, 0,
	0, 0, 0, 0, 3066, 2128, 0, 3066, 2128, 2577,
	0, 2128, 0, 0, 3656, 1955, 0, 0, 0, 0,
	0, 0, 1979, 1927, 0, 98, 284, 284, 2122, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4631, 0, 0, 0, 0, 0, 0, 2122, 0, 284,
	1980, 3730, 0, 3730, 0, 0, 0, 0, 1404, 1926,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 3167,
	3066, 0, 3066, 0, 3760, 3066, 2122, 0, 0, 3066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2885, 2122, 0, 0, 824, 0, 0, 0,
	0, 0, 4679, 1944, 1940, 0, 1937, 1935, 1936, 1928,
	1929, 1930, 1931, 1933, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 0, 0,
	2885, 0, 0, 0, 0, 0, 0, 1949, 1950, 1951,
	1952, 0, 0, 284, 0, 3803, 0, 1932, 0, 3805,
	3066, 0, 0, 284, 0, 2885, 0, 284, 102, 0,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 0, 3312,
	3267, 0, 0, 1404, 0, 284, 0, 0, 3066, 0,
	737, 3319, 0, 0, 0, 0, 0, 3066, 1954, 1956,
	1924, 1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 0,
	0, 0, 0, 0, 0, 0, 197, 105, 1960, 0,
	109, 0, 0, 1961, 1955, 0, 0, 0, 0, 0,
	0, 0, 1927, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 3913, 0, 249, 0, 0,
	1409, 0, 0, 0, 0, 963, 0, 1947, 0, 1980,
	157, 0, 0, 0, 0, 3919, 0, 0, 1926, 1644,
	0, 1960, 0, 1404, 284, 0, 284, 1960, 0, 1946,
	0, 4820, 1404, 1960, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 77, 0, 4849,
	0, 1409, 1409, 0, 0, 0, 0, 1977, 0, 0,
	0, 202, 0, 0, 82, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 4871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 1949, 1950, 1951, 1952,
	0, 3987, 0, 244, 0, 1960, 1932, 198, 0, 4392,
	1960, 0, 0, 0, 0, 91, 1580, 0, 0, 0,
	0, 0, 0, 0, 1960, 1953, 0, 0, 0, 1960,
	0, 0, 957, 0, 0, 0, 0, 0, 0, 0,
	4410, 0, 0, 0, 0, 0, 0, 1965, 1948, 1580,
	1975, 0, 0, 0, 0, 0, 962, 1954, 1956, 0,
	0, 0, 0, 0, 1580, 0, 0, 1589, 0, 0,
	0, 113, 0, 0, 1971, 0, 1972, 97, 110, 0,
	0, 0, 0, 1941, 1942, 0, 0, 0, 0, 0,
	1580, 0, 0, 0, 1960, 0, 0, 0, 284, 284,
	1960, 1963, 0, 0, 1603, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 737, 737, 1924, 1925, 0, 0, 0,
	1178, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 1927, 0, 0,
	0, 0, 0, 0, 1973, 284, 0, 0, 0, 3496,
	3497, 0, 3514, 3515, 3516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 1962, 1623, 0, 0, 0,
	0, 0, 0, 1926, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 1960, 1960, 1960,
	1960, 1960, 1960, 1960, 0, 0, 1580, 824, 3511, 0,
	0, 0, 0, 0, 1953, 0, 1960, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 1960,
	1603, 0, 2982, 4176, 0, 0, 4178, 1948, 0, 0,
	0, 1409, 3730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 284, 4623, 0,
	0, 1932, 0, 0, 0, 1966, 0, 0, 0, 0,
	3163, 0, 0, 0, 0, 2889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 1580, 284, 0, 1960,
	0, 753, 753, 1414, 0, 1960, 1603, 0, 1603, 1979,
	0, 4623, 0, 0, 0, 3502, 284, 0, 0, 0,
	197, 105, 1954, 1956, 109, 0, 0, 284, 3267, 0,
	0, 3267, 2128, 0, 0, 0, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	2647, 249, 284, 0, 0, 0, 0, 284, 0, 963,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3066, 284, 0, 0,
	0, 1947, 0, 0, 0, 1964, 3163, 0, 0, 968,
	3066, 0, 0, 0, 0, 0, 1938, 1939, 1945, 1967,
	1944, 1940, 251, 1937, 1935, 1936, 1928, 1929, 1930, 1931,
	1933, 1934, 0, 0, 0, 3428, 0, 1623, 0, 0,
	0, 284, 0, 2647, 0, 3512, 0, 0, 0, 162,
	0, 0, 1580, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 1623, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 3777, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 4355, 0,
	0, 0, 0, 0, 0, 1977, 201, 0, 0, 0,
	0, 0, 1580, 0, 0, 0, 3802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3830, 1580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 0, 0, 0, 1644, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3876,
	0, 0, 0, 284, 0, 0, 3513, 0, 0, 0,
	0, 3900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 284, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 1924, 1925, 3066, 3066,
	0, 3656, 0, 0, 3730, 3066, 0, 0, 0, 0,
	0, 0, 0, 4457, 0, 4457, 1644, 0, 0, 0,
	1955, 0, 0, 0, 0, 0, 0, 3066, 1927, 2128,
	0, 0, 0, 3656, 1580, 1644, 1644, 284, 2122, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 0, 284, 2122, 1980, 284, 0, 0, 3730,
	0, 0, 0, 0, 1926, 0, 0, 0, 1937, 1935,
	1936, 1928, 1929, 1930, 1931, 1933, 1934, 0, 0, 3066,
	0, 3066, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 1603, 0, 3508, 3509, 3510, 0, 0,
	0, 0, 3507, 3505, 3506, 3498, 3499, 3500, 3501, 3503,
	3504, 3066, 3066, 0, 0, 0, 0, 3267, 3267, 0,
	0, 0, 0, 0, 3656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 1924, 1925, 1960, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 2447, 0, 0, 0, 1927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 1960, 0, 1954, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 1960, 0, 0, 0, 0,
	0, 0, 0, 1926, 1960, 1960, 1960, 1960, 1960, 1960,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
	0, 0, 1947, 0, 0, 1960, 0, 1960, 1960, 1960,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 2889,
	2889, 0, 0, 0, 1924, 1925, 0, 0, 0, 0,
	0, 0, 3066, 2128, 1960, 2128, 0, 0, 4671, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 1955, 0,
	0, 0, 0, 0, 0, 0, 1927, 4695, 0, 4695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 1932, 0, 1580, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 1980, 824, 1960, 0, 0, 0, 0,
	0, 0, 1926, 0, 0, 3730, 1644, 0, 1404, 0,
	0, 1580, 0, 1946, 0, 0, 0, 0, 0, 0,
	0, 0, 1943, 0, 0, 1960, 0, 2122, 1960, 284,
	0, 1960, 1954, 1956, 1960, 0, 0, 0, 0, 0,
	1960, 1960, 1960, 1960, 1960, 1960, 1960, 0, 0, 0,
	0, 0, 0, 4203, 4204, 0, 4671, 0, 0, 4457,
	4206, 0, 1644, 4207, 0, 0, 3066, 0, 0, 0,
	0, 0, 0, 1948, 0, 0, 0, 0, 3942, 0,
	1603, 0, 0, 0, 0, 0, 4785, 0, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 0, 1644, 0,
	1949, 1950, 1951, 1952, 0, 0, 1960, 0, 0, 3517,
	1932, 2889, 2889, 2889, 2889, 0, 0, 1960, 0, 1960,
	0, 0, 0, 0, 1960, 284, 284, 0, 0, 0,
	0, 0, 0, 1580, 1580, 1979, 1580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4293,
	0, 1954, 1956, 0, 2491, 4299, 4300, 1580, 0, 0,
	0, 1977, 0, 0, 0, 3730, 4840, 0, 0, 0,
	0, 0, 0, 0, 4671, 0, 0, 1941, 1942, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4457,
	1947, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934, 0, 0,
	1580, 0, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 753, 0, 0,
	0, 0, 1580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4457, 4457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4457, 0, 284, 4457,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 2128,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 1644,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 1924,
	1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 0, 0, 1414,
	0, 0, 1961, 1955, 0, 0, 0, 0, 1953, 0,
	0, 1927, 0, 4967, 0, 0, 4399, 4400, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 4695,
	0, 1948, 284, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 1580, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3066, 1946, 0,
	1936, 1928, 1929, 1930, 1931, 1933, 1934, 1943, 0, 0,
	0, 0, 0, 0, 1163, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 1979, 0, 0, 0, 0, 0, 0,
	0, 1960, 1960, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3987, 0, 0, 0, 1580, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 1949, 1950, 1951, 1952, 0,
	0, 0, 0, 0, 0, 1932, 0, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 2491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1940, 0, 1937, 1935, 1936,
	1928, 1929, 1930, 1931, 1933, 1934, 1965, 0, 0, 1975,
	0, 2447, 0, 0, 0, 1178, 1954, 1956, 0, 0,
	0, 4671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 1971, 0, 1972, 0, 858, 0, 0,
	1580, 0, 1941, 1942, 0, 0, 0, 4597, 0, 4599,
	4600, 4601, 0, 4603, 0, 0, 0, 0, 0, 0,
	1963, 3066, 0, 869, 0, 0, 0, 0, 0, 0,
	0, 4457, 0, 4457, 0, 1947, 1644, 0, 0, 0,
	0, 0, 0, 871, 0, 0, 0, 0, 0, 0,
	1960, 1960, 0, 2889, 2889, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 870, 3517, 3517, 1580,
	0, 1960, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 3066, 0, 0,
	0, 0, 4651, 0, 1962, 0, 0, 1960, 0, 0,
	1924, 1925, 0, 0, 3163, 1977, 0, 0, 0, 863,
	0, 0, 0, 0, 0, 0, 879, 3066, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 0, 0,
	868, 3163, 1927, 2889, 2889, 2889, 2889, 2889, 2889, 2889,
	2889, 2889, 2889, 2889, 2889, 2889, 2889, 2889, 2889, 2889,
	2889, 2889, 2889, 0, 2889, 3517, 3517, 3517, 3517, 1980,
	0, 0, 0, 1953, 0, 0, 0, 0, 1926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1946,
	0, 0, 867, 0, 0, 0, 1948, 0, 1943, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	4748, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3411, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 1950, 1951, 1952,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 1964, 0, 1409, 1954, 1956, 0,
	0, 1924, 1925, 0, 0, 1938, 1939, 1945, 1967, 1944,
	1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933,
	1934, 0, 0, 1941, 1942, 1955, 3471, 0, 0, 1178,
	3472, 0, 0, 1927, 0, 860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 1960,
	0, 0, 1212, 0, 0, 0, 1947, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 864, 0, 1926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 1423, 0, 0, 283,
	283, 283, 0, 0, 0, 0, 798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3193, 874, 1163, 1163, 1163, 0, 0, 862, 0,
	892, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 3404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3183, 3181, 0, 892, 0,
	0, 0, 3185, 3187, 3177, 2491, 1593, 1949, 1950, 1951,
	1952, 0, 1609, 0, 0, 0, 0, 1932, 859, 0,
	0, 0, 0, 0, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 1646, 0, 1652, 3203, 1658, 866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 800, 0, 0, 0, 0, 0, 1954, 1956,
	0, 0, 0, 861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 1960, 0, 0, 1960,
	3517, 3517, 1960, 0, 1941, 1942, 1960, 0, 876, 877,
	0, 873, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 1960, 1755, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 1769, 0, 1774, 0, 0, 0, 0, 0, 1960,
	1960, 1960, 1960, 1960, 1336, 0, 0, 0, 0, 1960,
	0, 1960, 0, 0, 3517, 3517, 3517, 3517, 3517, 3517,
	3517, 3517, 3517, 3517, 3517, 3517, 3517, 3517, 3517, 3517,
	3517, 3517, 3517, 3517, 0, 0, 0, 3517, 0, 0,
	1960, 1960, 0, 0, 0, 0, 0, 0, 0, 3179,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	3195, 1960, 1839, 0, 0, 1845, 0, 1977, 0, 0,
	1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931,
	1933, 1934, 0, 3194, 3184, 3182, 3186, 3188, 3178, 3180,
	3196, 3198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3190, 3192, 3200, 0, 0, 0, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 3204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 1924, 1925, 0, 1957, 1958, 1959, 1968,
	1969, 1970, 0, 0, 0, 0, 1960, 0, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1961, 1955, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 0, 0, 1960,
	1960, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 2014, 0, 0,
	1979, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 1926, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 1946, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 76, 0, 0, 3197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 2074, 2074, 2074, 0, 0, 0, 1949,
	1950, 1951, 1952, 0, 0, 0, 3205, 0, 91, 1932,
	0, 0, 0, 0, 0, 3189, 3191, 3199, 1960, 1960,
	0, 0, 0, 1960, 1960, 0, 0, 1960, 1960, 0,
	0, 0, 1960, 0, 0, 0, 1960, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 962,
	1965, 0, 0, 1975, 0, 0, 2889, 0, 0, 0,
	1954, 1956, 50, 0, 113, 0, 0, 0, 0, 0,
	97, 110, 0, 0, 0, 0, 0, 1971, 0, 1972,
	0, 0, 0, 0, 0, 0, 1941, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	0, 0, 0, 0, 0, 0, 0, 0, 2889, 0,
	0, 0, 98, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	283, 283, 0, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 283, 0, 283, 283, 0, 0, 283, 283,
	0, 0, 0, 1960, 1960, 1960, 0, 0, 1966, 0,
	0, 0, 0, 0, 1960, 1960, 3517, 2889, 0, 0,
	0, 892, 0, 1960, 0, 0, 1960, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	76, 0, 1979, 197, 105, 0, 0, 109, 0, 0,
	76, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 3517, 2889, 0, 0, 77, 0,
	0, 0, 283, 283, 249, 82, 0, 0, 0, 0,
	0, 1960, 963, 0, 0, 82, 0, 157, 0, 1960,
	2889, 0, 0, 0, 0, 0, 0, 1960, 283, 283,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 1960,
	0, 0, 0, 0, 0, 0, 91, 0, 1964, 0,
	0, 0, 0, 0, 0, 251, 91, 0, 0, 1938,
	1939, 1945, 1967, 1944, 1940, 0, 1937, 1935, 1936, 1928,
	1929, 1930, 1931, 1933, 1934, 0, 0, 0, 0, 0,
	2766, 0, 162, 0, 2767, 0, 0, 962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 962, 202, 0,
	50, 0, 113, 0, 0, 0, 250, 0, 97, 110,
	0, 0, 113, 0, 0, 0, 0, 0, 97, 110,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 198, 3517, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2553, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	0, 283, 0, 1960, 3517, 0, 0, 1960, 0, 0,
	98, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 0, 0, 3517, 0, 2582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2622, 0, 2626, 0, 0, 0,
	0, 0, 0, 2640, 0, 0, 0, 1960, 0, 0,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 0, 2690, 0, 2692,
	2693, 2694, 2695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 2770, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 2800, 2803, 2806,
	2809, 0, 0, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2881, 0, 2892, 2894, 2899, 0, 0, 0, 0,
	0, 197, 105, 1960, 0, 109, 0, 2096, 0, 1336,
	0, 197, 105, 283, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	2096, 283, 249, 0, 0, 0, 0, 0, 0, 892,
	963, 0, 249, 0, 0, 157, 892, 0, 0, 0,
	963, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 1925, 0, 1957, 1958, 1959,
	1968, 1969, 1970, 0, 283, 0, 0, 0, 0, 0,
	0, 283, 0, 251, 0, 0, 0, 1961, 1955, 0,
	0, 0, 0, 251, 0, 0, 1927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 1980, 0, 0, 202, 0, 0, 0,
	0, 0, 1926, 0, 250, 1960, 202, 0, 0, 0,
	0, 0, 0, 1946, 250, 0, 0, 0, 0, 243,
	0, 0, 1943, 0, 0, 0, 0, 0, 244, 243,
	0, 0, 198, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 1950, 1951, 1952, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1201, 115, 2860, 2861, 2862, 2863, 2856, 2857, 2858,
	2859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1965, 0, 0, 1975, 0, 0, 0, 0, 0,
	0, 1954, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	1972, 0, 0, 0, 0, 283, 0, 1941, 1942, 892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 2836, 2837, 2838, 2839,
	1329, 0, 0, 0, 0, 3226, 3227, 0, 3229, 115,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 2848,
	2849, 2850, 2851, 2844, 2845, 2846, 2847, 2852, 2853, 2854,
	2855, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 283, 279, 279, 733,
	0, 0, 283, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	283, 0, 0, 0, 0, 0, 283, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1340, 1137, 2832, 2833, 2834, 2835, 2840, 2841, 2842, 2843,
	0, 1340, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 3347, 1953, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 0, 892,
	283, 0, 283, 1323, 283, 0, 283, 0, 283, 0,
	0, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1340, 0, 1966,
	0, 0, 0, 0, 1340, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 283, 283, 283, 0, 0, 0,
	1340, 1981, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 1924, 1925, 1979, 1957, 1958, 1959, 1968, 1969, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 3405, 3406, 0,
	1340, 0, 0, 3412, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 1926,
	0, 0, 3426, 3427, 0, 0, 0, 0, 2770, 1964,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	1938, 1939, 1945, 1967, 1944, 1940, 0, 1937, 1935, 1936,
	1928, 1929, 1930, 1931, 1933, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4361, 0, 0, 0, 0,
	0, 0, 0, 3436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 1950, 1951,
	1952, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 0, 1965, 0,
	0, 1975, 0, 0, 0, 0, 283, 0, 1954, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 1941, 1942, 0, 2899, 2899, 2899,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 3555, 0, 0, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 283, 0, 0, 0, 283,
	0, 283, 0, 0, 0, 0, 0, 0, 283, 283,
	0, 0, 0, 0, 1340, 0, 1340, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 2160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 3688, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 1340, 1966, 115, 0, 0,
	0, 0, 0, 283, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3743, 3744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 892, 0, 1390, 0, 1390, 1390,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 115, 1964, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 1939, 1945,
	1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 283, 1601, 283, 0, 1158,
	115, 115, 0, 0, 1340, 1340, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 1340, 115, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 283, 283, 283, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 1749, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 1340, 0, 1340, 283, 1340, 0, 0, 2640,
	0, 0, 0, 0, 0, 3940, 3941, 0, 0, 3944,
	0, 0, 912, 3947, 1340, 1340, 0, 0, 0, 0,
	0, 0, 3951, 0, 0, 0, 0, 0, 1340, 0,
	0, 3958, 0, 914, 0, 0, 3555, 0, 915, 0,
	1340, 0, 1340, 1340, 1340, 0, 0, 0, 0, 0,
	0, 3971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3994, 3995, 0, 3996, 3997, 3998, 0, 0, 916,
	0, 933, 1137, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 4004, 0, 0, 0, 4006, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 917, 0, 0,
	0, 0, 918, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 2006, 0, 0, 0, 4035,
	4036, 0, 0, 0, 942, 0, 0, 0, 0, 0,
	0, 919, 0, 0, 0, 0, 0, 4047, 0, 0,
	0, 0, 0, 0, 0, 940, 0, 0, 0, 0,
	0, 0, 4056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2160, 2160, 1340, 0, 0, 0,
	913, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 0, 799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4112, 2094, 0, 2097, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1336, 168, 0, 1340,
	0, 0, 4130, 0, 0, 0, 76, 0, 47, 46,
	0, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 163, 943,
	0, 0, 0, 0, 0, 0, 4161, 0, 0, 938,
	0, 82, 2096, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 283, 0, 0, 0, 0, 49,
	0, 165, 0, 1340, 0, 0, 0, 0, 0, 0,
	1340, 2112, 0, 4184, 4185, 0, 0, 0, 0, 1340,
	48, 0, 91, 0, 0, 0, 0, 2123, 0, 1601,
	0, 0, 0, 0, 0, 283, 1340, 0, 0, 283,
	283, 0, 0, 0, 0, 0, 922, 0, 0, 51,
	69, 0, 0, 0, 0, 0, 0, 924, 52, 0,
	0, 0, 0, 58, 0, 0, 0, 0, 166, 0,
	0, 0, 1390, 0, 0, 283, 50, 0, 113, 1601,
	0, 0, 0, 0, 97, 110, 0, 0, 0, 925,
	0, 0, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 283, 934,
	0, 283, 0, 0, 0, 0, 0, 53, 2096, 2074,
	0, 798, 0, 0, 0, 0, 0, 0, 4289, 0,
	283, 0, 0, 0, 911, 0, 98, 935, 0, 0,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1340, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 0, 0, 0, 928, 947, 0, 946, 0,
	0, 0, 929, 0, 4333, 4334, 0, 0, 0, 0,
	4338, 4339, 0, 0, 0, 4342, 4343, 930, 0, 0,
	784, 2160, 939, 4347, 0, 0, 283, 784, 948, 0,
	945, 0, 0, 0, 4351, 0, 0, 800, 0, 0,
	0, 767, 0, 0, 892, 0, 768, 0, 767, 0,
	4356, 0, 0, 768, 283, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 1336, 769, 0, 102,
	0, 0, 0, 0, 769, 0, 0, 0, 770, 0,
	0, 0, 0, 0, 0, 770, 0, 54, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 0, 57, 1158, 0, 1158, 771, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 790, 0, 0, 0, 59, 197, 105, 790,
	0, 109, 0, 0, 0, 55, 0, 0, 0, 167,
	0, 0, 0, 772, 2433, 0, 0, 56, 2440, 0,
	772, 0, 0, 0, 0, 283, 0, 283, 249, 0,
	2453, 0, 1163, 0, 1340, 0, 63, 0, 773, 0,
	0, 157, 0, 0, 0, 773, 2465, 1340, 2465, 1340,
	0, 0, 0, 0, 2472, 1340, 0, 164, 0, 0,
	0, 774, 0, 0, 283, 775, 0, 1340, 774, 115,
	0, 0, 775, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 799, 0, 0, 0, 0, 0, 0, 799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4500,
	2440, 0, 0, 2501, 0, 0, 162, 0, 789, 0,
	0, 0, 0, 0, 0, 789, 0, 0, 0, 0,
	0, 0, 202, 0, 2521, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 2537, 0,
	2539, 0, 2541, 0, 2543, 243, 2544, 0, 1137, 0,
	0, 1137, 1137, 0, 244, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 786, 0, 0,
	0, 0, 0, 0, 786, 0, 0, 0, 0, 0,
	0, 0, 1225, 201, 0, 0, 3, 0, 0, 0,
	0, 2573, 2574, 2575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1336,
	1336, 0, 0, 0, 0, 0, 0, 1158, 0, 285,
	285, 285, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 2000, 0, 796, 0, 777, 0, 4618, 4619, 4620,
	0, 0, 777, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2640, 0, 0, 4629, 4630, 797, 0, 778, 0, 0,
	0, 0, 797, 0, 778, 0, 892, 0, 285, 0,
	0, 4638, 4641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 0, 0, 0, 798,
	0, 0, 0, 0, 0, 0, 798, 779, 0, 0,
	0, 2097, 794, 795, 779, 792, 0, 0, 0, 794,
	795, 787, 792, 0, 780, 0, 0, 0, 787, 0,
	0, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4696, 0,
	0, 0, 115, 0, 0, 0, 0, 4704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 781,
	0, 788, 4712, 0, 0, 1163, 781, 0, 788, 0,
	782, 0, 0, 0, 0, 0, 0, 782, 0, 0,
	4722, 0, 0, 4724, 0, 783, 0, 0, 283, 0,
	791, 0, 783, 0, 0, 0, 0, 791, 0, 0,
	0, 0, 0, 0, 2958, 800, 0, 0, 0, 0,
	0, 0, 800, 0, 0, 0, 785, 0, 283, 0,
	0, 0, 0, 785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 1340, 1340, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 1340,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 283, 0, 0, 0, 1340, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	3009, 0, 1340, 1390, 0, 0, 0, 1390, 1336, 1390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2160, 0, 2453, 0, 1340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4848, 0, 0, 0, 4852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 115, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4922,
	0, 2440, 2440, 0, 0, 0, 115, 0, 0, 115,
	0, 0, 0, 0, 1340, 115, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 0, 0, 0, 0, 0, 2640,
	0, 0, 0, 0, 2096, 0, 0, 0, 4641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2440, 0, 0, 0, 1340, 0, 0, 283, 0, 2453,
	0, 0, 0, 0, 0, 0, 0, 0, 1340, 0,
	1340, 0, 115, 0, 1340, 0, 0, 0, 0, 1163,
	0, 0, 1340, 0, 2096, 0, 2096, 0, 0, 0,
	0, 0, 0, 0, 1340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 3317, 0, 0, 0, 0, 0,
	0, 0, 0, 1340, 283, 0, 0, 283, 0, 0,
	0, 0, 0, 3328, 0, 3331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 0, 5043, 5043,
	5043, 0, 0, 283, 0, 0, 0, 1340, 0, 1340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3365, 1601, 3367, 1601, 0, 0, 0, 0, 0, 3373,
	1340, 2708, 0, 1340, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5043, 0, 0, 1390, 0, 0, 0, 0,
	0, 0, 0, 3402, 0, 0, 0, 0, 285, 0,
	285, 285, 0, 0, 285, 0, 0, 0, 0, 0,
	0, 2160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2160, 2160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 1500, 285, 285, 0, 0, 285, 285,
	0, 0, 0, 0, 1500, 0, 2160, 2160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5043, 5200, 0, 0, 0, 0, 0, 2160,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 289, 0, 0, 0, 0, 1340, 1340, 0, 0,
	0, 0, 285, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 1323, 0, 1500, 285, 285,
	0, 0, 1340, 0, 0, 0, 0, 0, 0, 0,
	0, 1323, 0, 1500, 0, 0, 1217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2096, 0, 0, 0, 0, 0, 0, 884, 0, 0,
	0, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 283, 0, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 115,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 1340,
	1340, 0, 1340, 1390, 0, 0, 1340, 1601, 1601, 1340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2160,
	2096, 115, 115, 3652, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 3707, 3709, 0, 0, 2453,
	0, 0, 0, 0, 0, 1340, 2096, 2096, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 0, 0, 0,
	1340, 1340, 1340, 0, 0, 0, 0, 2096, 0, 283,
	2096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1340, 0, 1340, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 0, 0, 0, 0, 1323, 0, 0, 1158, 0,
	2160, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 115, 1500, 0, 0, 0, 0, 285,
	285, 285, 0, 283, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3827, 0, 0, 0, 3831, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 0, 0, 0, 0, 0, 0, 1340, 0, 0,
	0, 1340, 1340, 0, 1340, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1340, 1340, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 1340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3925, 0, 1601, 0, 0, 0, 0,
	0, 1340, 0, 1340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3938, 0, 0, 0, 0, 0, 1340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 0, 2096, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 1323,
	0, 0, 1340, 1340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 1500, 1500, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 1340, 0, 0, 0, 0, 1340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1340, 1340, 1340, 1340, 1340, 1340, 1340,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	285, 0, 0, 1340, 0, 0, 285, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	285, 0, 0, 1340, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 0, 1500, 0, 1500,
	0, 0, 0, 0, 2160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1500, 1500, 0,
	0, 0, 0, 0, 0, 0, 1340, 0, 1340, 0,
	0, 1500, 285, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 1497, 1500, 0, 1500, 1500, 1500, 0, 0,
	0, 0, 0, 1619, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 0, 0, 285,
	285, 0, 285, 0, 285, 0, 285, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 0, 1498, 0, 0,
	2160, 0, 0, 0, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 285, 285, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1340, 1619,
	0, 115, 0, 0, 0, 0, 1619, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 1340, 1340, 1340, 0,
	0, 0, 1619, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 2453, 1340, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 2453, 0, 0, 0, 0,
	0, 1620, 0, 0, 0, 0, 4243, 1340, 115, 0,
	1340, 0, 0, 0, 0, 0, 4253, 1620, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 2453, 0, 0, 0, 0, 4271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2160, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1340, 0, 0,
	0, 0, 0, 1500, 0, 115, 0, 0, 0, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 1323,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 0, 1340, 1340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1340, 0, 0, 1340, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 285, 0, 0, 0, 285,
	0, 285, 0, 0, 0, 0, 0, 0, 285, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1340, 1500, 0, 0, 0, 0,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 884, 0,
	0, 0, 0, 0, 0, 884, 4477, 285, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 2453, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 285, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1497, 0, 0,
	0, 0, 0, 0, 2453, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 4576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 285, 0, 0, 0, 0, 0,
	0, 285, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 1500, 0, 1340,
	0, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	1500, 0, 1500, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 4681, 0, 0, 0,
	0, 0, 285, 285, 285, 285, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1620, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 2708, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 1619, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 0, 1619, 1619, 1619, 0, 0, 1620,
	0, 1620, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 884, 0,
	0, 1620, 1620, 0, 4810, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 0, 1620, 0, 1620,
	1620, 1620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1500, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 115,
	0, 0, 0, 0, 285, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 4981, 0, 0, 0, 285, 0, 0, 0, 285,
	285, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 1925, 0, 1957, 1958, 1959,
	1968, 1969, 1970, 0, 0, 0, 0, 0, 1497, 0,
	0, 0, 0, 0, 0, 285, 0, 1961, 1955, 0,
	0, 0, 0, 0, 0, 0, 1927, 0, 0, 0,
	0, 5025, 0, 0, 0, 0, 1974, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 285, 285, 0,
	0, 285, 1926, 1498, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 1946, 0, 0, 0, 0, 0, 0,
	285, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 0, 0, 0, 0, 0,
	1949, 1950, 1951, 1952, 0, 0, 0, 1500, 0, 0,
	1932, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 1500, 0, 1500, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 285, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 1500, 285, 1498,
	0, 1965, 0, 0, 1975, 0, 0, 0, 0, 0,
	0, 1954, 1956, 0, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	1972, 0, 0, 0, 0, 0, 0, 1941, 1942, 0,
	0, 1497, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 1963, 0, 1619, 0, 0,
	1500, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 1500, 0, 285, 1500, 285, 1973, 0,
	0, 0, 0, 884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 285, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 1619, 0, 0, 0, 0, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	1500, 1620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 0, 1620, 0, 0, 0,
	0, 1948, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	1938, 1939, 1945, 1967, 1944, 1940, 0, 1937, 1935, 1936,
	1928, 1929, 1930, 1931, 1933, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 1500, 0, 1500, 0, 0, 0, 1500,
	0, 0, 1500, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 285, 0, 0, 1497, 0, 285, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1924, 1925, 0,
	1957, 1958, 1959, 1968, 1969, 1970, 0, 0, 1500, 1497,
	0, 0, 0, 1500, 1500, 1500, 0, 0, 0, 0,
	1961, 1955, 0, 0, 1497, 0, 0, 0, 0, 1927,
	0, 1498, 0, 0, 0, 0, 1500, 0, 1500, 1974,
	0, 0, 285, 0, 1500, 0, 0, 0, 0, 0,
	1497, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 1498, 1926, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 1946, 0, 0, 1498,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 1950, 1951, 1952, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1500, 1500, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 0, 0, 0,
	0, 0, 0, 0, 1965, 1500, 1500, 1975, 0, 0,
	0, 0, 0, 0, 1954, 1956, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 1971, 0, 1972, 0, 0, 0, 0, 0, 0,
	1941, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 1619, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1619, 0, 1619, 1947, 0, 0, 1497, 0, 285, 0,
	0, 0, 0, 884, 1619, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 285, 0, 1619, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1620, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 285, 0, 1620, 0, 1620, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 1620,
	0, 0, 1962, 0, 0, 0, 0, 1619, 0, 0,
	0, 1620, 0, 1977, 0, 1500, 1500, 0, 0, 1619,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 285, 0, 0, 0,
	1500, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1497, 0, 1620, 1497, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1500, 1500, 1500, 1500,
	1500, 1500, 1500, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 1498, 0, 0,
	1498, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1497, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1500,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 285, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940, 0,
	1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 1497, 0, 0, 0, 0, 1500,
	1500, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1498,
	1500, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1619, 1619, 0, 1619, 0, 0, 0, 1619, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 1924, 1925,
	0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 1620, 0, 1620,
	0, 1961, 1955, 1620, 0, 0, 1620, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 1619, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 1500, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 1500, 0, 1926, 1619, 0, 0,
	0, 0, 1619, 1619, 1619, 0, 0, 1946, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 0, 1619, 1620, 0,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 1620, 1620, 1620,
	0, 1497, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1500, 0, 0,
	1620, 0, 1620, 0, 0, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 1949, 1950, 1951, 1952, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1965, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 1954, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 1972, 0, 0, 0, 0, 0,
	0, 1941, 1942, 1497, 1497, 0, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	0, 0, 0, 0, 1619, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 1497, 0, 1924,
	1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1498, 1498,
	0, 1498, 1961, 1955, 0, 0, 0, 0, 0, 0,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 1620,
	1620, 1974, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 1962, 0, 0, 0, 1926, 0, 0,
	1497, 0, 0, 0, 1977, 0, 0, 0, 1946, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 1953, 0, 1619, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 1950, 1951, 1952, 0,
	0, 0, 0, 0, 1497, 1932, 0, 0, 0, 1619,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 1620,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 1619, 1619, 1619, 1619,
	1619, 1619, 0, 0, 0, 0, 1965, 1979, 0, 1975,
	0, 0, 0, 0, 0, 1497, 1954, 1956, 0, 1498,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 1972, 0, 0, 0, 0,
	0, 0, 1941, 1942, 0, 1497, 0, 0, 0, 0,
	1620, 1620, 1620, 1620, 1620, 1620, 1620, 0, 0, 0,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1498, 0, 0, 0, 0, 1947, 0, 0, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 1497, 0,
	1619, 0, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940,
	1498, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3473,
	0, 0, 0, 1973, 0, 0, 0, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 1962, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 1619, 1619,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 1497,
	0, 0, 1619, 1620, 1620, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944,
	1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 296, 295, 297, 298, 299, 300,
	1501, 301, 302, 1502, 1503, 1504, 1619, 1505, 679, 1506,
	1507, 1508, 303, 1509, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 681, 0, 313, 682, 314,
	683, 1510, 684, 315, 316, 317, 318, 319, 320, 1511,
	1512, 0, 321, 685, 686, 687, 1513, 322, 323, 688,
	1514, 1581, 1515, 324, 325, 326, 327, 328, 329, 330,
	331, 1620, 1516, 333, 334, 335, 332, 336, 1517, 337,
	0, 338, 339, 340, 341, 342, 343, 1518, 344, 345,
	346, 1280, 347, 348, 349, 1519, 1520, 1522, 1521, 1523,
	1524, 1525, 350, 351, 352, 353, 354, 0, 355, 357,
	689, 690, 1526, 360, 356, 358, 1527, 361, 359, 362,
	1528, 363, 364, 365, 1529, 1530, 366, 367, 368, 1531,
	369, 370, 371, 1532, 372, 373, 374, 1533, 375, 376,
	691, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 692, 693, 388, 1534, 290, 1535, 0, 0,
	0, 0, 389, 390, 391, 694, 0, 0, 0, 392,
	1536, 393, 394, 395, 1537, 396, 1538, 1281, 397, 398,
	399, 695, 696, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 1539, 409, 697, 1540, 698, 410, 1541, 411,
	412, 413, 414, 415, 416, 699, 700, 701, 504, 1283,
	417, 418, 1542, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 1543, 1282, 505, 427, 702,
	703, 1544, 704, 1545, 428, 429, 1284, 705, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 1546, 440, 442, 441, 1547, 443, 706,
	1287, 444, 445, 1288, 1548, 446, 447, 448, 449, 450,
	451, 454, 1549, 1550, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1551, 292, 1291, 499, 500, 501,
	502, 1552, 707, 503, 708, 506, 507, 1553, 0, 508,
	0, 509, 1554, 1555, 511, 512, 513, 1556, 1557, 514,
	515, 709, 1292, 516, 1293, 710, 517, 518, 510, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 1558, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 713,
	536, 714, 537, 538, 1559, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 715, 549, 550, 552,
	551, 553, 1560, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 1561, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 716, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 1562, 597, 598, 596, 599, 600, 601,
	1563, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 717, 0, 613, 1564, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 718,
	622, 623, 624, 625, 719, 629, 630, 631, 1565, 632,
	633, 0, 628, 619, 1566, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 1567, 642, 720, 721, 722, 723,
	1568, 652, 1569, 643, 644, 645, 646, 724, 647, 725,
	1570, 648, 649, 650, 651, 0, 653, 654, 1571, 1572,
	655, 656, 658, 660, 661, 657, 659, 662, 1573, 663,
	1574, 0, 664, 665, 666, 726, 727, 728, 1575, 668,
	667, 669, 670, 671, 729, 672, 673, 1576, 1577, 1578,
	1579, 674, 675, 730, 676, 677, 678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 2936, 0, 0, 0,
	0, 0, 0, 0, 2937, 293, 294, 296, 295, 297,
	298, 299, 300, 1501, 301, 302, 1502, 1503, 1504, 0,
	1505, 679, 1506, 1507, 1508, 303, 1509, 304, 305, 1279,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 1510, 684, 315, 316, 317, 318,
	319, 320, 1511, 1512, 0, 321, 685, 686, 687, 1513,
	322, 323, 688, 1514, 1581, 1515, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 1516, 333, 334, 335, 332,
	336, 1517, 337, 0, 338, 339, 340, 341, 342, 343,
	1518, 344, 345, 346, 1280, 347, 348, 349, 1519, 1520,
	1522, 1521, 1523, 1524, 1525, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 1526, 360, 356, 358, 1527,
	361, 359, 362, 1528, 363, 364, 365, 1529, 1530, 366,
	367, 368, 1531, 369, 370, 371, 1532, 372, 373, 374,
	1533, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 1534, 290,
	1535, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 1536, 393, 394, 395, 1537, 396, 1538,
	1281, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 1539, 409, 697, 1540, 698,
	410, 1541, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 1283, 417, 418, 1542, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 1543, 1282,
	505, 427, 702, 703, 1544, 704, 1545, 428, 429, 1284,
	705, 1285, 430, 431, 432, 1286, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 1546, 440, 442, 441,
	1547, 443, 706, 1287, 444, 445, 1288, 1548, 446, 447,
	448, 449, 450, 451, 454, 1549, 1550, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 1289, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 1290, 497, 485, 1551, 292, 1291,
	499, 500, 501, 502, 1552, 707, 503, 708, 506, 507,
	1553, 0, 508, 0, 509, 1554, 1555, 511, 512, 513,
	1556, 1557, 514, 515, 709, 1292, 516, 1293, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 1558, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 1559, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 1560, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	1561, 571, 572, 573, 1294, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 1562, 597, 598, 596,
	599, 600, 601, 1563, 602, 603, 585, 586, 604, 605,
	1295, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 1564, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 1565, 632, 633, 0, 628, 619, 1566, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 1567, 642, 720,
	721, 722, 723, 1568, 652, 1569, 643, 644, 645, 646,
	724, 647, 725, 1570, 648, 649, 650, 651, 0, 653,
	654, 1571, 1572, 655, 656, 658, 660, 661, 657, 659,
	662, 1573, 663, 1574, 0, 664, 665, 666, 726, 727,
	728, 1575, 668, 667, 669, 670, 671, 729, 672, 673,
	1576, 1577, 1578, 1579, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 3965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3967, 293, 294, 296, 295,
	297, 298, 299, 300, 1501, 301, 302, 1502, 1503, 1504,
	0, 1505, 679, 1506, 1507, 1508, 303, 1509, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 681,
	0, 313, 682, 314, 683, 1510, 684, 315, 316, 317,
	318, 319, 320, 1511, 1512, 0, 321, 685, 686, 687,
	1513, 322, 323, 688, 1514, 1581, 1515, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 1516, 333, 334, 335,
	332, 336, 1517, 337, 0, 338, 339, 340, 341, 342,
	343, 1518, 344, 345, 346, 1280, 347, 348, 349, 1519,
	1520, 1522, 1521, 1523, 1524, 1525, 350, 351, 352, 353,
	354, 0, 355, 357, 689, 690, 1526, 360, 356, 358,
	1527, 361, 359, 362, 1528, 363, 364, 365, 1529, 1530,
	366, 367, 368, 1531, 369, 370, 371, 1532, 372, 373,
	374, 1533, 375, 376, 691, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 692, 693, 388, 1534,
	290, 1535, 0, 0, 0, 0, 389, 390, 391, 694,
	0, 0, 0, 392, 1536, 393, 394, 395, 1537, 396,
	1538, 1281, 397, 398, 399, 695, 696, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 1539, 409, 697, 1540,
	698, 410, 1541, 411, 412, 413, 414, 415, 416, 699,
	700, 701, 504, 1283, 417, 418, 1542, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 1543,
	1282, 505, 427, 702, 703, 1544, 704, 1545, 428, 429,
	1284, 705, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 1546, 440, 442,
	441, 1547, 443, 706, 1287, 444, 445, 1288, 1548, 446,
	447, 448, 449, 450, 451, 454, 1549, 1550, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1551, 292,
	1291, 499, 500, 501, 502, 1552, 707, 503, 708, 506,
	507, 1553, 0, 508, 0, 509, 1554, 1555, 511, 512,
	513, 1556, 1557, 514, 515, 709, 1292, 516, 1293, 710,
	517, 518, 510, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 1558, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 713, 536, 714, 537, 538, 1559, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	715, 549, 550, 552, 551, 553, 1560, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 1561, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 716, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 1562, 597, 598,
	596, 599, 600, 601, 1563, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 717,
	0, 613, 1564, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 718, 622, 623, 624, 625, 719, 629,
	630, 631, 1565, 632, 633, 0, 628, 619, 1566, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 1567, 642,
	720, 721, 722, 723, 1568, 652, 1569, 643, 644, 645,
	646, 724, 647, 725, 1570, 648, 649, 650, 651, 0,
	653, 654, 1571, 1572, 655, 656, 658, 660, 661, 657,
	659, 662, 1573, 663, 1574, 0, 664, 665, 666, 726,
	727, 728, 1575, 668, 667, 669, 670, 671, 729, 672,
	673, 1576, 1577, 1578, 1579, 674, 675, 730, 676, 677,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4391, 293, 294, 296, 295, 297, 298, 299, 300, 1501,
	301, 302, 1502, 1503, 1504, 0, 1505, 679, 1506, 1507,
	1508, 303, 1509, 304, 305, 1279, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	1510, 684, 315, 316, 317, 318, 319, 320, 1511, 1512,
	0, 321, 685, 686, 687, 1513, 322, 323, 688, 1514,
	1581, 1515, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 1516, 333, 334, 335, 332, 336, 1517, 337, 0,
	338, 339, 340, 341, 342, 343, 1518, 344, 345, 346,
	1280, 347, 348, 349, 1519, 1520, 1522, 1521, 1523, 1524,
	1525, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 1526, 360, 356, 358, 1527, 361, 359, 362, 1528,
	363, 364, 365, 1529, 1530, 366, 367, 368, 1531, 369,
	370, 371, 1532, 372, 373, 374, 1533, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 1534, 290, 1535, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 1536,
	393, 394, 395, 1537, 396, 1538, 1281, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 1539, 409, 697, 1540, 698, 410, 1541, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 1283, 417,
	418, 1542, 419, 420, 421, 422, 423, 0, 0, 0,
	291, 424, 425, 426, 1543, 1282, 505, 427, 702, 703,
	1544, 704, 1545, 428, 429, 1284, 705, 1285, 430, 431,
	432, 1286, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 1546, 440, 442, 441, 1547, 443, 706, 1287,
	444, 445, 1288, 1548, 446, 447, 448, 449, 450, 451,
	454, 1549, 1550, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 1289, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	1290, 497, 485, 1551, 292, 1291, 499, 500, 501, 502,
	1552, 707, 503, 708, 506, 507, 1553, 0, 508, 0,
	509, 1554, 1555, 511, 512, 513, 1556, 1557, 514, 515,
	709, 1292, 516, 1293, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 1558, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 1559, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 1560, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 1561, 571, 572, 573,
	1294, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 1562, 597, 598, 596, 599, 600, 601, 1563,
	602, 603, 585, 586, 604, 605, 1295, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 1564, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 1565, 632, 633,
	0, 628, 619, 1566, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 1567, 642, 720, 721, 722, 723, 1568,
	652, 1569, 643, 644, 645, 646, 724, 647, 725, 1570,
	648, 649, 650, 651, 0, 653, 654, 1571, 1572, 655,
	656, 658, 660, 661, 657, 659, 662, 1573, 663, 1574,
	0, 664, 665, 666, 726, 727, 728, 1575, 668, 667,
	669, 670, 671, 729, 672, 673, 1576, 1577, 1578, 1579,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4389, 293, 294, 296, 295,
	297, 298, 299, 300, 1501, 301, 302, 1502, 1503, 1504,
	0, 1505, 679, 1506, 1507, 1508, 303, 1509, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 681,
	0, 313, 682, 314, 683, 1510, 684, 315, 316, 317,
	318, 319, 320, 1511, 1512, 0, 321, 685, 686, 687,
	1513, 322, 323, 688, 1514, 1581, 1515, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 1516, 333, 334, 335,
	332, 336, 1517, 337, 0, 338, 339, 340, 341, 342,
	343, 1518, 344, 345, 346, 1280, 347, 348, 349, 1519,
	1520, 1522, 1521, 1523, 1524, 1525, 350, 351, 352, 353,
	354, 0, 355, 357, 689, 690, 1526, 360, 356, 358,
	1527, 361, 359, 362, 1528, 363, 364, 365, 1529, 1530,
	366, 367, 368, 1531, 369, 370, 371, 1532, 372, 373,
	374, 1533, 375, 376, 691, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 692, 693, 388, 1534,
	290, 1535, 0, 0, 0, 0, 389, 390, 391, 694,
	0, 0, 0, 392, 1536, 393, 394, 395, 1537, 396,
	1538, 1281, 397, 398, 399, 695, 696, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 1539, 409, 697, 1540,
	698, 410, 1541, 411, 412, 413, 414, 415, 416, 699,
	700, 701, 504, 1283, 417, 418, 1542, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 1543,
	1282, 505, 427, 702, 703, 1544, 704, 1545, 428, 429,
	1284, 705, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 1546, 440, 442,
	441, 1547, 443, 706, 1287, 444, 445, 1288, 1548, 446,
	447, 448, 449, 450, 451, 454, 1549, 1550, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1551, 292,
	1291, 499, 500, 501, 502, 1552, 707, 503, 708, 506,
	507, 1553, 0, 508, 0, 509, 1554, 1555, 511, 512,
	513, 1556, 1557, 514, 515, 709, 1292, 516, 1293, 710,
	517, 518, 510, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 1558, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 713, 536, 714, 537, 538, 1559, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	715, 549, 550, 552, 551, 553, 1560, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 1561, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 716, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 1562, 597, 598,
	596, 599, 600, 601, 1563, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 717,
	0, 613, 1564, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 718, 622, 623, 624, 625, 719, 629,
	630, 631, 1565, 632, 633, 0, 628, 619, 1566, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 1567, 642,
	720, 721, 722, 723, 1568, 652, 1569, 643, 644, 645,
	646, 724, 647, 725, 1570, 648, 649, 650, 651, 0,
	653, 654, 1571, 1572, 655, 656, 658, 660, 661, 657,
	659, 662, 1573, 663, 1574, 0, 664, 665, 666, 726,
	727, 728, 1575, 668, 667, 669, 670, 671, 729, 672,
	673, 1576, 1577, 1578, 1579, 674, 675, 730, 676, 677,
	678, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4624, 293, 294, 296, 295, 297,
	298, 299, 300, 1501, 301, 302, 1502, 1503, 1504, 0,
	1505, 679, 1506, 1507, 1508, 303, 1509, 304, 305, 1279,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 1510, 684, 315, 316, 317, 318,
	319, 320, 1511, 1512, 0, 321, 685, 686, 687, 1513,
	322, 323, 688, 1514, 1581, 1515, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 1516, 333, 334, 335, 332,
	336, 1517, 337, 0, 338, 339, 340, 341, 342, 343,
	1518, 344, 345, 346, 1280, 347, 348, 349, 1519, 1520,
	1522, 1521, 1523, 1524, 1525, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 1526, 360, 356, 358, 1527,
	361, 359, 362, 1528, 363, 364, 365, 1529, 1530, 366,
	367, 368, 1531, 369, 370, 371, 1532, 372, 373, 374,
	1533, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 1534, 290,
	1535, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 1536, 393, 394, 395, 1537, 396, 1538,
	1281, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 1539, 409, 697, 1540, 698,
	410, 1541, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 1283, 417, 418, 1542, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 1543, 1282,
	505, 427, 702, 703, 1544, 704, 1545, 428, 429, 1284,
	705, 1285, 430, 431, 432, 1286, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 1546, 440, 442, 441,
	1547, 443, 706, 1287, 444, 445, 1288, 1548, 446, 447,
	448, 449, 450, 451, 454, 1549, 1550, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 1289, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 1290, 497, 485, 1551, 292, 1291,
	499, 500, 501, 502, 1552, 707, 503, 708, 506, 507,
	1553, 0, 508, 0, 509, 1554, 1555, 511, 512, 513,
	1556, 1557, 514, 515, 709, 1292, 516, 1293, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 1558, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 1559, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 1560, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	1561, 571, 572, 573, 1294, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 1562, 597, 598, 596,
	599, 600, 601, 1563, 602, 603, 585, 586, 604, 605,
	1295, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 1564, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 1565, 632, 633, 0, 628, 619, 1566, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 1567, 642, 720,
	721, 722, 723, 1568, 652, 1569, 643, 644, 645, 646,
	724, 647, 725, 1570, 648, 649, 650, 651, 0, 653,
	654, 1571, 1572, 655, 656, 658, 660, 661, 657, 659,
	662, 1573, 663, 1574, 0, 664, 665, 666, 726, 727,
	728, 1575, 668, 667, 669, 670, 671, 729, 672, 673,
	1576, 1577, 1578, 1579, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4486, 293, 294, 296, 295, 297, 298,
	299, 300, 1501, 301, 302, 1502, 1503, 1504, 0, 1505,
	679, 1506, 1507, 1508, 303, 1509, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 681, 0, 313,
	682, 314, 683, 1510, 684, 315, 316, 317, 318, 319,
	320, 1511, 1512, 0, 321, 685, 686, 687, 1513, 322,
	323, 688, 1514, 1581, 1515, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 1516, 333, 334, 335, 332, 336,
	1517, 337, 0, 338, 339, 340, 341, 342, 343, 1518,
	344, 345, 346, 1280, 347, 348, 349, 1519, 1520, 1522,
	1521, 1523, 1524, 1525, 350, 351, 352, 353, 354, 0,
	355, 357, 689, 690, 1526, 360, 356, 358, 1527, 361,
	359, 362, 1528, 363, 364, 365, 1529, 1530, 366, 367,
	368, 1531, 369, 370, 371, 1532, 372, 373, 374, 1533,
	375, 376, 691, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 692, 693, 388, 1534, 290, 1535,
	0, 0, 0, 0, 389, 390, 391, 694, 0, 0,
	0, 392, 1536, 393, 394, 395, 1537, 396, 1538, 1281,
	397, 398, 399, 695, 696, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 1539, 409, 697, 1540, 698, 410,
	1541, 411, 412, 413, 414, 415, 416, 699, 700, 701,
	504, 1283, 417, 418, 1542, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 1543, 1282, 505,
	427, 702, 703, 1544, 704, 1545, 428, 429, 1284, 705,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 1546, 440, 442, 441, 1547,
	443, 706, 1287, 444, 445, 1288, 1548, 446, 447, 448,
	449, 450, 451, 454, 1549, 1550, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 1551, 292, 1291, 499,
	500, 501, 502, 1552, 707, 503, 708, 506, 507, 1553,
	0, 508, 0, 509, 1554, 1555, 511, 512, 513, 1556,
	1557, 514, 515, 709, 1292, 516, 1293, 710, 517, 518,
	510, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	1558, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 713, 536, 714, 537, 538, 1559, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 715, 549,
	550, 552, 551, 553, 1560, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 1561,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 716,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 1562, 597, 598, 596, 599,
	600, 601, 1563, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 717, 0, 613,
	1564, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 718, 622, 623, 624, 625, 719, 629, 630, 631,
	1565, 632, 633, 0, 628, 619, 1566, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 1567, 642, 720, 721,
	722, 723, 1568, 652, 1569, 643, 644, 645, 646, 724,
	647, 725, 1570, 648, 649, 650, 651, 0, 653, 654,
	1571, 1572, 655, 656, 658, 660, 661, 657, 659, 662,
	1573, 663, 1574, 0, 664, 665, 666, 726, 727, 728,
	1575, 668, 667, 669, 670, 671, 729, 672, 673, 1576,
	1577, 1578, 1579, 674, 675, 730, 676, 677, 678, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4318, 293, 294, 296, 295, 297, 298, 299,
	300, 1501, 301, 302, 1502, 1503, 1504, 0, 1505, 679,
	1506, 1507, 1508, 303, 1509, 304, 305, 1279, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 1510, 684, 315, 316, 317, 318, 319, 320,
	1511, 1512, 0, 321, 685, 686, 687, 1513, 322, 323,
	688, 1514, 1581, 1515, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 1516, 333, 334, 335, 332, 336, 1517,
	337, 0, 338, 339, 340, 341, 342, 343, 1518, 344,
	345, 346, 1280, 347, 348, 349, 1519, 1520, 1522, 1521,
	1523, 1524, 1525, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 1526, 360, 356, 358, 1527, 361, 359,
	362, 1528, 363, 364, 365, 1529, 1530, 366, 367, 368,
	1531, 369, 370, 371, 1532, 372, 373, 374, 1533, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 1534, 290, 1535, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 1536, 393, 394, 395, 1537, 396, 1538, 1281, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 1539, 409, 697, 1540, 698, 410, 1541,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	1283, 417, 418, 1542, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 1543, 1282, 505, 427,
	702, 703, 1544, 704, 1545, 428, 429, 1284, 705, 1285,
	430, 431, 432, 1286, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 1546, 440, 442, 441, 1547, 443,
	706, 1287, 444, 445, 1288, 1548, 446, 447, 448, 449,
	450, 451, 454, 1549, 1550, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 1289, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 1290, 497, 485, 1551, 292, 1291, 499, 500,
	501, 502, 1552, 707, 503, 708, 506, 507, 1553, 0,
	508, 0, 509, 1554, 1555, 511, 512, 513, 1556, 1557,
	514, 515, 709, 1292, 516, 1293, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 1558,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 1559, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 1560, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 1561, 571,
	572, 573, 1294, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 1562, 597, 598, 596, 599, 600,
	601, 1563, 602, 603, 585, 586, 604, 605, 1295, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 1564,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 1565,
	632, 633, 0, 628, 619, 1566, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 1567, 642, 720, 721, 722,
	723, 1568, 652, 1569, 643, 644, 645, 646, 724, 647,
	725, 1570, 648, 649, 650, 651, 0, 653, 654, 1571,
	1572, 655, 656, 658, 660, 661, 657, 659, 662, 1573,
	663, 1574, 0, 664, 665, 666, 726, 727, 728, 1575,
	668, 667, 669, 670, 671, 729, 672, 673, 1576, 1577,
	1578, 1579, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3983, 293, 294, 296, 295, 297, 298, 299, 300,
	1501, 301, 302, 1502, 1503, 1504, 0, 1505, 679, 1506,
	1507, 1508, 303, 1509, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 681, 0, 313, 682, 314,
	683, 1510, 684, 315, 316, 317, 318, 319, 320, 1511,
	1512, 0, 321, 685, 686, 687, 1513, 322, 323, 688,
	1514, 1581, 1515, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 1516, 333, 334, 335, 332, 336, 1517, 337,
	0, 338, 339, 340, 341, 342, 343, 1518, 344, 345,
	346, 1280, 347, 348, 349, 1519, 1520, 1522, 1521, 1523,
	1524, 1525, 350, 351, 352, 353, 354, 0, 355, 357,
	689, 690, 1526, 360, 356, 358, 1527, 361, 359, 362,
	1528, 363, 364, 365, 1529, 1530, 366, 367, 368, 1531,
	369, 370, 371, 1532, 372, 373, 374, 1533, 375, 376,
	691, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 692, 693, 388, 1534, 290, 1535, 0, 0,
	0, 0, 389, 390, 391, 694, 0, 0, 0, 392,
	1536, 393, 394, 395, 1537, 396, 1538, 1281, 397, 398,
	399, 695, 696, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 1539, 409, 697, 1540, 698, 410, 1541, 411,
	412, 413, 414, 415, 416, 699, 700, 701, 504, 1283,
	417, 418, 1542, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 1543, 1282, 505, 427, 702,
	703, 1544, 704, 1545, 428, 429, 1284, 705, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 1546, 440, 442, 441, 1547, 443, 706,
	1287, 444, 445, 1288, 1548, 446, 447, 448, 449, 450,
	451, 454, 1549, 1550, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1551, 292, 1291, 499, 500, 501,
	502, 1552, 707, 503, 708, 506, 507, 1553, 0, 508,
	0, 509, 1554, 1555, 511, 512, 513, 1556, 1557, 514,
	515, 709, 1292, 516, 1293, 710, 517, 518, 510, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 1558, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 713,
	536, 714, 537, 538, 1559, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 715, 549, 550, 552,
	551, 553, 1560, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 1561, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 716, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 1562, 597, 598, 596, 599, 600, 601,
	1563, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 717, 0, 613, 1564, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 718,
	622, 623, 624, 625, 719, 629, 630, 631, 1565, 632,
	633, 0, 628, 619, 1566, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 1567, 642, 720, 721, 722, 723,
	1568, 652, 1569, 643, 644, 645, 646, 724, 647, 725,
	1570, 648, 649, 650, 651, 0, 653, 654, 1571, 1572,
	655, 656, 658, 660, 661, 657, 659, 662, 1573, 663,
	1574, 0, 664, 665, 666, 726, 727, 728, 1575, 668,
	667, 669, 670, 671, 729, 672, 673, 1576, 1577, 1578,
	1579, 674, 675, 730, 676, 677, 678, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3800, 293, 294, 296, 295, 297, 298, 299, 300, 1501,
	301, 302, 1502, 1503, 1504, 0, 1505, 679, 1506, 1507,
	1508, 303, 1509, 304, 305, 1279, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	1510, 684, 315, 316, 317, 318, 319, 320, 1511, 1512,
	0, 321, 685, 686, 687, 1513, 322, 323, 688, 1514,
	1581, 1515, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 1516, 333, 334, 335, 332, 336, 1517, 337, 0,
	338, 339, 340, 341, 342, 343, 1518, 344, 345, 346,
	1280, 347, 348, 349, 1519, 1520, 1522, 1521, 1523, 1524,
	1525, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 1526, 360, 356, 358, 1527, 361, 359, 362, 1528,
	363, 364, 365, 1529, 1530, 366, 367, 368, 1531, 369,
	370, 371, 1532, 372, 373, 374, 1533, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 1534, 290, 1535, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 1536,
	393, 394, 395, 1537, 396, 1538, 1281, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 1539, 409, 697, 1540, 698, 410, 1541, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 1283, 417,
	418, 1542, 419, 420, 421, 422, 423, 0, 0, 0,
	291, 424, 425, 426, 1543, 1282, 505, 427, 702, 703,
	1544, 704, 1545, 428, 429, 1284, 705, 1285, 430, 431,
	432, 1286, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 1546, 440, 442, 441, 1547, 443, 706, 1287,
	444, 445, 1288, 1548, 446, 447, 448, 449, 450, 451,
	454, 1549, 1550, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 1289, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	1290, 497, 485, 1551, 292, 1291, 499, 500, 501, 502,
	1552, 707, 503, 708, 506, 507, 1553, 0, 508, 0,
	509, 1554, 1555, 511, 512, 513, 1556, 1557, 514, 515,
	709, 1292, 516, 1293, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 1558, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 1559, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 1560, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 1561, 571, 572, 573,
	1294, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 1562, 597, 598, 596, 599, 600, 601, 1563,
	602, 603, 585, 586, 604, 605, 1295, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 1564, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 1565, 632, 633,
	0, 628, 619, 1566, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 1567, 642, 720, 721, 722, 723, 1568,
	652, 1569, 643, 644, 645, 646, 724, 647, 725, 1570,
	648, 649, 650, 651, 0, 653, 654, 1571, 1572, 655,
	656, 658, 660, 661, 657, 659, 662, 1573, 663, 1574,
	0, 664, 665, 666, 726, 727, 728, 1575, 668, 667,
	669, 670, 671, 729, 672, 673, 1576, 1577, 1578, 1579,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2790,
	293, 294, 296, 295, 297, 298, 299, 300, 1501, 301,
	302, 1502, 1503, 1504, 0, 1505, 679, 1506, 1507, 1508,
	303, 1509, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 681, 0, 313, 682, 314, 683, 1510,
	684, 315, 316, 317, 318, 319, 320, 1511, 1512, 0,
	321, 685, 686, 687, 1513, 322, 323, 688, 1514, 1581,
	1515, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	1516, 333, 334, 335, 332, 336, 1517, 337, 0, 338,
	339, 340, 341, 342, 343, 1518, 344, 345, 346, 1280,
	347, 348, 349, 1519, 1520, 1522, 1521, 1523, 1524, 1525,
	350, 351, 352, 353, 354, 0, 355, 357, 689, 690,
	1526, 360, 356, 358, 1527, 361, 359, 362, 1528, 363,
	364, 365, 1529, 1530, 366, 367, 368, 1531, 369, 370,
	371, 1532, 372, 373, 374, 1533, 375, 376, 691, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	692, 693, 388, 1534, 290, 1535, 0, 0, 0, 0,
	389, 390, 391, 694, 0, 0, 0, 392, 1536, 393,
	394, 395, 1537, 396, 1538, 1281, 397, 398, 399, 695,
	696, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	1539, 409, 697, 1540, 698, 410, 1541, 411, 412, 413,
	414, 415, 416, 699, 700, 701, 504, 1283, 417, 418,
	1542, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 1543, 1282, 505, 427, 702, 703, 1544,
	704, 1545, 428, 429, 1284, 705, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 1546, 440, 442, 441, 1547, 443, 706, 1287, 444,
	445, 1288, 1548, 446, 447, 448, 449, 450, 451, 454,
	1549, 1550, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1551, 292, 1291, 499, 500, 501, 502, 1552,
	707, 503, 708, 506, 507, 1553, 0, 508, 0, 509,
	1554, 1555, 511, 512, 513, 1556, 1557, 514, 515, 709,
	1292, 516, 1293, 710, 517, 518, 510, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 1558, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 713, 536, 714,
	537, 538, 1559, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 715, 549, 550, 552, 551, 553,
	1560, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 1561, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 716, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 1562, 597, 598, 596, 599, 600, 601, 1563, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 717, 0, 613, 1564, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 718, 622, 623,
	624, 625, 719, 629, 630, 631, 1565, 632, 633, 0,
	628, 619, 1566, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 1567, 642, 720, 721, 722, 723, 1568, 652,
	1569, 643, 644, 645, 646, 724, 647, 725, 1570, 648,
	649, 650, 651, 0, 653, 654, 1571, 1572, 655, 656,
	658, 660, 661, 657, 659, 662, 1573, 663, 1574, 0,
	664, 665, 666, 726, 727, 728, 1575, 668, 667, 669,
	670, 671, 729, 672, 673, 1576, 1577, 1578, 1579, 674,
	675, 730, 676, 677, 678, 0, 0, 0, 0, 0,
	1492, 0, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2411, 293,
	294, 296, 295, 297, 298, 299, 300, 1501, 301, 302,
	1502, 1503, 1504, 0, 1505, 679, 1506, 1507, 1508, 303,
	1509, 304, 305, 1279, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 1510, 684,
	315, 316, 317, 318, 319, 320, 1511, 1512, 0, 321,
	685, 686, 687, 1513, 322, 323, 688, 1514, 1581, 1515,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 1516,
	333, 334, 335, 332, 336, 1517, 337, 0, 338, 339,
	340, 341, 342, 343, 1518, 344, 345, 346, 1280, 347,
	348, 349, 1519, 1520, 1522, 1521, 1523, 1524, 1525, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 1526,
	360, 356, 358, 1527, 361, 359, 362, 1528, 363, 364,
	365, 1529, 1530, 366, 367, 368, 1531, 369, 370, 371,
	1532, 372, 373, 374, 1533, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 1534, 290, 1535, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 1536, 393, 394,
	395, 1537, 396, 1538, 1281, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 1539,
	409, 697, 1540, 698, 410, 1541, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 1283, 417, 418, 1542,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 1543, 1282, 505, 427, 702, 703, 1544, 704,
	1545, 428, 429, 1284, 705, 1285, 430, 431, 432, 1286,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	1546, 440, 442, 441, 1547, 443, 706, 1287, 444, 445,
	1288, 1548, 446, 447, 448, 449, 450, 451, 454, 1549,
	1550, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	1289, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 1290, 497,
	485, 1551, 292, 1291, 499, 500, 501, 502, 1552, 707,
	503, 708, 506, 507, 1553, 0, 508, 0, 509, 1554,
	1555, 511, 512, 513, 1556, 1557, 514, 515, 709, 1292,
	516, 1293, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 1558, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 1559, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 1560,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 1561, 571, 572, 573, 1294, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	1562, 597, 598, 596, 599, 600, 601, 1563, 602, 603,
	585, 586, 604, 605, 1295, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 1564, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 1565, 632, 633, 0, 628,
	619, 1566, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 1567, 642, 720, 721, 722, 723, 1568, 652, 1569,
	643, 644, 645, 646, 724, 647, 725, 1570, 648, 649,
	650, 651, 0, 653, 654, 1571, 1572, 655, 656, 658,
	660, 661, 657, 659, 662, 1573, 663, 1574, 0, 664,
	665, 666, 726, 727, 728, 1575, 668, 667, 669, 670,
	671, 729, 672, 673, 1576, 1577, 1578, 1579, 674, 675,
	730, 676, 677, 678, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 1501,
	301, 302, 1502, 1503, 1504, 0, 1505, 679, 1506, 1507,
	1508, 303, 1509, 304, 305, 1279, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	1510, 684, 315, 316, 317, 318, 319, 320, 1511, 1512,
	0, 321, 685, 686, 687, 1513, 322, 323, 688, 1514,
	1581, 1515, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 1516, 333, 334, 335, 332, 336, 1517, 337, 0,
	338, 339, 340, 341, 342, 343, 1518, 344, 345, 346,
	1280, 347, 348, 349, 1519, 1520, 1522, 1521, 1523, 1524,
	1525, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 1526, 360, 356, 358, 1527, 361, 359, 362, 1528,
	363, 364, 365, 1529, 1530, 366, 367, 368, 1531, 369,
	370, 371, 1532, 372, 373, 374, 1533, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 1534, 290, 1535, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 1536,
	393, 394, 395, 1537, 396, 1538, 1281, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 1539, 409, 697, 1540, 698, 410, 1541, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 1283, 417,
	418, 1542, 419, 420, 421, 422, 423, 0, 0, 0,
	291, 424, 425, 426, 1543, 1282, 505, 427, 702, 703,
	1544, 704, 1545, 428, 429, 1284, 705, 1285, 430, 431,
	432, 1286, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 1546, 440, 442, 441, 1547, 443, 706, 1287,
	444, 445, 1288, 1548, 446, 447, 448, 449, 450, 451,
	454, 1549, 1550, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 1289, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	1290, 497, 485, 1551, 292, 1291, 499, 500, 501, 502,
	1552, 707, 503, 708, 506, 507, 1553, 0, 508, 0,
	509, 1554, 1555, 511, 512, 513, 1556, 1557, 514, 515,
	709, 1292, 516, 1293, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 1558, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 1559, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 1560, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 1561, 571, 572, 573,
	1294, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 1562, 597, 598, 596, 599, 600, 601, 1563,
	602, 603, 585, 586, 604, 605, 1295, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 1564, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 1565, 632, 633,
	0, 628, 619, 1566, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 1567, 642, 720, 721, 722, 723, 1568,
	652, 1569, 643, 644, 645, 646, 724, 647, 725, 1570,
	648, 649, 650, 651, 0, 653, 654, 1571, 1572, 655,
	656, 658, 660, 661, 657, 659, 662, 1573, 663, 1574,
	0, 664, 665, 666, 726, 727, 728, 1575, 668, 667,
	669, 670, 671, 729, 672, 673, 1576, 1577, 1578, 1579,
	674, 675, 730, 676, 677, 678, 2765, 0, 1215, 1187,
	1188, 1189, 1185, 1186, 1198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 2762, 301, 302, 0, 0, 0, 0,
	0, 1239, 1203, 0, 0, 303, 0, 304, 305, 1279,
	306, 307, 308, 309, 310, 311, 312, 680, 1252, 0,
	313, 1259, 314, 1258, 0, 1269, 315, 316, 317, 318,
	319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687, 0,
	322, 323, 1245, 0, 1226, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 1280, 347, 348, 349, 1229, 1227,
	1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353, 354,
	1262, 355, 357, 1256, 1255, 1175, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 2763, 0, 366,
	1247, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 1181, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 1270, 1271, 388, 1194, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 1254, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	1281, 397, 398, 399, 1267, 1268, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 1277, 0, 1204,
	410, 0, 411, 412, 413, 414, 415, 416, 1240, 1241,
	1244, 504, 1283, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 0, 1282,
	505, 427, 1249, 1250, 0, 1210, 0, 428, 429, 1284,
	1242, 1285, 430, 431, 432, 1286, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 1278, 1287, 444, 445, 1288, 0, 446, 447,
	448, 449, 450, 451, 454, 1233, 1232, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 1289, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 1290, 497, 485, 1172, 292, 1291,
	499, 500, 501, 502, 1195, 1243, 503, 1257, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 1292, 516, 1293, 1272, 517,
	518, 1182, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 1273, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 1253,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 1294, 574, 575, 576, 577, 578,
	1183, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 1236, 602, 603, 585, 586, 604, 605,
	1295, 606, 607, 608, 609, 610, 611, 612, 1251, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 1298, 622, 623, 624, 625, 1274, 629, 630,
	631, 0, 632, 633, 1169, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 1263,
	1264, 1265, 1266, 0, 652, 0, 643, 644, 645, 646,
	1275, 647, 1276, 1193, 648, 649, 650, 651, 0, 653,
	654, 0, 1176, 655, 656, 658, 660, 661, 657, 659,
	662, 1237, 663, 0, 0, 664, 665, 666, 726, 1260,
	1297, 2761, 668, 667, 669, 670, 671, 729, 672, 673,
	0, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	1173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 1166, 1167, 2764, 0, 0, 0, 0, 0, 0,
	0, 1199, 2760, 0, 1159, 1197, 1215, 1187, 1188, 1189,
	1185, 1186, 1198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 1239,
	1203, 0, 0, 303, 0, 304, 305, 1279, 306, 307,
	308, 309, 310, 311, 312, 680, 1252, 0, 313, 1259,
	314, 1258, 0, 1269, 315, 316, 317, 318, 319, 320,
	1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322, 323,
	1245, 0, 1226, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235,
	1231, 1230, 1234, 350, 351, 352, 353, 354, 1262, 355,
	357, 1256, 1255, 1175, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 1247, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 1181, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 1270, 1271, 388, 1194, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 1254, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 1281, 397,
	398, 399, 1267, 1268, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 1277, 0, 1204, 410, 0,
	411, 412, 413, 414, 415, 416, 1240, 1241, 1244, 504,
	1283, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 0, 1282, 505, 427,
	1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285,
	430, 431, 432, 1286, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	1278, 1287, 444, 445, 1288, 0, 446, 447, 448, 449,
	450, 451, 454, 1233, 1232, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 1289, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 1290, 497, 485, 1172, 292, 1291, 499, 500,
	501, 502, 1195, 1243, 503, 1257, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 1292, 516, 1293, 1272, 517, 518, 1182,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	1273, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 1253, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 1294, 574, 575, 576, 577, 578, 1183, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 249, 597, 598, 596, 599, 600,
	601, 1236, 602, 603, 585, 586, 604, 605, 1295, 606,
	607, 608, 609, 610, 611, 612, 1251, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	1298, 622, 623, 624, 625, 1274, 629, 630, 631, 0,
	632, 633, 1169, 628, 619, 251, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 1263, 1264, 1265,
	1266, 0, 652, 0, 643, 644, 645, 646, 1275, 647,
	1276, 1193, 648, 649, 650, 651, 0, 653, 654, 0,
	1176, 655, 656, 658, 660, 661, 657, 659, 662, 1237,
	663, 0, 0, 664, 665, 666, 1740, 1260, 1297, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 0, 0,
	0, 243, 674, 675, 730, 676, 677, 678, 1173, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 1166,
	1167, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 2005,
	2003, 0, 0, 1197, 0, 0, 0, 0, 293, 294,
	296, 295, 297, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 0, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 249,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	251, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 0, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 653, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 1740, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 243, 674, 675, 730,
	676, 677, 678, 1173, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1168, 0, 0,
	0, 0, 0, 0, 1166, 1167, 1215, 1187, 1188, 1189,
	1185, 1186, 1198, 0, 2005, 3424, 0, 0, 1197, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 1239,
	1203, 0, 0, 303, 0, 304, 305, 1279, 306, 307,
	308, 309, 310, 311, 312, 680, 1252, 0, 313, 1259,
	314, 1258, 0, 1269, 315, 316, 317, 318, 319, 320,
	1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322, 323,
	1245, 0, 1226, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235,
	1231, 1230, 1234, 350, 351, 352, 353, 354, 1262, 355,
	357, 1256, 1255, 1175, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 1247, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 1181, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 1270, 1271, 388, 1194, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 1254, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 1281, 397,
	398, 399, 1267, 1268, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 1277, 0, 1204, 410, 0,
	411, 412, 413, 414, 415, 416, 1240, 1241, 1244, 504,
	1283, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 0, 1282, 505, 427,
	1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285,
	430, 431, 432, 1286, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	1278, 1287, 444, 445, 1288, 0, 446, 447, 448, 449,
	450, 451, 454, 1233, 1232, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 1289, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 1290, 497, 485, 1172, 292, 1291, 499, 500,
	501, 502, 1195, 1243, 503, 1257, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 1292, 516, 1293, 1272, 517, 518, 1182,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	1273, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 1253, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 1294, 574, 575, 576, 577, 578, 1183, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 249, 597, 598, 596, 599, 600,
	601, 1236, 602, 603, 585, 586, 604, 605, 1295, 606,
	607, 608, 609, 610, 611, 612, 1251, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	1298, 622, 623, 624, 625, 1274, 629, 630, 631, 0,
	632, 633, 1169, 628, 619, 251, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 1263, 1264, 1265,
	1266, 0, 652, 0, 643, 644, 645, 646, 1275, 647,
	1276, 1193, 648, 649, 650, 651, 0, 653, 654, 0,
	1176, 655, 656, 658, 660, 661, 657, 659, 662, 1237,
	663, 0, 0, 664, 665, 666, 1740, 1260, 1297, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 0, 0,
	0, 243, 674, 675, 730, 676, 677, 678, 1173, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 1166,
	1167, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 2005,
	2003, 0, 0, 1197, 0, 0, 0, 0, 293, 294,
	296, 295, 297, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 2895, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 2900, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 2896, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 2897, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 653, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 726, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 0, 674, 675, 730,
	676, 677, 678, 1173, 0, 0, 0, 2810, 0, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 0, 1168, 0, 0,
	0, 0, 0, 0, 1166, 1167, 293, 294, 296, 295,
	297, 298, 299, 300, 1199, 301, 302, 0, 1197, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 1175, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1172, 292,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 1169, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	653, 654, 0, 1176, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 1166, 1167, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 2808, 0, 2807, 1197, 1215, 1187, 1188,
	1189, 1185, 1186, 1198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 294, 296, 295, 297, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	1239, 1203, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 1252, 0, 313,
	1259, 314, 1258, 0, 1269, 315, 316, 317, 318, 319,
	320, 1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 1262,
	355, 357, 1256, 1255, 1175, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 1247,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 1181, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 1194, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 1254, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 1267, 1268, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 1204, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 1172, 292, 1291, 499,
	500, 501, 502, 1195, 1243, 503, 1257, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	1182, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 1253, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 1183,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 1251, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 1298, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 1169, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 1263, 1264,
	1265, 1266, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 1193, 648, 649, 650, 651, 0, 653, 654,
	0, 1176, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 1260, 1297,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 677, 678, 1173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 0, 0, 0, 0, 0, 0,
	1166, 1167, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 2805, 0, 2804, 1197, 1215, 1187, 1188, 1189, 1185,
	1186, 1198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 296, 295, 297, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 355, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 415, 416, 1240, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 1291, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 653, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 1173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 1166, 1167,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 2802,
	0, 2801, 1197, 1215, 1187, 1188, 1189, 1185, 1186, 1198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 294, 296, 295, 297, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 1205, 1238, 1170,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	1175, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 1181, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1172, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 1182, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 1169,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 1176, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1168,
	0, 0, 0, 0, 0, 0, 1166, 1167, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 2799, 0, 1841,
	1197, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 294,
	296, 295, 297, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 0, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 0, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 653, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 726, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 1840, 0, 0, 0, 674, 675, 730,
	676, 677, 678, 1173, 0, 0, 0, 1162, 0, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 0, 1168, 0, 0,
	0, 0, 0, 0, 1166, 1167, 293, 294, 296, 295,
	297, 298, 299, 300, 1199, 301, 302, 0, 1197, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 1175, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1172, 292,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 1177, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 1169, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	653, 654, 0, 1176, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1173, 0, 0, 0, 0, 0, 1215, 1187, 1188,
	1189, 1185, 1186, 1198, 0, 1168, 0, 0, 0, 0,
	0, 0, 1166, 1167, 293, 294, 296, 295, 297, 298,
	299, 300, 1199, 301, 302, 0, 1197, 0, 0, 0,
	1239, 1203, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 1252, 0, 313,
	1259, 314, 1258, 0, 1269, 315, 316, 317, 318, 319,
	320, 1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 4993, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 1262,
	355, 357, 1256, 1255, 1175, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 1247,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 1181, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 1194, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 1254, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 1267, 1268, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 1204, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 1172, 292, 1291, 499,
	500, 501, 502, 1195, 1243, 503, 1257, 506, 507, 0,
	0, 508, 0, 509, 1177, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	1182, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 1253, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 1183,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 1251, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 1298, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 1169, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 1263, 1264,
	1265, 1266, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 1193, 648, 649, 650, 651, 0, 653, 654,
	0, 1176, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 1260, 1297,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 677, 678, 1173,
	0, 0, 0, 0, 0, 1215, 1187, 1188, 1189, 1185,
	1186, 1198, 0, 1168, 0, 0, 0, 0, 0, 0,
	1166, 1167, 293, 294, 296, 295, 297, 298, 299, 300,
	1199, 301, 302, 0, 1197, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 355, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 415, 416, 1240, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 2642, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 1291, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 2641, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 653, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 1173, 0, 0,
	0, 0, 0, 1215, 1187, 1188, 1189, 1185, 1186, 1198,
	0, 1168, 0, 0, 0, 0, 0, 0, 1166, 1167,
	293, 294, 296, 295, 297, 298, 299, 300, 1199, 301,
	302, 0, 1197, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 1205, 1238, 1170,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 4715, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	1175, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 1181, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1172, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	1177, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 1182, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 1169,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 1176, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1173, 0, 0, 0, 0,
	0, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 1168,
	0, 0, 0, 0, 0, 0, 1166, 1167, 293, 294,
	296, 295, 297, 298, 299, 300, 1199, 301, 302, 0,
	1197, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 0, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 1177, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 0, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 653, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 726, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 0, 674, 675, 730,
	676, 677, 678, 1173, 0, 0, 0, 0, 0, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 0, 1168, 0, 0,
	0, 0, 0, 0, 1166, 1167, 293, 294, 296, 295,
	297, 298, 299, 300, 1199, 301, 302, 0, 1197, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 1175, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1172, 4283,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 1169, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	653, 654, 0, 1176, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 1166, 1167, 2075, 1215, 1187, 1188, 1189, 1185,
	1186, 1198, 1199, 0, 0, 0, 1197, 0, 0, 0,
	0, 0, 293, 294, 296, 295, 297, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 355, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 415, 416, 1240, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 1291, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 653, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 3961, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 1173, 0, 0,
	0, 0, 0, 1215, 1187, 1188, 1189, 1185, 1186, 1198,
	0, 1168, 0, 0, 0, 0, 0, 0, 1166, 1167,
	293, 294, 296, 295, 297, 298, 299, 300, 1199, 301,
	302, 0, 1197, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 1205, 1238, 1170,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	1175, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 1181, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1172, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 1182, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 1169,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 1176, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1168,
	0, 0, 0, 0, 0, 0, 1166, 1167, 2075, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 1199, 0, 0, 0,
	1197, 0, 0, 0, 0, 0, 293, 294, 296, 295,
	297, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 1175, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	2900, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1172, 292,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 1169, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	653, 654, 0, 1176, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1173, 0, 0, 0, 0, 0, 1215, 1187, 1188,
	1189, 1185, 1186, 1198, 0, 1168, 0, 0, 0, 0,
	0, 0, 1166, 1167, 293, 294, 296, 295, 297, 298,
	299, 300, 1199, 301, 302, 0, 1197, 0, 0, 0,
	1239, 1203, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 1252, 0, 313,
	1259, 314, 1258, 0, 1269, 315, 316, 317, 318, 319,
	320, 1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 1262,
	355, 357, 1256, 1255, 1175, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 1247,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 1181, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 1194, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 1254, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 1267, 1268, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 1204, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 1172, 292, 1291, 499,
	500, 501, 502, 1195, 1243, 503, 1257, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	1182, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 1253, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 1183,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 1251, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 1298, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 1169, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 1263, 1264,
	1265, 1266, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 1193, 648, 649, 650, 651, 0, 653, 654,
	0, 1176, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 1260, 1297,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 677, 678, 1173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 0, 0, 0, 0, 0, 0,
	1166, 1167, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 2003, 0, 2905, 1197, 1215, 1187, 1188, 1189, 1185,
	1186, 1198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 296, 295, 297, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 355, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 415, 416, 1240, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 1291, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 653, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 1173, 0, 0,
	0, 2903, 0, 1215, 1187, 1188, 1189, 1185, 1186, 1198,
	0, 1168, 0, 0, 0, 0, 0, 0, 1166, 1167,
	293, 294, 296, 295, 297, 298, 299, 300, 1199, 301,
	302, 0, 1197, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 1205, 1238, 1170,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	1175, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 1181, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1172, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 1182, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 1169,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 1176, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1173, 0, 0, 0, 2891,
	0, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 1168,
	0, 0, 0, 0, 0, 0, 1166, 1167, 293, 294,
	296, 295, 297, 298, 299, 300, 1199, 301, 302, 0,
	1197, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 0, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 0, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 653, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 726, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 0, 674, 675, 730,
	676, 677, 678, 1173, 0, 0, 0, 2880, 0, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 0, 1168, 0, 0,
	0, 0, 0, 0, 1166, 1167, 293, 294, 296, 295,
	297, 298, 299, 300, 1199, 301, 302, 0, 1197, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 1175, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1172, 292,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 1169, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	653, 654, 0, 1176, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1173, 0, 0, 0, 2878, 0, 2869, 2876, 1188,
	1189, 1185, 1186, 1198, 0, 1168, 0, 0, 0, 0,
	0, 0, 1166, 1167, 293, 294, 296, 295, 297, 298,
	299, 300, 1199, 301, 302, 0, 1197, 0, 0, 0,
	1239, 1203, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 1252, 0, 313,
	1259, 314, 1258, 0, 1269, 315, 316, 317, 318, 319,
	320, 1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 1262,
	2872, 357, 1256, 1255, 1175, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 1247,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 1181, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 1194, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 1254, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 1267, 1268, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 1204, 410,
	0, 411, 412, 413, 414, 2873, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 2874, 464, 2871,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 1172, 292, 1291, 499,
	500, 501, 502, 1195, 1243, 503, 1257, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	1182, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 1253, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 1183,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 2875, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 1251, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 1298, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 1169, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 1263, 1264,
	1265, 1266, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 1193, 648, 649, 650, 651, 0, 653, 654,
	0, 1176, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 1260, 1297,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 2870, 678, 1173,
	0, 0, 0, 2866, 0, 2869, 2876, 1188, 1189, 1185,
	1186, 1198, 0, 1168, 0, 0, 0, 0, 0, 0,
	1166, 1167, 293, 294, 296, 295, 297, 298, 299, 300,
	1199, 301, 302, 0, 1197, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 2872, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 2873, 416, 1240, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 2874, 464, 2871, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 1291, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 2875, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 653, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 2870, 678, 1173, 0, 0,
	0, 0, 0, 1215, 1187, 1188, 1189, 1185, 1186, 1198,
	0, 1168, 0, 0, 0, 0, 0, 0, 1166, 1167,
	293, 294, 296, 295, 297, 298, 299, 300, 1199, 301,
	302, 0, 1197, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 1205, 1238, 1170,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	1175, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 1181, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1172, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 1182, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 1169,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 1176, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1168,
	0, 0, 0, 0, 0, 0, 1166, 1167, 0, 0,
	0, 0, 0, 0, 2011, 0, 1199, 0, 0, 0,
	1197, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 294,
	296, 295, 297, 298, 299, 300, 2621, 301, 302, 0,
	0, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 0, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 0, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 653, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 726, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 0, 674, 675, 730,
	676, 677, 678, 1173, 0, 0, 0, 2583, 0, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 0, 1168, 0, 0,
	0, 0, 0, 0, 1166, 1167, 293, 294, 296, 295,
	297, 298, 299, 300, 1199, 301, 302, 0, 1197, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 1175, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1172, 292,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 1169, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	653, 654, 0, 1176, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1173, 0, 0, 0, 2554, 0, 1215, 1187, 1188,
	1189, 1185, 1186, 1198, 0, 1168, 0, 0, 0, 0,
	0, 0, 1166, 1167, 293, 294, 296, 295, 297, 298,
	299, 300, 1199, 301, 302, 0, 1197, 0, 0, 0,
	1239, 1203, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 1252, 0, 313,
	1259, 314, 1258, 0, 1269, 315, 316, 317, 318, 319,
	320, 1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 1262,
	355, 357, 1256, 1255, 1175, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 1247,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 1181, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 1194, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 1254, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 1267, 1268, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 1204, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 1172, 292, 1291, 499,
	500, 501, 502, 1195, 1243, 503, 1257, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	1182, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 1253, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 1183,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 1251, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 1298, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 1169, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 1263, 1264,
	1265, 1266, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 1193, 648, 649, 650, 651, 0, 653, 654,
	0, 1176, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 1260, 1297,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 677, 678, 1173,
	0, 0, 0, 1846, 0, 1215, 1187, 1188, 1189, 1185,
	1186, 1198, 0, 1168, 0, 0, 0, 0, 0, 0,
	1166, 1167, 293, 294, 296, 295, 297, 298, 299, 300,
	1199, 301, 302, 0, 1197, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 355, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 415, 416, 1240, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 1291, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 653, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 1173, 0, 0,
	0, 1775, 0, 1215, 1187, 1188, 1189, 1185, 1186, 1198,
	0, 1168, 0, 0, 0, 0, 0, 0, 1166, 1167,
	293, 294, 296, 295, 297, 298, 299, 300, 1199, 301,
	302, 0, 1197, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 1205, 1238, 1170,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	1175, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 1181, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1172, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 1182, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 1169,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 1176, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1173, 0, 0, 0, 1770,
	0, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 1168,
	0, 0, 0, 0, 0, 0, 1166, 1167, 293, 294,
	296, 295, 297, 298, 299, 300, 1199, 301, 302, 0,
	1197, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 0, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 0, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 653, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 726, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 0, 674, 675, 730,
	676, 677, 678, 1173, 0, 0, 0, 1756, 0, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 0, 1168, 0, 0,
	0, 0, 0, 0, 1166, 1167, 293, 294, 296, 295,
	297, 298, 299, 300, 1199, 301, 302, 0, 1197, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 1175, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1172, 292,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 1169, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	653, 654, 0, 1176, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1173, 0, 0, 0, 1751, 0, 1215, 1187, 1188,
	1189, 1185, 1186, 1198, 0, 1168, 0, 0, 0, 0,
	0, 0, 1166, 1167, 293, 294, 296, 295, 297, 298,
	299, 300, 1199, 301, 302, 0, 1197, 0, 0, 0,
	1239, 1203, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 1252, 0, 313,
	1259, 314, 1258, 0, 1269, 315, 316, 317, 318, 319,
	320, 1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 1262,
	355, 357, 1256, 1255, 1175, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 1247,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 1181, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 1194, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 1254, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 1267, 1268, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 1204, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 1172, 292, 1291, 499,
	500, 501, 502, 1195, 1243, 503, 1257, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	1182, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 1253, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 1183,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 1251, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 1298, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 1169, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 1263, 1264,
	1265, 1266, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 1193, 648, 649, 650, 651, 0, 653, 654,
	0, 1176, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 1260, 1297,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 677, 678, 1173,
	0, 0, 0, 1660, 0, 1215, 1187, 1188, 1189, 1185,
	1186, 1198, 0, 1168, 0, 0, 0, 0, 0, 0,
	1166, 1167, 293, 294, 296, 295, 297, 298, 299, 300,
	1199, 301, 302, 0, 1197, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 355, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 415, 416, 1659, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 1291, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 653, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 1173, 0, 0,
	0, 1654, 0, 1215, 1187, 1188, 1189, 1185, 1186, 1198,
	0, 1168, 0, 0, 0, 0, 0, 0, 1166, 1167,
	293, 294, 296, 295, 297, 298, 299, 300, 1199, 301,
	302, 0, 1197, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 1205, 1238, 1170,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	1175, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 1181, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1653, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1172, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 1182, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 1169,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 1176, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1173, 0, 0, 0, 1647,
	0, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 1168,
	0, 0, 0, 0, 0, 0, 1166, 1167, 293, 294,
	296, 295, 297, 298, 299, 300, 1199, 301, 302, 0,
	1197, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 0, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 0, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 653, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 726, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 0, 674, 675, 730,
	676, 677, 678, 1173, 0, 0, 0, 1610, 0, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 0, 1168, 0, 0,
	0, 0, 0, 0, 1166, 1167, 293, 294, 296, 295,
	297, 298, 299, 300, 1199, 301, 302, 0, 1197, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 1175, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1172, 292,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 1169, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	653, 654, 0, 1176, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1173, 0, 0, 0, 1592, 0, 1215, 1187, 1188,
	1189, 1185, 1186, 1198, 0, 1168, 0, 0, 0, 0,
	0, 0, 1166, 1167, 293, 294, 296, 295, 297, 298,
	299, 300, 1199, 301, 302, 0, 1197, 0, 0, 0,
	1239, 1203, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 1252, 0, 313,
	1259, 314, 1258, 0, 1269, 315, 316, 317, 318, 319,
	320, 1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 1262,
	355, 357, 1256, 1255, 1175, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 1247,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 1181, 377, 378, 379, 381, 383, 380, 1596,
	384, 385, 386, 387, 1270, 1271, 388, 1194, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 1254, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 1267, 1268, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 1204, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 1172, 292, 1291, 499,
	500, 501, 502, 1195, 1243, 503, 1257, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	1182, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 1253, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 1597, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 1183,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 1251, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 1298, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 1169, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 1595, 641, 0, 642, 1263, 1264,
	1265, 1266, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 1193, 648, 649, 650, 651, 0, 653, 654,
	0, 1176, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 1260, 1297,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 677, 678, 1173,
	0, 0, 0, 1424, 0, 1215, 1187, 1188, 1189, 1185,
	1186, 1198, 0, 1168, 0, 0, 0, 0, 0, 0,
	1166, 1167, 293, 294, 296, 295, 297, 298, 299, 300,
	1199, 301, 302, 0, 1197, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 355, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 415, 416, 1240, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 1291, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 653, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 1173, 0, 0,
	0, 0, 0, 1215, 1187, 1188, 1189, 1185, 1186, 1198,
	0, 1168, 0, 0, 0, 0, 0, 0, 1166, 1167,
	293, 294, 296, 295, 297, 298, 299, 300, 1199, 301,
	302, 0, 1197, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 1205, 1238, 1170,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	1175, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 1181, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1172, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 1182, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 1169,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 1176, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1173, 0, 0, 0, 0,
	0, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 1168,
	0, 0, 0, 0, 0, 0, 1166, 1167, 293, 294,
	296, 295, 297, 298, 299, 300, 1199, 301, 302, 0,
	1197, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 0, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	5042, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 0, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 5041, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 726, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 0, 674, 675, 730,
	676, 677, 678, 1173, 0, 0, 0, 0, 0, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 0, 1168, 0, 0,
	0, 0, 0, 0, 1166, 1167, 293, 294, 296, 295,
	297, 298, 299, 300, 1199, 301, 302, 0, 1197, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 5040, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 1170, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 5042, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 1175, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 1172, 292,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 1169, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	5041, 654, 0, 1176, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1173, 0, 0, 0, 0, 0, 1215, 1187, 1188,
	1189, 1185, 1186, 1198, 0, 1168, 0, 0, 0, 0,
	0, 0, 1166, 1167, 293, 294, 296, 295, 297, 298,
	299, 300, 1199, 301, 302, 0, 1197, 0, 0, 0,
	1239, 1203, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 1252, 0, 313,
	1259, 314, 1258, 0, 1269, 315, 316, 317, 318, 319,
	320, 1205, 1238, 1170, 321, 1299, 1300, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 4643, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 1262,
	355, 357, 1256, 1255, 1175, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 1247,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 1181, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 1194, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 1254, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 1267, 1268, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 4644, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 1172, 292, 1291, 499,
	500, 501, 502, 1195, 1243, 503, 1257, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	1182, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 1253, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 4642, 578, 1183,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 1251, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 1298, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 1169, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 1263, 1264,
	1265, 1266, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 1193, 648, 649, 650, 651, 0, 653, 654,
	0, 1176, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 1260, 1297,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 677, 678, 1173,
	0, 0, 0, 0, 0, 1215, 1187, 1188, 1189, 3391,
	3392, 1198, 0, 1168, 0, 0, 0, 0, 0, 0,
	1166, 1167, 293, 294, 296, 295, 297, 298, 299, 300,
	1199, 301, 302, 0, 1197, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 355, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 415, 416, 1240, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 1291, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 653, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 1173, 0, 0,
	0, 0, 0, 1215, 1187, 1188, 1189, 3389, 3390, 1198,
	0, 1168, 0, 0, 0, 0, 0, 0, 1166, 1167,
	293, 294, 296, 295, 297, 298, 299, 300, 1199, 301,
	302, 0, 1197, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 1205, 1238, 1170,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	1175, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 1181, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 1172, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 1182, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 1169,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 1176, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1173, 0, 0, 0, 0,
	0, 1215, 1187, 1188, 1189, 1185, 1186, 1198, 0, 1168,
	0, 0, 0, 0, 0, 0, 1166, 1167, 293, 294,
	296, 295, 297, 298, 299, 300, 1199, 301, 302, 0,
	1197, 0, 0, 0, 1239, 1203, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 1252, 0, 313, 1259, 314, 1258, 0, 1269, 315,
	316, 317, 318, 319, 320, 1205, 1238, 1170, 321, 1299,
	1300, 687, 0, 322, 323, 1245, 0, 1226, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350, 351,
	352, 353, 354, 1262, 355, 357, 1256, 1255, 1175, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 1247, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 1181, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 1270, 1271,
	388, 1194, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 1254, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 1267, 1268, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	1277, 0, 1204, 410, 0, 411, 412, 413, 414, 415,
	416, 1240, 1241, 1244, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 291, 424, 425,
	426, 0, 1282, 505, 427, 1249, 1250, 0, 1210, 0,
	428, 429, 1284, 1242, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 1278, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 1233, 1232,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	1172, 292, 1291, 499, 500, 501, 502, 1195, 1243, 503,
	1257, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 1272, 517, 518, 1182, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 1273, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 1253, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 1183, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 1236, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 1251, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 1298, 622, 623, 624, 625,
	1274, 629, 630, 631, 0, 632, 633, 1169, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 1263, 1264, 1265, 1266, 0, 652, 0, 643,
	644, 645, 646, 1275, 647, 1276, 1193, 648, 649, 650,
	651, 0, 653, 654, 0, 1176, 655, 656, 658, 660,
	661, 657, 659, 662, 1237, 663, 0, 0, 664, 665,
	666, 726, 1260, 1297, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 0, 674, 675, 730,
	676, 677, 678, 1173, 0, 0, 0, 0, 0, 1215,
	1187, 1188, 1189, 1185, 1186, 1198, 0, 1168, 0, 0,
	0, 0, 0, 0, 2629, 2630, 293, 294, 296, 295,
	297, 298, 299, 300, 1199, 301, 302, 0, 1197, 0,
	0, 0, 1239, 1203, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 1252,
	0, 313, 1259, 314, 1258, 0, 1269, 315, 316, 317,
	318, 319, 320, 1205, 1238, 0, 321, 1299, 1300, 687,
	0, 322, 323, 1245, 0, 1226, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 1229,
	1227, 1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353,
	354, 1262, 355, 357, 1256, 1255, 0, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 1247, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 1181, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 1270, 1271, 388, 1194,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 1254,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 1267, 1268, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 1277, 0,
	1204, 410, 0, 411, 412, 413, 414, 415, 416, 1240,
	1241, 1244, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	1282, 505, 427, 1249, 1250, 0, 1210, 0, 428, 429,
	1284, 1242, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 1278, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 1233, 1232, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 0, 292,
	1291, 499, 500, 501, 502, 1195, 1243, 503, 1257, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 1272,
	517, 518, 1182, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 1273, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	1253, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 1183, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1236, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 1251,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 1298, 622, 623, 624, 625, 1274, 629,
	630, 631, 0, 632, 633, 0, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	1263, 1264, 1265, 1266, 0, 652, 0, 643, 644, 645,
	646, 1275, 647, 1276, 1193, 648, 649, 650, 651, 0,
	653, 654, 0, 0, 655, 656, 658, 660, 661, 657,
	659, 662, 1237, 663, 0, 0, 664, 665, 666, 726,
	1260, 1297, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 0, 0, 0, 0, 0, 0, 1215, 1187, 1188,
	1189, 1185, 1186, 1198, 0, 2888, 0, 0, 0, 0,
	0, 0, 2886, 2887, 293, 294, 296, 295, 297, 298,
	299, 300, 1199, 301, 302, 0, 1197, 0, 0, 0,
	1239, 1203, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 1252, 0, 313,
	1259, 314, 1258, 0, 1269, 315, 316, 317, 318, 319,
	320, 1205, 1238, 0, 321, 1299, 1300, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 1262,
	355, 357, 1256, 1255, 0, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 1247,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 1181, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 1194, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 1254, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 1267, 1268, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 1204, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 1249, 1250, 0, 1210, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 0, 292, 1291, 499,
	500, 501, 502, 1195, 1243, 503, 1257, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	510, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 1253, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 3384,
	3385, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 1251, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 1298, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 0, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 1263, 1264,
	1265, 1266, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 1193, 648, 649, 650, 651, 0, 653, 654,
	0, 0, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 1260, 1297,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 677, 678, 0,
	0, 0, 0, 0, 0, 1215, 1187, 1188, 1189, 1185,
	1186, 1198, 0, 0, 0, 0, 0, 0, 0, 0,
	2257, 2258, 293, 294, 296, 295, 297, 298, 299, 300,
	1199, 301, 302, 0, 1197, 0, 0, 0, 1239, 1203,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 0, 1252, 0, 313, 1259, 314,
	1258, 0, 1269, 315, 316, 317, 318, 319, 320, 1205,
	1238, 1170, 321, 1299, 1300, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 5042, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 1262, 355, 357,
	1256, 1255, 1175, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 1247, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	1181, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 1194, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 1254, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 1267, 1268, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 1204, 410, 0, 411,
	412, 413, 414, 415, 416, 1240, 1241, 1244, 504, 0,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 1249,
	1250, 0, 1210, 0, 428, 429, 0, 1242, 0, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 0, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 1172, 292, 0, 499, 500, 501,
	502, 1195, 1243, 503, 1257, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 1182, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 1253, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 1183, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 0, 606, 607,
	608, 609, 610, 611, 612, 1251, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 1298,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 1169, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 1263, 1264, 1265, 1266,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	1193, 648, 649, 650, 651, 0, 5041, 654, 0, 1176,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 726, 1260, 1297, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 0, 0, 0,
	0, 2907, 0, 1215, 1187, 1188, 1189, 1185, 1186, 1198,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 1167,
	293, 294, 296, 295, 297, 298, 299, 300, 1199, 301,
	302, 0, 1197, 0, 0, 0, 1239, 1203, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 1252, 0, 313, 1259, 314, 1258, 0,
	1269, 315, 316, 317, 318, 319, 320, 0, 1238, 0,
	321, 1299, 1300, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 1262, 355, 357, 1256, 1255,
	0, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 1247, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 691, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 1194, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 1254, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 1267,
	1268, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 1204, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 1249, 1250, 0,
	1210, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 0, 292, 1291, 499, 500, 501, 502, 1195,
	1243, 503, 1257, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 510, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 1253, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 1183, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 1251, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 1298, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 0,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 1263, 1264, 1265, 1266, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 1193, 648,
	649, 650, 651, 0, 653, 654, 0, 0, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 1260, 1297, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 0, 1622, 0, 1215, 1187,
	1188, 1189, 1185, 1186, 1198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 1199, 0, 0, 0,
	1197, 1239, 1203, 0, 0, 303, 0, 304, 305, 1279,
	306, 307, 308, 309, 310, 311, 312, 680, 1252, 0,
	313, 1259, 314, 1258, 0, 1269, 315, 316, 317, 318,
	319, 320, 0, 1238, 0, 321, 1299, 1300, 687, 0,
	322, 323, 1245, 0, 1226, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 1280, 347, 348, 349, 1229, 1227,
	1228, 1235, 1231, 1230, 1234, 350, 351, 352, 353, 354,
	1262, 355, 357, 1256, 1255, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	1247, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 1270, 1271, 388, 1194, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 1254, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	1281, 397, 398, 399, 1267, 1268, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 1277, 0, 1204,
	410, 0, 411, 412, 413, 414, 415, 416, 1240, 1241,
	1244, 504, 1283, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 0, 1282,
	505, 427, 1249, 1250, 0, 1210, 0, 428, 429, 1284,
	1242, 1285, 430, 431, 432, 1286, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 1278, 1287, 444, 445, 1288, 0, 446, 447,
	448, 449, 450, 451, 454, 1233, 1232, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 1289, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 1290, 497, 485, 0, 292, 1291,
	499, 500, 501, 502, 1195, 1243, 503, 1257, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 1292, 516, 1293, 1272, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 1273, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 1253,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 1294, 574, 575, 576, 577, 578,
	1183, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 1236, 602, 603, 585, 586, 604, 605,
	1295, 606, 607, 608, 609, 610, 611, 612, 1251, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 1298, 622, 623, 624, 625, 1274, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 1263,
	1264, 1265, 1266, 0, 652, 0, 643, 644, 645, 646,
	1275, 647, 1276, 1193, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 1237, 663, 0, 0, 664, 665, 666, 726, 1260,
	1297, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	0, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 1159, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 294, 296, 295, 297, 298, 299, 300, 0, 301,
	302, 1199, 0, 0, 0, 1197, 1239, 0, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 681, 0, 313, 682, 314, 683, 0,
	684, 315, 316, 317, 318, 319, 320, 0, 1238, 0,
	321, 685, 686, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 0, 355, 357, 689, 690,
	0, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 691, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 0, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 694, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 695,
	696, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 698, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 702, 703, 0,
	704, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 1324, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 0, 292, 1291, 499, 500, 501, 502, 0,
	1243, 503, 708, 506, 507, 0, 0, 508, 0, 509,
	0, 1330, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 510, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 715, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 716, 1332, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 249, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 717, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 718, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 0,
	628, 619, 251, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 720, 721, 722, 723, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 0, 648,
	649, 650, 651, 0, 653, 654, 0, 0, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 1740, 727, 728, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 243, 674,
	675, 730, 676, 677, 678, 1338, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 296, 295, 297, 298, 299, 300,
	0, 301, 302, 0, 1328, 0, 2099, 0, 1239, 0,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 681, 0, 313, 682, 314,
	683, 0, 684, 315, 316, 317, 318, 319, 320, 0,
	1238, 0, 321, 685, 686, 687, 0, 322, 323, 1245,
	0, 1226, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 1229, 1227, 1228, 1235, 1231,
	1230, 1234, 350, 351, 352, 353, 354, 0, 355, 357,
	689, 690, 0, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	691, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 1270, 1271, 388, 0, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 694, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 695, 696, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 1277, 0, 698, 410, 0, 411,
	412, 413, 414, 415, 416, 1240, 1241, 1244, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 1282, 505, 427, 702,
	703, 0, 704, 0, 428, 429, 1284, 1242, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 1324, 440, 442, 441, 0, 443, 1278,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 1233, 1232, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 0, 292, 1291, 499, 500, 501,
	502, 0, 1243, 503, 708, 506, 507, 0, 0, 508,
	0, 509, 0, 1330, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 1272, 517, 518, 510, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 1273,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 715, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 716, 1332, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 249, 597, 598, 596, 599, 600, 601,
	1236, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 717, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 718,
	622, 623, 624, 625, 1274, 629, 630, 631, 0, 632,
	633, 0, 628, 619, 251, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 720, 721, 722, 723,
	0, 652, 0, 643, 644, 645, 646, 1275, 647, 1276,
	0, 648, 649, 650, 651, 0, 653, 654, 0, 0,
	655, 656, 658, 660, 661, 657, 659, 662, 1237, 663,
	0, 0, 664, 665, 666, 1740, 727, 728, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	243, 674, 675, 730, 676, 677, 678, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3548, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 2099, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 1239, 0, 0, 0, 303,
	0, 304, 305, 1279, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 1238, 0, 321,
	685, 686, 687, 0, 322, 323, 1245, 0, 1226, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 1280, 347,
	348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 1270,
	1271, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 1281, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 1277, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 1240, 1241, 1244, 504, 1283, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 1282, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 1284, 1242, 1285, 430, 431, 432, 1286,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	1324, 440, 442, 441, 0, 443, 1278, 1287, 444, 445,
	1288, 0, 446, 447, 448, 449, 450, 451, 454, 1233,
	1232, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	1289, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 1290, 497,
	485, 0, 292, 1291, 499, 500, 501, 502, 0, 1243,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	1330, 511, 512, 513, 0, 0, 514, 515, 709, 1292,
	516, 1293, 1272, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 1273, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 1294, 574,
	575, 576, 577, 578, 716, 1332, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 1236, 602, 603,
	585, 586, 604, 605, 1295, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 1274, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 1275, 647, 1276, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 1237, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 0, 1320, 0, 1338, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 294, 296, 295, 297, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	1239, 0, 0, 1328, 303, 1326, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 681, 0, 313,
	682, 314, 683, 0, 684, 315, 316, 317, 318, 319,
	320, 0, 1238, 0, 321, 685, 686, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 0,
	355, 357, 689, 690, 0, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 691, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 0, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 694, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 695, 696, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 698, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 702, 703, 0, 704, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 1324, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 0, 292, 1291, 499,
	500, 501, 502, 0, 1243, 503, 708, 506, 507, 0,
	0, 508, 0, 509, 0, 1330, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	510, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 715, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 716,
	1332, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 717, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 718, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 0, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 720, 721,
	722, 723, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 0, 648, 649, 650, 651, 0, 653, 654,
	0, 0, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 727, 728,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 1338, 674, 675, 730, 676, 677, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 1239, 0, 0, 1328, 303,
	1326, 304, 305, 1279, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 1238, 0, 321,
	685, 686, 687, 0, 322, 323, 1245, 0, 1226, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 1280, 347,
	348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 1270,
	1271, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 1281, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 1277, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 1240, 1241, 1244, 504, 1283, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 1282, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 1284, 1242, 1285, 430, 431, 432, 1286,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	1324, 440, 442, 441, 0, 443, 1278, 1287, 444, 445,
	1288, 0, 446, 447, 448, 449, 450, 451, 454, 1233,
	1232, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	1289, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 1290, 497,
	485, 0, 292, 1291, 499, 500, 501, 502, 0, 1243,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	1330, 511, 512, 513, 0, 0, 514, 515, 709, 1292,
	516, 1293, 1272, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 1273, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 1294, 574,
	575, 576, 577, 578, 716, 1332, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 1236, 602, 603,
	585, 586, 604, 605, 1295, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 1274, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 1275, 647, 1276, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 1237, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 0, 0, 0, 1338, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 294, 296, 295, 297, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	1239, 0, 0, 1328, 303, 1326, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 681, 0, 313,
	682, 314, 683, 0, 684, 315, 316, 317, 318, 319,
	320, 0, 1238, 0, 321, 685, 686, 687, 0, 322,
	323, 1245, 0, 1226, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 1229, 1227, 1228,
	1235, 1231, 1230, 1234, 350, 351, 352, 353, 354, 0,
	355, 357, 689, 690, 0, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 691, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 1270, 1271, 388, 0, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 694, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 695, 696, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 1277, 0, 698, 410,
	0, 411, 412, 413, 414, 415, 416, 1240, 1241, 1244,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 291, 424, 425, 426, 0, 1282, 505,
	427, 702, 703, 0, 704, 0, 428, 429, 1284, 1242,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 1278, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 1233, 1232, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 0, 292, 1291, 499,
	500, 501, 502, 0, 1243, 503, 708, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 1272, 517, 518,
	510, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 1273, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 715, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 716,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 1236, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 717, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 718, 622, 623, 624, 625, 1274, 629, 630, 631,
	0, 632, 633, 0, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 720, 721,
	722, 723, 0, 652, 0, 643, 644, 645, 646, 1275,
	647, 1276, 0, 648, 649, 650, 651, 0, 653, 654,
	0, 0, 655, 656, 658, 660, 661, 657, 659, 662,
	1237, 663, 0, 0, 664, 665, 666, 726, 727, 728,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 1338, 674, 675, 730, 676, 677, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 1239, 0, 0, 0, 303,
	4456, 304, 305, 1279, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 1238, 0, 321,
	685, 686, 687, 0, 322, 323, 1245, 0, 1226, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 1280, 347,
	348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 1270,
	1271, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 1281, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 1277, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 1240, 1241, 1244, 504, 1283, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 1282, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 1284, 1242, 1285, 430, 431, 432, 1286,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 1278, 1287, 444, 445,
	1288, 0, 446, 447, 448, 449, 450, 451, 454, 1233,
	1232, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	1289, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 1290, 497,
	485, 0, 292, 1291, 499, 500, 501, 502, 0, 1243,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 1292,
	516, 1293, 1272, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 1273, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 1294, 574,
	575, 576, 577, 578, 716, 1332, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 1236, 602, 603,
	585, 586, 604, 605, 1295, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 1274, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 1275, 647, 1276, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 1237, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 287, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 2733, 2734, 2735, 2752, 2753, 2754,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 2755, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 1995, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	1980, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	2745, 0, 333, 334, 335, 332, 336, 0, 337, 2741,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 2746, 2747, 2748,
	2749, 389, 390, 391, 694, 0, 0, 2740, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 2750, 2751, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 2743, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 2744, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	1979, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 0, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 1159, 0, 1617, 2730, 2731, 2732,
	2756, 2742, 2736, 0, 2738, 2739, 2737, 2724, 2725, 2726,
	2727, 2728, 2729, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 1279, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 1581, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 1280, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 1281, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	1283, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 1282, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 1284, 705, 1285,
	430, 431, 432, 1286, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 1287, 444, 445, 1288, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 1289, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 1290, 497, 485, 0, 0, 1291, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 1292, 516, 1293, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 1294, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 249, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 1295, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 251, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 1740, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 0, 0,
	0, 243, 674, 675, 730, 676, 677, 678, 0, 1737,
	244, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 294,
	296, 295, 297, 298, 299, 300, 0, 301, 302, 201,
	0, 0, 0, 0, 679, 0, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 681, 0, 313, 682, 314, 683, 0, 684, 315,
	316, 317, 318, 319, 320, 0, 0, 0, 321, 685,
	686, 687, 0, 322, 323, 688, 0, 1581, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 0, 0, 0, 0, 0, 0, 0, 350, 351,
	352, 353, 354, 0, 355, 357, 689, 690, 0, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 691, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 692, 693,
	388, 0, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 694, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 695, 696, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	697, 0, 698, 410, 0, 411, 412, 413, 414, 415,
	416, 699, 700, 701, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 0, 424, 425,
	426, 0, 1282, 505, 427, 702, 703, 0, 704, 0,
	428, 429, 1284, 705, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 706, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 0, 0,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	0, 0, 1291, 499, 500, 501, 502, 0, 707, 503,
	708, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 710, 517, 518, 510, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 713, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 715, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 716, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 249,
	597, 598, 596, 599, 600, 601, 0, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 717, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 718, 622, 623, 624, 625,
	719, 629, 630, 631, 0, 632, 633, 0, 628, 619,
	251, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 720, 721, 722, 723, 0, 652, 0, 643,
	644, 645, 646, 724, 647, 725, 0, 648, 649, 650,
	651, 0, 653, 654, 0, 0, 655, 656, 658, 660,
	661, 657, 659, 662, 0, 663, 0, 0, 664, 665,
	666, 1740, 727, 728, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 0, 0, 243, 674, 675, 730,
	676, 677, 678, 1617, 1616, 244, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 294, 296, 295, 297, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 201, 0, 679, 0, 0, 0,
	303, 0, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 681, 0, 313, 682, 314, 683, 0,
	684, 315, 316, 317, 318, 319, 320, 0, 0, 0,
	321, 685, 686, 687, 0, 322, 323, 688, 0, 1581,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 0, 0, 0, 0, 0, 0, 0,
	350, 351, 352, 353, 354, 0, 355, 357, 689, 690,
	0, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 691, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	692, 693, 388, 0, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 694, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 695,
	696, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 697, 0, 698, 410, 0, 411, 412, 413,
	414, 415, 416, 699, 700, 701, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 0,
	424, 425, 426, 0, 1282, 505, 427, 702, 703, 0,
	704, 0, 428, 429, 1284, 705, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 706, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	0, 0, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 0, 0, 1291, 499, 500, 501, 502, 0,
	707, 503, 708, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 710, 517, 518, 510, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 713, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 715, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 716, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 0, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 717, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 718, 622, 623,
	624, 625, 719, 629, 630, 631, 0, 632, 633, 0,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 720, 721, 722, 723, 0, 652,
	0, 643, 644, 645, 646, 724, 647, 725, 0, 648,
	649, 650, 651, 0, 653, 654, 0, 0, 655, 656,
	658, 660, 661, 657, 659, 662, 0, 663, 0, 0,
	664, 665, 666, 726, 727, 728, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 0, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 1617, 1616, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 296, 295, 297, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 1764, 0, 679, 0,
	0, 0, 303, 0, 304, 305, 1279, 306, 307, 308,
	309, 310, 311, 312, 680, 681, 0, 313, 682, 314,
	683, 0, 684, 315, 316, 317, 318, 319, 320, 0,
	0, 0, 321, 685, 686, 687, 0, 322, 323, 688,
	0, 1581, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 1280, 347, 348, 349, 0, 0, 0, 0, 0,
	0, 0, 350, 351, 352, 353, 354, 0, 355, 357,
	689, 690, 0, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	691, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 692, 693, 388, 0, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 694, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 1281, 397, 398,
	399, 695, 696, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 697, 0, 698, 410, 0, 411,
	412, 413, 414, 415, 416, 699, 700, 701, 504, 1283,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 0, 424, 425, 426, 0, 1282, 505, 427, 702,
	703, 0, 704, 0, 428, 429, 1284, 705, 1285, 430,
	431, 432, 1286, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 706,
	1287, 444, 445, 1288, 0, 446, 447, 448, 449, 450,
	451, 454, 0, 0, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 1289, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 1290, 497, 485, 0, 0, 1291, 499, 500, 501,
	502, 0, 707, 503, 708, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 1292, 516, 1293, 710, 517, 518, 510, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 713,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 715, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 1294, 574, 575, 576, 577, 578, 716, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	0, 602, 603, 585, 586, 604, 605, 1295, 606, 607,
	608, 609, 610, 611, 612, 717, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 718,
	622, 623, 624, 625, 719, 629, 630, 631, 0, 632,
	633, 0, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 720, 721, 722, 723,
	0, 652, 0, 643, 644, 645, 646, 724, 647, 725,
	0, 648, 649, 650, 651, 0, 653, 654, 0, 0,
	655, 656, 658, 660, 661, 657, 659, 662, 0, 663,
	0, 0, 664, 665, 666, 726, 727, 728, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 1617, 1616, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 294, 296, 295, 297, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 3875, 0,
	679, 0, 0, 0, 303, 0, 304, 305, 1279, 306,
	307, 308, 309, 310, 311, 312, 680, 681, 0, 313,
	682, 314, 683, 0, 684, 315, 316, 317, 318, 319,
	320, 0, 0, 0, 321, 685, 686, 687, 0, 322,
	323, 688, 0, 1581, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 1280, 347, 348, 349, 0, 0, 0,
	0, 0, 0, 0, 350, 351, 352, 353, 354, 0,
	355, 357, 689, 690, 0, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 691, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 692, 693, 388, 0, 290, 0,
	0, 0, 0, 0, 389, 390, 391, 694, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 1281,
	397, 398, 399, 695, 696, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 697, 0, 698, 410,
	0, 411, 412, 413, 414, 415, 416, 699, 700, 701,
	504, 1283, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 0, 424, 425, 426, 0, 1282, 505,
	427, 702, 703, 0, 704, 0, 428, 429, 1284, 705,
	1285, 430, 431, 432, 1286, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 706, 1287, 444, 445, 1288, 0, 446, 447, 448,
	449, 450, 451, 454, 0, 0, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 1289, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 1290, 497, 485, 0, 0, 1291, 499,
	500, 501, 502, 0, 707, 503, 708, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 1292, 516, 1293, 710, 517, 518,
	510, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 713, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 715, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 2494, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 1294, 574, 575, 576, 577, 578, 716,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 0, 602, 603, 585, 586, 604, 605, 1295,
	606, 607, 608, 609, 610, 611, 612, 717, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 718, 622, 623, 624, 625, 719, 629, 630, 631,
	0, 632, 633, 0, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 720, 721,
	722, 723, 0, 652, 0, 643, 644, 645, 646, 724,
	647, 725, 0, 648, 649, 650, 651, 0, 653, 654,
	0, 0, 655, 656, 658, 660, 661, 657, 659, 662,
	0, 663, 0, 0, 664, 665, 666, 726, 727, 728,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	0, 0, 0, 674, 675, 730, 676, 677, 678, 1617,
	2403, 0, 0, 0, 0, 2404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 294, 296, 295,
	297, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	1764, 0, 679, 0, 0, 0, 303, 0, 304, 305,
	1279, 306, 307, 308, 309, 310, 311, 312, 680, 681,
	0, 313, 682, 314, 683, 0, 684, 315, 316, 317,
	318, 319, 320, 0, 0, 0, 321, 685, 686, 687,
	0, 322, 323, 688, 0, 1581, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 1280, 347, 348, 349, 0,
	0, 0, 0, 0, 0, 0, 350, 351, 352, 353,
	354, 0, 355, 357, 689, 690, 0, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 691, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 692, 693, 388, 0,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 694,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 1281, 397, 398, 399, 695, 696, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 697, 0,
	698, 410, 0, 411, 412, 413, 414, 415, 416, 699,
	700, 701, 504, 1283, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 0, 424, 425, 426, 0,
	1282, 505, 427, 702, 703, 0, 704, 0, 428, 429,
	1284, 705, 1285, 430, 431, 432, 1286, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 2402, 442,
	441, 0, 443, 706, 1287, 444, 445, 1288, 0, 446,
	447, 448, 449, 450, 451, 454, 0, 0, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 1289, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 1290, 497, 485, 0, 0,
	1291, 499, 500, 501, 502, 0, 707, 503, 708, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 1292, 516, 1293, 710,
	517, 518, 510, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 713, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	715, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 1294, 574, 575, 576, 577,
	578, 716, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 0, 602, 603, 585, 586, 604,
	605, 1295, 606, 607, 608, 609, 610, 611, 612, 717,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 718, 622, 623, 624, 625, 719, 629,
	630, 631, 0, 632, 633, 0, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	720, 721, 722, 723, 0, 652, 0, 643, 644, 645,
	646, 724, 647, 725, 0, 648, 649, 650, 651, 0,
	653, 654, 0, 0, 655, 656, 658, 660, 661, 657,
	659, 662, 0, 663, 0, 0, 664, 665, 666, 726,
	727, 728, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 0, 0, 0, 674, 675, 730, 676, 677,
	678, 1617, 1616, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 294,
	296, 295, 297, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 1764, 0, 679, 0, 0, 0, 303, 0,
	304, 305, 1279, 306, 307, 308, 309, 310, 311, 312,
	680, 681, 0, 313, 682, 314, 683, 0, 684, 315,
	316, 317, 318, 319, 320, 0, 0, 0, 321, 685,
	686, 687, 0, 322, 323, 688, 0, 1581, 0, 324,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 333,
	334, 335, 332, 336, 0, 337, 0, 338, 339, 340,
	341, 342, 343, 0, 344, 345, 346, 1280, 347, 348,
	349, 0, 0, 0, 0, 0, 0, 0, 350, 351,
	352, 353, 354, 0, 355, 357, 689, 690, 0, 360,
	356, 358, 0, 361, 359, 362, 0, 363, 364, 365,
	0, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 691, 377, 378, 379,
	381, 383, 380, 382, 384, 385, 386, 387, 692, 693,
	388, 0, 290, 0, 0, 0, 0, 0, 389, 390,
	391, 694, 0, 0, 0, 392, 0, 393, 394, 395,
	0, 396, 0, 1281, 397, 398, 399, 695, 696, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	697, 0, 698, 410, 0, 411, 412, 413, 414, 415,
	416, 699, 700, 701, 504, 1283, 417, 418, 0, 419,
	420, 421, 422, 423, 0, 0, 0, 0, 424, 425,
	426, 0, 1282, 505, 427, 702, 703, 0, 704, 0,
	428, 429, 1284, 705, 1285, 430, 431, 432, 1286, 433,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	440, 442, 441, 0, 443, 706, 1287, 444, 445, 1288,
	0, 446, 447, 448, 449, 450, 451, 454, 0, 0,
	452, 453, 455, 456, 0, 457, 458, 460, 463, 459,
	461, 462, 464, 477, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 479, 0, 478, 1289,
	480, 481, 482, 483, 484, 491, 493, 494, 489, 490,
	492, 495, 496, 498, 486, 487, 488, 1290, 497, 485,
	0, 0, 1291, 499, 500, 501, 502, 0, 707, 503,
	708, 506, 507, 0, 0, 508, 0, 509, 0, 0,
	511, 512, 513, 0, 0, 514, 515, 709, 1292, 516,
	1293, 710, 517, 518, 510, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 0, 528, 529, 711, 530, 531,
	532, 712, 533, 534, 535, 713, 536, 714, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	547, 548, 715, 549, 550, 552, 551, 553, 0, 554,
	0, 555, 556, 557, 0, 0, 0, 0, 0, 558,
	559, 561, 0, 562, 563, 564, 565, 560, 566, 567,
	568, 569, 570, 0, 571, 572, 573, 1294, 574, 575,
	576, 577, 578, 716, 579, 0, 580, 581, 588, 589,
	590, 582, 583, 584, 591, 592, 593, 594, 595, 0,
	597, 598, 596, 599, 600, 601, 0, 602, 603, 585,
	586, 604, 605, 1295, 606, 607, 608, 609, 610, 611,
	612, 717, 0, 613, 0, 614, 615, 616, 617, 618,
	620, 587, 621, 626, 627, 718, 622, 623, 624, 625,
	719, 629, 630, 631, 0, 632, 633, 0, 628, 619,
	0, 634, 635, 636, 637, 638, 639, 0, 640, 641,
	0, 642, 720, 721, 722, 723, 0, 652, 0, 643,
	644, 645, 646, 724, 647, 725, 0, 648, 649, 650,
	651, 0, 653, 654, 0, 0, 655, 656, 658, 660,
	661, 657, 659, 662, 0, 663, 0, 0, 664, 665,
	666, 726, 727, 728, 0, 668, 667, 669, 670, 671,
	729, 672, 673, 0, 1159, 0, 287, 674, 675, 730,
	676, 677, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 1746, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 249, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 251, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 1740, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 287, 0,
	0, 243, 674, 675, 730, 676, 677, 678, 0, 0,
	244, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 201,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 292, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 3164, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 2113, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 287, 0, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 5209, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 292, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 0, 287, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 296, 295, 297, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 303, 3828, 304, 305, 0, 306, 307, 308,
	309, 310, 311, 312, 680, 681, 0, 313, 682, 314,
	683, 0, 684, 315, 316, 317, 318, 319, 320, 0,
	0, 0, 321, 685, 686, 687, 0, 322, 323, 688,
	0, 0, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 349, 0, 0, 0, 0, 0,
	0, 0, 350, 351, 352, 353, 354, 0, 355, 357,
	689, 690, 0, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	691, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 692, 693, 388, 0, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 694, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 0, 397, 398,
	399, 695, 696, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 697, 0, 698, 410, 0, 411,
	412, 413, 414, 415, 416, 699, 700, 701, 504, 0,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 0, 505, 427, 702,
	703, 0, 704, 0, 428, 429, 0, 705, 0, 430,
	431, 432, 0, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 706,
	0, 444, 445, 0, 0, 446, 447, 448, 449, 450,
	451, 454, 0, 0, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 0, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 0, 497, 485, 0, 292, 0, 499, 500, 501,
	502, 0, 707, 503, 708, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 0, 516, 0, 710, 517, 518, 510, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 713,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 715, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 0, 574, 575, 576, 577, 578, 716, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	0, 602, 603, 585, 586, 604, 605, 0, 606, 607,
	608, 609, 610, 611, 612, 717, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 718,
	622, 623, 624, 625, 719, 629, 630, 631, 0, 632,
	633, 0, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 720, 721, 722, 723,
	0, 652, 0, 643, 644, 645, 646, 724, 647, 725,
	0, 648, 649, 650, 651, 0, 653, 654, 0, 0,
	655, 656, 658, 660, 661, 657, 659, 662, 0, 663,
	0, 0, 664, 665, 666, 726, 727, 728, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 287, 0,
	0, 674, 675, 730, 676, 677, 678, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 1734, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	0, 0, 0, 1338, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 294, 296, 295, 297, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 1239, 0, 0, 0,
	303, 3285, 304, 305, 1279, 306, 307, 308, 309, 310,
	311, 312, 680, 681, 0, 313, 682, 314, 683, 0,
	684, 315, 316, 317, 318, 319, 320, 0, 1238, 0,
	321, 685, 686, 687, 0, 322, 323, 1245, 0, 1226,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 333, 334, 335, 332, 336, 0, 337, 0, 338,
	339, 340, 341, 342, 343, 0, 344, 345, 346, 1280,
	347, 348, 349, 1229, 1227, 1228, 1235, 1231, 1230, 1234,
	350, 351, 352, 353, 354, 0, 355, 357, 689, 690,
	0, 360, 356, 358, 0, 361, 359, 362, 0, 363,
	364, 365, 0, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 691, 377,
	378, 379, 381, 383, 380, 382, 384, 385, 386, 387,
	1270, 1271, 388, 0, 290, 0, 0, 0, 0, 0,
	389, 390, 391, 694, 0, 0, 0, 392, 0, 393,
	394, 395, 0, 396, 0, 1281, 397, 398, 399, 695,
	696, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 1277, 0, 698, 410, 0, 411, 412, 413,
	414, 415, 416, 1240, 1241, 1244, 504, 1283, 417, 418,
	0, 419, 420, 421, 422, 423, 0, 0, 0, 291,
	424, 425, 426, 0, 1282, 505, 427, 702, 703, 0,
	704, 0, 428, 429, 1284, 1242, 1285, 430, 431, 432,
	1286, 433, 0, 0, 0, 434, 435, 436, 437, 438,
	439, 0, 440, 442, 441, 0, 443, 1278, 1287, 444,
	445, 1288, 0, 446, 447, 448, 449, 450, 451, 454,
	1233, 1232, 452, 453, 455, 456, 0, 457, 458, 460,
	463, 459, 461, 462, 464, 477, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 479, 0,
	478, 1289, 480, 481, 482, 483, 484, 491, 493, 494,
	489, 490, 492, 495, 496, 498, 486, 487, 488, 1290,
	497, 485, 0, 292, 1291, 499, 500, 501, 502, 0,
	1243, 503, 708, 506, 507, 0, 0, 508, 0, 509,
	0, 0, 511, 512, 513, 0, 0, 514, 515, 709,
	1292, 516, 1293, 1272, 517, 518, 510, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 0, 528, 529, 711,
	530, 531, 532, 712, 533, 534, 535, 1273, 536, 714,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 547, 548, 715, 549, 550, 552, 551, 553,
	0, 554, 0, 555, 556, 557, 0, 0, 0, 0,
	0, 558, 559, 561, 0, 562, 563, 564, 565, 560,
	566, 567, 568, 569, 570, 0, 571, 572, 573, 1294,
	574, 575, 576, 577, 578, 716, 579, 0, 580, 581,
	588, 589, 590, 582, 583, 584, 591, 592, 593, 594,
	595, 0, 597, 598, 596, 599, 600, 601, 1236, 602,
	603, 585, 586, 604, 605, 1295, 606, 607, 608, 609,
	610, 611, 612, 717, 0, 613, 0, 614, 615, 616,
	617, 618, 620, 587, 621, 626, 627, 718, 622, 623,
	624, 625, 1274, 629, 630, 631, 0, 632, 633, 0,
	628, 619, 0, 634, 635, 636, 637, 638, 639, 0,
	640, 641, 0, 642, 720, 721, 722, 723, 0, 652,
	0, 643, 644, 645, 646, 1275, 647, 1276, 0, 648,
	649, 650, 651, 0, 653, 654, 0, 0, 655, 656,
	658, 660, 661, 657, 659, 662, 1237, 663, 0, 0,
	664, 665, 666, 726, 727, 728, 0, 668, 667, 669,
	670, 671, 729, 672, 673, 287, 0, 0, 0, 674,
	675, 730, 676, 677, 678, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 296, 295, 297, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 303, 0, 304, 305, 0, 306, 307, 308,
	309, 310, 311, 312, 680, 681, 0, 313, 682, 314,
	683, 0, 684, 315, 316, 317, 318, 319, 320, 0,
	0, 0, 321, 685, 686, 687, 0, 322, 323, 688,
	0, 0, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 349, 0, 0, 0, 0, 0,
	0, 0, 350, 351, 352, 353, 354, 0, 355, 357,
	689, 690, 0, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	691, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 692, 693, 388, 0, 0, 0, 0, 0,
	0, 0, 389, 390, 391, 694, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 0, 397, 398,
	399, 695, 696, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 697, 0, 698, 410, 0, 411,
	412, 413, 414, 415, 416, 699, 700, 701, 504, 0,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 0, 424, 425, 426, 0, 0, 505, 427, 702,
	703, 0, 704, 0, 428, 429, 0, 705, 0, 430,
	431, 432, 0, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 706,
	0, 444, 445, 0, 0, 446, 447, 448, 449, 450,
	451, 454, 0, 0, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 0, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 0, 497, 485, 0, 0, 0, 499, 500, 501,
	502, 0, 707, 503, 708, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 0, 516, 0, 710, 517, 518, 510, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 713,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 715, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 0, 574, 575, 576, 577, 578, 716, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	0, 602, 603, 585, 586, 604, 605, 0, 606, 607,
	608, 609, 610, 611, 612, 717, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 718,
	622, 623, 624, 625, 719, 629, 630, 631, 0, 632,
	633, 0, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 720, 721, 722, 723,
	0, 652, 0, 643, 644, 645, 646, 724, 647, 725,
	0, 648, 649, 650, 651, 0, 653, 654, 0, 0,
	655, 656, 658, 660, 661, 657, 659, 662, 0, 663,
	0, 0, 664, 665, 666, 726, 727, 728, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 287, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 0, 0, 0,
	0, 0, 0, 0, 293, 294, 296, 295, 297, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 303, 0, 304, 305, 3986, 306,
	307, 308, 309, 310, 311, 312, 680, 681, 0, 313,
	682, 314, 683, 0, 684, 315, 316, 317, 318, 319,
	320, 0, 0, 0, 321, 685, 686, 687, 0, 322,
	323, 688, 0, 0, 0, 324, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 333, 334, 335, 332, 336,
	0, 337, 0, 338, 339, 340, 341, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 349, 0, 0, 0,
	0, 0, 0, 0, 350, 351, 352, 353, 354, 0,
	355, 357, 689, 690, 0, 360, 356, 358, 0, 361,
	359, 362, 0, 363, 364, 365, 0, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 691, 377, 378, 379, 381, 383, 380, 382,
	384, 385, 386, 387, 692, 693, 388, 0, 0, 0,
	0, 0, 0, 0, 389, 390, 391, 694, 0, 0,
	0, 392, 0, 393, 394, 395, 0, 396, 0, 0,
	397, 398, 399, 695, 696, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 697, 0, 698, 410,
	0, 411, 412, 413, 414, 415, 416, 699, 700, 701,
	504, 0, 417, 418, 0, 419, 420, 421, 422, 423,
	0, 0, 0, 0, 424, 425, 426, 0, 0, 505,
	427, 702, 703, 0, 704, 0, 428, 429, 0, 705,
	0, 430, 431, 432, 0, 433, 0, 0, 0, 434,
	435, 436, 437, 438, 439, 0, 440, 442, 441, 0,
	443, 706, 0, 444, 445, 0, 0, 446, 447, 448,
	449, 450, 451, 454, 0, 0, 452, 453, 455, 456,
	0, 457, 458, 460, 463, 459, 461, 462, 464, 477,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 479, 0, 478, 0, 480, 481, 482, 483,
	484, 491, 493, 494, 489, 490, 492, 495, 496, 498,
	486, 487, 488, 0, 497, 485, 0, 0, 0, 499,
	500, 501, 502, 0, 707, 503, 708, 506, 507, 0,
	0, 508, 0, 509, 0, 0, 511, 512, 513, 0,
	0, 514, 515, 709, 0, 516, 0, 710, 517, 518,
	510, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	0, 528, 529, 711, 530, 531, 532, 712, 533, 534,
	535, 713, 536, 714, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 547, 548, 715, 549,
	550, 552, 551, 553, 0, 554, 0, 555, 556, 557,
	0, 0, 0, 0, 0, 558, 559, 561, 0, 562,
	563, 564, 565, 560, 566, 567, 568, 569, 570, 0,
	571, 572, 573, 0, 574, 575, 576, 577, 578, 716,
	579, 0, 580, 581, 588, 589, 590, 582, 583, 584,
	591, 592, 593, 594, 595, 0, 597, 598, 596, 599,
	600, 601, 0, 602, 603, 585, 586, 604, 605, 0,
	606, 607, 608, 609, 610, 611, 612, 717, 0, 613,
	0, 614, 615, 616, 617, 618, 620, 587, 621, 626,
	627, 718, 622, 623, 624, 625, 719, 629, 630, 631,
	0, 632, 633, 0, 628, 619, 0, 634, 635, 636,
	637, 638, 639, 0, 640, 641, 0, 642, 720, 721,
	722, 723, 0, 652, 0, 643, 644, 645, 646, 724,
	647, 725, 0, 648, 649, 650, 651, 0, 653, 654,
	0, 0, 655, 656, 658, 660, 661, 657, 659, 662,
	0, 663, 0, 0, 664, 665, 666, 726, 727, 728,
	0, 668, 667, 669, 670, 671, 729, 672, 673, 0,
	983, 0, 883, 674, 675, 730, 676, 677, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	2481, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 890, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 980, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 292, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 982, 0, 628,
	619, 888, 634, 635, 636, 637, 638, 889, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 2158, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 893, 0, 0,
	0, 303, 0, 304, 305, 1279, 306, 307, 308, 309,
	310, 311, 312, 0, 2164, 0, 313, 2154, 314, 2170,
	0, 2177, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 2180, 2181, 0, 0, 322, 323, 0, 0,
	1581, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	1280, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 1262, 355, 357, 2168,
	2167, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 1247, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 0,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 2166, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 1281, 397, 398, 399,
	2175, 2176, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 0, 0, 0, 504, 1283, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 1282, 505, 427, 2161, 2162,
	0, 2157, 0, 428, 429, 1284, 0, 1285, 430, 431,
	432, 1286, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 0, 1287,
	444, 445, 1288, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 1289, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	1290, 497, 485, 0, 0, 1291, 499, 500, 501, 502,
	0, 0, 503, 2169, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	0, 1292, 516, 1293, 0, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	2151, 530, 531, 532, 2152, 533, 534, 535, 0, 536,
	0, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 2165, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	1294, 574, 575, 576, 577, 578, 0, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 1295, 606, 607, 608,
	609, 610, 611, 612, 2163, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 2179, 622,
	623, 624, 625, 0, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 2171, 2172, 2173, 2174, 0,
	652, 0, 643, 644, 645, 646, 0, 647, 0, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 0, 2155, 2178, 0, 668, 667,
	669, 670, 671, 0, 672, 673, 0, 0, 0, 0,
	674, 675, 0, 676, 677, 678, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 4106, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 2145, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 890, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 292, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 4105,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 888, 634, 635, 636, 637,
	638, 889, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 4104, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 0, 883,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 294, 296, 295,
	297, 298, 299, 300, 2185, 301, 302, 0, 0, 0,
	0, 893, 679, 0, 0, 0, 303, 0, 304, 305,
	0, 306, 307, 308, 309, 310, 311, 312, 680, 681,
	0, 313, 682, 314, 683, 0, 684, 315, 316, 317,
	318, 319, 320, 0, 0, 0, 321, 685, 686, 687,
	0, 322, 323, 688, 0, 0, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 349, 0,
	0, 0, 0, 0, 0, 0, 350, 351, 352, 890,
	354, 0, 355, 357, 689, 690, 0, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 691, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 692, 693, 388, 0,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 694,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 0, 397, 398, 399, 695, 696, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 697, 0,
	698, 410, 0, 411, 412, 413, 414, 415, 416, 699,
	700, 701, 504, 0, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	0, 505, 427, 702, 703, 0, 704, 0, 428, 429,
	0, 705, 0, 430, 431, 432, 0, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 706, 0, 444, 445, 0, 0, 446,
	447, 448, 449, 450, 451, 454, 0, 0, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 0, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 0, 497, 485, 0, 292,
	0, 499, 500, 501, 502, 0, 707, 503, 708, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 0, 516, 0, 710,
	517, 518, 510, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 713, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	715, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 0, 574, 575, 576, 577,
	578, 716, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 2184, 592, 593, 594, 595, 0, 2186, 598,
	596, 599, 600, 601, 0, 602, 603, 585, 586, 604,
	605, 0, 606, 607, 608, 609, 610, 611, 612, 717,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 718, 622, 623, 624, 625, 719, 629,
	630, 631, 0, 632, 633, 0, 628, 619, 888, 634,
	635, 636, 637, 638, 889, 0, 640, 641, 0, 642,
	720, 721, 722, 723, 0, 652, 0, 643, 644, 645,
	646, 724, 647, 725, 0, 648, 649, 2183, 651, 0,
	653, 654, 0, 0, 655, 656, 658, 660, 661, 657,
	659, 662, 0, 663, 0, 0, 664, 665, 666, 726,
	727, 728, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 883, 0, 0, 674, 675, 730, 676, 677,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 2136, 301, 302,
	0, 0, 0, 0, 893, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 890, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 292, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 2135, 592, 593, 594, 595,
	0, 2137, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 888, 634, 635, 636, 637, 638, 889, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	2134, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 881, 0, 883, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 893, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 890, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 292, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 888, 634, 635, 636, 637,
	638, 889, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 0, 883,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 294, 296, 295,
	297, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 893, 679, 0, 0, 0, 303, 0, 304, 305,
	0, 306, 307, 308, 309, 310, 311, 312, 680, 681,
	0, 313, 682, 314, 683, 0, 684, 315, 316, 317,
	318, 319, 320, 0, 0, 0, 321, 685, 686, 687,
	0, 322, 323, 688, 0, 0, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 349, 0,
	0, 0, 0, 0, 0, 0, 350, 351, 352, 890,
	354, 0, 355, 357, 689, 690, 0, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 691, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 692, 693, 388, 0,
	290, 0, 0, 0, 0, 0, 389, 390, 391, 694,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 0, 397, 398, 399, 695, 696, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 697, 0,
	698, 410, 0, 411, 412, 413, 414, 415, 416, 699,
	700, 701, 504, 0, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 291, 424, 425, 426, 0,
	0, 505, 427, 702, 703, 0, 704, 0, 428, 429,
	0, 705, 0, 430, 431, 432, 0, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 706, 0, 444, 445, 0, 0, 446,
	447, 448, 449, 450, 451, 454, 0, 0, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 0, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 0, 497, 485, 0, 292,
	0, 499, 500, 501, 502, 0, 707, 503, 708, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 709, 0, 516, 0, 710,
	517, 518, 510, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 711, 530, 531, 532, 712,
	533, 534, 535, 713, 536, 714, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	715, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 0, 574, 575, 576, 577,
	578, 716, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 0, 602, 603, 585, 586, 604,
	605, 0, 606, 607, 608, 609, 610, 611, 612, 717,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 718, 622, 623, 624, 625, 719, 629,
	630, 631, 0, 632, 633, 0, 628, 619, 888, 634,
	635, 636, 637, 638, 889, 0, 640, 641, 0, 642,
	720, 721, 722, 723, 0, 652, 0, 643, 644, 645,
	646, 724, 647, 725, 0, 648, 649, 650, 651, 0,
	653, 654, 0, 0, 655, 656, 658, 660, 661, 657,
	659, 662, 0, 663, 0, 0, 664, 665, 666, 726,
	727, 728, 0, 668, 667, 669, 670, 671, 729, 672,
	673, 0, 883, 0, 0, 674, 675, 730, 676, 677,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 893, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 890, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 292, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 2533,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 2534, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 888, 634, 635, 636, 637, 638, 889, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	2535, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 0, 287, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 296, 295, 297, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 893, 679, 0,
	0, 0, 303, 0, 304, 305, 0, 306, 307, 308,
	309, 310, 311, 312, 680, 681, 0, 313, 682, 314,
	683, 0, 684, 315, 316, 317, 318, 319, 320, 0,
	0, 0, 321, 685, 686, 687, 0, 322, 323, 688,
	0, 0, 0, 324, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 333, 334, 335, 332, 336, 0, 337,
	0, 338, 339, 340, 341, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 349, 0, 0, 0, 0, 0,
	0, 0, 350, 351, 352, 353, 354, 0, 355, 357,
	689, 690, 0, 360, 356, 358, 0, 361, 359, 362,
	0, 363, 364, 365, 0, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	691, 377, 378, 379, 381, 383, 380, 382, 384, 385,
	386, 387, 692, 693, 388, 0, 290, 0, 0, 0,
	0, 0, 389, 390, 391, 694, 0, 0, 0, 392,
	0, 393, 394, 395, 0, 396, 0, 0, 397, 398,
	399, 695, 696, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 697, 0, 698, 410, 0, 411,
	412, 413, 414, 415, 416, 699, 700, 701, 504, 0,
	417, 418, 0, 419, 420, 421, 422, 423, 0, 0,
	0, 291, 424, 425, 426, 0, 0, 505, 427, 702,
	703, 0, 704, 0, 428, 429, 0, 705, 0, 430,
	431, 432, 0, 433, 0, 0, 0, 434, 435, 436,
	437, 438, 439, 0, 440, 442, 441, 0, 443, 706,
	0, 444, 445, 0, 0, 446, 447, 448, 449, 450,
	451, 454, 0, 0, 452, 453, 455, 456, 0, 457,
	458, 460, 463, 459, 461, 462, 464, 477, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	479, 0, 478, 0, 480, 481, 482, 483, 484, 491,
	493, 494, 489, 490, 492, 495, 496, 498, 486, 487,
	488, 0, 497, 485, 0, 292, 0, 499, 500, 501,
	502, 0, 707, 503, 708, 506, 507, 0, 0, 508,
	0, 509, 0, 0, 511, 512, 513, 0, 0, 514,
	515, 709, 0, 516, 0, 710, 517, 518, 510, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 0, 528,
	529, 711, 530, 531, 532, 712, 533, 534, 535, 713,
	536, 714, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 547, 548, 715, 549, 550, 552,
	551, 553, 0, 554, 0, 555, 556, 557, 0, 0,
	0, 0, 0, 558, 559, 561, 0, 562, 563, 564,
	565, 560, 566, 567, 568, 569, 570, 0, 571, 572,
	573, 0, 574, 575, 576, 577, 578, 716, 579, 0,
	580, 581, 588, 589, 590, 582, 583, 584, 591, 592,
	593, 594, 595, 0, 597, 598, 596, 599, 600, 601,
	0, 602, 603, 585, 586, 604, 605, 0, 606, 607,
	608, 609, 610, 611, 612, 717, 0, 613, 0, 614,
	615, 616, 617, 618, 620, 587, 621, 626, 627, 718,
	622, 623, 624, 625, 719, 629, 630, 631, 0, 632,
	633, 0, 628, 619, 0, 634, 635, 636, 637, 638,
	639, 0, 640, 641, 0, 642, 720, 721, 722, 723,
	0, 652, 0, 643, 644, 645, 646, 724, 647, 725,
	0, 648, 649, 650, 651, 0, 653, 654, 0, 0,
	655, 656, 658, 660, 661, 657, 659, 662, 0, 663,
	0, 0, 664, 665, 666, 726, 727, 728, 0, 668,
	667, 669, 670, 671, 729, 672, 673, 0, 0, 0,
	0, 674, 675, 730, 676, 677, 678, 0, 0, 0,
	0, 0, 0, 0, 1617, 1616, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	893, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 1279, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	1581, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	1280, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 290, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 1281, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 1283, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 1282, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 1284, 705, 1285, 430, 431,
	432, 1286, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 1287,
	444, 445, 1288, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 1289, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	1290, 497, 485, 0, 0, 1291, 499, 500, 501, 502,
	4208, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 1292, 516, 1293, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	1294, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 1295, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 0, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 1617, 1616, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 1279, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 1581, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 1280, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 1281, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	1283, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 1282, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 1284, 705, 1285,
	430, 431, 432, 1286, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 1287, 444, 445, 1288, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 1289, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 1290, 497, 485, 0, 0, 1291, 499, 500,
	501, 502, 3778, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 1292, 516, 1293, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 1294, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 1295, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 0, 0,
	0, 0, 674, 675, 730, 676, 677, 678, 1795, 0,
	1617, 1616, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 1279, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 1581, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 1280, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 290, 0, 0, 0, 0, 0, 1794, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 1281, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 1283, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 1282, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 1284, 705, 1285, 430, 431, 432, 1286, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 1287, 444, 445, 1288, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 1289, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 1290, 497, 485, 0,
	0, 1291, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 1292, 516, 1293,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 1793,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 1294, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 1792, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 1295, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 0, 0, 0, 0, 674, 675, 730, 676,
	677, 678, 1667, 0, 1617, 1616, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 1279, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	1581, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	1280, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 290, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 1281, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 1669, 700, 701, 504, 1283, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 1282, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 1284, 705, 1285, 430, 431,
	432, 1286, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 1287,
	444, 445, 1288, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 1289, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	1290, 497, 485, 0, 0, 1291, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 1292, 516, 1293, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	1294, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 1295, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 0, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 1612, 0, 1617, 1616,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 1279,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 1581, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 1280, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	1281, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 1283, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 1282,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 1284,
	705, 1285, 430, 431, 432, 1286, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 1287, 444, 445, 1288, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 1289, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 1290, 497, 485, 0, 0, 1291,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 1292, 516, 1293, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 1294, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	1295, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	0, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	1617, 1616, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 1279, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 1581, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 1280, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 290, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 1281, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 1283, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 1282, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 1284, 705, 1285, 430, 431, 432, 1286, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 1287, 444, 445, 1288, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 1289, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 1290, 497, 485, 0,
	0, 1291, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 1292, 516, 1293,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 1294, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 1295, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 1617, 1616, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 1279, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 1581, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 1280, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 1281, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 1283, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 1282, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 1284, 705, 1285, 430, 431, 432, 1286,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 1287, 444, 445,
	1288, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	1289, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 1290, 497,
	485, 0, 0, 1291, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 1292,
	516, 1293, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 1294, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 1295, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 1617, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 1279, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	1581, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	1280, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 290, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 1281, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 1283, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 1282, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 1284, 705, 1285, 430, 431,
	432, 1286, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 1287,
	444, 445, 1288, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 1289, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	1290, 497, 485, 0, 0, 1291, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 1292, 516, 1293, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	1294, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 1295, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 287, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 3067, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 3820,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 3071,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 3819, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 3070, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 3816, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 3818, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 3815, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 3069, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	3817, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 287, 0,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 3067,
	322, 323, 688, 0, 0, 3061, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 3063, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 3071, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 3070, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 3060, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 3069, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 3068, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	1875, 0, 287, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 1874, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 1873, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 292, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 1876, 583, 584, 591, 592, 593, 594, 595,
	0, 1872, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 1870, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 1871, 667, 669, 670,
	671, 729, 672, 673, 1585, 0, 287, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 1587, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 292, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 1330, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 1582, 0,
	287, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 290, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	1584, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 291, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	292, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 1330, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 1488, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 290, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 1490, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	291, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 292, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 1330, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 763, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	762, 299, 300, 751, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	754, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 760, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 756, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	750, 0, 287, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 751, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 754, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 755,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	756, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 287, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 751,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 754, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 755, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 756, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 287, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 751, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 754, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 4218, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 756, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 287, 0,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 292, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 1330, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 290, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 291, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 3716, 497, 485, 0,
	292, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 3255, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 290, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 3254, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	291, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 292, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 287, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 292, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 2439, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 2502, 0,
	287, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 290, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 291, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	292, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 2446, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 290, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 2445, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	291, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 292, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 2432, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 2434, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 292, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 290, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	2396, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 291, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	292, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 1330, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 1712, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 290, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 1711, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	291, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 292, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 1605, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 292, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	1598, 0, 287, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 1600, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 292, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 1407, 0, 287, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 1406, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 292, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 1397, 0,
	287, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 290, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	1396, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 291, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	292, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 1394, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 290, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 1393, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	291, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 292, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 1389, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 1388, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 292, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	732, 0, 287, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 292, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 278, 0, 287, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 292, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 287, 0,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 292, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 754, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 755, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 756, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 287, 0, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 2542, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 292, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 287, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 2540, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 290, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	291, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 292, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 287, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 2538, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 290, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 291, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 292, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 287, 0,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 290,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 2452, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 291, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 292, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 290, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	2210, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 291, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	292, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 287, 0, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 290, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 2204, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 291, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 292, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 967, 0, 287, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 966, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 965, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 835, 0,
	287, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 841, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 850, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 843,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	849, 845, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 846, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 844, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 847, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	848, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 842,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 287, 0, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 3819, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 4540, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 1435, 0, 287, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 1438, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 1436, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 823, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 822, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 821,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 1439,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 819, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 1435, 0,
	287, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 1438, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	1436, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 823, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 822, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 821, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 1439, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 819, 721, 722, 723, 0, 652, 0, 643, 1437,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 830, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 828,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 741, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 740, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 739, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 3164, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 287, 0, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 4839, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 287, 3657, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 287, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 4428, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 287, 0,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 4163, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 2942, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 287, 3164, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 3294, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 287, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 2340, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 822, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 821, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 819, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 287, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 2512, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 2500, 0,
	287, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 1768, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 1760, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	813, 0, 287, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 809, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 814, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 823,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 822,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 821, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 1745, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 819, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 1718, 0, 287, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 1717, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 1702, 0,
	287, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	1700, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 1695, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 1672, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 1670, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	1665, 0, 287, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 1626, 0, 287, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 1590, 0,
	287, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 1441, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 822, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 821, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 819, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 1412, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 1411, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	1403, 0, 287, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 1402, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 287, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 1355,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 833, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	813, 0, 287, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 809, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 808, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 814, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 823,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 822,
	575, 576, 577, 578, 810, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 821, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 811, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 819, 721, 722, 723, 0, 652, 0,
	643, 815, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 802, 0, 287, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 699, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 803, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 765, 0,
	287, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 758, 0, 287, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 736, 0, 287, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 287, 0, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 3848, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 287, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 822, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 821, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 819, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 287, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 3758, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 287, 0,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 3733, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	3729, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 287, 0, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 3681, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 287, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 3679, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 287, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 3667, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 287, 0,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 3664, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 410, 0, 411, 412, 413, 414, 415, 416,
	3265, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 287, 0, 0, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 680, 681, 0, 313, 682, 314, 683, 0, 684,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	685, 686, 687, 0, 322, 323, 688, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 353, 354, 0, 355, 357, 689, 690, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 691, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 692,
	693, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 694, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 695, 696,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 697, 0, 698, 410, 0, 411, 412, 413, 414,
	415, 416, 699, 700, 701, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 702, 703, 0, 704,
	0, 428, 429, 0, 705, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 706, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 707,
	503, 708, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 709, 0,
	516, 0, 710, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 711, 530,
	531, 532, 712, 533, 534, 535, 713, 536, 714, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 715, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 716, 579, 0, 580, 581, 803,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 0, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 717, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 718, 622, 623, 624,
	625, 719, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 720, 721, 722, 723, 0, 652, 0,
	643, 644, 645, 646, 724, 647, 725, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 726, 727, 728, 0, 668, 667, 669, 670,
	671, 729, 672, 673, 287, 0, 0, 0, 674, 675,
	730, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 679, 0, 2470,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 680, 681, 0, 313, 682, 314, 683,
	0, 684, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 685, 686, 687, 0, 322, 323, 688, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 353, 354, 0, 355, 357, 689,
	690, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 691,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 692, 693, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 694, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	695, 696, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 697, 0, 698, 410, 0, 411, 412,
	413, 414, 415, 416, 699, 700, 701, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 702, 703,
	0, 704, 0, 428, 429, 0, 705, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 706, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 707, 503, 708, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	709, 0, 516, 0, 710, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	711, 530, 531, 532, 712, 533, 534, 535, 713, 536,
	714, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 715, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 716, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 0,
	0, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 717, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 718, 622,
	623, 624, 625, 719, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 720, 721, 722, 723, 0,
	652, 0, 643, 644, 645, 646, 724, 647, 725, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 726, 727, 728, 0, 668, 667,
	669, 670, 671, 729, 672, 673, 287, 0, 0, 0,
	674, 675, 730, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 680, 681, 0, 313, 682,
	314, 683, 0, 684, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 685, 686, 687, 0, 322, 323,
	688, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 353, 354, 0, 355,
	357, 689, 690, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 691, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 692, 693, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 694, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 695, 696, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 697, 0, 698, 410, 0,
	411, 412, 413, 414, 415, 416, 1374, 700, 701, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	702, 703, 0, 704, 0, 428, 429, 0, 705, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	706, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 707, 503, 708, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 709, 0, 516, 0, 710, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 711, 530, 531, 532, 712, 533, 534, 535,
	713, 536, 714, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 715, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 716, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 0, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 717, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	718, 622, 623, 624, 625, 719, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 720, 721, 722,
	723, 0, 652, 0, 643, 644, 645, 646, 724, 647,
	725, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 726, 727, 728, 0,
	668, 667, 669, 670, 671, 729, 672, 673, 287, 0,
	0, 0, 674, 675, 730, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 680, 681, 0,
	313, 682, 314, 683, 0, 684, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 685, 686, 687, 0,
	322, 323, 688, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 353, 354,
	0, 355, 357, 689, 690, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 691, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 692, 693, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 694, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 695, 696, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 697, 0, 698,
	410, 0, 411, 412, 413, 414, 415, 416, 699, 700,
	701, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 702, 703, 0, 704, 0, 428, 429, 0,
	705, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 706, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 707, 503, 708, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 709, 0, 516, 0, 710, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 711, 530, 531, 532, 712, 533,
	534, 535, 713, 536, 714, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 715,
	549, 550, 1303, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	716, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 0, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 717, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 718, 622, 623, 624, 625, 719, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 720,
	721, 722, 723, 0, 652, 0, 643, 644, 645, 646,
	724, 647, 725, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 726, 727,
	728, 0, 668, 667, 669, 670, 671, 729, 672, 673,
	287, 0, 0, 0, 674, 675, 730, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 680,
	681, 0, 313, 682, 314, 683, 0, 684, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 685, 686,
	687, 0, 322, 323, 688, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	353, 354, 0, 355, 357, 689, 690, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 691, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 692, 693, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	694, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 695, 696, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 697,
	0, 698, 0, 0, 411, 412, 413, 414, 415, 416,
	699, 700, 701, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 702, 703, 0, 704, 0, 428,
	429, 0, 705, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 706, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 707, 503, 708,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 709, 0, 516, 0,
	710, 517, 518, 510, 519, 520, 0, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 711, 530, 531, 532,
	712, 533, 534, 535, 713, 536, 714, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 0, 547,
	548, 715, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 716, 0, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 0, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	717, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 718, 622, 623, 624, 625, 719,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 720, 721, 722, 723, 0, 652, 0, 643, 644,
	645, 646, 724, 647, 725, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	726, 727, 728, 0, 668, 667, 669, 670, 671, 729,
	672, 673, 1708, 0, 1419, 0, 674, 675, 730, 676,
	677, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 296, 295, 297, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 304, 305, 0, 306, 307, 308, 309,
	310, 311, 312, 0, 0, 0, 313, 0, 314, 0,
	0, 0, 315, 316, 317, 318, 319, 320, 0, 0,
	0, 321, 0, 0, 0, 0, 322, 323, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 333, 334, 335, 332, 336, 0, 337, 0,
	338, 339, 340, 341, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 349, 0, 0, 0, 0, 0, 0,
	1421, 350, 351, 352, 353, 354, 0, 355, 357, 0,
	0, 0, 360, 356, 358, 0, 361, 359, 362, 0,
	363, 364, 365, 0, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 0,
	377, 378, 379, 381, 383, 380, 382, 384, 385, 386,
	387, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 0, 0, 0, 0, 392, 0,
	393, 394, 395, 0, 396, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 1707, 0, 0, 504, 0, 417,
	418, 0, 419, 420, 421, 422, 423, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 505, 427, 0, 0,
	0, 0, 0, 428, 429, 0, 0, 0, 430, 431,
	432, 0, 433, 0, 0, 0, 434, 435, 436, 437,
	438, 439, 0, 440, 442, 441, 0, 443, 0, 0,
	444, 445, 0, 0, 446, 447, 448, 449, 450, 451,
	454, 0, 0, 452, 453, 455, 456, 0, 457, 458,
	460, 463, 459, 461, 462, 464, 477, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 479,
	0, 478, 0, 480, 481, 482, 483, 484, 491, 493,
	494, 489, 490, 492, 495, 496, 498, 486, 487, 488,
	0, 497, 485, 0, 0, 0, 499, 500, 501, 502,
	0, 0, 503, 0, 506, 507, 0, 0, 508, 0,
	509, 0, 0, 511, 512, 513, 0, 0, 514, 515,
	0, 0, 516, 0, 0, 517, 518, 510, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 0, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	0, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 547, 548, 0, 549, 550, 552, 551,
	553, 0, 554, 0, 555, 556, 557, 0, 0, 0,
	0, 0, 558, 559, 561, 0, 562, 563, 564, 565,
	560, 566, 567, 568, 569, 570, 0, 571, 572, 573,
	0, 574, 575, 576, 577, 578, 0, 579, 0, 580,
	581, 588, 589, 590, 582, 583, 584, 591, 592, 593,
	594, 595, 0, 597, 598, 596, 599, 600, 601, 1422,
	602, 603, 585, 586, 604, 605, 0, 606, 607, 608,
	609, 610, 611, 612, 0, 0, 613, 0, 614, 615,
	616, 617, 618, 620, 587, 621, 626, 627, 0, 622,
	623, 624, 625, 0, 629, 630, 631, 0, 632, 633,
	0, 628, 619, 0, 634, 635, 636, 637, 638, 639,
	0, 640, 641, 0, 642, 0, 0, 0, 0, 0,
	652, 0, 643, 644, 645, 646, 0, 647, 0, 0,
	648, 649, 650, 651, 0, 653, 654, 0, 0, 655,
	656, 658, 660, 661, 657, 659, 662, 0, 663, 0,
	0, 664, 665, 666, 0, 0, 0, 0, 668, 667,
	669, 670, 671, 0, 672, 673, 1629, 0, 1419, 0,
	674, 675, 0, 676, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 296, 295, 297,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 304, 305, 0,
	306, 307, 308, 309, 310, 311, 312, 0, 0, 0,
	313, 0, 314, 0, 0, 0, 315, 316, 317, 318,
	319, 320, 0, 0, 0, 321, 0, 0, 0, 0,
	322, 323, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 333, 334, 335, 332,
	336, 0, 337, 0, 338, 339, 340, 341, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 349, 0, 0,
	0, 0, 0, 0, 1421, 350, 351, 352, 353, 354,
	0, 355, 357, 0, 0, 0, 360, 356, 358, 0,
	361, 359, 362, 0, 363, 364, 365, 0, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 0, 377, 378, 379, 381, 383, 380,
	382, 384, 385, 386, 387, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 0, 0,
	0, 0, 392, 0, 393, 394, 395, 0, 396, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 1628, 0,
	0, 504, 0, 417, 418, 0, 419, 420, 421, 422,
	423, 0, 0, 0, 0, 424, 425, 426, 0, 0,
	505, 427, 0, 0, 0, 0, 0, 428, 429, 0,
	0, 0, 430, 431, 432, 0, 433, 0, 0, 0,
	434, 435, 436, 437, 438, 439, 0, 440, 442, 441,
	0, 443, 0, 0, 444, 445, 0, 0, 446, 447,
	448, 449, 450, 451, 454, 0, 0, 452, 453, 455,
	456, 0, 457, 458, 460, 463, 459, 461, 462, 464,
	477, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 479, 0, 478, 0, 480, 481, 482,
	483, 484, 491, 493, 494, 489, 490, 492, 495, 496,
	498, 486, 487, 488, 0, 497, 485, 0, 0, 0,
	499, 500, 501, 502, 0, 0, 503, 0, 506, 507,
	0, 0, 508, 0, 509, 0, 0, 511, 512, 513,
	0, 0, 514, 515, 0, 0, 516, 0, 0, 517,
	518, 510, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 0, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 0, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 547, 548, 0,
	549, 550, 552, 551, 553, 0, 554, 0, 555, 556,
	557, 0, 0, 0, 0, 0, 558, 559, 561, 0,
	562, 563, 564, 565, 560, 566, 567, 568, 569, 570,
	0, 571, 572, 573, 0, 574, 575, 576, 577, 578,
	0, 579, 0, 580, 581, 588, 589, 590, 582, 583,
	584, 591, 592, 593, 594, 595, 0, 597, 598, 596,
	599, 600, 601, 1422, 602, 603, 585, 586, 604, 605,
	0, 606, 607, 608, 609, 610, 611, 612, 0, 0,
	613, 0, 614, 615, 616, 617, 618, 620, 587, 621,
	626, 627, 0, 622, 623, 624, 625, 0, 629, 630,
	631, 0, 632, 633, 0, 628, 619, 0, 634, 635,
	636, 637, 638, 639, 0, 640, 641, 0, 642, 0,
	0, 0, 0, 0, 652, 0, 643, 644, 645, 646,
	0, 647, 0, 0, 648, 649, 650, 651, 0, 653,
	654, 0, 0, 655, 656, 658, 660, 661, 657, 659,
	662, 0, 663, 0, 0, 664, 665, 666, 0, 0,
	0, 0, 668, 667, 669, 670, 671, 0, 672, 673,
	1417, 0, 1419, 0, 674, 675, 0, 676, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 296, 295, 297, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 304, 305, 0, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 0, 313, 0, 314, 0, 0, 0,
	315, 316, 317, 318, 319, 320, 0, 0, 0, 321,
	0, 0, 0, 0, 322, 323, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	333, 334, 335, 332, 336, 0, 337, 0, 338, 339,
	340, 341, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 349, 0, 0, 0, 0, 0, 0, 1421, 350,
	351, 352, 353, 354, 0, 355, 357, 0, 0, 0,
	360, 356, 358, 0, 361, 359, 362, 0, 363, 364,
	365, 0, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 0, 377, 378,
	379, 381, 383, 380, 382, 384, 385, 386, 387, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 0, 0, 0, 0, 392, 0, 393, 394,
	395, 0, 396, 0, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 1416, 0, 0, 504, 0, 417, 418, 0,
	419, 420, 421, 422, 423, 0, 0, 0, 0, 424,
	425, 426, 0, 0, 505, 427, 0, 0, 0, 0,
	0, 428, 429, 0, 0, 0, 430, 431, 432, 0,
	433, 0, 0, 0, 434, 435, 436, 437, 438, 439,
	0, 440, 442, 441, 0, 443, 0, 0, 444, 445,
	0, 0, 446, 447, 448, 449, 450, 451, 454, 0,
	0, 452, 453, 455, 456, 0, 457, 458, 460, 463,
	459, 461, 462, 464, 477, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 479, 0, 478,
	0, 480, 481, 482, 483, 484, 491, 493, 494, 489,
	490, 492, 495, 496, 498, 486, 487, 488, 0, 497,
	485, 0, 0, 0, 499, 500, 501, 502, 0, 0,
	503, 0, 506, 507, 0, 0, 508, 0, 509, 0,
	0, 511, 512, 513, 0, 0, 514, 515, 0, 0,
	516, 0, 0, 517, 518, 510, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 0, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 0, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 547, 548, 0, 549, 550, 552, 551, 553, 0,
	554, 0, 555, 556, 557, 0, 0, 0, 0, 0,
	558, 559, 561, 0, 562, 563, 564, 565, 560, 566,
	567, 568, 569, 570, 0, 571, 572, 573, 0, 574,
	575, 576, 577, 578, 0, 579, 0, 580, 581, 588,
	589, 590, 582, 583, 584, 591, 592, 593, 594, 595,
	0, 597, 598, 596, 599, 600, 601, 1422, 602, 603,
	585, 586, 604, 605, 0, 606, 607, 608, 609, 610,
	611, 612, 0, 0, 613, 0, 614, 615, 616, 617,
	618, 620, 587, 621, 626, 627, 0, 622, 623, 624,
	625, 0, 629, 630, 631, 0, 632, 633, 0, 628,
	619, 0, 634, 635, 636, 637, 638, 639, 0, 640,
	641, 0, 642, 0, 0, 0, 0, 0, 652, 0,
	643, 644, 645, 646, 0, 647, 0, 0, 648, 649,
	650, 651, 0, 653, 654, 0, 0, 655, 656, 658,
	660, 661, 657, 659, 662, 0, 663, 0, 0, 664,
	665, 666, 0, 0, 0, 0, 668, 667, 669, 670,
	671, 0, 672, 673, 2224, 0, 1419, 0, 674, 675,
	0, 676, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 296, 295, 297, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 304, 305, 0, 306, 307,
	308, 309, 310, 311, 312, 0, 0, 0, 313, 0,
	314, 0, 0, 0, 315, 316, 317, 318, 319, 320,
	0, 0, 0, 321, 0, 0, 0, 0, 322, 323,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 333, 334, 335, 332, 336, 0,
	337, 0, 338, 339, 340, 341, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 349, 0, 0, 0, 0,
	0, 0, 1421, 350, 351, 352, 353, 354, 0, 355,
	357, 0, 0, 0, 360, 356, 358, 0, 361, 359,
	362, 0, 363, 364, 365, 0, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 0, 377, 378, 379, 381, 383, 380, 382, 384,
	385, 386, 387, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 391, 0, 0, 0, 0,
	392, 0, 393, 394, 395, 0, 396, 0, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 0, 0, 0, 504,
	0, 417, 418, 0, 419, 420, 421, 422, 423, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 505, 427,
	0, 0, 0, 0, 0, 428, 429, 0, 0, 0,
	430, 431, 432, 0, 433, 0, 0, 0, 434, 435,
	436, 437, 438, 439, 0, 440, 442, 441, 0, 443,
	0, 0, 444, 445, 0, 0, 446, 447, 448, 449,
	450, 451, 454, 0, 0, 452, 453, 455, 456, 0,
	457, 458, 460, 463, 459, 461, 462, 464, 477, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 479, 0, 478, 0, 480, 481, 482, 483, 484,
	491, 493, 494, 489, 490, 492, 495, 496, 498, 486,
	487, 488, 0, 497, 485, 0, 0, 0, 499, 500,
	501, 502, 0, 0, 503, 0, 506, 507, 0, 0,
	508, 0, 509, 0, 0, 511, 512, 513, 0, 0,
	514, 515, 0, 0, 516, 0, 0, 517, 518, 510,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 0,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 0, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 547, 548, 0, 549, 550,
	552, 551, 553, 0, 554, 0, 555, 556, 557, 0,
	0, 0, 0, 0, 558, 559, 561, 0, 562, 563,
	564, 565, 560, 566, 567, 568, 569, 570, 0, 571,
	572, 573, 0, 574, 575, 576, 577, 578, 0, 579,
	0, 580, 581, 588, 589, 590, 582, 583, 584, 591,
	592, 593, 594, 595, 0, 597, 598, 596, 599, 600,
	601, 1422, 602, 603, 585, 586, 604, 605, 0, 606,
	607, 608, 609, 610, 611, 612, 0, 0, 613, 0,
	614, 615, 616, 617, 618, 620, 587, 621, 626, 627,
	0, 622, 623, 624, 625, 0, 629, 630, 631, 0,
	632, 633, 0, 628, 619, 0, 634, 635, 636, 637,
	638, 639, 0, 640, 641, 0, 642, 0, 0, 0,
	0, 0, 652, 0, 643, 644, 645, 646, 0, 647,
	0, 0, 648, 649, 650, 651, 0, 653, 654, 0,
	0, 655, 656, 658, 660, 661, 657, 659, 662, 0,
	663, 0, 0, 664, 665, 666, 0, 0, 0, 0,
	668, 667, 669, 670, 671, 0, 672, 673, 2191, 0,
	1419, 0, 674, 675, 0, 676, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 296,
	295, 297, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 304,
	305, 0, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 0, 313, 0, 314, 0, 0, 0, 315, 316,
	317, 318, 319, 320, 0, 0, 0, 321, 0, 0,
	0, 0, 322, 323, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 333, 334,
	335, 332, 336, 0, 337, 0, 338, 339, 340, 341,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 349,
	0, 0, 0, 0, 0, 0, 1421, 350, 351, 352,
	353, 354, 0, 355, 357, 0, 0, 0, 360, 356,
	358, 0, 361, 359, 362, 0, 363, 364, 365, 0,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 0, 377, 378, 379, 381,
	383, 380, 382, 384, 385, 386, 387, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 391,
	0, 0, 0, 0, 392, 0, 393, 394, 395, 0,
	396, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	0, 0, 0, 504, 0, 417, 418, 0, 419, 420,
	421, 422, 423, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 505, 427, 0, 0, 0, 0, 0, 428,
	429, 0, 0, 0, 430, 431, 432, 0, 433, 0,
	0, 0, 434, 435, 436, 437, 438, 439, 0, 440,
	442, 441, 0, 443, 0, 0, 444, 445, 0, 0,
	446, 447, 448, 449, 450, 451, 454, 0, 0, 452,
	453, 455, 456, 0, 457, 458, 460, 463, 459, 461,
	462, 464, 477, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 479, 0, 478, 0, 480,
	481, 482, 483, 484, 491, 493, 494, 489, 490, 492,
	495, 496, 498, 486, 487, 488, 0, 497, 485, 0,
	0, 0, 499, 500, 501, 502, 0, 0, 503, 0,
	506, 507, 0, 0, 508, 0, 509, 0, 0, 511,
	512, 513, 0, 0, 514, 515, 0, 0, 516, 0,
	0, 517, 518, 510, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 0, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 0, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 547,
	548, 0, 549, 550, 552, 551, 553, 0, 554, 0,
	555, 556, 557, 0, 0, 0, 0, 0, 558, 559,
	561, 0, 562, 563, 564, 565, 560, 566, 567, 568,
	569, 570, 0, 571, 572, 573, 0, 574, 575, 576,
	577, 578, 0, 579, 0, 580, 581, 588, 589, 590,
	582, 583, 584, 591, 592, 593, 594, 595, 0, 597,
	598, 596, 599, 600, 601, 1422, 602, 603, 585, 586,
	604, 605, 0, 606, 607, 608, 609, 610, 611, 612,
	0, 0, 613, 0, 614, 615, 616, 617, 618, 620,
	587, 621, 626, 627, 0, 622, 623, 624, 625, 0,
	629, 630, 631, 0, 632, 633, 0, 628, 619, 0,
	634, 635, 636, 637, 638, 639, 0, 640, 641, 0,
	642, 0, 0, 0, 0, 0, 652, 0, 643, 644,
	645, 646, 0, 647, 0, 0, 648, 649, 650, 651,
	0, 653, 654, 0, 0, 655, 656, 658, 660, 661,
	657, 659, 662, 0, 663, 0, 0, 664, 665, 666,
	0, 0, 0, 0, 668, 667, 669, 670, 671, 1419,
	672, 673, 0, 0, 0, 0, 674, 675, 0, 676,
	677, 678, 0, 0, 0, 0, 293, 294, 296, 295,
	297, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 0, 304, 305,
	0, 306, 307, 308, 309, 310, 311, 312, 0, 0,
	0, 313, 0, 314, 0, 0, 0, 315, 316, 317,
	318, 319, 320, 0, 0, 0, 321, 0, 0, 0,
	0, 322, 323, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 333, 334, 335,
	332, 336, 0, 337, 0, 338, 339, 340, 341, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 349, 0,
	0, 0, 0, 0, 0, 1421, 350, 351, 352, 353,
	354, 0, 355, 357, 0, 0, 0, 360, 356, 358,
	0, 361, 359, 362, 0, 363, 364, 365, 0, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 0, 377, 378, 379, 381, 383,
	380, 382, 384, 385, 386, 387, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 0, 389, 390, 391, 0,
	0, 0, 0, 392, 0, 393, 394, 395, 0, 396,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 0,
	0, 0, 504, 0, 417, 418, 0, 419, 420, 421,
	422, 423, 0, 0, 0, 0, 424, 425, 426, 0,
	0, 505, 427, 0, 0, 0, 0, 0, 428, 429,
	0, 0, 0, 430, 431, 432, 0, 433, 0, 0,
	0, 434, 435, 436, 437, 438, 439, 0, 440, 442,
	441, 0, 443, 0, 0, 444, 445, 0, 0, 446,
	447, 448, 449, 450, 451, 454, 0, 0, 452, 453,
	455, 456, 0, 457, 458, 460, 463, 459, 461, 462,
	464, 477, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 479, 0, 478, 0, 480, 481,
	482, 483, 484, 491, 493, 494, 489, 490, 492, 495,
	496, 498, 486, 487, 488, 0, 497, 485, 0, 0,
	0, 499, 500, 501, 502, 0, 0, 503, 0, 506,
	507, 0, 0, 508, 0, 509, 0, 0, 511, 512,
	513, 0, 0, 514, 515, 0, 0, 516, 0, 0,
	517, 518, 510, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 0, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 0, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 547, 548,
	0, 549, 550, 552, 551, 553, 0, 554, 0, 555,
	556, 557, 0, 0, 0, 0, 0, 558, 559, 561,
	0, 562, 563, 564, 565, 560, 566, 567, 568, 569,
	570, 0, 571, 572, 573, 0, 574, 575, 576, 577,
	578, 0, 579, 0, 580, 581, 588, 589, 590, 582,
	583, 584, 591, 592, 593, 594, 595, 0, 597, 598,
	596, 599, 600, 601, 1422, 602, 603, 585, 586, 604,
	605, 0, 606, 607, 608, 609, 610, 611, 612, 0,
	0, 613, 0, 614, 615, 616, 617, 618, 620, 587,
	621, 626, 627, 0, 622, 623, 624, 625, 0, 629,
	630, 631, 0, 632, 633, 0, 628, 619, 0, 634,
	635, 636, 637, 638, 639, 0, 640, 641, 0, 642,
	0, 0, 0, 0, 0, 652, 0, 643, 644, 645,
	646, 0, 647, 0, 0, 648, 649, 650, 651, 0,
	653, 654, 0, 0, 655, 656, 658, 660, 661, 657,
	659, 662, 0, 663, 0, 0, 664, 665, 666, 0,
	0, 0, 0, 668, 667, 669, 670, 671, 0, 672,
	673, 0, 0, 0, 0, 674, 675, 0, 676, 677,
	678, 1924, 1925, 0, 1957, 1958, 1959, 1968, 1969, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 1955, 0, 0, 0, 0,
	0, 1924, 1925, 1927, 1957, 1958, 1959, 1968, 1969, 1970,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 1955, 0, 0, 0, 0,
	1980, 0, 0, 1927, 0, 0, 0, 0, 0, 1926,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 1926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 1950, 1951,
	1952, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 1950, 1951,
	1952, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1965, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 1954, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 1972, 1965, 0,
	0, 1975, 0, 0, 1941, 1942, 0, 0, 1954, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 1971, 0, 1972, 0, 0,
	0, 0, 0, 0, 1941, 1942, 0, 1947, 0, 0,
	0, 1924, 1925, 0, 1957, 1958, 1959, 1968, 1969, 1970,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 1955, 0, 1947, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 1962, 0, 0, 1926,
	0, 0, 0, 0, 0, 1973, 0, 1977, 0, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 0, 0, 1953, 0, 1949, 1950, 1951,
	1952, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1924, 1925, 0,
	1957, 1958, 1959, 1968, 1969, 1970, 1966, 0, 1965, 0,
	1979, 1975, 0, 0, 0, 0, 0, 0, 1954, 1956,
	1961, 1955, 0, 0, 0, 0, 0, 0, 0, 1927,
	0, 0, 0, 0, 0, 1971, 0, 1972, 0, 1974,
	1979, 0, 0, 0, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 1963, 0, 0, 1926, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 0, 0,
	0, 0, 0, 0, 0, 1943, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 1939, 1945,
	1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 3469, 0, 0, 1973, 0, 1938, 1939, 1945,
	1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 3468, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 1949, 1950, 1951, 1952, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 1925,
	0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 1955, 0, 1965, 1953, 0, 1975, 0, 0,
	1927, 0, 0, 0, 1954, 1956, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 1971, 0, 1972, 0, 0, 0, 1980, 0, 0,
	1941, 1942, 0, 0, 0, 0, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1946, 1963, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 1924, 1925, 1947, 1957, 1958, 1959, 1968, 1969, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 1961, 1955, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 1926,
	0, 0, 1962, 0, 1949, 1950, 1951, 1952, 0, 0,
	1946, 0, 0, 1977, 1932, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 1939, 1945,
	1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 1965, 0, 0, 1975, 0,
	0, 0, 2767, 0, 0, 1954, 1956, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 1972, 0, 0, 0, 0, 0,
	0, 1941, 1942, 0, 1948, 0, 0, 1949, 1950, 1951,
	1952, 0, 0, 0, 0, 0, 0, 1932, 0, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 1965, 0,
	0, 1975, 0, 0, 0, 0, 1979, 0, 1954, 1956,
	0, 0, 1961, 1955, 0, 0, 0, 0, 0, 0,
	0, 1927, 1973, 0, 0, 1971, 0, 1972, 0, 0,
	0, 1974, 0, 0, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 1962, 0, 0, 0, 0, 1980, 0,
	0, 0, 1963, 0, 1977, 0, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 1946, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940, 0,
	1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934, 0,
	0, 0, 1953, 0, 4968, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 1949, 1950, 1951, 1952, 0,
	0, 0, 0, 1966, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 1961, 1955, 1953, 1965, 0, 0, 1975,
	0, 0, 1927, 0, 0, 0, 1954, 1956, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 1971, 0, 1972, 0, 0, 0, 1980,
	0, 0, 1941, 1942, 0, 0, 0, 0, 1926, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 0, 1946,
	1963, 0, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 1964, 0, 1947, 0, 0, 0, 0,
	0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940,
	1979, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934,
	0, 0, 0, 0, 0, 4964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 1949, 1950, 1951, 1952,
	0, 0, 0, 0, 0, 1977, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 1939, 1945,
	1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 0, 0, 1965, 4867, 0,
	1975, 0, 0, 0, 0, 0, 0, 1954, 1956, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 1972, 0, 0, 0,
	0, 0, 0, 1941, 1942, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 1947, 0, 1924, 1925,
	0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 1955, 0, 0, 0, 0, 0, 1979, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 1962, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 1946, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944,
	1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933,
	1934, 0, 0, 0, 1953, 0, 4819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 1949, 1950, 1951, 1952, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 1924,
	1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1961, 1955, 0, 1965, 0, 0, 1975, 1979,
	0, 1927, 0, 0, 0, 1954, 1956, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 1972, 0, 0, 0, 1980, 0,
	0, 1941, 1942, 0, 0, 0, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 1963,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1938, 1939, 1945, 1967,
	1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931,
	1933, 1934, 0, 0, 0, 0, 0, 4818, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 0, 1949, 1950, 1951, 1952, 0,
	0, 0, 0, 0, 1977, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1924, 1925, 0,
	1957, 1958, 1959, 1968, 1969, 1970, 1965, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 1954, 1956, 0, 0,
	1961, 1955, 1953, 0, 0, 0, 0, 0, 0, 1927,
	0, 0, 0, 1971, 0, 1972, 0, 0, 0, 1974,
	0, 0, 1941, 1942, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	1963, 0, 0, 0, 0, 1926, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 1947, 1946, 0, 0, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	1924, 1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 1961, 1955, 0, 0, 0, 0, 0,
	0, 0, 1927, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 1977, 0, 0, 1926, 0,
	0, 0, 0, 1949, 1950, 1951, 1952, 0, 0, 1946,
	0, 0, 0, 1932, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940,
	0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934,
	0, 0, 0, 1953, 1965, 4627, 0, 1975, 0, 0,
	0, 0, 0, 0, 1954, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	0, 1971, 0, 1972, 0, 0, 0, 0, 0, 0,
	1941, 1942, 0, 0, 0, 0, 1949, 1950, 1951, 1952,
	0, 0, 0, 0, 1966, 0, 1932, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1924, 1925, 1947, 1957, 1958, 1959, 1968, 1969, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 1961, 1955, 0, 1965, 0, 0,
	1975, 0, 0, 1927, 0, 0, 0, 1954, 1956, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 1971, 0, 1972, 0, 0, 0,
	1980, 0, 0, 1941, 1942, 0, 0, 0, 0, 1926,
	0, 0, 1962, 0, 0, 0, 0, 0, 0, 0,
	1946, 1963, 0, 1977, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 1964, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944,
	1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933,
	1934, 0, 0, 0, 0, 0, 4452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 1962, 0, 1949, 1950, 1951,
	1952, 0, 0, 0, 0, 0, 1977, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 1965, 0,
	0, 1975, 0, 0, 0, 0, 1979, 0, 1954, 1956,
	0, 0, 1961, 1955, 1953, 0, 0, 0, 0, 0,
	0, 1927, 0, 0, 0, 1971, 0, 1972, 0, 0,
	0, 1974, 0, 0, 1941, 1942, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 1963, 0, 0, 0, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 1947, 1946, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940, 1979,
	1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934, 0,
	0, 0, 0, 0, 4366, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 1949, 1950, 1951, 1952, 0,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1938, 1939, 1945, 1967,
	1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931,
	1933, 1934, 0, 0, 0, 1953, 1965, 4365, 0, 1975,
	0, 0, 0, 0, 0, 0, 1954, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 1971, 0, 1972, 0, 0, 0, 0,
	0, 0, 1941, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 0, 0,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 1925, 1947, 1957, 1958, 1959, 1968,
	1969, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 1961, 1955, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 1926, 0, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 1946, 0, 0, 1977, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 1939, 1945,
	1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 0, 0, 0, 4364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 1949,
	1950, 1951, 1952, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0,
	1965, 0, 0, 1975, 0, 0, 0, 0, 1979, 0,
	1954, 1956, 1961, 1955, 0, 0, 0, 0, 0, 0,
	0, 1927, 0, 0, 0, 0, 0, 1971, 0, 1972,
	0, 1974, 0, 0, 0, 0, 1941, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 1963, 0, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944,
	1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933,
	1934, 0, 0, 0, 0, 0, 3991, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 1949, 1950, 1951, 1952, 0,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1924, 1925, 0, 1957, 1958,
	1959, 1968, 1969, 1970, 0, 0, 1965, 1953, 0, 1975,
	0, 0, 0, 0, 0, 0, 1954, 1956, 1961, 1955,
	0, 0, 0, 0, 0, 0, 0, 1927, 0, 0,
	1948, 0, 0, 1971, 0, 1972, 0, 1974, 0, 0,
	0, 0, 1941, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 1966, 0,
	1963, 0, 0, 1926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 0, 0, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 1949, 1950, 1951, 1952, 0, 0, 0, 1964, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 1938,
	1939, 1945, 1967, 1944, 1940, 0, 1937, 1935, 1936, 1928,
	1929, 1930, 1931, 1933, 1934, 0, 0, 0, 0, 0,
	3466, 1924, 1925, 0, 1957, 1958, 1959, 1968, 1969, 1970,
	0, 0, 1965, 1953, 0, 1975, 0, 0, 0, 0,
	0, 0, 1954, 1956, 1961, 1955, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 1948, 0, 0, 1971,
	0, 1972, 0, 1974, 0, 0, 0, 0, 1941, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 1966, 0, 1963, 0, 0, 1926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 1947, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 1949, 1950, 1951,
	1952, 0, 0, 0, 1964, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944,
	1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933,
	1934, 0, 0, 0, 0, 0, 3465, 0, 0, 1924,
	1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 1965, 1953,
	0, 1975, 0, 2370, 0, 0, 0, 0, 1954, 1956,
	0, 0, 1961, 1955, 0, 0, 0, 0, 0, 0,
	0, 1927, 1948, 0, 0, 1971, 0, 1972, 0, 0,
	0, 1974, 0, 0, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	1966, 0, 1963, 0, 0, 0, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 1946, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 1949, 1950, 1951, 1952, 0,
	1964, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 1938, 1939, 1945, 1967, 1944, 1940, 0, 1937, 1935,
	1936, 1928, 1929, 1930, 1931, 1933, 1934, 0, 0, 0,
	0, 0, 3464, 0, 0, 1924, 1925, 0, 1957, 1958,
	1959, 1968, 1969, 1970, 0, 1953, 1965, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 1954, 1956, 1961, 1955,
	0, 0, 0, 0, 0, 0, 0, 1927, 1948, 0,
	0, 0, 0, 1971, 0, 1972, 0, 1974, 0, 0,
	0, 0, 1941, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 1966, 0, 0, 0,
	1963, 0, 0, 1926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 0, 0, 2303, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 0, 0, 0,
	2301, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 1949, 1950, 1951, 1952, 0, 1964, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 1938, 1939, 1945,
	1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 0, 0, 0, 3463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 1953, 0, 1975, 0, 0, 0, 0,
	0, 0, 1954, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 1971,
	0, 1972, 0, 0, 0, 0, 0, 0, 1941, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 2372, 0,
	0, 0, 0, 0, 1966, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	1925, 1947, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 1961, 1955, 0, 0, 0, 0, 0, 0,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 2373, 0, 0, 0, 0, 1926, 0, 0,
	1962, 0, 0, 0, 0, 0, 0, 0, 1946, 0,
	0, 1977, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944,
	1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2302, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 1949, 1950, 1951, 1952, 0,
	0, 0, 0, 0, 0, 1932, 5118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1924, 1925, 0, 1957, 1958,
	1959, 1968, 1969, 1970, 0, 0, 1965, 0, 0, 1975,
	0, 0, 0, 0, 1979, 0, 1954, 1956, 1961, 1955,
	0, 0, 0, 0, 0, 2300, 0, 1927, 0, 0,
	0, 0, 0, 1971, 0, 1972, 0, 1974, 0, 0,
	0, 0, 1941, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	1963, 0, 0, 1926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 0, 0, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1938, 1939, 1945, 1967, 1944, 1940, 0, 1937, 1935,
	1936, 1928, 1929, 1930, 1931, 1933, 1934, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 1949, 1950, 1951, 1952, 0, 0, 0, 0, 0,
	0, 1932, 0, 3528, 0, 0, 0, 5117, 0, 3527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 1925, 0, 1957, 1958, 1959, 1968,
	1969, 1970, 1965, 1953, 0, 1975, 0, 0, 0, 0,
	0, 0, 1954, 1956, 0, 0, 1961, 1955, 0, 0,
	0, 0, 3399, 0, 0, 1927, 1948, 0, 0, 1971,
	0, 1972, 0, 0, 0, 1974, 0, 0, 1941, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 1966, 0, 1963, 0, 0, 0,
	0, 1926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 1946, 0, 0, 0, 0, 0, 0, 2915,
	0, 1943, 0, 0, 0, 0, 1924, 1925, 1979, 1957,
	1958, 1959, 1968, 1969, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	1955, 0, 0, 0, 2914, 0, 0, 0, 1927, 1973,
	0, 3400, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 1977, 0, 0, 1926, 0, 0, 0, 0, 1949,
	1950, 1951, 1952, 0, 1964, 1946, 0, 0, 0, 1932,
	0, 0, 0, 0, 1943, 1938, 1939, 1945, 1967, 1944,
	1940, 0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1965, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	1954, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 1971, 0, 1972,
	0, 0, 0, 0, 0, 0, 1941, 1942, 0, 0,
	0, 0, 1949, 1950, 1951, 1952, 0, 0, 0, 0,
	1966, 0, 1932, 0, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1924, 1925, 1947,
	1957, 1958, 1959, 1968, 1969, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	1961, 1955, 0, 1965, 0, 0, 1975, 0, 0, 1927,
	0, 0, 0, 1954, 1956, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	1971, 0, 1972, 0, 0, 0, 1980, 0, 0, 1941,
	1942, 0, 0, 0, 0, 1926, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 0, 1946, 1963, 0, 1977,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	1964, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 1938, 1939, 1945, 1967, 1944, 1940, 0, 1937, 1935,
	1936, 1928, 1929, 1930, 1931, 1933, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 1962, 0, 1949, 1950, 1951, 1952, 0, 0, 0,
	0, 0, 1977, 1932, 0, 4723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 1925, 0, 1957, 1958, 1959, 1968,
	1969, 1970, 0, 0, 1965, 0, 0, 1975, 0, 0,
	0, 0, 1979, 0, 1954, 1956, 1961, 1955, 0, 0,
	1953, 0, 0, 0, 0, 1927, 0, 0, 0, 0,
	0, 1971, 0, 1972, 0, 1974, 0, 0, 0, 0,
	1941, 1942, 0, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 1963, 0,
	0, 1926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 1946, 1947, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1938,
	1939, 1945, 1967, 1944, 1940, 1979, 1937, 1935, 1936, 1928,
	1929, 1930, 1931, 1933, 1934, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 1949,
	1950, 1951, 1952, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1938, 1939, 1945, 1967, 1944, 1940, 0, 1937,
	1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934, 0, 0,
	1965, 1953, 0, 1975, 0, 0, 0, 0, 0, 0,
	1954, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 1971, 0, 1972,
	0, 0, 0, 0, 0, 0, 1941, 1942, 0, 0,
	0, 0, 1924, 1925, 0, 1957, 1958, 1959, 1968, 1969,
	1970, 0, 1966, 0, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 1955, 0, 0, 1947,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	1926, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 1946, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 1962, 1156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940, 0,
	1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934, 1924,
	1925, 0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1949, 1950,
	1951, 1952, 1961, 1955, 0, 0, 0, 0, 1932, 0,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 1926, 1966, 1965,
	0, 0, 1975, 0, 0, 0, 0, 0, 1946, 1954,
	1956, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 1972, 0,
	0, 0, 1979, 0, 0, 1941, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 1950, 1951, 1952, 0,
	0, 0, 0, 0, 0, 1932, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 1938,
	1939, 1945, 1967, 1944, 1940, 0, 1937, 1935, 1936, 1928,
	1929, 1930, 1931, 1933, 1934, 0, 0, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 1977, 1975,
	0, 0, 0, 0, 0, 0, 1954, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 1972, 0, 0, 0, 0,
	0, 0, 1941, 1942, 0, 0, 0, 0, 1924, 1925,
	0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0, 0,
	1963, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 1961, 1955, 0, 0, 1947, 0, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1924, 1925, 1980, 1957, 1958,
	1959, 1968, 1969, 1970, 0, 0, 1926, 1966, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 1946, 1961, 1955,
	0, 0, 0, 0, 0, 0, 1943, 1927, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 1974, 0, 0,
	0, 1979, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	4498, 0, 0, 1926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 0, 0, 0, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 1949, 1950, 1951, 1952, 0, 0,
	0, 0, 0, 0, 1932, 0, 4186, 1964, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 1938, 1939,
	1945, 1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929,
	1930, 1931, 1933, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 1965, 0, 0, 1975, 0,
	0, 1949, 1950, 1951, 1952, 1954, 1956, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 1972, 0, 0, 0, 1979, 0,
	0, 1941, 1942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4187, 0, 1963,
	0, 0, 1965, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 1954, 1956, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 1972, 0, 0, 0, 0, 0, 0, 1941, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 1963, 0, 0, 0,
	0, 0, 1973, 0, 0, 1938, 1939, 1945, 1967, 1944,
	1940, 1947, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933,
	1934, 0, 0, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 1924, 1925, 0, 1957, 1958, 1959, 1968, 1969,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 1961, 1955, 0, 0, 1953,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 1979, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	1926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 1946, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3972, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940,
	0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 1950,
	1951, 1952, 0, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 3534, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1938, 1939, 1945, 1967, 1944, 1940, 0, 1937, 1935,
	1936, 1928, 1929, 1930, 1931, 1933, 1934, 0, 0, 1965,
	0, 0, 1975, 0, 0, 0, 0, 0, 0, 1954,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 1972, 0,
	0, 0, 0, 0, 0, 1941, 1942, 0, 0, 0,
	0, 1924, 1925, 0, 1957, 1958, 1959, 1968, 1969, 1970,
	0, 0, 0, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 1955, 0, 0, 1947, 3529,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 1925,
	1980, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0, 1926,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	1946, 1961, 1955, 0, 0, 0, 0, 0, 0, 1943,
	1927, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1949, 1950, 1951,
	1952, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 1965, 0,
	0, 1975, 0, 0, 1949, 1950, 1951, 1952, 1954, 1956,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 1972, 0, 0,
	0, 1979, 0, 0, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 1965, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 1954, 1956, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 1972, 0, 0, 0, 0, 0,
	0, 1941, 1942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 1963,
	0, 0, 0, 0, 0, 1973, 0, 0, 1938, 1939,
	1945, 1967, 1944, 1940, 1947, 1937, 1935, 1936, 1928, 1929,
	1930, 1931, 1933, 1934, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 3494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 0, 0, 1924, 1925, 0, 1957, 1958,
	1959, 1968, 1969, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 1961, 1955,
	0, 0, 1953, 3467, 0, 0, 0, 1927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	1979, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 1926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 1946, 0, 0, 0, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 1939, 1945,
	1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 1950, 1951, 1952, 0, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940,
	0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934,
	0, 0, 1965, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 1954, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 1972, 0, 0, 0, 0, 0, 0, 1941, 1942,
	0, 0, 0, 0, 1924, 1925, 0, 1957, 1958, 1959,
	1968, 1969, 1970, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1961, 1955, 0,
	0, 1947, 0, 0, 0, 0, 1927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1924, 1925, 1980, 1957, 1958, 1959, 1968, 1969, 1970,
	0, 0, 1926, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 1946, 1961, 1955, 0, 0, 0, 0,
	0, 0, 1943, 1927, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 1926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1949, 1950, 1951, 1952, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 1965, 0, 0, 1975, 0, 0, 1949, 1950, 1951,
	1952, 1954, 1956, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	1972, 0, 0, 0, 1979, 0, 0, 1941, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 1965, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 1954, 1956,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 1972, 0, 0,
	0, 0, 0, 0, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1964, 0, 1963, 0, 0, 0, 0, 0, 1973, 0,
	0, 1938, 1939, 1945, 1967, 1944, 1940, 1947, 1937, 1935,
	1936, 1928, 1929, 1930, 1931, 1933, 1934, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 0, 0, 0, 0, 0, 0, 1924, 1925,
	0, 1957, 1958, 1959, 1968, 1969, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	0, 1961, 1955, 0, 0, 1953, 0, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 1979, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 1946, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2483, 0, 0, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1938, 1939, 1945, 1967, 1944, 1940, 0, 1937, 1935, 1936,
	1928, 1929, 1930, 1931, 1933, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 1950, 1951, 1952, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 1939, 1945,
	1967, 1944, 1940, 0, 1937, 1935, 1936, 1928, 1929, 1930,
	1931, 1933, 1934, 0, 0, 1965, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 1954, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 1972, 0, 0, 0, 0, 0,
	0, 1941, 1942, 0, 0, 0, 0, 1924, 1925, 0,
	1957, 1958, 1959, 1968, 1969, 1970, 0, 0, 0, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 1947, 0, 0, 0, 0, 1927,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 1926, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 1946, 0, 0, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 1949, 1950, 1951, 1952, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 1965, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 1954, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 1972, 0, 0, 0, 1979, 0, 0,
	1941, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 1938, 1939, 1945, 1967, 1944, 1940,
	0, 1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934,
	0, 0, 0, 1034, 0, 1085, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 1040,
	1039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1059, 0, 0, 0, 0, 0, 1041, 0,
	0, 0, 0, 1044, 0, 0, 0, 0, 1096, 0,
	1069, 0, 0, 0, 1948, 0, 0, 0, 1054, 1055,
	0, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 1086, 1046, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1048, 1979, 0, 0, 0,
	0, 0, 0, 0, 1083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1050, 0, 0, 0, 0, 0, 0,
	0, 1038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 1051, 1052, 1938, 1939, 1945, 1967, 1944, 1940, 0,
	1937, 1935, 1936, 1928, 1929, 1930, 1931, 1933, 1934, 0,
	1060, 1058, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 1070, 0, 0, 1091, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 1082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 1095, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1043,
	0, 0, 0, 1078, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1088, 1076, 0, 0, 0, 0, 0, 0,
	0, 1094, 1071, 0, 0, 1063, 1061, 0, 0, 1066,
	0, 0, 0, 0, 0, 1067, 0, 0, 1036, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 1068,
	0, 0, 0, 0, 0, 1065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1092, 0, 0, 0,
	0, 0, 0, 0, 1072, 0, 1073, 0, 0, 0,
	0, 0, 0, 0, 1049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1077,
}

var sqlPact = [...]int{
	12286, -1000, -1000, -1000, -1000, 186, -1000, -1000, 185, 184,
	179, 178, 177, 175, 173, 172, 171, 167, 166, -1000,
	-1000, 160, 156, 154, -1000, -1000, 153, -1000, -1000, 152,
	-1000, 151, 147, 146, -1000, -1000, 145, -1000, 143, -1000,
	-1000, -1000, -1000, 142, 141, 138, 97752, 97168, 98334, 2406,
	123994, 106494, 2296, 86668, 123410, 86084, 122826, 2233, 12598, 122242,
	2889, 137, -1000, 121658, 135, 134, 132, -1000, 105910, 121074,
	103576, 1867, -1000, 130, 128, -1000, 8995, 75522, 127, 126,
	125, 124, 2464, 123, -1000, 118, 113, -1000, -1000, 112,
	-1000, 12050, 1584, -1000, 111, 110, -1000, 6795, 102992, 108,
	107, 105, 2621, 103, 102, 72598, 99, 96, 94, 2575,
	3008, -1000, -1000, 2178, -1000, -1000, 92, 90, 89, 87,
	86, 85, 84, 82, 81, 79, 76, 75, 73, -1000,
	72, 71, 69, 67, 65, -1000, 63, 62, 57, -1000,
	54, -1000, 52, 49, 46, 45, 44, 43, 37, 34,
	33, 31, 30, 28, 26, 25, 24, 145421, -1000, -1000,
	23, -1000, 2006, 1786, 1780, 1774, 1770, 1752, 1046, 22,
	20, 19, 18, 17, 14, 13, 8, 7, 5, 4,
	3, -1, -2, -3, -5, -6, -7, -8, -9, 136,
	-12, -13, -14, -16, -17, -18, -19, 2949, 3671, -1000,
	1618, 980, 32685, 3128, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 132724, 124576, -20, -101, -24, -1000, 3443,
	1061, 60273, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 269, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 480, 2502, 751, -1000, -1000, -1000, 120490,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2405, -44,
	-1000, 2098, -1000, -1000, -1000, -1000, -1000, 750, -1000, 2397,
	2352, 359, 2351, -1000, -1000, -1000, 3533, 2573, 3920, 3918,
	3914, 3913, 3909, 132142, 1924, 3906, 2657, 3903, 3901, 3900,
	3898, 3895, 3894, 3893, -1000, 96584, 1105, 96000, 95416, 3565,
	119908, 94832, 119324, 135058, 50721, 915, 3532, -1000, -1000, -1000,
	-1000, -1000, -1000, 124576, -1000, 1104, -1000, -1000, 3892, 2160,
	749, 105326, -1000, -1000, 118740, 2092, -1000, -1000, -1000, 987,
	1234, 35077, 35077, 35077, 263, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3546, -1000, -1000, -1000, -1000, 124576, 2847, 2847,
	1469, 1472, 1472, 2847, 2847, -1000, -1000, -1000, -1000, -1000,
	-1000, 3891, 3890, 3888, 3887, 3886, -1000, -1000, -1000, 85500,
	25318, 84916, 84332, 118156, 50123, 94248, 93664, 3885, 3882, 3878,
	49525, 80244, 57894, 3669, 117572, 134474, 3668, 3667, 1103, 2088,
	1558, -1000, -1000, -1000, -1000, -1000, -1000, -40, 77271, 3721,
	124576, -1000, 260, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	48927, 624, 48329, 555, 47731, 501, 116988, -1000, -1000, -1000,
	-1000, 79650, -1000, 116404, 2570, 3877, 3876, 1199, 3875, 3394,
	1895, 3872, 1941, 1285, 3871, 3869, 3866, 3863, 3862, 3861,
	3860, 1570, 115820, 3127, 1609, 115236, 1797, 133890, 1102, 93080,
	98334, 2768, 114652, 1365, 1354, -1000, -1000, -1000, -1000, 3206,
	2999, 2998, 1279, -1000, -1000, -1000, -1000, 63807, 10270, 9862,
	-1000, -1000, 12605, 114068, 66767, 98334, 98334, -1000, -1000, -1000,
	-1000, -1000, -1000, 47133, 515, 46535, 908, 113484, -1000, -1000,
	64399, 3072, 1152, -1000, -1000, -1000, -1000, -1000, 112900, 45937,
	511, 45339, 743, 124576, -1000, 3126, 2029, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2665, 1696, 3722, 2845,
	79056, 2156, 1497, 3503, 3204, 3199, 1593, 2086, 3197, 3857,
	2718, 3195, 3190, 3189, 3187, 3173, 1715, 2712, 371, 2711,
	32087, 3105, 1823, 44741, 1586, 1589, 3170, 3156, 3739, 3595,
	2069, 2116, 2130, 2133, 83748, 3855, 3854, 3467, 3155, 3150,
	2905, 3124, -1000, 3071, 1546, 241, -1000, -1000, -1000, -1000,
	-1000, -1000, 1566, -1000, -1000, -1000, -1000, -1000, 88414, -1000,
	-1000, 1406, -1000, -1000, 1406, -1000, -1000, -1000, -1000, -1000,
	1336, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1618, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2322, -1000, 2177, -1000,
	-1000, -1000, 2601, 3420, 3420, 3420, 3531, 434, 423, -1000,
	136, -1000, -1000, 144400, -1000, -1000, 51319, 51319, 51319, 51319,
	51319, 51319, 51319, 51319, 2249, -1000, 748, -1000, -1000, 799,
	-1000, 746, 696, 620, -1000, -1000, -1000, -1000, -1000, -1000,
	745, -1000, -1000, -1000, -1000, -1000, -1000, 3723, -1000, 28362,
	-1000, -1000, -1000, 491, 744, 51319, -1000, -1000, 3757, 3755,
	1040, -1000, 239, 1004, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3125, 742, 740, -1000,
	738, 735, 733, 729, 728, -1000, 726, -1000, 724, 723,
	722, 721, 719, 718, 717, 716, -1000, 2107, -1000, -1000,
	-1000, -1000, -1000, -1000, 681, 676, 676, 676, -1000, 1095,
	-1000, -1000, -1000, 259, 675, 255, 673, 672, 671, -1000,
	713, 712, 710, 709, 708, 707, 704, 703, 701, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1090, -1000, -1000, -1000,
	-1000, 1350, -41, 124576, -1000, 480, -41, -1000, -1000, 699,
	-1000, 36889, 36889, 36889, -1000, -1000, 2396, 51319, -1000, 2735,
	-1000, -34, -34, 929, 62028, -1000, 59081, 929, 379, 808,
	67934, -1000, 3069, -1000, -1000, 697, 237, -1000, -1000, -1000,
	-1000, 25910, 3068, 124576, 124576, 124576, 98334, 98334, 98334, 124576,
	3853, 3852, 3214, 51319, -1000, -1000, 74938, 136805, 98916, -1000,
	-1000, 3647, 73180, 74355, 3123, 136805, 3116, 136226, 3851, -1000,
	-1000, -1000, -1000, -1000, 3283, 3849, 3847, 3845, -1000, 124576,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 247, 3281, -1000,
	-1000, 102408, 247, 3280, -1000, 247, 3279, -1000, 101826, -1000,
	-1000, 2307, 3278, -1000, -1000, 251, 3277, -1000, -1000, -1000,
	248, 3275, -1000, -1000, 233, -128, 3274, -1000, -1000, -1000,
	-1000, -1000, -1000, 144400, -1000, -1000, -1000, 135642, -1000, 3471,
	-1000, 124576, -1000, 51319, -1000, -1000, 3645, 1861, 3543, 3582,
	-1000, -1000, -57, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2618, 2620, 1213, 2442, -1000, 3330, 1572, 35077, 3381, -1000,
	-1000, -1000, -1000, -1000, 231, 25910, 2982, -1000, -1000, 124576,
	-1000, 124576, 2847, 2847, -1000, -1000, -1000, 3730, 3729, 2847,
	2847, 124576, 124576, -1000, -1000, -1000, -1000, -1000, -1000, 5257,
	3273, 1590, -1000, 2437, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2108, 3260, -1000, 2172, 3258, 2101, -1000,
	-1000, 1764, -1000, 141064, 1437, -1000, -1000, -1000, -1000, 2475,
	3256, -33, -1000, -1000, 2324, -1000, -1000, -1000, -1000, 140858,
	-1000, 3022, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1746, -1000, -1000, 2215, 2020, -1000, 1397, 3255, -1000,
	2844, 2844, 92496, 3271, 66175, 64399, 77271, -46, -1000, -1000,
	-1000, -1000, -1000, -257, -1000, 24719, 144400, -1000, -1000, -1000,
	-1000, 1877, 144400, 939, -1000, -1000, 3248, -1000, 144400, 932,
	-1000, -1000, 3243, -1000, 2706, -1000, 3114, -1000, -1000, 2513,
	2511, 1053, -1000, 3844, -1000, -1000, 3842, -1000, 3841, 3840,
	3839, -1000, 1684, 2078, 3838, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 91914, 2392, -1000, -1000, 90162, 3109, -1000,
	2510, 3566, -1000, 91330, 1101, -1000, 1023, 2509, -1000, 101244,
	1044, 2505, -1000, 3835, 3551, 2792, 1023, 2501, -1000, -1000,
	-1000, -1000, -1000, 1052, -1000, 69681, -1000, 69681, -1000, 1701,
	-1000, 131560, -34, 98334, 3723, -1000, -83, -1000, -1000, -1000,
	1061, -1000, 63212, -1000, 63212, 104742, 80836, 1009, 3067, 72013,
	144343, -1000, 1051, -1000, -1000, 144400, -1000, -1000, -1000, 2704,
	-1000, -201, 2839, -1000, 80836, 65583, 3066, 2698, -1000, 144400,
	-1000, -1000, -1000, -1000, 144400, -1000, -1000, -1000, 80836, 90162,
	-1000, 112316, 90746, -1000, -1000, 1531, 2682, -1000, -1000, -1000,
	80836, 1400, 80836, 80836, 80836, -1000, 111732, -1000, -1000, 2200,
	1691, 3458, 2199, 98334, -1000, 1890, -1000, -1000, -1000, 3486,
	3270, 124576, -1000, -1000, 3106, -1000, 76688, 100662, -1000, 100080,
	-1000, 99498, -1000, 98334, -1000, 98334, -1000, 3834, 3833, 3829,
	-1000, -1000, 3828, -1000, 3826, 3478, -1000, 706, 44143, 144400,
	3476, -1000, 3825, 2085, 3105, 144400, -1000, 3266, 1795, 1759,
	124576, -1000, -1000, 124576, -1000, 124576, -1000, -1000, -1000, 2427,
	1626, -1000, -1000, 2614, -1000, -1000, -1000, 1050, -1000, -1000,
	98334, 98334, 98334, 98334, 1274, -1000, 43545, -1000, -1000, 3148,
	3824, 1674, -1000, 1887, -1000, 3063, 3450, -1000, 1525, 1831,
	223, 3760, -1000, -1000, 253, -1000, -1000, -57, -1000, 130978,
	-1000, 2601, -1000, 124576, -1000, 2603, 3094, 3103, 1847, 2425,
	2741, -1000, 42947, 2678, 54907, 2433, 136, -1000, -1000, 136,
	136, 33881, -1000, -1000, 73180, 73180, 25910, 1343, 51319, 51319,
	51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319,
	51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319,
	51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319,
	51319, 51319, 51319, 51319, 2154, 51319, 1326, 51319, 51319, 51319,
	51319, 2432, -1000, -1000, 2056, 550, 2155, 696, -1000, -1000,
	-1000, 3708, 3708, 3708, 1457, 1457, 1457, 145056, 145056, 596,
	3823, 799, -1000, 51319, -1000, 109, 62610, 51319, 26504, -1000,
	423, 9782, 2625, -1000, 422, 27132, -1000, -1000, -1000, 28362,
	620, 42319, 51319, 1047, 144400, -1000, -1000, 1673, 3725, 24120,
	3136, 2887, 695, 856, 847, 31459, 30831, 30203, 29575, 846,
	802, 51319, 51319, 51319, 51319, 51319, 51319, 51319, 51319, -1000,
	-1000, 3728, -1000, 3725, -1000, -1000, -1000, -1000, 3725, 1341,
	1322, 3725, -1000, 3725, 3725, 10762, 10762, 41721, 41123, 40525,
	55505, 39927, 51319, 28977, 39329, 38731, -1000, 57299, 124576, -41,
	3644, 51319, 261, -1000, 141855, -1000, 261, 261, 694, -91,
	144400, 2654, 2654, 60858, 2580, 2284, 2284, 2284, -1000, 929,
	18691, 929, 109986, 2306, 929, 929, 216, 219, 421, 58489,
	2735, 109986, 789, 693, -25, -26, -27, -1000, -1000, -28,
	-29, -1000, -1000, 98334, 692, 26504, 25910, 213, 2112, -94,
	2740, 2738, -1000, 2733, 2724, -1000, 2721, 2391, -1000, -1000,
	-1000, 1899, -96, 1325, 98334, 124576, 1388, 3822, -102, -1000,
	7299, -104, -1000, 1258, 211, 3725, -1000, -1000, -1000, -1000,
	-1000, 3821, 3820, -1000, 1087, 688, 682, 417, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 681, 676, 676, 676,
	-1000, 259, 675, 255, 673, 672, 671, -1000, -1000, -1000,
	-1000, -1000, 3061, 98334, 124576, 1382, 3819, 87250, -128, 98916,
	-86, -1000, -1000, 124576, -1000, -1000, -1000, 3818, -1000, 98334,
	-1000, -1000, 98334, 247, 3236, -1000, 98334, -1000, 98334, 243,
	3234, -1000, -1000, 124576, -1000, 98334, 98334, -1000, 124576, 124576,
	124576, 136805, 136805, 242, -1000, 98334, 893, -105, 1205, -57,
	-1000, -1000, -1000, -1000, 1406, -1000, 1955, -1000, -1000, -1000,
	-1000, -1000, -1000, 1404, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1040, -1000, -1000, -1000, -1000, 3719, 3714, -42,
	-1000, -1000, 25910, -1000, 1972, -1000, -1000, -1000, -1000, 124576,
	124576, -1000, -1000, 124576, 124576, -1000, -1000, -58, 1690, 569,
	1321, -1000, 83164, 2497, 3457, 3817, 2785, 3428, 1659, -1000,
	1623, 670, -1000, 3556, 88414, 3594, 3607, 1395, -1000, 3060,
	-1000, -1000, -1000, 984, 1665, 1819, 1320, 1313, 88414, 2172,
	-1000, 73180, -1000, 2875, 3529, 1472, 1438, 1472, 1472, 1432,
	-1000, 88414, 1816, 1312, 1310, 1309, -1000, -1000, 1681, 1678,
	-1000, -1000, 111150, -1000, 1307, 1306, 3664, 2322, 2258, 824,
	2025, -1000, 1417, 1305, 3059, -1000, -1000, -60, 3591, 3606,
	1395, -1000, 3057, 1303, -1000, -1000, -1000, 3528, 98334, 25910,
	1655, 1651, 1646, 1814, 1302, -43, -1000, 3589, 1700, -1000,
	90162, 90162, 107076, 124576, 3683, 80836, -1000, 2539, -1000, -1000,
	-1000, 3502, 3501, -1000, -1000, 1296, 1294, -1000, 1084, 9395,
	3357, -1000, 136805, 1084, 1084, 2100, 3230, 2820, 1811, -1000,
	2835, 921, 2831, -1000, -1000, -1000, 921, -46, 77271, 124576,
	206, -1000, 109, 51319, 51319, 109, 51319, 109, -1000, 3562,
	3229, 3227, 3816, -1000, -1000, -1000, -1000, -1000, 3813, 2047,
	2656, -1000, -1000, 667, 2500, 3054, 124576, 2759, -50, 98334,
	-1000, 76105, 3224, 136805, 2172, 2499, -1000, -1000, 89580, -1000,
	3221, 480, 2495, -1000, 613, 3811, 3220, -1000, 130396, -1000,
	3471, 1311, 3219, 1150, 499, 3640, -1000, 499, 70264, -1000,
	124576, -1000, -34, 289, 82000, -106, -107, 419, -1000, 110568,
	124576, 124576, 3367, 2054, 2052, -1000, 1016, 64399, -1000, 64399,
	-112, -1000, -201, 2829, 1579, 64399, -1000, 1009, 1009, 921,
	-1000, 921, -1000, 98334, 3099, -1000, -1000, 80836, 1009, 1009,
	1009, -1000, -1000, -1000, -1000, 3810, 3806, 3805, 3803, -1000,
	-1000, 1022, 98334, 124576, 98334, -1000, -1000, 1672, -1000, 205,
	-1000, 136805, -1000, 136805, 124576, 98334, -1000, 1022, 124576, 1022,
	124576, 1022, 124576, 1022, 1022, -1000, -1000, -1000, -1000, -1000,
	109, -1000, -1000, 144400, -1000, 51319, -1000, -1000, 1596, 3802,
	1729, -1000, 3097, -1000, 3095, -1000, 11, -1000, -1000, 3727,
	1926, -1000, 3754, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3801, 144400, -1000, 2158, -1000, -1000, -1000, -1000, 98334,
	98334, 98334, 98334, 124576, 3356, -1000, 124576, 3342, 98334, -1000,
	3759, -1000, -1000, 88414, -1000, 2603, 3094, -1000, -1000, -1000,
	-1000, -1000, -1000, 1562, 2363, -1000, 2680, -1000, 1653, -1000,
	-1000, -1000, 144400, 56103, -1000, -1000, 144400, 1891, -1000, 54309,
	53711, -1000, -1000, 1785, 98334, 2762, -1000, 2762, -117, -1000,
	141762, 2679, 98334, -1000, -1000, -1000, -1000, -1000, 976, 634,
	634, 1408, 1408, 1408, 1408, 3560, 8214, 2285, 8035, 5281,
	5281, 6980, 6980, 6980, 6980, 6980, 5281, 7504, 1457, 1457,
	7504, 7504, 7504, 7504, 7504, 1457, 1457, 1457, 5281, 5281,
	5281, 1457, 145056, 144797, 9330, 51319, 51319, 1293, 2038, 550,
	9099, 51319, 6030, 6030, 6030, 6030, -1000, 2248, -1000, -1000,
	-1000, -1000, 3048, 656, 55505, 55505, -1000, -1000, -1000, -1000,
	27747, 51319, -1000, -1000, -1000, -1000, 38103, -1000, -1000, 7209,
	-329, 415, -1000, 204, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 414, -93, -45,
	-1000, 51319, 51319, 51319, 412, -1000, 202, 51319, 124576, -1000,
	137680, 787, -114, -1000, -118, 1517, -1000, 51319, -1000, -1000,
	1291, -1000, 1290, 1287, 1286, -1000, 655, 411, -1000, 201,
	-1000, 2272, 652, 640, 51319, -1000, -1000, -1000, -1000, -1000,
	140650, -1000, -1000, 140444, -1000, -1000, 140238, -1000, -1000, 140032,
	-1000, -1000, -1000, -1000, -1000, 144084, 137420, 137390, 17928, 8738,
	17637, 16766, -121, 405, -123, 400, 975, 963, 398, 395,
	391, -126, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -132, 390, -1000, 3047, -93, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 386, -1000, 385,
	-1000, 143687, -93, 384, 777, -1000, 55505, 55505, 55505, 55505,
	382, -1000, 141554, -1000, 143630, 37505, 37505, 37505, 381, 143371,
	51319, -93, -134, -1000, -135, -1000, -1000, -1000, -1000, 582,
	-144, 1058, 36889, 59688, 25910, -1000, 1058, 1058, 51319, -1000,
	51319, 2691, -1000, -1000, -1000, -1000, 2689, 2179, 2654, 60858,
	-1000, -1000, -1000, -1000, 109986, -1000, 3723, 2828, -1000, 109986,
	-1000, -1000, 124576, 480, -1000, 109986, 109986, 25910, 929, -1000,
	929, 109986, 731, -1000, -1000, -1000, -1000, -1000, 377, 70849,
	-45, 200, 25910, 1023, -1000, -1000, 2804, 2804, 2804, 2804,
	2804, 98334, -1000, -1000, 136805, 1283, -52, -97, 2827, -1000,
	3681, -1000, 2140, -1000, 73180, -1000, 798, 1098, 25910, -1000,
	-1000, -1000, 638, -1000, 3725, 3725, -1000, 3725, 136805, 3044,
	222, 2823, -1000, 2388, -47, 212, 136805, 3800, -1000, -1000,
	247, -1000, 98334, 247, 247, -1000, 98334, 98334, 2307, -1000,
	251, -1000, 248, -1000, -1000, -128, -1000, 1045, 35077, -1000,
	1406, -1000, -1000, 1652, -1000, 2064, -1000, 1278, -1000, -1000,
	35077, -1000, 3371, -1000, 1821, -1000, -1000, -1000, -1000, 2607,
	124576, 124576, 98334, -1000, 108240, 124576, -1000, 2232, 136805, -1000,
	2494, 129814, 2463, 129232, 73180, -1000, -1000, 633, 996, 2677,
	2671, 1146, 124576, 124576, 2670, 128650, 128068, -1000, 3799, 124576,
	2136, 51319, 108240, 3527, 2321, 5244, 109, 109, -1000, 109,
	-1000, -1000, 632, 1315, 98334, 98334, 124576, 136805, 98334, 2001,
	-1000, -1000, -1000, -1000, -1000, 88996, -1000, -1000, 1472, -1000,
	-1000, -1000, 1472, 2172, 1987, 124576, 136805, 98334, 136805, 127486,
	2019, 126904, 1992, -1000, -1000, 1813, 124576, -1000, -1000, -1000,
	-1000, 1557, -1000, 824, 1280, 3043, 51319, 51319, 2174, 109,
	109, -1000, 109, 630, 25910, 2051, -1000, 3087, 124576, 3753,
	126322, 3751, 124576, 124576, 124576, 136805, 3418, 124576, -1000, -1000,
	-1000, -281, -1000, 909, 906, -257, -1000, 3683, -1000, 905,
	2160, 124576, 136805, -1000, 125740, 9395, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2169, 78462, 1157, 124576, 1397, -1000, -1000,
	1810, 1276, 1275, 88414, 2214, 1804, 1916, 136805, 64399, 1020,
	64399, 2798, -1000, -1000, 23521, -1000, 144400, 144400, -1000, 144400,
	-1000, 76105, 80836, 124576, -1000, -1000, 1097, 124576, 82582, 995,
	3216, 69098, -257, 1009, 80836, 98334, -50, 2759, 124576, -1000,
	-1000, 2172, 3213, 480, 2490, -1000, 136805, 3637, 3212, 625,
	3797, 3796, -1000, 98334, 2386, 2489, -1000, -1000, 125158, 3205,
	824, 124576, 1058, 60858, 2009, -1000, 67352, 1118, 124576, 1925,
	188, -1000, -1000, -1000, -10, 124576, -1000, 807, -1000, -1000,
	289, 289, 1009, -281, 623, 64991, -146, -1000, 199, 621,
	902, 901, -1000, 5670, -1000, -201, -1000, 80836, 1016, 64399,
	3042, -201, 2822, 3039, -1000, -1000, 1043, -1000, 1474, 1009,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -35, 1915, 124576, -128, -128, -66, -52, -1000, 1022,
	-1000, 1022, -1000, 1022, -1000, -1000, -1000, 144400, -1000, -1000,
	-1000, 1721, 1677, 124576, -1000, 3092, -1000, 124576, -1000, -1000,
	25910, 124576, 98334, 25910, 98334, 3090, 3086, -1000, -1000, -1000,
	124576, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1171,
	-1000, 1891, 2357, -1000, 620, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2589, -1000, -53, 33881, 931, -1000,
	-1000, 98334, -36, 51319, 51319, 8343, 6502, 51319, 55505, 55505,
	-1000, 51319, 5432, -1000, -1000, -1000, -1000, -1000, 3036, 619,
	51319, 73180, 6314, 6046, -1000, 375, 15933, 7504, -1000, 51319,
	-1000, 1041, -1000, 374, 36291, -1000, 142252, -54, -147, -1000,
	19304, -93, -149, -1000, -1000, 797, -1000, 3196, -1000, 51319,
	142974, 2565, 2124, 1929, 1745, 3725, 3750, 22922, -1000, 71431,
	1060, 2311, 139748, -1000, -1000, -1000, -1000, 73180, 73180, 51319,
	51319, -1000, 51319, 51319, 51319, -1000, -1000, -1000, 3725, 969,
	-1000, -1000, -1000, 969, -1000, -1000, 1472, -1000, 1472, -1000,
	51319, -1000, -1000, 3027, 51319, -1000, 73180, 73180, 55505, 55505,
	55505, 55505, 55505, 55505, 55505, 55505, 55505, 55505, 55505, 55505,
	55505, 55505, 55505, 55505, 55505, 55505, 55505, 55505, 2651, 55505,
	3706, 3706, 3706, 788, -1000, 3082, 3027, 51319, 51319, 73180,
	372, 369, 368, -1000, 51319, -93, -1000, -1000, 10280, 618,
	-1000, 2578, -1000, 2885, -1000, 51319, -1000, -154, -1000, 2735,
	-1000, -1000, 2885, 2885, -155, 144400, 60858, 60858, -1000, 616,
	51319, 2686, -1000, -1000, 776, -327, -1000, 899, -1000, -1000,
	-1000, -1000, -1000, -1000, 898, -1000, 480, -1000, -1000, -1000,
	196, 109986, 109986, 774, -1000, -156, -1000, -1000, -157, -1000,
	3636, 366, 25910, -1000, 1058, 2772, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2719, -256, 136805, 136805, 1802, 2346, 3749,
	-1000, 3726, 796, 764, 190, 3725, 365, 361, 360, -128,
	136805, 136805, 1801, 73772, 136805, -1000, -1000, -1000, 247, -1000,
	-1000, -1000, 243, -1000, -1000, -1000, -1000, 2747, -1000, -57,
	-1000, -1000, -1000, 51319, -1000, 1001, -1000, -1000, 3452, 615,
	1273, 1270, -1000, -158, -1000, 896, -1000, -1000, -1000, -1000,
	2971, -1000, 3211, -1000, 2484, -1000, 1122, 2480, 1680, -1000,
	51319, 614, 2791, 612, 610, 3795, 2196, 3794, 1148, 3210,
	2307, 3208, 2307, -1000, -1000, -1000, 990, -1000, 144400, -163,
	-1000, 2321, -1000, 609, 607, -1000, -58, 1686, 537, 1269,
	1032, -1000, -1000, 51319, 51319, 109404, -1000, 479, 3456, -38,
	-1000, -1000, -1000, 1790, 1264, 1262, -1000, -1000, -1000, -1000,
	2172, 1787, 1260, 1253, -1000, -1000, -1000, -1000, -1000, 2476,
	-1000, 124576, -1000, 3207, 124576, 1031, -1000, 3153, 3151, 961,
	124576, 51319, 51319, 142917, 142658, -1000, 1030, -1000, -1000, 51319,
	-1000, -60, 1251, 3577, 2474, 98334, -1000, 2307, 3203, 1242,
	-1000, 1241, -1000, -1000, -1000, 3586, 3585, 1255, 107076, 80836,
	80836, 3683, 64399, -1000, -1000, -1000, 80836, -1000, -1000, 77870,
	-1000, -1000, 1084, 124576, 136805, 98334, 1900, -1000, -1000, 87250,
	87832, 124576, 2820, -128, 921, -1000, 2590, 921, 1020, 3025,
	-1000, 2757, -1000, 1028, 98334, 3793, 358, -164, -61, 73180,
	-1000, -1000, -1000, -1000, 2463, 98334, 124576, 1387, 2788, 124576,
	124576, 3634, -1000, 2416, 622, 98334, 966, -1000, 3723, -1000,
	-1000, -1000, 1027, -1000, 3563, 98334, 3633, 3201, 1023, 109,
	98334, 3709, -1000, -1000, 3631, 98334, 3200, 2385, 2473, 2643,
	824, 81418, 1023, 2308, -70, -1000, 1925, 35675, 3447, -165,
	-1000, -1000, -1000, 1058, 70264, 60858, 51319, 3792, -166, -1000,
	-1000, -1000, -1000, -1000, 107076, 80836, 1009, 124576, 124576, 3790,
	80836, 80836, 80836, -62, 606, -1000, 884, 881, 879, -1000,
	-1000, -1000, -1000, -1000, -1000, 876, 874, 870, 867, 1016,
	-1000, -1000, -201, 64399, 1016, 64399, 109, -1000, 2342, 98334,
	-1000, 22323, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1022,
	3748, -257, -1000, -1000, -1000, 2191, 2431, 2191, 1906, 1905,
	-1000, -1000, 2327, -1000, -1000, -1000, -1000, 2750, 3417, 25910,
	3564, 6030, 51319, 51319, 572, 5236, 654, 6030, 51319, 51319,
	73180, 11270, -173, 51319, 51319, -1000, 51319, 757, 144400, -1000,
	3747, 51319, 351, 350, -1000, -1000, -1000, 3724, -1000, -1000,
	-1000, 144400, 51319, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	344, -1000, 149, -1000, -1000, -1000, 133306, -1000, 51319, 339,
	3526, -1000, 335, 334, 10763, 312, 139540, 139349, 139256, 333,
	-1000, -1000, 331, 328, 144400, 3082, 144400, -1000, -1000, 1091,
	1091, 1430, 1430, 1430, 1430, 3706, 449, 1299, 669, 930,
	930, 930, 541, 788, 788, 930, 930, 930, 788, 3021,
	2649, 605, 5326, -1000, -1000, 144400, 144400, 326, -1000, -1000,
	-1000, -93, 322, 10280, -1000, 2880, 3525, 144400, -1000, 60858,
	2880, 2880, -1000, -1000, 2179, 124576, 144400, 60858, -1000, 2828,
	-1000, 20520, 19915, -1000, 25910, -1000, -1000, -1000, -1000, 3723,
	-1000, 70849, -1000, 604, -1000, 12, -1000, 2772, -1000, 864,
	-1000, -1000, 80836, 80836, 2804, -1000, 2900, -256, -152, 124576,
	-1000, -1000, 756, 3789, 793, 25910, 309, -1000, -1000, -1000,
	-128, -128, 124576, 3019, 98334, 124576, 1370, -128, -1000, -1000,
	-1000, 3366, 144400, 3080, 2870, 2869, 124576, 124576, -1000, 108240,
	35077, 1588, 108822, 124576, 3182, -1000, 3179, -1000, 1146, 2886,
	139048, 61443, -1000, 61443, 124576, -1000, -1000, -1000, -1000, 2089,
	1547, 3788, 1189, -1000, 3488, 124576, -1000, 124576, -1000, -1000,
	-1000, 108240, -1000, 124576, 124576, 98334, 124576, -1000, 136805, 3162,
	-178, 144400, -64, -1000, 863, -1000, 1423, -1000, 21724, 124576,
	136805, 98334, 124576, 136805, 98334, 3177, 1117, 124576, -1000, 2225,
	-1000, -1000, 3118, -1000, 144400, 142511, 109, 51319, 3161, -180,
	25910, -1000, 3744, 3742, 3176, 3498, -1000, 124576, 3741, 124576,
	98334, 3365, -1000, -1000, -1000, 1021, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1781, 1236, 1231, 2383, 2379, 2345, -66,
	2214, 1020, -67, 603, -1000, 862, -1000, -1000, 861, 858,
	1020, -1000, 80836, 64399, 3786, 480, -1000, 2774, -1000, 104158,
	82582, 2358, -1000, -1000, 598, 124576, 124576, 590, -1000, 109,
	-1000, 3784, 108240, 589, -1000, 2331, -1000, 755, -1000, 2563,
	136805, 2172, 109, 98334, -1000, 1014, 480, 308, -68, -1000,
	3193, 1138, 25910, 98334, 3172, 2646, 824, 81418, -1000, 1311,
	2741, -1000, -69, -1000, 674, 109, 2308, -1000, -70, 144400,
	-1000, 853, -188, 287, -1000, 3362, -1000, -1000, -189, -1000,
	-1000, 5279, 5279, 80836, 64399, 80836, 80836, 80836, 64399, 80836,
	-1000, 1016, 921, -1000, -201, -1000, 2482, -1000, -1000, -1000,
	-1000, -1000, -1000, 25910, 1647, -1000, 587, 584, -1000, -1000,
	-1000, -1000, 3417, 6030, 6030, 51319, 51319, 51319, 6030, 11270,
	-194, -1000, 6030, 6030, -93, -1000, -1000, 142252, -1000, -1000,
	-1000, 144400, -1000, 21125, 2206, -1000, 138857, -1000, 33881, -1000,
	-1000, 51319, 51319, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 55505, 3018, 580, 73180, -1000, -1000, 286, 1042, 51319,
	53113, 2735, 1042, 1042, -1000, -199, -1000, -1000, -1000, 3723,
	-1000, 3723, 12, -1000, -1000, 3782, 25910, -1000, 80836, -1000,
	-1000, -1000, 2344, -1000, -1000, 3102, -197, 778, -1000, 3780,
	-1000, -1000, 174, 136805, 3017, 155, 2819, -1000, 109, -1000,
	-1000, -1000, -1000, -1000, -1000, 2818, 3630, -1000, 1971, -1000,
	124576, 124576, -1000, 124576, -1000, 25910, 124576, 2906, 1323, -1000,
	996, 2669, 578, 55505, 1170, 98334, 946, 2866, 2860, -1000,
	3658, 3519, 2911, -200, -1000, 124576, 51319, 124576, -202, -205,
	2450, -1000, -1000, 1168, 1318, 51319, 1165, -1000, -1000, -1000,
	73180, 577, 2307, 2307, -1000, -208, -213, -1000, -1000, -1000,
	51319, 1229, 124576, 34479, -1000, 3779, 3456, -1000, -1000, -1000,
	-1000, -1000, -1000, 124576, 124576, -1000, 124576, -1000, 51319, -1000,
	142046, 51319, 1224, -1000, -1000, -1000, 3735, 2307, 25910, 2307,
	-1000, 2307, 3498, 1182, 2411, 124576, 136805, 98334, 1859, 1859,
	3028, -1000, -1000, -1000, 2520, 2520, 80836, 64399, 64399, -1000,
	-71, 1020, -1000, 3628, 2205, 3777, -1000, -1000, -1000, -1000,
	2663, -1000, -1000, -1000, 124576, 2658, 2879, 61443, 575, 574,
	124576, 1010, -1000, -214, 82582, 995, 986, -1000, -73, 570,
	-1000, 850, -1000, -1000, -1000, -1000, 480, -1000, 2742, 3627,
	-1000, 3734, 568, 558, 124576, 2368, 554, 25910, 3435, 824,
	81418, -1000, 3205, 1925, -1000, 2459, 124576, 3426, -1000, 2741,
	550, -1000, 1009, 548, 1009, -1000, -216, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1016, -74, -1000, 926,
	910, -1000, -1000, 98334, 98334, 51319, 51319, -1000, 6030, 6030,
	6030, -1000, 285, -1000, -1000, 2308, 3518, -1000, -76, 138569,
	138378, 7548, 55505, 73180, -219, -1000, -1000, 124576, 144400, -77,
	-1000, 144400, 539, 525, 454, -1000, -1000, -1000, 753, 573,
	-1000, -1000, -1000, -1000, 136805, 3776, -1000, 136805, -128, 136805,
	136805, 1765, -1000, 107658, 124576, -1000, -1000, 1680, 1853, -1000,
	-1000, -1000, 124576, 2468, -1000, -1000, -1000, 1024, 51319, 5326,
	55505, 524, 51319, -1000, 523, 522, 3626, 3218, -1000, 2769,
	2941, 1999, 61443, -1000, 3417, -1000, 138170, -1000, 1136, 2036,
	-1000, -1000, -1000, -1000, 144400, 55505, 3498, 61443, -1000, -1000,
	521, 516, 144400, 514, 839, 3012, -1000, -1000, -1000, -1000,
	-257, -1000, 144400, 109, 144400, 509, 3577, -1000, -1000, -1000,
	-1000, 2307, 98334, 835, -1000, -1000, -1000, 1223, -1000, -1000,
	-1000, -1000, 3774, 3773, 3003, 87250, -1000, -222, -1000, -1000,
	-1000, 2040, 109, 995, -1000, -1000, 2358, 507, -1000, 1008,
	2637, 2637, -224, 61443, 61443, -227, 2365, 2717, -1000, 283,
	3624, 986, -1000, 3703, -1000, 3341, 3341, 51319, 3620, 3360,
	-1000, 109, -1000, 3709, 61443, -1000, 98334, 61443, 2367, 2102,
	2611, 81418, -1000, 2643, -1000, -1000, -229, 124576, 1925, -1000,
	-1000, 80836, -1000, -1000, -1000, 2482, -1000, 124576, -1000, 124576,
	-1000, -1000, -232, -235, -1000, 2246, 51319, 33881, -1000, -1000,
	7548, -238, -1000, -84, -1000, 3618, 53113, 3772, 3767, 3766,
	-1000, -1000, -256, -1000, -128, -128, -128, 124576, -1000, 1970,
	-1000, 2463, -1000, -1000, 3171, -1000, 2877, 503, 138077, 5326,
	2581, 124576, 137886, 2172, 2172, -1000, 3602, 2899, -1000, -1000,
	2174, 498, -1000, -1000, -1000, -1000, 931, 124576, 1008, 2876,
	98334, 5326, 1140, -240, 2191, 2191, 51319, 33283, 2212, -1000,
	51319, -1000, -1000, 3498, 64399, 136805, -1000, -1000, 136805, 2366,
	-1000, 2927, 3716, -1000, 2365, 124576, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1136, -243,
	-248, -1000, -1000, 3483, -1000, 3343, 2774, 109, -1000, -1000,
	-1000, -251, 144400, 109, 3765, 1014, 278, -254, 1138, -260,
	98334, 1978, -1000, 824, -1000, 2646, 1058, 3302, -1000, -261,
	-1000, -262, -268, -1000, -1000, 276, 52515, 52515, 52515, -93,
	-117, -1000, 124576, 488, -1000, -1000, -1000, -1000, -1000, 148,
	-1000, -1000, 3147, 857, -1000, 851, 1961, 272, 1143, 271,
	249, -1000, -1000, -1000, 2911, -1000, 124576, -1000, -1000, -1000,
	857, 480, -1000, 51319, 1136, -269, -1000, 1115, -270, -1000,
	1111, -271, -1000, 2988, -1000, -279, 2307, -1000, -256, 242,
	1859, 1011, 3561, -1000, -1000, -1000, 2602, -280, -1000, -1000,
	1999, 1136, 2174, 2378, -1000, 2205, 1010, -1000, -1000, -1000,
	-1000, -1000, 1136, 474, 1999, 468, 1555, 824, -1000, -1000,
	1472, 3435, 3285, 1441, 1009, -1000, -1000, -1000, 3175, -1000,
	56701, 2339, 1903, 141348, 3175, 3175, -1000, -1000, 136805, 124576,
	1008, 3539, -1000, 914, 860, 1594, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1058, -287, -1000, 2581, 144400, 1008,
	-1000, 2191, 2814, -1000, 2191, 2967, -1000, 2211, -1000, -1000,
	-1000, -1000, 2965, -1000, 1826, 3685, -1000, -1000, 1008, 124576,
	2174, 1999, 1008, 1882, 1878, 3764, 995, 2365, 1999, 61443,
	2174, 61443, 2162, -1000, 124576, -1000, 2102, 1425, -1000, 1658,
	-1000, -1000, 2159, 3612, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -128, -1000, -1000, 834, -1000, 3327, -1000, 1161, 2173,
	2173, -1000, -1000, 851, -1000, -1000, 467, -1000, 466, -1000,
	136805, 2325, -1000, -1000, -1000, -1000, 1008, 2174, 1058, -1000,
	3763, -1000, 2365, -1000, 2174, -288, 1008, -293, 2245, -1000,
	-1000, -257, 1978, -1000, 1656, 70264, 1901, -1000, -1000, 2301,
	51917, 51319, -1000, 3687, -1000, -1000, 2668, -1000, 2911, 51319,
	51319, 242, 68516, 1058, 1008, -1000, -1000, 2602, 1008, 1136,
	1058, 1999, -1000, 824, 1555, 70264, -276, -1000, -1000, -1000,
	144400, -1000, -1000, -1000, -1000, -294, -296, -1000, -281, 107076,
	-1000, 1058, -1000, 1058, 1999, -1000, 2174, 136805, 2162, -276,
	-1000, 2174, 1212, -307, -1000, -1000, 2174, 1008, -1000, -1000,
	-1000, -1000, -1000, 445, -1000, 1008, 1058, 51319, 1058, -1000,
	-320, -1000, 2174, -1000,
}

var sqlPgo = [...]int{
	0, 4560, 4559, 4558, 4556, 4555, 4554, 4553, 4552, 4551,
	4550, 4549, 4547, 4546, 4545, 164, 4543, 4541, 4539, 4538,
	4536, 4533, 4531, 4526, 4524, 4522, 4520, 4518, 4516, 4515,
	4514, 4510, 4508, 4507, 4506, 4505, 4504, 4503, 4501, 4500,
	4498, 4497, 4494, 4493, 4492, 4489, 4488, 4485, 4480, 4479,
	4478, 4477, 4476, 4475, 4474, 4473, 4470, 4469, 4468, 4467,
	4465, 4464, 4463, 4462, 4461, 4460, 4458, 4456, 4455, 4454,
	4453, 4452, 59, 4449, 4448, 4447, 4446, 4445, 4443, 4442,
	4441, 4440, 4439, 4438, 4435, 4434, 4433, 4432, 4431, 4428,
	4426, 4424, 4422, 68, 4421, 296, 4418, 4416, 4412, 4410,
	4409, 4406, 4405, 4403, 4402, 4401, 4400, 4398, 295, 4396,
	143, 186, 4395, 4394, 3923, 4392, 4390, 294, 4387, 4386,
	4385, 4383, 4382, 302, 4379, 4378, 4377, 4376, 4374, 276,
	4373, 4364, 4361, 4360, 4356, 4355, 61, 137, 4352, 4351,
	233, 4350, 4349, 4348, 4347, 4346, 4335, 4334, 274, 275,
	4333, 4332, 4330, 270, 180, 4329, 293, 4328, 4327, 4326,
	4325, 4322, 4321, 4320, 4319, 4317, 4316, 4315, 4312, 4311,
	4302, 4301, 4298, 4297, 4294, 4291, 4290, 4289, 4288, 4285,
	4284, 4283, 4281, 4280, 4279, 4274, 4271, 4270, 4268, 4267,
	4265, 4264, 4263, 4262, 4259, 4257, 4256, 4255, 4254, 266,
	227, 139, 4253, 4252, 289, 286, 4251, 4250, 4249, 4248,
	4247, 4246, 4244, 4243, 4242, 4240, 4238, 4236, 4235, 4232,
	148, 23, 32, 4231, 4230, 92, 96, 93, 107, 109,
	104, 4229, 125, 4228, 138, 120, 4227, 121, 114, 18,
	43, 245, 256, 10961, 251, 4226, 4223, 4222, 263, 208,
	4221, 255, 4219, 4217, 4216, 4215, 4214, 4213, 84, 56,
	218, 4212, 4210, 147, 179, 194, 191, 188, 187, 128,
	57, 113, 87, 65, 51, 14, 88, 224, 24, 1,
	278, 4209, 277, 6, 149, 10, 39, 4208, 4207, 4204,
	4202, 3931, 122, 4198, 284, 259, 182, 4193, 4186, 4185,
	785, 4181, 4178, 53, 246, 269, 95, 142, 20, 141,
	4177, 160, 173, 34, 4173, 177, 110, 4172, 4170, 99,
	98, 9392, 11050, 4168, 4165, 117, 76, 127, 5135, 165,
	159, 209, 130, 178, 174, 58, 219, 216, 195, 281,
	4163, 267, 4162, 3599, 86, 197, 169, 5644, 4160, 4155,
	4153, 89, 4152, 111, 4151, 4149, 69, 16, 3, 2,
	153, 35, 38, 4, 4146, 31, 140, 52, 25, 4145,
	33, 4144, 4143, 4141, 4139, 50, 4136, 46, 175, 4135,
	4133, 300, 4131, 102, 62, 105, 4130, 45, 231, 4127,
	241, 151, 4126, 4125, 273, 214, 196, 4124, 83, 248,
	4123, 4122, 4120, 4119, 4116, 4115, 150, 7, 146, 4114,
	4113, 156, 4111, 55, 258, 207, 4110, 64, 4109, 4108,
	190, 79, 154, 298, 192, 234, 135, 239, 202, 249,
	4107, 4106, 4105, 236, 4104, 4103, 229, 161, 4102, 4100,
	257, 304, 94, 48, 90, 254, 85, 206, 170, 4099,
	212, 4098, 4097, 299, 199, 226, 44, 9, 12, 101,
	116, 4095, 5, 253, 168, 240, 129, 4093, 8641, 2668,
	2469, 247, 4092, 167, 136, 75, 145, 171, 283, 97,
	4091, 4090, 3204, 4087, 4086, 4085, 4082, 201, 4081, 4080,
	4079, 166, 189, 210, 4078, 123, 80, 54, 26, 134,
	291, 301, 133, 230, 217, 268, 4076, 4075, 4074, 200,
	4071, 74, 112, 172, 213, 264, 63, 4070, 183, 4069,
	158, 620, 77, 184, 4067, 238, 4064, 4061, 4060, 4057,
	4056, 4055, 4054, 508, 250, 4053, 4052, 4051, 37, 205,
	4049, 280, 198, 244, 131, 73, 4047, 100, 3334, 4046,
	115, 222, 66, 8, 4045, 81, 4044, 4703, 60, 4041,
	0, 13896, 10289, 12912, 13841, 4039, 4491, 4036, 4034, 4033,
	235, 82, 4032, 4031, 4029, 118, 4028, 91, 4027, 4026,
	71, 4025, 28, 15, 17, 29, 27, 718, 379, 4024,
	4022, 22, 157, 162, 4021, 297, 242, 4019, 4018, 4014,
	4013, 103, 4004, 47, 4003, 42, 3999, 3998, 49, 11,
	30, 3997, 3996, 176, 3990, 132, 220, 3984, 181, 3981,
	70, 155, 3975, 3974, 3972, 72, 67, 272, 221, 223,
	108, 3971, 292, 3970, 211, 3969, 3967, 21, 3966, 3964,
	261, 124, 119, 40, 262, 152, 41, 193, 225, 3963,
	3961, 185, 3958, 3952, 3948, 290, 3946, 3587, 279, 3939,
	36, 3938, 3935, 3934, 13, 3933, 3929, 215, 3377, 3928,
	3927, 19, 3926, 204,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 13, 13, 9, 9, 9, 9, 10, 10,
	10, 10, 10, 56, 56, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 40, 42,
	41, 35, 35, 36, 36, 37, 38, 38, 43, 44,
	12, 12, 12, 8, 8, 8, 8, 8, 8, 8,
	8, 21, 21, 45, 45, 22, 22, 47, 47, 23,
	23, 48, 48, 627, 627, 627, 628, 628, 629, 629,
	629, 26, 50, 19, 20, 20, 20, 20, 630, 630,
	630, 630, 39, 27, 51, 32, 32, 32, 32, 32,
	223, 223, 223, 223, 25, 25, 46, 46, 266, 266,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	623, 623, 268, 268, 267, 255, 255, 256, 256, 257,
	257, 631, 631, 269, 269, 269, 270, 270, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 522, 522,
	522, 553, 553, 553, 553, 555, 555, 650, 650, 651,
	651, 651, 651, 651, 139, 139, 419, 419, 419, 60,
	60, 60, 60, 60, 618, 618, 225, 225, 225, 227,
	227, 226, 226, 226, 226, 226, 84, 84, 637, 637,
	636, 635, 635, 635, 638, 638, 638, 224, 224, 224,
	135, 135, 135, 135, 135, 135, 135, 135, 136, 136,
	137, 137, 228, 228, 228, 230, 230, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	234, 18, 18, 18, 118, 118, 118, 118, 118, 118,
	118, 113, 113, 557, 557, 558, 558, 219, 219, 220,
	220, 220, 220, 221, 221, 222, 222, 222, 75, 75,
	231, 231, 233, 233, 232, 232, 232, 232, 232, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 63, 63,
	63, 63, 63, 64, 64, 64, 64, 64, 64, 65,
	65, 65, 65, 65, 65, 66, 66, 73, 73, 73,
	73, 73, 73, 73, 73, 201, 201, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	81, 81, 81, 81, 81, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 653, 653, 654, 654, 655, 655,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 90, 90, 379, 379,
	342, 342, 91, 91, 91, 92, 92, 93, 93, 77,
	77, 616, 616, 395, 395, 513, 513, 78, 624, 624,
	624, 626, 626, 625, 625, 95, 95, 418, 418, 96,
	96, 96, 96, 96, 96, 97, 97, 97, 97, 97,
	97, 97, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 105, 105, 105, 105,
	105, 106, 106, 106, 103, 103, 103, 100, 100, 100,
	99, 99, 99, 104, 104, 104, 615, 331, 331, 102,
	102, 102, 101, 101, 101, 396, 396, 107, 107, 107,
	107, 343, 108, 108, 108, 108, 108, 108, 108, 108,
	111, 111, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 515, 515, 4, 4, 261,
	261, 260, 260, 260, 260, 5, 5, 5, 264, 264,
	263, 262, 109, 109, 109, 480, 480, 114, 114, 114,
	434, 434, 115, 115, 115, 115, 115, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 620, 620,
	388, 388, 294, 294, 294, 294, 127, 127, 127, 127,
	128, 128, 128, 128, 129, 129, 206, 206, 145, 145,
	145, 145, 144, 144, 144, 144, 144, 144, 144, 144,
	67, 67, 67, 68, 68, 69, 69, 70, 70, 71,
	71, 72, 72, 72, 72, 72, 148, 148, 31, 31,
	31, 31, 149, 149, 647, 647, 151, 147, 147, 147,
	147, 147, 146, 146, 150, 150, 150, 150, 152, 154,
	154, 154, 154, 154, 153, 153, 153, 153, 153, 155,
	155, 547, 547, 404, 404, 545, 545, 567, 567, 546,
	546, 349, 349, 349, 349, 349, 350, 350, 350, 556,
	556, 556, 556, 556, 556, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 207, 207, 207, 208, 208, 212, 212, 213, 213,
	213, 214, 214, 214, 211, 211, 211, 209, 209, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 217,
	217, 215, 215, 216, 216, 658, 658, 657, 657, 218,
	218, 218, 218, 218, 182, 182, 182, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 405, 405,
	185, 185, 185, 169, 169, 157, 157, 157, 157, 157,
	157, 157, 162, 162, 162, 162, 162, 162, 162, 162,
	163, 163, 163, 158, 158, 171, 171, 171, 171, 171,
	164, 164, 165, 165, 165, 166, 166, 166, 166, 193,
	193, 168, 168, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 159, 159, 159, 159, 173, 173, 173, 173,
	441, 441, 441, 199, 199, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 196, 196, 196, 196, 196, 196, 639, 639, 640,
	640, 640, 189, 189, 189, 189, 189, 189, 494, 494,
	183, 183, 183, 183, 188, 188, 188, 188, 191, 191,
	191, 191, 424, 424, 180, 180, 180, 181, 181, 181,
	186, 186, 198, 187, 380, 380, 184, 184, 190, 190,
	190, 190, 192, 192, 192, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 161, 161, 161, 161, 194, 194,
	179, 179, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 659, 659, 175, 175, 175, 174, 174,
	174, 174, 177, 177, 178, 178, 178, 178, 178, 178,
	176, 167, 197, 617, 617, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 614, 614, 614, 614, 619, 619,
	119, 119, 119, 119, 119, 119, 119, 130, 130, 130,
	130, 130, 130, 130, 133, 133, 120, 120, 120, 120,
	120, 120, 120, 123, 123, 121, 121, 121, 121, 122,
	122, 85, 85, 85, 85, 85, 17, 17, 17, 86,
	86, 285, 285, 239, 239, 239, 367, 367, 240, 240,
	357, 357, 357, 357, 235, 235, 236, 236, 237, 238,
	238, 87, 87, 660, 660, 660, 632, 632, 632, 633,
	633, 633, 633, 633, 633, 351, 351, 352, 352, 460,
	460, 460, 460, 460, 355, 355, 355, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 365, 366, 366, 358,
	358, 364, 363, 363, 362, 362, 361, 361, 359, 360,
	360, 360, 369, 369, 368, 371, 371, 370, 459, 576,
	576, 578, 578, 578, 578, 578, 578, 578, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 442, 442, 661, 661, 662,
	663, 574, 574, 574, 575, 570, 570, 571, 571, 571,
	571, 571, 353, 353, 354, 354, 354, 354, 572, 573,
	386, 386, 498, 577, 577, 579, 579, 581, 664, 664,
	664, 664, 664, 664, 665, 665, 665, 458, 458, 457,
	457, 456, 456, 377, 377, 582, 582, 582, 582, 583,
	583, 583, 583, 583, 586, 585, 584, 584, 584, 584,
	584, 89, 89, 89, 421, 421, 420, 420, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 203, 203, 297, 297, 297, 83, 83,
	83, 14, 14, 14, 14, 14, 14, 14, 312, 312,
	15, 15, 15, 634, 634, 634, 88, 88, 88, 88,
	88, 88, 375, 375, 375, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 622, 622, 621, 621, 298, 298, 667, 667, 94,
	94, 94, 94, 94, 94, 94, 94, 516, 516, 517,
	517, 82, 82, 82, 82, 82, 443, 443, 440, 440,
	439, 439, 385, 385, 496, 496, 496, 497, 302, 302,
	303, 303, 258, 258, 258, 34, 33, 24, 24, 28,
	28, 29, 29, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 30, 30, 53, 53, 53, 53, 54, 54,
	54, 54, 57, 57, 58, 58, 52, 52, 52, 52,
	55, 55, 49, 49, 59, 59, 59, 59, 59, 641,
	643, 643, 642, 642, 646, 646, 646, 646, 646, 646,
	644, 644, 645, 645, 648, 648, 649, 649, 126, 126,
	131, 131, 131, 131, 131, 132, 132, 132, 132, 134,
	134, 134, 134, 143, 143, 202, 202, 202, 202, 202,
	202, 202, 61, 61, 61, 61, 74, 74, 74, 74,
	141, 669, 669, 669, 142, 142, 142, 668, 668, 295,
	295, 453, 453, 454, 454, 670, 670, 455, 455, 455,
	455, 455, 288, 287, 289, 289, 290, 290, 80, 80,
	80, 278, 278, 277, 279, 279, 280, 280, 275, 275,
	559, 559, 282, 282, 282, 283, 283, 271, 271, 272,
	272, 273, 273, 274, 274, 286, 286, 554, 554, 671,
	671, 117, 117, 117, 205, 205, 341, 341, 341, 450,
	450, 450, 378, 378, 309, 309, 452, 452, 452, 452,
	452, 417, 417, 417, 204, 204, 393, 393, 407, 407,
	408, 408, 510, 510, 409, 124, 124, 125, 125, 140,
	140, 243, 243, 241, 241, 241, 241, 241, 241, 241,
	241, 248, 248, 249, 249, 250, 250, 251, 252, 252,
	252, 252, 397, 397, 253, 253, 253, 242, 242, 242,
	244, 244, 244, 244, 244, 244, 244, 247, 247, 247,
	247, 254, 254, 254, 246, 246, 593, 593, 593, 595,
	595, 597, 597, 596, 596, 592, 592, 594, 594, 666,
	666, 423, 423, 423, 374, 376, 372, 372, 373, 373,
	383, 383, 381, 382, 382, 384, 384, 495, 495, 495,
	259, 259, 259, 414, 414, 414, 414, 415, 415, 446,
	446, 444, 444, 444, 444, 445, 445, 447, 447, 447,
	448, 448, 449, 449, 411, 411, 412, 412, 413, 413,
	413, 413, 476, 476, 245, 245, 245, 390, 390, 390,
	391, 391, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 467, 467, 465, 465, 465, 465, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 500, 501,
	501, 392, 392, 502, 451, 451, 611, 611, 611, 612,
	612, 493, 493, 503, 503, 503, 503, 503, 503, 491,
	491, 492, 492, 511, 512, 512, 427, 427, 427, 427,
	425, 425, 428, 428, 428, 428, 428, 426, 426, 504,
	504, 504, 504, 416, 416, 505, 505, 505, 505, 506,
	507, 507, 508, 508, 461, 462, 462, 518, 518, 518,
	518, 520, 389, 389, 389, 389, 389, 569, 568, 568,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 535, 535, 535, 535, 535, 535, 535, 521, 521,
	521, 521, 521, 525, 525, 525, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 526, 526, 531,
	531, 532, 532, 532, 527, 528, 533, 533, 533, 533,
	672, 672, 537, 537, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 523, 523, 523, 530, 530, 530, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 435, 435, 437, 437, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 470, 470, 470,
	470, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 587, 587, 587, 587,
	587, 587, 587, 587, 472, 472, 590, 590, 591, 591,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 598, 598, 599, 599, 601, 601, 602, 602, 603,
	604, 604, 604, 605, 606, 606, 600, 600, 607, 607,
	607, 607, 608, 608, 609, 609, 609, 609, 609, 610,
	610, 610, 610, 610, 482, 482, 483, 483, 489, 489,
	489, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 348, 348, 347, 299,
	299, 299, 299, 299, 299, 402, 402, 400, 400, 400,
	403, 403, 401, 401, 399, 399, 398, 398, 479, 479,
	477, 477, 481, 481, 429, 429, 536, 536, 536, 536,
	536, 536, 536, 536, 430, 430, 430, 438, 431, 431,
	432, 432, 432, 432, 432, 473, 474, 433, 433, 433,
	475, 475, 484, 488, 488, 487, 486, 486, 485, 485,
	463, 463, 464, 464, 410, 410, 673, 673, 406, 406,
	509, 509, 509, 509, 345, 345, 394, 394, 344, 344,
	336, 336, 337, 337, 337, 337, 387, 387, 490, 490,
	538, 538, 539, 539, 540, 540, 541, 541, 542, 543,
	544, 478, 478, 320, 319, 306, 307, 318, 317, 316,
	305, 308, 313, 314, 315, 310, 311, 327, 326, 325,
	276, 281, 332, 333, 333, 335, 335, 334, 334, 322,
	323, 324, 514, 304, 338, 338, 339, 339, 339, 340,
	340, 340, 340, 300, 300, 301, 301, 328, 328, 329,
	330, 330, 321, 321, 321, 291, 291, 291, 292, 292,
	293, 293, 552, 552, 549, 549, 549, 550, 550, 550,
	551, 551, 551, 551, 548, 548, 548, 548, 548, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 561, 561, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 563, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 566, 566,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 0,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	4, 6, 9, 6, 8, 4, 4, 5, 9, 7,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 6, 6, 9, 6, 9, 6,
	5, 6, 5, 1, 1, 1, 1, 1, 1, 0,
	1, 6, 6, 4, 8, 7, 10, 9, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 8, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 4, 4,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 3, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 7, 9, 8, 2, 1, 3,
	1, 3, 2, 5, 0, 1, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	1, 3, 3, 3, 6, 4, 9, 7, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 5,
	2, 0, 1, 2, 3, 1, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 4, 3, 6, 6, 6,
	6, 6, 8, 4, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	6, 3, 8, 5, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 4, 3, 1,
	2, 2, 2, 2, 2, 4, 6, 3, 1, 2,
	2, 7, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 7, 4, 7,
	8, 8, 9, 11, 5, 2, 6, 9, 4, 7,
	7, 10, 7, 10, 10, 13, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 4, 4,
	3, 4, 1, 1, 1, 1, 5, 3, 3, 2,
	2, 6, 3, 3, 3, 3, 4, 4, 3, 1,
	3, 3, 2, 2, 1, 3, 3, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 2,
	1, 2, 2, 2, 9, 2, 1, 0, 1, 1,
	0, 1, 2, 0, 2, 2, 0, 2, 2, 1,
	2, 3, 3, 4, 4, 4, 4, 3, 3, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 3,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	1, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 5, 3, 5, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 7, 5, 2, 0, 3, 3, 4, 3,
	3, 3, 5, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 7, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 12,
	15, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 1, 1, 1, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 0, 1,
	0, 1, 1, 0, 1, 4, 1, 0, 3, 7,
	7, 1, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 3, 6, 4, 2, 3, 5, 5, 5,
	2, 5, 5, 2, 2, 2, 0, 1, 1, 3,
	4, 10, 11, 9, 5, 3, 1, 5, 9, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 6,
	1, 3, 1, 2, 0, 1, 2, 3, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 3,
	0, 4, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 3, 2, 2, 4, 7,
	3, 4, 6, 5, 7, 5, 5, 3, 3, 0,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 16, 19, 15, 18, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 14, 16,
	3, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 7,
	10, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 630, -110, -107, -75, -73, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -218, -3, -60, -62, -76, -95,
	-97, -108, -118, -117, -119, -127, -135, -130, -113, -67,
	-140, -144, -156, -203, -204, -205, 33, 32, 104, 83,
	160, 133, 142, 211, 401, 449, 461, 417, 147, 440,
	422, -150, -151, 480, -61, -74, -142, -141, 76, 134,
	176, 432, -6, -14, -31, -18, 30, 48, -63, -64,
	-65, -66, 65, -83, -79, -90, -84, -77, -78, -81,
	-652, 106, -594, -98, -101, -134, -656, 168, 230, -120,
	-121, -122, 383, -128, -129, 442, -131, -132, -133, 445,
	169, -69, -68, 162, -241, -243, -147, -146, -148, -206,
	-157, -158, -159, -160, -161, -163, -164, -166, -193, -167,
	-168, -169, -170, -171, -172, -176, -196, -173, -174, -175,
	-178, -177, -179, -184, -180, -181, -182, -183, -185, -186,
	-188, -189, -190, -191, -192, -194, -195, 485, -187, -197,
	-165, -198, 550, 52, 501, 85, 152, 453, 21, -7,
	-8, -9, -10, -11, -12, -13, -17, -16, -59, -4,
	-5, -80, -82, -85, -86, -87, -94, -88, -89, -593,
	-99, -100, -103, -105, -106, -102, -104, 441, 602, -244,
	-242, 627, 566, -162, -21, -26, -22, -23, -25, -27,
	-24, -28, -29, -30, -45, -50, -47, -48, -46, -49,
	-51, -52, -53, -54, -55, -56, -57, -58, -33, -39,
	-40, -34, -35, -36, -37, -38, -41, -42, -43, -44,
	-19, -20, -32, 589, 598, -247, -245, -246, -254, 472,
	574, 523, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, -343, 2, -322,
	-328, -329, -330, -321, -291, -563, -566, 4, -560, -564,
	175, 240, 344, 21, 22, 24, 23, 25, 26, 27,
	28, 30, 31, 41, 43, 44, 46, 47, 48, 49,
	50, 51, 52, 56, 58, 62, 63, 64, 65, 66,
	67, 71, 76, 77, 82, 83, 84, 85, 86, 87,
	88, 89, 95, 92, 93, 94, 96, 98, 100, 101,
	102, 103, 104, 105, 107, 108, 109, 111, 112, 113,
	121, 122, 123, 124, 125, 127, 133, 128, 134, 137,
	132, 136, 138, 140, 141, 142, 145, 146, 147, 149,
	150, 151, 153, 154, 155, 157, 158, 160, 161, 162,
	165, 163, 166, 164, 167, 168, 169, 170, 173, 181,
	182, 183, 188, 190, 191, 192, 194, 197, 198, 199,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 212,
	216, 218, 219, 220, 221, 222, 223, 229, 230, 232,
	233, 234, 235, 236, 241, 242, 243, 247, 253, 254,
	258, 259, 260, 262, 266, 267, 268, 269, 270, 271,
	273, 275, 274, 277, 280, 281, 284, 285, 286, 287,
	288, 289, 293, 294, 290, 295, 296, 298, 299, 302,
	300, 303, 304, 301, 305, 307, 308, 309, 310, 311,
	312, 313, 314, 315, 316, 317, 318, 306, 321, 319,
	323, 324, 325, 326, 327, 342, 337, 338, 339, 331,
	332, 328, 333, 329, 330, 334, 335, 341, 336, 346,
	347, 348, 349, 352, 227, 246, 354, 355, 358, 360,
	377, 363, 364, 365, 368, 369, 372, 375, 376, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 388, 389,
	391, 392, 393, 395, 396, 397, 399, 401, 402, 404,
	405, 406, 408, 409, 410, 411, 412, 413, 414, 416,
	417, 419, 418, 420, 422, 424, 425, 426, 432, 433,
	440, 434, 436, 437, 438, 439, 441, 442, 443, 444,
	445, 447, 448, 449, 451, 452, 453, 454, 455, 457,
	459, 460, 464, 465, 466, 482, 483, 504, 461, 462,
	463, 467, 468, 469, 470, 471, 475, 473, 474, 476,
	477, 478, 480, 481, 484, 485, 487, 488, 489, 490,
	491, 492, 493, 496, 498, 499, 500, 501, 502, 522,
	503, 505, 509, 510, 511, 512, 506, 507, 521, 514,
	515, 516, 518, 519, 524, 525, 526, 527, 528, 529,
	531, 532, 534, 542, 543, 544, 545, 547, 550, 551,
	552, 553, 540, 555, 556, 559, 560, 564, 561, 565,
	562, 563, 566, 568, 571, 572, 573, 579, 578, 580,
	581, 582, 584, 585, 590, 591, 593, 594, 595, 37,
	53, 54, 57, 59, 61, 72, 73, 74, 78, 129,
	130, 159, 171, 172, 184, 200, 201, 213, 215, 224,
	225, 226, 248, 249, 251, 256, 278, 351, 353, 370,
	374, 390, 394, 398, 400, 415, 456, 494, 508, 513,
	535, 536, 537, 538, 546, 548, 574, 575, 576, 583,
	592, -343, 2, -322, 361, -315, 2, -291, -291, 401,
	29, 2, 29, 389, 474, 526, 528, 2, -620, -388,
	2, 29, -294, -291, 106, 211, 472, -315, 2, -620,
	211, -388, 26, 2, -291, 2, 375, 23, 28, 69,
	80, 102, 145, 170, 193, 197, -655, 377, 409, 459,
	476, 521, 532, 547, 2, 578, 299, 473, 523, 240,
	124, 552, 467, -634, 464, 465, 375, 407, 451, 214,
	567, -295, 2, 461, -291, 299, 2, 630, 98, 77,
	456, 477, -153, 2, 289, 543, -154, -155, -152, 535,
	-547, 467, 451, 321, -291, 630, 630, 630, 29, -304,
	2, -291, -304, 2, -210, 2, -304, -657, -217, -216,
	-215, 22, 433, 183, 271, 195, 231, 326, 404, 194,
	50, 523, 240, 467, 124, 519, 630, 630, 2, 523,
	380, 578, 473, 124, 412, 240, 552, 197, 145, 28,
	71, 48, 529, 606, 467, -634, 603, 604, 299, 131,
	-618, 2, -613, 4, -564, -560, -337, -336, 523, 529,
	124, -330, -321, 619, -329, 630, 630, 630, 630, 2,
	259, 260, 411, 410, 477, 478, 29, 630, 630, 630,
	630, 464, 2, 170, 23, 28, 69, 97, 102, 131,
	193, 197, 366, -653, 377, 409, 476, 521, 525, 532,
	547, -633, 503, 71, 439, 467, -632, -634, 299, 552,
	145, -439, 124, 289, 209, 560, 528, 526, 558, 137,
	247, 563, 562, 630, 630, -111, 2, 627, 33, 32,
	-110, -114, 147, 480, -234, 523, 252, 2, -291, 630,
	630, 630, 2, 259, 260, 464, 465, 29, 630, 630,
	195, -613, 519, 2, 630, 630, 630, 2, 29, 259,
	260, 464, 465, 252, 2, 71, 469, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 2, -200, 477, 503, 220, 49,
	48, 77, 29, 408, 82, 381, 125, 131, 154, 553,
	212, 240, 241, 267, 97, 98, -441, 46, 260, 71,
	259, 465, -639, 464, -494, 524, 468, 474, 518, 89,
	271, 461, 543, 545, 106, 568, 452, 595, 412, 413,
	516, 426, 290, 163, 196, 4, 124, 321, 451, 479,
	275, 274, 535, 289, 460, 384, 87, 630, -666, 2,
	523, -668, 2, 543, 543, 2, -668, 2, -668, 2,
	-668, 2, -669, 543, 592, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, -242, -244, -243, 630, 630,
	630, 630, 630, 630, 630, -200, 477, 2, 77, 29,
	29, -381, -383, 557, 250, 156, 367, -241, -243, 2,
	-593, -545, 2, -468, -567, -470, 617, 618, 610, 520,
	70, -347, 343, 596, -482, 131, 558, 361, -566, -471,
	-484, 159, 377, 456, -403, 8, 9, 5, 6, 7,
	-300, -472, -478, 549, 174, 350, -340, 631, 10, 627,
	-590, -243, -483, 38, 215, 68, -549, -339, -301, -521,
	251, -338, -321, -587, -588, 4, -560, -561, -550, -524,
	-532, -528, -529, -535, -291, -563, 80, 115, 116, 114,
	119, 118, 292, 291, 120, 117, 479, 567, 69, 37,
	224, 225, 256, 351, 226, 78, -589, 146, -562, 248,
	249, 494, 54, 415, 184, 130, 129, 353, 59, 57,
	575, -533, 126, 535, 536, 537, 538, 200, 201, 61,
	171, 172, 374, 398, 513, 546, 548, 213, 278, 45,
	110, 196, 245, 228, 255, 257, 261, 279, 282, 322,
	340, 345, 371, 373, 450, 486, -672, 576, 508, 72,
	73, 189, -595, 418, -596, -315, -595, 630, 630, 632,
	630, -372, -374, -376, 2, 29, 143, 627, 2, -499,
	2, -500, -504, -243, 272, -503, 627, -501, 625, -322,
	362, -591, 457, -587, -588, -300, -321, -339, 4, -560,
	-562, 629, -377, 627, 124, 467, 523, 81, 240, 97,
	170, 197, -434, 627, -291, 29, 361, 539, 632, -373,
	406, -480, 627, 361, 364, 195, 364, 63, 303, 2,
	2, 2, 2, 2, 224, -291, 523, 123, 2, 270,
	2, 2, 2, 2, 2, 2, 2, -396, 224, 2,
	-322, 578, -396, 224, 2, -396, 224, 2, -440, 2,
	91, -305, 224, 2, -291, -331, 224, 2, -326, -328,
	-335, 224, 2, -333, -291, -555, 224, 2, -553, 4,
	-560, 120, 479, -468, 2, -140, 2, 63, -291, 578,
	2, 482, 2, 627, -153, 2, 74, 543, 45, 477,
	-154, 2, -454, 2, -455, -287, -288, -289, -511, -290,
	258, 405, 414, 599, 135, 343, 595, -647, 195, 609,
	539, -545, -545, -545, -404, 629, -212, 56, -304, -658,
	-657, -658, -543, 29, -538, 8, -539, 617, 618, -543,
	-543, -658, -658, 2, 2, 2, 2, 2, 2, -504,
	224, -322, 2, -319, -548, 4, -560, -564, -561, -565,
	-563, 29, 32, 33, 34, 36, 38, 39, 40, 42,
	60, 68, 69, 75, 79, 81, 91, 97, 106, 114,
	115, 117, 116, 118, 119, 120, 131, 135, 139, 143,
	144, 148, 152, 156, 174, 176, 189, 193, 195, 211,
	214, 217, 231, 244, 250, 252, 272, 276, 283, 291,
	292, 343, 350, 356, 361, 362, 366, 367, 387, 403,
	421, 446, 472, 479, 497, 517, 523, 533, 539, 541,
	549, 557, 558, 567, 569, 577, 586, 587, 588, 589,
	-566, 80, 2, -504, 224, 2, -325, 224, -504, -328,
	2, -305, 2, -468, -627, 531, 166, 434, 2, -344,
	224, -322, -324, -328, -326, 2, 2, 2, 2, -468,
	2, -557, 2, -552, 10, -551, 5, 4, -560, -564,
	-561, -471, 2, -482, 29, -333, 2, -553, 224, 2,
	29, 29, 578, 406, 252, 539, 632, -394, -336, -337,
	-544, 4, 8, -387, -291, 629, -468, 2, -140, -123,
	2, 189, -468, 224, 2, -140, 224, 2, -468, 224,
	2, -140, 224, 2, -291, 2, -635, 2, -557, 224,
	224, -291, 2, 303, 2, 2, 547, 2, 102, 523,
	123, 2, 438, -654, 459, 551, 2, 2, 2, 2,
	2, 2, 2, 523, -310, 2, -291, 189, 506, -333,
	224, -334, 2, 473, -667, 418, -553, 224, 2, 578,
	-326, 224, 2, -326, 240, 254, -305, 224, 2, 528,
	526, 528, 526, 195, 2, 252, 2, 252, 2, -505,
	2, -506, -500, -507, 625, 362, -515, 2, -514, -551,
	574, -111, 627, -111, 627, 477, 627, -557, -322, -322,
	-468, 2, -140, -123, 2, -468, 2, -140, 2, -291,
	2, -137, -557, -136, 627, 195, 568, -291, 2, -468,
	2, -140, -123, 2, -468, 2, -140, 2, -234, 189,
	2, 124, 523, -200, 2, 189, 569, 2, 8, 2,
	231, -557, 468, 413, 181, 2, 482, 2, 483, 77,
	-441, 595, 77, 195, 2, 195, 2, -424, 2, 589,
	406, 195, 2, 2, -617, 2, 361, 195, 2, 195,
	2, 195, 2, 195, 2, 195, 2, -199, 478, 544,
	522, 410, 260, 2, -140, 586, -123, 260, 259, -468,
	586, 2, -640, 189, 465, -468, 2, 542, 269, 164,
	195, -424, 2, 195, 2, 195, 2, 5, 2, 43,
	411, 504, 2, 258, 405, 504, 2, 502, 2, -322,
	523, 578, 473, 124, 29, 2, 464, 2, 2, 92,
	93, 195, 2, 195, 2, 210, 195, 2, 195, 523,
	-405, 629, 595, 2, -416, -504, -453, -454, -453, 539,
	-381, -383, -200, 482, 2, -248, -414, -250, 189, -444,
	-445, -251, 283, 176, 356, -252, -423, 29, 143, -423,
	-423, 63, 628, 628, 11, 12, 79, 43, 617, 618,
	619, 620, 187, 621, 622, 615, 616, 614, 607, 608,
	612, 264, 265, 99, 611, 609, 90, 297, 458, 177,
	178, 179, 180, 435, 238, 35, 239, 14, 15, 16,
	-347, 34, 366, 282, 596, 228, 486, 610, 17, 18,
	19, 255, 257, 345, 53, 231, -299, 377, -346, 520,
	70, -468, -468, -468, -468, -468, -468, -468, -468, 373,
	627, -410, -463, 625, -243, 627, 627, 627, 627, -544,
	-243, -468, -482, 628, -401, 627, -243, -482, -477, 627,
	456, 625, 627, -485, -468, 5, 5, 5, 627, 629,
	-598, 590, 189, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 400,
	-526, 627, -525, 627, -525, -525, 579, -523, 627, 598,
	591, 627, -523, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 579, 529, 632, -595,
	-377, 627, -406, -509, -468, 619, -406, -406, 361, -398,
	-468, 110, -427, 261, 322, 196, 279, 450, 245, -465,
	631, -465, -493, 598, -243, -501, -321, -243, -503, 627,
	-499, -493, -112, -544, -95, -108, -117, -140, -156, -204,
	-205, 619, -322, 627, 195, 627, 629, -548, 195, -387,
	-305, -332, -291, -322, -338, -339, -344, -316, -291, 2,
	2, 142, -398, -613, 552, 467, 29, 473, -555, -294,
	39, -479, -518, -519, -569, 631, -568, -521, -531, -527,
	-530, 390, 394, -550, 57, 575, -533, 251, 4, -560,
	-562, 248, 249, 494, 54, 415, 184, 130, 129, 353,
	59, 535, 536, 537, 538, 200, 201, 61, 576, 508,
	72, 73, -613, 552, 467, 29, 473, 189, -555, 189,
	-555, 2, 2, 159, 2, 2, 2, -291, -269, 632,
	67, 443, 159, -396, 224, -269, 159, -269, 159, -345,
	224, -344, -269, 159, -269, 632, 159, -269, 632, 159,
	629, 632, 159, -555, 2, -440, -547, -398, 39, -454,
	2, 131, 4, 5, -670, 632, 281, -350, 296, 342,
	219, 362, 593, 354, 135, -556, 5, 4, -478, -490,
	131, 289, 251, -538, -540, 9, -541, 617, 618, -546,
	-545, 113, 629, -548, -213, 246, 41, -304, -304, -658,
	-658, 8, 8, -658, -658, -304, -304, -266, 436, 480,
	376, -265, 25, 30, 147, 242, 327, 572, 165, -362,
	243, 441, -359, 380, 159, 498, 561, -627, -630, 463,
	531, 166, 434, 94, 354, 480, 376, 436, 159, -420,
	-422, 39, 122, 327, 375, 64, 234, 301, 302, 501,
	583, 159, 480, 376, 436, 376, -15, -280, 25, 147,
	-282, -277, 480, -630, 103, 436, 602, 441, 386, 515,
	403, -630, -627, 277, -629, 585, 341, -268, 498, 561,
	-627, -630, 463, 436, -267, -364, -359, 380, 159, 631,
	25, 147, 436, 480, 376, -650, -651, 30, -261, -260,
	25, 147, 480, 564, -264, 231, -263, 25, -149, -129,
	-148, 441, 480, -149, 2, 436, 376, -621, -312, -592,
	231, 589, 159, -312, -312, -504, 224, -644, 189, 2,
	-637, -136, 273, 5, 10, -557, -136, -394, 632, 632,
	-548, 619, 465, 464, 159, 159, 159, 159, 260, 189,
	343, 343, 589, 2, 2, 2, 2, 2, 197, -632,
	-655, 2, 2, -322, 224, -379, 361, -616, -395, 523,
	-322, 189, 343, 45, -325, 224, 2, -328, 578, -621,
	343, -327, 224, -322, 39, 627, 343, 2, -440, 2,
	240, -592, 343, -505, -341, -322, -500, -341, 480, -315,
	39, -465, -322, 628, 632, -515, -515, -557, -222, 589,
	195, 627, -234, 589, 589, 260, -512, 632, -511, 231,
	-558, -557, -137, -557, 439, 195, 260, -557, -616, -305,
	2, -322, 2, 523, 262, -557, -222, 231, -557, -557,
	-557, -547, 29, 483, 2, -199, 478, 544, 93, 483,
	2, -322, 523, 124, 240, 83, -644, 189, 2, -291,
	-619, 189, -614, 451, 467, 552, -613, -322, 124, -322,
	124, -322, 124, -322, -322, 2, 2, 2, 2, 2,
	88, 2, -140, -468, 2, 88, 2, 48, 499, -640,
	189, 2, 542, 2, 542, 2, -291, -291, -291, 356,
	503, 281, 589, -322, -322, -322, -323, -328, 468, 524,
	553, 465, -468, 2, -659, 2, 195, 189, 2, 523,
	240, 523, 240, 124, 195, 77, 124, 29, 523, 462,
	629, 4, -269, 632, -295, -248, -414, -547, -415, -414,
	-249, -248, -251, 189, 414, 562, 327, 484, 266, -445,
	-444, 29, -468, -449, 183, 326, -468, -447, -470, 617,
	618, -539, -541, -397, 354, -242, -242, -242, -384, -495,
	-468, 403, 240, -520, -518, -518, -320, -548, 535, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, 282, 228, 486, 53, 231,
	-468, 539, -468, -468, -468, -468, 319, 343, 350, 549,
	174, 559, 143, 354, -673, 517, 42, -475, -243, -402,
	627, -489, 36, 497, 29, -482, 627, 2, -463, -468,
	-464, -348, -346, -291, 617, 618, 619, 620, 621, 622,
	607, 608, 609, 14, 15, 16, 612, 616, 614, 615,
	187, 99, 611, 297, 458, 90, 177, 178, 179, 180,
	264, 265, 17, 18, 19, 35, 610, -399, -398, -398,
	628, 577, 29, 143, 619, 2, 628, 632, 39, 628,
	-468, -399, -481, -477, -398, -488, -487, 586, -435, -436,
	594, 306, 127, 222, 304, -437, 471, -542, 8, -548,
	619, -599, 182, 214, 627, 628, 2, 628, 2, 628,
	-468, 2, 628, -468, 2, 628, -468, 2, 628, -468,
	2, 628, 2, 628, 2, -468, -468, -468, -468, -468,
	-468, -468, -398, 8, -542, -542, 535, 535, -542, -542,
	-542, -534, 390, 391, 392, 393, 284, 285, 286, 287,
	394, 395, 396, 397, 311, 312, 313, 314, 307, 308,
	309, 310, 315, 316, 317, 318, 205, 206, 207, 208,
	201, 202, 203, 204, -534, -429, 2, -536, -398, 4,
	594, 306, 127, 222, 304, 471, 5, -429, 2, -430,
	2, -468, -398, -431, -469, -470, 617, 618, 610, -347,
	-432, 2, -468, -399, -468, 60, 276, 541, -433, -468,
	195, -398, -398, 2, -398, 2, -471, 2, -596, 39,
	-398, -390, 632, 195, 39, 4, -390, -390, 627, 628,
	632, -428, 218, 300, 295, 254, -428, -499, -427, 261,
	-425, 371, -425, -425, -493, -306, 625, 633, -548, -493,
	-492, -491, 39, -315, 368, -493, -493, 629, 628, -492,
	626, -611, 627, 630, 630, 630, 630, 630, -322, 627,
	-398, -548, 629, 505, 2, 628, 255, 255, 255, 255,
	255, 361, 457, 628, 539, -615, -331, -335, 524, 2,
	589, -110, 363, 628, 632, -389, 38, 625, 629, -542,
	2, 2, -537, 579, 627, 627, -436, 627, 195, -615,
	-335, 524, 2, -620, -388, -388, 539, -291, 2, -322,
	-396, -269, 159, -396, -396, -269, 632, 159, -305, -326,
	-331, -333, -335, -291, -553, -555, -269, -327, -647, 628,
	543, -455, -349, 414, 496, 437, 475, 519, 9, 9,
	632, -548, -214, 466, 327, -304, -304, -304, -304, 632,
	-648, 97, 539, 81, 627, 467, -284, 290, 539, -459,
	224, 81, -570, 97, -308, -571, -291, 75, 558, 403,
	193, 157, -648, 97, 403, -648, 97, 2, 242, 97,
	480, 503, 627, 29, 63, -504, 43, 43, 29, -628,
	-629, 277, 195, 595, 523, 240, 467, 539, 539, -504,
	-422, -518, 122, 301, 302, 63, -543, -543, 63, -543,
	-543, -543, 589, -325, -504, 467, 539, 539, 539, 424,
	514, 424, 514, -277, -154, 539, 539, 29, -200, 444,
	131, -671, 609, 424, 277, -629, 539, 195, 632, 43,
	43, 29, -628, 195, 539, -344, -306, 573, 44, 573,
	44, 573, 539, 44, 467, 539, 632, 44, -260, -616,
	-616, -221, -220, -291, 5, -387, -263, -557, -262, 325,
	77, 539, 539, -15, 480, -622, -296, 109, 333, 294,
	334, 101, 330, 100, 329, 107, 331, 108, 332, 580,
	346, 581, 347, 66, 328, 305, 335, 500, 336, 582,
	348, -297, -298, 150, 382, 571, 124, -553, -15, -15,
	480, 376, 436, 159, -645, 231, 29, -634, 231, -512,
	231, -512, -336, -291, 629, -140, -468, -468, -140, -468,
	-140, 48, 159, 159, 2, 2, -667, 270, 627, -353,
	343, 195, -387, -513, 252, 632, -395, -613, 159, -553,
	-421, -420, 343, -327, 224, 2, 159, -377, 343, 153,
	627, 412, 2, 159, -307, 224, -292, -291, -440, -271,
	527, 159, -418, 569, -450, -140, 627, 131, 39, -450,
	-407, -408, -510, -409, -308, 627, -315, -465, -111, -514,
	628, 628, 628, -221, 365, -234, -378, -309, -308, 123,
	416, 416, -228, 589, -136, -137, 628, 632, -512, 231,
	506, -137, -557, -222, -222, -512, -512, -322, 189, -557,
	-222, -222, -222, 2, 2, 2, 2, -424, -322, -305,
	-344, -322, 29, 629, -555, -555, -335, -331, -424, -305,
	-424, -305, -424, -305, -424, -424, -140, -468, 503, 2,
	477, 189, 189, 629, -424, 8, -380, 446, 5, 2,
	412, 124, 523, 380, 240, -322, -344, -322, -344, -305,
	124, -305, 125, -322, 4, -504, -415, -249, 362, 266,
	484, -447, -448, -470, 456, 457, -448, 456, 457, 8,
	9, 8, 9, -253, 488, 349, -396, 632, -258, 40,
	139, 266, -322, 595, 155, -468, -468, 539, -673, 517,
	-475, 155, -468, 319, 350, 549, 174, 559, 143, 354,
	195, 627, -469, -469, 628, -400, -468, -468, 626, 635,
	628, 629, 628, -383, 632, -381, -468, -398, -398, 628,
	629, -398, -387, 626, 626, 632, 628, -486, -487, 148,
	-468, 539, 539, 539, 539, 627, 628, 629, -604, 372,
	627, 627, -468, 628, 628, 628, 628, 39, 632, 632,
	632, 628, 632, 632, 632, 628, 628, 628, 632, 628,
	595, 595, 628, 628, 628, 628, 632, 628, 632, 628,
	195, 628, 628, -438, 387, 628, 11, 12, 617, 618,
	619, 620, 187, 621, 622, 615, 616, 614, 607, 608,
	609, 90, 297, 458, 14, 15, 16, -347, 255, 231,
	-469, -469, -469, -469, 628, -473, -474, 195, 189, 39,
	-433, -433, -433, 628, 195, -398, 628, 628, 627, -597,
	299, 343, 628, -462, -461, 587, -509, -391, 2, -499,
	-317, -548, -462, -462, -398, -468, 261, 261, -426, 569,
	361, -428, -499, -492, -544, -467, -466, 191, 40, 139,
	337, 338, 339, 227, 192, -492, -315, -377, -492, -492,
	-548, -493, -493, -491, 628, -612, -544, 628, -392, -502,
	-591, -383, 629, -548, -231, -592, -201, 5, 350, -201,
	-201, -201, -201, -322, -555, 539, 539, 231, 26, 388,
	-518, 625, 626, 8, -548, 627, -542, -542, -542, -555,
	195, 195, 231, 361, 195, -553, 2, -269, -396, -269,
	-269, -344, -345, -269, -269, -269, -419, 589, -545, -454,
	556, 86, 414, 535, -545, 121, 466, -265, 436, 480,
	-308, -308, -322, -238, -237, -235, -291, 5, -332, 209,
	425, -553, 343, -459, 224, -270, 343, 224, -316, -518,
	627, -442, 591, 266, 266, 569, -308, -316, 266, 224,
	-308, 224, -316, 2, -316, -623, 414, 355, -468, -236,
	-235, 63, -360, 288, 412, 344, -266, 436, 480, 376,
	-140, -140, -140, 627, -647, 569, 142, -322, -344, -322,
	-332, -553, -327, 480, 376, 436, 340, -338, -543, -543,
	-420, 480, 376, 436, -332, -553, -325, -553, -276, 224,
	-291, 424, -276, 224, 424, 467, -305, 424, 595, 47,
	-671, 539, 195, -468, -468, -267, -140, -140, -140, 627,
	-306, -268, 436, 5, 224, -308, 5, -308, 224, 5,
	-291, -308, -332, -553, -651, 25, 147, -308, 632, 609,
	609, -264, 609, -332, -553, -296, 382, -557, 350, 565,
	-305, -621, -312, 467, 539, 539, -504, -641, -642, 211,
	449, 467, 452, -555, -136, -225, 589, -136, -219, 235,
	619, -618, -557, -291, 578, -291, -351, -354, -352, -308,
	-460, -459, -574, -575, -570, 282, 240, 558, 254, 175,
	97, -239, -240, 591, 589, 159, -342, -322, 625, -222,
	-557, -322, -513, -333, -334, 159, -377, 343, -553, 39,
	159, 627, 2, 2, -326, 361, 343, -307, 224, -272,
	149, -671, -305, -462, -391, -417, -452, 446, 361, -378,
	574, -315, -417, -393, 632, 195, 609, 629, -378, -508,
	619, -111, -111, -222, 627, 627, -557, 628, 632, 629,
	627, 609, 609, -230, 365, -229, 151, 268, 253, 490,
	491, 492, 493, 141, 489, 128, 324, 236, 529, -512,
	-557, -228, -137, 195, -512, 231, 195, -70, 589, 523,
	-222, 631, 452, -291, -424, -424, -424, 477, 477, -291,
	189, -387, -318, -548, -305, -322, -319, -344, 189, 189,
	-305, 562, -448, 362, 293, -495, -259, 597, -322, 631,
	-468, -468, 155, 155, -468, -469, -469, -468, 155, 195,
	627, -468, -479, 34, 34, 628, 632, -464, -468, -346,
	628, 577, -383, -383, 628, 619, -548, 631, 628, -477,
	152, -468, 533, 306, 222, 304, -437, 304, -437, -437,
	-542, 5, -548, 619, -605, -311, 627, -291, 587, -382,
	367, 628, -520, -518, -468, -468, -468, -468, -468, -542,
	-523, -523, -538, -538, -468, -473, -468, -520, -518, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, 143,
	343, 354, -469, -474, -473, -468, -468, -518, 628, 628,
	628, -398, -110, 627, 299, -411, 214, -468, -512, 632,
	-411, -411, 628, -499, -499, 627, -468, 261, 626, 632,
	634, 609, 609, -377, 629, -491, -492, 626, 628, 632,
	628, 632, -451, 39, 628, -548, -462, -233, -232, 140,
	56, 111, 138, 350, 255, -643, 589, -555, -555, 467,
	364, 5, 8, 625, 626, 629, -542, 628, 628, 628,
	-555, -555, 467, -613, 552, 467, 29, -555, -269, -269,
	123, 327, -468, -211, 589, 591, 539, 539, 628, 632,
	609, 63, 231, 159, 343, 571, 343, -571, 157, -576,
	-468, 627, 240, 627, 627, 2, -255, -256, -257, 147,
	480, 25, -649, 2, 569, 159, -269, 159, -269, 593,
	628, 632, -360, 627, 627, 539, 467, -284, 539, 589,
	-398, -468, -223, 131, -547, -630, 631, -630, 631, 467,
	539, 539, 467, 539, 539, 343, -291, 159, -291, 589,
	173, 173, 595, -276, -468, -468, 189, 539, 589, -398,
	539, -522, 51, 27, 343, -326, -269, 159, 539, 539,
	552, 480, -220, -557, -557, -136, -557, -557, 350, -15,
	-332, -553, -327, 480, 376, 436, -620, -620, 211, -335,
	-645, -512, -227, 365, -226, 151, 448, 141, 268, 236,
	-512, -225, 195, 252, 589, -327, 2, 628, 628, 632,
	632, -577, -270, -322, -307, 240, 240, -314, -292, 39,
	358, 358, 627, -322, -91, 589, -511, -544, -624, 589,
	45, -325, 39, 159, -621, -140, -327, -516, -517, 5,
	39, -322, 159, 361, 343, -273, 275, -671, -552, -592,
	-383, -417, -406, 344, 95, 628, -462, -408, -391, -468,
	2, 628, -221, -557, -222, -234, -309, 2, -558, -557,
	-557, 632, 627, 609, 609, 609, 609, 609, 609, 609,
	-228, -512, -136, -228, -137, -140, 365, -322, 619, -424,
	5, -366, -365, 380, 354, -366, 456, 456, 362, 183,
	271, -258, -306, -468, -468, 155, 34, 34, -468, -468,
	-479, 628, -468, -468, -398, 626, 5, -468, 628, 628,
	8, -468, 628, 629, -606, -291, -468, 628, 63, 628,
	628, 632, 632, 628, 628, 628, 628, 628, 628, 628,
	-474, 195, 143, 354, 627, 628, 628, -110, -476, 217,
	63, -499, -476, -476, -426, -387, -499, -466, -306, 625,
	-306, 625, -548, -544, -502, 627, 629, -232, 609, -557,
	-557, -201, 211, -643, -643, 589, -335, 626, 2, 625,
	-548, 628, -335, 195, -615, -335, 524, 123, 189, 221,
	221, -308, -308, -237, -545, 523, 456, -276, 403, -459,
	159, 159, -578, 97, -580, 79, 175, 106, 343, 350,
	558, 403, 75, 131, 361, 421, -661, -662, -663, 39,
	600, 601, 628, -385, -496, -591, 627, -291, -385, -387,
	343, 511, 131, 361, 343, 131, 361, 584, 123, 2,
	552, 82, -308, -316, -235, -387, -387, -322, -332, -553,
	167, 628, 632, 609, 2, 619, 619, -332, -553, -327,
	-332, -553, -325, 159, 574, -276, 378, 173, 539, -140,
	-468, 167, 628, -306, 5, 5, 159, -303, 79, -308,
	5, -308, -326, 123, 589, 467, 539, 539, 361, 361,
	364, -641, -642, -225, 632, 627, 609, 609, 609, -225,
	-558, -136, 2, -377, -367, 242, -308, -575, -572, -573,
	403, -460, -579, -581, 175, 403, -355, 627, -307, -292,
	627, -140, 2, -238, 627, -353, 365, 626, -626, 365,
	-625, 121, 141, -553, -421, -140, -327, -375, 589, -377,
	628, 632, 153, -443, 569, -306, -322, 159, -274, 274,
	-671, -552, -271, -446, -444, 144, 627, 361, -140, -383,
	609, 628, 628, 123, 628, -229, -230, -557, -136, -557,
	-557, -557, -136, -557, -228, -512, -512, -71, -72, 240,
	97, 385, -319, 523, 240, 627, 627, -258, -468, -468,
	-468, 628, -383, -548, 619, -600, 380, 628, -495, -468,
	-468, -469, 195, 627, -479, 628, -601, 588, -468, -412,
	-413, -468, 454, 112, 215, -601, -601, 628, -544, -544,
	2, -557, 364, 2, 539, 625, 2, 195, -555, 195,
	195, 231, -140, 231, 39, 424, -459, -316, -316, -320,
	-313, -291, 175, 224, 350, 584, -442, 266, 627, -469,
	562, -322, 627, 2, 223, 223, 31, 63, -664, 135,
	244, 628, 632, -497, -302, -291, -468, -497, 628, 628,
	350, 562, 350, 584, -468, 562, -518, 627, -269, -269,
	628, 628, -468, 539, -547, 104, -545, 2, -630, -276,
	-387, -305, -468, 189, -468, 539, 5, -269, -320, -269,
	-269, -303, 552, 360, -332, -553, -327, -646, 524, 474,
	553, 468, 198, 455, -646, 189, -226, -227, -557, -136,
	-136, -225, 39, -361, -362, 2, -577, 266, -313, 266,
	233, 158, -385, 627, 627, -387, -660, 589, 628, -351,
	-239, -92, -93, 540, -511, 632, 627, 609, -377, 327,
	123, 39, 5, 627, 627, -291, 361, 627, -306, -286,
	96, -671, -552, -272, -417, 344, -387, 97, -446, -475,
	-222, 627, -222, 628, -228, 632, 29, 627, 29, 627,
	-322, -344, -398, -398, 628, -383, 63, 632, 628, 628,
	-469, -479, 628, -602, -603, -311, 632, 627, 627, 481,
	626, 626, -555, 2, -555, -555, -555, 467, -276, 403,
	-291, -571, -580, -313, 343, -240, 569, 589, -468, -469,
	-293, 627, -468, 627, 627, 39, 131, 244, 136, 229,
	-458, -665, 105, 512, 232, -496, -258, 628, -457, 569,
	421, -469, -303, -385, 627, 627, 627, 609, 195, -140,
	627, -522, -269, -326, 609, 539, 2, 2, 195, -620,
	628, -636, 419, -140, -239, 627, -240, -356, 84, 98,
	132, 223, 199, 241, 503, 509, 29, -356, 628, -385,
	-385, 628, -357, 361, 123, 327, 628, 39, -93, 9,
	-625, -626, -468, 39, 123, -140, -516, -385, -322, -385,
	361, -278, -277, 283, -552, -273, 628, -316, -417, -558,
	-72, -387, -387, 628, 628, -607, 412, 457, 216, -398,
	-384, 628, 632, 39, -413, 2, 2, 2, -643, -335,
	424, -270, 159, 218, 628, -582, 298, -291, 628, -421,
	-421, 39, 136, 229, -363, -359, 627, -259, -497, -240,
	218, -322, -631, 569, 628, -369, -368, -365, -371, -370,
	-365, -398, -545, 104, 378, -398, -303, -136, -555, -555,
	361, -638, 196, -637, 5, 10, -357, -386, -498, -308,
	-457, 628, 628, 85, 123, -367, -140, 628, -140, 2,
	-375, 628, 628, -443, 628, -322, -275, -559, 424, 426,
	-671, -274, -462, 144, 628, 628, 628, 628, -608, -609,
	53, 555, 113, -468, -608, -608, -603, -605, 195, 175,
	-456, 598, -583, -586, -585, 605, 487, 196, 379, 628,
	511, 583, 628, 628, -664, -387, -456, -377, -468, -457,
	628, 632, 574, 628, 632, 574, 628, 195, 628, -269,
	-643, -269, -646, -224, 589, 48, -285, -284, 628, 632,
	-458, -457, -363, 402, 137, 147, -361, -660, -457, 627,
	-458, 627, -283, -282, -671, -538, -286, 144, 344, 562,
	-222, -610, 157, -609, 399, 188, 456, 399, 188, -610,
	-610, -555, -313, -240, 58, -585, 605, -586, 605, 562,
	137, -462, 628, -582, -240, -368, 231, -370, 195, 378,
	195, 464, -637, 31, -240, -498, -363, -458, -240, 457,
	457, 2, -239, -357, -458, -385, -363, -385, -279, -280,
	-281, -387, -278, 344, 562, 480, 113, 214, 534, 327,
	34, 609, -584, 327, 443, 67, 480, -584, -583, 627,
	627, -555, 365, -240, -363, -462, 2, -357, -363, 628,
	-240, 628, -554, 376, -275, 480, -407, 456, 369, -609,
	-468, 24, 350, 131, -664, -398, -398, -269, -221, 627,
	-462, -240, -285, -240, -457, -462, -458, -671, -283, -407,
	-462, 628, 628, -221, -462, -462, -458, -363, -553, -279,
	-462, -358, -359, 539, 628, -363, -240, 627, -240, -462,
	-398, -462, 628, -358,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 582, 583, 585, 586, 587,
	589, 590, 592, 594, 596, 597, 598, 600, 601, 603,
	604, 605, 606, 607, 609, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 698, 700, 0, 1535, 1537, 1539, 1541, 0, 0,
	-2, 0, 40, 41, 43, 45, 0, -2, 359, 361,
	363, 365, 0, 397, 399, 400, 402, 404, 405, 406,
	408, -2, 0, 515, 516, 518, 520, -2, 0, 1120,
	1122, 1124, 0, 686, 688, 0, 1127, 1129, 1131, 0,
	0, 710, 711, 0, 1649, -2, 702, 704, 706, 708,
	785, 787, 789, 791, 793, 795, 797, 799, 801, 803,
	804, 806, 808, 810, 812, 814, 815, 817, 819, 821,
	822, 824, 825, 827, 829, 831, 833, 835, 837, 839,
	841, 843, 845, 847, 849, 851, 853, -2, 856, 857,
	858, 860, -2, -2, 0, -2, -2, -2, 1553, 47,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 459, 461, 463, 465, 467, 470, 472, 474, 1707,
	522, 524, 526, 528, 530, 532, 534, 0, 0, -2,
	1721, 0, 0, 940, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 123, 124, 125, 126, 127, 128,
	129, 84, 85, 86, 88, 89, 90, 91, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	120, 121, 82, 0, 0, 1680, 1682, 1684, 1686, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 33, 35, 37, 584, 588, 591,
	593, 595, 599, 602, 608, 610, 612, 567, 568, 571,
	2419, 2437, 2438, 2439, 2442, 2443, 2444, 2445, 2446, 2447,
	2927, 3008, 3009, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785,
	2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875,
	2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885,
	2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895,
	2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905,
	2906, 569, 570, 1314, 0, 651, 649, 2404, 652, 2713,
	654, 656, 509, 510, 511, 512, 513, 514, 0, 679,
	665, 1719, 680, 682, 683, 684, 685, 646, 644, 0,
	684, 679, 2474, 677, 1533, 1534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 438, 1373, 1374,
	1375, 1518, 1519, 2764, 1560, 0, 255, 699, -2, -2,
	2892, -2, 739, 740, -2, -2, 754, 758, 749, 2896,
	0, 2767, 2750, -2, 761, 1536, 1538, 1540, 861, 862,
	863, 2423, 867, 865, 877, 878, 879, 0, 896, -2,
	0, 2470, 2735, -2, -2, 897, 898, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 42, 44, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, -2, -2, -2, -2, 0, 0, 2815,
	2529, 2372, 2439, 2375, 2370, 360, 362, 364, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 398, 401, 403,
	407, -2, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1194, 1186, 1187, 1440, 0,
	0, 0, -2, 517, 519, 572, 573, 0, 1708, 1708,
	580, 581, -2, 0, 0, 0, 0, 330, 320, 1121,
	1123, 1125, 1126, 0, 0, 0, 0, 0, 687, 689,
	0, 0, 2809, 297, 1128, 1130, 1132, 1133, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 703, 705, 707,
	709, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	805, 807, 809, 811, 813, 816, 818, 820, 823, 826,
	828, 830, 832, 834, 836, 838, 840, 842, 844, 846,
	848, 850, 852, 854, 855, 904, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 1009, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 1100, 0, 0, 907, 910, 911, 912, 913,
	914, 915, 0, 982, 1007, 1008, 1018, 859, 0, 1354,
	1709, 1562, 1543, 1557, 1562, 1545, 1546, 1547, 1548, 1549,
	1554, 1556, 1550, 1551, 1552, 48, 50, 52, 54, 56,
	58, 60, 62, 64, 66, 68, 70, 460, 462, 464,
	466, 468, 471, 473, 475, -2, 1678, 1679, 523, 525,
	527, 529, 531, 533, 535, 690, 0, 693, 0, 909,
	692, -2, 0, 1713, 1713, 1713, 0, 0, 1679, 1677,
	0, 696, 697, 765, 766, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 2246, 2074, 0, 767, -2, 2107,
	2109, 2867, 2686, 2892, 2245, 2111, 2112, 2113, 2114, 2115,
	0, 2117, 2118, 2119, 2120, 2121, 2122, 0, 2124, 0,
	2129, 2130, 2131, 0, 2874, 2349, 2433, -2, 0, 0,
	2880, 2429, 0, 2212, 2147, -2, -2, 2456, 2435, 1918,
	1919, 1920, 1921, 1922, -2, -2, 2910, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 0, 2855,
	2875, 2876, 2881, 2883, 2877, 2864, 2172, 2543, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1945, 1954, -2, -2, -2, -2, -2, -2, -2,
	2868, 2869, 2886, 2889, 2895, 2900, 2901, 2873, 2882, 2909,
	2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920,
	2921, 2922, 2923, 2924, 2925, 2926, 1946, -2, -2, -2,
	-2, 0, 1696, 2728, 1699, 1314, 1697, 1681, 1683, 0,
	1685, 0, 0, 0, 1690, 1716, 1714, 0, 1765, 1694,
	1695, 1788, 1788, 1812, 0, 1793, 0, 1812, 1708, 1839,
	0, 1799, 2755, 2148, 2149, 0, 2439, 2434, -2, -2,
	2907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 0, 653, 655, 0, 0, 0, 678,
	1718, 0, 0, 0, 0, 0, 0, 0, 0, 441,
	442, 443, 444, 445, 2875, 0, 0, 0, 450, 0,
	452, 453, 454, 455, 456, 457, 458, 225, 2875, 540,
	565, 0, 225, 2875, 543, 225, 2875, 546, 0, 549,
	1438, 225, 2875, 552, 2400, 225, 2875, 555, 557, 2408,
	225, 2875, 561, 2415, 2413, 562, 0, 564, 245, 241,
	242, 243, 244, 1529, 1530, 1531, 1532, 0, 1559, 1439,
	701, 0, 727, 0, 737, 738, 2863, -2, 0, 2776,
	742, 743, -2, 745, 1563, 1567, 1568, 1569, 1570, 1571,
	0, 0, 0, 0, 1576, 0, 0, 0, 0, 734,
	735, 752, 753, 759, 762, 0, 870, 866, 880, 0,
	895, 0, 896, 896, 2389, 2380, 2381, 0, 0, 896,
	896, 0, 0, 899, 900, 901, 902, 903, 81, 0,
	2875, 1839, 83, 0, 2394, 2464, 2465, 2466, 2467, 2468,
	2908, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936,
	2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946,
	2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956,
	2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966,
	2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976,
	2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986,
	2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996,
	2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006,
	3007, 2910, 87, 0, 2875, 92, 0, 2875, 0, -2,
	107, 0, 122, 0, 149, -2, -2, -2, 130, 0,
	2875, 0, 2369, -2, 0, 237, 321, 322, 323, 0,
	628, 0, 637, 333, 334, 2452, 2453, 2460, 2461, 2462,
	2463, 0, 730, 2246, 0, 0, 1158, -2, 0, 1367,
	1369, 1369, 0, -2, 0, 0, 0, 1110, 2366, 2371,
	1111, 1112, 2390, 1113, 2376, 0, 368, 369, 370, 371,
	372, 0, 373, 2875, 375, 376, 0, 378, 379, 2875,
	381, 382, 0, 384, 0, 386, 0, 277, 281, 2875,
	2875, 411, 414, 0, 416, 417, 0, 419, 0, 0,
	0, 423, -2, 439, 0, 436, 426, 427, 429, 430,
	431, 432, 433, 0, 479, 477, 2405, 0, 0, -2,
	2875, 0, 1155, 0, 0, 1418, -2, 0, 1360, 0,
	1425, 2875, 1421, 0, -2, 0, 1706, 2875, 1580, 1190,
	1191, 1192, 1193, 1851, 506, 0, 1613, 0, 1615, 0,
	1635, 1845, 1788, 0, 0, 1850, 0, -2, 625, 2422,
	-2, 575, 0, 576, 0, -2, 0, 347, 0, 0,
	1136, 1138, 1139, 1141, 1142, 1145, 1146, 1147, 1148, 0,
	1150, 1825, 298, 300, 0, 0, 0, 0, 1135, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 0, 0,
	712, 0, 0, 905, 906, 0, 0, 922, 923, 924,
	0, 347, 2768, 2723, 2565, 931, 0, 934, 937, -2,
	0, 0, 0, 0, 944, 0, 949, 950, 951, 0,
	-2, 0, 958, 960, 1119, 962, 0, 0, 964, 0,
	968, 0, 971, 0, 973, 0, 975, -2, -2, -2,
	983, 984, -2, 989, -2, 0, 993, -2, 0, 996,
	0, 999, -2, 0, 1009, 1005, 1006, 0, 0, 0,
	0, 1026, 1027, 0, 1036, 0, 1039, 1040, 1041, 0,
	0, 1046, 1047, 0, 1049, 1050, 1051, 1053, 1054, 1055,
	0, 2844, 2773, 2529, 0, 1063, -2, 1069, 1071, 0,
	-2, 0, 1087, 0, 1091, 0, 0, 1099, 0, 0,
	908, 0, 916, 917, 225, 1843, 1542, -2, 1544, 0,
	-2, 0, 691, 0, 695, 1738, 1664, 1661, 0, 1735,
	1736, 1665, 0, 0, 0, 1672, 0, 1711, 1712, 0,
	0, 0, 1651, 1652, 0, 0, 0, 0, 2251, 2252,
	2253, 2254, 2267, 2255, 2256, 2266, 2264, 2265, 2257, 2258,
	2263, 2277, 2278, 2268, 2269, 2259, 2272, 2270, 2271, 2273,
	2274, 2275, 2276, 0, 0, 2282, 0, 2260, 2261, 2262,
	2290, 0, 0, 2291, 0, 2293, 0, 2283, 2279, 2280,
	2281, 0, 2053, 2055, 2357, 0, 0, 0, 2289, 2284,
	2285, 1991, 1992, 1993, 1994, 1995, 2028, 2032, 2033, 0,
	0, 2108, 2354, 2353, 2110, 0, 0, 2305, 0, 2123,
	-2, 0, 2246, 2300, 0, 0, 2132, 2133, 2134, 0,
	0, 2305, 0, 0, 2348, 2144, 2145, 1983, 0, 0,
	2214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	1931, 0, 1933, 0, 1934, 1935, 1942, 1955, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	2329, -2, 0, 0, 0, 0, 1947, 0, 0, 1698,
	0, 0, 1769, 2358, 2362, 2363, 1769, 1769, 0, 0,
	2306, 1836, 1836, 0, 0, 1831, 1831, 1831, 1829, 1812,
	0, 1812, 1822, 0, 1812, 1812, 0, -2, 1793, 0,
	0, 1822, 0, 1806, 613, 615, 617, 619, 620, 621,
	623, 1840, 1841, 0, 0, 0, 0, 2440, 0, 0,
	0, 0, 2412, 0, 0, 2425, 0, 0, 2399, 393,
	394, 0, 0, 0, 2826, 2767, 0, -2, 658, 681,
	1708, 0, 2308, 1866, 1870, 0, 1872, 1873, 1874, 1875,
	1876, 0, 0, 1867, -2, 1943, 1945, 1966, 2457, 2458,
	2459, 1926, 1927, 1928, 1929, 1930, 1938, 1925, 1925, 1925,
	1936, 1965, 1957, 1965, 1961, 1911, 1912, 1913, 1948, 1949,
	1950, 1951, 0, 2826, 2767, 0, -2, 0, 668, 0,
	0, 1646, 440, 0, 447, 448, 449, 0, 536, 0,
	223, 224, 0, 225, 2875, 541, 0, 544, 0, 225,
	2875, 2364, 550, 0, 553, 0, 0, 559, 0, 0,
	0, 0, 0, 225, 1648, 0, 0, 0, 0, -2,
	747, 755, 756, 757, 0, 1565, 0, 1572, 776, 777,
	778, 1574, 1575, 0, 1577, 750, 779, 780, 781, 782,
	783, 784, 0, 2378, 2379, 2384, 2385, 0, 0, 748,
	769, 751, 0, 763, 873, 868, 869, 881, 882, 0,
	0, 2382, 2383, 0, 0, 887, 888, 131, 1515, 0,
	0, 178, 0, 1515, 1515, 0, 0, 0, 0, 206,
	0, 0, 1224, 0, 0, 0, 0, 149, 163, 174,
	143, 144, 145, 0, 0, 0, 0, 0, 0, 93,
	1336, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 109, 110, 0, 0,
	115, 116, 0, 162, 0, 0, 0, 0, 0, 1610,
	0, 153, 149, 0, 0, 148, 150, 133, 0, 0,
	149, 164, 176, 0, 212, 214, 1221, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 247, 0, 627, 629,
	0, 0, 0, 0, 635, 0, 638, 0, 728, 732,
	733, 0, 0, 729, 731, 0, 0, 1361, 0, 0,
	0, 1705, 0, 0, 0, 0, 2875, 1513, 0, 1498,
	0, 1825, 2616, -2, -2, 298, 1825, 1109, 0, 0,
	2440, 2374, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 415, 418, 420, 421, 422, 0, 1417,
	0, 428, 469, 1283, 2875, 0, 0, 496, 491, 0,
	493, 0, 0, 0, 1335, 2875, 1333, 2409, 0, 1358,
	0, 1314, 2875, 2407, 0, 0, 0, 1426, 2449, 1435,
	1439, 1598, 0, 508, 0, 1616, 1618, 0, 0, 1846,
	0, 1848, 1788, 1708, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 1149, 304, 0, 1824, 0,
	0, 335, 1825, 298, 2741, 0, 1134, 347, 347, 1825,
	714, 1825, 716, 0, 0, 925, 926, 0, 347, 347,
	347, 932, 933, 935, 936, -2, -2, -2, -2, 938,
	939, 1033, 0, 0, 0, 1032, 952, 0, 954, 957,
	961, 0, 1103, 2750, 2767, 2826, 1117, 1033, 2529, 1033,
	2529, 1033, 2529, 1033, 1033, 977, 1021, 1029, 988, 995,
	0, 990, 994, 997, 1000, 0, 1002, 1010, 0, -2,
	0, 1013, 0, 1015, 0, 1017, 1033, 1034, 1037, 0,
	1045, 1048, 0, 1056, 1057, 1058, 1059, 2420, 1060, 1061,
	1062, -2, 1066, 1067, 0, 1078, 1083, 1084, 1080, 0,
	0, 0, 0, 0, 0, 1094, 1095, 0, 0, 1102,
	0, 918, 1353, 0, 1555, 1738, 1664, 694, 1655, 1737,
	1656, 1663, 1666, 0, 0, 1668, 0, 1670, 0, 1733,
	1734, 1741, 1742, 0, 1752, 1753, 1745, 0, -2, 0,
	0, 1748, 1749, 1674, 0, 1691, 1692, 1693, 1722, 1725,
	1454, 0, 3008, 1987, 1861, 1988, 1989, 2393, 0, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, -2,
	-2, -2, -2, -2, -2, -2, -2, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, -2, -2,
	-2, 2029, 2030, 2031, -2, 2292, 2294, 0, 2357, 0,
	-2, 0, -2, -2, -2, -2, 2050, 0, 2052, 2057,
	2059, 2061, 0, 0, 0, 0, 2356, 2071, 2340, 2341,
	0, 0, 2248, 2249, 2250, 2056, 0, 2075, 2355, 2352,
	0, 0, 2286, 0, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 0, 2304, 1721,
	2136, 0, 0, 0, 0, 2143, 2128, 2302, 0, 2301,
	0, 0, 0, 2312, 0, 2347, 2343, 0, 2391, 1982,
	1969, 1970, 1971, 1972, 1973, 1974, 1984, 0, 2388, 2426,
	2432, 2222, 0, 0, 0, 2173, 2174, 2175, 2176, 2177,
	0, 2179, 2180, 0, 2182, 2183, 0, 2185, 2186, 0,
	2188, 2189, 2190, 2191, 2192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 0, 0, 2194, 0, 2315, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 2196, 0,
	2198, 2306, 2326, 0, 0, 2076, 0, 0, 0, 0,
	0, 2201, 2306, 2334, 0, 0, 0, 0, 0, 2306,
	0, 2339, 0, 2208, 0, 2210, 941, 942, 1700, 0,
	0, 1856, 0, 0, 0, 2361, 1856, 1856, 0, 1764,
	0, 0, 1832, 1833, 1834, 1835, 0, 0, 1836, 0,
	1826, 1830, 1827, 1828, 1822, 1785, 0, 0, 2395, 1822,
	1791, 1821, 0, 1314, 1811, 1822, 1822, 0, -2, 1795,
	1812, 0, 0, 614, 616, 618, 622, 624, 0, 0,
	1721, -2, 0, -2, 349, 1313, 0, 0, 0, 0,
	0, 0, 648, 650, 0, 0, 556, 0, 0, 664,
	0, 642, 0, 645, 0, 1857, 1860, 0, 0, 1871,
	1877, 1878, 0, -2, 0, 0, 1967, 0, 0, 0,
	0, 0, 676, 0, 679, 0, 0, 0, 451, 566,
	225, 538, 0, 225, 225, 547, 0, 0, 225, 558,
	225, 2416, 225, 2414, 246, 563, 1647, 258, 0, 736,
	0, 1564, 1573, 0, 773, 0, 775, 0, 2386, 2387,
	0, 764, 0, 871, 0, 883, 884, 885, 886, 0,
	0, 0, 0, 1514, 0, 0, 1461, 0, 0, 182,
	2875, 0, 227, 0, 0, 1276, 2401, 0, 1266, 0,
	0, 2551, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	146, 147, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 1338, 1340, 1347, 1349, 0, 1343, 1344, 0, 1346,
	1348, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 1370, 0, 0, 1371, 1372, 1586,
	1587, 0, 1609, 1610, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 2368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 631,
	632, 633, 343, 340, 342, 634, 639, 0, 640, 0,
	0, 0, 0, 1363, 0, 1413, 1411, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 0, 0, 0, 0, -2, 1365, 1366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 338, 2367, 2377, 0, 1143, 1144, 374, 377, 380,
	383, 264, 0, 0, 413, 424, 0, 0, 1196, 1168,
	0, 0, 478, 347, 0, 0, 492, 496, 2418, 1153,
	1331, 1334, 0, 1314, 2875, 1381, 0, 0, 0, 0,
	0, 0, 1424, 0, 0, 2875, 2396, 2448, 2449, 1600,
	1610, 0, 1856, 0, 1633, 1619, 0, 0, 0, 1633,
	1637, 1638, 1640, 1641, 0, 0, 1847, 1853, 574, 626,
	1708, 1708, 347, 345, 2689, 0, 0, 1622, 1624, 0,
	0, 0, 290, 0, 301, 1825, 299, 0, 304, 0,
	0, 1825, 298, 0, 490, 713, 718, 920, 0, 347,
	928, 929, 930, 979, 1023, 1031, 1082, 943, 945, 946,
	947, 0, 0, 0, 1118, 1114, 1115, 1116, 963, 1033,
	966, 1033, 969, 1033, 972, 974, 992, 998, 1011, 1004,
	1012, 0, 0, 0, 1025, 0, 1043, 0, 1052, 1065,
	0, 0, 0, 0, 0, 0, 0, 1088, 1089, 1090,
	1092, 1097, 1096, 1101, 919, 1844, 1659, 1660, 1662, 0,
	1671, 0, 0, 1747, -2, -2, 1746, 1750, 1751, -2,
	-2, -2, -2, 1667, 0, 1676, 1673, 0, 1732, 1452,
	1453, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	2072, 0, -2, 2051, 2054, 2058, 2060, 2062, 0, 0,
	0, 0, 0, 0, 2295, 0, 2297, 2073, 2350, 2353,
	2288, 0, 2244, 0, 0, 1720, 1721, 1721, 0, 2142,
	0, 2303, 0, 2310, 2311, 0, 2135, 0, 2344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2146, 0,
	0, 0, 0, 2178, 2181, 2184, 2187, 0, 0, 0,
	0, 2167, 0, 0, 0, 2171, 1937, 1923, 0, 1965,
	1963, 1964, 1958, 1965, 1962, 1915, 0, 1914, 0, 2193,
	0, 2195, 2197, 0, 0, 2199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2079, 2080, 2081, 2101, 2200, 2332, 2333, 0, 0, 0,
	0, 0, 0, 2206, 0, 2338, 2207, 2209, 1708, 0,
	1701, 0, 1766, 1755, 1855, 0, 2359, 1825, 1768, 1770,
	2360, 2398, 1755, 1755, 0, 2307, 0, 0, 1816, 0,
	0, 0, 1818, 1789, 0, 0, 1783, 0, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1790, 1314, 1820, 1792, 1796,
	2426, 0, 1822, 0, 1807, 0, 1809, 1842, 0, 1801,
	1804, 0, 0, 2441, 1856, 0, 387, 395, 396, 388,
	389, 390, 391, 0, 1501, 0, 0, 0, 0, 0,
	2309, 0, 1862, 0, 1868, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 1645, 446, 537, 225, 542,
	545, 2365, 225, 551, 554, 560, 254, 0, 726, -2,
	771, 772, 774, 0, 770, 876, 872, 179, 1515, 0,
	0, 0, 1457, 0, 1179, 0, 1174, 1175, 1459, 1463,
	1469, 1472, 0, 184, 2875, 196, 0, 2875, 0, 1240,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 2875,
	225, 2875, 225, 200, 202, 205, 0, 211, 207, 0,
	1176, 0, 1228, 0, 0, 1231, 132, 1515, 0, 0,
	135, 139, 151, 0, 0, 0, 161, 0, 0, 0,
	1474, 1478, 1486, 0, 0, 0, 1341, 1342, 1345, 1351,
	94, 0, 0, 0, 1482, 1484, 1490, 108, 111, 2875,
	2410, 0, 113, 2875, 0, 0, 1456, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 137, 141, 152, 0,
	1492, 134, 0, 240, 0, 0, 230, 225, 2875, 0,
	232, 0, 233, 234, 248, 0, 0, 0, 0, 0,
	0, 636, 0, 1156, 1157, 1412, 0, 1356, 1357, 0,
	1368, 1362, 0, 0, 0, 0, 0, 1494, 1495, 0,
	0, 0, 1513, 1510, 1825, 260, 0, 1825, 268, 0,
	2373, 0, 282, 410, 0, 0, 0, 0, 1195, 1294,
	1197, 1199, 1200, 1201, 227, 0, 2449, 1266, 2605, 2449,
	0, 0, 1163, 0, 0, 0, 484, 480, 0, 489,
	495, 494, 500, -2, 0, 0, 0, 0, -2, 0,
	0, 1428, 1422, 1423, 0, 0, 0, 0, 2875, 1602,
	1610, 0, 1706, 1721, 507, 1611, 1633, 0, 0, 0,
	1621, 1617, 1614, 1856, 0, 0, 0, 0, 0, 1849,
	1852, 577, 578, 324, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 302, 0, 305, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 0, 304,
	336, 292, 1825, 0, 304, 0, 0, 715, 0, 0,
	927, 0, 953, 956, 965, 967, 970, 1014, 1016, 1033,
	0, 1044, 1072, 2397, 1073, 1218, 0, 1218, 0, 0,
	1093, 1669, 0, 1744, 1675, 1726, 1727, 0, 1454, 0,
	1990, 2035, 0, 0, -2, 0, 0, 2039, 0, 0,
	0, -2, 0, 0, 0, 2296, 2298, 0, 2352, 2287,
	2137, 0, 0, 0, 2141, 2125, 2126, 0, 2247, 2313,
	2342, 2346, 0, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	0, 2392, 2427, 2431, 2220, 2221, 2225, 2406, 0, 0,
	0, 2150, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1960, 0, 0, 2314, 2325, 2327, 2077, 2078, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, -2,
	-2, -2, 2095, 2096, 2097, -2, -2, -2, 2102, 0,
	0, 0, 2328, 2330, 2331, 2335, 2336, 0, 2203, 2204,
	2205, 2337, 0, 1708, 1702, 1763, 0, 1854, 1767, 0,
	1763, 1763, 1715, 1814, 0, 0, 1838, 0, 1786, 0,
	1787, 0, 0, 1819, 0, 1794, 1797, 1798, 1808, 0,
	1800, 0, 1803, 0, 2137, -2, 348, 350, 352, 0,
	355, 356, 0, 0, 0, 657, 0, 1501, 1501, 0,
	659, 643, 0, 0, 1864, 0, 0, 1940, 1944, 1968,
	670, 672, 0, 0, 2826, 2767, 0, 669, 539, 548,
	256, 0, 1823, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 226, 0, 1275, 0, 1238,
	0, 0, 1265, 0, 0, 1281, 186, 187, 188, 0,
	0, 0, 0, 198, 0, 0, 194, 0, 204, 210,
	209, 0, 1225, 0, 0, 0, 0, 1462, 0, 0,
	0, 158, 159, 160, 0, 165, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	1592, 1593, 0, 1583, 155, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 1451, 250, 0, 0, 0,
	0, 0, 344, 339, 341, 0, 1355, 1415, 1416, 1364,
	1475, 1479, 1487, 0, 0, 0, 0, 0, 684, 1512,
	0, 268, 266, 0, 269, 0, 272, 273, 0, 0,
	268, 262, 0, 0, 0, 1314, 425, 1166, 1282, 0,
	0, 1284, 1202, 1206, 0, 2449, 2449, 0, 2403, 0,
	1164, 0, 0, 1283, 476, 0, 483, 0, 497, 0,
	0, 1335, 0, 0, 1359, 1384, 1314, 0, 1427, 1429,
	0, 1437, 0, 0, 0, 1604, 1610, 0, 1597, 1598,
	1740, 1612, 1631, -2, 0, 0, 1721, 1639, 1636, 1642,
	1643, 0, 0, 0, 327, 0, 1623, 1625, 0, 1137,
	1140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 304, 1825, 294, 1825, 331, 0, 921, 948, 1024,
	1042, 1074, 1217, 0, 0, 1076, 0, 0, 1743, 1730,
	1731, 1728, 1454, 2037, 2041, 0, 0, 0, 2043, -2,
	0, 2065, -2, -2, 2299, 2351, 2116, 1721, 2138, 2140,
	2127, 2345, 1985, 0, 2227, 2224, 0, 2211, 0, 2162,
	2163, 0, 0, 2166, 2168, 2169, 2170, 1924, 1917, 1916,
	2324, 0, 0, 0, 0, 2202, 1703, 0, 2216, 0,
	0, 1771, 2216, 2216, 1815, 0, 1817, 1784, 1772, 0,
	1781, 0, 2427, 1810, 1802, 0, 0, 353, 0, 357,
	358, 392, 0, 660, 661, 0, 0, 1858, 1863, 0,
	1869, 1939, 0, 0, 0, 0, 0, 257, 0, 874,
	875, 180, 181, 1180, 1178, 1466, 1470, 1467, 0, 183,
	0, 0, 1239, 0, 1242, 0, 0, 0, 0, 1249,
	1266, 0, 0, 0, 0, 0, 0, 1268, 0, 1267,
	0, 0, 1298, 0, 1442, 1449, 0, -2, 0, 0,
	0, 190, 216, 0, 0, 0, 0, 219, 1516, 192,
	0, 0, 225, 225, 1177, 0, 0, 1458, 1460, 1473,
	0, 0, 0, 0, 168, 0, 0, 1476, 1480, 1488,
	1483, 1485, 1491, 0, 0, 114, 0, 1594, 0, 154,
	0, 0, 0, 1493, 238, 239, 0, 225, 0, 225,
	231, 225, 1451, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 1497, 259, 0, 0, 0, 0, 0, 261,
	337, 268, 412, 0, 1227, 0, 1294, 1286, 1287, 1288,
	0, 1198, 1293, 1295, 0, 0, 1203, 0, 0, 0,
	0, 1183, 1165, 0, 1196, 1168, 0, 481, 498, 0,
	501, 0, 504, 1154, 1332, 1376, 1314, 1379, 0, 0,
	1419, 0, 0, 0, 0, 0, 0, 0, 1606, 1610,
	0, 1599, 1600, 1633, 1739, 0, 0, 0, 1620, 1740,
	0, 346, 347, 0, 347, 306, 0, 307, 308, 309,
	316, 317, 318, 319, 293, 296, 304, 717, 719, 0,
	0, 725, 1216, 0, 0, 0, 0, 1729, 2045, -2,
	-2, 2066, 0, 2428, 2430, 1721, 0, 2213, 1723, 0,
	0, -2, 0, 0, 0, 1704, 1687, 0, 1762, 1754,
	1756, 1758, 2753, 2524, 2874, 1688, 1689, 1837, 0, 0,
	1805, 354, 1500, 662, 0, 0, 1865, 0, 667, 0,
	0, 0, 864, 0, 0, 1468, 185, 0, 0, 1243,
	1244, 2402, 1246, 0, 1248, 1250, 1251, 1168, 0, 1255,
	0, 2451, 0, 1260, 1263, 1264, 0, 0, 1277, 1299,
	0, 1308, 0, 1444, 1454, 1448, 0, 1446, 1310, 0,
	189, 218, 191, 220, 215, 0, 1451, 0, 193, 203,
	0, 0, 136, 0, 0, 2518, 171, 169, 167, 112,
	118, 1455, 157, 0, 138, 0, 240, 249, 1450, 251,
	235, 225, 0, 0, 1477, 1481, 1489, 0, 1504, 1505,
	1506, 1507, 0, 0, 0, 0, 270, 0, 271, 274,
	275, 0, 0, 1168, 1226, 1167, 1285, 0, 1296, 1168,
	0, 0, 0, 0, 0, 0, 1170, 0, 1169, 0,
	0, 482, 485, 0, 488, 0, 0, 0, 0, 0,
	1383, 0, 1430, 1428, 0, 1436, 0, 0, 0, 1582,
	0, 0, 1601, 1602, 505, 1626, 0, 0, 1633, 1644,
	326, 0, 329, 303, 295, 0, 721, 0, 723, 0,
	1075, 1077, 0, 0, 2139, 2231, 0, 0, 2164, 2165,
	-2, 0, 2105, 2215, 2217, 0, 0, 0, 0, 0,
	1773, 1782, 1501, 1859, 674, 671, 673, 0, 1464, 0,
	1471, 227, 1241, 1245, 0, 1252, 0, 0, 0, 1256,
	1318, 0, 0, 1335, 1335, 1269, 0, 0, 1302, 1303,
	1223, 0, 1304, 1305, 1306, 1443, 1732, 1449, 1168, 0,
	0, 217, 222, 0, 0, 0, 0, 0, 0, 156,
	0, 229, 252, 1451, 0, 0, 1508, 1509, 0, 0,
	267, 286, 0, 1377, 1170, 0, 1297, 1204, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1205, 1310, 0,
	0, 1274, 1181, 0, 1184, 0, 1166, 0, 486, 487,
	502, 0, 503, 0, 0, 1384, 0, 0, 1437, 0,
	0, 1589, 1581, 1610, 1603, 1604, 1856, 0, 1634, 0,
	720, 0, 0, 1085, 1086, 0, 0, 0, 0, 2226,
	1724, 2106, 0, 0, 1757, 1759, 1760, 1761, 663, 0,
	1465, 197, 0, 1312, 1254, 1323, 0, 0, 0, 0,
	0, 1270, 1300, 1301, 1298, 1222, 0, 1447, 1445, 1279,
	1312, 1314, 195, 0, 1310, 0, 1232, 0, 0, 1235,
	0, 0, 172, 2518, 170, 0, 225, 641, 1501, 225,
	0, 289, 0, 280, 278, 279, 1162, 0, 1290, 1292,
	1308, 1310, 1223, 0, 1185, 1227, 1183, 499, 1378, 1382,
	1380, 1420, 1310, 0, 1308, 0, 1596, 1610, 1590, 1591,
	0, 1606, 0, 0, 347, 722, 724, 2223, 2243, 2232,
	-2, 2829, 2525, 0, 2243, 2243, 2218, 2219, 0, 0,
	1168, 0, 1257, 1319, 1320, 0, 1315, 1316, 1317, 2450,
	1258, 1259, 1261, 1262, 1856, 0, 1309, 1318, 221, 1168,
	1229, 0, 0, 1230, 0, 0, 175, 0, 177, 253,
	1499, 1502, 0, 276, 0, 0, 1159, 1161, 1168, 0,
	1223, 1308, 1168, 0, 0, 0, 1168, 1170, 1308, 0,
	1223, 0, 1585, 1595, 0, 1605, 1582, 0, 1629, 0,
	328, 2228, 0, 0, 2234, 2235, 2236, 2237, 2238, 2229,
	2230, 675, 1247, 1253, 0, 1321, 0, 1322, 0, 0,
	0, 1278, 1307, 1323, 201, 1233, 0, 1236, 0, 173,
	0, 0, 284, 285, 1289, 1291, 1168, 1223, 1856, 1171,
	0, 1173, 1170, 1182, 1223, 0, 1168, 0, 1608, 1584,
	1588, 2411, 1589, 1627, 0, 0, 0, 2240, 2241, 0,
	0, 0, 1324, 0, 1327, 1328, 0, 1325, 1298, 0,
	0, 225, 0, 1856, 1168, 1273, 1172, 1162, 1168, 1310,
	1856, 1308, 1578, 1610, 1596, 0, 1856, 2239, 2242, 2233,
	1311, 1326, 1329, 1330, 1280, 0, 0, 1503, 287, 0,
	1271, 1856, 1160, 1856, 1308, 1433, 1223, 0, 1585, 1856,
	1630, 1220, 0, 0, 1272, 1431, 1223, 1168, 1607, 1579,
	1628, 1234, 1219, 0, 288, 1168, 1856, 0, 1856, 1434,
	0, 1432, 1220, 1237,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 615, 3, 621, 616, 3,
	627, 628, 619, 617, 632, 618, 629, 620, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 635, 3,
	607, 609, 608, 612, 631, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 625, 3, 626, 622, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 633, 614, 634, 610,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 611,
	57950, 613, 57951, 623, 57952, 624, 57953, 630, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1552
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1559
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1562
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1580
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1595
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1596
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1597
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1598
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1602
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1604
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1667
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1726
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1768
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1779
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1791
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1900
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1932
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1965
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1986
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1994
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2004
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2026
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2030
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2041
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2053
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2074
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2136
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2145
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2156
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2164
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2175
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2185
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2195
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2204
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2215
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 169:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2221
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 173:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2247
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2252
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2343
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2387
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2397
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2400
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2406
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2458
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = nil
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = true
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = false
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2653
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2657
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2841
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2849
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3003
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = nil
		}
	case 290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3273
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3281
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3318
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3327
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3333
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3338
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3343
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3439
		{
			sqlVAL.union.val = nil
		}
	case 348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3451
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3465
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3647
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3668
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3673
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3678
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "CREATE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3712
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplemented(sqllex, "create access method")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "create cast")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplemented(sqllex, "create publication")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "create rule")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplemented(sqllex, "create server")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3739
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
		}
	case 435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3743
		{
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3746
		{
		}
	case 437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3747
		{
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3751
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3754
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3758
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3760
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3761
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3763
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3765
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3766
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplemented(sqllex, "drop server")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3820
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3898
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3933
		{

			sqlVAL.union.val = nil
		}
	case 497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4016
		{
			return helpWith(sqllex, "DELETE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4019
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4020
		{
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4032
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4033
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4034
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4046
		{
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "DROP")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4050
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4246
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4312
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4320
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4328
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4336
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4344
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "DELETE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "INSERT")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "DELETE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "INSERT")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4533
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4566
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4630
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4657
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4673
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "GRANT")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4769
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4782
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "RESET")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "RESET")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "USE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4860
		{
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4861
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "USE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4992
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5000
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5116
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			return unimplemented(sqllex, "set from current")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5147
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5159
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5164
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = tree.Low
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = tree.Normal
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = tree.High
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5314
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5320
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "SHOW")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = true
		}
	case 867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = false
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = true
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = false
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = false
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = sqlDollar[2].union.fetchCursor()
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5439
		{
			return helpWith(sqllex, "FETCH")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = int64(1)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = int64(-1)
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = int64(1)
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = int64(1)
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = int64(-1)
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5533
		{
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5534
		{
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5537
		{
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5538
		{
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5557
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.str = "client_encoding"
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.str = "timezone"
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5596
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5624
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5628
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5647
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5687
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5696
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5721
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5726
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5735
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5741
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5755
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5766
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5800
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5816
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5856
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5869
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5877
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5888
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5910
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5921
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5926
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5937
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5942
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = true
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = true
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = false
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5978
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5979
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5980
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5997
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6024
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6040
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6048
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6092
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6097
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6099
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6103
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = true
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = false
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6118
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6123
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6154
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6164
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6169
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = true
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = false
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6187
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6201
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6208
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6216
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6226
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6237
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6259
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6303
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6308
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6313
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6318
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6347
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6392
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6400
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6421
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6426
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6431
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6435
		{
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6444
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6458
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6467
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6479
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6538
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6548
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6561
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6737
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6806
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6808
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6809
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6819
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6820
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6822
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6833
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6861
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6874
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6906
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6914
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6925
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6961
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7025
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7040
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7068
		{

			sqlVAL.union.val = nil
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7074
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.str = ""
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7084
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = nil
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7107
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7111
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7147
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7160
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7174
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7175
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7176
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7231
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7257
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7268
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7271
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7274
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7275
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.str = ""
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7520
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7565
		{

			sqlVAL.union.val = true
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = false
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7575
		{
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7579
		{
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7582
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7679
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7690
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7717
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7800
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7801
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7802
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7887
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7972
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7981
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7989
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8000
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8023
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8025
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8029
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8032
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8035
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8037
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8054
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8081
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8115
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.str = ""
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = true
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{

			sqlVAL.union.val = true
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = false
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8164
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8178
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8190
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8202
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8212
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8222
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8226
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = true
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = true
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = nil
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8369
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8370
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8397
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8399
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8401
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8403
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8405
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8440
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8457
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8475
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8491
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8507
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = false
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = true
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = false
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = true
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = false
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8565
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8571
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8585
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.str = ""
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.str = ""
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8644
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8650
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8875
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8881
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8893
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8899
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8913
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8919
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8978
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = true
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = false
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = tree.Types
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9038
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9042
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9067
		{
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9071
		{
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9082
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9109
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9130
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9183
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9235
		{
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9237
		{
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9257
		{
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9258
		{
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9286
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9299
		{
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9301
		{
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9395
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.str = ""
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9418
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{

		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9455
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.str = ""
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.str = ""
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.str = ""
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.str = ""
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9510
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9535
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9536
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9565
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9587
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9596
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9645
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9690
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9728
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9760
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9781
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9796
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9940
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9976
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9977
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10038
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10082
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10098
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = true
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = false
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10152
		{
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = nil
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10165
		{
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10166
		{
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = true
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = false
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = false
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = true
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10195
		{
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10196
		{
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10199
		{
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10200
		{
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10253
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10258
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10284
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10317
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10413
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10443
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10445
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10460
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10482
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10529
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10560
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10602
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10612
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10647
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10658
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10688
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10721
		{
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10723
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = nil
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = true
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = false
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.str = tree.AstFull
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.str = tree.AstRight
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.str = tree.AstInner
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10840
		{
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10841
		{
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.str = tree.AstHash
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.str = ""
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10933
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10939
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10945
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10955
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = true
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = false
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = true
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = false
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11004
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11017
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11025
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11026
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11044
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11046
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11054
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11074
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11083
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11123
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11135
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11136
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = types.Geography
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11185
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11193
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11219
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11227
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = nil
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = types.Int2
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = types.Int
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = types.Float4
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = types.Float
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11270
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11278
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11286
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = types.Bool
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11300
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = types.Float
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11319
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11325
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11347
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = types.String
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = true
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = false
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = types.Date
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11396
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11404
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11418
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11427
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11435
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11452
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = true
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = false
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = false
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = types.Interval
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11476
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11560
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11575
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = nil
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11605
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11665
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11814
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11943
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12009
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12031
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12139
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12147
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12243
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12248
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12274
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12298
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12332
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12343
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12344
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12359
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12368
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12434
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12533
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12537
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12559
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12564
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12573
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12582
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12591
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12600
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12605
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12610
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12615
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12620
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12625
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12634
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12635
		{
			return unimplemented(sqllex, "treat")
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12656
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12661
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12708
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.str = ""
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12757
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12783
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12797
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12810
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12874
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12878
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12907
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12943
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12951
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12953
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12957
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12966
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12974
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12983
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13032
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13036
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13112
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13163
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13197
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13239
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13257
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13274
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13297
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13301
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13314
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13323
		{
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13324
		{
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13328
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13338
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13351
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13355
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13363
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13373
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13396
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13404
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13427
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13436
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13440
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13444
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13448
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13473
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13477
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13489
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13493
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13502
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13513
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13522
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13530
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13547
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13632
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13640
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13644
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13650
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13662
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13689
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13696
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13700
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13704
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13718
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13722
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13726
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13739
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13748
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13766
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13779
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13786
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13811
		{
			sqlVAL.str = ""
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13817
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13821
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
