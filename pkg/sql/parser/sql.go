// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return expr, 0
		case tree.Minus:
			return unaryNegation(expr), 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: expr}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:156

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}

//line sql-gen.y:849
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13329

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1525,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 400,
	-2, 0,
	-1, 74,
	242, 238,
	510, 238,
	-2, 0,
	-1, 87,
	230, 1267,
	244, 1267,
	260, 396,
	387, 396,
	397, 1037,
	434, 396,
	447, 1037,
	494, 1037,
	521, 396,
	547, 1037,
	-2, 0,
	-1, 93,
	132, 1525,
	237, 1525,
	532, 1525,
	533, 1525,
	-2, 0,
	-1, 109,
	150, 1496,
	169, 1496,
	182, 1496,
	240, 1496,
	273, 1496,
	339, 1496,
	349, 1496,
	527, 1496,
	-2, 1467,
	-1, 148,
	158, 892,
	259, 892,
	390, 854,
	452, 854,
	493, 854,
	513, 892,
	515, 854,
	-2, 0,
	-1, 151,
	4, 1527,
	21, 1527,
	22, 1527,
	23, 1527,
	24, 1527,
	25, 1527,
	26, 1527,
	27, 1527,
	29, 1527,
	30, 1527,
	36, 1527,
	41, 1527,
	42, 1527,
	44, 1527,
	45, 1527,
	46, 1527,
	47, 1527,
	48, 1527,
	49, 1527,
	50, 1527,
	51, 1527,
	53, 1527,
	54, 1527,
	55, 1527,
	56, 1527,
	58, 1527,
	59, 1527,
	60, 1527,
	61, 1527,
	62, 1527,
	63, 1527,
	64, 1527,
	68, 1527,
	69, 1527,
	70, 1527,
	71, 1527,
	73, 1527,
	74, 1527,
	75, 1527,
	79, 1527,
	80, 1527,
	81, 1527,
	82, 1527,
	83, 1527,
	84, 1527,
	85, 1527,
	88, 1527,
	89, 1527,
	90, 1527,
	91, 1527,
	92, 1527,
	94, 1527,
	96, 1527,
	97, 1527,
	98, 1527,
	99, 1527,
	100, 1527,
	101, 1527,
	103, 1527,
	104, 1527,
	105, 1527,
	107, 1527,
	108, 1527,
	109, 1527,
	117, 1527,
	118, 1527,
	119, 1527,
	120, 1527,
	121, 1527,
	123, 1527,
	124, 1527,
	125, 1527,
	127, 1527,
	128, 1527,
	129, 1527,
	131, 1527,
	132, 1527,
	133, 1527,
	135, 1527,
	136, 1527,
	137, 1527,
	140, 1527,
	141, 1527,
	142, 1527,
	144, 1527,
	145, 1527,
	147, 1527,
	148, 1527,
	149, 1527,
	151, 1527,
	152, 1527,
	153, 1527,
	154, 1527,
	155, 1527,
	156, 1527,
	157, 1527,
	158, 1527,
	159, 1527,
	160, 1527,
	161, 1527,
	162, 1527,
	163, 1527,
	164, 1527,
	165, 1527,
	166, 1527,
	168, 1527,
	174, 1527,
	175, 1527,
	176, 1527,
	177, 1527,
	181, 1527,
	183, 1527,
	184, 1527,
	188, 1527,
	189, 1527,
	190, 1527,
	191, 1527,
	192, 1527,
	193, 1527,
	194, 1527,
	195, 1527,
	196, 1527,
	197, 1527,
	198, 1527,
	199, 1527,
	200, 1527,
	201, 1527,
	203, 1527,
	204, 1527,
	206, 1527,
	207, 1527,
	209, 1527,
	210, 1527,
	211, 1527,
	212, 1527,
	213, 1527,
	214, 1527,
	215, 1527,
	216, 1527,
	217, 1527,
	219, 1527,
	220, 1527,
	222, 1527,
	223, 1527,
	224, 1527,
	225, 1527,
	226, 1527,
	230, 1527,
	231, 1527,
	232, 1527,
	233, 1527,
	234, 1527,
	237, 1527,
	238, 1527,
	239, 1527,
	241, 1527,
	243, 1527,
	244, 1527,
	246, 1527,
	248, 1527,
	249, 1527,
	250, 1527,
	252, 1527,
	256, 1527,
	257, 1527,
	258, 1527,
	259, 1527,
	260, 1527,
	261, 1527,
	263, 1527,
	264, 1527,
	265, 1527,
	267, 1527,
	268, 1527,
	270, 1527,
	271, 1527,
	274, 1527,
	278, 1527,
	279, 1527,
	280, 1527,
	283, 1527,
	284, 1527,
	285, 1527,
	286, 1527,
	288, 1527,
	289, 1527,
	290, 1527,
	291, 1527,
	292, 1527,
	293, 1527,
	294, 1527,
	295, 1527,
	296, 1527,
	297, 1527,
	298, 1527,
	299, 1527,
	300, 1527,
	301, 1527,
	302, 1527,
	303, 1527,
	304, 1527,
	305, 1527,
	306, 1527,
	307, 1527,
	308, 1527,
	309, 1527,
	311, 1527,
	313, 1527,
	314, 1527,
	315, 1527,
	316, 1527,
	317, 1527,
	318, 1527,
	319, 1527,
	320, 1527,
	321, 1527,
	322, 1527,
	323, 1527,
	324, 1527,
	326, 1527,
	327, 1527,
	329, 1527,
	331, 1527,
	332, 1527,
	334, 1527,
	335, 1527,
	336, 1527,
	337, 1527,
	338, 1527,
	341, 1527,
	344, 1527,
	345, 1527,
	346, 1527,
	347, 1527,
	350, 1527,
	351, 1527,
	352, 1527,
	354, 1527,
	356, 1527,
	357, 1527,
	358, 1527,
	359, 1527,
	360, 1527,
	361, 1527,
	362, 1527,
	363, 1527,
	364, 1527,
	365, 1527,
	366, 1527,
	367, 1527,
	369, 1527,
	370, 1527,
	371, 1527,
	372, 1527,
	373, 1527,
	374, 1527,
	375, 1527,
	376, 1527,
	377, 1527,
	378, 1527,
	379, 1527,
	380, 1527,
	381, 1527,
	382, 1527,
	383, 1527,
	385, 1527,
	386, 1527,
	388, 1527,
	389, 1527,
	390, 1527,
	391, 1527,
	392, 1527,
	393, 1527,
	394, 1527,
	395, 1527,
	396, 1527,
	397, 1527,
	398, 1527,
	399, 1527,
	401, 1527,
	403, 1527,
	404, 1527,
	405, 1527,
	410, 1527,
	412, 1527,
	413, 1527,
	414, 1527,
	415, 1527,
	416, 1527,
	417, 1527,
	418, 1527,
	419, 1527,
	420, 1527,
	422, 1527,
	423, 1527,
	424, 1527,
	426, 1527,
	427, 1527,
	428, 1527,
	429, 1527,
	430, 1527,
	431, 1527,
	432, 1527,
	434, 1527,
	435, 1527,
	436, 1527,
	437, 1527,
	438, 1527,
	439, 1527,
	440, 1527,
	441, 1527,
	442, 1527,
	443, 1527,
	444, 1527,
	445, 1527,
	447, 1527,
	448, 1527,
	449, 1527,
	450, 1527,
	451, 1527,
	452, 1527,
	454, 1527,
	455, 1527,
	456, 1527,
	457, 1527,
	458, 1527,
	459, 1527,
	461, 1527,
	462, 1527,
	463, 1527,
	464, 1527,
	465, 1527,
	466, 1527,
	467, 1527,
	468, 1527,
	470, 1527,
	472, 1527,
	473, 1527,
	474, 1527,
	475, 1527,
	476, 1527,
	477, 1527,
	478, 1527,
	479, 1527,
	480, 1527,
	481, 1527,
	482, 1527,
	483, 1527,
	484, 1527,
	485, 1527,
	486, 1527,
	487, 1527,
	489, 1527,
	490, 1527,
	492, 1527,
	493, 1527,
	495, 1527,
	496, 1527,
	497, 1527,
	498, 1527,
	499, 1527,
	500, 1527,
	501, 1527,
	502, 1527,
	503, 1527,
	505, 1527,
	506, 1527,
	507, 1527,
	508, 1527,
	509, 1527,
	511, 1527,
	513, 1527,
	514, 1527,
	515, 1527,
	516, 1527,
	517, 1527,
	518, 1527,
	520, 1527,
	521, 1527,
	522, 1527,
	523, 1527,
	525, 1527,
	526, 1527,
	529, 1527,
	530, 1527,
	531, 1527,
	532, 1527,
	533, 1527,
	534, 1527,
	535, 1527,
	537, 1527,
	540, 1527,
	541, 1527,
	542, 1527,
	543, 1527,
	544, 1527,
	545, 1527,
	547, 1527,
	548, 1527,
	549, 1527,
	550, 1527,
	552, 1527,
	557, 1527,
	558, 1527,
	559, 1527,
	560, 1527,
	561, 1527,
	562, 1527,
	-2, 0,
	-1, 152,
	1, 1382,
	130, 1382,
	248, 1382,
	328, 1382,
	385, 1382,
	394, 1382,
	566, 1382,
	590, 1382,
	-2, 0,
	-1, 154,
	1, 1382,
	590, 1382,
	-2, 0,
	-1, 155,
	1, 1382,
	590, 1382,
	-2, 0,
	-1, 156,
	1, 1382,
	510, 1382,
	590, 1382,
	-2, 0,
	-1, 185,
	150, 1495,
	169, 1495,
	182, 1495,
	240, 1495,
	273, 1495,
	339, 1495,
	349, 1495,
	527, 1495,
	-2, 1470,
	-1, 231,
	4, 1534,
	5, 1534,
	6, 1534,
	7, 1534,
	8, 1534,
	9, 1534,
	10, 1534,
	21, 1534,
	22, 1534,
	23, 1534,
	24, 1534,
	25, 1534,
	26, 1534,
	27, 1534,
	29, 1534,
	30, 1534,
	36, 1534,
	37, 1534,
	41, 1534,
	42, 1534,
	43, 1534,
	44, 1534,
	45, 1534,
	46, 1534,
	47, 1534,
	48, 1534,
	49, 1534,
	50, 1534,
	51, 1534,
	53, 1534,
	54, 1534,
	55, 1534,
	56, 1534,
	58, 1534,
	59, 1534,
	60, 1534,
	61, 1534,
	62, 1534,
	63, 1534,
	64, 1534,
	65, 1534,
	66, 1534,
	67, 1534,
	68, 1534,
	69, 1534,
	70, 1534,
	71, 1534,
	73, 1534,
	74, 1534,
	75, 1534,
	77, 1534,
	79, 1534,
	80, 1534,
	81, 1534,
	82, 1534,
	83, 1534,
	84, 1534,
	85, 1534,
	88, 1534,
	89, 1534,
	90, 1534,
	91, 1534,
	92, 1534,
	94, 1534,
	96, 1534,
	97, 1534,
	98, 1534,
	99, 1534,
	100, 1534,
	101, 1534,
	103, 1534,
	104, 1534,
	105, 1534,
	106, 1534,
	107, 1534,
	108, 1534,
	109, 1534,
	110, 1534,
	111, 1534,
	112, 1534,
	113, 1534,
	114, 1534,
	115, 1534,
	116, 1534,
	117, 1534,
	118, 1534,
	119, 1534,
	120, 1534,
	121, 1534,
	122, 1534,
	123, 1534,
	124, 1534,
	125, 1534,
	126, 1534,
	127, 1534,
	128, 1534,
	129, 1534,
	131, 1534,
	132, 1534,
	133, 1534,
	135, 1534,
	136, 1534,
	137, 1534,
	140, 1534,
	141, 1534,
	142, 1534,
	144, 1534,
	145, 1534,
	147, 1534,
	148, 1534,
	149, 1534,
	151, 1534,
	152, 1534,
	153, 1534,
	154, 1534,
	155, 1534,
	156, 1534,
	157, 1534,
	158, 1534,
	159, 1534,
	160, 1534,
	161, 1534,
	162, 1534,
	163, 1534,
	164, 1534,
	165, 1534,
	166, 1534,
	167, 1534,
	168, 1534,
	174, 1534,
	175, 1534,
	176, 1534,
	177, 1534,
	181, 1534,
	183, 1534,
	184, 1534,
	187, 1534,
	188, 1534,
	189, 1534,
	190, 1534,
	191, 1534,
	192, 1534,
	193, 1534,
	194, 1534,
	195, 1534,
	196, 1534,
	197, 1534,
	198, 1534,
	199, 1534,
	200, 1534,
	201, 1534,
	203, 1534,
	204, 1534,
	206, 1534,
	207, 1534,
	209, 1534,
	210, 1534,
	211, 1534,
	212, 1534,
	213, 1534,
	214, 1534,
	215, 1534,
	216, 1534,
	217, 1534,
	218, 1534,
	219, 1534,
	220, 1534,
	222, 1534,
	223, 1534,
	224, 1534,
	225, 1534,
	226, 1534,
	230, 1534,
	231, 1534,
	232, 1534,
	233, 1534,
	234, 1534,
	236, 1534,
	237, 1534,
	238, 1534,
	239, 1534,
	241, 1534,
	243, 1534,
	244, 1534,
	245, 1534,
	246, 1534,
	247, 1534,
	248, 1534,
	249, 1534,
	250, 1534,
	251, 1534,
	252, 1534,
	256, 1534,
	257, 1534,
	258, 1534,
	259, 1534,
	260, 1534,
	261, 1534,
	263, 1534,
	264, 1534,
	265, 1534,
	267, 1534,
	268, 1534,
	269, 1534,
	270, 1534,
	271, 1534,
	272, 1534,
	274, 1534,
	278, 1534,
	279, 1534,
	280, 1534,
	281, 1534,
	282, 1534,
	283, 1534,
	284, 1534,
	285, 1534,
	286, 1534,
	288, 1534,
	289, 1534,
	290, 1534,
	291, 1534,
	292, 1534,
	293, 1534,
	294, 1534,
	295, 1534,
	296, 1534,
	297, 1534,
	298, 1534,
	299, 1534,
	300, 1534,
	301, 1534,
	302, 1534,
	303, 1534,
	304, 1534,
	305, 1534,
	306, 1534,
	307, 1534,
	308, 1534,
	309, 1534,
	311, 1534,
	312, 1534,
	313, 1534,
	314, 1534,
	315, 1534,
	316, 1534,
	317, 1534,
	318, 1534,
	319, 1534,
	320, 1534,
	321, 1534,
	322, 1534,
	323, 1534,
	324, 1534,
	325, 1534,
	326, 1534,
	327, 1534,
	328, 1534,
	329, 1534,
	330, 1534,
	331, 1534,
	332, 1534,
	333, 1534,
	334, 1534,
	335, 1534,
	336, 1534,
	337, 1534,
	338, 1534,
	341, 1534,
	345, 1534,
	346, 1534,
	347, 1534,
	350, 1534,
	351, 1534,
	352, 1534,
	353, 1534,
	354, 1534,
	355, 1534,
	356, 1534,
	357, 1534,
	358, 1534,
	359, 1534,
	360, 1534,
	361, 1534,
	362, 1534,
	363, 1534,
	364, 1534,
	365, 1534,
	366, 1534,
	367, 1534,
	369, 1534,
	370, 1534,
	371, 1534,
	372, 1534,
	373, 1534,
	374, 1534,
	375, 1534,
	376, 1534,
	377, 1534,
	378, 1534,
	379, 1534,
	380, 1534,
	381, 1534,
	382, 1534,
	383, 1534,
	385, 1534,
	386, 1534,
	388, 1534,
	389, 1534,
	390, 1534,
	391, 1534,
	392, 1534,
	393, 1534,
	394, 1534,
	395, 1534,
	396, 1534,
	397, 1534,
	398, 1534,
	399, 1534,
	401, 1534,
	403, 1534,
	404, 1534,
	405, 1534,
	410, 1534,
	412, 1534,
	413, 1534,
	414, 1534,
	415, 1534,
	416, 1534,
	417, 1534,
	418, 1534,
	419, 1534,
	420, 1534,
	422, 1534,
	423, 1534,
	424, 1534,
	425, 1534,
	426, 1534,
	427, 1534,
	428, 1534,
	429, 1534,
	430, 1534,
	431, 1534,
	432, 1534,
	434, 1534,
	435, 1534,
	436, 1534,
	437, 1534,
	438, 1534,
	439, 1534,
	440, 1534,
	441, 1534,
	442, 1534,
	443, 1534,
	444, 1534,
	445, 1534,
	447, 1534,
	448, 1534,
	449, 1534,
	450, 1534,
	451, 1534,
	452, 1534,
	453, 1534,
	454, 1534,
	455, 1534,
	456, 1534,
	457, 1534,
	458, 1534,
	459, 1534,
	460, 1534,
	461, 1534,
	462, 1534,
	463, 1534,
	464, 1534,
	465, 1534,
	466, 1534,
	467, 1534,
	468, 1534,
	470, 1534,
	472, 1534,
	473, 1534,
	474, 1534,
	475, 1534,
	476, 1534,
	477, 1534,
	478, 1534,
	479, 1534,
	480, 1534,
	481, 1534,
	482, 1534,
	483, 1534,
	484, 1534,
	485, 1534,
	486, 1534,
	487, 1534,
	489, 1534,
	490, 1534,
	491, 1534,
	492, 1534,
	493, 1534,
	495, 1534,
	496, 1534,
	497, 1534,
	498, 1534,
	499, 1534,
	500, 1534,
	501, 1534,
	502, 1534,
	503, 1534,
	505, 1534,
	506, 1534,
	507, 1534,
	508, 1534,
	509, 1534,
	511, 1534,
	513, 1534,
	514, 1534,
	515, 1534,
	516, 1534,
	517, 1534,
	518, 1534,
	519, 1534,
	520, 1534,
	521, 1534,
	522, 1534,
	523, 1534,
	525, 1534,
	526, 1534,
	528, 1534,
	529, 1534,
	530, 1534,
	531, 1534,
	532, 1534,
	533, 1534,
	534, 1534,
	535, 1534,
	536, 1534,
	537, 1534,
	540, 1534,
	541, 1534,
	542, 1534,
	543, 1534,
	544, 1534,
	545, 1534,
	547, 1534,
	548, 1534,
	549, 1534,
	550, 1534,
	552, 1534,
	557, 1534,
	558, 1534,
	559, 1534,
	560, 1534,
	561, 1534,
	562, 1534,
	563, 1534,
	571, 1534,
	578, 1534,
	579, 1534,
	580, 1534,
	587, 1534,
	591, 1534,
	-2, 0,
	-1, 732,
	4, 1265,
	21, 1265,
	22, 1265,
	23, 1265,
	24, 1265,
	25, 1265,
	26, 1265,
	27, 1265,
	29, 1265,
	30, 1265,
	36, 1265,
	41, 1265,
	42, 1265,
	44, 1265,
	45, 1265,
	46, 1265,
	47, 1265,
	48, 1265,
	49, 1265,
	50, 1265,
	51, 1265,
	53, 1265,
	54, 1265,
	55, 1265,
	56, 1265,
	58, 1265,
	59, 1265,
	60, 1265,
	61, 1265,
	62, 1265,
	63, 1265,
	64, 1265,
	68, 1265,
	69, 1265,
	70, 1265,
	71, 1265,
	73, 1265,
	74, 1265,
	75, 1265,
	79, 1265,
	80, 1265,
	81, 1265,
	82, 1265,
	83, 1265,
	84, 1265,
	85, 1265,
	88, 1265,
	89, 1265,
	90, 1265,
	91, 1265,
	92, 1265,
	94, 1265,
	96, 1265,
	97, 1265,
	98, 1265,
	99, 1265,
	100, 1265,
	101, 1265,
	103, 1265,
	104, 1265,
	105, 1265,
	107, 1265,
	108, 1265,
	109, 1265,
	117, 1265,
	118, 1265,
	119, 1265,
	120, 1265,
	121, 1265,
	123, 1265,
	124, 1265,
	125, 1265,
	127, 1265,
	128, 1265,
	129, 1265,
	131, 1265,
	132, 1265,
	133, 1265,
	135, 1265,
	136, 1265,
	137, 1265,
	140, 1265,
	141, 1265,
	142, 1265,
	144, 1265,
	145, 1265,
	147, 1265,
	148, 1265,
	149, 1265,
	151, 1265,
	152, 1265,
	153, 1265,
	154, 1265,
	155, 1265,
	156, 1265,
	157, 1265,
	158, 1265,
	159, 1265,
	160, 1265,
	161, 1265,
	162, 1265,
	163, 1265,
	164, 1265,
	165, 1265,
	166, 1265,
	168, 1265,
	174, 1265,
	175, 1265,
	176, 1265,
	177, 1265,
	181, 1265,
	183, 1265,
	184, 1265,
	188, 1265,
	189, 1265,
	190, 1265,
	191, 1265,
	192, 1265,
	193, 1265,
	194, 1265,
	195, 1265,
	196, 1265,
	197, 1265,
	198, 1265,
	199, 1265,
	200, 1265,
	201, 1265,
	203, 1265,
	204, 1265,
	206, 1265,
	207, 1265,
	209, 1265,
	210, 1265,
	211, 1265,
	212, 1265,
	213, 1265,
	214, 1265,
	215, 1265,
	216, 1265,
	217, 1265,
	219, 1265,
	220, 1265,
	222, 1265,
	223, 1265,
	224, 1265,
	225, 1265,
	226, 1265,
	230, 1265,
	231, 1265,
	232, 1265,
	233, 1265,
	234, 1265,
	237, 1265,
	238, 1265,
	239, 1265,
	241, 1265,
	243, 1265,
	244, 1265,
	246, 1265,
	248, 1265,
	249, 1265,
	250, 1265,
	252, 1265,
	256, 1265,
	257, 1265,
	258, 1265,
	259, 1265,
	260, 1265,
	261, 1265,
	263, 1265,
	264, 1265,
	265, 1265,
	267, 1265,
	268, 1265,
	270, 1265,
	271, 1265,
	274, 1265,
	278, 1265,
	279, 1265,
	280, 1265,
	283, 1265,
	284, 1265,
	285, 1265,
	286, 1265,
	288, 1265,
	289, 1265,
	290, 1265,
	291, 1265,
	292, 1265,
	293, 1265,
	294, 1265,
	295, 1265,
	296, 1265,
	297, 1265,
	298, 1265,
	299, 1265,
	300, 1265,
	301, 1265,
	302, 1265,
	303, 1265,
	304, 1265,
	305, 1265,
	306, 1265,
	307, 1265,
	308, 1265,
	309, 1265,
	311, 1265,
	313, 1265,
	314, 1265,
	315, 1265,
	316, 1265,
	317, 1265,
	318, 1265,
	319, 1265,
	320, 1265,
	321, 1265,
	322, 1265,
	323, 1265,
	324, 1265,
	326, 1265,
	327, 1265,
	329, 1265,
	331, 1265,
	332, 1265,
	334, 1265,
	335, 1265,
	336, 1265,
	337, 1265,
	338, 1265,
	341, 1265,
	345, 1265,
	346, 1265,
	347, 1265,
	350, 1265,
	351, 1265,
	352, 1265,
	354, 1265,
	356, 1265,
	357, 1265,
	358, 1265,
	359, 1265,
	360, 1265,
	361, 1265,
	362, 1265,
	363, 1265,
	364, 1265,
	365, 1265,
	366, 1265,
	367, 1265,
	369, 1265,
	370, 1265,
	371, 1265,
	372, 1265,
	373, 1265,
	374, 1265,
	375, 1265,
	376, 1265,
	377, 1265,
	378, 1265,
	379, 1265,
	380, 1265,
	381, 1265,
	382, 1265,
	383, 1265,
	385, 1265,
	386, 1265,
	388, 1265,
	389, 1265,
	390, 1265,
	391, 1265,
	392, 1265,
	393, 1265,
	394, 1265,
	395, 1265,
	396, 1265,
	397, 1265,
	398, 1265,
	399, 1265,
	401, 1265,
	403, 1265,
	404, 1265,
	405, 1265,
	410, 1265,
	412, 1265,
	413, 1265,
	414, 1265,
	415, 1265,
	416, 1265,
	417, 1265,
	418, 1265,
	419, 1265,
	420, 1265,
	422, 1265,
	423, 1265,
	424, 1265,
	426, 1265,
	427, 1265,
	428, 1265,
	429, 1265,
	430, 1265,
	431, 1265,
	432, 1265,
	434, 1265,
	435, 1265,
	436, 1265,
	437, 1265,
	438, 1265,
	439, 1265,
	440, 1265,
	441, 1265,
	442, 1265,
	443, 1265,
	444, 1265,
	445, 1265,
	447, 1265,
	448, 1265,
	449, 1265,
	450, 1265,
	451, 1265,
	452, 1265,
	454, 1265,
	455, 1265,
	456, 1265,
	457, 1265,
	458, 1265,
	459, 1265,
	461, 1265,
	462, 1265,
	463, 1265,
	464, 1265,
	465, 1265,
	466, 1265,
	467, 1265,
	468, 1265,
	470, 1265,
	472, 1265,
	473, 1265,
	474, 1265,
	475, 1265,
	476, 1265,
	477, 1265,
	478, 1265,
	479, 1265,
	480, 1265,
	481, 1265,
	482, 1265,
	483, 1265,
	484, 1265,
	485, 1265,
	486, 1265,
	487, 1265,
	489, 1265,
	490, 1265,
	492, 1265,
	493, 1265,
	495, 1265,
	496, 1265,
	497, 1265,
	498, 1265,
	499, 1265,
	500, 1265,
	501, 1265,
	502, 1265,
	503, 1265,
	505, 1265,
	506, 1265,
	507, 1265,
	508, 1265,
	509, 1265,
	511, 1265,
	513, 1265,
	514, 1265,
	515, 1265,
	516, 1265,
	517, 1265,
	518, 1265,
	520, 1265,
	521, 1265,
	522, 1265,
	523, 1265,
	525, 1265,
	526, 1265,
	529, 1265,
	530, 1265,
	531, 1265,
	532, 1265,
	533, 1265,
	534, 1265,
	535, 1265,
	537, 1265,
	540, 1265,
	541, 1265,
	542, 1265,
	543, 1265,
	544, 1265,
	545, 1265,
	547, 1265,
	548, 1265,
	549, 1265,
	550, 1265,
	552, 1265,
	557, 1265,
	558, 1265,
	559, 1265,
	560, 1265,
	561, 1265,
	562, 1265,
	-2, 0,
	-1, 751,
	186, 2319,
	510, 2319,
	570, 2319,
	589, 2319,
	-2, 0,
	-1, 752,
	186, 2426,
	510, 2426,
	570, 2426,
	589, 2426,
	-2, 0,
	-1, 753,
	186, 2306,
	510, 2306,
	570, 2306,
	589, 2306,
	-2, 0,
	-1, 755,
	186, 2559,
	510, 2559,
	570, 2559,
	589, 2559,
	-2, 0,
	-1, 757,
	186, 2600,
	510, 2600,
	570, 2600,
	589, 2600,
	-2, 0,
	-1, 764,
	186, 2453,
	510, 2453,
	570, 2453,
	589, 2453,
	-2, 688,
	-1, 797,
	589, 2255,
	592, 2255,
	-2, 968,
	-1, 798,
	589, 2257,
	592, 2257,
	-2, 969,
	-1, 799,
	589, 2256,
	592, 2256,
	-2, 970,
	-1, 800,
	592, 2181,
	-2, 971,
	-1, 823,
	182, 253,
	-2, 0,
	-1, 847,
	43, 2228,
	-2, 0,
	-1, 848,
	547, 1243,
	-2, 1038,
	-1, 864,
	4, 1663,
	21, 1663,
	22, 1663,
	23, 1663,
	24, 1663,
	25, 1663,
	26, 1663,
	27, 1663,
	29, 1663,
	30, 1663,
	36, 1663,
	41, 1663,
	42, 1663,
	44, 1663,
	45, 1663,
	46, 1663,
	47, 1663,
	48, 1663,
	49, 1663,
	50, 1663,
	51, 1663,
	53, 1663,
	54, 1663,
	55, 1663,
	56, 1663,
	58, 1663,
	59, 1663,
	60, 1663,
	61, 1663,
	62, 1663,
	63, 1663,
	64, 1663,
	68, 1663,
	69, 1663,
	70, 1663,
	71, 1663,
	73, 1663,
	74, 1663,
	75, 1663,
	79, 1663,
	80, 1663,
	81, 1663,
	82, 1663,
	83, 1663,
	84, 1663,
	85, 1663,
	88, 1663,
	89, 1663,
	90, 1663,
	91, 1663,
	92, 1663,
	94, 1663,
	96, 1663,
	97, 1663,
	98, 1663,
	99, 1663,
	100, 1663,
	101, 1663,
	103, 1663,
	104, 1663,
	105, 1663,
	107, 1663,
	108, 1663,
	109, 1663,
	117, 1663,
	118, 1663,
	119, 1663,
	120, 1663,
	121, 1663,
	123, 1663,
	124, 1663,
	125, 1663,
	127, 1663,
	128, 1663,
	129, 1663,
	131, 1663,
	132, 1663,
	133, 1663,
	135, 1663,
	136, 1663,
	137, 1663,
	140, 1663,
	141, 1663,
	142, 1663,
	144, 1663,
	145, 1663,
	147, 1663,
	148, 1663,
	149, 1663,
	151, 1663,
	152, 1663,
	153, 1663,
	154, 1663,
	155, 1663,
	156, 1663,
	157, 1663,
	158, 1663,
	159, 1663,
	160, 1663,
	161, 1663,
	162, 1663,
	163, 1663,
	164, 1663,
	165, 1663,
	166, 1663,
	168, 1663,
	174, 1663,
	175, 1663,
	176, 1663,
	177, 1663,
	181, 1663,
	183, 1663,
	184, 1663,
	188, 1663,
	189, 1663,
	190, 1663,
	191, 1663,
	192, 1663,
	193, 1663,
	194, 1663,
	195, 1663,
	196, 1663,
	197, 1663,
	198, 1663,
	199, 1663,
	200, 1663,
	201, 1663,
	203, 1663,
	204, 1663,
	206, 1663,
	207, 1663,
	209, 1663,
	210, 1663,
	211, 1663,
	212, 1663,
	213, 1663,
	214, 1663,
	215, 1663,
	216, 1663,
	217, 1663,
	219, 1663,
	220, 1663,
	222, 1663,
	223, 1663,
	224, 1663,
	225, 1663,
	226, 1663,
	230, 1663,
	231, 1663,
	232, 1663,
	233, 1663,
	234, 1663,
	237, 1663,
	238, 1663,
	239, 1663,
	241, 1663,
	243, 1663,
	244, 1663,
	246, 1663,
	248, 1663,
	249, 1663,
	250, 1663,
	252, 1663,
	256, 1663,
	257, 1663,
	258, 1663,
	259, 1663,
	260, 1663,
	261, 1663,
	263, 1663,
	264, 1663,
	265, 1663,
	267, 1663,
	268, 1663,
	270, 1663,
	271, 1663,
	274, 1663,
	278, 1663,
	279, 1663,
	280, 1663,
	283, 1663,
	284, 1663,
	285, 1663,
	286, 1663,
	288, 1663,
	289, 1663,
	290, 1663,
	291, 1663,
	292, 1663,
	293, 1663,
	294, 1663,
	295, 1663,
	296, 1663,
	297, 1663,
	298, 1663,
	299, 1663,
	300, 1663,
	301, 1663,
	302, 1663,
	303, 1663,
	304, 1663,
	305, 1663,
	306, 1663,
	307, 1663,
	308, 1663,
	309, 1663,
	311, 1663,
	313, 1663,
	314, 1663,
	315, 1663,
	316, 1663,
	317, 1663,
	318, 1663,
	319, 1663,
	320, 1663,
	321, 1663,
	322, 1663,
	323, 1663,
	324, 1663,
	326, 1663,
	327, 1663,
	329, 1663,
	331, 1663,
	332, 1663,
	334, 1663,
	335, 1663,
	336, 1663,
	337, 1663,
	338, 1663,
	341, 1663,
	345, 1663,
	346, 1663,
	347, 1663,
	350, 1663,
	351, 1663,
	352, 1663,
	354, 1663,
	356, 1663,
	357, 1663,
	358, 1663,
	359, 1663,
	360, 1663,
	361, 1663,
	362, 1663,
	363, 1663,
	364, 1663,
	365, 1663,
	366, 1663,
	367, 1663,
	369, 1663,
	370, 1663,
	371, 1663,
	372, 1663,
	373, 1663,
	374, 1663,
	375, 1663,
	376, 1663,
	377, 1663,
	378, 1663,
	379, 1663,
	380, 1663,
	381, 1663,
	382, 1663,
	383, 1663,
	385, 1663,
	386, 1663,
	388, 1663,
	389, 1663,
	390, 1663,
	391, 1663,
	392, 1663,
	393, 1663,
	394, 1663,
	395, 1663,
	396, 1663,
	397, 1663,
	398, 1663,
	399, 1663,
	401, 1663,
	403, 1663,
	404, 1663,
	405, 1663,
	410, 1663,
	412, 1663,
	413, 1663,
	414, 1663,
	415, 1663,
	416, 1663,
	417, 1663,
	418, 1663,
	419, 1663,
	420, 1663,
	422, 1663,
	423, 1663,
	424, 1663,
	426, 1663,
	427, 1663,
	428, 1663,
	429, 1663,
	430, 1663,
	431, 1663,
	432, 1663,
	434, 1663,
	435, 1663,
	436, 1663,
	437, 1663,
	438, 1663,
	439, 1663,
	440, 1663,
	441, 1663,
	442, 1663,
	443, 1663,
	444, 1663,
	445, 1663,
	447, 1663,
	448, 1663,
	449, 1663,
	450, 1663,
	451, 1663,
	452, 1663,
	454, 1663,
	455, 1663,
	456, 1663,
	457, 1663,
	458, 1663,
	459, 1663,
	461, 1663,
	462, 1663,
	463, 1663,
	464, 1663,
	465, 1663,
	466, 1663,
	467, 1663,
	468, 1663,
	470, 1663,
	472, 1663,
	473, 1663,
	474, 1663,
	475, 1663,
	476, 1663,
	477, 1663,
	478, 1663,
	479, 1663,
	480, 1663,
	481, 1663,
	482, 1663,
	483, 1663,
	484, 1663,
	485, 1663,
	486, 1663,
	487, 1663,
	489, 1663,
	490, 1663,
	492, 1663,
	493, 1663,
	495, 1663,
	496, 1663,
	497, 1663,
	498, 1663,
	499, 1663,
	500, 1663,
	501, 1663,
	502, 1663,
	503, 1663,
	505, 1663,
	506, 1663,
	507, 1663,
	508, 1663,
	509, 1663,
	511, 1663,
	513, 1663,
	514, 1663,
	515, 1663,
	516, 1663,
	517, 1663,
	518, 1663,
	520, 1663,
	521, 1663,
	522, 1663,
	523, 1663,
	525, 1663,
	526, 1663,
	529, 1663,
	530, 1663,
	531, 1663,
	532, 1663,
	533, 1663,
	534, 1663,
	535, 1663,
	537, 1663,
	540, 1663,
	541, 1663,
	542, 1663,
	543, 1663,
	544, 1663,
	545, 1663,
	547, 1663,
	548, 1663,
	549, 1663,
	550, 1663,
	552, 1663,
	557, 1663,
	558, 1663,
	559, 1663,
	560, 1663,
	561, 1663,
	562, 1663,
	-2, 0,
	-1, 874,
	260, 400,
	-2, 0,
	-1, 945,
	390, 855,
	452, 855,
	493, 855,
	515, 855,
	-2, 0,
	-1, 946,
	390, 854,
	452, 854,
	493, 854,
	515, 854,
	-2, 794,
	-1, 950,
	1, 906,
	586, 906,
	588, 906,
	590, 906,
	-2, 0,
	-1, 951,
	1, 829,
	586, 829,
	588, 829,
	590, 829,
	-2, 0,
	-1, 952,
	1, 833,
	586, 833,
	588, 833,
	590, 833,
	-2, 0,
	-1, 953,
	1, 967,
	182, 967,
	586, 967,
	588, 967,
	590, 967,
	-2, 0,
	-1, 961,
	1, 860,
	586, 860,
	588, 860,
	590, 860,
	-2, 0,
	-1, 968,
	1, 906,
	586, 906,
	588, 906,
	590, 906,
	-2, 0,
	-1, 969,
	1, 908,
	586, 908,
	588, 908,
	590, 908,
	-2, 0,
	-1, 970,
	1, 911,
	586, 911,
	588, 911,
	590, 911,
	-2, 0,
	-1, 976,
	1, 931,
	586, 931,
	588, 931,
	590, 931,
	-2, 0,
	-1, 977,
	1, 933,
	586, 933,
	588, 933,
	590, 933,
	-2, 0,
	-1, 982,
	1, 961,
	586, 961,
	588, 961,
	590, 961,
	-2, 0,
	-1, 1030,
	169, 1538,
	182, 1538,
	273, 1538,
	339, 1538,
	-2, 1474,
	-1, 1045,
	169, 1537,
	182, 1537,
	273, 1537,
	339, 1537,
	-2, 1471,
	-1, 1072,
	589, 2254,
	-2, 696,
	-1, 1101,
	5, 2246,
	587, 2244,
	-2, 2235,
	-1, 1109,
	5, 2267,
	587, 2264,
	-2, 2255,
	-1, 1110,
	5, 2268,
	587, 2265,
	-2, 2256,
	-1, 1118,
	589, 2252,
	-2, 2234,
	-1, 1119,
	587, 2683,
	-2, 2253,
	-1, 1142,
	587, 2682,
	-2, 2269,
	-1, 1143,
	5, 1738,
	-2, 2653,
	-1, 1144,
	5, 1739,
	-2, 2654,
	-1, 1145,
	5, 1740,
	-2, 2668,
	-1, 1146,
	5, 1741,
	-2, 2632,
	-1, 1147,
	5, 1742,
	-2, 2666,
	-1, 1148,
	5, 1750,
	-2, 2645,
	-1, 1149,
	5, 1737,
	-2, 2641,
	-1, 1150,
	5, 1737,
	-2, 2640,
	-1, 1151,
	5, 1737,
	-2, 2659,
	-1, 1152,
	5, 1748,
	-2, 2634,
	-1, 1153,
	5, 1753,
	-2, 2633,
	-1, 1154,
	5, 1755,
	-2, 2678,
	-1, 1157,
	5, 1777,
	-2, 2671,
	-1, 1158,
	5, 1769,
	-2, 2672,
	-1, 1159,
	5, 1777,
	-2, 2673,
	-1, 1160,
	5, 1773,
	-2, 2674,
	-1, 1161,
	5, 1723,
	-2, 2646,
	-1, 1162,
	5, 1724,
	-2, 2647,
	-1, 1163,
	5, 1725,
	-2, 2635,
	-1, 1191,
	5, 1760,
	-2, 2679,
	-1, 1192,
	5, 1761,
	-2, 2669,
	-1, 1193,
	5, 1762,
	548, 1762,
	-2, 2636,
	-1, 1194,
	5, 1763,
	548, 1763,
	-2, 2637,
	-1, 1231,
	587, 2264,
	-2, 2255,
	-1, 1232,
	587, 2265,
	-2, 2256,
	-1, 1332,
	186, 2600,
	510, 2600,
	570, 2600,
	589, 2600,
	-2, 0,
	-1, 1335,
	1, 674,
	590, 674,
	-2, 1390,
	-1, 1463,
	358, 2229,
	412, 2229,
	454, 2229,
	580, 2229,
	-2, 2219,
	-1, 1474,
	591, 2229,
	-2, 2231,
	-1, 1482,
	1, 1240,
	586, 1240,
	588, 1240,
	590, 1240,
	-2, 1523,
	-1, 1486,
	202, 1335,
	221, 1335,
	424, 1335,
	-2, 0,
	-1, 1531,
	397, 1037,
	547, 1037,
	-2, 395,
	-1, 1548,
	43, 2227,
	-2, 1003,
	-1, 1555,
	1, 1240,
	586, 1240,
	588, 1240,
	590, 1240,
	-2, 1523,
	-1, 1563,
	4, 1265,
	21, 1265,
	22, 1265,
	23, 1265,
	24, 1265,
	25, 1265,
	26, 1265,
	27, 1265,
	29, 1265,
	30, 1265,
	36, 1265,
	41, 1265,
	42, 1265,
	44, 1265,
	45, 1265,
	46, 1265,
	47, 1265,
	48, 1265,
	49, 1265,
	50, 1265,
	51, 1265,
	53, 1265,
	54, 1265,
	55, 1265,
	56, 1265,
	58, 1265,
	59, 1265,
	60, 1265,
	61, 1265,
	62, 1265,
	63, 1265,
	64, 1265,
	68, 1265,
	69, 1265,
	70, 1265,
	71, 1265,
	73, 1265,
	74, 1265,
	75, 1265,
	79, 1265,
	80, 1265,
	81, 1265,
	82, 1265,
	83, 1265,
	84, 1265,
	85, 1265,
	88, 1265,
	89, 1265,
	90, 1265,
	91, 1265,
	92, 1265,
	94, 1265,
	96, 1265,
	97, 1265,
	98, 1265,
	99, 1265,
	100, 1265,
	101, 1265,
	103, 1265,
	104, 1265,
	105, 1265,
	107, 1265,
	108, 1265,
	109, 1265,
	117, 1265,
	118, 1265,
	119, 1265,
	120, 1265,
	121, 1265,
	123, 1265,
	124, 1265,
	125, 1265,
	127, 1265,
	128, 1265,
	129, 1265,
	131, 1265,
	132, 1265,
	133, 1265,
	135, 1265,
	136, 1265,
	137, 1265,
	140, 1265,
	141, 1265,
	142, 1265,
	144, 1265,
	145, 1265,
	147, 1265,
	148, 1265,
	149, 1265,
	151, 1265,
	152, 1265,
	153, 1265,
	154, 1265,
	155, 1265,
	156, 1265,
	157, 1265,
	158, 1265,
	159, 1265,
	160, 1265,
	161, 1265,
	162, 1265,
	163, 1265,
	164, 1265,
	165, 1265,
	166, 1265,
	174, 1265,
	175, 1265,
	176, 1265,
	177, 1265,
	181, 1265,
	183, 1265,
	184, 1265,
	188, 1265,
	189, 1265,
	190, 1265,
	191, 1265,
	192, 1265,
	193, 1265,
	194, 1265,
	195, 1265,
	196, 1265,
	197, 1265,
	198, 1265,
	199, 1265,
	200, 1265,
	201, 1265,
	203, 1265,
	204, 1265,
	206, 1265,
	207, 1265,
	209, 1265,
	210, 1265,
	211, 1265,
	212, 1265,
	213, 1265,
	214, 1265,
	215, 1265,
	216, 1265,
	217, 1265,
	219, 1265,
	220, 1265,
	222, 1265,
	223, 1265,
	224, 1265,
	225, 1265,
	226, 1265,
	231, 1265,
	232, 1265,
	233, 1265,
	234, 1265,
	237, 1265,
	238, 1265,
	239, 1265,
	241, 1265,
	243, 1265,
	244, 1265,
	246, 1265,
	248, 1265,
	249, 1265,
	250, 1265,
	252, 1265,
	256, 1265,
	257, 1265,
	258, 1265,
	259, 1265,
	260, 1265,
	261, 1265,
	263, 1265,
	264, 1265,
	265, 1265,
	267, 1265,
	268, 1265,
	270, 1265,
	271, 1265,
	274, 1265,
	278, 1265,
	279, 1265,
	280, 1265,
	283, 1265,
	284, 1265,
	285, 1265,
	286, 1265,
	288, 1265,
	289, 1265,
	290, 1265,
	291, 1265,
	292, 1265,
	293, 1265,
	294, 1265,
	295, 1265,
	296, 1265,
	297, 1265,
	298, 1265,
	299, 1265,
	300, 1265,
	301, 1265,
	302, 1265,
	303, 1265,
	304, 1265,
	305, 1265,
	306, 1265,
	307, 1265,
	308, 1265,
	309, 1265,
	311, 1265,
	313, 1265,
	314, 1265,
	315, 1265,
	316, 1265,
	317, 1265,
	318, 1265,
	319, 1265,
	320, 1265,
	321, 1265,
	322, 1265,
	323, 1265,
	324, 1265,
	326, 1265,
	327, 1265,
	331, 1265,
	332, 1265,
	334, 1265,
	335, 1265,
	336, 1265,
	337, 1265,
	338, 1265,
	341, 1265,
	343, 1265,
	345, 1265,
	346, 1265,
	347, 1265,
	350, 1265,
	351, 1265,
	352, 1265,
	354, 1265,
	356, 1265,
	357, 1265,
	358, 1265,
	359, 1265,
	360, 1265,
	361, 1265,
	362, 1265,
	363, 1265,
	364, 1265,
	365, 1265,
	366, 1265,
	367, 1265,
	369, 1265,
	370, 1265,
	371, 1265,
	372, 1265,
	373, 1265,
	374, 1265,
	375, 1265,
	376, 1265,
	377, 1265,
	378, 1265,
	379, 1265,
	380, 1265,
	381, 1265,
	382, 1265,
	383, 1265,
	385, 1265,
	386, 1265,
	388, 1265,
	389, 1265,
	390, 1265,
	391, 1265,
	392, 1265,
	393, 1265,
	394, 1265,
	395, 1265,
	396, 1265,
	397, 1265,
	398, 1265,
	399, 1265,
	401, 1265,
	403, 1265,
	404, 1265,
	405, 1265,
	410, 1265,
	412, 1265,
	413, 1265,
	414, 1265,
	415, 1265,
	416, 1265,
	417, 1265,
	418, 1265,
	419, 1265,
	420, 1265,
	422, 1265,
	423, 1265,
	424, 1265,
	426, 1265,
	427, 1265,
	428, 1265,
	429, 1265,
	430, 1265,
	431, 1265,
	432, 1265,
	434, 1265,
	435, 1265,
	436, 1265,
	437, 1265,
	438, 1265,
	439, 1265,
	440, 1265,
	441, 1265,
	442, 1265,
	443, 1265,
	444, 1265,
	445, 1265,
	447, 1265,
	448, 1265,
	449, 1265,
	450, 1265,
	451, 1265,
	452, 1265,
	454, 1265,
	455, 1265,
	456, 1265,
	457, 1265,
	458, 1265,
	459, 1265,
	461, 1265,
	462, 1265,
	463, 1265,
	464, 1265,
	465, 1265,
	466, 1265,
	467, 1265,
	468, 1265,
	470, 1265,
	472, 1265,
	473, 1265,
	474, 1265,
	475, 1265,
	476, 1265,
	477, 1265,
	478, 1265,
	479, 1265,
	480, 1265,
	481, 1265,
	482, 1265,
	483, 1265,
	484, 1265,
	485, 1265,
	486, 1265,
	487, 1265,
	489, 1265,
	490, 1265,
	492, 1265,
	493, 1265,
	495, 1265,
	496, 1265,
	497, 1265,
	498, 1265,
	499, 1265,
	500, 1265,
	501, 1265,
	502, 1265,
	503, 1265,
	505, 1265,
	506, 1265,
	507, 1265,
	508, 1265,
	509, 1265,
	511, 1265,
	513, 1265,
	514, 1265,
	515, 1265,
	516, 1265,
	517, 1265,
	518, 1265,
	520, 1265,
	521, 1265,
	522, 1265,
	523, 1265,
	525, 1265,
	526, 1265,
	529, 1265,
	530, 1265,
	531, 1265,
	532, 1265,
	533, 1265,
	534, 1265,
	535, 1265,
	537, 1265,
	540, 1265,
	541, 1265,
	542, 1265,
	543, 1265,
	544, 1265,
	545, 1265,
	547, 1265,
	548, 1265,
	549, 1265,
	550, 1265,
	552, 1265,
	557, 1265,
	558, 1265,
	559, 1265,
	560, 1265,
	561, 1265,
	562, 1265,
	-2, 0,
	-1, 1586,
	1, 540,
	586, 540,
	588, 540,
	590, 540,
	-2, 1494,
	-1, 1589,
	4, 2677,
	11, 2677,
	12, 2677,
	14, 2677,
	15, 2677,
	16, 2677,
	17, 2677,
	18, 2677,
	19, 2677,
	21, 2677,
	22, 2677,
	23, 2677,
	24, 2677,
	25, 2677,
	26, 2677,
	27, 2677,
	29, 2677,
	30, 2677,
	33, 2677,
	34, 2677,
	36, 2677,
	38, 2677,
	41, 2677,
	42, 2677,
	44, 2677,
	45, 2677,
	46, 2677,
	47, 2677,
	48, 2677,
	49, 2677,
	50, 2677,
	51, 2677,
	53, 2677,
	54, 2677,
	55, 2677,
	56, 2677,
	58, 2677,
	59, 2677,
	60, 2677,
	61, 2677,
	62, 2677,
	63, 2677,
	64, 2677,
	67, 2677,
	68, 2677,
	69, 2677,
	70, 2677,
	71, 2677,
	73, 2677,
	74, 2677,
	75, 2677,
	76, 2677,
	79, 2677,
	80, 2677,
	81, 2677,
	82, 2677,
	83, 2677,
	84, 2677,
	85, 2677,
	86, 2677,
	88, 2677,
	89, 2677,
	90, 2677,
	91, 2677,
	92, 2677,
	94, 2677,
	95, 2677,
	96, 2677,
	97, 2677,
	98, 2677,
	99, 2677,
	100, 2677,
	101, 2677,
	103, 2677,
	104, 2677,
	105, 2677,
	106, 2677,
	107, 2677,
	108, 2677,
	109, 2677,
	117, 2677,
	118, 2677,
	119, 2677,
	120, 2677,
	121, 2677,
	123, 2677,
	124, 2677,
	125, 2677,
	127, 2677,
	128, 2677,
	129, 2677,
	131, 2677,
	132, 2677,
	133, 2677,
	135, 2677,
	136, 2677,
	137, 2677,
	140, 2677,
	141, 2677,
	142, 2677,
	144, 2677,
	145, 2677,
	147, 2677,
	148, 2677,
	149, 2677,
	151, 2677,
	152, 2677,
	153, 2677,
	154, 2677,
	155, 2677,
	156, 2677,
	157, 2677,
	158, 2677,
	159, 2677,
	160, 2677,
	161, 2677,
	162, 2677,
	163, 2677,
	164, 2677,
	165, 2677,
	166, 2677,
	170, 2677,
	171, 2677,
	172, 2677,
	173, 2677,
	174, 2677,
	175, 2677,
	176, 2677,
	177, 2677,
	180, 2677,
	181, 2677,
	183, 2677,
	184, 2677,
	187, 2677,
	188, 2677,
	189, 2677,
	190, 2677,
	191, 2677,
	192, 2677,
	193, 2677,
	194, 2677,
	195, 2677,
	196, 2677,
	197, 2677,
	198, 2677,
	199, 2677,
	200, 2677,
	201, 2677,
	203, 2677,
	204, 2677,
	206, 2677,
	207, 2677,
	209, 2677,
	210, 2677,
	211, 2677,
	212, 2677,
	213, 2677,
	214, 2677,
	215, 2677,
	216, 2677,
	217, 2677,
	218, 2677,
	219, 2677,
	220, 2677,
	221, 2677,
	222, 2677,
	223, 2677,
	224, 2677,
	225, 2677,
	226, 2677,
	228, 2677,
	229, 2677,
	231, 2677,
	232, 2677,
	233, 2677,
	234, 2677,
	236, 2677,
	237, 2677,
	238, 2677,
	239, 2677,
	241, 2677,
	243, 2677,
	244, 2677,
	245, 2677,
	246, 2677,
	247, 2677,
	248, 2677,
	249, 2677,
	250, 2677,
	251, 2677,
	252, 2677,
	254, 2677,
	255, 2677,
	256, 2677,
	257, 2677,
	258, 2677,
	259, 2677,
	260, 2677,
	261, 2677,
	263, 2677,
	264, 2677,
	265, 2677,
	267, 2677,
	268, 2677,
	269, 2677,
	270, 2677,
	271, 2677,
	272, 2677,
	274, 2677,
	278, 2677,
	279, 2677,
	280, 2677,
	283, 2677,
	284, 2677,
	285, 2677,
	286, 2677,
	287, 2677,
	288, 2677,
	289, 2677,
	290, 2677,
	291, 2677,
	292, 2677,
	293, 2677,
	294, 2677,
	295, 2677,
	296, 2677,
	297, 2677,
	298, 2677,
	299, 2677,
	300, 2677,
	301, 2677,
	302, 2677,
	303, 2677,
	304, 2677,
	305, 2677,
	306, 2677,
	307, 2677,
	308, 2677,
	309, 2677,
	311, 2677,
	312, 2677,
	313, 2677,
	314, 2677,
	315, 2677,
	316, 2677,
	317, 2677,
	318, 2677,
	319, 2677,
	320, 2677,
	321, 2677,
	322, 2677,
	323, 2677,
	324, 2677,
	326, 2677,
	327, 2677,
	330, 2677,
	331, 2677,
	332, 2677,
	334, 2677,
	335, 2677,
	336, 2677,
	337, 2677,
	338, 2677,
	341, 2677,
	345, 2677,
	346, 2677,
	347, 2677,
	348, 2677,
	350, 2677,
	351, 2677,
	352, 2677,
	354, 2677,
	356, 2677,
	357, 2677,
	358, 2677,
	359, 2677,
	360, 2677,
	361, 2677,
	362, 2677,
	363, 2677,
	364, 2677,
	365, 2677,
	366, 2677,
	367, 2677,
	369, 2677,
	370, 2677,
	371, 2677,
	372, 2677,
	373, 2677,
	374, 2677,
	375, 2677,
	376, 2677,
	377, 2677,
	378, 2677,
	379, 2677,
	380, 2677,
	381, 2677,
	382, 2677,
	383, 2677,
	385, 2677,
	386, 2677,
	388, 2677,
	389, 2677,
	390, 2677,
	391, 2677,
	392, 2677,
	393, 2677,
	394, 2677,
	395, 2677,
	396, 2677,
	397, 2677,
	398, 2677,
	399, 2677,
	401, 2677,
	403, 2677,
	404, 2677,
	405, 2677,
	410, 2677,
	411, 2677,
	412, 2677,
	413, 2677,
	414, 2677,
	415, 2677,
	416, 2677,
	417, 2677,
	418, 2677,
	419, 2677,
	420, 2677,
	422, 2677,
	423, 2677,
	424, 2677,
	425, 2677,
	426, 2677,
	427, 2677,
	428, 2677,
	429, 2677,
	430, 2677,
	431, 2677,
	432, 2677,
	433, 2677,
	434, 2677,
	435, 2677,
	436, 2677,
	437, 2677,
	438, 2677,
	439, 2677,
	440, 2677,
	441, 2677,
	442, 2677,
	443, 2677,
	444, 2677,
	445, 2677,
	447, 2677,
	448, 2677,
	449, 2677,
	450, 2677,
	451, 2677,
	452, 2677,
	454, 2677,
	455, 2677,
	456, 2677,
	457, 2677,
	458, 2677,
	459, 2677,
	460, 2677,
	461, 2677,
	462, 2677,
	463, 2677,
	464, 2677,
	465, 2677,
	466, 2677,
	467, 2677,
	468, 2677,
	470, 2677,
	472, 2677,
	473, 2677,
	474, 2677,
	475, 2677,
	476, 2677,
	477, 2677,
	478, 2677,
	479, 2677,
	480, 2677,
	481, 2677,
	482, 2677,
	483, 2677,
	484, 2677,
	485, 2677,
	486, 2677,
	487, 2677,
	489, 2677,
	490, 2677,
	491, 2677,
	492, 2677,
	493, 2677,
	495, 2677,
	496, 2677,
	497, 2677,
	498, 2677,
	499, 2677,
	500, 2677,
	501, 2677,
	502, 2677,
	503, 2677,
	505, 2677,
	506, 2677,
	507, 2677,
	508, 2677,
	509, 2677,
	511, 2677,
	513, 2677,
	514, 2677,
	515, 2677,
	516, 2677,
	517, 2677,
	518, 2677,
	520, 2677,
	521, 2677,
	522, 2677,
	523, 2677,
	525, 2677,
	526, 2677,
	529, 2677,
	530, 2677,
	531, 2677,
	532, 2677,
	533, 2677,
	534, 2677,
	535, 2677,
	537, 2677,
	540, 2677,
	541, 2677,
	542, 2677,
	543, 2677,
	544, 2677,
	545, 2677,
	547, 2677,
	548, 2677,
	549, 2677,
	550, 2677,
	552, 2677,
	557, 2677,
	558, 2677,
	559, 2677,
	560, 2677,
	561, 2677,
	562, 2677,
	563, 2677,
	565, 2677,
	568, 2677,
	569, 2677,
	570, 2677,
	571, 2677,
	572, 2677,
	573, 2677,
	575, 2677,
	576, 2677,
	577, 2677,
	578, 2677,
	579, 2677,
	580, 2677,
	581, 2677,
	582, 2677,
	583, 2677,
	585, 2677,
	588, 2677,
	589, 2677,
	591, 2677,
	592, 2677,
	-2, 0,
	-1, 1594,
	186, 2559,
	510, 2559,
	570, 2559,
	589, 2559,
	-2, 0,
	-1, 1643,
	390, 855,
	452, 855,
	493, 855,
	515, 855,
	-2, 0,
	-1, 1670,
	1, 850,
	586, 850,
	588, 850,
	590, 850,
	-2, 0,
	-1, 1671,
	1, 893,
	586, 893,
	588, 893,
	590, 893,
	-2, 0,
	-1, 1672,
	1, 901,
	586, 901,
	588, 901,
	590, 901,
	-2, 0,
	-1, 1675,
	1, 859,
	586, 859,
	588, 859,
	590, 859,
	-2, 0,
	-1, 1677,
	1, 865,
	586, 865,
	588, 865,
	590, 865,
	-2, 0,
	-1, 1680,
	1, 861,
	586, 861,
	588, 861,
	590, 861,
	-2, 0,
	-1, 1685,
	1, 875,
	586, 875,
	588, 875,
	590, 875,
	-2, 0,
	-1, 1719,
	1, 942,
	586, 942,
	588, 942,
	590, 942,
	-2, 0,
	-1, 1734,
	1, 1385,
	590, 1385,
	-2, 1390,
	-1, 1737,
	169, 1537,
	182, 1537,
	273, 1537,
	339, 1537,
	-2, 1475,
	-1, 1837,
	150, 1496,
	169, 1496,
	182, 1496,
	240, 1496,
	273, 1496,
	339, 1496,
	349, 1496,
	527, 1496,
	-2, 1942,
	-1, 1897,
	588, 2115,
	-2, 0,
	-1, 1932,
	150, 1496,
	169, 1496,
	182, 1496,
	240, 1496,
	273, 1496,
	339, 1496,
	349, 1496,
	527, 1496,
	-2, 1624,
	-1, 1967,
	510, 2556,
	589, 2556,
	592, 2556,
	-2, 0,
	-1, 1984,
	587, 1765,
	-2, 1753,
	-1, 2016,
	186, 2556,
	589, 2556,
	592, 2556,
	-2, 0,
	-1, 2064,
	1, 676,
	590, 676,
	-2, 1390,
	-1, 2193,
	221, 254,
	-2, 2263,
	-1, 2194,
	221, 255,
	-2, 303,
	-1, 2298,
	1, 852,
	586, 852,
	588, 852,
	590, 852,
	-2, 0,
	-1, 2299,
	1, 895,
	586, 895,
	588, 895,
	590, 895,
	-2, 0,
	-1, 2300,
	1, 903,
	586, 903,
	588, 903,
	590, 903,
	-2, 0,
	-1, 2301,
	1, 944,
	586, 944,
	588, 944,
	590, 944,
	-2, 0,
	-1, 2338,
	1, 877,
	586, 877,
	588, 877,
	590, 877,
	-2, 0,
	-1, 2398,
	431, 1564,
	432, 1564,
	-2, 1798,
	-1, 2429,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1818,
	-1, 2430,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1819,
	-1, 2431,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1820,
	-1, 2432,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1821,
	-1, 2433,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1822,
	-1, 2434,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1823,
	-1, 2435,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1824,
	-1, 2436,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1825,
	-1, 2448,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1837,
	-1, 2449,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1838,
	-1, 2450,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1839,
	-1, 2454,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1846,
	-1, 2460,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1850,
	-1, 2462,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1858,
	-1, 2463,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1859,
	-1, 2464,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1860,
	-1, 2465,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1861,
	-1, 2637,
	5, 2267,
	186, 2126,
	587, 2264,
	-2, 2255,
	-1, 2638,
	186, 2127,
	-2, 2628,
	-1, 2639,
	186, 2128,
	-2, 2452,
	-1, 2640,
	186, 2129,
	-2, 2337,
	-1, 2641,
	186, 2130,
	-2, 2392,
	-1, 2642,
	186, 2131,
	-2, 2437,
	-1, 2643,
	186, 2132,
	-2, 2554,
	-1, 2644,
	186, 2133,
	-2, 1925,
	-1, 2715,
	1, 1625,
	2, 1625,
	106, 1625,
	150, 1625,
	169, 1625,
	182, 1625,
	187, 1625,
	205, 1625,
	208, 1625,
	236, 1625,
	240, 1625,
	251, 1625,
	269, 1625,
	273, 1625,
	312, 1625,
	339, 1625,
	343, 1625,
	349, 1625,
	421, 1625,
	425, 1625,
	527, 1625,
	538, 1625,
	554, 1625,
	555, 1625,
	556, 1625,
	566, 1625,
	586, 1625,
	588, 1625,
	590, 1625,
	592, 1625,
	-2, 1624,
	-1, 2728,
	587, 2236,
	-2, 2250,
	-1, 2730,
	1, 320,
	554, 320,
	-2, 1523,
	-1, 2758,
	587, 1764,
	-2, 1754,
	-1, 2936,
	1, 1240,
	586, 1240,
	588, 1240,
	590, 1240,
	-2, 1523,
	-1, 3110,
	344, 1567,
	-2, 2667,
	-1, 3111,
	344, 1568,
	-2, 2539,
	-1, 3115,
	431, 2192,
	432, 2192,
	-2, 1923,
	-1, 3116,
	431, 2196,
	432, 2196,
	-2, 1924,
	-1, 3117,
	431, 2193,
	432, 2193,
	-2, 1923,
	-1, 3118,
	431, 2197,
	432, 2197,
	-2, 1924,
	-1, 3131,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1848,
	-1, 3132,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1852,
	-1, 3138,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1854,
	-1, 3360,
	1, 673,
	586, 673,
	588, 673,
	590, 673,
	-2, 1390,
	-1, 3522,
	43, 2227,
	-2, 1004,
	-1, 3527,
	1, 1240,
	586, 1240,
	588, 1240,
	590, 1240,
	-2, 1523,
	-1, 3634,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1856,
	-1, 3641,
	245, 0,
	247, 0,
	330, 0,
	-2, 1875,
	-1, 3709,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1904,
	-1, 3710,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1905,
	-1, 3711,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1906,
	-1, 3715,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1910,
	-1, 3716,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1911,
	-1, 3717,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1912,
	-1, 3764,
	587, 2237,
	-2, 2251,
	-1, 3935,
	589, 2785,
	-2, 1449,
	-1, 3993,
	245, 0,
	247, 0,
	330, 0,
	-2, 1876,
	-1, 3996,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1879,
	-1, 3997,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1881,
	-1, 4091,
	589, 2252,
	-2, 1275,
	-1, 4240,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1880,
	-1, 4241,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1882,
	-1, 4252,
	245, 0,
	-2, 1915,
	-1, 4433,
	245, 0,
	-2, 1916,
	-1, 4625,
	50, 0,
	218, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 2631,
}

const sqlPrivate = 57344

const sqlLast = 128952

var sqlAct = [...]int{
	267, 4618, 4355, 3511, 3017, 4816, 3269, 4727, 4470, 3004,
	4297, 4617, 4681, 4624, 4462, 4635, 2821, 4606, 4754, 4518,
	4574, 3510, 4593, 4497, 4554, 4087, 4636, 4571, 4637, 4694,
	4386, 2112, 4493, 4283, 3674, 2885, 2865, 4362, 4437, 1495,
	4340, 2190, 1235, 4196, 4623, 4191, 4261, 4157, 4134, 4302,
	3927, 3626, 2408, 1304, 1108, 3544, 4229, 3919, 3976, 1308,
	4180, 4178, 4371, 3382, 3857, 692, 4171, 1059, 1297, 3124,
	4088, 4072, 2274, 2670, 4400, 799, 4201, 3442, 1055, 2477,
	3538, 3506, 1746, 2416, 3385, 3900, 3496, 2046, 3583, 1224,
	3882, 2120, 2409, 4257, 1610, 2898, 3039, 1971, 3884, 1368,
	1046, 799, 3028, 1460, 3026, 3585, 2993, 762, 2974, 1938,
	3767, 1101, 2963, 3312, 2272, 3284, 3975, 3292, 3371, 3036,
	703, 872, 4, 1299, 1054, 176, 3252, 2988, 4032, 3025,
	2990, 3019, 2181, 3275, 3005, 876, 2131, 4728, 1907, 2182,
	3404, 2823, 1883, 3251, 3273, 2413, 2557, 4438, 1845, 3108,
	2708, 3379, 2710, 867, 1815, 1302, 1550, 261, 2490, 2707,
	1467, 3035, 1107, 794, 3735, 2555, 2913, 2177, 2158, 2975,
	1351, 2967, 1215, 2165, 1105, 2100, 1276, 1734, 2104, 260,
	2044, 2864, 2546, 2688, 1908, 2474, 2090, 1290, 2397, 1110,
	2380, 2741, 2238, 3319, 1651, 2378, 2652, 3508, 2265, 2998,
	796, 1608, 679, 1587, 2225, 1553, 701, 800, 801, 2667,
	2846, 4519, 736, 1337, 2740, 2021, 2809, 1878, 176, 3029,
	1927, 2697, 3877, 2549, 2678, 1218, 2033, 2527, 1924, 1917,
	1197, 2633, 805, 1829, 1232, 2599, 185, 1747, 1287, 2379,
	1748, 186, 2381, 1685, 1670, 744, 756, 1214, 1585, 2251,
	1578, 1490, 2224, 2119, 808, 4682, 1112, 2402, 805, 1086,
	44, 2022, 2019, 696, 43, 1220, 1195, 108, 41, 32,
	30, 28, 1753, 939, 3161, 693, 719, 704, 1733, 848,
	808, 1501, 959, 3749, 3155, 3750, 791, 2035, 1227, 2035,
	868, 4829, 2035, 4662, 2035, 2687, 4276, 2035, 4819, 2035,
	849, 891, 3563, 3271, 2035, 4804, 4803, 4793, 4774, 2687,
	2687, 2199, 4301, 1050, 4772, 1050, 3554, 73, 4301, 871,
	870, 4713, 4670, 4659, 4657, 2199, 4671, 2687, 2687, 2199,
	4273, 1084, 4654, 4651, 74, 4621, 4655, 4652, 4620, 2199,
	4619, 3553, 2199, 4614, 2056, 1230, 3563, 2056, 4613, 4604,
	78, 4602, 2056, 4301, 4599, 4301, 4569, 4543, 4374, 4536,
	4301, 2749, 4535, 2687, 4530, 1346, 2687, 1212, 4301, 1155,
	4529, 4523, 1761, 1762, 4301, 2199, 4489, 4435, 1198, 1198,
	4148, 2749, 4417, 4414, 4411, 4364, 3962, 2199, 4301, 4365,
	87, 2273, 3344, 4318, 4317, 1792, 1226, 2199, 2199, 4308,
	4307, 4300, 1764, 2199, 4301, 4301, 4268, 4242, 3327, 4053,
	2199, 2749, 2053, 1031, 1346, 3342, 2199, 4220, 1030, 3222,
	3223, 2056, 4209, 4129, 2770, 4112, 3563, 2687, 1817, 2687,
	874, 3995, 3943, 3123, 3937, 2749, 3580, 1763, 3580, 3898,
	3739, 2680, 49, 3899, 107, 2199, 1247, 1783, 3170, 93,
	104, 1761, 1762, 3759, 3171, 1051, 1780, 3760, 1040, 3757,
	1103, 1045, 3742, 3758, 3658, 3654, 2687, 3579, 2199, 2687,
	3570, 3580, 3268, 3263, 3571, 3262, 2687, 2687, 3213, 2687,
	3211, 1764, 3214, 3203, 3212, 2745, 1254, 3204, 3222, 3223,
	2053, 3201, 3172, 1199, 3237, 2687, 2687, 3043, 3015, 3014,
	2793, 2056, 2261, 2261, 2687, 2748, 2769, 2738, 94, 2749,
	3989, 2687, 2687, 2732, 2686, 2260, 1763, 2199, 2687, 2261,
	1201, 2199, 1202, 4544, 4439, 4430, 4418, 4374, 1248, 2056,
	3739, 1786, 1787, 1788, 1789, 3222, 3223, 2679, 4189, 4148,
	2053, 1769, 1248, 4113, 3962, 3571, 2888, 2808, 2124, 2069,
	2034, 2050, 2969, 2198, 2908, 1617, 2687, 2806, 3160, 231,
	1903, 1489, 1494, 3840, 3629, 1228, 3604, 1925, 1972, 2170,
	1653, 2724, 3555, 2723, 1761, 1762, 2722, 2721, 2720, 1203,
	1200, 1039, 231, 1038, 1037, 1036, 1035, 1034, 3228, 1791,
	1793, 3556, 4048, 2503, 2504, 2505, 2522, 2523, 2524, 1033,
	1029, 1028, 1027, 3083, 1764, 3222, 3223, 233, 1026, 1025,
	1024, 1023, 1022, 2525, 1021, 1778, 1779, 1020, 1019, 1018,
	1769, 1017, 1016, 1015, 1014, 1013, 1012, 937, 1761, 1762,
	233, 1794, 1795, 1796, 1805, 1806, 1807, 936, 935, 1763,
	934, 933, 2036, 932, 2036, 931, 1817, 2036, 1784, 2036,
	1798, 1792, 2036, 97, 2036, 930, 232, 3228, 1764, 2036,
	929, 928, 927, 926, 925, 2515, 924, 1811, 923, 225,
	922, 921, 920, 919, 2511, 918, 917, 916, 226, 232,
	915, 914, 913, 912, 1817, 911, 910, 909, 908, 907,
	906, 905, 2331, 1763, 904, 3238, 894, 893, 1761, 1762,
	187, 889, 2053, 1783, 3228, 184, 100, 888, 103, 882,
	881, 866, 1780, 865, 822, 93, 821, 820, 819, 811,
	1814, 1792, 3553, 187, 810, 809, 1494, 777, 1764, 768,
	767, 766, 750, 255, 231, 1503, 254, 1313, 1110, 253,
	252, 251, 875, 1769, 250, 249, 248, 148, 247, 2516,
	2517, 2518, 2519, 246, 1817, 245, 244, 243, 242, 2510,
	241, 1110, 240, 1763, 3238, 1110, 239, 1814, 238, 237,
	236, 235, 1790, 1783, 3228, 234, 4203, 4007, 3781, 1603,
	3753, 1371, 233, 3581, 3315, 1371, 3183, 1786, 1787, 1788,
	1789, 3166, 1313, 3157, 1785, 2582, 3066, 1769, 1248, 1814,
	2950, 2753, 2729, 2714, 2568, 2566, 2098, 2055, 151, 1951,
	2268, 3238, 4421, 1856, 1110, 2199, 1110, 2780, 1110, 1886,
	2034, 2053, 2053, 188, 1313, 2050, 1885, 2769, 1928, 3266,
	1341, 232, 2373, 2520, 2521, 1802, 1814, 1497, 1812, 1350,
	1357, 3239, 39, 1355, 225, 1791, 1793, 2679, 1889, 1886,
	1313, 1760, 1816, 226, 1234, 1475, 1885, 1786, 1787, 1788,
	1789, 2552, 1808, 4642, 1809, 1676, 2513, 1769, 3267, 4622,
	1313, 1778, 1779, 1470, 4601, 869, 2983, 1313, 1884, 1847,
	1515, 3238, 4504, 1814, 4442, 1110, 4427, 1110, 4295, 1800,
	4256, 1313, 1248, 4419, 2267, 1502, 4210, 1110, 4188, 1110,
	4059, 4030, 4029, 4023, 1784, 4022, 4021, 1281, 1284, 4014,
	3239, 4013, 4011, 1493, 4006, 1791, 1793, 4003, 4002, 3903,
	1559, 1562, 3897, 3785, 3784, 3783, 1294, 3763, 3730, 3729,
	3222, 3223, 3728, 1781, 1777, 1335, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 1313, 1480, 1810, 3650, 1854,
	2553, 3645, 1364, 1814, 1457, 1462, 3310, 3239, 3259, 1503,
	805, 3250, 3221, 3218, 1110, 1799, 3217, 1110, 3001, 3215,
	3210, 1465, 3209, 3208, 1784, 3205, 1814, 3202, 3182, 1509,
	4205, 3165, 808, 3233, 3231, 3232, 3224, 3225, 3226, 3227,
	3229, 3230, 3158, 1621, 3156, 176, 176, 3016, 2715, 231,
	231, 2539, 1330, 1548, 1607, 1760, 1211, 1759, 1847, 4823,
	1492, 1491, 2514, 148, 4764, 4763, 1849, 2206, 1765, 1766,
	1767, 1768, 1770, 1771, 1590, 1592, 2241, 3239, 1790, 3904,
	1321, 4729, 2554, 1848, 2551, 1846, 1622, 4680, 4678, 1236,
	3676, 2204, 1565, 4561, 4496, 1503, 1814, 233, 233, 3838,
	1785, 4480, 3233, 3231, 3232, 3224, 3225, 3226, 3227, 3229,
	3230, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 4477,
	1816, 1341, 4476, 4475, 1341, 1503, 4456, 1803, 4441, 4440,
	4415, 4399, 4398, 3222, 3223, 2480, 4384, 4381, 4380, 4375,
	4314, 4291, 1514, 4254, 1110, 4237, 232, 232, 1790, 3228,
	1110, 3232, 3224, 3225, 3226, 3227, 3229, 3230, 1816, 225,
	225, 3334, 1581, 4236, 4217, 4216, 4174, 4149, 226, 226,
	1785, 2985, 1053, 4047, 4028, 3963, 3957, 3264, 3954, 3826,
	3825, 1738, 3809, 3808, 3806, 3745, 231, 1051, 3733, 3640,
	187, 187, 1834, 1767, 1768, 1770, 1771, 2500, 2501, 2502,
	2526, 2512, 2506, 3582, 2508, 2509, 2507, 2494, 2495, 2496,
	2497, 2498, 2499, 1694, 2486, 3904, 4443, 1602, 1732, 3564,
	3231, 3232, 3224, 3225, 3226, 3227, 3229, 3230, 1816, 1616,
	1801, 2751, 3530, 2556, 233, 1775, 1776, 1782, 1804, 1781,
	1777, 1508, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 1836, 3459, 3417, 4177, 1110, 1110, 1110, 3384, 4015,
	3336, 1110, 3187, 3186, 1627, 3181, 3147, 2962, 1232, 1892,
	1232, 1891, 1890, 231, 4204, 1887, 1879, 1877, 2760, 1644,
	2759, 2726, 2719, 232, 2685, 1371, 2564, 1833, 1950, 1906,
	1901, 1905, 1900, 1679, 1110, 1899, 225, 799, 1898, 1761,
	1762, 1897, 3228, 1989, 799, 226, 1896, 1313, 1895, 1894,
	1893, 1874, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 233, 1227, 1873, 1227, 1872, 1954, 187, 1871, 1764,
	1735, 1870, 1869, 1868, 1914, 1867, 1743, 1968, 231, 1742,
	1866, 1031, 1865, 1864, 2017, 2269, 1030, 1863, 1862, 2550,
	1861, 1860, 1888, 1849, 1835, 1737, 3307, 1832, 1827, 231,
	1329, 1252, 1243, 4055, 1763, 1739, 2984, 1962, 3999, 3780,
	232, 1756, 1757, 1313, 231, 2762, 3756, 3748, 1959, 1230,
	1110, 1230, 1579, 225, 1313, 3169, 233, 2717, 1584, 231,
	4274, 4057, 226, 3779, 1911, 1912, 176, 1848, 3332, 1198,
	1830, 1958, 1110, 1935, 2089, 3222, 3223, 233, 1371, 3238,
	3559, 1051, 2089, 1946, 187, 4761, 2114, 1352, 1880, 1881,
	4753, 4422, 233, 1928, 3222, 3223, 4115, 2886, 1354, 1347,
	1226, 2581, 1226, 4478, 4376, 232, 2087, 233, 4367, 4366,
	2567, 2565, 4208, 4151, 4150, 4114, 4050, 3966, 225, 3965,
	3964, 3751, 3566, 2062, 805, 1341, 232, 226, 3565, 4372,
	3907, 805, 1346, 3627, 1957, 1886, 1678, 2552, 3852, 225,
	1346, 232, 1885, 231, 1643, 1955, 808, 1730, 226, 3000,
	2096, 1814, 2089, 808, 225, 2061, 232, 231, 1353, 3207,
	3823, 1936, 1310, 226, 1926, 1933, 3206, 1963, 231, 225,
	187, 1869, 4420, 3129, 2012, 3420, 2851, 2038, 226, 1349,
	3386, 1695, 2075, 1904, 1346, 187, 1858, 3513, 1010, 3512,
	2124, 233, 2167, 4294, 231, 1869, 4692, 2290, 1652, 3451,
	187, 2266, 1945, 1930, 2869, 233, 1944, 1051, 1313, 1313,
	1943, 1941, 1940, 1939, 4363, 4666, 233, 1343, 1371, 3226,
	3227, 3229, 3230, 4647, 3575, 3239, 2553, 4634, 2040, 1983,
	2064, 2042, 1969, 1011, 3497, 3040, 1653, 2047, 2183, 3911,
	232, 2049, 233, 3894, 3854, 3849, 2052, 3831, 3601, 3358,
	4258, 1855, 3271, 225, 232, 3678, 2547, 3175, 4310, 4287,
	2894, 2758, 226, 3228, 2848, 232, 1902, 225, 1882, 1228,
	3504, 1228, 4643, 2235, 1558, 1485, 226, 2152, 225, 2157,
	1324, 1280, 2162, 2060, 187, 2905, 231, 226, 4656, 4653,
	3549, 232, 2902, 2900, 3801, 2242, 4471, 1348, 187, 1583,
	1631, 1320, 2191, 2196, 225, 2058, 4192, 4568, 2554, 187,
	2551, 1210, 1313, 226, 1313, 2067, 1313, 4453, 3389, 2893,
	3818, 3023, 2997, 2847, 861, 3483, 4711, 2092, 2065, 2082,
	4710, 3621, 1313, 1313, 233, 187, 2081, 2080, 4100, 4644,
	2089, 2091, 1986, 1313, 742, 4098, 3362, 3867, 4336, 991,
	2130, 4102, 1533, 1336, 1344, 1313, 1525, 1313, 1313, 1313,
	1674, 1008, 2388, 1345, 2794, 1693, 1692, 805, 4743, 1487,
	3224, 3225, 3226, 3227, 3229, 3230, 2231, 1500, 2185, 1507,
	799, 1513, 1006, 232, 1004, 2276, 4084, 4818, 1002, 808,
	999, 4484, 2344, 2342, 1584, 2812, 225, 2150, 2076, 4329,
	4320, 4143, 1110, 2994, 4142, 226, 3865, 3864, 2236, 3333,
	2810, 1354, 3856, 3846, 3845, 3866, 3843, 1492, 1491, 3842,
	4080, 2386, 2299, 2812, 3830, 2248, 3796, 187, 4235, 862,
	3795, 3487, 3486, 1977, 3326, 3364, 996, 3180, 2810, 1534,
	3179, 2149, 1814, 3178, 2161, 3177, 3133, 2911, 1601, 2752,
	1606, 2910, 2907, 2256, 2271, 2896, 1347, 2884, 2084, 2556,
	1615, 2197, 1620, 1673, 2883, 2879, 2878, 1691, 2294, 2877,
	1110, 1353, 1110, 2856, 4081, 2855, 4311, 4288, 2816, 1110,
	1629, 1347, 1989, 1989, 1371, 2300, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 2245, 1110, 1677, 1110, 1110, 1110, 1110, 2217,
	2258, 2216, 2266, 2282, 2277, 1346, 2739, 805, 2121, 2398,
	1581, 1771, 2253, 2250, 2253, 2849, 2254, 4097, 1354, 2849,
	2390, 1110, 3386, 2461, 2289, 1110, 1110, 3449, 1736, 808,
	2262, 1330, 2263, 1110, 2387, 741, 2595, 1110, 2377, 1110,
	1110, 4744, 2117, 2086, 1343, 2550, 3419, 1371, 2594, 1051,
	2316, 1051, 4345, 1110, 1110, 1110, 1110, 2124, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 2281, 2418, 1571, 1343,
	1570, 2122, 2123, 2215, 1569, 2766, 1568, 4748, 1353, 2298,
	1624, 2085, 2743, 2355, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 2388, 1674, 2853, 3602, 1110, 2528, 2529,
	2873, 2118, 1645, 4065, 2370, 1583, 2286, 1488, 2385, 1232,
	1529, 1049, 2528, 2544, 2866, 2867, 1371, 3230, 2801, 2362,
	2365, 2338, 2866, 2867, 1348, 1232, 1728, 691, 2401, 2306,
	1542, 3224, 3225, 3226, 3227, 3229, 3230, 2547, 2590, 2155,
	2476, 1110, 1371, 1266, 4116, 743, 4076, 3046, 2372, 1348,
	1946, 4077, 2386, 686, 2653, 2476, 1671, 2636, 2636, 2650,
	2731, 2528, 4234, 1227, 2671, 2673, 4064, 2839, 2376, 1547,
	2677, 2375, 2374, 4749, 2389, 2382, 1704, 1729, 2492, 1227,
	1031, 1344, 3088, 1031, 1031, 2405, 3450, 2543, 2406, 2407,
	1345, 1690, 2866, 2867, 864, 863, 4710, 1673, 1625, 2348,
	3106, 1048, 4079, 2303, 4776, 1653, 1344, 1741, 1983, 1983,
	1328, 2702, 4096, 2838, 2727, 1345, 2592, 2825, 4082, 1672,
	1230, 2593, 1653, 2904, 2596, 3121, 2597, 2598, 4464, 2255,
	2364, 2384, 3610, 2297, 1708, 3609, 1230, 3080, 1554, 2307,
	4099, 902, 2694, 2556, 4141, 3815, 1198, 1313, 1313, 3844,
	3664, 3667, 2488, 4640, 1942, 2903, 2815, 775, 1935, 3361,
	986, 3841, 2901, 2899, 2458, 3788, 2541, 2484, 3775, 3493,
	1687, 1226, 3222, 3223, 2482, 3240, 3241, 3242, 4724, 2742,
	2132, 3485, 2746, 4751, 1044, 176, 2716, 1226, 1552, 1371,
	1051, 2693, 3091, 4346, 3991, 2387, 3804, 3827, 2815, 2371,
	1051, 2789, 4732, 2136, 1051, 4344, 1630, 895, 3447, 2783,
	1050, 4342, 2754, 2906, 2876, 2662, 2645, 2854, 2632, 1641,
	4731, 1986, 1986, 1989, 2675, 2811, 2683, 2684, 2765, 2168,
	2828, 1341, 3665, 2699, 2700, 2701, 1888, 2706, 2737, 2695,
	2712, 2713, 3874, 1000, 1916, 3547, 4078, 3237, 4779, 4466,
	1933, 4699, 2105, 2203, 2202, 3120, 3981, 2106, 4341, 2852,
	2133, 1371, 1346, 3813, 1000, 3980, 1000, 773, 2786, 2385,
	1001, 3546, 1000, 2343, 2341, 1313, 987, 3086, 1239, 2164,
	2093, 2094, 859, 2361, 858, 4085, 4343, 1346, 3436, 3113,
	3114, 1531, 1051, 3491, 1110, 1110, 3875, 1110, 997, 2785,
	2817, 2761, 2556, 4807, 2774, 2163, 1880, 1881, 2777, 2035,
	2778, 4550, 1977, 1977, 4094, 4279, 2887, 3828, 2764, 799,
	1237, 1313, 2792, 3546, 3090, 1920, 2782, 4641, 3373, 2105,
	2814, 2768, 2456, 2784, 2106, 2459, 2874, 2881, 3873, 2159,
	1228, 3228, 3437, 2791, 4084, 2171, 3428, 2897, 2880, 4608,
	2178, 4609, 1313, 2966, 3087, 2775, 1228, 2858, 4472, 2813,
	4540, 2779, 3008, 1241, 1313, 2147, 1313, 2137, 2122, 2123,
	2107, 2981, 2795, 4750, 1923, 2790, 1554, 3037, 4080, 2842,
	1705, 1313, 4073, 2556, 3435, 1528, 2455, 2111, 1047, 1918,
	2938, 1628, 2857, 986, 2363, 687, 2945, 4491, 2160, 4071,
	3429, 2947, 1588, 2305, 812, 2875, 3244, 1921, 4075, 2868,
	2870, 2871, 2872, 2830, 2833, 2820, 3144, 1044, 1265, 3405,
	2414, 2415, 3363, 1042, 1702, 986, 1110, 4639, 740, 2827,
	1240, 2124, 4081, 2138, 2139, 1486, 1250, 2156, 4166, 883,
	2153, 3067, 3427, 3068, 2939, 3142, 805, 2107, 3238, 1044,
	1919, 2168, 2144, 2882, 896, 897, 3089, 2134, 3041, 1875,
	2108, 2113, 2892, 2172, 2111, 3330, 2168, 988, 808, 4095,
	3407, 2115, 1626, 688, 4074, 176, 805, 4757, 774, 1983,
	2180, 3286, 3044, 2148, 1110, 3064, 2937, 3049, 3135, 3050,
	1110, 1110, 2943, 3022, 2472, 1043, 1492, 2948, 808, 2135,
	3010, 3462, 3977, 2475, 3012, 4698, 2145, 2797, 4247, 987,
	4231, 4465, 2960, 2705, 4721, 3492, 903, 1706, 2977, 2971,
	1814, 2970, 689, 2470, 690, 2127, 2799, 776, 3069, 4591,
	4579, 772, 3374, 3406, 2179, 2730, 2973, 2108, 2113, 3401,
	3093, 987, 3095, 2109, 3003, 4538, 1110, 1110, 2143, 4126,
	1703, 3109, 1110, 709, 1826, 3013, 3185, 3024, 2302, 3593,
	2698, 1740, 2800, 1922, 1327, 1110, 1110, 3042, 3586, 3047,
	3048, 1110, 1110, 2826, 2457, 3814, 2992, 1110, 3011, 2128,
	3054, 3055, 3056, 2798, 3063, 4539, 3411, 3139, 2296, 3061,
	2115, 2538, 1986, 4780, 3239, 3400, 3072, 3070, 3074, 2812,
	3076, 2711, 3071, 4409, 3073, 1050, 3075, 4673, 1707, 989,
	2483, 3140, 3680, 2332, 2831, 3145, 2140, 4674, 4767, 4176,
	2109, 2126, 1110, 1110, 1110, 4498, 3971, 4765, 1110, 3136,
	3084, 4146, 2653, 2653, 4076, 3776, 3101, 3112, 1110, 4077,
	3409, 1255, 3982, 3096, 898, 899, 3098, 4230, 2105, 1658,
	4638, 813, 814, 2106, 4167, 1110, 4401, 3103, 4808, 3623,
	3104, 3102, 990, 2103, 2036, 2466, 3588, 2115, 3168, 4402,
	2401, 3122, 3107, 1640, 1642, 4709, 3285, 4707, 4584, 2175,
	4517, 3587, 3410, 1977, 2467, 4383, 884, 885, 4145, 2468,
	4079, 4181, 2141, 2473, 1238, 4144, 3163, 3164, 3925, 2146,
	988, 3167, 4403, 3534, 4697, 1916, 4082, 3887, 2223, 1913,
	4182, 1253, 1246, 678, 3887, 3902, 3885, 2101, 1751, 3978,
	3159, 2404, 2125, 3885, 1750, 2156, 3320, 4026, 4755, 3234,
	3235, 3236, 988, 2173, 3134, 2077, 3233, 3231, 3232, 3224,
	3225, 3226, 3227, 3229, 3230, 1110, 1110, 1110, 1110, 4309,
	4452, 1068, 3926, 2154, 4392, 1110, 1110, 1110, 3860, 2102,
	1110, 3148, 3149, 3847, 4785, 4405, 2107, 3800, 3380, 2110,
	1110, 1232, 1371, 3535, 3526, 2174, 1110, 1750, 1110, 3376,
	3278, 3279, 3719, 2111, 4232, 2982, 1920, 1232, 4404, 2025,
	1745, 2859, 816, 815, 3889, 2151, 2976, 3141, 3769, 2964,
	2249, 3889, 2243, 3663, 2237, 1371, 4406, 3143, 2229, 2209,
	4499, 1522, 2653, 2653, 2653, 2653, 1257, 1232, 3174, 3792,
	1371, 3734, 749, 4555, 3624, 1227, 2815, 2155, 1749, 3888,
	2860, 4520, 4756, 3261, 4078, 1923, 3888, 2349, 1051, 2394,
	1989, 1227, 989, 3300, 1371, 3928, 2110, 2070, 4197, 3280,
	1918, 1750, 3770, 817, 818, 2025, 2108, 2113, 4672, 2074,
	1313, 1313, 2961, 3983, 1268, 4361, 2025, 4758, 1921, 3325,
	4359, 1227, 1041, 4085, 989, 2469, 886, 887, 3771, 4290,
	3768, 1749, 1230, 1110, 3392, 2471, 3594, 3589, 3590, 3591,
	3592, 3388, 3387, 3340, 1751, 990, 3127, 1110, 1230, 3105,
	2114, 1675, 2287, 3290, 3747, 2832, 3313, 1313, 1826, 3283,
	3282, 1919, 1989, 1681, 1680, 2736, 3368, 3369, 3314, 3309,
	3288, 4179, 2735, 2734, 2733, 3883, 4027, 990, 1230, 1920,
	1110, 1563, 1577, 1226, 2114, 2072, 1575, 3390, 3893, 2109,
	3394, 3246, 3247, 3248, 3249, 1564, 1313, 1751, 3984, 1226,
	901, 3289, 3299, 2968, 3272, 1749, 3298, 1341, 3352, 3306,
	3318, 3359, 3301, 3302, 3256, 3257, 3258, 1048, 1313, 3287,
	1313, 4784, 3720, 4459, 4298, 3365, 2073, 2395, 1923, 1226,
	2167, 3721, 4356, 4158, 2836, 3391, 2115, 1371, 3396, 2167,
	1659, 3398, 3294, 2696, 3886, 3807, 3337, 3338, 1313, 3339,
	3576, 3886, 1313, 2861, 2862, 2689, 4500, 3465, 2247, 3467,
	3500, 1921, 3471, 3452, 3377, 3793, 3477, 259, 3322, 3323,
	3324, 3797, 4718, 4495, 1922, 1313, 3304, 4277, 3305, 3343,
	3328, 3422, 4214, 3045, 2946, 1313, 3367, 1313, 2944, 2942,
	2692, 1371, 2275, 3349, 1634, 4558, 4285, 4565, 799, 3445,
	4407, 3463, 3353, 4033, 3321, 4460, 4408, 4552, 3736, 1313,
	2563, 4722, 3360, 3424, 1724, 1958, 4586, 4723, 4720, 3509,
	1726, 1313, 3440, 3494, 4658, 3345, 3346, 3366, 3772, 4299,
	4487, 2691, 3460, 1723, 2357, 3438, 2690, 3295, 1232, 4479,
	4253, 3348, 4286, 3542, 3350, 3351, 1983, 4025, 1721, 3354,
	4348, 3355, 1228, 3356, 4213, 3892, 3253, 3037, 3408, 748,
	3525, 1699, 3418, 1313, 1313, 3472, 3037, 1697, 1228, 3478,
	3540, 3639, 3375, 3599, 1588, 1669, 1588, 3598, 3431, 3495,
	3341, 3498, 3216, 4559, 3434, 2951, 1313, 3293, 2954, 3426,
	2956, 3432, 1227, 4461, 3146, 3433, 3533, 4633, 1228, 3551,
	2965, 2895, 3453, 2850, 2763, 2366, 3461, 1953, 1949, 3484,
	1727, 3425, 3448, 1612, 1667, 2110, 3474, 1922, 1983, 3480,
	3297, 1665, 1576, 3254, 3619, 3618, 1574, 1745, 1371, 1663,
	1661, 1371, 3798, 3439, 2999, 3441, 1655, 2999, 2340, 2188,
	900, 3082, 1650, 3081, 1648, 1573, 3052, 2383, 1686, 1230,
	2311, 2228, 2858, 3488, 2208, 805, 2018, 1859, 1623, 1986,
	3536, 3502, 1546, 3473, 1110, 2562, 3612, 3479, 3522, 3523,
	1110, 1110, 4127, 3851, 1110, 1110, 1110, 808, 1110, 176,
	176, 3596, 3543, 3521, 4128, 3850, 4111, 1110, 1989, 4551,
	4195, 4133, 4124, 4069, 3924, 3550, 1110, 3595, 3915, 3574,
	1226, 1110, 3548, 3863, 1725, 3578, 3518, 1371, 3560, 3561,
	3464, 3557, 4695, 3077, 2359, 3848, 1110, 1722, 2358, 3617,
	3821, 3572, 3819, 3541, 1371, 3799, 4190, 3296, 3529, 3524,
	3616, 1986, 1720, 3514, 1989, 1989, 1110, 1110, 998, 1110,
	1110, 1110, 2653, 2653, 1369, 1698, 2995, 2987, 1468, 2980,
	1977, 1696, 2972, 2958, 2940, 3562, 3625, 1110, 2781, 1668,
	2776, 1110, 2207, 1989, 1989, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 3642, 1110, 3597, 3613, 3692,
	3660, 3693, 3603, 4686, 1110, 1110, 1989, 3622, 1666, 2205,
	2184, 1110, 2169, 3652, 3653, 1664, 2142, 3606, 1051, 3607,
	2129, 3608, 1110, 1662, 1660, 2116, 3614, 2057, 2339, 2189,
	1654, 2054, 1977, 1232, 1232, 3620, 1649, 1110, 1647, 1572,
	2051, 2048, 2653, 2653, 2653, 2653, 2653, 2653, 2653, 2653,
	2653, 2653, 2653, 2653, 2653, 2653, 2653, 2653, 2653, 2653,
	2653, 2653, 3649, 2653, 3647, 2043, 1371, 2041, 3331, 2037,
	3659, 2028, 3539, 1961, 3765, 3125, 4711, 2078, 3670, 1228,
	1207, 3635, 3636, 3675, 3731, 3099, 3475, 1227, 1227, 3682,
	3593, 2178, 3752, 1754, 3666, 3668, 3669, 3097, 3690, 3586,
	4181, 3689, 3691, 1003, 1005, 1007, 1208, 2369, 4596, 4219,
	4212, 4211, 4140, 3695, 4061, 1110, 3773, 3774, 3697, 4182,
	3038, 2097, 1527, 4394, 2837, 4387, 2812, 2812, 3723, 3936,
	2124, 3786, 3787, 2301, 3789, 1110, 3732, 2246, 3738, 176,
	3381, 2810, 2834, 1288, 1230, 1230, 3724, 1718, 1719, 2335,
	1289, 2330, 4595, 2367, 1983, 2308, 4103, 4135, 1761, 1762,
	1646, 1761, 1762, 4429, 4034, 4012, 3743, 3744, 1110, 1110,
	3126, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707,
	3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717,
	3718, 1764, 3722, 3740, 3741, 1226, 1226, 3588, 1118, 2368,
	1983, 1983, 3403, 1755, 3476, 3754, 2840, 4714, 2841, 2863,
	1110, 1758, 3587, 1322, 1256, 3755, 1209, 4705, 3859, 4667,
	2957, 256, 1289, 1763, 3912, 2337, 1763, 2230, 1289, 1983,
	1983, 1333, 2902, 3782, 1313, 2900, 2909, 1313, 2841, 2889,
	3858, 3832, 2891, 2845, 263, 263, 263, 2843, 681, 682,
	4545, 697, 681, 697, 707, 2890, 2844, 747, 4511, 4505,
	1989, 765, 1983, 3837, 3839, 4458, 771, 1986, 675, 4378,
	4354, 4278, 3922, 263, 3803, 3914, 3901, 3836, 3762, 3528,
	3853, 3002, 2676, 3855, 3861, 2063, 1970, 4752, 4296, 3329,
	4588, 1313, 4783, 880, 3824, 4589, 4507, 1110, 3829, 263,
	1494, 3584, 3222, 3223, 4004, 1232, 1110, 3876, 3878, 3938,
	1761, 1762, 2558, 1986, 1986, 4726, 1313, 1313, 1313, 3945,
	3008, 2858, 4588, 2804, 2805, 3929, 3790, 4589, 2802, 2803,
	3791, 1633, 3778, 1313, 2804, 2802, 3891, 1632, 3908, 2591,
	3921, 1701, 1986, 1986, 1700, 4379, 4330, 3037, 4137, 1313,
	3930, 3933, 4132, 4131, 3870, 1371, 4000, 3777, 1977, 1227,
	3881, 3671, 3469, 3890, 1228, 1228, 3466, 3880, 1853, 1852,
	4769, 3820, 4733, 3822, 4549, 1986, 4548, 3909, 3913, 4547,
	1371, 4486, 4485, 1110, 1110, 4445, 3961, 4357, 4324, 1110,
	1110, 1989, 4275, 3932, 1110, 1110, 4272, 1110, 4270, 4169,
	4155, 4101, 1110, 4056, 1977, 1977, 3960, 3942, 1952, 3896,
	3916, 3817, 1298, 1110, 3810, 3532, 1230, 3594, 3589, 3590,
	3591, 3592, 3531, 2025, 681, 681, 3397, 3347, 3079, 1110,
	3872, 3931, 263, 1977, 1977, 3934, 3412, 3413, 3939, 3414,
	3415, 3416, 3967, 3969, 3862, 3944, 3060, 3895, 3985, 3940,
	3959, 3952, 3871, 3955, 1588, 3950, 3951, 3956, 3059, 3058,
	1463, 3057, 3968, 1474, 1298, 3958, 1977, 1226, 2986, 2959,
	3998, 2835, 3918, 2772, 2767, 3986, 2756, 2755, 2744, 2487,
	2360, 2336, 3454, 3455, 3979, 3456, 3457, 3458, 3994, 2329,
	1232, 2328, 2327, 2326, 2325, 2244, 2218, 2214, 1232, 2213,
	2212, 2211, 1371, 2210, 1371, 1839, 2031, 2030, 2029, 1844,
	2027, 1232, 2414, 3683, 1960, 1717, 1983, 3949, 1716, 1656,
	1541, 1540, 1313, 1313, 1539, 1538, 1537, 1536, 1535, 1298,
	1298, 2099, 1371, 1530, 1526, 4039, 1524, 1523, 1479, 1478,
	1477, 2414, 3698, 1362, 1227, 1361, 1360, 1359, 1358, 1326,
	1325, 1275, 1227, 1274, 1273, 1272, 3974, 1232, 1271, 1232,
	1270, 1269, 4062, 4063, 1267, 1227, 1262, 1261, 1260, 1259,
	1258, 1190, 4024, 2068, 3727, 873, 8, 1009, 995, 4463,
	4083, 1313, 2356, 92, 4092, 1532, 4104, 835, 86, 2176,
	3816, 1371, 2941, 1313, 2187, 4661, 1313, 4042, 3490, 4093,
	3313, 1230, 3489, 965, 4585, 4031, 1516, 1371, 176, 1230,
	4038, 1227, 4490, 1227, 843, 4106, 4107, 4041, 4045, 4036,
	4037, 4567, 1230, 4035, 4046, 3910, 4066, 4049, 3399, 1986,
	4136, 4040, 4138, 2912, 2310, 4105, 1228, 1657, 2312, 3308,
	2718, 4537, 4008, 1313, 1313, 3184, 4089, 1983, 4089, 4054,
	4436, 4246, 1226, 2561, 4068, 1857, 3265, 88, 1094, 1140,
	1226, 4165, 4060, 1313, 4164, 4070, 4159, 3802, 1230, 3027,
	1230, 2200, 4162, 1226, 4161, 1371, 4125, 1974, 1976, 1058,
	1313, 1374, 4607, 2079, 1100, 4139, 2095, 2088, 4156, 2757,
	2635, 1117, 1114, 1978, 1980, 1116, 4153, 4109, 1115, 1979,
	4123, 1876, 4130, 1113, 1973, 1232, 3920, 3006, 3558, 1582,
	4118, 4187, 1580, 4121, 4198, 1313, 1313, 1313, 4147, 1226,
	1977, 1226, 967, 2083, 2481, 2545, 3173, 4152, 1371, 1850,
	4215, 1074, 1096, 2542, 1251, 1085, 1073, 3291, 4154, 4199,
	1110, 1110, 1110, 3270, 3545, 3761, 2393, 4218, 853, 3219,
	2548, 1242, 4160, 2659, 2651, 2647, 3357, 2996, 1371, 1227,
	1986, 1731, 4260, 1110, 1828, 4202, 1110, 1110, 4175, 3007,
	4193, 1356, 4184, 1078, 2479, 1841, 1110, 3151, 2403, 1989,
	2195, 3552, 3311, 2750, 1110, 1110, 4120, 4592, 4200, 4207,
	3679, 3085, 2222, 1206, 4089, 1205, 4110, 1249, 1204, 1371,
	4573, 1313, 4222, 4570, 2166, 3953, 4238, 3507, 4119, 2071,
	4224, 4122, 2796, 2491, 3515, 4226, 1230, 1090, 4221, 1473,
	2353, 1228, 3276, 3577, 1371, 1543, 770, 4233, 3381, 1228,
	4303, 1102, 1110, 1813, 4227, 2933, 2932, 4455, 1342, 1340,
	1339, 1110, 1228, 2653, 1338, 4740, 4806, 3812, 3811, 1110,
	230, 1977, 4243, 1989, 3119, 4249, 1752, 1744, 4186, 227,
	229, 228, 1110, 4170, 3766, 1110, 3317, 1226, 4665, 3834,
	3499, 23, 22, 21, 112, 42, 4255, 20, 4183, 1110,
	4266, 4267, 1244, 150, 128, 4281, 1371, 147, 1228, 146,
	1228, 4306, 120, 1313, 145, 144, 143, 142, 149, 2653,
	141, 1313, 1313, 4269, 140, 135, 139, 4282, 138, 137,
	136, 134, 132, 4289, 133, 1264, 127, 131, 1474, 130,
	129, 126, 125, 124, 4280, 123, 122, 263, 121, 263,
	263, 119, 1293, 263, 1303, 118, 4347, 2417, 4335, 117,
	116, 3509, 115, 4323, 114, 1323, 1371, 4369, 113, 1313,
	4360, 761, 4326, 758, 765, 61, 60, 111, 110, 4325,
	19, 40, 2025, 2025, 14, 1474, 65, 1232, 1232, 4332,
	66, 4321, 4252, 18, 13, 35, 91, 102, 263, 4377,
	263, 263, 1293, 4388, 263, 263, 101, 1110, 1110, 1303,
	4350, 4353, 4412, 4413, 4393, 4358, 4352, 4349, 36, 4373,
	99, 263, 98, 1496, 1110, 1989, 4368, 4391, 4389, 2025,
	4337, 34, 17, 16, 15, 96, 95, 33, 31, 11,
	9, 1227, 1227, 37, 1520, 1937, 12, 5, 4292, 181,
	2559, 4390, 180, 183, 4395, 1983, 1228, 179, 4396, 4410,
	4202, 4385, 1110, 1545, 182, 1110, 1303, 90, 2025, 178,
	263, 263, 1232, 1293, 177, 89, 4089, 4089, 29, 10,
	4425, 4426, 173, 4444, 4327, 1232, 4446, 4370, 3906, 4451,
	2025, 2653, 2025, 4424, 765, 81, 263, 263, 1230, 1230,
	175, 4315, 4316, 174, 172, 171, 4339, 170, 82, 79,
	4474, 169, 85, 168, 80, 84, 83, 4428, 27, 880,
	2025, 6, 4434, 4450, 2025, 4447, 1227, 2114, 4338, 1983,
	64, 4331, 4473, 4333, 7, 4334, 4228, 1110, 1110, 1227,
	3600, 3917, 4467, 4468, 105, 2728, 106, 1110, 38, 1226,
	1226, 77, 1232, 76, 75, 1232, 26, 4494, 63, 1313,
	25, 4089, 167, 214, 213, 4481, 212, 211, 1986, 1313,
	1313, 210, 209, 208, 4089, 4483, 207, 4514, 202, 4397,
	4516, 201, 206, 1230, 4488, 204, 1313, 203, 205, 4416,
	4528, 200, 217, 216, 263, 222, 1230, 221, 220, 219,
	1110, 1110, 4501, 4506, 218, 4508, 1227, 4509, 4513, 1227,
	1110, 4522, 3970, 4373, 263, 4502, 4503, 215, 4521, 224,
	4433, 4525, 4526, 4527, 199, 198, 197, 195, 4524, 191,
	4533, 190, 4534, 194, 1226, 4560, 196, 193, 192, 4531,
	189, 4089, 1986, 4564, 4089, 4532, 223, 1226, 1110, 1110,
	2234, 1110, 72, 4542, 165, 166, 4546, 71, 2485, 1977,
	164, 163, 162, 1230, 161, 160, 1230, 159, 158, 70,
	24, 2, 1, 4541, 1839, 0, 0, 0, 0, 0,
	0, 1983, 0, 4594, 0, 4590, 0, 0, 0, 4563,
	4562, 0, 2807, 0, 4582, 0, 0, 4583, 0, 0,
	4612, 0, 4581, 4587, 4572, 4575, 0, 0, 4616, 1110,
	1110, 1110, 0, 4615, 1226, 0, 0, 1226, 1228, 1228,
	0, 4576, 4597, 0, 4580, 0, 4610, 4577, 2658, 0,
	0, 4603, 4482, 1977, 0, 0, 4611, 0, 0, 1110,
	0, 0, 4645, 0, 0, 0, 0, 0, 4650, 0,
	4632, 0, 0, 4631, 4629, 4630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4675, 4646, 0, 0, 0, 0, 0, 0, 0, 4648,
	0, 4677, 0, 0, 4668, 0, 0, 0, 4689, 4679,
	0, 4691, 0, 0, 1986, 4664, 1110, 0, 0, 0,
	0, 4690, 0, 1228, 0, 0, 4676, 0, 0, 4696,
	0, 2354, 4685, 4683, 0, 681, 1228, 4684, 0, 0,
	0, 0, 0, 4716, 0, 0, 4712, 0, 0, 4702,
	4703, 0, 0, 0, 4708, 4706, 263, 4704, 263, 0,
	0, 4313, 263, 4715, 0, 0, 4719, 2114, 0, 1232,
	4717, 1232, 4738, 0, 0, 1496, 1293, 263, 4594, 263,
	0, 0, 4736, 4746, 4730, 263, 1496, 697, 4747, 0,
	4735, 4745, 263, 1496, 4737, 4742, 4739, 4494, 4734, 4725,
	0, 4572, 0, 1228, 4575, 1977, 1228, 2032, 0, 4760,
	0, 0, 0, 4741, 0, 0, 0, 0, 0, 263,
	4759, 4762, 0, 1227, 0, 1227, 263, 0, 0, 4771,
	0, 0, 0, 0, 4168, 0, 0, 0, 0, 4777,
	4773, 0, 0, 1110, 1110, 0, 4770, 4185, 4778, 0,
	4775, 0, 1110, 4766, 1110, 1110, 4781, 1307, 4089, 4768,
	4089, 0, 4791, 4787, 0, 0, 765, 4797, 0, 0,
	4206, 4796, 4802, 4795, 4801, 0, 4800, 0, 4799, 4798,
	1230, 0, 1230, 3008, 4794, 0, 0, 4805, 0, 4810,
	0, 4813, 4809, 0, 4812, 4817, 0, 4814, 4660, 4815,
	4663, 4811, 4687, 4688, 4821, 0, 0, 4820, 4693, 0,
	0, 0, 1482, 0, 1110, 4822, 4825, 0, 4827, 0,
	0, 4817, 4828, 4824, 4830, 4831, 0, 4788, 4789, 0,
	0, 1226, 0, 1226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 0, 0, 0, 0, 4826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	0, 0, 0, 0, 2928, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 157, 0, 0, 0, 2025,
	0, 0, 0, 73, 263, 46, 45, 0, 263, 0,
	0, 1298, 0, 0, 0, 0, 0, 2920, 2918, 0,
	74, 0, 0, 152, 2922, 2924, 2914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 67, 1298, 1298,
	0, 0, 0, 0, 48, 0, 154, 0, 0, 0,
	0, 263, 0, 4790, 0, 263, 0, 0, 0, 0,
	0, 263, 0, 0, 47, 0, 87, 263, 0, 0,
	1228, 0, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 263, 0, 0, 0, 681,
	0, 263, 50, 68, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 765, 0, 0, 57, 880, 0, 0,
	155, 0, 0, 0, 0, 2658, 0, 0, 49, 0,
	107, 0, 0, 1761, 1762, 93, 104, 0, 0, 0,
	1463, 0, 263, 0, 1293, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 765,
	0, 0, 0, 1764, 0, 0, 263, 1474, 0, 0,
	0, 0, 0, 2309, 0, 3277, 52, 0, 263, 263,
	0, 263, 0, 263, 0, 263, 0, 263, 0, 1817,
	0, 0, 0, 0, 94, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 2916, 2658, 2658, 3303, 0,
	0, 0, 2345, 0, 0, 2346, 2930, 2347, 0, 0,
	0, 0, 0, 3316, 0, 0, 0, 0, 0, 263,
	263, 263, 263, 0, 0, 0, 0, 2929, 2921, 2919,
	2923, 2925, 2915, 2917, 2931, 0, 0, 3335, 0, 0,
	0, 0, 2927, 0, 0, 747, 0, 0, 0, 765,
	0, 0, 0, 0, 0, 0, 0, 4492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2934, 0, 0, 0, 0,
	0, 4512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 1474, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 2025, 0, 0, 0, 0, 0, 0,
	1791, 1793, 2493, 0, 0, 2025, 53, 0, 2025, 0,
	1474, 0, 1474, 0, 0, 0, 0, 0, 0, 0,
	56, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 0, 1761, 1762, 69, 0, 2658, 2658, 2658, 2658,
	58, 184, 100, 0, 103, 0, 0, 0, 54, 0,
	0, 0, 156, 0, 0, 1792, 0, 0, 0, 1784,
	55, 0, 1764, 0, 0, 0, 0, 0, 4598, 0,
	231, 0, 681, 0, 4600, 2025, 0, 0, 62, 0,
	0, 0, 0, 148, 0, 1761, 1762, 263, 1817, 0,
	0, 0, 0, 0, 3316, 0, 681, 1763, 153, 0,
	1761, 1762, 0, 263, 0, 681, 0, 1783, 1792, 0,
	0, 2935, 0, 0, 0, 1764, 1780, 263, 233, 0,
	2926, 0, 0, 1792, 3222, 3223, 0, 3240, 3241, 3242,
	1764, 1814, 0, 263, 1303, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 151, 0, 3990, 0, 0, 0,
	1763, 0, 0, 0, 0, 0, 1817, 0, 0, 188,
	1783, 0, 0, 0, 0, 1763, 0, 232, 0, 1780,
	3638, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	225, 0, 263, 1303, 1780, 0, 0, 697, 0, 226,
	0, 1786, 1787, 1788, 1789, 0, 0, 2771, 0, 3237,
	0, 1769, 0, 263, 0, 1785, 263, 0, 0, 0,
	263, 187, 263, 0, 3, 0, 0, 1293, 0, 263,
	263, 0, 1303, 1303, 2787, 0, 0, 0, 0, 263,
	0, 1468, 0, 0, 1369, 0, 0, 0, 3633, 0,
	0, 0, 0, 0, 1786, 1787, 1788, 1789, 0, 1791,
	1793, 0, 0, 0, 1769, 0, 0, 0, 0, 1786,
	1787, 1788, 1789, 1816, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 2824, 1778, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 3228, 0, 0, 0, 0, 263, 0,
	0, 0, 1791, 1793, 0, 2025, 0, 0, 1784, 0,
	3656, 263, 0, 0, 0, 0, 0, 1791, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 3672, 1778, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 1778, 1779, 0, 2264, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 3244, 0,
	0, 1784, 1307, 2278, 0, 0, 0, 263, 2949, 0,
	0, 0, 0, 2280, 0, 0, 1784, 0, 0, 0,
	1814, 0, 0, 0, 0, 2288, 0, 2291, 2292, 2293,
	0, 0, 1496, 0, 0, 263, 0, 263, 0, 0,
	3238, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2824, 0, 681, 0, 1474, 1474,
	0, 0, 1790, 1814, 0, 3020, 880, 0, 2824, 2824,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 1785, 263, 0, 0, 0, 3764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 263, 1293, 263, 0, 0, 0,
	1496, 0, 1496, 1303, 263, 1790, 0, 1293, 0, 1293,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 1474, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 1816, 0, 0, 0, 2658, 2658, 0, 0,
	0, 0, 1785, 0, 0, 0, 2234, 0, 0, 0,
	263, 263, 263, 263, 1293, 0, 0, 1293, 0, 263,
	0, 0, 263, 0, 0, 0, 3239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	1816, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1777, 265, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 2658, 2658, 2658, 2658,
	2658, 2658, 2658, 2658, 2658, 2658, 2658, 2658, 2658, 2658,
	2658, 2658, 2658, 2658, 2658, 2658, 0, 2658, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1777, 0, 1774,
	1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0,
	0, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767,
	1768, 1770, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 3234, 3235, 3236, 0, 0, 0, 0, 3233, 3231,
	3232, 3224, 3225, 3226, 3227, 3229, 3230, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 0, 0, 1474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 0, 0, 0, 0, 0, 0, 1761, 1762,
	0, 87, 0, 0, 0, 1798, 1792, 0, 0, 0,
	0, 0, 0, 1764, 1072, 0, 0, 0, 0, 0,
	0, 1792, 1811, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 2788, 1307, 1817,
	0, 874, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 49, 1817, 107, 0, 0, 1783, 0,
	93, 104, 0, 1763, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 3222, 3223,
	681, 3240, 3241, 3242, 0, 681, 0, 0, 681, 0,
	0, 681, 681, 0, 0, 0, 0, 681, 0, 94,
	3644, 0, 0, 0, 0, 263, 0, 4044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 4058, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 2936, 0, 1769, 0, 0,
	0, 0, 0, 3237, 0, 263, 0, 0, 0, 263,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1791, 1793, 0, 0, 0, 0, 0, 0, 2824, 2824,
	263, 0, 3372, 0, 0, 1791, 1793, 1808, 2824, 1809,
	0, 3383, 0, 0, 0, 0, 1778, 1779, 0, 2824,
	3383, 0, 2824, 3383, 0, 0, 3383, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 263, 263, 3372, 0, 263, 0, 0, 0, 1784,
	0, 0, 0, 0, 97, 0, 0, 3228, 0, 0,
	0, 3053, 0, 0, 1784, 3372, 0, 263, 0, 3444,
	3444, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2824,
	0, 2824, 1810, 3470, 2824, 3372, 0, 0, 2824, 3372,
	0, 1761, 1762, 0, 0, 0, 184, 100, 0, 103,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 3244, 0, 1792, 0, 0, 0, 0, 263,
	0, 1764, 1496, 1298, 0, 231, 1814, 0, 0, 0,
	0, 1369, 0, 875, 0, 0, 263, 3503, 148, 0,
	3505, 2824, 0, 0, 263, 0, 0, 1817, 263, 0,
	0, 1303, 0, 0, 3238, 0, 1763, 0, 0, 0,
	0, 4244, 0, 1790, 0, 0, 263, 0, 0, 0,
	0, 2991, 0, 233, 1293, 0, 263, 0, 73, 2824,
	0, 681, 2234, 0, 0, 1785, 0, 0, 2824, 0,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 151,
	1785, 0, 4244, 0, 0, 0, 0, 0, 0, 263,
	2991, 78, 1803, 2991, 188, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 1814, 2417, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 1816, 226, 3605, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 1816, 0,
	1769, 0, 3611, 0, 0, 1496, 187, 1293, 263, 0,
	263, 0, 0, 0, 0, 0, 1293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2417,
	0, 874, 0, 0, 0, 0, 0, 0, 0, 0,
	3239, 0, 0, 0, 0, 107, 263, 0, 1791, 1793,
	93, 104, 0, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 73,
	4017, 0, 0, 0, 4016, 1765, 1766, 1767, 1768, 1770,
	1771, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 778, 0, 3677, 0, 1072, 1784, 0, 94,
	1072, 0, 78, 0, 0, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 0, 1455, 789, 0, 0,
	1455, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 87, 0, 0, 1811, 0, 2658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 3234, 3235, 3236, 0, 1814,
	0, 1763, 3233, 3231, 3232, 3224, 3225, 3226, 3227, 3229,
	3230, 1783, 874, 0, 0, 0, 0, 0, 0, 0,
	1780, 263, 263, 0, 49, 0, 107, 0, 0, 1761,
	1762, 93, 104, 2658, 0, 0, 0, 0, 0, 0,
	783, 0, 0, 681, 681, 0, 793, 0, 0, 0,
	0, 0, 1792, 0, 2747, 0, 0, 0, 0, 1764,
	788, 0, 0, 0, 2234, 1496, 1496, 0, 0, 0,
	0, 0, 0, 1785, 97, 0, 0, 0, 0, 0,
	1496, 1496, 0, 1496, 1298, 1817, 0, 0, 0, 0,
	94, 0, 0, 0, 1763, 1786, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 787, 0,
	1761, 1762, 0, 0, 0, 0, 1805, 1806, 1807, 0,
	0, 0, 0, 0, 0, 742, 184, 100, 0, 103,
	0, 1816, 0, 1792, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 1802, 0, 0, 1812, 0, 0, 1811,
	785, 0, 0, 1791, 1793, 231, 0, 0, 765, 0,
	0, 0, 0, 875, 0, 0, 1817, 0, 148, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 1778,
	1779, 0, 0, 0, 1797, 1783, 0, 0, 0, 0,
	0, 3444, 0, 0, 1780, 0, 0, 1800, 1769, 0,
	0, 0, 0, 233, 263, 2658, 0, 0, 0, 792,
	0, 0, 1784, 0, 0, 0, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 3372, 0, 263, 0, 0, 151,
	697, 697, 1303, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 263, 188, 0, 1791, 1793, 0, 0,
	0, 0, 232, 263, 0, 3481, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 225, 0, 0, 263, 1786,
	1787, 1788, 1789, 263, 226, 0, 0, 0, 0, 1769,
	0, 0, 780, 0, 1814, 0, 0, 184, 100, 3519,
	103, 0, 2824, 263, 0, 0, 187, 0, 0, 0,
	0, 3527, 3020, 3020, 0, 1784, 0, 0, 880, 880,
	2824, 0, 784, 0, 2991, 2991, 231, 1802, 880, 2824,
	1812, 0, 0, 0, 875, 0, 0, 1791, 1793, 148,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 263, 0, 3568, 3569, 0, 741, 0, 0, 0,
	0, 0, 0, 1778, 1779, 0, 0, 0, 1785, 0,
	0, 790, 0, 0, 233, 0, 0, 782, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 1814, 0, 0,
	0, 0, 0, 0, 0, 1803, 1784, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1455, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 232, 779, 4009, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 786, 0, 0, 1797, 0, 0, 0, 0,
	0, 1785, 0, 1474, 0, 0, 743, 1593, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 1496, 0, 263, 0, 1801, 0,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 263,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 1816,
	1790, 0, 0, 0, 1303, 0, 0, 1072, 0, 0,
	0, 0, 0, 1455, 0, 0, 0, 1303, 0, 0,
	0, 0, 1785, 0, 2824, 2824, 0, 3444, 2824, 0,
	0, 0, 0, 0, 0, 4091, 0, 4091, 1496, 0,
	0, 0, 0, 0, 1298, 0, 0, 0, 2824, 1803,
	3383, 0, 0, 0, 1496, 1496, 263, 3372, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3372, 0, 263, 3372, 0, 263, 0, 3444, 0, 0,
	1816, 0, 0, 0, 0, 1773, 1765, 1766, 1767, 1768,
	1770, 1771, 2824, 0, 2824, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 1797, 2824, 0,
	0, 0, 0, 4172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 1801, 1455, 263, 0, 0, 0, 0, 73,
	1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767,
	1768, 1770, 1771, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 4091, 0, 0, 1496, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 87, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 49, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 3868, 0, 74, 0, 2824, 1797,
	3383, 0, 0, 4284, 0, 1797, 0, 0, 0, 0,
	0, 263, 78, 0, 0, 0, 0, 0, 4304, 0,
	4304, 3222, 3223, 0, 3240, 3241, 3242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1915, 0, 765, 3643, 0, 0, 0, 0, 0, 0,
	94, 0, 87, 3444, 0, 1293, 0, 0, 0, 3222,
	3223, 0, 3240, 3241, 3242, 0, 0, 0, 0, 0,
	3372, 0, 263, 0, 0, 0, 3946, 3947, 3948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 874, 1307, 0, 4284, 3237, 0, 0, 0,
	0, 1761, 1762, 2824, 0, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 0, 0, 0, 0, 0, 1455,
	0, 4382, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 1764, 0, 1496, 3237, 1797, 1797, 1797, 1797, 1797,
	1797, 1797, 1797, 0, 0, 4091, 4091, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 1817, 0, 0,
	0, 0, 0, 263, 263, 0, 1763, 0, 1797, 0,
	94, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 3677, 0, 0,
	3228, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 1496, 3444, 4449, 0, 0,
	0, 0, 1455, 2657, 4284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 3228, 1057,
	4091, 0, 1797, 0, 0, 0, 0, 0, 0, 3632,
	0, 0, 0, 4091, 0, 0, 0, 184, 100, 0,
	103, 0, 0, 3222, 3223, 3244, 3240, 3241, 3242, 0,
	1786, 1787, 1788, 1789, 0, 263, 0, 0, 0, 3245,
	1769, 0, 0, 0, 0, 0, 231, 697, 0, 0,
	0, 1455, 4051, 4052, 875, 0, 0, 0, 0, 148,
	0, 0, 0, 3244, 4172, 0, 0, 3238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1455, 0, 0,
	4091, 0, 263, 4091, 0, 97, 0, 0, 1791, 1793,
	0, 0, 0, 3383, 233, 0, 0, 0, 3237, 0,
	0, 0, 0, 0, 0, 3238, 0, 0, 0, 0,
	0, 0, 0, 0, 1778, 1779, 0, 0, 0, 1496,
	151, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 184, 100, 1814,
	103, 0, 0, 232, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 4556, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 231, 0, 4304, 0,
	0, 263, 0, 1307, 875, 0, 0, 1814, 0, 148,
	0, 0, 0, 1496, 0, 0, 1496, 1591, 0, 0,
	0, 0, 3228, 0, 0, 2824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3239, 233, 0, 263, 0, 0, 1814,
	0, 0, 0, 0, 1455, 0, 0, 0, 2628, 2629,
	2630, 2631, 2624, 2625, 2626, 2627, 0, 0, 0, 0,
	151, 0, 0, 3677, 0, 4223, 0, 4225, 0, 0,
	0, 3239, 0, 0, 0, 188, 0, 3244, 0, 0,
	1496, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	263, 0, 0, 1785, 0, 0, 1455, 0, 0, 3238,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	2604, 2605, 2606, 2607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4271, 4284, 2616, 2617, 2618, 2619, 2612, 2613, 2614,
	2615, 2620, 2621, 2622, 2623, 0, 0, 0, 3234, 3235,
	3236, 1816, 0, 0, 0, 3233, 3231, 3232, 3224, 3225,
	3226, 3227, 3229, 3230, 0, 0, 0, 0, 0, 0,
	2824, 1814, 0, 0, 0, 0, 0, 4091, 0, 4091,
	0, 0, 1496, 0, 0, 0, 3234, 3235, 3236, 0,
	0, 0, 0, 3233, 3231, 3232, 3224, 3225, 3226, 3227,
	3229, 3230, 0, 0, 0, 0, 0, 2600, 2601, 2602,
	2603, 2608, 2609, 2610, 2611, 0, 0, 0, 0, 0,
	1797, 0, 1496, 0, 0, 0, 0, 0, 1496, 0,
	0, 4351, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 3239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3020, 0, 0, 0,
	0, 0, 0, 0, 0, 2824, 0, 0, 0, 1797,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 3020, 0, 0, 0, 3222, 3223, 1797, 3240, 3241,
	3242, 0, 0, 0, 0, 0, 1797, 1797, 1797, 1797,
	1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797,
	1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797,
	1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797,
	1797, 1797, 0, 0, 0, 0, 0, 1797, 1318, 1797,
	1797, 1797, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 2657, 2657, 0, 0, 0, 0, 0, 0, 0,
	3237, 1057, 0, 0, 0, 1057, 1797, 0, 0, 0,
	3234, 3235, 3236, 0, 0, 0, 0, 3233, 3231, 3232,
	3224, 3225, 3226, 3227, 3229, 3230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 1504, 1797, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	1797, 0, 0, 1797, 3228, 0, 1797, 0, 0, 0,
	1797, 1797, 1797, 1797, 1797, 1797, 1797, 0, 0, 1307,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 1307, 1604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 3243,
	0, 2657, 2657, 2657, 2657, 0, 0, 0, 1797, 0,
	1797, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3238, 0, 0, 1682, 0, 0, 1688, 0, 0,
	0, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 1455, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	1455, 0, 0, 1814, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 1455, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 3239, 1072, 3137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1072, 0, 0, 0, 0, 0, 0, 0,
	1786, 1787, 1788, 1789, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1142, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1792, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 1791, 1793,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1909, 1909, 1909, 1817, 0,
	0, 0, 1455, 0, 1778, 1779, 0, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 1797,
	1797, 0, 1797, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 3234, 3235, 3236, 0, 0, 1784, 0, 3233,
	3231, 3232, 3224, 3225, 3226, 3227, 3229, 3230, 0, 0,
	0, 0, 0, 0, 0, 0, 1455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 1787, 1788, 1789, 0, 0, 0, 0, 1814,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 1797, 0, 0, 0, 1802,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 1791,
	1793, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 1808, 0, 1809, 0,
	0, 0, 0, 1785, 0, 1778, 1779, 0, 0, 0,
	0, 0, 0, 1455, 0, 0, 1455, 0, 1797, 1797,
	0, 2657, 2657, 1800, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3243, 3243, 0, 1784, 1797,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1455, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1455,
	1814, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657,
	2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657,
	2657, 0, 2657, 3243, 3243, 3243, 3243, 0, 0, 0,
	0, 0, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1455, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 2333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0, 3197,
	0, 0, 0, 3198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2392, 0, 2396, 0, 0, 0, 0, 0, 0, 2410,
	0, 0, 0, 0, 0, 0, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 0, 2460, 0, 2462, 2463, 2464, 2465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 2540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2570, 2573, 2576, 2579, 0, 2583, 2584,
	2585, 2586, 2587, 2588, 2589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 2649, 0, 2661, 2663,
	2668, 0, 0, 0, 0, 0, 0, 1797, 1797, 0,
	0, 1797, 3243, 3243, 1797, 0, 0, 0, 1797, 0,
	1455, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 1233, 0, 0, 0, 1233, 0, 1797, 0,
	0, 0, 0, 1233, 0, 1455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1797, 1797, 1797, 1797, 0, 0, 0, 0,
	0, 1797, 0, 1797, 0, 1233, 3243, 3243, 3243, 3243,
	3243, 3243, 3243, 3243, 3243, 3243, 3243, 3243, 3243, 3243,
	3243, 3243, 3243, 3243, 3243, 3243, 0, 0, 0, 3243,
	0, 1233, 1797, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 1233, 0, 1797, 0, 0, 0, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1455, 0, 1455,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 1455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 0, 0, 0, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 710, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2952, 2953, 0, 2955, 0, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 733, 0, 0, 0,
	1455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 1797, 1797, 0, 0, 0, 1797,
	1797, 0, 0, 1797, 1797, 0, 0, 0, 1797, 716,
	0, 0, 1797, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 1455, 0, 0, 0, 0, 0, 0,
	0, 717, 2657, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 742, 0, 1455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2657, 0,
	0, 0, 0, 0, 1455, 0, 0, 0, 0, 1233,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 1455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 1819, 0, 0, 1990, 729, 0, 0, 1233, 0,
	0, 0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796,
	1805, 1806, 1807, 0, 0, 0, 0, 0, 0, 0,
	1072, 0, 0, 0, 0, 0, 1798, 1792, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 1455, 0, 1811, 0, 0, 3131, 3132, 0, 0,
	0, 0, 3138, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 739, 1233, 720, 0, 0, 0, 1763,
	0, 3152, 3153, 0, 0, 1233, 0, 2540, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 740, 0, 721, 0, 0, 0, 1233,
	0, 1455, 0, 0, 0, 0, 1797, 1797, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1797, 3243,
	2657, 0, 3162, 0, 0, 0, 1797, 0, 0, 1797,
	0, 0, 741, 0, 0, 0, 0, 0, 3176, 0,
	722, 0, 0, 0, 0, 737, 738, 735, 0, 0,
	0, 0, 0, 730, 0, 3188, 723, 0, 0, 3243,
	0, 0, 0, 1786, 1787, 1788, 1789, 0, 0, 0,
	0, 0, 1797, 1769, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 724, 0,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 725,
	0, 1802, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 1791, 1793, 726, 0, 0, 0, 0, 734, 1233,
	1233, 0, 0, 0, 0, 0, 0, 0, 1808, 1233,
	1809, 0, 743, 0, 0, 0, 0, 1778, 1779, 0,
	0, 0, 0, 728, 0, 2668, 2668, 2668, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	1909, 0, 1072, 1072, 0, 0, 0, 0, 3281, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	3243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 711, 0,
	0, 1797, 0, 1810, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 1233, 0, 1233, 0, 1233, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1233, 1233, 0, 0, 712, 0, 0,
	0, 0, 0, 0, 1233, 0, 0, 0, 713, 0,
	0, 0, 0, 0, 0, 0, 1233, 1797, 1233, 1233,
	1233, 0, 0, 1057, 1072, 0, 0, 0, 0, 714,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1106, 0, 0, 1785, 0, 0, 0,
	3402, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	262, 262, 0, 0, 0, 0, 717, 0, 0, 718,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 742, 0, 806, 0,
	0, 0, 0, 1990, 1990, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 732, 0, 0, 806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0,
	729, 2536, 0, 0, 0, 2537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1792, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 1797,
	720, 1811, 0, 1797, 0, 0, 0, 1229, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 1233, 1817, 0,
	0, 0, 0, 0, 0, 0, 1233, 1763, 740, 0,
	721, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 1233, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2410, 0, 0, 741, 0, 0,
	3630, 3631, 0, 0, 3634, 722, 0, 0, 3637, 0,
	737, 738, 735, 0, 0, 0, 0, 3641, 730, 0,
	0, 723, 0, 0, 0, 0, 3648, 0, 0, 0,
	0, 3281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3661, 0, 0, 0,
	0, 1786, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 1769, 0, 724, 0, 731, 3684, 3685, 0, 3686,
	3687, 3688, 0, 0, 725, 0, 0, 0, 1233, 1233,
	0, 0, 0, 0, 0, 0, 0, 3694, 726, 0,
	0, 3696, 0, 734, 0, 0, 0, 0, 0, 1802,
	0, 0, 1812, 0, 0, 0, 0, 743, 0, 1791,
	1793, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	1233, 0, 0, 0, 3725, 3726, 1808, 0, 1809, 0,
	0, 0, 0, 0, 0, 1778, 1779, 0, 0, 0,
	0, 0, 3737, 0, 1761, 1762, 0, 0, 0, 0,
	0, 0, 0, 1800, 1990, 0, 0, 3746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 1784, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 1233, 0, 0, 1763,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 1799,
	0, 0, 0, 0, 0, 3794, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 0, 0, 3805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3130, 1233, 0, 0, 0, 0, 0, 3833,
	0, 0, 1790, 0, 0, 1233, 0, 1233, 0, 0,
	0, 0, 0, 1786, 1787, 1788, 1789, 0, 0, 0,
	0, 0, 1233, 1769, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1909, 0, 0,
	1784, 0, 0, 0, 0, 0, 3941, 0, 0, 0,
	0, 0, 262, 0, 262, 262, 0, 0, 262, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 3646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 262, 262, 0, 0, 262,
	262, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3987, 3988, 0, 806, 0, 0, 3992,
	3993, 0, 0, 0, 3996, 3997, 0, 0, 0, 0,
	0, 0, 4001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 4010,
	0, 0, 0, 0, 0, 262, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807,
	0, 262, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1792, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 1233, 1233, 0, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 1787, 1788, 1789, 0, 0, 1233, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1233, 0, 0, 1802, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 1791, 1793,
	0, 1233, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 0, 1809, 0, 0,
	0, 0, 0, 0, 1778, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 1233, 0,
	0, 0, 0, 1990, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4239, 4240, 4241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 0,
	0, 0, 0, 2410, 0, 0, 4250, 4251, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1233,
	0, 1233, 0, 0, 4259, 4262, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 1814,
	0, 1931, 0, 1229, 0, 0, 0, 262, 0, 1233,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 1931, 262, 0, 0, 0, 0, 0,
	806, 0, 0, 0, 0, 0, 1233, 806, 0, 0,
	0, 4305, 0, 0, 0, 0, 1233, 0, 1233, 4312,
	0, 1790, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4319, 0, 262, 1057, 0, 0, 0, 824,
	1233, 262, 0, 1785, 0, 0, 0, 0, 0, 4328,
	0, 0, 1233, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 0, 827, 0, 0, 0, 0, 1233,
	1803, 0, 0, 1095, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 1233, 0, 0, 0, 0,
	0, 1816, 0, 828, 0, 845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	829, 0, 0, 0, 0, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 854, 0, 1233,
	0, 0, 1233, 831, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 852, 1775, 1776,
	1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 0, 0, 0, 0, 0,
	825, 0, 3200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4454, 0, 0, 4457, 0, 0, 0, 1990,
	0, 0, 832, 0, 0, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 856, 1233, 262,
	0, 0, 742, 806, 0, 0, 0, 0, 0, 0,
	1032, 0, 0, 0, 0, 1233, 0, 0, 0, 0,
	0, 1052, 0, 0, 0, 1990, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1057, 1057, 0,
	0, 0, 0, 0, 1990, 1990, 262, 4510, 0, 0,
	262, 0, 0, 0, 0, 0, 262, 1216, 0, 0,
	0, 0, 262, 0, 0, 0, 855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 850, 1990, 262, 0,
	262, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2410, 0, 0, 1233, 1233, 0, 0, 0, 0,
	4262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	262, 0, 0, 0, 0, 834, 0, 1233, 0, 0,
	0, 0, 0, 0, 0, 0, 836, 0, 0, 1057,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 806, 262, 0, 262, 0, 262, 0,
	262, 0, 262, 0, 0, 0, 837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 846, 0, 0, 0, 0, 0, 0, 4628,
	4628, 4628, 0, 741, 262, 262, 262, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 823, 0, 847, 0,
	0, 0, 0, 0, 0, 0, 0, 838, 0, 4649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 1119, 0, 840, 859, 0, 858, 0, 0, 0,
	841, 0, 0, 0, 0, 0, 4628, 0, 0, 0,
	0, 0, 0, 0, 842, 1233, 0, 0, 1233, 851,
	0, 0, 0, 0, 0, 860, 0, 857, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 264, 264, 264,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 1233, 1233, 1233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1233, 0, 1229, 4628, 4782, 0, 1233, 0, 0, 0,
	0, 0, 4786, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1233, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 262, 0, 0, 0, 262, 0, 262, 0, 0,
	0, 0, 0, 0, 262, 262, 0, 0, 0, 0,
	0, 1233, 109, 0, 262, 0, 0, 0, 0, 1233,
	0, 0, 0, 1233, 0, 1233, 0, 0, 0, 0,
	0, 0, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1233, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	1233, 0, 0, 262, 0, 0, 0, 0, 109, 0,
	109, 0, 109, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 0, 1233, 0, 0, 1233, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1052, 109, 109, 0, 0, 0, 0,
	0, 0, 806, 0, 0, 0, 0, 0, 0, 109,
	0, 109, 0, 0, 1233, 1233, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 0, 0, 0, 0, 0,
	262, 0, 806, 0, 1233, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 1233, 1233, 1233, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 1233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 262, 1222, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 258, 258,
	677, 0, 0, 0, 0, 262, 262, 262, 262, 0,
	1233, 0, 1233, 0, 262, 0, 0, 262, 1032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 262, 1837, 0, 0,
	0, 1843, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 0,
	0, 0, 0, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 1233, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 264, 264, 0, 0, 264, 1233, 1316, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 1233,
	0, 1929, 0, 1932, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 1316, 264, 264, 0, 1316, 264, 264, 0,
	0, 0, 0, 1316, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 1316, 0, 264, 264, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 1316, 264,
	264, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 1316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 1798, 1792, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	1229, 0, 1811, 1233, 0, 0, 1233, 0, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1233, 1233, 0, 0, 0, 0, 1316, 0, 1763, 0,
	1931, 0, 0, 0, 0, 0, 0, 1233, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	262, 0, 0, 0, 262, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 262, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 1931, 0, 0,
	1802, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1791, 1793, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 1809,
	0, 0, 0, 0, 0, 0, 1778, 1779, 0, 0,
	0, 0, 0, 0, 0, 1052, 0, 1052, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 806, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	1233, 1229, 1233, 0, 109, 264, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 1316, 0, 0, 0,
	264, 264, 264, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 262, 264, 0, 0, 1316, 0,
	0, 1279, 0, 1279, 1279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 1790, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 1032, 0, 0,
	1032, 1032, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 1366, 262, 0, 262, 0, 0, 1472, 0,
	0, 0, 0, 0, 1316, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 1316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 2478, 0, 0, 1316,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1052, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 1316,
	1316, 264, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 0, 0, 0, 0, 0, 1229, 1229, 1709, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 264, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 0, 1316, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 1316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 264, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 1316, 0, 1316, 1316,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 264, 0, 264, 0, 264, 0, 264, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 264, 264, 264, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 262, 109,
	0, 109, 0, 262, 0, 0, 1947, 0, 262, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 0, 0,
	0, 1956, 0, 1472, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 109, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	1472, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 1316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 264, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	1931, 0, 1931, 0, 0, 0, 264, 0, 0, 264,
	0, 0, 0, 264, 0, 264, 0, 0, 0, 268,
	0, 262, 264, 264, 0, 0, 0, 0, 1316, 1316,
	0, 0, 264, 0, 0, 0, 0, 262, 0, 0,
	262, 0, 0, 0, 0, 2220, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 2240, 0, 0, 0, 0, 0, 0, 1761, 1762,
	1316, 1794, 1795, 1796, 1805, 1806, 1807, 2252, 0, 2252,
	0, 0, 0, 0, 0, 2259, 0, 0, 264, 0,
	1798, 1792, 0, 0, 798, 0, 0, 0, 1764, 0,
	0, 264, 0, 0, 0, 0, 0, 1811, 0, 262,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 262,
	798, 0, 0, 0, 1817, 0, 2227, 0, 0, 2284,
	0, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	0, 264, 1316, 1783, 0, 0, 0, 0, 1931, 0,
	2304, 0, 1780, 0, 0, 0, 1316, 0, 0, 0,
	0, 0, 0, 2317, 0, 2319, 0, 2321, 0, 2323,
	264, 2324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 0, 264, 0,
	264, 0, 1316, 0, 0, 0, 0, 264, 0, 0,
	1216, 0, 0, 2350, 2351, 2352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1788,
	1789, 0, 0, 1316, 0, 0, 0, 1769, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 1316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 262, 264, 1812, 264,
	0, 0, 0, 0, 0, 1791, 1793, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 1809, 0, 0, 0, 0, 0,
	0, 1778, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 264, 264, 264, 264, 262, 0, 0,
	0, 0, 264, 0, 1784, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 109, 0,
	109, 109, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 109, 1799, 109, 109, 109, 0,
	1931, 1931, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 1931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 0,
	0, 1216, 1111, 0, 1052, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 109,
	262, 0, 0, 0, 0, 0, 0, 2773, 0, 0,
	1279, 0, 0, 0, 1279, 0, 1279, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1931, 0, 262, 1931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804, 1781,
	1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 3199,
	0, 0, 0, 1316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 2240, 0,
	0, 1316, 1316, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 264, 264, 0, 0, 1314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 264, 0, 262, 0, 0, 1316, 3051,
	0, 0, 0, 0, 0, 0, 1216, 1216, 0, 0,
	1372, 0, 0, 0, 1372, 0, 0, 0, 3062, 0,
	3065, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 264, 0, 1316, 264, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 1314, 0, 0, 0, 0, 0, 1316,
	264, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3092, 1472, 3094, 1472, 1316, 1314,
	0, 0, 1931, 3100, 1931, 0, 0, 0, 0, 1316,
	0, 0, 0, 1316, 0, 0, 0, 0, 0, 1314,
	0, 0, 0, 0, 0, 0, 1314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1316, 1279, 0, 0,
	1314, 0, 264, 0, 0, 3128, 1316, 0, 1316, 0,
	0, 0, 1316, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	1316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 1314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 1316, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 264, 1316, 264, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 1315,
	0, 0, 0, 1216, 1372, 0, 0, 0, 0, 0,
	0, 1216, 0, 0, 0, 0, 798, 0, 0, 0,
	0, 0, 0, 798, 0, 0, 1314, 0, 0, 1279,
	0, 0, 0, 1472, 1472, 0, 0, 1316, 0, 0,
	0, 0, 0, 1373, 0, 0, 0, 1373, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 0, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1314, 0, 3421, 3423, 0, 0, 2240,
	0, 0, 1315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1372, 0, 0,
	0, 0, 1315, 0, 0, 0, 0, 0, 0, 1315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 1316, 0, 1315, 1316, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 3516, 0,
	0, 0, 3520, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 264, 1314, 1314, 0,
	0, 0, 1316, 0, 0, 0, 0, 1372, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3573, 0, 0, 0, 1316, 1316, 1316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 0, 0, 264, 0, 1316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3615, 0, 1472, 0, 0, 0, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 0, 1314, 0, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3628, 1314, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1314, 0, 1314, 1314, 1314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2478, 1316, 0, 1316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 1316, 0, 0, 1373, 0, 0,
	0, 0, 0, 1316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 1316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 1316, 264, 0, 1316, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 0, 1315, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 1316, 0, 0, 109, 0,
	1373, 0, 0, 0, 0, 0, 1372, 0, 0, 0,
	0, 0, 0, 0, 1316, 0, 0, 264, 0, 0,
	0, 0, 109, 0, 0, 0, 1316, 264, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1316, 1316, 1316, 0,
	0, 0, 0, 0, 0, 1372, 0, 0, 0, 1316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1372, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 1315, 0, 0, 0, 0, 0, 2240, 0, 0,
	1373, 0, 0, 0, 0, 0, 0, 3905, 0, 109,
	1316, 0, 1316, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 2240, 0, 0, 0, 0, 3923, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1314, 1314, 1798, 1792,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 3972, 1315, 1316, 1315, 0,
	0, 0, 1817, 0, 1316, 264, 0, 0, 1372, 0,
	0, 1763, 1316, 1316, 1315, 1315, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 1315, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 1315, 0, 1315,
	1315, 1315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 0, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1314, 0, 264, 264, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 798, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 1791, 1793, 0, 1373, 0, 0, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 1809, 1314, 0, 1314, 0, 0, 0, 1778,
	1779, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	1314, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4108, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 1373,
	1316, 1316, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1373, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 1373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1792, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 1783, 0, 1315,
	1315, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 4293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 1373, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 3196, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 0, 0,
	0, 1786, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 1802,
	0, 1372, 1812, 0, 0, 0, 0, 0, 0, 1791,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 0, 1809, 0,
	0, 0, 0, 0, 1372, 1778, 1779, 4423, 1472, 0,
	0, 0, 0, 1315, 0, 0, 0, 0, 0, 1372,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 1372, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 1315, 1314,
	1314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 1314, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4515, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 1314, 0, 1314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 1372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1314, 0, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1314, 0, 1314, 0, 0, 0,
	1372, 0, 1816, 0, 0, 4566, 0, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 1314, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 1314, 0, 0, 0, 0,
	0, 0, 0, 3195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4669, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 0, 0, 1372, 0, 0,
	1372, 0, 0, 0, 0, 0, 0, 0, 1798, 1792,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 1372, 0, 0, 0,
	0, 0, 0, 0, 1373, 0, 0, 0, 0, 0,
	0, 0, 0, 1372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 1769, 1373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1315, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 1791, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1315,
	1808, 0, 1809, 0, 0, 1372, 0, 0, 0, 1778,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1315, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 0, 1315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1373,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	1315, 0, 0, 0, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 1315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 1315,
	0, 0, 0, 1373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 1314, 0, 0, 1314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1315, 1315, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1315, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 1314, 1314, 1314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1373, 0, 1314, 1373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1314, 0,
	0, 0, 0, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1372,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 3194, 0, 1373,
	0, 0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796,
	1805, 1806, 1807, 0, 0, 0, 1373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 1792, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 1372, 0, 1372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 1372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1788, 1789, 0, 0, 0,
	1314, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	1372, 0, 1314, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 1791, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 1314, 0, 0, 0, 0, 1808, 0,
	1809, 0, 0, 0, 0, 0, 0, 1778, 1779, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1372, 1800, 0, 0, 0, 1314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1314, 1314, 1314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 1372, 0, 1315,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 1372, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1372, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 1315, 1315,
	1315, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 1372, 0, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 1315, 0, 0, 0, 0, 0, 1373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 1373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1372, 0, 0, 0, 0,
	0, 0, 1314, 0, 1816, 0, 0, 0, 0, 0,
	1314, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1372, 0, 0, 1314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0,
	0, 0, 0, 0, 1373, 2537, 1373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 1315, 0, 0, 0, 0,
	0, 0, 1761, 1762, 1373, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1792, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 1373, 0, 1315, 0, 1763, 1315, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 1373,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1315, 1315, 0, 1314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1314, 1314,
	0, 0, 0, 0, 0, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1314, 0, 1373, 0, 0,
	0, 0, 1315, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 1315, 1315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1373, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 1791,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1373, 0, 0, 0, 0, 0, 1808, 0, 1809, 0,
	0, 0, 0, 0, 0, 1778, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 1373, 0, 1315, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 1373, 0,
	0, 0, 0, 0, 0, 1315, 0, 0, 0, 0,
	0, 0, 0, 1315, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1373, 0,
	0, 1315, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0, 4557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1370, 0,
	0, 1315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1315, 1315, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 1375, 279, 280, 1376, 1377, 1378, 1315, 1379,
	623, 1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 1384, 628, 291, 292, 293, 294, 295, 296, 1385,
	1386, 0, 297, 629, 630, 631, 1387, 298, 299, 632,
	1388, 1317, 1389, 300, 301, 302, 303, 304, 305, 306,
	0, 1390, 308, 309, 310, 307, 311, 1391, 312, 0,
	313, 314, 315, 316, 317, 318, 1392, 319, 320, 321,
	1174, 322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398,
	1399, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	1400, 334, 331, 332, 1401, 335, 333, 336, 1402, 337,
	338, 339, 1403, 1404, 340, 341, 342, 1405, 343, 344,
	1406, 345, 346, 347, 1407, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 1408, 269, 1409, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 1410, 366, 367, 1411,
	1412, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1413, 380, 641, 1414,
	642, 381, 1415, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 1177, 387, 388, 1416, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 1417,
	1176, 397, 646, 647, 1418, 648, 1419, 399, 400, 1178,
	649, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 1420, 411, 413, 412,
	1421, 414, 650, 1181, 415, 416, 1182, 1422, 417, 0,
	0, 0, 418, 419, 422, 1423, 1424, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1425, 271, 1185, 462, 463, 1426, 651, 464,
	652, 466, 467, 1427, 0, 468, 0, 1428, 1429, 470,
	471, 472, 1430, 1431, 473, 474, 653, 1186, 475, 1187,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 1432, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 1433, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 1434, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 1435, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	1436, 549, 550, 548, 551, 552, 553, 1437, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 1438, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 1439, 581, 582, 0, 578, 569, 1440, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 1441, 591,
	664, 665, 666, 667, 1442, 600, 1443, 592, 593, 594,
	668, 595, 669, 1444, 596, 597, 598, 599, 0, 601,
	602, 1445, 1446, 603, 604, 605, 607, 608, 606, 609,
	1447, 610, 1448, 0, 611, 612, 613, 670, 671, 672,
	1449, 615, 614, 616, 673, 1450, 617, 1451, 1452, 1453,
	1454, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1370, 0, 0, 0, 0, 0, 0, 0, 2703,
	0, 0, 0, 0, 0, 0, 0, 2704, 272, 274,
	273, 275, 276, 277, 278, 1375, 279, 280, 1376, 1377,
	1378, 0, 1379, 623, 1380, 1381, 1382, 1383, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 1384, 628, 291, 292, 293, 294,
	295, 296, 1385, 1386, 0, 297, 629, 630, 631, 1387,
	298, 299, 632, 1388, 1317, 1389, 300, 301, 302, 303,
	304, 305, 306, 0, 1390, 308, 309, 310, 307, 311,
	1391, 312, 0, 313, 314, 315, 316, 317, 318, 1392,
	319, 320, 321, 1174, 322, 323, 324, 1393, 1394, 1396,
	1395, 1397, 1398, 1399, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 1400, 334, 331, 332, 1401, 335, 333,
	336, 1402, 337, 338, 339, 1403, 1404, 340, 341, 342,
	1405, 343, 344, 1406, 345, 346, 347, 1407, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 1408, 269, 1409, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 1410,
	366, 367, 1411, 1412, 1175, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 1413,
	380, 641, 1414, 642, 381, 1415, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 1177, 387, 388, 1416, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 1417, 1176, 397, 646, 647, 1418, 648, 1419,
	399, 400, 1178, 649, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 1420,
	411, 413, 412, 1421, 414, 650, 1181, 415, 416, 1182,
	1422, 417, 0, 0, 0, 418, 419, 422, 1423, 1424,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 1425, 271, 1185, 462, 463,
	1426, 651, 464, 652, 466, 467, 1427, 0, 468, 0,
	1428, 1429, 470, 471, 472, 1430, 1431, 473, 474, 653,
	1186, 475, 1187, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 1432, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 1433, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 1434, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 1435, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 1436, 549, 550, 548, 551, 552, 553,
	1437, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 1438, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 1439, 581, 582, 0, 578,
	569, 1440, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 1441, 591, 664, 665, 666, 667, 1442, 600, 1443,
	592, 593, 594, 668, 595, 669, 1444, 596, 597, 598,
	599, 0, 601, 602, 1445, 1446, 603, 604, 605, 607,
	608, 606, 609, 1447, 610, 1448, 0, 611, 612, 613,
	670, 671, 672, 1449, 615, 614, 616, 673, 1450, 617,
	1451, 1452, 1453, 1454, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1370, 0, 0, 0, 0, 3655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3657, 272,
	274, 273, 275, 276, 277, 278, 1375, 279, 280, 1376,
	1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 1384, 628, 291, 292, 293,
	294, 295, 296, 1385, 1386, 0, 297, 629, 630, 631,
	1387, 298, 299, 632, 1388, 1317, 1389, 300, 301, 302,
	303, 304, 305, 306, 0, 1390, 308, 309, 310, 307,
	311, 1391, 312, 0, 313, 314, 315, 316, 317, 318,
	1392, 319, 320, 321, 1174, 322, 323, 324, 1393, 1394,
	1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 1400, 334, 331, 332, 1401, 335,
	333, 336, 1402, 337, 338, 339, 1403, 1404, 340, 341,
	342, 1405, 343, 344, 1406, 345, 346, 347, 1407, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 1408, 269, 1409, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	1410, 366, 367, 1411, 1412, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1413, 380, 641, 1414, 642, 381, 1415, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 1416,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 1417, 1176, 397, 646, 647, 1418, 648,
	1419, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	1420, 411, 413, 412, 1421, 414, 650, 1181, 415, 416,
	1182, 1422, 417, 0, 0, 0, 418, 419, 422, 1423,
	1424, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1425, 271, 1185, 462,
	463, 1426, 651, 464, 652, 466, 467, 1427, 0, 468,
	0, 1428, 1429, 470, 471, 472, 1430, 1431, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 1432, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 1433, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 1434, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 1435,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 1436, 549, 550, 548, 551, 552,
	553, 1437, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 1438,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 1439, 581, 582, 0,
	578, 569, 1440, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 1441, 591, 664, 665, 666, 667, 1442, 600,
	1443, 592, 593, 594, 668, 595, 669, 1444, 596, 597,
	598, 599, 0, 601, 602, 1445, 1446, 603, 604, 605,
	607, 608, 606, 609, 1447, 610, 1448, 0, 611, 612,
	613, 670, 671, 672, 1449, 615, 614, 616, 673, 1450,
	617, 1451, 1452, 1453, 1454, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4043, 272, 274, 273, 275, 276, 277,
	278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379, 623,
	1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	1384, 628, 291, 292, 293, 294, 295, 296, 1385, 1386,
	0, 297, 629, 630, 631, 1387, 298, 299, 632, 1388,
	1317, 1389, 300, 301, 302, 303, 304, 305, 306, 0,
	1390, 308, 309, 310, 307, 311, 1391, 312, 0, 313,
	314, 315, 316, 317, 318, 1392, 319, 320, 321, 1174,
	322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398, 1399,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 1400,
	334, 331, 332, 1401, 335, 333, 336, 1402, 337, 338,
	339, 1403, 1404, 340, 341, 342, 1405, 343, 344, 1406,
	345, 346, 347, 1407, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	1408, 269, 1409, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 1410, 366, 367, 1411, 1412,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1413, 380, 641, 1414, 642,
	381, 1415, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 1416, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 1417, 1176,
	397, 646, 647, 1418, 648, 1419, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 1420, 411, 413, 412, 1421,
	414, 650, 1181, 415, 416, 1182, 1422, 417, 0, 0,
	0, 418, 419, 422, 1423, 1424, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1425, 271, 1185, 462, 463, 1426, 651, 464, 652,
	466, 467, 1427, 0, 468, 0, 1428, 1429, 470, 471,
	472, 1430, 1431, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 1432, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 1433, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 1434, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 1435, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 1436,
	549, 550, 548, 551, 552, 553, 1437, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 1438, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 1439, 581, 582, 0, 578, 569, 1440, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 1441, 591, 664,
	665, 666, 667, 1442, 600, 1443, 592, 593, 594, 668,
	595, 669, 1444, 596, 597, 598, 599, 0, 601, 602,
	1445, 1446, 603, 604, 605, 607, 608, 606, 609, 1447,
	610, 1448, 0, 611, 612, 613, 670, 671, 672, 1449,
	615, 614, 616, 673, 1450, 617, 1451, 1452, 1453, 1454,
	618, 619, 674, 620, 621, 622, 0, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4245, 272, 274, 273, 275, 276, 277,
	278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379, 623,
	1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	1384, 628, 291, 292, 293, 294, 295, 296, 1385, 1386,
	0, 297, 629, 630, 631, 1387, 298, 299, 632, 1388,
	1317, 1389, 300, 301, 302, 303, 304, 305, 306, 0,
	1390, 308, 309, 310, 307, 311, 1391, 312, 0, 313,
	314, 315, 316, 317, 318, 1392, 319, 320, 321, 1174,
	322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398, 1399,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 1400,
	334, 331, 332, 1401, 335, 333, 336, 1402, 337, 338,
	339, 1403, 1404, 340, 341, 342, 1405, 343, 344, 1406,
	345, 346, 347, 1407, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	1408, 269, 1409, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 1410, 366, 367, 1411, 1412,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1413, 380, 641, 1414, 642,
	381, 1415, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 1416, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 1417, 1176,
	397, 646, 647, 1418, 648, 1419, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 1420, 411, 413, 412, 1421,
	414, 650, 1181, 415, 416, 1182, 1422, 417, 0, 0,
	0, 418, 419, 422, 1423, 1424, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1425, 271, 1185, 462, 463, 1426, 651, 464, 652,
	466, 467, 1427, 0, 468, 0, 1428, 1429, 470, 471,
	472, 1430, 1431, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 1432, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 1433, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 1434, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 1435, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 1436,
	549, 550, 548, 551, 552, 553, 1437, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 1438, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 1439, 581, 582, 0, 578, 569, 1440, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 1441, 591, 664,
	665, 666, 667, 1442, 600, 1443, 592, 593, 594, 668,
	595, 669, 1444, 596, 597, 598, 599, 0, 601, 602,
	1445, 1446, 603, 604, 605, 607, 608, 606, 609, 1447,
	610, 1448, 0, 611, 612, 613, 670, 671, 672, 1449,
	615, 614, 616, 673, 1450, 617, 1451, 1452, 1453, 1454,
	618, 619, 674, 620, 621, 622, 0, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4117, 272, 274, 273, 275, 276, 277,
	278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379, 623,
	1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	1384, 628, 291, 292, 293, 294, 295, 296, 1385, 1386,
	0, 297, 629, 630, 631, 1387, 298, 299, 632, 1388,
	1317, 1389, 300, 301, 302, 303, 304, 305, 306, 0,
	1390, 308, 309, 310, 307, 311, 1391, 312, 0, 313,
	314, 315, 316, 317, 318, 1392, 319, 320, 321, 1174,
	322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398, 1399,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 1400,
	334, 331, 332, 1401, 335, 333, 336, 1402, 337, 338,
	339, 1403, 1404, 340, 341, 342, 1405, 343, 344, 1406,
	345, 346, 347, 1407, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	1408, 269, 1409, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 1410, 366, 367, 1411, 1412,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1413, 380, 641, 1414, 642,
	381, 1415, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 1416, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 1417, 1176,
	397, 646, 647, 1418, 648, 1419, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 1420, 411, 413, 412, 1421,
	414, 650, 1181, 415, 416, 1182, 1422, 417, 0, 0,
	0, 418, 419, 422, 1423, 1424, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1425, 271, 1185, 462, 463, 1426, 651, 464, 652,
	466, 467, 1427, 0, 468, 0, 1428, 1429, 470, 471,
	472, 1430, 1431, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 1432, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 1433, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 1434, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 1435, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 1436,
	549, 550, 548, 551, 552, 553, 1437, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 1438, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 1439, 581, 582, 0, 578, 569, 1440, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 1441, 591, 664,
	665, 666, 667, 1442, 600, 1443, 592, 593, 594, 668,
	595, 669, 1444, 596, 597, 598, 599, 0, 601, 602,
	1445, 1446, 603, 604, 605, 607, 608, 606, 609, 1447,
	610, 1448, 0, 611, 612, 613, 670, 671, 672, 1449,
	615, 614, 616, 673, 1450, 617, 1451, 1452, 1453, 1454,
	618, 619, 674, 620, 621, 622, 0, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3973, 272, 274, 273, 275, 276, 277,
	278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379, 623,
	1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	1384, 628, 291, 292, 293, 294, 295, 296, 1385, 1386,
	0, 297, 629, 630, 631, 1387, 298, 299, 632, 1388,
	1317, 1389, 300, 301, 302, 303, 304, 305, 306, 0,
	1390, 308, 309, 310, 307, 311, 1391, 312, 0, 313,
	314, 315, 316, 317, 318, 1392, 319, 320, 321, 1174,
	322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398, 1399,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 1400,
	334, 331, 332, 1401, 335, 333, 336, 1402, 337, 338,
	339, 1403, 1404, 340, 341, 342, 1405, 343, 344, 1406,
	345, 346, 347, 1407, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	1408, 269, 1409, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 1410, 366, 367, 1411, 1412,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1413, 380, 641, 1414, 642,
	381, 1415, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 1416, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 1417, 1176,
	397, 646, 647, 1418, 648, 1419, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 1420, 411, 413, 412, 1421,
	414, 650, 1181, 415, 416, 1182, 1422, 417, 0, 0,
	0, 418, 419, 422, 1423, 1424, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1425, 271, 1185, 462, 463, 1426, 651, 464, 652,
	466, 467, 1427, 0, 468, 0, 1428, 1429, 470, 471,
	472, 1430, 1431, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 1432, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 1433, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 1434, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 1435, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 1436,
	549, 550, 548, 551, 552, 553, 1437, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 1438, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 1439, 581, 582, 0, 578, 569, 1440, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 1441, 591, 664,
	665, 666, 667, 1442, 600, 1443, 592, 593, 594, 668,
	595, 669, 1444, 596, 597, 598, 599, 0, 601, 602,
	1445, 1446, 603, 604, 605, 607, 608, 606, 609, 1447,
	610, 1448, 0, 611, 612, 613, 670, 671, 672, 1449,
	615, 614, 616, 673, 1450, 617, 1451, 1452, 1453, 1454,
	618, 619, 674, 620, 621, 622, 0, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3673, 272, 274, 273, 275, 276, 277,
	278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379, 623,
	1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	1384, 628, 291, 292, 293, 294, 295, 296, 1385, 1386,
	0, 297, 629, 630, 631, 1387, 298, 299, 632, 1388,
	1317, 1389, 300, 301, 302, 303, 304, 305, 306, 0,
	1390, 308, 309, 310, 307, 311, 1391, 312, 0, 313,
	314, 315, 316, 317, 318, 1392, 319, 320, 321, 1174,
	322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398, 1399,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 1400,
	334, 331, 332, 1401, 335, 333, 336, 1402, 337, 338,
	339, 1403, 1404, 340, 341, 342, 1405, 343, 344, 1406,
	345, 346, 347, 1407, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	1408, 269, 1409, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 1410, 366, 367, 1411, 1412,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1413, 380, 641, 1414, 642,
	381, 1415, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 1416, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 1417, 1176,
	397, 646, 647, 1418, 648, 1419, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 1420, 411, 413, 412, 1421,
	414, 650, 1181, 415, 416, 1182, 1422, 417, 0, 0,
	0, 418, 419, 422, 1423, 1424, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1425, 271, 1185, 462, 463, 1426, 651, 464, 652,
	466, 467, 1427, 0, 468, 0, 1428, 1429, 470, 471,
	472, 1430, 1431, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 1432, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 1433, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 1434, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 1435, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 1436,
	549, 550, 548, 551, 552, 553, 1437, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 1438, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 1439, 581, 582, 0, 578, 569, 1440, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 1441, 591, 664,
	665, 666, 667, 1442, 600, 1443, 592, 593, 594, 668,
	595, 669, 1444, 596, 597, 598, 599, 0, 601, 602,
	1445, 1446, 603, 604, 605, 607, 608, 606, 609, 1447,
	610, 1448, 0, 611, 612, 613, 670, 671, 672, 1449,
	615, 614, 616, 673, 1450, 617, 1451, 1452, 1453, 1454,
	618, 619, 674, 620, 621, 622, 0, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3501, 272, 274, 273, 275, 276, 277,
	278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379, 623,
	1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	1384, 628, 291, 292, 293, 294, 295, 296, 1385, 1386,
	0, 297, 629, 630, 631, 1387, 298, 299, 632, 1388,
	1317, 1389, 300, 301, 302, 303, 304, 305, 306, 0,
	1390, 308, 309, 310, 307, 311, 1391, 312, 0, 313,
	314, 315, 316, 317, 318, 1392, 319, 320, 321, 1174,
	322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398, 1399,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 1400,
	334, 331, 332, 1401, 335, 333, 336, 1402, 337, 338,
	339, 1403, 1404, 340, 341, 342, 1405, 343, 344, 1406,
	345, 346, 347, 1407, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	1408, 269, 1409, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 1410, 366, 367, 1411, 1412,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1413, 380, 641, 1414, 642,
	381, 1415, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 1416, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 1417, 1176,
	397, 646, 647, 1418, 648, 1419, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 1420, 411, 413, 412, 1421,
	414, 650, 1181, 415, 416, 1182, 1422, 417, 0, 0,
	0, 418, 419, 422, 1423, 1424, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1425, 271, 1185, 462, 463, 1426, 651, 464, 652,
	466, 467, 1427, 0, 468, 0, 1428, 1429, 470, 471,
	472, 1430, 1431, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 1432, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 1433, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 1434, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 1435, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 1436,
	549, 550, 548, 551, 552, 553, 1437, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 1438, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 1439, 581, 582, 0, 578, 569, 1440, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 1441, 591, 664,
	665, 666, 667, 1442, 600, 1443, 592, 593, 594, 668,
	595, 669, 1444, 596, 597, 598, 599, 0, 601, 602,
	1445, 1446, 603, 604, 605, 607, 608, 606, 609, 1447,
	610, 1448, 0, 611, 612, 613, 670, 671, 672, 1449,
	615, 614, 616, 673, 1450, 617, 1451, 1452, 1453, 1454,
	618, 619, 674, 620, 621, 622, 0, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2560, 272, 274, 273, 275, 276, 277,
	278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379, 623,
	1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	1384, 628, 291, 292, 293, 294, 295, 296, 1385, 1386,
	0, 297, 629, 630, 631, 1387, 298, 299, 632, 1388,
	1317, 1389, 300, 301, 302, 303, 304, 305, 306, 0,
	1390, 308, 309, 310, 307, 311, 1391, 312, 0, 313,
	314, 315, 316, 317, 318, 1392, 319, 320, 321, 1174,
	322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398, 1399,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 1400,
	334, 331, 332, 1401, 335, 333, 336, 1402, 337, 338,
	339, 1403, 1404, 340, 341, 342, 1405, 343, 344, 1406,
	345, 346, 347, 1407, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	1408, 269, 1409, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 1410, 366, 367, 1411, 1412,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1413, 380, 641, 1414, 642,
	381, 1415, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 1416, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 1417, 1176,
	397, 646, 647, 1418, 648, 1419, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 1420, 411, 413, 412, 1421,
	414, 650, 1181, 415, 416, 1182, 1422, 417, 0, 0,
	0, 418, 419, 422, 1423, 1424, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1425, 271, 1185, 462, 463, 1426, 651, 464, 652,
	466, 467, 1427, 0, 468, 0, 1428, 1429, 470, 471,
	472, 1430, 1431, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 1432, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 1433, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 1434, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 1435, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 1436,
	549, 550, 548, 551, 552, 553, 1437, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 1438, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 1439, 581, 582, 0, 578, 569, 1440, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 1441, 591, 664,
	665, 666, 667, 1442, 600, 1443, 592, 593, 594, 668,
	595, 669, 1444, 596, 597, 598, 599, 0, 601, 602,
	1445, 1446, 603, 604, 605, 607, 608, 606, 609, 1447,
	610, 1448, 0, 611, 612, 613, 670, 671, 672, 1449,
	615, 614, 616, 673, 1450, 617, 1451, 1452, 1453, 1454,
	618, 619, 674, 620, 621, 622, 1466, 0, 1370, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2201, 0, 272, 274, 273, 275, 276,
	277, 278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379,
	623, 1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 1384, 628, 291, 292, 293, 294, 295, 296, 1385,
	1386, 0, 297, 629, 630, 631, 1387, 298, 299, 632,
	1388, 1317, 1389, 300, 301, 302, 303, 304, 305, 306,
	0, 1390, 308, 309, 310, 307, 311, 1391, 312, 0,
	313, 314, 315, 316, 317, 318, 1392, 319, 320, 321,
	1174, 322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398,
	1399, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	1400, 334, 331, 332, 1401, 335, 333, 336, 1402, 337,
	338, 339, 1403, 1404, 340, 341, 342, 1405, 343, 344,
	1406, 345, 346, 347, 1407, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 1408, 269, 1409, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 1410, 366, 367, 1411,
	1412, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1413, 380, 641, 1414,
	642, 381, 1415, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 1177, 387, 388, 1416, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 1417,
	1176, 397, 646, 647, 1418, 648, 1419, 399, 400, 1178,
	649, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 1420, 411, 413, 412,
	1421, 414, 650, 1181, 415, 416, 1182, 1422, 417, 0,
	0, 0, 418, 419, 422, 1423, 1424, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1425, 271, 1185, 462, 463, 1426, 651, 464,
	652, 466, 467, 1427, 0, 468, 0, 1428, 1429, 470,
	471, 472, 1430, 1431, 473, 474, 653, 1186, 475, 1187,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 1432, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 1433, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 1434, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 1435, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	1436, 549, 550, 548, 551, 552, 553, 1437, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 1438, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 1439, 581, 582, 0, 578, 569, 1440, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 1441, 591,
	664, 665, 666, 667, 1442, 600, 1443, 592, 593, 594,
	668, 595, 669, 1444, 596, 597, 598, 599, 0, 601,
	602, 1445, 1446, 603, 604, 605, 607, 608, 606, 609,
	1447, 610, 1448, 0, 611, 612, 613, 670, 671, 672,
	1449, 615, 614, 616, 673, 1450, 617, 1451, 1452, 1453,
	1454, 618, 619, 674, 620, 621, 622, 1367, 0, 1370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 1375, 279, 280, 1376, 1377, 1378, 0,
	1379, 623, 1380, 1381, 1382, 1383, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 1384, 628, 291, 292, 293, 294, 295, 296,
	1385, 1386, 0, 297, 629, 630, 631, 1387, 298, 299,
	632, 1388, 1317, 1389, 300, 301, 302, 303, 304, 305,
	306, 0, 1390, 308, 309, 310, 307, 311, 1391, 312,
	0, 313, 314, 315, 316, 317, 318, 1392, 319, 320,
	321, 1174, 322, 323, 324, 1393, 1394, 1396, 1395, 1397,
	1398, 1399, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 1400, 334, 331, 332, 1401, 335, 333, 336, 1402,
	337, 338, 339, 1403, 1404, 340, 341, 342, 1405, 343,
	344, 1406, 345, 346, 347, 1407, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 1408, 269, 1409, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 1410, 366, 367,
	1411, 1412, 1175, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 1413, 380, 641,
	1414, 642, 381, 1415, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 1177, 387, 388, 1416, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	1417, 1176, 397, 646, 647, 1418, 648, 1419, 399, 400,
	1178, 649, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 1420, 411, 413,
	412, 1421, 414, 650, 1181, 415, 416, 1182, 1422, 417,
	0, 0, 0, 418, 419, 422, 1423, 1424, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1425, 271, 1185, 462, 463, 1426, 651,
	464, 652, 466, 467, 1427, 0, 468, 0, 1428, 1429,
	470, 471, 472, 1430, 1431, 473, 474, 653, 1186, 475,
	1187, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 1432, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 1433,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 1434, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 1435, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 1436, 549, 550, 548, 551, 552, 553, 1437, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 1438, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 1439, 581, 582, 0, 578, 569, 1440,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 1441,
	591, 664, 665, 666, 667, 1442, 600, 1443, 592, 593,
	594, 668, 595, 669, 1444, 596, 597, 598, 599, 0,
	601, 602, 1445, 1446, 603, 604, 605, 607, 608, 606,
	609, 1447, 610, 1448, 0, 611, 612, 613, 670, 671,
	672, 1449, 615, 614, 616, 673, 1450, 617, 1451, 1452,
	1453, 1454, 618, 619, 674, 620, 621, 622, 1370, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379,
	623, 1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 1384, 628, 291, 292, 293, 294, 295, 296, 1385,
	1386, 0, 297, 629, 630, 631, 1387, 298, 299, 632,
	1388, 1317, 1389, 300, 301, 302, 303, 304, 305, 306,
	0, 1390, 308, 309, 310, 307, 311, 1391, 312, 0,
	313, 314, 315, 316, 317, 318, 1392, 319, 320, 321,
	1174, 322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398,
	1399, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	1400, 334, 331, 332, 1401, 335, 333, 336, 1402, 337,
	338, 339, 1403, 1404, 340, 341, 342, 1405, 343, 344,
	1406, 345, 346, 347, 1407, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 1408, 269, 1409, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 1410, 366, 367, 1411,
	1412, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 1413, 380, 641, 1414,
	642, 381, 1415, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 1177, 387, 388, 1416, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 1417,
	1176, 397, 646, 647, 1418, 648, 1419, 399, 400, 1178,
	649, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 1420, 411, 413, 412,
	1421, 414, 650, 1181, 415, 416, 1182, 1422, 417, 0,
	0, 0, 418, 419, 422, 1423, 1424, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1425, 271, 1185, 462, 463, 1426, 651, 464,
	652, 466, 467, 1427, 0, 468, 0, 1428, 1429, 470,
	471, 472, 1430, 1431, 473, 474, 653, 1186, 475, 1187,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 1432, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 1433, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 1434, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 1435, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	1436, 549, 550, 548, 551, 552, 553, 1437, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 1438, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 1439, 581, 582, 0, 578, 569, 1440, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 1441, 591,
	664, 665, 666, 667, 1442, 600, 1443, 592, 593, 594,
	668, 595, 669, 1444, 596, 597, 598, 599, 0, 601,
	602, 1445, 1446, 603, 604, 605, 607, 608, 606, 609,
	1447, 610, 1448, 0, 611, 612, 613, 670, 671, 672,
	1449, 615, 614, 616, 673, 1450, 617, 1451, 1452, 1453,
	1454, 618, 619, 674, 620, 621, 622, 2535, 0, 1109,
	1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 2532, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 2533, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 2531, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1067, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 2534, 0, 0, 0, 0,
	0, 0, 1093, 2530, 0, 1053, 1091, 1109, 1081, 1082,
	1083, 1079, 1080, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	1097, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 1146, 0, 289, 1153, 290, 1152,
	0, 1163, 291, 292, 293, 294, 295, 296, 1099, 1132,
	1064, 297, 1193, 1194, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 1156, 330, 1150, 1149, 1069,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 1141, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 1075, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	1088, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	1148, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 1161, 1162, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 1098,
	381, 0, 382, 383, 384, 385, 386, 1134, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 1076, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 1147, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 1077, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 231,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 1145, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 1192, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 1063, 578, 569, 233, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 1157,
	1158, 1159, 1160, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 1087, 596, 597, 598, 599, 0, 601, 602,
	0, 1070, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 1589, 1154, 1191, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 225,
	618, 619, 674, 620, 621, 622, 1067, 0, 226, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 1060, 1061, 1109, 1081, 1082, 1083, 1079, 1080, 1092,
	1842, 1840, 0, 0, 1091, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 1133, 1097, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	1146, 0, 289, 1153, 290, 1152, 0, 1163, 291, 292,
	293, 294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 1156, 330, 1150, 1149, 1069, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	1141, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 1075, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 1088, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 1148, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	1161, 1162, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 1098, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 1143, 1144, 0,
	1104, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1066, 271, 1185,
	462, 463, 1089, 1137, 464, 1151, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 1076, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 1147, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	1077, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 231, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 1145, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 1192,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	1063, 578, 569, 233, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 1157, 1158, 1159, 1160, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 1087, 596,
	597, 598, 599, 0, 601, 602, 0, 1070, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 1589, 1154, 1191, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 225, 618, 619, 674, 620,
	621, 622, 1067, 0, 226, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 0, 0, 0, 1060, 1061, 1109,
	1081, 1082, 1083, 1079, 1080, 1092, 1842, 3150, 0, 0,
	1091, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 231, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 233,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 1589, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 225, 618, 619, 674, 620, 621, 622, 1067, 0,
	226, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 1842, 1840, 0, 0, 1091, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 2664, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 2669, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 2665, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 2666, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1060,
	1061, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 2580, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 1133, 1097, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	1146, 0, 289, 1153, 290, 1152, 0, 1163, 291, 292,
	293, 294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 1156, 330, 1150, 1149, 1069, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	1141, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 1075, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 1088, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 1148, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	1161, 1162, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 1098, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 1143, 1144, 0,
	1104, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1066, 271, 1185,
	462, 463, 1089, 1137, 464, 1151, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 1076, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 1147, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	1077, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 1145, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 1192,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	1063, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 1157, 1158, 1159, 1160, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 1087, 596,
	597, 598, 599, 0, 601, 602, 0, 1070, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 670, 1154, 1191, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1067, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 0, 0, 0, 1060, 1061, 0,
	0, 0, 0, 0, 0, 0, 1093, 2578, 0, 2577,
	1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 1133, 1097, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 1146, 0,
	289, 1153, 290, 1152, 0, 1163, 291, 292, 293, 294,
	295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 1156,
	330, 1150, 1149, 1069, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 1141, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	1075, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 1088, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 1148, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 1161, 1162,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 1098, 381, 0, 382, 383, 384, 385,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 1143, 1144, 0, 1104, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 1066, 271, 1185, 462, 463,
	1089, 1137, 464, 1151, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 1076, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 1147, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 1077, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 1145, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 1192, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 1063, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 1157, 1158, 1159, 1160, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 1087, 596, 597, 598,
	599, 0, 601, 602, 0, 1070, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 1154, 1191, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1067, 0, 0, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 1060, 1061, 0, 0, 0,
	0, 0, 0, 0, 1093, 2575, 0, 2574, 1091, 1109,
	1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1067, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 0, 0, 0, 0, 0,
	0, 0, 1093, 2572, 0, 2571, 1091, 1109, 1081, 1082,
	1083, 1079, 1080, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	1097, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 1146, 0, 289, 1153, 290, 1152,
	0, 1163, 291, 292, 293, 294, 295, 296, 1099, 1132,
	1064, 297, 1193, 1194, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 1156, 330, 1150, 1149, 1069,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 1141, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 1075, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	1088, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	1148, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 1161, 1162, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 1098,
	381, 0, 382, 383, 384, 385, 386, 1134, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 1076, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 1147, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 1077, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 1145, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 1192, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 1063, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 1157,
	1158, 1159, 1160, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 1087, 596, 597, 598, 599, 0, 601, 602,
	0, 1070, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 670, 1154, 1191, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 1067, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 1060, 1061, 0, 0, 0, 0, 0, 0, 0,
	1093, 2569, 0, 1684, 1091, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 1683, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1060,
	1061, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 1056, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 1133, 1097, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	1146, 0, 289, 1153, 290, 1152, 0, 1163, 291, 292,
	293, 294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 1156, 330, 1150, 1149, 1069, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	1141, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 1075, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 1088, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 1148, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	1161, 1162, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 1098, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 1143, 1144, 0,
	1104, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1066, 271, 1185,
	462, 463, 1089, 1137, 464, 1151, 466, 467, 0, 0,
	468, 0, 1071, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 1076, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 1147, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	1077, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 1145, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 1192,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	1063, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 1157, 1158, 1159, 1160, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 1087, 596,
	597, 598, 599, 0, 601, 602, 0, 1070, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 670, 1154, 1191, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1067, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 0, 0, 0, 1060, 1061, 1109,
	1081, 1082, 1083, 1079, 1080, 1092, 1093, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 4578, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 1071, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1067, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 1093, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 2412, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 2411, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1060,
	1061, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 1133, 1097, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 1146, 0,
	289, 1153, 290, 1152, 0, 1163, 291, 292, 293, 294,
	295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 1156,
	330, 1150, 1149, 1069, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 1141, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	1075, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 1088, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 1148, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 1161, 1162,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 1098, 381, 0, 382, 383, 384, 385,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 1143, 1144, 0, 1104, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 1066, 271, 1185, 462, 463,
	1089, 1137, 464, 1151, 466, 467, 0, 0, 468, 0,
	1071, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 1076, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 1147, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 1077, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 1145, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 1192, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 1063, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 1157, 1158, 1159, 1160, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 1087, 596, 597, 598,
	599, 0, 601, 602, 0, 1070, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 1154, 1191, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1067, 0, 0, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 1060, 1061, 1109, 1081, 1082,
	1083, 1079, 1080, 1092, 1093, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	1097, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 1146, 0, 289, 1153, 290, 1152,
	0, 1163, 291, 292, 293, 294, 295, 296, 1099, 1132,
	1064, 297, 1193, 1194, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 4322, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 1156, 330, 1150, 1149, 1069,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 1141, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 1075, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	1088, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	1148, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 1161, 1162, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 1098,
	381, 0, 382, 383, 384, 385, 386, 1134, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151,
	466, 467, 0, 0, 468, 0, 1071, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 1076, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 1147, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 1077, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 1145, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 1192, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 1063, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 1157,
	1158, 1159, 1160, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 1087, 596, 597, 598, 599, 0, 601, 602,
	0, 1070, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 670, 1154, 1191, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 1067, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 1060, 1061, 1109, 1081, 1082, 1083, 1079, 1080, 1092,
	1093, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 1133, 1097, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	1146, 0, 289, 1153, 290, 1152, 0, 1163, 291, 292,
	293, 294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 1156, 330, 1150, 1149, 1069, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	1141, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 1075, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 1088, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 1148, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	1161, 1162, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 1098, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 1143, 1144, 0,
	1104, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1066, 3935, 1185,
	462, 463, 1089, 1137, 464, 1151, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 1076, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 1147, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	1077, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 1145, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 1192,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	1063, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 1157, 1158, 1159, 1160, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 1087, 596,
	597, 598, 599, 0, 601, 602, 0, 1070, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 670, 1154, 1191, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1067, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 0, 0, 0, 1060, 1061, 1910,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 1133, 1097, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 1146, 0,
	289, 1153, 290, 1152, 0, 1163, 291, 292, 293, 294,
	295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 1156,
	330, 1150, 1149, 1069, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 1141, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	1075, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 1088, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 1148, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 1161, 1162,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 1098, 381, 0, 382, 383, 384, 385,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 1143, 1144, 0, 1104, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 1066, 271, 1185, 462, 463,
	1089, 1137, 464, 1151, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 1076, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 1147, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 1077, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 1145, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 1192, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 1063, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 1157, 1158, 1159, 1160, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 1087, 596, 597, 598,
	599, 0, 601, 602, 0, 1070, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 1154, 1191, 3651, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1067, 0, 0, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 1060, 1061, 1109, 1081, 1082,
	1083, 1079, 1080, 1092, 1093, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	1097, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 1146, 0, 289, 1153, 290, 1152,
	0, 1163, 291, 292, 293, 294, 295, 296, 1099, 1132,
	1064, 297, 1193, 1194, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 1156, 330, 1150, 1149, 1069,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 1141, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 1075, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	1088, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	1148, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 1161, 1162, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 1098,
	381, 0, 382, 383, 384, 385, 386, 1134, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 1076, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 1147, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 1077, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 1145, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 1192, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 1063, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 1157,
	1158, 1159, 1160, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 1087, 596, 597, 598, 599, 0, 601, 602,
	0, 1070, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 670, 1154, 1191, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 1067, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 1060, 1061, 1910, 0, 0, 0, 0, 0, 0,
	1093, 0, 0, 0, 1091, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 2669, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1060,
	1061, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 1133, 1097, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 1146, 0,
	289, 1153, 290, 1152, 0, 1163, 291, 292, 293, 294,
	295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 1156,
	330, 1150, 1149, 1069, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 1141, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	1075, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 1088, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 1148, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 1161, 1162,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 1098, 381, 0, 382, 383, 384, 385,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 1143, 1144, 0, 1104, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 1066, 271, 1185, 462, 463,
	1089, 1137, 464, 1151, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 1076, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 1147, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 1077, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 1145, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 1192, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 1063, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 1157, 1158, 1159, 1160, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 1087, 596, 597, 598,
	599, 0, 601, 602, 0, 1070, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 1154, 1191, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1067, 0, 0, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 1060, 1061, 0, 0, 0,
	0, 0, 0, 0, 1093, 1840, 0, 2674, 1091, 1109,
	1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1067, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 2672, 1091, 1109, 1081, 1082,
	1083, 1079, 1080, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	1097, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 1146, 0, 289, 1153, 290, 1152,
	0, 1163, 291, 292, 293, 294, 295, 296, 1099, 1132,
	1064, 297, 1193, 1194, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 1156, 330, 1150, 1149, 1069,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 1141, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 1075, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	1088, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	1148, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 1161, 1162, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 1098,
	381, 0, 382, 383, 384, 385, 386, 1134, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 1076, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 1147, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 1077, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 1145, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 1192, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 1063, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 1157,
	1158, 1159, 1160, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 1087, 596, 597, 598, 599, 0, 601, 602,
	0, 1070, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 670, 1154, 1191, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 1067, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 1060, 1061, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 0, 2660, 1091, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1060,
	1061, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 2648, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 1133, 1097, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	1146, 0, 289, 1153, 290, 1152, 0, 1163, 291, 292,
	293, 294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 1156, 330, 1150, 1149, 1069, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	1141, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 1075, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 1088, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 1148, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	1161, 1162, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 1098, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 1143, 1144, 0,
	1104, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1066, 271, 1185,
	462, 463, 1089, 1137, 464, 1151, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 1076, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 1147, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	1077, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 1145, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 1192,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	1063, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 1157, 1158, 1159, 1160, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 1087, 596,
	597, 598, 599, 0, 601, 602, 0, 1070, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 670, 1154, 1191, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1067, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 0, 0, 0, 1060, 1061, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 2646,
	1091, 2637, 2644, 1082, 1083, 1079, 1080, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 1133, 1097, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 1146, 0,
	289, 1153, 290, 1152, 0, 1163, 291, 292, 293, 294,
	295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 1156,
	2640, 1150, 1149, 1069, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 1141, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	1075, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 1088, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 1148, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 1161, 1162,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 1098, 381, 0, 382, 383, 384, 2641,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 1143, 1144, 0, 1104, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 2642, 432, 2639, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 1066, 271, 1185, 462, 463,
	1089, 1137, 464, 1151, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 1076, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 1147, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 1077, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 2643, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 1145, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 1192, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 1063, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 1157, 1158, 1159, 1160, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 1087, 596, 597, 598,
	599, 0, 601, 602, 0, 1070, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 1154, 1191, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 2638, 622,
	1067, 0, 0, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 1060, 1061, 0, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 2634, 1091, 2637,
	2644, 1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 2640, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 2641, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 2642,
	432, 2639, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	2643, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 2638, 622, 1067, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 1093, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1060,
	1061, 0, 0, 0, 0, 0, 1848, 0, 1093, 0,
	0, 0, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 2391, 279, 280,
	0, 0, 0, 0, 0, 1133, 1097, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	1146, 0, 289, 1153, 290, 1152, 0, 1163, 291, 292,
	293, 294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 1156, 330, 1150, 1149, 1069, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	1141, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 1075, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 1088, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 1148, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	1161, 1162, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 1098, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 1143, 1144, 0,
	1104, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1066, 271, 1185,
	462, 463, 1089, 1137, 464, 1151, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 1076, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 1147, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	1077, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 1145, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 1192,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	1063, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 1157, 1158, 1159, 1160, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 1087, 596,
	597, 598, 599, 0, 601, 602, 0, 1070, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 670, 1154, 1191, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1067, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 0, 0, 0, 1060, 1061, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 2334,
	1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 1133, 1097, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 1146, 0,
	289, 1153, 290, 1152, 0, 1163, 291, 292, 293, 294,
	295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 1156,
	330, 1150, 1149, 1069, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 1141, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	1075, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 1088, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 1148, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 1161, 1162,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 1098, 381, 0, 382, 383, 384, 385,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 1143, 1144, 0, 1104, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 1066, 271, 1185, 462, 463,
	1089, 1137, 464, 1151, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 1076, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 1147, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 1077, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 1145, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 1192, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 1063, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 1157, 1158, 1159, 1160, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 1087, 596, 597, 598,
	599, 0, 601, 602, 0, 1070, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 1154, 1191, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1067, 0, 0, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 1060, 1061, 0, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 1689, 1091, 1109,
	1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1067, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 1619, 1091, 1109, 1081, 1082,
	1083, 1079, 1080, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	1097, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 1146, 0, 289, 1153, 290, 1152,
	0, 1163, 291, 292, 293, 294, 295, 296, 1099, 1132,
	1064, 297, 1193, 1194, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 1156, 330, 1150, 1149, 1069,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 1141, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 1075, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	1088, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	1148, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 1161, 1162, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 1098,
	381, 0, 382, 383, 384, 385, 386, 1134, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 1076, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 1147, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 1077, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 1145, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 1192, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 1063, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 1157,
	1158, 1159, 1160, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 1087, 596, 597, 598, 599, 0, 601, 602,
	0, 1070, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 670, 1154, 1191, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 1067, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 1060, 1061, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 0, 1614, 1091, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1060,
	1061, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 1605, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 1133, 1097, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	1146, 0, 289, 1153, 290, 1152, 0, 1163, 291, 292,
	293, 294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 1156, 330, 1150, 1149, 1069, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	1141, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 1075, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 1088, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 1148, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	1161, 1162, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 1098, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 1143, 1144, 0,
	1104, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1066, 271, 1185,
	462, 463, 1089, 1137, 464, 1151, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 1076, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 1147, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	1077, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 1145, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 1192,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	1063, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 1157, 1158, 1159, 1160, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 1087, 596,
	597, 598, 599, 0, 601, 602, 0, 1070, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 670, 1154, 1191, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1067, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 0, 0, 0, 1060, 1061, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 1600,
	1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 1133, 1097, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 1146, 0,
	289, 1153, 290, 1152, 0, 1163, 291, 292, 293, 294,
	295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 1156,
	330, 1150, 1149, 1069, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 1141, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	1075, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 1088, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 1148, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 1161, 1162,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 1098, 381, 0, 382, 383, 384, 385,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 1143, 1144, 0, 1104, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 1066, 271, 1185, 462, 463,
	1089, 1137, 464, 1151, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 1076, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 1147, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 1077, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 1145, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 1192, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 1063, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 1157, 1158, 1159, 1160, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 1087, 596, 597, 598,
	599, 0, 601, 602, 0, 1070, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 1154, 1191, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1067, 0, 0, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 1060, 1061, 0, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 1512, 1091, 1109,
	1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1511,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1067, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 1506, 1091, 1109, 1081, 1082,
	1083, 1079, 1080, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	1097, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 1146, 0, 289, 1153, 290, 1152,
	0, 1163, 291, 292, 293, 294, 295, 296, 1099, 1132,
	1064, 297, 1193, 1194, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 1156, 330, 1150, 1149, 1069,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 1141, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 1075, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	1088, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	1148, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 1161, 1162, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 1098,
	381, 0, 382, 383, 384, 385, 386, 1505, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 1076, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 1147, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 1077, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 1145, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 1192, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 1063, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 1157,
	1158, 1159, 1160, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 1087, 596, 597, 598, 599, 0, 601, 602,
	0, 1070, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 670, 1154, 1191, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 1067, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 1060, 1061, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 0, 1499, 1091, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1060,
	1061, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 1319, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 1133, 1097, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	1146, 0, 289, 1153, 290, 1152, 0, 1163, 291, 292,
	293, 294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 1156, 330, 1150, 1149, 1069, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	1141, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 1075, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 1088, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 1148, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	1161, 1162, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 1098, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 1143, 1144, 0,
	1104, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1066, 271, 1185,
	462, 463, 1089, 1137, 464, 1151, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 1076, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 1147, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	1077, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 1145, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 1192,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	1063, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 1157, 1158, 1159, 1160, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 1087, 596,
	597, 598, 599, 0, 601, 602, 0, 1070, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 670, 1154, 1191, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1067, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 0, 0, 0, 1060, 1061, 1109,
	1081, 1082, 1083, 1079, 1080, 1092, 1093, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1067, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 1093, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	4627, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 4626, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1060,
	1061, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 1133, 1097, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 4625, 1146, 0,
	289, 1153, 290, 1152, 0, 1163, 291, 292, 293, 294,
	295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 4627, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 1156,
	330, 1150, 1149, 1069, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 1141, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	1075, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 1088, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 1148, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 1161, 1162,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 1098, 381, 0, 382, 383, 384, 385,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 1143, 1144, 0, 1104, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 1066, 271, 1185, 462, 463,
	1089, 1137, 464, 1151, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 1076, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 1147, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 1077, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 1145, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 1192, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 1063, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 1157, 1158, 1159, 1160, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 1087, 596, 597, 598,
	599, 0, 4626, 602, 0, 1070, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 1154, 1191, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1067, 0, 0, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 1060, 1061, 1109, 1081, 1082,
	1083, 1079, 1080, 1092, 1093, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	1097, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 1146, 0, 289, 1153, 290, 1152,
	0, 1163, 291, 292, 293, 294, 295, 296, 1099, 1132,
	1064, 297, 1193, 1194, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 4264, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 1156, 330, 1150, 1149, 1069,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 1141, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 1075, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	1088, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	1148, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 1161, 1162, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 4265,
	381, 0, 382, 383, 384, 385, 386, 1134, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 1076, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 1147, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 4263, 531, 1077, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 1145, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 1192, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 1063, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 1157,
	1158, 1159, 1160, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 1087, 596, 597, 598, 599, 0, 601, 602,
	0, 1070, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 670, 1154, 1191, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 1067, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 1060, 1061, 1109, 1081, 1082, 1083, 3117, 3118, 1092,
	1093, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 1133, 1097, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	1146, 0, 289, 1153, 290, 1152, 0, 1163, 291, 292,
	293, 294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 1156, 330, 1150, 1149, 1069, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	1141, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 1075, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 1088, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 1148, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	1161, 1162, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 1098, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 1143, 1144, 0,
	1104, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1066, 271, 1185,
	462, 463, 1089, 1137, 464, 1151, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 1076, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 1147, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	1077, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 1145, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 1192,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	1063, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 1157, 1158, 1159, 1160, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 1087, 596,
	597, 598, 599, 0, 601, 602, 0, 1070, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 670, 1154, 1191, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1067, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 0, 0, 0, 0, 0, 1060, 1061, 1109,
	1081, 1082, 1083, 3115, 3116, 1092, 1093, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 1185, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	601, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1067, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1060, 1061, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 1093, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 1064, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 1069, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 1066,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	1076, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 1077, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 1063, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 1070,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1067, 0, 0, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 2399,
	2400, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 1133, 1097, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 1146, 0,
	289, 1153, 290, 1152, 0, 1163, 291, 292, 293, 294,
	295, 296, 1099, 1132, 0, 297, 1193, 1194, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 1156,
	330, 1150, 1149, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 1141, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	1075, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 1088, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 1148, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 1161, 1162,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 1098, 381, 0, 382, 383, 384, 385,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 1143, 1144, 0, 1104, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 0, 271, 1185, 462, 463,
	1089, 1137, 464, 1151, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 1076, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 1147, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 1077, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 1145, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 1192, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 1157, 1158, 1159, 1160, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 1087, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 1154, 1191, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 2656, 0,
	0, 0, 0, 0, 0, 2654, 2655, 272, 274, 273,
	275, 276, 277, 278, 1093, 279, 280, 0, 1091, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 0, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 0, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 3110, 3111, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1109,
	1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 2093, 2094, 272, 274, 273, 275,
	276, 277, 278, 1093, 279, 280, 0, 1091, 0, 0,
	0, 1133, 1097, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 0, 1146, 0, 289, 1153,
	290, 1152, 0, 1163, 291, 292, 293, 294, 295, 296,
	1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 4627, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 1156, 330, 1150,
	1149, 1069, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 1075, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 1088, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 1148, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 1161, 1162, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 1098, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 1143, 1144, 0, 1104, 0, 399, 400,
	0, 1136, 0, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 1066, 271, 0, 462, 463, 1089, 1137,
	464, 1151, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 1076, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1147, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 1077, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 1145, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 1192, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 1063, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 1157, 1158, 1159, 1160, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 1087, 596, 597, 598, 599, 0,
	4626, 602, 0, 1070, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 1154,
	1191, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	1231, 0, 0, 1060, 1061, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 0, 1091, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 0, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 1132, 0, 297, 629, 630, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 646, 647, 0, 648, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 1217, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 0, 271, 1185, 462, 463, 0,
	1137, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	1223, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 660, 1225, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 231, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 0, 578, 569,
	233, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 1589,
	671, 672, 0, 615, 614, 616, 673, 1231, 617, 0,
	0, 0, 225, 618, 619, 674, 620, 621, 622, 0,
	0, 226, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	0, 1221, 0, 1934, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 1132,
	0, 297, 629, 630, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 1134, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 646, 647, 0, 648, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 1217, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 0, 271, 1185, 462, 463, 0, 1137, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 1223, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 1225, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 231,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 0, 578, 569, 233, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 1589, 671, 672, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 225,
	618, 619, 674, 620, 621, 622, 0, 0, 226, 0,
	0, 0, 3274, 0, 1231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1221, 0,
	1934, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 0, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 1132, 0, 297, 629,
	630, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 646, 647,
	0, 648, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 1217, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 0, 271,
	1185, 462, 463, 0, 1137, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 1223, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 660, 1225, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 0, 617, 0, 1213, 0, 1231, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 1221, 0, 1219, 1133, 0,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 1132, 0,
	297, 629, 630, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	646, 647, 0, 648, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 1217, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	0, 271, 1185, 462, 463, 0, 1137, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 1223, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 660, 1225, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 1231, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 1133, 0, 1221, 0, 1219,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 1132, 0, 297, 629, 630,
	631, 0, 298, 299, 1139, 0, 1120, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 1123,
	1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 1164, 1165, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 1171, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 1134, 1135, 1138, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 1176, 397, 646, 647, 0,
	648, 0, 399, 400, 1178, 1136, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 1217, 411, 413, 412, 0, 414, 1172, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	1127, 1126, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 0, 271, 1185,
	462, 463, 0, 1137, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 1223, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 1166, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 1167, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 1225, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 1130, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 1168, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 1169, 595, 1170, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 1131, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	1231, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 0, 1221, 0, 1219, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 1132, 0, 297, 629, 630, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 646, 647, 0, 648, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 0, 271, 1185, 462, 463, 0,
	1137, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 1231, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 1133,
	0, 0, 0, 4090, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 1132,
	0, 297, 629, 630, 631, 0, 298, 299, 1139, 0,
	1120, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 1164, 1165, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 1171, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 1134, 1135, 1138,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 1176,
	397, 646, 647, 0, 648, 0, 399, 400, 1178, 1136,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 1172, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 1127, 1126, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 0, 271, 1185, 462, 463, 0, 1137, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 1166,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 1167, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 1225, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 1130, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 1168, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 1169,
	595, 1170, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 1131,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 0, 617, 266, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 2503, 2504, 2505, 2522,
	2523, 2524, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 2525, 0, 623, 0,
	1832, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 1817,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 2515, 0,
	308, 309, 310, 307, 311, 0, 312, 2511, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 2516, 2517, 2518, 2519, 362, 363, 364, 638,
	0, 0, 2510, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 2520, 2521, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 2513,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 2514, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 1816, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 1053, 0, 1312,
	2500, 2501, 2502, 2526, 2512, 2506, 0, 2508, 2509, 2507,
	2494, 2495, 2496, 2497, 2498, 2499, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 1317, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 1176, 397, 646, 647, 0, 648, 0, 399, 400,
	1178, 649, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 0, 0, 1185, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 231, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 233,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 1589, 671,
	672, 0, 615, 614, 616, 673, 1586, 617, 1312, 0,
	0, 225, 618, 619, 674, 620, 621, 622, 0, 0,
	226, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 187, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 1317, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	1176, 397, 646, 647, 0, 648, 0, 399, 400, 1178,
	649, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 0, 0, 1185, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	231, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 233, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 1589, 671, 672,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	225, 618, 619, 674, 620, 621, 622, 1312, 1311, 226,
	0, 0, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 187, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	1317, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 1176,
	397, 646, 647, 0, 648, 0, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 0, 0, 1185, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 1312, 1311, 0, 0,
	0, 0, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	1611, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 1317,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 1176, 397,
	646, 647, 0, 648, 0, 399, 400, 1178, 649, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	0, 0, 1185, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1312, 1311, 0, 0, 0,
	0, 1309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 3567,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 1317, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 1176, 397, 646,
	647, 0, 648, 0, 399, 400, 1178, 649, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 0,
	0, 1185, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 2279, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1312, 2193, 0, 0, 0, 0,
	2194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 1611, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 1317, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 1176, 397, 646, 647,
	0, 648, 0, 399, 400, 1178, 649, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 2192, 413, 412, 0, 414, 650, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 0, 0,
	1185, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1312, 1311, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 1611, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 1317, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 1176, 397, 646, 647, 0,
	648, 0, 399, 400, 1178, 649, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 0, 0, 1185,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	1231, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 0, 0, 0, 1595, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 1132, 0, 297, 629, 630, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 646, 647, 0, 648, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 0, 271, 1185, 462, 463, 0,
	1137, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 1053, 617, 266,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 231, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 233,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 1589, 671,
	672, 0, 615, 614, 616, 673, 266, 617, 0, 0,
	0, 225, 618, 619, 674, 620, 621, 622, 0, 0,
	226, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 187, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 271, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 0, 617, 266, 3021, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 1948,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 266, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 4792, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 3517, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 271,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 266, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 1583, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 266, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 3009,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	266, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 3676, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 892, 617, 797,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 2270, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 804, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 890, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 271, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 802,
	583, 584, 585, 586, 587, 803, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 797, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 272, 274,
	273, 275, 276, 277, 278, 2015, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 807, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 804, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 271, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 2014, 544,
	545, 546, 547, 0, 2016, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 802, 583, 584, 585, 586, 587, 803, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 2013,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 797, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	272, 274, 273, 275, 276, 277, 278, 1966, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 807, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 804,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 271, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	1965, 544, 545, 546, 547, 0, 1967, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 802, 583, 584, 585, 586, 587, 803,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 1964, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	795, 617, 797, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 807,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 804, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 802, 583, 584, 585, 586, 587, 803, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 1988, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 0, 0, 807, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	0, 1994, 0, 289, 1984, 290, 2000, 0, 2007, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 2010,
	2011, 0, 0, 298, 299, 0, 0, 1317, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 1156, 330, 1998, 1997, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 1996, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 2005, 2006, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 0, 0, 0, 381, 0, 382,
	383, 384, 385, 386, 0, 0, 0, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 1176, 397, 1991, 1992,
	0, 1987, 0, 399, 400, 1178, 0, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 0, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 0, 0,
	1185, 462, 463, 0, 0, 464, 1999, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 0, 1186, 475, 1187, 0, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 1981, 488, 489, 490, 1982, 491, 492, 493, 0,
	494, 0, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1995, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 0, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1993, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	2009, 572, 573, 574, 575, 0, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 2001, 2002, 2003, 2004,
	0, 600, 0, 592, 593, 594, 0, 595, 0, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 0, 1985, 2008, 0, 615, 614, 616,
	0, 0, 617, 0, 0, 797, 0, 618, 619, 0,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 1975, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 804, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	271, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 802, 583, 584, 585, 586,
	587, 803, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 797, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 807, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 804, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 2313,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 2314, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 802, 583, 584,
	585, 586, 587, 803, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 2315, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 2059, 617, 1312, 2026, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 807, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 1317,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 2023, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 1176, 397,
	646, 647, 0, 648, 0, 399, 400, 1178, 649, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	0, 0, 1185, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 2024, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 2020, 617, 1312, 2026, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 1317, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 2023, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 1176, 397, 646,
	647, 0, 648, 0, 399, 400, 1178, 649, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 0,
	0, 1185, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 2024, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 0, 617, 1312, 2026, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 1317, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 2023, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 1176, 397, 646, 647,
	0, 648, 0, 399, 400, 1178, 649, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 0, 0,
	1185, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 2024, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1312, 1311, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 1317, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 1176, 397, 646, 647, 0,
	648, 0, 399, 400, 1178, 649, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 0, 0, 1185,
	462, 463, 3869, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1312, 1311, 0, 0, 0, 0, 1309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 1317, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 1176, 397, 646, 647, 0, 648,
	0, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 0, 0, 1185, 462,
	463, 3482, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 271,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1639, 0, 1312, 1311, 0, 0, 0,
	0, 1309, 0, 0, 0, 0, 0, 0, 0, 0,
	807, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 1317, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 269,
	0, 0, 0, 0, 0, 1638, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 1176, 397, 646,
	647, 0, 648, 0, 399, 400, 1178, 649, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 0,
	0, 1185, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 1637, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 1636, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1557, 0, 1312, 1311, 0, 0,
	0, 0, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 1317,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 1556, 644, 645, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 1176, 397,
	646, 647, 0, 648, 0, 399, 400, 1178, 649, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	0, 0, 1185, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1517, 0, 1312, 1311, 0,
	0, 0, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	1317, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 1176,
	397, 646, 647, 0, 648, 0, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 0, 0, 1185, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 1484, 0, 1312, 1311,
	0, 0, 0, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 1317, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 1483, 644,
	645, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	1176, 397, 646, 647, 0, 648, 0, 399, 400, 1178,
	649, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 0, 0, 1185, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1306, 0, 1312,
	1311, 0, 0, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 1317, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 1305,
	644, 645, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 1176, 397, 646, 647, 0, 648, 0, 399, 400,
	1178, 649, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 0, 0, 1185, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1312, 1311,
	0, 0, 0, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 1317, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	1176, 397, 646, 647, 0, 648, 0, 399, 400, 1178,
	649, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 0, 0, 1185, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 0, 617, 1312, 2026, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	1317, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 2066,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 1176,
	397, 646, 647, 0, 648, 0, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 0, 0, 1185, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 0, 617, 1312, 1311, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 1317,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 1176, 397,
	646, 647, 0, 648, 0, 399, 400, 1178, 649, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	0, 0, 1185, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 1312, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 1317, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	1176, 397, 646, 647, 0, 648, 0, 399, 400, 1178,
	649, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 0, 0, 1185, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	266, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 2825, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 2822,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 2829, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 3034, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 2828, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 3031, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	3033, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 3030, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	2827, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 3032, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 266, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	2825, 298, 299, 632, 0, 0, 2819, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 2822, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 2829,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 0, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 2828, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 2818, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 2827, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 2826, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 1715,
	617, 266, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 1714, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 1713, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 271, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 1712, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 1710, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 1711, 614, 616, 673, 1459, 617,
	266, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	1461, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 271, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	1223, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 1456, 617, 266,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 1458,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 271, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 1223,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 1363, 617, 266, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 1365, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 271, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 1223, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 706, 617, 266, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 705, 277,
	278, 695, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 698, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 699, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 700,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 694, 617, 266, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	695, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 698, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 699, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 700, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 266, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 272, 274, 273, 275, 276,
	277, 278, 695, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 698, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 699, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	700, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	266, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 272, 274, 273,
	275, 276, 277, 278, 695, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 698, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 3879, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 700, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 266, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 1223, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 3430, 461, 451, 0, 271,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 2979, 617, 266, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 2978, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 271, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	2285, 617, 266, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 271,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 2226, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 2233, 617, 266, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 2232, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 271, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	2219, 617, 266, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 2221, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 2186, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 271,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 1223, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 1561, 617, 266, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 1560, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 271, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	1476, 617, 266, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 1469,
	617, 266, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 1471, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 271, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 1296, 617,
	266, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	1295, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 271, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 1286, 617, 266,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 1285,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 271, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 1283, 617, 266, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 1282, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 271, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 1278, 617, 266, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 1277, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 676, 617, 266, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 271, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 257, 617, 266, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	271, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 266, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 698, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 699, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 700, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 266, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 2322, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 271, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 266, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 2320,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 271, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 266, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 2318, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	271, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 266, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 2239, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 2045,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 271, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 266, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 2039, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 271, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 879, 617,
	266, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 878, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	877, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 266, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 3034, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 4163, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 763,
	617, 266, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	1333, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 1331, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 764, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 760, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 1334, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 759, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 763, 617,
	266, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 1333,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 1331, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 764, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 760, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 1334, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 759, 665, 666, 667, 0, 600, 0, 592,
	1332, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 685, 617, 266,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 684, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 683, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 0, 617, 266, 3021,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 0, 617, 266, 4173, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 4448,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 266, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 4067, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 266, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 3835, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 266, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 2709,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 0, 617, 266, 3021, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 3018, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 266, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 272, 274, 273, 275, 276, 277, 278,
	2295, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 2283, 617, 266, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 763, 617, 266, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 753, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 764, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 760, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 1594, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 759, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 1567, 617, 266, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 1566, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	1551, 617, 266, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 0, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 1549, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 1544,
	617, 266, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 1521, 617,
	266, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	1519, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 1481, 617, 266,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 1464, 617, 266, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 1301, 617, 266, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 1300, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 1292, 617, 266, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 1291, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 266, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 272, 274, 273, 275, 276,
	277, 278, 1245, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	266, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 272, 274, 273,
	275, 276, 277, 278, 769, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 763, 617, 266,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 753,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 751,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 752, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 764, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 754, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 760, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 755, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 759, 665, 666, 667, 0, 600, 0, 592, 757,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 745, 617, 266, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	746, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 708, 617, 266, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 702, 617, 266, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 680, 617, 266, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 266, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 3537,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 266, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 3468, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 266, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 3446, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 266, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 3443, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 266, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 3395, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 3393,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 266, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 3378, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 266, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 2989, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 266, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 746, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 266, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 2257, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 0, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 1263,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 266, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 1196, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 266, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 0, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 0, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 0, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 0, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1792, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1792, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 1786, 1787, 1788, 1789, 1763, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 1791,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 0, 1809, 0,
	0, 0, 0, 0, 0, 1778, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	1787, 1788, 1789, 1800, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1792, 0, 0, 1802, 0, 0,
	1812, 1764, 0, 0, 0, 0, 0, 1791, 1793, 0,
	1811, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 1809, 1817, 0, 1799,
	0, 0, 0, 1778, 1779, 0, 1763, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 1800, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	1786, 1787, 1788, 1789, 0, 0, 0, 0, 1814, 0,
	1769, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 1816, 0, 0, 0, 0, 0, 1802, 0,
	0, 1812, 0, 0, 1798, 1792, 0, 0, 1791, 1793,
	1790, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 1808, 0, 1809, 0, 0,
	0, 0, 1785, 0, 1778, 1779, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 1783, 0, 1803,
	0, 0, 0, 0, 1801, 0, 1780, 1784, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0, 4553,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 1786, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 1775, 1776, 1782,
	1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767,
	1768, 1770, 1771, 0, 0, 0, 0, 4469, 0, 1802,
	0, 1790, 1812, 0, 0, 0, 0, 0, 0, 1791,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 1808, 0, 1809, 0,
	0, 0, 0, 0, 0, 1778, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 1800, 0, 0, 0, 1761, 1762, 0,
	1794, 1795, 1796, 1805, 1806, 1807, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	1792, 1816, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	1814, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 1775, 1776,
	1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 0, 0, 0, 4432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 1786, 1787, 1788, 1789,
	0, 0, 0, 0, 0, 0, 1769, 0, 0, 0,
	0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1792, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 1802, 0, 0, 1812, 0, 0,
	1811, 0, 1816, 0, 1791, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 1808, 0, 1809, 0, 0, 1763, 0, 0, 0,
	1778, 1779, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0, 4431,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 1787, 1788, 1789, 1799, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 0, 1794, 1795, 1796, 1805, 1806, 1807, 1802, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 1791, 1793,
	0, 1798, 1792, 0, 0, 0, 0, 1790, 0, 1764,
	0, 0, 0, 0, 0, 1808, 0, 1809, 1811, 0,
	0, 0, 0, 0, 1778, 1779, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 1800, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 1803, 1784, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 1787,
	1788, 1789, 0, 0, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777,
	0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771,
	0, 1790, 0, 0, 4248, 0, 1802, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 1791, 1793, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 1809, 0, 0, 0, 0,
	0, 0, 1778, 1779, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796,
	1805, 1806, 1807, 0, 0, 1784, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 1798, 1792, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 1814, 1780, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 1775, 1776,
	1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 0, 0, 0, 4086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 1786, 1787, 1788, 1789, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 1761, 1762,
	0, 1794, 1795, 1796, 1805, 1806, 1807, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 1792, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 1802, 0, 0, 1812, 0, 0, 1811, 0, 1816,
	0, 1791, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 1808, 0,
	1809, 0, 0, 1763, 0, 0, 0, 1778, 1779, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804,
	1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768,
	1770, 1771, 0, 0, 0, 0, 4020, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1788,
	1789, 1799, 0, 0, 0, 0, 0, 1769, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 1802, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 1791, 1793, 0, 1798, 1792,
	0, 0, 0, 0, 1790, 0, 1764, 0, 0, 0,
	0, 0, 1808, 0, 1809, 1811, 0, 0, 0, 0,
	0, 1778, 1779, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 1800,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 1803, 1784, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 1790, 0,
	0, 4019, 0, 1802, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 1791, 1793, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 1809, 0, 0, 0, 0, 0, 0, 1778,
	1779, 0, 0, 0, 0, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807,
	0, 0, 1784, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 1798, 1792, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 1814, 1780, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804, 1781,
	1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 0, 0, 0, 0, 4018, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	1786, 1787, 1788, 1789, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 1761, 1762, 0, 1794, 1795,
	1796, 1805, 1806, 1807, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 1792, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 1802, 0,
	0, 1812, 0, 0, 1811, 0, 1816, 0, 1791, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 1808, 0, 1809, 0, 0,
	1763, 0, 0, 0, 1778, 1779, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 0, 0, 3681, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 1787, 1788, 1789, 1799, 0,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 1802, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 1791, 1793, 0, 1798, 1792, 0, 0, 0,
	0, 1790, 0, 1764, 0, 0, 0, 0, 0, 1808,
	0, 1809, 1811, 0, 0, 0, 0, 0, 1778, 1779,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 1800, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	1803, 1784, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 1775, 1776,
	1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 1790, 0, 0, 3192, 0,
	1802, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1791, 1793, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 1809,
	0, 0, 0, 0, 0, 0, 1778, 1779, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 1761, 1762,
	0, 1794, 1795, 1796, 1805, 1806, 1807, 0, 0, 1784,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	1798, 1792, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 1814, 1780, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774,
	1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0,
	0, 0, 3191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 1786, 1787, 1788,
	1789, 0, 0, 0, 0, 0, 0, 1769, 0, 0,
	0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1792, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 1802, 0, 0, 1812, 0,
	0, 1811, 0, 1816, 0, 1791, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 1808, 0, 1809, 0, 0, 1763, 0, 0,
	0, 1778, 1779, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0,
	3190, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 1787, 1788, 1789, 1799, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 1791,
	1793, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 1808, 0, 1809, 0,
	0, 0, 0, 0, 0, 1778, 1779, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 1800, 1794, 1795, 1796, 1805, 1806, 1807,
	0, 0, 0, 0, 0, 0, 0, 1803, 1784, 0,
	0, 0, 0, 1798, 1792, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 1810, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 1799,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804, 1781,
	1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 0, 1790, 0, 0, 3189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 1787, 1788, 1789, 1785, 0, 0, 0, 0, 0,
	1769, 4701, 0, 0, 0, 1761, 1762, 0, 1794, 1795,
	1796, 1805, 1806, 1807, 0, 0, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 1798, 1792, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 1802, 0,
	0, 1812, 0, 0, 1811, 0, 0, 0, 1791, 1793,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 1808, 0, 1809, 0, 0,
	1763, 0, 0, 0, 1778, 1779, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 0, 3154, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 1787, 1788, 1789, 1799, 0,
	0, 0, 0, 0, 1769, 0, 3254, 0, 0, 1814,
	3253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4700, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 1791, 1793, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 1809, 0, 0, 0, 0, 0, 0, 1778, 1779,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 1800, 1794, 1795, 1796,
	1805, 1806, 1807, 0, 0, 0, 0, 0, 0, 0,
	1803, 1784, 0, 0, 0, 0, 1798, 1792, 0, 0,
	0, 0, 3125, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 1810, 0, 0, 0, 0, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 1799, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 3126, 1775, 1776,
	1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1788, 1789, 1785, 0, 0,
	0, 2682, 0, 1769, 0, 0, 0, 0, 1761, 1762,
	0, 1794, 1795, 1796, 1805, 1806, 1807, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	1798, 1792, 0, 0, 0, 2681, 0, 0, 1764, 0,
	0, 1802, 0, 0, 1812, 0, 0, 1811, 0, 0,
	0, 1791, 1793, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 1808, 0,
	1809, 0, 0, 1763, 0, 0, 0, 1778, 1779, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774,
	1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1788,
	1789, 1799, 0, 0, 0, 0, 0, 1769, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 1802, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 1791, 1793, 0, 1798, 1792,
	0, 0, 0, 0, 1790, 0, 1764, 0, 0, 0,
	0, 0, 1808, 0, 1809, 1811, 0, 0, 0, 0,
	0, 1778, 1779, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 1800,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 1803, 1784, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 1790, 0,
	0, 0, 0, 1802, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 1791, 1793, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 1809, 0, 0, 0, 0, 0, 0, 1778,
	1779, 0, 0, 0, 0, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807,
	0, 0, 1784, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 1798, 1792, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 1799, 1050, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 1814, 1780, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804, 1781,
	1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	1786, 1787, 1788, 1789, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 1812, 0, 0, 1798, 1792, 1816, 0, 1791, 1793,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 1808, 0, 1809, 0, 0,
	0, 0, 0, 0, 1778, 1779, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 1786, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 3260, 0, 0,
	0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 1792, 0, 0, 1802,
	3255, 1790, 1812, 1764, 0, 0, 0, 0, 0, 1791,
	1793, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 1808, 0, 1809, 1817,
	0, 0, 0, 0, 0, 1778, 1779, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	1803, 0, 0, 1800, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	1814, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 1775, 1776,
	1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1791, 1793, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 1809,
	0, 0, 0, 0, 1785, 0, 1778, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 1762, 1800, 1794, 1795, 1796, 1805, 1806,
	1807, 1803, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 1798, 1792, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 1810, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	1799, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 1787, 1788, 1789, 1785, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 1798, 1792,
	0, 0, 0, 3193, 0, 0, 1764, 0, 0, 1802,
	0, 0, 1812, 0, 0, 1811, 0, 0, 0, 1791,
	1793, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 1808, 0, 1809, 0,
	0, 1763, 0, 0, 0, 1778, 1779, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1788, 1789, 1799,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 3220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796,
	1805, 1806, 1807, 1802, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 1791, 1793, 0, 1798, 1792, 0, 0,
	0, 0, 1790, 0, 1764, 0, 0, 0, 0, 0,
	1808, 0, 1809, 1811, 0, 0, 0, 0, 0, 1778,
	1779, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 1800, 0, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 1803, 1784, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1788, 1789, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 1790, 0, 0, 0,
	0, 1802, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 1791, 1793, 0, 0, 0, 0, 0, 1785, 1761,
	1762, 0, 1794, 1795, 1796, 1805, 1806, 1807, 1808, 0,
	1809, 0, 0, 0, 0, 0, 0, 1778, 1779, 0,
	0, 0, 1792, 0, 0, 1803, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 1800, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 1817, 1816, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 1787,
	1788, 1789, 0, 0, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 0, 1812,
	0, 938, 0, 986, 0, 0, 1791, 1793, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 1809, 0, 946, 0, 0,
	0, 0, 1778, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 960, 1816, 944, 943, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 962, 0, 0,
	0, 0, 0, 945, 0, 0, 0, 0, 948, 0,
	0, 0, 0, 994, 0, 0, 0, 0, 0, 0,
	0, 0, 957, 958, 0, 0, 0, 0, 0, 0,
	0, 975, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 987,
	950, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 1814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 951, 0, 0,
	0, 0, 0, 0, 0, 0, 984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 985, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 0, 0,
	942, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 954,
	955, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 963, 961,
	0, 0, 0, 0, 0, 0, 956, 0, 0, 0,
	972, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 991, 983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804,
	1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768,
	1770, 1771, 949, 0, 0, 993, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 979, 980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 992, 973, 0, 0, 966, 964,
	0, 969, 0, 0, 0, 0, 0, 970, 0, 0,
	940, 0, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 981, 0, 971, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 990, 0, 0, 0, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 978,
}

var sqlPact = [...]int{
	4904, -1000, -1000, -1000, -1000, 185, -1000, -1000, 181, 180,
	179, 178, 176, 172, 170, 168, 167, 166, 165, -1000,
	-1000, -1000, -1000, -1000, -1000, 163, -1000, -1000, 158, -1000,
	156, 155, 154, -1000, -1000, 151, -1000, 150, -1000, -1000,
	-1000, -1000, 149, 146, 143, 93901, 93352, 94443, 2280, 114651,
	100975, 1935, 83512, 114102, 82963, 113553, 2106, 9676, 113004, 2730,
	142, -1000, 112455, 141, 140, 139, -1000, 111906, -1000, 1947,
	-1000, 137, -1000, 6630, 69188, 135, 134, 129, 2312, 128,
	-1000, 127, 126, -1000, -1000, 124, -1000, 11677, 1472, -1000,
	123, 121, -1000, 288, 98786, 120, 119, 2347, 117, 111,
	67555, 107, 106, 2115, 2858, -1000, -1000, 1983, -1000, -1000,
	104, 101, 100, 99, 98, 97, 96, 95, 93, 92,
	91, -1000, 90, 87, 86, 85, 83, -1000, 82, 81,
	80, -1000, 78, -1000, 76, 74, 73, 72, 71, 70,
	65, 55, 53, 51, 50, 48, 47, 37, 128389, -1000,
	-1000, 1714, 1668, 1666, 1662, 1660, 1639, 954, 36, 35,
	34, 33, 32, 31, 29, 28, 27, 24, 22, 21,
	20, 19, 18, 12, 11, 10, 136, 9, -3, -4,
	-5, -6, -7, -9, 2331, -1000, 1771, 1120, 32249, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 121697, 115193, -10, -70, -11,
	-1000, 3328, 1004, 55992, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 265, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 452, 2110, 725,
	-1000, -1000, -1000, 111364, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2279, -64, -1000, 1960, -1000, -1000, -1000, -1000,
	-1000, 724, -1000, 2278, 300, 2205, -1000, -1000, -1000, 3404,
	2433, 3818, 3817, 3816, 3815, 3814, 121155, 1834, 3812, 2514,
	3809, 3808, 3806, 3803, 3802, 3801, 3799, -1000, 92803, 1014,
	92254, 91705, 3391, 110822, 91156, 110273, 76935, 48029, 1028, 3403,
	-1000, -1000, -1000, -1000, -1000, -1000, 115193, -1000, 1013, -1000,
	-1000, 3798, 3797, 2018, 723, 100426, -1000, 1631, -1000, 897,
	33977, -1000, 1181, -1000, 33977, 251, -1000, -1000, -1000, -1000,
	-1000, -1000, 3796, 3795, 3794, 3793, 3791, -1000, -1000, 82414,
	25285, 81865, 81316, 109724, 24724, 90607, 90058, 3788, 3787, 3786,
	109175, 76374, 1008, 1959, 1407, -1000, -1000, -1000, -1000, -1000,
	-1000, -31, 74130, 3542, 115193, -1000, 248, -1000, -1000, -1000,
	-1000, -1000, -1000, 47441, 893, 46853, 977, 46265, 878, -1000,
	-1000, -1000, -1000, 75813, -1000, 108626, 2428, 3785, 3784, 1119,
	3782, 3274, 1801, 3781, 1787, 1198, 3776, 3775, 3774, 3773,
	3772, 3769, 3768, 1446, 108077, 2940, 1501, 107528, 1651, 75252,
	1007, 89509, 94443, 2611, 106979, 1387, 1381, -1000, -1000, -1000,
	-1000, 3103, 2844, 2840, 1330, -1000, -1000, -1000, -1000, 59294,
	7350, 6580, -1000, -1000, 10261, 106430, 62089, 94443, 94443, -1000,
	-1000, -1000, -1000, -1000, 45677, 777, 45089, 1002, -1000, -1000,
	59853, 2887, -1000, -1000, -1000, -1000, 44501, 553, 43913, 991,
	115193, -1000, 2936, 1888, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2299, 1578, 3579, 2733, 74691, 2127, 1350, 3336, 3102, 3100,
	1476, 3094, 3767, 2557, 3088, 3087, 3079, 3072, 3033, 1514,
	2561, 863, 2574, 31661, 2926, 1640, 43325, 1488, 1459, 3025,
	3019, 3589, 1943, 1984, 2042, 80767, 3766, 3763, 3309, 3006,
	2991, 2773, 2978, -1000, 2884, 1442, -1000, -1000, -1000, -1000,
	1425, -1000, -1000, -1000, -1000, 85138, -1000, -1000, 1249, -1000,
	-1000, 1249, -1000, -1000, -1000, -1000, -1000, 1328, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1771, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2066, -1000, 2015, -1000, -1000, 2518, 3315, 3315, 3315,
	3401, 419, 417, -1000, 136, -1000, -1000, 127943, -1000, -1000,
	48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605, 2109, -1000,
	721, -1000, -1000, 765, -1000, 720, 650, 555, -1000, -1000,
	-1000, -1000, -1000, -1000, 717, -1000, -1000, -1000, -1000, -1000,
	-1000, 3542, -1000, 28145, -1000, -1000, -1000, 448, 716, 48605,
	-1000, -1000, 3614, 3613, 944, -1000, 224, 909, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2935, 714, 713, -1000, 711, 710, 706, 705, 703, -1000,
	-1000, -1000, 698, 696, 695, 694, 691, 688, 686, 674,
	-1000, 1988, -1000, -1000, -1000, -1000, -1000, -1000, 640, 639,
	639, 639, -1000, 1000, -1000, -1000, -1000, 291, 638, 261,
	635, 634, 632, -1000, 673, 672, 671, 669, 664, 661,
	658, 655, 653, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	998, -1000, -1000, -1000, -1000, -32, 115193, -1000, 452, -32,
	-1000, -1000, 652, -1000, 36293, 36293, 36293, -1000, -1000, 2276,
	48605, -1000, 2509, -1000, -24, -24, 808, 57633, -1000, 54873,
	808, 554, 783, 63732, -1000, 2882, -1000, -1000, 651, 220,
	-1000, -1000, -1000, -1000, 25844, 2881, 115193, 115193, 94443, 94443,
	94443, 3762, 3186, 48605, -1000, -1000, 68639, 115193, 94985, -1000,
	-1000, 3498, 69730, 68097, 115193, 2934, 71921, 3758, -1000, -1000,
	-1000, -1000, -1000, 3168, 3756, 3755, 3754, -1000, 115193, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 228, 3166, -1000, -1000,
	98237, 228, 3164, -1000, 228, 3162, -1000, 97695, -1000, -1000,
	2155, 3138, -1000, -1000, 233, 3137, -1000, -1000, -1000, 230,
	3128, -1000, -1000, 218, -63, 3124, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 127943, -1000,
	-1000, -1000, 71372, -1000, 3313, -1000, -1000, 115193, -1000, 48605,
	-1000, 3497, 1606, 78043, 3438, -43, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2486, 2559, 1118, 2308, -1000, 3197, 1612,
	-1000, 33977, 3262, -1000, -1000, -1000, 217, 25844, -1000, -1000,
	-1000, -1000, -1000, -1000, 2215, 3122, 1380, -1000, 2295, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2077, 3117, -1000,
	2052, 3113, 2004, -1000, -1000, 2251, -1000, 3290, -1000, -1000,
	1777, 3109, -22, -1000, -1000, 2231, -1000, -1000, -1000, -1000,
	2032, -1000, 962, 3107, -1000, 88960, 3097, 61530, 59853, 74130,
	-39, -1000, -1000, -1000, -1000, -176, -1000, 24163, 127943, -1000,
	-1000, -1000, -1000, 1724, 127943, 888, -1000, -1000, 3106, -1000,
	127943, 864, -1000, -1000, 3069, -1000, 2932, -1000, -1000, 2391,
	-1000, -1000, 3751, -1000, -1000, 3749, -1000, 3748, 3747, 3745,
	-1000, 1695, 1951, 3744, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 88418, 2275, -1000, -1000, 87320, 2929, -1000, 2390,
	3434, -1000, 87869, 1006, -1000, 962, 2386, -1000, 97153, 988,
	2384, -1000, 3743, 3385, 2688, 962, 2382, -1000, -1000, -1000,
	-1000, -1000, 994, -1000, 65370, -1000, 65370, -1000, 1585, -1000,
	120613, -24, 94443, 3542, -1000, -73, -1000, -1000, -1000, 1004,
	-1000, 58745, -1000, 58745, 99877, 77494, 925, 708, 67006, 127943,
	-1000, -1000, -1000, -1000, 127943, -1000, -1000, -1000, -201, 2731,
	-1000, 77494, 60971, 127943, -1000, -1000, -1000, -1000, 127943, -1000,
	-1000, -1000, 77494, 87320, -1000, 105881, 86778, -1000, -1000, 1422,
	2560, -1000, -1000, -1000, 77494, 1256, 77494, 77494, 77494, -1000,
	105332, -1000, -1000, 2041, 1250, 3294, 2011, 94443, -1000, 1819,
	-1000, -1000, -1000, 3325, 115193, -1000, -1000, 2928, -1000, 70823,
	96611, -1000, 96069, -1000, 95527, -1000, 94443, -1000, 94443, -1000,
	3742, 3741, 3740, -1000, -1000, 3739, -1000, 3737, 3316, -1000,
	690, 42737, 127943, 3314, -1000, 3729, 3429, 2926, 127943, -1000,
	3096, 1671, 1670, 115193, -1000, -1000, 115193, -1000, 115193, -1000,
	-1000, -1000, 1534, -1000, -1000, 2476, -1000, -1000, -1000, -1000,
	94443, 94443, 94443, 94443, 1398, -1000, -1000, -1000, 2992, 3728,
	1699, -1000, 1810, -1000, 2879, 3329, -1000, 1420, 1672, -1000,
	-1000, 240, -1000, -1000, -43, -1000, 120071, -1000, 2518, -1000,
	115193, -1000, 2465, 2905, 2925, 1647, 2289, 2592, -1000, 42149,
	2573, 52061, 2294, 136, -1000, -1000, 136, 136, 33401, -1000,
	-1000, 69730, 69730, 25844, 1371, 48605, 48605, 48605, 48605, 48605,
	48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605,
	48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605,
	48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605, 48605,
	48605, 2024, 48605, 1323, 48605, 48605, 48605, 48605, 2266, -1000,
	-1000, 1925, 498, 2049, 650, -1000, -1000, -1000, 3549, 3549,
	3549, 440, 440, 440, 128168, 128168, 577, 3727, 765, -1000,
	48605, -1000, 113, 58182, 48605, 26405, -1000, 417, 9963, 2463,
	-1000, 413, 26993, -1000, -1000, -1000, 28145, 555, 41561, 48605,
	983, 127943, -1000, -1000, 1294, 3554, 23603, 2950, 2765, 649,
	803, 802, 31073, 30485, 29897, 29309, 793, 48605, 48605, 48605,
	48605, 48605, 48605, 48605, 48605, -1000, -1000, 3581, -1000, 3554,
	-1000, -1000, -1000, -1000, 3554, 1352, 1340, 3554, -1000, 3554,
	3554, 7786, 7786, 40985, 40397, 39809, 52637, 39221, 48605, 28721,
	38633, 38045, -1000, 115193, -32, 3494, 48605, 255, -1000, 126477,
	-1000, 255, 255, 647, -74, 127943, 2706, 2706, 56539, 2652,
	2117, 2117, 2117, -1000, 808, 19094, 808, 104241, 2161, 808,
	808, 214, 263, 410, 54326, 2509, 104241, 751, 645, -12,
	-13, -14, -1000, -1000, -17, -19, -1000, -1000, 94443, 644,
	26405, 25844, 213, 1968, -75, 2589, 2588, 2587, -1000, 2580,
	-1000, 1716, -81, 1306, 94443, 115193, 1397, 3726, -71, -1000,
	6419, -83, -1000, 1144, 212, 3554, -1000, -1000, -1000, -1000,
	-1000, 3725, 3724, -1000, 993, 643, 641, 738, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 640, 639, 639, 639,
	-1000, 291, 638, 261, 635, 634, 632, -1000, -1000, -1000,
	-1000, -1000, 2878, 94443, 115193, 1390, 3722, -176, 94985, -86,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 115193, -1000,
	-1000, -1000, 3721, -1000, 94443, -1000, -1000, 94443, 228, 3067,
	-1000, 94443, -1000, 94443, 225, 3065, -1000, -1000, 115193, -1000,
	94443, 94443, -1000, 115193, 115193, 115193, 77494, 77494, 235, -1000,
	94443, 868, -88, 1130, -43, -1000, -1000, -1000, 1249, -1000,
	2023, -1000, -1000, -1000, -1000, -1000, -1000, 1438, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 944, -1000, -1000, -1000,
	-1000, -1000, -1000, 3570, 3565, -35, -1000, -1000, 25844, -1000,
	-45, 1625, 1828, 1248, -1000, 80218, 2431, 3299, 3719, 2662,
	3281, 1569, -1000, 1502, -1000, 3428, 85138, 3456, 3465, 1277,
	-1000, 2877, -1000, -1000, 894, 1675, 1686, 1245, 1243, 85138,
	2052, -1000, 69730, -1000, 2622, 3399, 1346, 1424, 1346, 1346,
	1354, -1000, 85138, 1683, 1239, 1236, 1235, 1855, 1844, -1000,
	-1000, 1963, -1000, 1234, 1227, 807, 1823, -1000, -46, 3448,
	3464, 1273, -1000, 2875, 1225, -1000, -1000, -1000, 3398, 94443,
	25844, 1531, 1530, 1523, 1682, 1222, -38, -1000, 3444, 1221,
	1217, -1000, 4851, -1000, 77494, 1942, 3061, 2728, -1000, 1419,
	2727, 846, 2723, -1000, -1000, -1000, 846, -39, 74130, 115193,
	211, -1000, 113, 48605, 48605, 113, 48605, 113, 3424, 3060,
	-1000, -1000, -1000, -1000, -1000, 3717, 1889, 2512, -1000, -1000,
	630, 2381, 2874, 115193, 2621, -40, 94443, -1000, 70281, 3059,
	72470, 2052, 2378, -1000, -1000, 86229, -1000, 3056, 452, 2367,
	-1000, 729, 3716, 3054, -1000, 119529, -1000, 3313, 1185, 3053,
	1064, 842, 3493, -1000, 842, 65912, -1000, 115193, -1000, -24,
	5949, 79134, -89, -90, 409, -1000, 104790, 115193, 1063, 79676,
	115193, 3251, 959, 59853, -1000, 59853, -91, -201, 2722, 1479,
	925, 925, 846, -1000, 846, -1000, 94443, 2924, -1000, -1000,
	77494, 925, 925, 925, -1000, -1000, -1000, -1000, 3709, 3707,
	3706, 3694, -1000, -1000, 960, 94443, 115193, 94443, -1000, 207,
	-1000, 115193, -1000, 115193, 115193, 94443, -1000, 960, 115193, 960,
	115193, 960, 115193, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	113, -1000, -1000, 127943, -1000, 48605, -1000, -1000, 3676, 1596,
	-1000, 2921, -1000, 2919, -1000, 14, -1000, -1000, 1766, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1872, -1000, -1000, -1000,
	-1000, 94443, 94443, 94443, 94443, 115193, 3227, -1000, 115193, 3214,
	94443, -1000, -1000, 85138, -1000, 2465, 2905, -1000, -1000, -1000,
	-1000, -1000, -1000, 1386, 2226, -1000, 2553, -1000, 1552, -1000,
	-1000, -1000, 127943, 53196, -1000, -1000, 127943, 1768, -1000, 51485,
	50909, -1000, -1000, 1703, 94443, 2637, -1000, 2637, -159, -1000,
	126303, 2550, 94443, -1000, -1000, -1000, -1000, -1000, 891, 563,
	563, 1238, 1238, 1238, 1238, 3400, 6728, 6037, 6350, 6809,
	6809, 687, 687, 687, 687, 687, 6809, 5052, 440, 440,
	5052, 5052, 5052, 5052, 5052, 440, 440, 440, 6809, 6809,
	6809, 440, 128168, 13042, 10823, 48605, 48605, 1216, 1910, 498,
	8520, 48605, 5354, 5354, 5354, 5354, -1000, 2188, -1000, -1000,
	-1000, -1000, 2868, 629, 52637, 52637, -1000, -1000, -1000, -1000,
	27569, 48605, -1000, -1000, -1000, -1000, 37457, -1000, -1000, 125611,
	-311, 406, -1000, 204, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 404, -80, -34,
	-1000, 48605, 48605, 48605, 393, -1000, 202, 48605, 115193, -1000,
	17873, 749, -138, -1000, -96, 1394, -1000, 48605, -1000, -1000,
	1215, -1000, 1213, 1210, 1207, -1000, 628, 390, -1000, 197,
	-1000, 2112, 626, 625, 48605, -1000, -1000, -1000, -1000, -1000,
	125437, -1000, -1000, 125172, -1000, -1000, 124974, -1000, -1000, 124800,
	-1000, -1000, -1000, 127745, 17285, 16681, 16245, 8701, 14257, 11250,
	-97, 389, -105, 387, 884, 877, 385, 384, 382, -108,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -110, 381, -1000, 2856, -80, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 378, -1000, 375, -1000, 127571,
	-80, 374, 7568, -1000, 52637, 52637, 52637, 52637, -1000, 373,
	-1000, 126044, -1000, 127312, 36881, 36881, 36881, 370, 127131, 48605,
	-80, -113, -1000, -115, -1000, -1000, 540, -116, 978, 36293,
	55440, 25844, -1000, 978, 978, 48605, -1000, 48605, 2569, -1000,
	-1000, -1000, -1000, 2568, 2048, 2706, 56539, -1000, -1000, -1000,
	-1000, 104241, -1000, 3542, 2863, -1000, 104241, -1000, -1000, 115193,
	452, -1000, 104241, 104241, 25844, 808, -1000, 808, 104241, 718,
	-1000, -1000, -1000, -1000, -1000, 368, 62636, -34, 195, 25844,
	962, -1000, -1000, 2631, 2631, 2631, 2631, -1000, -1000, 115193,
	1204, -41, -102, 2719, -1000, 3514, -1000, 2006, -1000, 69730,
	-1000, 763, 1103, 25844, -1000, -1000, -1000, 623, -1000, 3554,
	3554, -1000, 3554, 115193, 2854, 229, 2718, -1000, 206, 72470,
	72470, 3675, -1000, -1000, 228, -1000, 94443, 228, 228, -1000,
	94443, 94443, 2155, -1000, 233, -1000, 230, -1000, -1000, -63,
	-1000, 973, 33977, -1000, 1249, -1000, -1000, 1543, -1000, 1938,
	-1000, 1209, -1000, -1000, -1000, -1000, 33977, -1000, 2534, 115193,
	115193, 94443, -1000, 115193, -1000, 2038, 72470, -1000, 2361, 118987,
	2350, 69730, 115193, -1000, -1000, 621, 902, 2546, 2545, 1060,
	115193, 115193, 2538, 118445, 117903, -1000, 3674, 115193, 2111, 48605,
	3392, 2051, 2138, 113, 113, -1000, 113, 113, 113, -1000,
	616, 1318, 94443, 94443, 115193, 72470, 94443, 1898, -1000, -1000,
	-1000, -1000, -1000, 85680, -1000, -1000, 3577, 3576, -1000, 1346,
	-1000, -1000, -1000, 1346, 2052, 1840, 115193, 72470, 94443, 72470,
	117361, 116819, -1000, 1677, 115193, 1434, -1000, 807, 2014, 113,
	113, -1000, 113, 113, 113, 615, 25844, 1999, -1000, 2956,
	115193, 3611, 116277, 3607, 115193, 115193, 115193, 72470, 3312, 115193,
	115193, 72470, 4851, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 73588, 1071, 962, 1650, 1202, 1201,
	85138, 2001, 1638, 115193, 59853, 958, 59853, 2694, -1000, -1000,
	23043, -1000, 127943, 127943, -1000, 127943, -1000, 70281, 115193, -1000,
	1003, 115193, 79676, 911, 3040, 64828, -176, 925, 77494, 94443,
	-40, 2621, 115193, -1000, -1000, 2052, 3036, 452, 2356, -1000,
	77494, 3491, 3035, 595, 3670, 3663, -1000, 94443, 2270, 2355,
	-1000, -1000, 115735, 3178, 807, 115193, 978, 56539, 1812, -1000,
	63185, 1027, 115193, 1760, 130, -1000, -1000, -1000, 2, 115193,
	-1000, 780, -1000, -1000, 5949, 5949, 925, -246, 582, -1000,
	838, 832, 60412, 77494, -118, -1000, -1000, -1000, -1000, 2350,
	94443, 115193, 1274, 2680, 115193, -121, -1000, 194, 566, -1000,
	3204, -1000, -201, -1000, 959, 59853, 2851, 2847, -1000, -1000,
	972, -1000, 1412, 925, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -25, 115193, -176, -176, -52,
	-41, -1000, 960, -1000, 960, -1000, 960, -1000, 127943, -1000,
	-1000, 1594, 1591, 115193, -1000, -1000, 115193, 25844, 115193, 94443,
	25844, 94443, 2903, 2902, -1000, -1000, -1000, 115193, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1079, -1000, 1768, 2225, -1000,
	555, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2451, -1000, -42, 33401, 849, -1000, -1000, 94443, -27, 48605,
	48605, 7610, 5369, 48605, 52637, 52637, -1000, 48605, 5301, -1000,
	-1000, -1000, -1000, -1000, 2845, 552, 48605, 69730, 7530, 6137,
	-1000, 363, 10571, 5052, -1000, 48605, -1000, 579, -1000, 360,
	35717, -1000, 126675, -36, -123, -1000, 19667, -80, -124, -1000,
	-1000, 762, -1000, 3104, -1000, 48605, 126940, 2417, 1848, 1767,
	1608, 3554, 3606, 22483, -1000, 66459, 981, 2173, 124535, -1000,
	-1000, -1000, -1000, 69730, 69730, 48605, 48605, -1000, 48605, 48605,
	48605, -1000, -1000, -1000, 3554, 857, -1000, -1000, -1000, 857,
	-1000, -1000, 1346, -1000, 1346, -1000, 48605, -1000, -1000, 2830,
	48605, -1000, 69730, 69730, 52637, 52637, 52637, 52637, 52637, 52637,
	52637, 52637, 52637, 52637, 52637, 52637, 52637, 52637, 52637, 52637,
	52637, 52637, 52637, 52637, 2554, 52637, 3541, 3541, 3541, 1363,
	-1000, 2901, 2830, 48605, 48605, 69730, 344, 341, 340, -1000,
	48605, -80, -1000, -1000, 7470, 551, -1000, 2442, -1000, 2763,
	-1000, 48605, -1000, -152, -1000, 2509, -1000, -1000, 2763, 2763,
	-126, 127943, 56539, 56539, -1000, 548, 48605, 2563, -1000, -1000,
	741, -309, -1000, 831, -1000, -1000, -1000, -1000, -1000, 452,
	-1000, -1000, -1000, 191, 104241, 104241, 740, -1000, -129, -1000,
	-1000, -135, -1000, 3490, 339, 25844, -1000, 978, 2655, -1000,
	-1000, -1000, -1000, -1000, -1000, -176, 115193, 115193, 1637, 2199,
	3602, -1000, 3574, 758, 733, 189, 3554, 337, 336, 335,
	-176, 115193, 115193, 1634, 115193, -1000, -1000, -1000, -1000, 228,
	-1000, -1000, -1000, 225, -1000, -1000, -1000, -1000, 2610, -1000,
	-43, -1000, -1000, -1000, 48605, -1000, -1000, 3298, 1200, 1196,
	-1000, -1000, -1000, -1000, 2871, -1000, 3032, -1000, 2349, -1000,
	1034, -1000, 1955, -1000, 48605, 547, 2675, 546, 545, 3662,
	2031, 3659, 1062, 3029, 2155, 3027, 2155, -1000, -1000, -1000,
	880, -1000, 127943, 2051, -1000, 543, 542, -1000, -45, 1597,
	1786, 1194, 971, -1000, -1000, -1000, -1000, 48605, 48605, 103699,
	-1000, 458, 3290, -28, -1000, -1000, -1000, 1630, 1189, 1186,
	-1000, -1000, -1000, -1000, 2052, 1618, 1184, 1183, -1000, -1000,
	-1000, -1000, -1000, 2345, -1000, -1000, 3022, 969, -1000, 2979,
	2967, 856, 115193, -1000, 968, -1000, -1000, -1000, -1000, 48605,
	-1000, -46, 1182, 3442, 2340, 94443, -1000, 2155, 3010, 1177,
	-1000, 1176, -1000, -1000, -1000, 3443, 3440, 1173, -1000, -1000,
	-1000, -1000, -1000, 73029, -1000, 115193, 72470, 94443, 1794, -1000,
	-1000, 84054, 84596, 115193, -176, 846, -1000, 2488, 846, 958,
	2829, -1000, 2606, 967, 94443, 3657, 334, -149, -47, 69730,
	3488, -1000, 2284, 578, 94443, 854, -1000, 3542, -1000, -1000,
	-1000, 963, -1000, 3431, 94443, 3487, 3005, 962, 113, 94443,
	3585, -1000, -1000, 3484, 94443, 3001, 2265, 2334, 2490, 807,
	78592, 962, 2166, -62, -1000, 1760, 35129, 3288, -154, -1000,
	-1000, -1000, 978, 65912, 56539, 48605, 3655, -156, -1000, -1000,
	-1000, -1000, -1000, 101524, 101524, 77494, 77494, 77494, 925, 115193,
	115193, 79676, -1000, -1000, 541, 115193, 115193, 539, -1000, 115193,
	115193, 3654, 77494, -48, 538, -1000, 830, 829, 827, -1000,
	-1000, -1000, -1000, -1000, -1000, 959, -1000, -201, 59853, 113,
	-1000, 2189, 94443, -1000, 21923, -1000, -1000, -1000, -1000, -1000,
	-1000, 960, -176, -1000, -1000, 2050, 2292, 2050, 1744, 1735,
	-1000, -1000, 2208, -1000, -1000, -1000, -1000, 2597, 3286, 25844,
	3397, 5354, 48605, 48605, 361, 5393, 2071, 5354, 48605, 48605,
	69730, 6635, -157, 48605, 48605, -1000, 48605, 732, 127943, -1000,
	3601, 48605, 330, 329, -1000, -1000, -1000, 3546, -1000, -1000,
	-1000, 127943, 48605, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	326, -1000, 188, -1000, -1000, -1000, 122239, -1000, 48605, 324,
	3355, -1000, 323, 321, 617, 6022, 124337, 124163, 123898, 318,
	-1000, -1000, 317, 315, 127943, 2901, 127943, -1000, -1000, 919,
	919, 1344, 1344, 1344, 1344, 3541, 524, 1072, 594, 408,
	408, 408, 477, 1363, 1363, 408, 408, 408, 1363, 2821,
	2499, 537, 7762, -1000, -1000, 127943, 127943, 314, -1000, -1000,
	-1000, -80, 313, 7470, -1000, 2755, 3354, 127943, -1000, 56539,
	2755, 2755, -1000, -1000, 2048, 115193, 127943, 56539, -1000, 2863,
	-1000, 20238, -1000, 25844, -1000, -1000, -1000, -1000, 3542, -1000,
	62636, -1000, 536, -1000, 3, -1000, 2655, -1000, 826, -1000,
	-1000, 77494, 77494, -176, -147, 115193, -1000, -1000, 727, 3651,
	756, 25844, 312, -1000, -1000, -1000, -176, -176, 115193, -176,
	-1000, -1000, -1000, 3245, 127943, 115193, 115193, 1482, 103157, 115193,
	3000, -1000, 2216, -1000, 1060, 123700, 57086, -1000, 57086, 115193,
	-1000, -1000, -1000, 1896, 1499, 3649, 1109, -1000, 3327, 115193,
	-1000, 115193, -1000, -1000, -1000, 115193, 115193, 94443, 115193, -1000,
	72470, 2986, -163, 127943, -49, -1000, 825, -1000, 1374, -1000,
	21363, 115193, 72470, 94443, 115193, 72470, 94443, 2999, 115193, 2099,
	-1000, -1000, 2966, -1000, 2984, -165, 25844, -1000, 3598, 3597,
	2998, 3331, -1000, 115193, 3593, 115193, 94443, 3243, -1000, -1000,
	-1000, -1000, -1000, 1613, 1174, 1171, 2262, -50, 2255, 2195,
	-52, 958, -53, 530, -1000, 824, -1000, -1000, 823, -1000,
	958, -1000, 77494, 59853, 3648, 452, -1000, 2661, -1000, 99328,
	2180, 113, -1000, 3647, 102073, 529, -1000, 2182, -1000, 618,
	-1000, 2484, 72470, 2052, 113, 94443, -1000, -1000, 452, 310,
	-54, -1000, 3039, 1048, 25844, 94443, 2997, 2494, 807, 78592,
	-1000, 1185, 2592, -1000, -55, -1000, 637, 113, 2166, -1000,
	-62, 127943, -1000, 822, -1000, -166, -1000, -1000, 308, -1000,
	3242, 3241, -1000, 2790, 57086, 528, 527, 115193, 3240, -1000,
	-1000, -171, 2333, 2333, 77494, 59853, 77494, -1000, 959, 846,
	-1000, 2327, -1000, -1000, -1000, -1000, -1000, 25844, 1478, -1000,
	526, 508, -1000, -1000, -1000, -1000, 3286, 5354, 5354, 48605,
	48605, 48605, 5354, 6635, -181, -1000, 5354, 5354, -80, -1000,
	-1000, 126675, -1000, -1000, -1000, 127943, -1000, 20803, 2056, -1000,
	123526, -1000, 33401, -1000, -1000, 48605, 48605, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 52637, 2814, 506, 69730, -1000,
	-1000, 302, 975, 48605, 50333, 2509, 975, 975, -1000, -182,
	-1000, -1000, -1000, 3542, 3, -1000, -1000, 3646, 25844, -1000,
	77494, -1000, -1000, 3644, -180, 755, -1000, 3640, -1000, -1000,
	110, -1000, -1000, -1000, 2716, 3483, -1000, 1822, -1000, 115193,
	-1000, 115193, -1000, 25844, 115193, 2788, 1206, -1000, 902, 2533,
	504, 52637, 94443, 886, -1000, 3508, 2754, -187, -1000, 115193,
	48605, 115193, -188, -189, 2326, -1000, -1000, 1205, 48605, -1000,
	-1000, -1000, 69730, 503, 2155, 2155, -194, -195, -1000, -1000,
	-1000, 48605, 1170, 115193, 34553, -1000, 3636, 3290, -1000, -1000,
	-1000, -1000, -1000, -1000, 115193, -1000, 115193, -1000, 48605, 1169,
	-1000, -1000, -1000, 3591, 2155, 25844, 2155, -1000, 2155, 3331,
	1106, 115193, 72470, 94443, 1673, 1673, 2828, -1000, 2481, 2481,
	77494, 59853, -1000, -63, 958, -1000, 3482, 2658, 3635, -1000,
	-1000, -1000, -1000, 2524, -1000, -1000, 115193, 2519, 938, -1000,
	-203, -1000, 819, 818, 79676, 911, 898, -1000, -65, 502,
	-1000, 814, -1000, -1000, -1000, -1000, 452, 3481, -1000, 3590,
	501, 500, 115193, 2252, 499, 25844, 3283, 807, 78592, -1000,
	3178, 1760, -1000, 2335, 115193, 3280, -1000, 2592, 498, -1000,
	925, 495, 494, 2485, 2485, -204, 57086, 57086, -205, 493,
	925, -1000, -206, -1000, -1000, -1000, -1000, -1000, -66, -1000,
	865, 784, -1000, -1000, 94443, 94443, 48605, 48605, -1000, 5354,
	5354, 5354, -1000, 298, -1000, -1000, 2166, 3353, -1000, -67,
	123261, 123070, 8234, 52637, 69730, -211, -1000, -1000, 115193, 127943,
	-68, -1000, 127943, 492, 491, 429, -1000, -1000, -1000, 580,
	-1000, -1000, -1000, 115193, 3633, -1000, 115193, 102615, 115193, -1000,
	-1000, 1628, -1000, -1000, -1000, 115193, 2332, -1000, -1000, -1000,
	1059, 48605, 7762, 489, 48605, -1000, 3477, -1000, 2648, 2834,
	1937, 57086, -1000, 3286, -1000, 122889, -1000, 1038, 1868, -1000,
	-1000, -1000, 127943, 3331, 57086, -1000, -1000, 486, 485, 127943,
	482, 813, 2813, -1000, -1000, -1000, -1000, -1000, 127943, 464,
	3442, -1000, -1000, -1000, -1000, 2155, 94443, -1000, -1000, -1000,
	1161, -1000, -1000, -1000, -1000, 3630, 3629, 2804, 84054, -1000,
	-212, -1000, -1000, 1909, 113, 2019, 2712, -1000, 2180, 457,
	-1000, -1000, 2192, 2601, -1000, 102073, 33977, 33977, 294, 3471,
	898, -1000, 3537, -1000, 3233, 3233, 48605, 3470, 113, -1000,
	3585, 57086, -1000, 94443, 57086, 2247, 1963, 2468, 78592, -1000,
	2490, -1000, -1000, -217, 115193, 1760, -1000, -1000, 77494, 77494,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1038, -218, -224, -1000, 77494, -1000, -1000, 2327, -1000,
	115193, -1000, 115193, -1000, -1000, -226, -229, -1000, 2063, 48605,
	33401, -1000, -1000, 8234, -231, -1000, -69, -1000, 3462, 50333,
	3627, 3624, 3622, -1000, -176, -1000, -176, -1000, 1818, -1000,
	-1000, -1000, 2996, 2758, 122791, 2445, 115193, 18481, -1000, 2824,
	-1000, -1000, 2658, 456, -1000, -1000, -1000, -1000, 849, 115193,
	2658, 2748, 94443, 1049, -232, 2050, 2050, 48605, 32825, 2080,
	48605, -1000, -1000, 3331, 115193, -1000, -1000, 115193, 2245, -1000,
	2789, 3567, -1000, 911, -1000, 2079, 115193, -1000, 3320, -1000,
	3239, -1000, -1000, -1000, 2661, 113, -1000, -1000, -1000, -234,
	127943, 113, -1000, 286, -237, 1048, -239, 94443, 1856, -1000,
	807, -1000, 2494, 978, -1000, -1000, -240, -245, 1937, 1038,
	2014, -248, -1000, -250, -253, -1000, -1000, 281, 49757, 49757,
	49757, -80, -159, -1000, 115193, 453, -1000, -1000, -1000, -1000,
	-1000, 2889, 951, -1000, 2217, 1876, 275, 1069, -1000, -1000,
	2014, 115193, -1000, -1000, -1000, 947, 452, -1000, 48605, 1038,
	-255, -1000, 1026, -256, -1000, 1025, -264, -1000, 2798, -1000,
	-265, 2155, -263, 223, 1673, 939, 3423, -1000, -1000, -1000,
	2192, 94443, -266, -1000, -1000, 2385, -1000, 2658, 938, -1000,
	-1000, -1000, 1038, 451, 1937, 450, 1463, 807, -1000, -1000,
	1346, 3283, 3114, 925, 925, 2658, 1937, 920, -1000, 925,
	-1000, -1000, -1000, 3021, -1000, 53755, 2234, 1730, 125870, 3021,
	3021, -1000, -1000, 115193, 3412, -1000, 2244, 2242, 1474, -1000,
	-1000, -1000, -1000, -1000, -1000, 2754, -267, 3402, 2445, 127943,
	2658, -1000, 2050, 2711, -1000, 2050, 2792, -1000, 2064, -1000,
	-1000, -1000, 2769, -1000, 2791, -1000, 1649, 3535, 2456, 444,
	-1000, 115193, 1698, 1680, 3620, 2019, 2192, 1937, 57086, 2658,
	57086, -1000, -1000, 115193, -1000, 1963, 1319, -1000, -1000, 2014,
	2658, 978, 442, -1000, -1000, 1778, 3504, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 800, -1000, 3194, -1000, 1078,
	2323, 2323, 978, -1000, 795, 2217, -1000, -1000, 428, -1000,
	427, -1000, 2191, 115193, 2181, -1000, -1000, -1000, -1000, 115193,
	-1000, -1000, 3618, -1000, 911, -1000, 2658, -274, 2014, -280,
	-1000, -176, 1856, -1000, 1560, 920, 2014, -1000, 1727, -1000,
	-1000, 2152, 49181, 48605, -1000, 3519, -1000, -1000, 2548, -1000,
	-1000, 48605, 2754, 48605, 48605, -1000, 223, 64281, -281, -1000,
	2192, 2014, 1038, 920, 1937, 1463, 65912, 978, 920, -1000,
	-1000, -1000, 127943, -1000, -1000, -1000, 127943, -1000, -282, -283,
	-1000, -246, 101524, 2149, 2456, 920, 1937, 978, 2658, -1000,
	-251, -1000, 978, 2014, 1157, -290, -1000, -1000, -1000, -1000,
	978, 2658, -1000, 2014, -1000, -1000, -1000, -1000, 422, -1000,
	-1000, 2014, 920, 48605, 920, 978, -297, 978, -1000, 2014,
	-1000, -1000,
}

var sqlPgo = [...]int{
	0, 4502, 4501, 4500, 4499, 4498, 4497, 4495, 4494, 4492,
	4491, 4490, 4487, 4485, 4484, 4482, 4476, 4470, 4468, 4467,
	4466, 4463, 4461, 4459, 4457, 4456, 4455, 4454, 4449, 4447,
	4434, 4429, 4428, 4427, 4425, 4423, 4422, 4421, 4418, 4417,
	4415, 4412, 4411, 4408, 4406, 4403, 4402, 4401, 4397, 4396,
	4394, 4393, 4392, 4390, 4388, 4386, 4384, 4383, 4381, 4378,
	4376, 4374, 4370, 4366, 56, 4364, 4360, 4351, 4348, 4346,
	4345, 4344, 4343, 4342, 4341, 4339, 4338, 4337, 4335, 4334,
	4333, 4330, 4325, 4318, 4317, 62, 4312, 271, 4309, 4308,
	4305, 4304, 4299, 4297, 4294, 4287, 4283, 4282, 4279, 4277,
	270, 4276, 121, 153, 4275, 4273, 3825, 4270, 4269, 269,
	4268, 4267, 4266, 4265, 281, 4264, 4263, 4262, 4261, 4252,
	4250, 4248, 4236, 4227, 4226, 4225, 94, 201, 4224, 4223,
	842, 4220, 4216, 4214, 4211, 4210, 4208, 4207, 4206, 4205,
	4203, 246, 4201, 268, 4198, 4194, 4192, 4190, 4189, 4185,
	4181, 4178, 4176, 4175, 4173, 4172, 4171, 4170, 4169, 4167,
	4166, 4164, 4162, 4161, 4160, 4159, 4158, 4156, 4155, 4154,
	4150, 4148, 4147, 4146, 4145, 4144, 4142, 4139, 4137, 4134,
	4133, 244, 273, 193, 4127, 4125, 264, 260, 4124, 4123,
	4122, 4121, 4120, 131, 4, 198, 4119, 4118, 86, 98,
	90, 96, 105, 88, 4116, 110, 4114, 135, 66, 4113,
	21, 3, 267, 241, 11713, 236, 4111, 4110, 4109, 242,
	190, 4107, 240, 4106, 4104, 4100, 4098, 4097, 69, 51,
	178, 175, 173, 168, 226, 4096, 151, 106, 80, 50,
	43, 17, 77, 211, 19, 4095, 255, 12, 137, 7,
	30, 4094, 4090, 4089, 4088, 3448, 130, 4087, 263, 245,
	166, 4086, 4085, 4083, 331, 4081, 4080, 48, 4076, 187,
	95, 127, 16, 119, 4075, 147, 33, 4073, 152, 63,
	4072, 160, 99, 83, 10393, 12702, 4070, 4069, 103, 68,
	192, 2927, 179, 157, 191, 118, 155, 156, 123, 208,
	207, 174, 111, 4067, 249, 4064, 3471, 87, 180, 154,
	5836, 4063, 4062, 4059, 81, 197, 112, 4057, 4055, 74,
	23, 2, 5, 1, 140, 32, 31, 11, 4054, 58,
	116, 47, 27, 4053, 20, 4050, 4048, 4047, 4045, 4043,
	42, 161, 4042, 4041, 274, 4040, 100, 52, 25, 4037,
	39, 222, 4033, 224, 144, 4032, 4031, 251, 204, 176,
	4028, 73, 227, 4027, 4025, 4024, 4023, 4021, 138, 9,
	134, 4019, 4014, 164, 4012, 46, 239, 195, 4011, 55,
	4007, 4006, 169, 108, 136, 272, 194, 221, 115, 229,
	183, 231, 4005, 4004, 4003, 209, 4001, 4000, 223, 165,
	3999, 3998, 238, 282, 84, 45, 82, 237, 76, 188,
	149, 3996, 199, 3995, 3994, 278, 177, 213, 8, 14,
	104, 129, 3993, 6, 233, 158, 228, 117, 3987, 7560,
	196, 67, 3986, 3985, 143, 126, 79, 128, 148, 259,
	97, 3984, 3983, 2661, 3982, 3981, 3979, 3976, 182, 3975,
	3974, 3973, 150, 159, 220, 3972, 92, 70, 49, 22,
	133, 247, 265, 113, 225, 172, 250, 3962, 3959, 3958,
	184, 3957, 72, 114, 171, 203, 248, 57, 3956, 568,
	3954, 145, 460, 64, 142, 3953, 217, 3951, 3949, 3948,
	3945, 3944, 3943, 3942, 369, 235, 3941, 3940, 3939, 36,
	186, 3937, 257, 146, 181, 109, 78, 3936, 107, 2423,
	3934, 256, 1442, 59, 261, 215, 262, 3933, 4030, 53,
	3932, 0, 14712, 8711, 12171, 14219, 3931, 5875, 3929, 3928,
	3927, 219, 141, 3924, 3922, 3919, 102, 3917, 85, 3915,
	3914, 71, 3911, 24, 15, 18, 28, 26, 162, 54,
	3909, 3908, 89, 139, 124, 3907, 266, 230, 3906, 3905,
	3903, 3901, 93, 3900, 38, 3895, 34, 3892, 3891, 44,
	13, 29, 3890, 3889, 200, 3888, 214, 252, 3887, 163,
	3884, 65, 132, 3883, 3878, 3875, 60, 61, 253, 91,
	3871, 279, 3864, 212, 3862, 3856, 41, 3854, 3853, 243,
	3852, 3848, 3845, 3844, 3842, 40, 210, 170, 216, 3840,
	3839, 167, 3838, 3837, 3835, 276, 3833, 3832, 37, 3830,
	10, 3829, 3828, 205, 3198, 3827, 3823, 35, 3821, 185,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 49, 49, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 36, 31, 31, 32, 32,
	33, 34, 34, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 17, 17, 37, 37, 18, 18,
	39, 39, 19, 19, 40, 40, 588, 588, 606, 606,
	22, 22, 42, 42, 23, 43, 16, 589, 589, 589,
	589, 35, 24, 44, 28, 28, 28, 28, 28, 196,
	196, 196, 196, 21, 21, 38, 38, 231, 231, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 584, 584, 233, 233, 232,
	226, 226, 227, 227, 590, 590, 234, 234, 234, 236,
	236, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 483, 483, 483, 516, 516, 515, 515, 515, 514,
	514, 610, 610, 611, 611, 611, 611, 611, 129, 129,
	381, 381, 381, 53, 53, 53, 53, 53, 579, 579,
	198, 198, 198, 200, 200, 199, 199, 199, 199, 199,
	76, 76, 595, 595, 596, 596, 594, 597, 597, 597,
	197, 197, 197, 125, 125, 125, 125, 125, 125, 126,
	126, 127, 127, 201, 201, 201, 203, 203, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 207, 15, 15,
	15, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	105, 105, 518, 518, 519, 519, 192, 192, 193, 193,
	193, 193, 194, 194, 195, 195, 195, 67, 67, 204,
	204, 206, 206, 205, 205, 205, 205, 205, 55, 55,
	55, 55, 55, 55, 55, 56, 56, 56, 56, 56,
	57, 57, 57, 57, 57, 57, 58, 58, 58, 58,
	58, 58, 65, 65, 65, 65, 65, 183, 183, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 73, 73, 73, 73, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 613, 613, 614, 614, 615,
	615, 616, 616, 616, 616, 616, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 616, 616, 616, 616, 616,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 82, 82, 342,
	342, 305, 305, 83, 83, 83, 84, 84, 85, 85,
	69, 69, 577, 577, 358, 358, 474, 474, 70, 585,
	585, 585, 587, 587, 586, 586, 87, 87, 380, 380,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 97, 97, 97,
	97, 97, 98, 98, 98, 95, 95, 95, 92, 92,
	92, 91, 91, 91, 96, 96, 96, 576, 294, 294,
	94, 94, 94, 93, 93, 93, 359, 359, 99, 99,
	99, 99, 306, 100, 100, 100, 100, 100, 100, 100,
	100, 103, 103, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 476, 476, 101, 101,
	101, 441, 441, 106, 106, 106, 396, 396, 107, 107,
	107, 107, 107, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 128, 128, 128, 128, 128, 128, 128, 128,
	581, 581, 351, 351, 258, 258, 258, 258, 118, 118,
	118, 118, 119, 119, 119, 120, 120, 188, 188, 135,
	135, 135, 135, 135, 134, 134, 134, 134, 134, 134,
	59, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 64, 64, 64, 64, 64, 137, 137, 607, 607,
	139, 136, 136, 136, 138, 138, 138, 138, 140, 141,
	141, 141, 141, 141, 141, 141, 141, 142, 142, 508,
	508, 367, 367, 506, 506, 528, 528, 507, 507, 312,
	312, 312, 312, 312, 313, 313, 313, 517, 517, 517,
	517, 517, 517, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 189, 189, 190, 191, 191, 191, 191, 191,
	166, 166, 166, 182, 182, 182, 182, 182, 182, 182,
	169, 169, 169, 153, 153, 144, 144, 144, 144, 144,
	144, 144, 148, 148, 148, 148, 148, 148, 148, 148,
	145, 145, 155, 155, 155, 155, 155, 149, 149, 150,
	150, 150, 150, 176, 176, 152, 152, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 146, 146, 146, 146,
	157, 157, 157, 157, 403, 403, 403, 181, 181, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 179, 179, 179, 179, 179,
	179, 598, 598, 599, 599, 173, 173, 173, 173, 173,
	173, 455, 455, 167, 167, 167, 167, 172, 172, 172,
	172, 175, 175, 175, 175, 386, 386, 164, 164, 164,
	165, 165, 165, 170, 170, 171, 343, 343, 168, 168,
	174, 174, 174, 174, 147, 147, 147, 147, 147, 147,
	147, 177, 177, 163, 163, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 617, 617, 159, 159,
	159, 158, 158, 158, 158, 161, 161, 162, 162, 162,
	162, 162, 162, 160, 151, 180, 578, 578, 574, 574,
	574, 574, 574, 574, 574, 574, 575, 575, 575, 575,
	580, 580, 111, 111, 111, 111, 111, 121, 121, 121,
	121, 121, 112, 112, 112, 112, 112, 114, 114, 113,
	113, 113, 113, 77, 77, 77, 77, 77, 14, 14,
	14, 78, 78, 249, 249, 210, 210, 210, 331, 331,
	211, 211, 320, 320, 320, 320, 208, 208, 209, 209,
	79, 79, 618, 618, 618, 591, 591, 591, 592, 592,
	592, 592, 592, 592, 314, 314, 315, 315, 421, 421,
	421, 421, 421, 318, 318, 318, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 321, 321, 235, 235, 235,
	329, 330, 330, 322, 322, 328, 327, 327, 326, 326,
	325, 325, 323, 324, 324, 324, 333, 333, 332, 335,
	335, 334, 420, 537, 537, 539, 539, 539, 539, 539,
	539, 539, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 404, 404, 619, 619, 535, 535,
	535, 536, 531, 531, 532, 532, 532, 532, 532, 316,
	316, 317, 317, 317, 317, 533, 534, 349, 349, 459,
	538, 538, 540, 540, 542, 620, 620, 620, 620, 620,
	620, 621, 621, 621, 419, 419, 418, 418, 340, 340,
	543, 543, 543, 543, 544, 544, 544, 544, 544, 547,
	546, 545, 545, 545, 545, 545, 81, 81, 81, 383,
	383, 382, 382, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 185, 185,
	261, 261, 75, 75, 75, 12, 12, 12, 593, 593,
	593, 80, 80, 80, 80, 80, 80, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 583, 583, 582,
	582, 262, 262, 623, 623, 86, 86, 86, 86, 86,
	86, 86, 86, 477, 477, 478, 478, 74, 74, 74,
	74, 74, 405, 405, 402, 402, 401, 401, 348, 348,
	457, 457, 457, 458, 266, 266, 267, 267, 228, 228,
	228, 30, 29, 20, 20, 25, 25, 26, 26, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 27, 27,
	46, 46, 46, 46, 47, 47, 47, 47, 50, 50,
	51, 51, 45, 45, 45, 45, 48, 48, 41, 41,
	52, 52, 52, 600, 602, 602, 601, 601, 605, 605,
	605, 605, 605, 605, 603, 603, 604, 604, 608, 608,
	609, 609, 117, 117, 122, 122, 122, 122, 122, 123,
	123, 123, 123, 124, 124, 124, 124, 133, 133, 184,
	184, 184, 184, 184, 184, 184, 54, 54, 54, 54,
	66, 66, 66, 66, 131, 625, 625, 625, 132, 132,
	132, 624, 624, 259, 259, 415, 415, 416, 416, 626,
	626, 417, 417, 417, 417, 417, 252, 251, 253, 253,
	254, 254, 72, 72, 72, 244, 244, 243, 241, 241,
	520, 520, 246, 246, 246, 247, 247, 237, 237, 238,
	238, 239, 239, 240, 240, 250, 250, 627, 627, 109,
	109, 109, 187, 187, 304, 304, 304, 412, 412, 412,
	341, 341, 273, 273, 414, 414, 414, 414, 379, 379,
	379, 186, 186, 356, 356, 369, 369, 370, 370, 471,
	471, 371, 115, 115, 116, 116, 130, 130, 214, 214,
	212, 212, 212, 212, 212, 212, 212, 212, 219, 219,
	220, 220, 221, 221, 222, 223, 223, 223, 223, 360,
	360, 224, 224, 224, 213, 213, 213, 215, 215, 215,
	215, 215, 215, 215, 218, 218, 218, 218, 225, 225,
	225, 217, 217, 554, 554, 554, 556, 556, 558, 558,
	557, 557, 553, 553, 555, 555, 622, 622, 385, 385,
	385, 338, 339, 336, 336, 337, 337, 346, 346, 344,
	345, 345, 347, 347, 456, 456, 456, 229, 229, 229,
	376, 376, 376, 376, 377, 377, 408, 408, 406, 406,
	406, 406, 407, 407, 409, 409, 409, 410, 410, 411,
	411, 373, 373, 374, 374, 375, 375, 375, 375, 437,
	437, 216, 216, 216, 353, 353, 353, 354, 354, 427,
	427, 427, 427, 427, 427, 428, 428, 426, 426, 426,
	426, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	461, 462, 462, 355, 355, 463, 413, 413, 572, 572,
	572, 573, 573, 454, 454, 464, 464, 464, 464, 464,
	464, 452, 452, 453, 453, 472, 473, 473, 389, 389,
	389, 389, 387, 387, 390, 390, 390, 390, 390, 388,
	388, 465, 465, 465, 465, 378, 378, 466, 466, 466,
	466, 467, 468, 468, 469, 469, 422, 423, 423, 479,
	479, 479, 479, 481, 352, 352, 352, 352, 352, 530,
	529, 529, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 496, 496, 496, 496, 496, 496, 496,
	482, 482, 482, 482, 482, 486, 486, 486, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 487,
	487, 492, 492, 493, 493, 493, 488, 489, 494, 494,
	494, 494, 628, 628, 498, 498, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 484, 484, 484, 491, 491,
	491, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 397, 397, 399, 399, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 431,
	431, 431, 431, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 432, 548, 548,
	548, 548, 548, 548, 548, 548, 433, 433, 551, 551,
	552, 552, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 559, 559, 560, 560, 562, 562, 563, 563, 564,
	565, 565, 565, 566, 567, 567, 561, 561, 568, 568,
	568, 568, 569, 569, 570, 570, 570, 570, 570, 571,
	571, 571, 571, 571, 443, 443, 444, 444, 450, 450,
	450, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 311, 311, 310, 263,
	263, 263, 263, 263, 263, 365, 365, 363, 363, 363,
	366, 366, 364, 364, 362, 362, 361, 361, 440, 440,
	438, 438, 442, 442, 391, 391, 497, 497, 497, 497,
	497, 497, 497, 497, 392, 392, 392, 400, 393, 393,
	394, 394, 394, 394, 394, 434, 435, 395, 395, 395,
	436, 436, 445, 449, 449, 448, 447, 447, 446, 446,
	424, 424, 425, 425, 372, 372, 629, 629, 368, 368,
	470, 470, 470, 470, 308, 308, 357, 357, 307, 307,
	299, 299, 300, 300, 300, 300, 350, 350, 451, 451,
	499, 499, 500, 500, 501, 501, 502, 502, 503, 504,
	505, 439, 439, 283, 282, 270, 271, 281, 280, 279,
	269, 272, 276, 277, 278, 274, 275, 290, 289, 288,
	242, 245, 295, 296, 296, 298, 298, 297, 297, 285,
	286, 287, 475, 268, 301, 301, 302, 302, 302, 303,
	303, 303, 303, 264, 264, 265, 265, 291, 291, 292,
	293, 293, 284, 284, 284, 255, 255, 255, 256, 256,
	257, 257, 513, 513, 510, 510, 510, 511, 511, 511,
	512, 512, 512, 512, 509, 509, 509, 509, 509, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 522, 522, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 524, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 527, 527,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 6, 6, 9, 6, 8,
	4, 4, 5, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 1, 0,
	6, 6, 6, 6, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 4, 6, 5, 6,
	5, 6, 4, 8, 3, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 3, 2, 0, 1, 1, 0, 2,
	0, 7, 10, 6, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 1,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	4, 6, 0, 5, 7, 6, 8, 8, 2, 1,
	3, 1, 3, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 2, 6, 3, 3, 4, 4, 3, 1,
	3, 2, 3, 3, 1, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 5, 2, 0, 3, 3,
	4, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	3, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 13, 16, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 2, 8, 4, 2,
	5, 5, 5, 2, 2, 0, 1, 3, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 3, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 17, 20, 16,
	19, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 4, 7, 3, 0, 7, 10, 1, 1,
	1, 1, 2, 2, 3, 0, 3, 0, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 12, 15, 3, 1, 0, 4, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 590, -102, -99, -67, -65, -106, -107,
	-88, -108, -101, -128, -133, -115, -116, -117, -129, -135,
	-184, -189, -190, -191, -3, -53, -55, -68, -87, -89,
	-100, -110, -109, -111, -118, -125, -121, -105, -59, -130,
	-134, -143, -185, -186, -187, 32, 31, 100, 80, 154,
	128, 137, 202, 382, 424, 436, 396, 142, 416, 401,
	-138, -139, 454, -54, -66, -132, -131, 73, 129, 410,
	-4, -12, -15, 29, 46, -56, -57, -58, 62, -75,
	-71, -82, -76, -69, -70, -73, -612, 102, -555, -90,
	-93, -124, -616, 161, 220, -112, -113, 365, -119, -120,
	418, -122, -123, 420, 162, -61, -60, 156, -212, -214,
	-136, -137, -188, -144, -145, -146, -147, -148, -149, -150,
	-176, -151, -152, -153, -154, -155, -156, -160, -179, -157,
	-158, -159, -162, -161, -163, -168, -164, -165, -166, -167,
	-169, -170, -172, -173, -174, -175, -177, -178, 459, -171,
	-180, 520, 49, 474, 82, 146, 428, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -52, -72, -74,
	-77, -78, -79, -86, -80, -81, -554, -91, -92, -95,
	-97, -98, -94, -96, 417, -215, -213, 587, 535, -17,
	-22, -23, -18, -19, -21, -24, -20, -25, -26, -27,
	-37, -42, -43, -39, -40, -38, -41, -44, -45, -46,
	-47, -48, -49, -50, -51, -29, -35, -36, -30, -31,
	-32, -33, -34, -16, -28, 556, 565, -218, -216, -217,
	-225, 446, 543, 494, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, -306, 2, -285, -291,
	-292, -293, -284, -255, -524, -527, 4, -521, -525, 168,
	230, 329, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 49, 53,
	55, 59, 60, 61, 62, 63, 64, 68, 73, 74,
	79, 80, 81, 82, 83, 84, 85, 91, 88, 89,
	90, 92, 94, 96, 97, 98, 99, 100, 101, 103,
	104, 105, 107, 108, 109, 117, 118, 119, 120, 121,
	123, 128, 129, 132, 127, 131, 133, 135, 136, 137,
	140, 141, 142, 144, 145, 147, 148, 149, 151, 152,
	154, 155, 156, 159, 157, 502, 158, 160, 161, 162,
	163, 166, 174, 175, 176, 181, 183, 184, 188, 189,
	190, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	203, 207, 209, 210, 211, 212, 213, 219, 220, 222,
	223, 224, 225, 226, 231, 232, 233, 237, 234, 243,
	244, 248, 249, 250, 252, 256, 257, 258, 259, 260,
	261, 263, 265, 264, 267, 270, 271, 274, 278, 279,
	283, 284, 280, 285, 286, 288, 289, 292, 290, 293,
	294, 291, 295, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 307, 308, 296, 311, 309, 313, 314,
	315, 327, 324, 319, 320, 316, 321, 317, 318, 322,
	323, 326, 331, 332, 335, 217, 337, 338, 341, 359,
	345, 346, 347, 350, 351, 354, 357, 358, 360, 361,
	362, 363, 364, 365, 366, 367, 369, 370, 372, 373,
	374, 376, 377, 378, 380, 382, 383, 385, 386, 388,
	389, 390, 391, 392, 393, 394, 396, 398, 397, 399,
	401, 403, 404, 405, 410, 416, 412, 413, 414, 415,
	417, 418, 419, 420, 422, 423, 424, 426, 427, 428,
	429, 430, 432, 434, 435, 439, 440, 456, 457, 476,
	436, 437, 438, 441, 442, 443, 444, 445, 449, 447,
	448, 450, 451, 452, 454, 455, 458, 459, 461, 462,
	463, 464, 465, 466, 467, 470, 472, 473, 474, 493,
	475, 477, 481, 482, 483, 484, 478, 479, 492, 486,
	487, 489, 490, 495, 496, 497, 498, 499, 500, 501,
	503, 505, 513, 514, 515, 517, 520, 521, 522, 523,
	511, 525, 526, 529, 530, 531, 534, 532, 533, 535,
	537, 540, 541, 542, 548, 547, 549, 552, 557, 558,
	560, 561, 562, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 124, 125, 153, 164, 165, 177, 191,
	192, 204, 206, 214, 215, 216, 238, 239, 241, 246,
	268, 334, 336, 352, 356, 371, 375, 379, 381, 395,
	431, 468, 480, 485, 506, 507, 508, 509, 516, 518,
	543, 544, 545, 550, 559, -306, 2, -285, 343, -278,
	2, -255, -255, 382, 28, 2, 28, 370, 448, 497,
	499, 2, -581, -351, 2, 28, -258, -255, 102, 202,
	446, -278, 2, -581, -351, 25, 2, -255, 2, 357,
	22, 27, 66, 77, 98, 140, 163, 185, 188, -615,
	359, 389, 434, 450, 492, 503, 517, 2, 547, 289,
	447, 494, 230, 120, 522, 441, -593, 439, 440, 357,
	387, 426, 205, 536, -259, 2, 436, -255, 289, 2,
	590, 94, 279, 74, 431, 451, -141, 514, -140, 506,
	441, -142, -508, 2, 311, -255, 590, 590, 590, 28,
	-268, -255, 494, 230, 441, 120, 490, 590, 2, 494,
	362, 547, 447, 120, 392, 230, 522, 188, 140, 27,
	441, -593, 289, 126, -579, 2, -574, 4, -525, -521,
	-300, -299, 494, 500, 120, -293, -284, 580, -292, 590,
	590, 590, 2, 249, 250, 391, 390, 451, 452, 590,
	590, 590, 590, 439, 2, 163, 22, 27, 66, 93,
	98, 126, 185, 188, 348, -613, 359, 389, 450, 492,
	496, 503, 517, -592, 475, 68, 415, 441, -591, -593,
	289, 522, 140, -401, 120, 279, 200, 530, 499, 497,
	528, 132, 237, 533, 532, 590, 590, -103, 2, 587,
	32, 31, -102, -106, 142, 454, -207, 494, 242, 2,
	-255, 590, 590, 2, 249, 250, 439, 440, 590, 590,
	186, -574, 2, 590, 590, 2, 249, 250, 439, 440,
	242, 2, 68, 443, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 2, -182,
	451, 475, 211, 47, 46, 74, 28, 388, 79, 363,
	121, 148, 523, 203, 230, 231, 257, 93, 94, -403,
	44, 250, 68, 249, 440, -598, 439, -455, 495, 442,
	448, 489, 261, 436, 514, 102, 537, 427, 562, 392,
	393, 487, 405, 280, 157, 187, 4, 120, 311, 453,
	506, 279, 435, 366, 84, -622, 2, 494, -624, 2,
	514, 514, 2, -624, 2, -624, 2, -624, 2, -625,
	514, 559, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	-213, -215, -214, 590, 590, 590, 590, 590, 590, 590,
	-182, 451, 2, 74, 28, -344, -346, 527, 240, 150,
	349, -212, -214, 2, -554, -506, 2, -429, -528, -431,
	578, 579, 571, 491, 67, -310, 328, 563, -443, 126,
	528, 343, -527, -432, -445, 153, 359, 431, -366, 8,
	9, 5, 6, 7, -264, -433, -439, 519, 167, 333,
	-303, 591, 10, 587, -551, -214, -444, 37, 206, 65,
	-510, -302, -265, -482, 241, -301, -284, -548, -549, 4,
	-521, -522, -511, -485, -493, -489, -490, -496, -255, -524,
	77, 111, 112, 110, 115, 114, 282, 281, 116, 113,
	453, 536, 66, 36, 214, 215, 246, 334, 216, 75,
	-550, 141, -523, 238, 239, 468, 51, 395, 177, 125,
	124, 336, 56, 54, 544, -494, 122, 506, 507, 508,
	509, 191, 192, 58, 164, 165, 356, 379, 485, 516,
	518, 204, 268, 43, 106, 187, 236, 218, 245, 247,
	251, 269, 272, 312, 325, 330, 353, 355, 425, 460,
	-628, 545, 480, 69, 70, -556, 397, -557, -278, -556,
	590, 590, 592, 590, -336, -338, -339, 2, 28, 138,
	587, 2, -460, 2, -461, -465, -214, 262, -464, 587,
	-462, 585, -285, 344, -552, 432, -548, -549, -264, -284,
	-302, 4, -521, -523, 589, -340, 587, 120, 494, 78,
	230, 163, -396, 587, -255, 28, 343, 510, 592, -337,
	386, -441, 587, 343, 186, 346, 60, 293, 2, 2,
	2, 2, 2, 214, -255, 494, 119, 2, 260, 2,
	2, 2, 2, 2, 2, 2, -359, 214, 2, -285,
	547, -359, 214, 2, -359, 214, 2, -402, 2, 87,
	-269, 214, 2, -255, -294, 214, 2, -289, -291, -298,
	214, 2, -296, -255, -519, 214, 2, -518, -513, 10,
	-512, 5, 4, -521, -525, -522, -524, 77, -429, 2,
	-130, 2, 60, -255, 547, 2, 2, 456, 2, 587,
	-141, 71, 514, 43, 451, -416, 2, -417, -251, -252,
	-253, -472, -254, 248, 385, 394, 566, 130, 328, 562,
	-506, -607, 186, 570, 510, -506, -367, 589, 2, 2,
	2, 2, 2, 2, -465, 214, -285, 2, -282, -509,
	4, -521, -525, -522, -526, 28, 31, 32, 33, 35,
	37, 38, 39, 40, 57, 65, 66, 72, 76, 78,
	87, 93, 102, 110, 111, 113, 112, 114, 115, 116,
	126, 130, 134, 138, 139, 143, 146, 150, 167, 169,
	182, 185, 186, 202, 205, 208, 221, 235, 240, 242,
	262, 266, 273, 281, 282, 328, 333, 339, 343, 344,
	348, 349, 368, 384, 400, 421, 446, 453, 471, 488,
	494, 504, 510, 512, 519, 527, 528, 536, 538, 546,
	551, 553, 554, 555, 556, -527, 2, -465, 214, 2,
	-288, 214, -465, -291, 2, -269, 2, -281, -509, 2,
	-307, 214, -285, -287, -291, -289, 2, 2, 2, 2,
	-296, 2, -518, 214, 2, 547, 386, 242, 510, 592,
	-357, -299, -300, -505, 8, -350, -255, 589, -429, 2,
	-130, -114, 2, 182, -429, 214, 2, -130, 214, 2,
	-429, 214, 2, -130, 214, 2, -595, 2, -518, 214,
	-255, 2, 293, 2, 2, 517, 2, 98, 494, 119,
	2, 414, -614, 434, 521, 2, 2, 2, 2, 2,
	2, 2, 494, -274, 2, -255, 182, 478, -296, 214,
	-297, 2, 447, -623, 397, -518, 214, 2, 547, -289,
	214, 2, -289, 230, 244, -269, 214, 2, 499, 497,
	499, 497, 186, 2, 242, 2, 242, 2, -466, 2,
	-467, -461, -468, 585, 344, -476, 2, -475, -512, 543,
	-103, 587, -103, 587, 451, 587, -518, -285, -285, -429,
	2, -130, -114, 2, -429, 2, -130, 2, -127, -518,
	-126, 587, 186, -429, 2, -130, -114, 2, -429, 2,
	-130, 2, -207, 182, 2, 120, 494, -182, 2, 182,
	538, 2, 8, 2, 221, -518, 442, 393, 174, 2,
	456, 2, 457, 74, -403, 562, 74, 186, 2, 186,
	2, -386, 2, 556, 186, 2, 2, -578, 2, 343,
	186, 2, 186, 2, 186, 2, 186, 2, 186, 2,
	-181, 452, 515, 493, 390, 250, 2, -130, 553, -114,
	250, 249, -429, 553, 2, -599, 182, 440, -429, 2,
	513, 259, 158, 186, -386, 2, 186, 2, 186, 2,
	5, 2, 391, 476, 2, 248, 385, 476, 2, -285,
	494, 547, 447, 120, 28, 2, 2, 2, 88, 89,
	186, 2, 186, 2, 201, 186, 2, 186, 494, 562,
	2, -378, -465, -415, -416, -415, 510, -344, -346, -182,
	456, 2, -219, -376, -221, 182, -406, -407, -222, 273,
	169, 339, -223, -385, 28, 138, -385, -385, 60, 588,
	588, 11, 12, 76, 41, 578, 579, 580, 581, 180,
	582, 583, 576, 577, 575, 568, 569, 573, 254, 255,
	95, 572, 570, 86, 287, 433, 170, 171, 172, 173,
	411, 228, 34, 229, 14, 15, 16, -310, 33, 348,
	272, 563, 218, 460, 571, 17, 18, 19, 245, 247,
	330, 50, 221, -263, 359, -309, 491, 67, -429, -429,
	-429, -429, -429, -429, -429, -429, 355, 587, -372, -424,
	585, -214, 587, 587, 587, 587, -505, -214, -429, -443,
	588, -364, 587, -214, -443, -438, 587, 431, 585, 587,
	-446, -429, 5, 5, 5, 587, 589, -559, 557, 182,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 381, -487, 587, -486, 587,
	-486, -486, 548, -484, 587, 565, 558, 587, -484, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 548, 592, -556, -340, 587, -368, -470, -429,
	580, -368, -368, 343, -361, -429, 106, -389, 251, 312,
	187, 269, 425, 236, -426, 591, -426, -454, 565, -214,
	-462, -284, -214, -464, 587, -460, -454, -104, -505, -87,
	-100, -109, -130, -143, -186, -187, 580, -285, 587, 186,
	587, 589, -509, 186, -350, -269, -285, -301, -302, -307,
	2, 137, -361, -574, 522, 441, 28, 447, -350, -258,
	38, -440, -479, -480, -530, 591, -529, -482, -492, -488,
	-491, 371, 375, -511, 54, 544, -494, 241, 4, -521,
	-523, 238, 239, 468, 51, 395, 177, 125, 124, 336,
	56, 506, 507, 508, 509, 191, 192, 58, 545, 480,
	69, 70, -574, 522, 441, 28, 447, -350, 182, -516,
	2, -515, -514, 116, 453, -512, 5, 2, 153, 2,
	2, 2, -255, -234, 592, 64, 419, 153, -359, 214,
	-234, 153, -234, 153, -308, 214, -307, -234, 153, -234,
	592, 153, -234, 592, 153, 589, 592, 153, -516, 2,
	-402, -508, -361, 38, -416, 2, 126, -514, -626, 592,
	271, -313, 286, 327, 210, 344, 560, 337, 130, -517,
	5, 4, -439, -451, 126, 279, 241, -499, -501, 8,
	-500, 9, -502, 578, 579, -507, -506, 109, 589, -509,
	-231, 412, 454, 358, -230, 24, 29, 142, 232, 315,
	541, 159, -326, 233, -323, 362, 153, 472, 531, -588,
	-589, 438, 501, 502, 90, 337, 454, 358, 412, 153,
	-382, -384, 38, 118, 315, 357, 61, 225, 291, 292,
	474, 550, 153, 454, 358, 412, 358, 24, 142, -246,
	-243, 454, -589, 99, 412, 486, 384, -589, -233, 472,
	531, -588, -589, 438, 412, -232, -328, -323, 362, 153,
	591, 24, 142, 412, 454, 358, -610, -611, 29, 412,
	358, -582, -553, 556, 153, -465, 214, -603, 2, 182,
	-596, -126, 263, 5, 10, -518, -126, -357, 592, 592,
	-509, 580, 440, 439, 153, 153, 153, 153, 182, 328,
	2, 2, 2, 2, 2, 188, -591, -615, 2, 2,
	-285, 214, -342, 343, -577, -358, 494, -285, 182, 328,
	43, -288, 214, 2, -291, 547, -582, 328, -290, 214,
	-285, 38, 587, 328, 2, -402, 2, 230, -553, 328,
	-466, -304, -285, -461, -304, 454, -278, 38, -426, -285,
	588, 592, -476, -476, -518, -195, 556, 186, 102, 587,
	587, -207, -473, 592, -472, 221, -519, -127, -518, 415,
	-518, -577, -269, 2, -285, 2, 494, 252, -518, -195,
	221, -518, -518, -518, -508, 28, 457, 2, -181, 452,
	515, 89, 457, 2, -285, 494, 120, 230, 80, -255,
	-580, 182, -575, 426, 441, 522, -574, -285, 120, -285,
	120, -285, 120, -285, -285, 2, 2, 2, 2, 2,
	85, 2, -130, -429, 2, 85, 2, 46, -599, 182,
	2, 513, 2, 513, 2, -255, -255, -255, 475, 271,
	-285, -285, -285, -286, -291, 495, -617, 2, 186, 182,
	2, 494, 230, 494, 230, 120, 186, 74, 120, 28,
	494, 437, -234, 592, -259, -219, -376, -508, -377, -376,
	-220, -219, -222, 182, 394, 532, 315, 458, 256, -407,
	-406, 28, -429, -411, 176, 314, -429, -409, -431, 578,
	579, -500, -502, -360, 337, -213, -213, -213, -347, -456,
	-429, 384, 230, -481, -479, -479, -283, -509, 506, -429,
	-429, -429, -429, -429, -429, -429, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, -429, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, -429, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, 272, 218, 460, 50, 221,
	-429, 510, -429, -429, -429, -429, 309, 328, 333, 519,
	167, 529, 138, 337, -629, 488, 40, -436, -214, -365,
	587, -450, 35, 471, 28, -443, 587, 2, -424, -429,
	-425, -311, -309, -255, 578, 579, 580, 581, 582, 583,
	568, 569, 570, 14, 15, 16, 573, 577, 575, 576,
	180, 95, 572, 287, 433, 86, 170, 171, 172, 173,
	254, 255, 17, 18, 19, 34, 571, -362, -361, -361,
	588, 546, 28, 138, 580, 2, 588, 592, 38, 588,
	-429, -362, -442, -438, -361, -449, -448, 553, -397, -398,
	561, 296, 123, 212, 294, -399, 445, -503, 8, -509,
	580, -560, 175, 205, 587, 588, 2, 588, 2, 588,
	-429, 2, 588, -429, 2, 588, -429, 2, 588, -429,
	2, 588, 2, -429, -429, -429, -429, -429, -429, -429,
	-361, 8, -503, -503, 506, 506, -503, -503, -503, -495,
	371, 372, 373, 374, 274, 275, 276, 277, 375, 376,
	377, 378, 301, 302, 303, 304, 297, 298, 299, 300,
	305, 306, 307, 308, 196, 197, 198, 199, 192, 193,
	194, 195, -495, -391, 2, -497, -361, 4, 561, 296,
	123, 212, 294, 445, 5, -391, 2, -392, 2, -429,
	-361, -393, -430, -431, 578, 579, 571, -310, -443, -394,
	2, -429, -362, -429, 57, 266, 512, -395, -429, 186,
	-361, -361, 2, -361, 2, -557, 38, -361, -353, 592,
	186, 38, 4, -353, -353, 587, 588, 592, -390, 209,
	290, 285, 244, -390, -460, -389, 251, -387, 353, -387,
	-387, -454, -270, 585, 593, -509, -454, -453, -452, 38,
	-278, 350, -454, -454, 589, 588, -453, 586, -572, 587,
	590, 590, 590, 590, 590, -285, 587, -361, -509, 589,
	477, 2, 588, 245, 245, 245, 245, 432, 588, 510,
	-576, -294, -298, 495, 2, 556, -102, 345, 588, 592,
	-352, 37, 585, 589, -503, 2, 2, -498, 548, 587,
	587, -398, 587, 186, -576, -298, 495, 2, -351, 592,
	510, -255, 2, -285, -359, -234, 153, -359, -359, -234,
	592, 153, -269, -289, -294, -296, -298, -255, -518, -519,
	-234, -290, -607, 588, 514, -417, -312, 394, 470, 413,
	449, 490, 8, 9, 8, 9, 592, -509, 592, -608,
	93, 510, 78, 441, -248, 280, 510, -420, 214, 78,
	-531, -272, 93, -532, -255, 72, 528, 384, 185, 151,
	-608, 93, 384, -608, 93, 2, 232, 93, 454, 475,
	28, 60, -465, 41, 41, 28, -606, 326, 267, 552,
	186, 562, 494, 230, 441, 510, 510, -465, -384, -479,
	118, 291, 292, 60, -504, -499, 578, 579, -504, 60,
	-504, -504, -504, 556, -288, -465, 441, 510, 510, 510,
	403, 403, -243, 510, 510, -627, 570, 403, 592, 41,
	41, 28, -606, 326, 267, 186, 510, -307, -270, 542,
	42, 542, 42, 542, 510, 42, 441, 510, 592, 42,
	510, 510, -583, -260, 105, 321, 284, 322, 97, 318,
	96, 317, 103, 319, 104, 320, 549, 331, 63, 316,
	295, 323, -261, -262, 364, 540, -518, 454, 358, 412,
	153, -604, 221, -593, 221, -473, 221, -473, -299, -255,
	589, -130, -429, -429, -130, -429, -130, 46, 153, 2,
	-623, 260, 587, -316, 328, 186, -350, -474, 242, 592,
	-358, -574, 153, -515, -383, -382, 328, -290, 214, 2,
	153, -340, 328, 147, 587, 392, 2, 153, -271, 214,
	-256, -255, -402, -237, 498, 153, -380, 538, -412, -130,
	587, 126, 38, -412, -369, -370, -471, -371, -272, 587,
	-278, -426, -103, -475, 588, 588, 588, -194, 347, -193,
	-255, 5, -207, 538, -315, -421, -420, -535, -536, -531,
	272, 230, 528, 244, 168, -341, -273, -272, 119, -201,
	556, -126, -127, 588, -473, 221, 478, -195, -195, -473,
	-473, -285, 182, -518, -195, -195, -195, 2, 2, 2,
	2, -386, -285, -269, -307, -285, 589, -350, -350, -298,
	-294, -386, -269, -386, -269, -386, -269, -130, -429, 2,
	451, 182, 182, 589, -386, -343, 421, 392, 120, 494,
	362, 230, -285, -307, -285, -307, -269, 120, -269, 121,
	-285, -465, -377, -220, 344, 256, 458, -409, -410, -431,
	431, 432, -410, 431, 432, 8, 9, 8, 9, -224,
	462, 332, -359, 592, -228, 39, 134, 256, -285, 562,
	149, -429, -429, 510, -629, 488, -436, 149, -429, 309,
	333, 519, 167, 529, 138, 337, 186, 587, -430, -430,
	588, -363, -429, -429, 586, 595, 588, 589, 588, -346,
	592, -344, -429, -361, -361, 588, 589, -361, -350, 586,
	586, 592, 588, -447, -448, 143, -429, 510, 510, 510,
	510, 587, 588, 589, -565, 354, 587, 587, -429, 588,
	588, 588, 588, 38, 592, 592, 592, 588, 592, 592,
	592, 588, 588, 588, 592, 588, 562, 562, 588, 588,
	588, 588, 592, 588, 592, 588, 186, 588, 588, -400,
	368, 588, 11, 12, 578, 579, 580, 581, 180, 582,
	583, 576, 577, 575, 568, 569, 570, 86, 287, 433,
	14, 15, 16, -310, 245, 221, -430, -430, -430, -430,
	588, -434, -435, 186, 182, 38, -395, -395, -395, 588,
	186, -361, 588, 588, 587, -558, 289, 328, 588, -423,
	-422, 554, -470, -354, 2, -460, -280, -509, -423, -423,
	-361, -429, 251, 251, -388, 538, 343, -390, -460, -453,
	-505, -428, -427, 184, 39, 134, 324, 217, -453, -278,
	-340, -453, -453, -509, -454, -454, -452, 588, -573, -505,
	588, -355, -463, -552, -346, 589, -509, -204, -553, -183,
	5, 333, -183, -183, -183, -350, 510, 510, 221, 25,
	369, -479, 585, 586, 8, -509, 587, -503, -503, -503,
	-350, 186, 186, 221, 186, -515, -515, 2, -234, -359,
	-234, -234, -307, -308, -234, -234, -234, -381, 556, -506,
	-416, 526, 83, 394, 506, -506, -230, 412, -272, -272,
	-285, -295, -255, 200, 404, -515, 328, -420, 214, -236,
	328, -479, -279, -255, 587, -404, 558, 256, 256, 538,
	-272, -279, 256, 214, -272, 214, -279, 2, -279, -584,
	394, 338, -429, 60, -324, 278, 392, 329, -231, 412,
	454, 358, -130, -130, -130, -130, -130, 587, -607, 538,
	137, -285, -307, -285, -295, -515, -290, 454, 358, 412,
	325, -301, -504, -504, -382, 454, 358, 412, -295, -515,
	-288, -515, -242, 214, -255, -242, 214, 441, -269, 403,
	562, 45, -627, -232, -130, -130, -130, -130, -130, 587,
	-270, -233, 412, 5, 214, -272, 5, -272, 214, 5,
	-255, -272, -295, -515, -611, 24, 142, -272, -295, -515,
	-260, -518, 333, 534, -582, 441, 510, 510, -465, -600,
	-601, 202, 424, 441, -350, -126, -198, 556, -126, -192,
	226, 580, -579, -255, 547, -255, -314, -317, -315, -272,
	-210, -211, 558, 556, 153, -305, -285, 585, -195, -518,
	-285, -474, -296, -297, 153, -340, 328, -518, 38, 153,
	587, 2, 2, -289, 343, 328, -271, 214, -238, 144,
	-627, -269, -423, -354, -379, -414, 421, 343, -341, 543,
	-278, -379, -356, 592, 186, 570, 589, -341, -469, 580,
	-103, -103, -195, 592, 587, 570, 570, 587, -518, -518,
	588, 592, -236, -285, -271, 230, 230, -277, -256, 588,
	592, 589, 587, -203, 347, -202, 145, 258, 243, 464,
	465, 466, 467, 136, 463, -473, -201, -127, 186, 186,
	-62, 556, 494, -195, 591, -255, -386, -386, -386, 451,
	451, -255, -350, -281, -269, -285, -282, -307, 182, 182,
	-269, 532, -410, 344, 283, -456, -229, 564, -285, 591,
	-429, -429, 149, 149, -429, -430, -430, -429, 149, 186,
	587, -429, -440, 33, 33, 588, 592, -425, -429, -309,
	588, 546, -346, -346, 588, 580, -509, 591, 588, -438,
	146, -429, 504, 296, 212, 294, -399, 294, -399, -399,
	-503, 5, -509, 580, -566, -275, 587, -255, 554, -345,
	349, 588, -481, -479, -429, -429, -429, -429, -429, -503,
	-484, -484, -499, -499, -429, -434, -429, -481, -479, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, 138,
	328, 337, -430, -435, -434, -429, -429, -479, 588, 588,
	588, -361, -102, 587, 289, -373, 205, -429, -473, 592,
	-373, -373, 588, -460, -460, 587, -429, 251, 586, 592,
	594, 570, -340, 589, -452, -453, 586, 588, 592, 588,
	592, -413, 38, 588, -509, -423, -206, -205, 135, 53,
	107, 133, 333, -350, -350, 441, 346, 5, 8, 585,
	586, 589, -503, 588, 588, 588, -350, -350, 441, -350,
	-234, -234, 119, 315, -429, 510, 510, 60, 221, 153,
	328, 540, -537, -532, 151, -429, 587, 230, 587, 587,
	2, -226, -227, 142, 454, 24, -609, 2, 538, 153,
	-234, 153, -234, 560, -324, 587, 587, 510, 441, -248,
	510, 556, -361, -429, -196, 126, -508, -589, 591, -589,
	591, 441, 510, 510, 441, 510, 510, 328, 153, 556,
	166, 166, 562, -242, 556, -361, 510, -483, 48, 26,
	328, -289, -234, 153, 510, 510, 522, 454, -518, 333,
	-295, -515, -290, 454, 358, 412, -581, -351, -581, 202,
	-298, -473, -200, 347, -199, 145, 423, 136, 258, 223,
	-473, -198, 186, 242, 556, -290, 2, 588, 588, 592,
	-538, 38, 341, 341, 587, -285, -83, 556, -472, -505,
	-585, 556, 43, -288, 38, 153, -582, -130, -290, -477,
	-478, 5, 38, -285, 153, 343, 328, -239, 265, -627,
	-513, -553, -346, -379, -368, 329, 91, 588, -423, -370,
	-354, -429, 2, 588, -193, -194, -518, -518, -518, -195,
	-207, -207, -421, -318, 587, -271, -256, 587, -207, -273,
	2, -519, 592, 587, 570, 570, 570, -201, -473, -126,
	-130, 347, -285, 580, -386, -330, -329, 362, 337, -330,
	431, 431, 344, 176, 261, -228, -270, -429, -429, 149,
	33, 33, -429, -429, -440, 588, -429, -429, -361, 586,
	5, -429, 588, 588, 8, -429, 588, 589, -567, -255,
	-429, 588, 60, 588, 588, 592, 592, 588, 588, 588,
	588, 588, 588, 588, -435, 186, 138, 337, 587, 588,
	588, -102, -437, 208, 60, -460, -437, -437, -388, -350,
	-460, -427, -270, 585, -509, -505, -463, 587, 589, -205,
	570, -518, -518, 556, -298, 586, 2, 585, -509, 588,
	-298, 119, -272, -272, 494, 431, -242, 384, -420, 153,
	-539, 93, -541, 76, 168, 102, 328, 333, 528, 384,
	72, 126, 400, -619, 38, 567, 588, -348, -457, -552,
	587, -255, -348, -350, 328, 483, 126, 328, 126, 551,
	119, 2, 522, 79, -272, -279, -350, -350, -285, -295,
	-515, 160, 588, 592, 570, 2, 580, 580, -295, -515,
	-290, -295, -515, -288, 153, -242, 360, 166, 160, 588,
	-270, 5, 5, 153, -267, 76, -272, 5, -272, -289,
	119, 441, 510, 510, 343, 343, 346, -198, 592, 587,
	570, 570, -198, -519, -126, 2, -340, -331, 232, -272,
	-536, -533, -534, 384, -540, -542, 168, 384, -130, 2,
	-209, -208, -255, 5, 587, -316, 347, 586, -587, 347,
	-586, 117, 136, -515, -383, -130, -290, -340, 588, 592,
	147, -405, 538, -270, -285, 153, -240, 264, -627, -513,
	-237, -408, -406, 139, 587, 343, -130, -346, 570, 588,
	588, 119, 119, 224, 152, -348, 587, 587, -350, 119,
	588, -202, -203, -518, -126, -518, -201, -473, -63, -64,
	230, 93, 367, -282, 494, 230, 587, 587, -228, -429,
	-429, -429, 588, -346, -509, 580, -561, 362, 588, -456,
	-429, -429, -430, 186, 587, -440, 588, -562, 555, -429,
	-374, -375, -429, 429, 108, 206, -562, -562, 588, -505,
	2, -518, 2, 510, 585, 2, 186, 221, 38, 403,
	-420, -279, -283, -276, -255, 168, 214, 333, 551, -404,
	256, 587, -430, -285, 587, 2, 30, -620, 130, 235,
	588, 592, -458, -266, -255, -429, -458, 588, 588, 333,
	333, 551, -429, -479, 587, -234, -234, 588, 588, -429,
	510, -508, 100, -506, 2, -589, -242, -269, -429, 510,
	5, -234, -283, -234, -234, -267, 522, -295, -515, -290,
	-605, 495, 448, 523, 442, 189, 430, -605, 182, -199,
	-200, -518, -126, -198, 38, -321, 234, 2, -538, 256,
	-276, 256, -618, 556, 588, 592, 570, 570, -314, -210,
	-84, -85, 511, -472, 592, 587, 570, -340, 38, 5,
	587, 587, -255, 343, 587, -270, -250, 92, -627, -513,
	-238, -379, 329, -350, 93, -408, -436, -195, 587, 587,
	-319, 81, 94, 127, 213, 190, 231, 475, 481, 28,
	-319, 588, -348, -348, 588, 587, -195, 588, 592, 28,
	587, 28, 587, -285, -307, -361, -361, 588, -346, 60,
	592, 588, 588, -430, -440, 588, -563, -564, -275, 592,
	587, 587, 455, 586, -350, 2, -350, -242, 384, -255,
	-541, -276, 328, 538, -429, -257, 587, -429, 38, 235,
	131, 219, -419, -621, 101, 484, 222, -457, -228, 588,
	-418, 538, 400, -267, -348, 587, 587, 587, 570, 186,
	587, -483, -234, -289, 510, 2, 2, 186, -581, 588,
	-594, 398, -130, -325, -326, 221, 587, -320, 343, 119,
	315, -208, -506, -506, 588, 38, -85, 9, -586, -587,
	-429, 38, -130, -477, -348, -285, -348, 343, -244, -243,
	273, -513, -239, 588, -279, -379, -519, -519, -418, 588,
	588, -519, -64, -350, -350, 588, 588, -568, 392, 432,
	207, -361, -347, 588, 592, 38, -375, 2, 2, 2,
	403, 153, 209, 588, -543, 288, -255, 588, 131, 219,
	-321, 587, -229, -458, -321, 209, -285, -590, 538, 588,
	-333, -332, -329, -335, -334, -329, -361, -506, 100, 360,
	-361, -267, -350, -350, 343, -597, 187, -596, 5, 10,
	-210, 360, -349, -459, -272, 82, 119, -331, -130, 588,
	-130, 588, 588, -405, 588, -285, -241, -520, 403, 405,
	-627, -240, -423, 588, 588, -419, -418, -327, -323, 588,
	588, 588, 588, -569, -570, 50, 525, 109, -429, -569,
	-569, -564, -566, 168, 556, -544, -547, -546, 343, 461,
	187, 361, 588, 483, 550, -327, -350, 556, -340, -429,
	-418, 588, 592, 543, 588, 592, 543, 588, 186, 588,
	-234, -602, 556, -234, -605, -197, 556, 46, -320, -285,
	588, 592, 383, 132, 142, -321, -618, -418, 587, -419,
	587, -247, -246, -627, -499, -250, 139, -195, -195, -321,
	-419, -211, 556, -195, -571, 151, -570, 380, 181, 431,
	380, 181, -571, -571, -276, 55, -546, 343, -547, 343,
	532, 132, -620, 588, 55, -543, -321, -332, 221, -334,
	186, 360, 202, 186, 439, -596, 30, -249, -248, 587,
	-459, 432, 432, 2, -325, -320, -419, -348, -321, -348,
	-245, -350, -244, 329, 532, -327, -321, -423, 109, 205,
	505, 315, 33, 570, -545, 315, 419, 64, 454, -545,
	-423, 570, -544, 587, 587, 346, -350, 347, -350, 2,
	-210, -321, 588, -327, 588, -241, 454, -211, -327, 431,
	351, -570, -429, 23, 333, 126, -429, -620, -361, -361,
	-234, -194, 587, 588, -320, -327, -418, -211, -419, -247,
	-369, -423, -211, 588, 588, -194, -235, 64, 419, -249,
	-211, -419, -423, -321, -423, -423, -322, -323, 510, 588,
	-423, -321, -327, 587, -327, -211, -361, -211, -423, 588,
	-423, -322,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 543, 544, 546, 547, 548, 550,
	551, 553, 555, 557, 558, 559, 561, 562, 564, 565,
	566, 567, 568, 570, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	639, 641, 0, 1359, 1361, 1363, 1365, 0, 784, 0,
	36, 37, 39, 0, -2, 328, 330, 332, 0, 359,
	361, 362, 364, 366, 367, 368, 370, -2, 0, 476,
	477, 479, 481, -2, 0, 982, 984, 0, 628, 630,
	0, 987, 989, 0, 0, 650, 651, 0, 1466, -2,
	644, 646, 648, 713, 715, 717, 719, 721, 723, 725,
	727, 729, 730, 732, 734, 736, 738, 740, 741, 743,
	745, 747, 748, 750, 751, 753, 755, 757, 759, 761,
	763, 765, 767, 769, 771, 773, 775, 777, -2, 780,
	781, -2, -2, 0, -2, -2, -2, 1377, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 59, 420, 422,
	424, 426, 428, 431, 433, 435, 1524, 483, 485, 487,
	489, 491, 493, 495, 0, -2, 1538, 0, 0, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	105, 106, 107, 108, 109, 110, 111, 112, 75, 76,
	77, 79, 80, 81, 82, 86, 87, 88, 89, 90,
	91, 92, 93, 103, 73, 0, 0, 1497, 1499, 1501,
	1503, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 545, 549, 552, 554,
	556, 560, 563, 569, 571, 573, 528, 529, 532, 2229,
	2247, 2248, 2249, 2252, 2253, 2254, 2255, 2256, 2257, 2702,
	2784, 2785, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 530, 531, 1159, 0, 597,
	595, 2214, 598, 2502, 600, 602, 470, 471, 472, 473,
	474, 475, 0, 621, 611, 1536, 622, 624, 625, 626,
	627, 592, 590, 0, 621, 2283, 619, 1357, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	399, 1208, 1209, 1210, 1342, 1343, 2547, 1384, 0, 229,
	640, -2, -2, -2, 2667, -2, 672, -2, 679, 2671,
	2550, 684, 0, 686, -2, 689, 1360, 1362, 1364, 782,
	783, 2233, 0, 0, 0, 0, 0, 38, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 239, -2, -2, -2,
	-2, 0, 0, 2595, 2335, 2182, 2249, 2185, 2180, 329,
	331, 333, 334, 0, 0, 0, 0, 0, 0, 360,
	363, 365, 369, -2, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1043, 1035, 1036,
	1266, 0, 0, 0, -2, 478, 480, 533, 534, 0,
	1525, 1525, 541, 542, -2, 0, 0, 0, 0, 299,
	287, 983, 985, 986, 0, 0, 0, 0, 629, 631,
	0, 0, 268, 988, 990, 991, 0, 0, 0, 0,
	0, 301, 0, 0, 645, 647, 649, 714, 716, 718,
	720, 722, 724, 726, 728, 731, 733, 735, 737, 739,
	742, 744, 746, 749, 752, 754, 756, 758, 760, 762,
	764, 766, 768, 770, 772, 774, 776, 778, 779, 790,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 883, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, -2, 963, 0, 0, 793, 795, 796, 797,
	0, 856, 881, 882, 891, 0, 1199, 1526, 1386, 1367,
	1381, 1386, 1369, 1370, 1371, 1372, 1373, 1378, 1380, 1374,
	1375, 1376, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 60, 421, 423, 425, 427, 429, 432, 434, 436,
	-2, 1495, 1496, 484, 486, 488, 490, 492, 494, 496,
	632, 0, 634, 0, 794, -2, 0, 1530, 1530, 1530,
	0, 0, 1496, 1494, 0, 637, 638, 693, 694, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 1886,
	0, 695, -2, 1919, 1921, 2642, 2476, 2667, 2055, 1923,
	1924, 1925, 1926, 1927, 0, 1929, 1930, 1931, 1932, 1933,
	1934, 0, 1936, 0, 1941, 1942, 1943, 0, 2649, 2159,
	2243, -2, 0, 0, 2655, 2239, 0, 2022, 1959, -2,
	-2, 2266, 2245, 1730, 1731, 1732, 1733, 1734, -2, -2,
	2685, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 0, 2630, 2650, 2651, 2656, 2658, 2652, 2639,
	1984, 2348, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1757, 1766, -2, -2, -2,
	-2, -2, -2, -2, 2643, 2644, 2661, 2664, 2670, 2675,
	2676, 2648, 2657, 2684, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	1758, -2, -2, -2, -2, 1513, 2515, 1516, 1159, 1514,
	1498, 1500, 0, 1502, 0, 0, 0, 1507, 1533, 1531,
	0, 1582, 1511, 1512, 1600, 1600, 1624, 0, 1605, 0,
	1624, 1525, 1651, 0, 1611, 2539, 1960, 1961, 0, 2249,
	2244, -2, -2, 2682, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 0, 599, 601, 0, 0, 0, 620,
	1535, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	404, 405, 406, 2650, 0, 0, 0, 411, 0, 413,
	414, 415, 416, 417, 418, 419, 198, 2650, 501, 526,
	0, 198, 2650, 504, 198, 2650, 507, 0, 510, 1264,
	198, 2650, 513, 2210, 198, 2650, 516, 518, 2218, 198,
	2650, 522, 2225, 2223, 523, 2650, 525, 304, 302, 303,
	2262, 2263, 2270, 2271, 2272, 2273, 2683, 2685, 1353, 1354,
	1355, 1356, 0, 1383, 1265, 642, 643, 0, 667, 0,
	671, 2638, -2, 0, 2559, -2, 675, 1387, 1391, 1392,
	1393, 1394, 1395, 0, 0, 0, 0, 1400, 0, 0,
	681, 0, 0, 668, 669, 687, 690, 0, 785, 786,
	787, 788, 789, 72, 0, 2650, 1651, 74, 0, 2204,
	2274, 2275, 2276, 2277, 2278, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 78, 0, 2650, 83,
	0, 2650, 0, -2, 94, 0, 104, 0, 2207, 113,
	0, 2650, 0, 2179, -2, 0, 210, 288, 289, 290,
	0, 1010, -2, 2650, 1207, 0, -2, 0, 0, 0,
	973, 2176, 2181, 974, 2200, 975, 2186, 0, 335, 336,
	337, 338, 339, 0, 340, 2650, 342, 343, 0, 345,
	346, 2650, 348, 349, 0, 351, 0, 251, 252, 2650,
	373, 375, 0, 377, 378, 0, 380, 0, 0, 0,
	384, -2, 400, 0, 397, 387, 388, 390, 391, 392,
	393, 394, 0, 440, 438, 2215, 0, 0, -2, 2650,
	0, 1007, 0, 0, 1244, -2, 2650, 1204, 0, 1251,
	2650, 1247, 0, -2, 0, 1523, 2650, 1404, 1039, 1040,
	1041, 1042, 1663, 467, 0, 1431, 0, 1433, 0, 1452,
	1657, 1600, 0, 0, 1662, 0, -2, 586, 2232, -2,
	536, 0, 537, 0, -2, 0, 316, 0, 0, 992,
	993, 994, 995, 996, 999, 1000, 1001, 1002, 1637, 269,
	271, 0, 0, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 0, 0, 652, 0, 0, 791, 792, 0,
	0, 802, 803, 804, 0, 316, 2551, 2511, 2369, 811,
	0, 814, 817, -2, 0, 0, 0, 0, 821, 0,
	826, 827, 828, 0, 0, 832, 834, 981, 836, 0,
	0, 838, 0, 842, 0, 845, 0, 847, 0, 849,
	-2, -2, -2, 857, 858, -2, 863, -2, 0, 867,
	-2, 0, 870, 0, 873, -2, 0, 883, 879, 880,
	0, 0, 0, 0, 899, 900, 0, 909, 0, 912,
	913, 914, 0, 918, 919, 0, 921, 922, 923, 924,
	0, 2622, 2556, 2335, 0, 930, 932, 934, 0, -2,
	0, 950, 0, 954, 0, 0, 962, 0, 0, 798,
	799, 198, 1655, 1366, -2, 1368, 0, -2, 0, 633,
	0, 636, 1555, 1481, 1478, 0, 1552, 1553, 1482, 0,
	0, 0, 1489, 0, 1528, 1529, 0, 0, 0, 1468,
	1469, 0, 0, 0, 0, 2061, 2062, 2063, 2064, 2077,
	2065, 2066, 2076, 2074, 2075, 2067, 2068, 2073, 2087, 2088,
	2078, 2079, 2069, 2082, 2080, 2081, 2083, 2084, 2085, 2086,
	0, 0, 2092, 0, 2070, 2071, 2072, 2100, 0, 0,
	2101, 0, 2103, 0, 2093, 2089, 2090, 2091, 0, 1865,
	1867, 2167, 0, 0, 0, 2099, 2094, 2095, 1803, 1804,
	1805, 1806, 1807, 1840, 1844, 1845, 0, 0, 1920, 2164,
	2163, 1922, 0, 0, 2115, 0, 1935, -2, 0, 2056,
	2110, 0, 0, 1944, 1945, 1946, 0, 0, 2115, 0,
	0, 2158, 1956, 1957, 1795, 0, 0, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 1743, 0, 1745, 0,
	1746, 1747, 1754, 1767, 0, 0, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 2139, -2, 0, 0,
	0, 0, 1759, 0, 1515, 0, 0, 1586, 2168, 2172,
	2173, 1586, 1586, 0, 0, 2116, 1648, 1648, 0, 0,
	1643, 1643, 1643, 1641, 1624, 0, 1624, 1634, 0, 1624,
	1624, 0, -2, 1605, 0, 0, 1634, 0, 1618, 574,
	576, 578, 580, 581, 582, 584, 1652, 1653, 0, 0,
	0, 0, 2250, 0, 0, 0, 0, 0, 2235, 0,
	356, 0, 0, 0, 2605, 2550, 0, -2, 604, 623,
	1525, 0, 2118, 1678, 1682, 0, 1684, 1685, 1686, 1687,
	1688, 0, 0, 1679, -2, 1755, 1757, 1778, 2267, 2268,
	2269, 1738, 1739, 1740, 1741, 1742, 1750, 1737, 1737, 1737,
	1748, 1777, 1769, 1777, 1773, 1723, 1724, 1725, 1760, 1761,
	1762, 1763, 0, 2605, 2550, 0, -2, 613, 0, 0,
	1463, 214, 216, 217, 218, 219, 220, 401, 0, 408,
	409, 410, 0, 497, 0, 196, 197, 0, 198, 2650,
	502, 0, 505, 0, 198, 2650, 2174, 511, 0, 514,
	0, 0, 520, 0, 0, 0, 0, 0, 198, 1465,
	0, 0, 0, 0, -2, 677, 682, 683, 0, 1389,
	0, 1396, 704, 705, 706, 1398, 1399, 0, 1401, 680,
	707, 708, 709, 710, 711, 712, 0, 2188, 2189, 2190,
	2191, 2194, 2195, 0, 0, 678, 697, 685, 0, 691,
	114, 1339, 0, 0, 157, 0, 1339, 1339, 0, 0,
	0, 0, 183, 0, 1078, 0, 0, 0, 0, 129,
	142, 153, 126, 127, 0, 0, 0, 0, 0, 0,
	84, 1181, 0, 1184, 0, 0, 0, 0, 0, 0,
	0, 1197, 0, 0, 0, 0, 0, 0, 0, 100,
	101, 0, 141, 0, 0, 1428, 0, 136, 116, 0,
	0, 129, 143, 155, 0, 187, 189, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 221, 0, 0,
	0, 1205, 0, 1522, 0, 0, 2650, 1337, 1322, 0,
	0, 1637, 2418, -2, -2, 269, 1637, 972, 0, 0,
	2250, 2184, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 379, 381, 382, 383, 0, 1243, 0, 389, 430,
	1130, 2650, 0, 0, 457, 452, 0, 454, 0, 0,
	0, 1180, 2650, 1178, 2219, 0, 1202, 0, 1159, 2650,
	2217, 0, 0, 0, 1252, 2259, 1261, 1265, 1418, 0,
	469, 0, 1434, 1436, 0, 0, 1658, 0, 1660, 1600,
	1525, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 0, 275, 0, 1636, 0, 0, 1637, 269, 2526,
	316, 316, 1637, 654, 1637, 656, 0, 0, 805, 806,
	0, 316, 316, 316, 812, 813, 815, 816, -2, -2,
	-2, -2, 818, 819, 906, 0, 0, 0, 905, 831,
	835, 0, 966, 2534, 2550, 2605, 979, 906, 2335, 906,
	2335, 906, 2335, 846, 848, 851, 894, 902, 862, 869,
	0, 864, 868, 871, 874, 0, 876, 884, -2, 0,
	886, 0, 888, 0, 890, 906, 907, 910, 917, 920,
	925, 926, 927, 928, 2230, 929, 0, 941, 946, 947,
	943, 0, 0, 0, 0, 0, 0, 957, 958, 0,
	0, 965, 1198, 0, 1379, 1555, 1481, 635, 1472, 1554,
	1473, 1480, 1483, 0, 0, 1485, 0, 1487, 0, 1550,
	1551, 1558, 1559, 0, 1569, 1570, 1562, 0, -2, 0,
	0, 1565, 1566, 1491, 0, 1508, 1509, 1510, 1539, 1542,
	1280, 0, 2784, 1799, 1673, 1800, 1801, 2203, 0, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, -2,
	-2, -2, -2, -2, -2, -2, -2, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, -2, -2,
	-2, 1841, 1842, 1843, -2, 2102, 2104, 0, 2167, 0,
	-2, 0, -2, -2, -2, -2, 1862, 0, 1864, 1869,
	1871, 1873, 0, 0, 0, 0, 2166, 1883, 2150, 2151,
	0, 0, 2058, 2059, 2060, 1868, 0, 1887, 2165, 2162,
	0, 0, 2096, 0, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 0, 2114, 1538,
	1948, 0, 0, 0, 0, 1955, 1940, 2112, 0, 2111,
	0, 0, 0, 2122, 0, 2157, 2153, 0, 2201, 1794,
	1781, 1782, 1783, 1784, 1785, 1786, 1796, 0, 2198, 2236,
	2242, 2032, 0, 0, 0, 1985, 1986, 1987, 1988, 1989,
	0, 1991, 1992, 0, 1994, 1995, 0, 1997, 1998, 0,
	2000, 2001, 2002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 0, 0, 2004, 0, 2125, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2006, 0, 2008, 2116,
	2136, 0, 0, 1888, 0, 0, 0, 0, 2056, 0,
	2011, 2116, 2144, 0, 0, 0, 0, 0, 2116, 0,
	2149, 0, 2018, 0, 2020, 1517, 0, 0, 1668, 0,
	0, 0, 2171, 1668, 1668, 0, 1581, 0, 0, 1644,
	1645, 1646, 1647, 0, 0, 1648, 0, 1638, 1642, 1639,
	1640, 1634, 1597, 0, 0, 2205, 1634, 1603, 1633, 0,
	1159, 1623, 1634, 1634, 0, -2, 1607, 1624, 0, 0,
	575, 577, 579, 583, 585, 0, 0, 1538, -2, 0,
	-2, 318, 1158, 0, 0, 0, 0, 594, 596, 0,
	0, 517, 0, 0, 610, 0, 588, 0, 591, 0,
	1669, 1672, 0, 0, 1683, 1689, 1690, 0, -2, 0,
	0, 1779, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 412, 527, 198, 499, 0, 198, 198, 508,
	0, 0, 198, 519, 198, 2226, 198, 2224, 305, 524,
	1464, 232, 0, 670, 0, 1388, 1397, 0, 701, 0,
	703, 0, 2192, 2196, 2193, 2197, 0, 692, 0, 0,
	0, 0, 1338, 0, 1287, 0, 0, 161, 2650, 0,
	200, 0, 0, 1123, 2211, 0, 1115, 0, 0, 2355,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 1182, 1183,
	1185, 1192, 1194, 0, 1188, 2199, 0, 0, 1189, 0,
	1191, 1193, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 1427, 1428, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 2178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1239, 1237, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 307, 2177, 2187,
	0, 997, 998, 341, 344, 347, 350, 238, 0, 385,
	0, 0, 1045, 1020, 0, 0, 439, 316, 0, 0,
	453, 457, 2228, 1005, 1176, 1179, 0, 1159, 2650, 1216,
	0, 0, 0, 0, 0, 0, 1250, 0, 0, 2650,
	2206, 2258, 2259, 1420, 1428, 0, 1668, 0, 1450, 1437,
	0, 0, 0, 1450, 1454, 1455, 1457, 1458, 0, 0,
	1659, 1665, 535, 587, 1525, 1525, 316, 314, 2479, 312,
	309, 311, 0, 0, 0, 1046, 1048, 1049, 1050, 200,
	0, 2259, 1115, 2407, 2259, 0, 1440, 1442, 0, 263,
	0, 272, 1637, 270, 275, 0, 0, 0, 451, 653,
	658, 800, 0, 316, 808, 809, 810, 853, 896, 904,
	945, 820, 822, 823, 824, 0, 0, 980, 976, 977,
	978, 837, 906, 840, 906, 843, 906, 866, 872, 878,
	885, 0, 0, 0, 898, 915, 0, 0, 0, 0,
	0, 0, 0, 0, 951, 952, 953, 955, 960, 959,
	964, 1656, 1476, 1477, 1479, 0, 1488, 0, 0, 1564,
	-2, -2, 1563, 1567, 1568, -2, -2, -2, -2, 1484,
	0, 1493, 1490, 0, 1549, 1278, 1279, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1884, 0, -2, 1863,
	1866, 1870, 1872, 1874, 0, 0, 0, 0, 0, 0,
	2105, 0, 2107, 1885, 2160, 2163, 2098, 0, 2054, 0,
	0, 1537, 1538, 1538, 0, 1954, 0, 2113, 0, 2120,
	2121, 0, 1947, 0, 2154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 1990,
	1993, 1996, 1999, 0, 0, 0, 0, 1979, 0, 0,
	0, 1983, 1749, 1735, 0, 1777, 1775, 1776, 1770, 1777,
	1774, 1727, 0, 1726, 0, 2003, 0, 2005, 2007, 0,
	0, 2009, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1891, 1892, 1893, 1913,
	2010, 2142, 2143, 0, 0, 0, 0, 0, 0, 2016,
	0, 2148, 2017, 2019, 1525, 0, 1518, 0, 1583, 1572,
	1667, 0, 2169, 1637, 1585, 1587, 2170, 2208, 1572, 1572,
	0, 2117, 0, 0, 1628, 0, 0, 0, 1630, 1601,
	0, 0, 1595, 0, 1591, 1592, 1593, 1594, 1602, 1159,
	1632, 1604, 1608, 2236, 0, 1634, 0, 1619, 0, 1621,
	1654, 0, 1613, 1616, 0, 0, 2251, 1668, 0, 352,
	357, 358, 353, 354, 355, 603, 0, 0, 0, 0,
	0, 2119, 0, 1674, 0, 1680, 0, 0, 0, 0,
	612, 0, 0, 0, 0, 215, 1462, 407, 498, 198,
	503, 506, 2175, 198, 512, 515, 521, 228, 0, 666,
	-2, 699, 700, 702, 0, 698, 158, 1339, 0, 0,
	1283, 1285, 2222, 1289, 1295, 1298, 0, 163, 2650, 174,
	0, 1094, 0, 2209, 0, 0, 0, 0, 0, 0,
	1341, 0, 0, 2650, 198, 2650, 198, 177, 179, 182,
	0, 186, 184, 0, 1082, 0, 0, 1085, 115, 1339,
	0, 0, 118, 122, 130, 131, 134, 0, 0, 0,
	140, 0, 0, 0, 1300, 1304, 1312, 0, 0, 0,
	1186, 1187, 1190, 1196, 85, 0, 0, 0, 1308, 1310,
	1316, 95, 96, 2650, 2220, 98, 2650, 0, 1282, 0,
	0, 0, 0, 188, 120, 124, 132, 133, 135, 0,
	1318, 117, 0, 213, 0, 0, 203, 198, 2650, 0,
	205, 0, 206, 207, 222, 0, 0, 0, 1008, 1009,
	1238, 1200, 1201, 0, 1206, 0, 0, 0, 0, 1320,
	1321, 0, 0, 0, 1334, 1637, 234, 0, 1637, 242,
	0, 2183, 0, 372, 0, 0, 0, 0, 1044, 1141,
	0, 1015, 0, 0, 0, 445, 441, 0, 450, 456,
	455, 461, -2, 0, 0, 0, 0, -2, 0, 0,
	1254, 1248, 1249, 0, 0, 0, 0, 2650, 1422, 1428,
	0, 1523, 1538, 468, 1429, 1450, 0, 0, 0, 1439,
	1435, 1432, 1668, 0, 0, 0, 0, 0, 1661, 1664,
	538, 539, 291, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 1051, 1055, 0, 2259, 2259, 0, 2213, 0,
	0, 0, 0, 273, 0, 276, 0, 0, 0, 281,
	282, 283, 284, 285, 286, 275, 265, 1637, 0, 0,
	655, 0, 0, 807, 0, 830, 839, 841, 844, 887,
	889, 906, 916, 935, 936, 1072, 0, 1072, 0, 0,
	956, 1486, 0, 1561, 1492, 1543, 1544, 0, 1280, 0,
	1802, 1847, 0, 0, -2, 0, 0, 1851, 0, 0,
	0, -2, 0, 0, 0, 2106, 2108, 0, 2162, 2097,
	1949, 0, 0, 0, 1953, 1937, 1938, 0, 2057, 2123,
	2152, 2156, 0, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	0, 2202, 2237, 2241, 2030, 2031, 2035, 2216, 0, 0,
	0, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 1772, 0, 0, 2124, 2135, 2137, 1889, 1890, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, -2,
	-2, -2, 1907, 1908, 1909, -2, -2, -2, 1914, 0,
	0, 0, 2138, 2140, 2141, 2145, 2146, 0, 2013, 2014,
	2015, 2147, 0, 1525, 1519, 1580, 0, 1666, 1584, 0,
	1580, 1580, 1532, 1626, 0, 0, 1650, 0, 1598, 0,
	1599, 0, 1631, 0, 1606, 1609, 1610, 1620, 0, 1612,
	0, 1615, 0, 1949, -2, 317, 319, 321, 0, 324,
	325, 0, 0, 606, 607, 0, 605, 589, 0, 0,
	1676, 0, 0, 1752, 1756, 1780, 615, 616, 0, 614,
	500, 509, 230, 0, 1635, 0, 0, 0, 0, 0,
	0, 199, 1092, 1122, 0, 0, 0, 1114, 0, 0,
	1128, 165, 166, 0, 0, 0, 0, 175, 0, 0,
	172, 0, 181, 185, 1079, 0, 0, 0, 0, 1288,
	0, 0, 0, 137, 138, 139, 0, 144, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 1413, 0, 1407, 0, 0, 0, 201, 0, 0,
	0, 1277, 224, 0, 0, 0, 0, 0, 1241, 1242,
	1301, 1305, 1313, 0, 0, 0, 0, 621, 0, 626,
	1336, 242, 240, 0, 243, 0, 246, 247, 0, 249,
	242, 236, 0, 0, 0, 1159, 386, 1018, 1129, 0,
	1131, 0, 1016, 0, 0, 1130, 437, 0, 444, 0,
	458, 0, 0, 1180, 0, 0, 1203, 1214, 1159, 0,
	1253, 1255, 0, 1263, 0, 0, 0, 1424, 1428, 0,
	1417, 1418, 1557, 1430, 1448, -2, 0, 0, 1538, 1456,
	1453, 1459, 1460, 0, 313, 0, 308, 310, 0, 294,
	0, 0, 1047, 1052, 0, 0, 0, 0, 0, 1441,
	1443, 0, 0, 0, 0, 0, 0, 264, 275, 1637,
	300, 0, 801, 825, 897, 937, 1071, 0, 0, 939,
	0, 0, 1560, 1547, 1548, 1545, 1280, 1849, 1853, 0,
	0, 0, 1855, -2, 0, 1877, -2, -2, 2109, 2161,
	1928, 1538, 1950, 1952, 1939, 2155, 1797, 0, 2037, 2034,
	0, 2021, 0, 1974, 1975, 0, 0, 1978, 1980, 1981,
	1982, 1736, 1729, 1728, 2134, 0, 0, 0, 0, 2012,
	1520, 0, 2026, 0, 0, 1588, 2026, 2026, 1627, 0,
	1629, 1596, 1589, 0, 2237, 1622, 1614, 0, 0, 322,
	0, 326, 327, 0, 0, 1670, 1675, 0, 1681, 1751,
	0, 231, 159, 160, 1292, 1296, 1293, 0, 162, 0,
	1093, 0, 1096, 0, 0, 0, 0, 1103, 1115, 0,
	0, 0, 0, 0, 1116, 0, 1145, 0, 1268, 1275,
	0, -2, 0, 0, 0, 168, 191, 0, 0, 192,
	1340, 170, 0, 0, 198, 198, 0, 0, 1284, 1286,
	1299, 0, 0, 0, 0, 147, 0, 0, 1302, 1306,
	1314, 1309, 1311, 1317, 0, 99, 0, 1414, 0, 0,
	1319, 211, 212, 0, 198, 0, 198, 204, 198, 1277,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 235, 306, 242, 374, 0, 1066, 0, 1141,
	1133, 1134, 1135, 0, 1140, 1142, 0, 0, 1032, 1017,
	0, 1028, 0, 0, 1045, 1020, 0, 442, 459, 0,
	462, 0, 465, 1006, 1177, 1211, 1159, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 1426, 1428, 0, 1419,
	1420, 1450, 1556, 0, 0, 0, 1438, 1557, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 277, 0, 278, 279, 280, 266, 267, 657, 659,
	0, 0, 665, 1070, 0, 0, 0, 0, 1546, 1857,
	-2, -2, 1878, 0, 2238, 2240, 1538, 0, 2023, 1540,
	0, 0, -2, 0, 0, 0, 1521, 1504, 0, 1579,
	1571, 1573, 1575, 2537, 2330, 2649, 1505, 1506, 1649, 0,
	1617, 323, 608, 0, 0, 1677, 0, 0, 0, 1294,
	164, 0, 1097, 1098, 2212, 1100, 0, 1102, 1104, 1105,
	1106, 0, 1109, 2261, 0, 1113, 0, 1124, 1146, 0,
	1155, 0, 1270, 1280, 1274, 0, 1272, 1157, 0, 167,
	169, 193, 190, 1277, 0, 171, 180, 0, 0, 119,
	0, 0, 2324, 150, 148, 146, 97, 1281, 121, 0,
	213, 223, 1276, 225, 208, 198, 0, 1303, 1307, 1315,
	0, 1328, 1329, 1330, 1331, 0, 0, 0, 0, 244,
	0, 245, 248, 0, 0, 1081, 0, 1019, 1132, 0,
	1143, 1144, 1022, 0, 1021, 0, 0, 0, 0, 0,
	443, 446, 0, 449, 0, 0, 0, 0, 0, 1256,
	1254, 0, 1262, 0, 0, 0, 1406, 0, 0, 1421,
	1422, 466, 1444, 0, 0, 1450, 1461, 293, 0, 0,
	1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1054, 1157, 0, 0, 1121, 0, 298, 274, 0, 661,
	0, 663, 0, 938, 940, 0, 0, 1951, 2041, 0,
	0, 1976, 1977, -2, 0, 1917, 2025, 2027, 0, 0,
	0, 0, 0, 1590, 609, 1671, 617, 1290, 0, 1297,
	1095, 1099, 0, 0, 0, 1163, 0, 0, 1117, 0,
	1149, 1150, 1066, 0, 1151, 1152, 1153, 1269, 1549, 1275,
	1066, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 202, 226, 1277, 0, 1332, 1333, 0, 0, 241,
	259, 0, 1212, 1020, 1080, 0, 0, 1030, 0, 1033,
	0, 1029, 1026, 1027, 1018, 0, 447, 448, 463, 0,
	464, 0, 1215, 0, 0, 1263, 0, 0, 1409, 1405,
	1428, 1423, 1424, 1668, 1447, 1451, 0, 0, 1155, 1157,
	1077, 0, 660, 0, 0, 948, 949, 0, 0, 0,
	0, 2036, 1541, 1918, 0, 0, 1574, 1576, 1577, 1578,
	1291, 0, 0, 1108, 1168, 0, 0, 0, 1147, 1148,
	1077, 0, 1273, 1271, 1126, 0, 1159, 173, 0, 1157,
	0, 1086, 0, 0, 1089, 0, 0, 151, 2324, 149,
	0, 198, 1325, 198, 0, 262, 0, 256, 254, 255,
	1022, 0, 0, 1137, 1139, 0, 1034, 1066, 1032, 460,
	1213, 1246, 1157, 0, 1155, 0, 1416, 1428, 1410, 1411,
	0, 1426, 0, 316, 316, 1066, 1155, 1020, 1076, 316,
	662, 664, 2033, 2053, 2042, -2, 2608, 2331, 0, 2053,
	2053, 2028, 2029, 0, 0, 1110, 1164, 1165, 0, 1160,
	1161, 1162, 2260, 1111, 1112, 1145, 0, 0, 1163, 194,
	1066, 1083, 0, 0, 1084, 0, 0, 154, 0, 156,
	227, 1323, 0, 1326, 0, 250, 0, 0, 1014, 0,
	1136, 0, 0, 0, 0, 1081, 1022, 1155, 0, 1066,
	0, 1402, 1415, 0, 1425, 1406, 0, 295, 296, 1077,
	1066, 1668, 0, 297, 2038, 0, 0, 2044, 2045, 2046,
	2047, 2048, 2039, 2040, 1101, 0, 1166, 0, 1167, 0,
	0, 0, 1668, 1154, 0, 1168, 178, 1087, 0, 1090,
	0, 152, 0, 0, 0, 257, 258, 1011, 1013, 0,
	1138, 1023, 0, 1025, 1020, 1031, 1066, 0, 1077, 0,
	1408, 2221, 1409, 1445, 0, 1020, 1077, 1120, 0, 2050,
	2051, 0, 0, 0, 1169, 0, 1172, 1173, 0, 1170,
	1125, 0, 1145, 0, 0, 1324, 198, 0, 0, 1024,
	1022, 1077, 1157, 1020, 1155, 1416, 0, 1668, 1020, 2049,
	2052, 2043, 1107, 1171, 1174, 1175, 1156, 1127, 0, 0,
	1327, 260, 0, 1069, 1014, 1020, 1155, 1668, 1066, 1403,
	1668, 1118, 1668, 1074, 0, 0, 1065, 1067, 1068, 1012,
	1668, 1066, 1259, 1077, 1446, 1119, 1088, 1073, 0, 261,
	1257, 1077, 1020, 0, 1020, 1668, 0, 1668, 1260, 1074,
	1258, 1091,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 576, 3, 582, 577, 3,
	587, 588, 580, 578, 592, 579, 589, 581, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 595, 3,
	568, 570, 569, 573, 591, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 585, 3, 586, 583, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 593, 575, 594, 571,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 572, 57911, 574, 57912, 584, 57913, 590, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1442
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1447
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1449
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1452
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1453
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1454
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1455
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1456
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1457
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1458
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1459
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1460
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1461
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1462
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1469
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1551
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1727
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1759
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1792
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1821
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1844
		{
		}
	case 129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1845
		{
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1849
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1858
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1870
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1875
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1882
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1901
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1909
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1918
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1929
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1948
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1958
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1968
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1988
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1994
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2020
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2025
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2111
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2154
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2157
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2163
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2215
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = true
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = false
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = nil
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2388
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2392
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2395
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2430
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2435
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2450
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2565
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2573
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2600
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2734
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = nil
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2851
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2880
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2895
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplemented(sqllex, "alter function")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2993
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3002
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3008
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3013
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3018
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3023
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3028
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3059
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = nil
		}
	case 317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3135
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3149
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3315
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3331
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3335
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3340
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3359
		{
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "CREATE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3373
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3377
		{
			return unimplemented(sqllex, "create access method")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3378
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			return unimplemented(sqllex, "create cast")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3380
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3382
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3383
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3384
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3386
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3387
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3388
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return unimplemented(sqllex, "create publication")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3390
		{
			return unimplemented(sqllex, "create rule")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			return unimplemented(sqllex, "create server")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3399
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3403
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3406
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3407
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3410
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3415
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3416
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3418
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3419
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "drop server")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3432
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3435
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3437
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3438
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3554
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3589
		{

			sqlVAL.union.val = nil
		}
	case 458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "DELETE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3676
		{
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3702
		{
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "DROP")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3902
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3968
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3992
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4000
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4019
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "DELETE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4026
		{
			return helpWith(sqllex, "INSERT")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4039
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "DELETE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "INSERT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4081
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4114
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4194
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4204
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4219
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "GRANT")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4282
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4294
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "RESET")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "RESET")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "USE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4369
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "USE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return unimplemented(sqllex, "set from current")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4598
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4611
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = tree.Low
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = tree.Normal
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = tree.High
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4743
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4744
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4746
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4749
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4750
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4752
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4762
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4766
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4789
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4798
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4808
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.str = "client_encoding"
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.str = "timezone"
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4858
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4873
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4921
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4930
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4960
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5067
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5099
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5140
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = true
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = true
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = false
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5293
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = true
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = false
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = true
		}
	case 906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = false
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5402
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5410
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5421
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5435
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5443
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5448
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5453
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5471
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5476
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5481
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5486
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5534
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5542
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5563
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5568
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5573
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5577
		{
		}
	case 948:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5586
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5600
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5609
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5690
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5697
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5837
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5880
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5889
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5938
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5940
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5950
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5951
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5952
		{
			return helpWith(sqllex, "RESUME")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5979
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6011
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6027
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6121
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6137
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{

			sqlVAL.union.val = nil
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6172
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.str = ""
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6182
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = nil
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6205
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6209
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6235
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6249
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6264
		{
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6361
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6364
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6365
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6371
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6387
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.str = ""
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6535
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6635
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6660
		{

			sqlVAL.union.val = true
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = false
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6671
		{
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6773
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6784
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6801
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6811
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6826
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6891
		{
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6892
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6893
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6894
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6968
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7052
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7061
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7069
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7080
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7085
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7095
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7097
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7099
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7104
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7109
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7147
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7162
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = true
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7172
		{

			sqlVAL.union.val = true
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = false
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7187
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7201
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7213
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7225
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7235
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7245
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = nil
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7355
		{
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7356
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7381
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7383
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7385
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7387
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7389
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7391
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7429
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7447
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7466
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7483
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7500
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7504
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = false
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = true
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = false
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = true
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = false
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7558
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7564
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7570
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7578
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.str = ""
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.str = ""
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7637
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7643
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7868
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7874
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7886
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7892
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7906
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7912
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7953
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = true
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = false
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = tree.Types
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8014
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8018
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8043
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8046
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8047
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8058
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8076
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8085
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8114
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8154
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8158
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8159
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8160
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8179
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8184
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8197
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8202
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8211
		{
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8212
		{
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8213
		{
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8230
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8234
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8262
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8277
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8281
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8368
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.str = ""
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{

		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8409
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.str = ""
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.str = ""
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.str = ""
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.str = ""
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8464
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8478
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8525
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8529
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8587
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8614
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8656
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8709
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8724
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8903
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8904
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8905
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8966
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9026
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = true
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = false
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9079
		{
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9080
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = nil
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9093
		{
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9094
		{
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = true
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = false
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = false
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = true
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9123
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9124
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9127
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9128
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9190
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9195
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9310
		{
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9348
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9349
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9380
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9382
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9397
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9419
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9471
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9510
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9520
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9566
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9596
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9629
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = nil
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = true
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = false
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.str = tree.AstFull
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.str = tree.AstRight
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.str = tree.AstInner
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9748
		{
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9749
		{
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.str = tree.AstHash
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.str = ""
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9841
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9847
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9853
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9863
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = true
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = false
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = true
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = false
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9912
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9925
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9933
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9952
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9962
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9982
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10031
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10043
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = types.Geography
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10093
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10101
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10127
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10135
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = nil
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = types.Int2
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = types.Int
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = types.Float4
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = types.Float
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10178
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10194
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = types.Bool
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = types.Float
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10227
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10233
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10255
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = types.String
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = true
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = false
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = types.Date
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10304
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10312
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10326
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10335
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10343
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10360
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = true
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = false
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = false
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = types.Interval
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10384
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10468
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = nil
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10513
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10573
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10722
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10843
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10909
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10931
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11039
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11148
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11174
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11183
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11198
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11228
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11239
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11240
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11255
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11264
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11330
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11455
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11460
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11469
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11478
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11487
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11496
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11501
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11506
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11516
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11525
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11526
		{
			return unimplemented(sqllex, "treat")
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11552
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.str = ""
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11688
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11701
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11798
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12215
		{
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12287
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12295
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12368
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12384
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12393
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12404
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12413
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12421
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12438
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12657
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12670
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12677
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.str = ""
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
