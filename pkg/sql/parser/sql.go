// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) regionAffinity() tree.RegionalAffinity {
	return u.val.(tree.RegionalAffinity)
}
func (u *sqlSymUnion) survive() tree.Survive {
	return u.val.(tree.Survive)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12403

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1413,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 366,
	-2, 0,
	-1, 73,
	236, 219,
	496, 219,
	-2, 0,
	-1, 84,
	224, 1181,
	238, 1181,
	254, 362,
	380, 362,
	390, 961,
	425, 362,
	437, 961,
	480, 961,
	507, 362,
	533, 961,
	-2, 0,
	-1, 90,
	131, 1413,
	231, 1413,
	518, 1413,
	519, 1413,
	-2, 0,
	-1, 106,
	148, 1384,
	167, 1384,
	180, 1384,
	234, 1384,
	267, 1384,
	332, 1384,
	342, 1384,
	513, 1384,
	-2, 1355,
	-1, 144,
	156, 832,
	253, 832,
	383, 801,
	442, 801,
	499, 832,
	501, 801,
	-2, 0,
	-1, 146,
	4, 1415,
	21, 1415,
	22, 1415,
	23, 1415,
	24, 1415,
	25, 1415,
	26, 1415,
	27, 1415,
	28, 1415,
	30, 1415,
	31, 1415,
	37, 1415,
	42, 1415,
	43, 1415,
	45, 1415,
	46, 1415,
	47, 1415,
	48, 1415,
	49, 1415,
	50, 1415,
	51, 1415,
	52, 1415,
	54, 1415,
	55, 1415,
	56, 1415,
	57, 1415,
	59, 1415,
	60, 1415,
	61, 1415,
	62, 1415,
	63, 1415,
	64, 1415,
	65, 1415,
	69, 1415,
	70, 1415,
	71, 1415,
	72, 1415,
	74, 1415,
	75, 1415,
	76, 1415,
	80, 1415,
	81, 1415,
	82, 1415,
	83, 1415,
	84, 1415,
	85, 1415,
	86, 1415,
	89, 1415,
	90, 1415,
	91, 1415,
	92, 1415,
	93, 1415,
	95, 1415,
	97, 1415,
	98, 1415,
	99, 1415,
	100, 1415,
	101, 1415,
	102, 1415,
	104, 1415,
	105, 1415,
	106, 1415,
	108, 1415,
	109, 1415,
	117, 1415,
	118, 1415,
	119, 1415,
	120, 1415,
	122, 1415,
	123, 1415,
	124, 1415,
	126, 1415,
	127, 1415,
	128, 1415,
	130, 1415,
	131, 1415,
	133, 1415,
	134, 1415,
	135, 1415,
	138, 1415,
	139, 1415,
	140, 1415,
	142, 1415,
	143, 1415,
	145, 1415,
	146, 1415,
	147, 1415,
	149, 1415,
	150, 1415,
	151, 1415,
	152, 1415,
	153, 1415,
	154, 1415,
	155, 1415,
	156, 1415,
	157, 1415,
	158, 1415,
	159, 1415,
	160, 1415,
	161, 1415,
	162, 1415,
	163, 1415,
	164, 1415,
	166, 1415,
	172, 1415,
	173, 1415,
	174, 1415,
	175, 1415,
	179, 1415,
	181, 1415,
	185, 1415,
	186, 1415,
	187, 1415,
	188, 1415,
	189, 1415,
	190, 1415,
	191, 1415,
	192, 1415,
	193, 1415,
	194, 1415,
	195, 1415,
	196, 1415,
	198, 1415,
	199, 1415,
	201, 1415,
	202, 1415,
	204, 1415,
	205, 1415,
	206, 1415,
	207, 1415,
	208, 1415,
	209, 1415,
	210, 1415,
	211, 1415,
	212, 1415,
	214, 1415,
	215, 1415,
	217, 1415,
	218, 1415,
	219, 1415,
	220, 1415,
	224, 1415,
	225, 1415,
	226, 1415,
	227, 1415,
	228, 1415,
	231, 1415,
	232, 1415,
	233, 1415,
	235, 1415,
	237, 1415,
	238, 1415,
	240, 1415,
	242, 1415,
	243, 1415,
	244, 1415,
	246, 1415,
	250, 1415,
	251, 1415,
	252, 1415,
	253, 1415,
	254, 1415,
	255, 1415,
	257, 1415,
	258, 1415,
	259, 1415,
	261, 1415,
	262, 1415,
	264, 1415,
	265, 1415,
	268, 1415,
	272, 1415,
	273, 1415,
	274, 1415,
	277, 1415,
	278, 1415,
	279, 1415,
	280, 1415,
	282, 1415,
	283, 1415,
	284, 1415,
	285, 1415,
	286, 1415,
	287, 1415,
	288, 1415,
	289, 1415,
	290, 1415,
	291, 1415,
	292, 1415,
	293, 1415,
	294, 1415,
	295, 1415,
	296, 1415,
	297, 1415,
	298, 1415,
	299, 1415,
	300, 1415,
	301, 1415,
	302, 1415,
	303, 1415,
	305, 1415,
	307, 1415,
	308, 1415,
	309, 1415,
	310, 1415,
	311, 1415,
	312, 1415,
	313, 1415,
	314, 1415,
	315, 1415,
	316, 1415,
	317, 1415,
	318, 1415,
	320, 1415,
	322, 1415,
	324, 1415,
	325, 1415,
	327, 1415,
	328, 1415,
	329, 1415,
	330, 1415,
	331, 1415,
	334, 1415,
	337, 1415,
	338, 1415,
	339, 1415,
	340, 1415,
	343, 1415,
	344, 1415,
	345, 1415,
	347, 1415,
	349, 1415,
	350, 1415,
	351, 1415,
	352, 1415,
	353, 1415,
	354, 1415,
	355, 1415,
	356, 1415,
	357, 1415,
	358, 1415,
	359, 1415,
	360, 1415,
	362, 1415,
	363, 1415,
	364, 1415,
	365, 1415,
	366, 1415,
	367, 1415,
	368, 1415,
	369, 1415,
	370, 1415,
	371, 1415,
	372, 1415,
	373, 1415,
	374, 1415,
	375, 1415,
	376, 1415,
	378, 1415,
	379, 1415,
	381, 1415,
	382, 1415,
	383, 1415,
	384, 1415,
	385, 1415,
	386, 1415,
	387, 1415,
	388, 1415,
	389, 1415,
	390, 1415,
	391, 1415,
	392, 1415,
	394, 1415,
	396, 1415,
	397, 1415,
	398, 1415,
	403, 1415,
	405, 1415,
	406, 1415,
	407, 1415,
	408, 1415,
	409, 1415,
	410, 1415,
	411, 1415,
	412, 1415,
	414, 1415,
	415, 1415,
	416, 1415,
	418, 1415,
	419, 1415,
	420, 1415,
	421, 1415,
	422, 1415,
	423, 1415,
	425, 1415,
	426, 1415,
	427, 1415,
	428, 1415,
	429, 1415,
	430, 1415,
	431, 1415,
	432, 1415,
	433, 1415,
	434, 1415,
	435, 1415,
	437, 1415,
	438, 1415,
	439, 1415,
	440, 1415,
	441, 1415,
	442, 1415,
	444, 1415,
	445, 1415,
	446, 1415,
	447, 1415,
	448, 1415,
	449, 1415,
	451, 1415,
	452, 1415,
	453, 1415,
	454, 1415,
	455, 1415,
	456, 1415,
	457, 1415,
	459, 1415,
	461, 1415,
	462, 1415,
	463, 1415,
	464, 1415,
	465, 1415,
	466, 1415,
	467, 1415,
	468, 1415,
	469, 1415,
	470, 1415,
	471, 1415,
	472, 1415,
	473, 1415,
	474, 1415,
	476, 1415,
	477, 1415,
	479, 1415,
	481, 1415,
	482, 1415,
	483, 1415,
	484, 1415,
	485, 1415,
	486, 1415,
	487, 1415,
	488, 1415,
	489, 1415,
	491, 1415,
	492, 1415,
	493, 1415,
	494, 1415,
	495, 1415,
	497, 1415,
	499, 1415,
	500, 1415,
	501, 1415,
	502, 1415,
	503, 1415,
	504, 1415,
	506, 1415,
	507, 1415,
	508, 1415,
	509, 1415,
	511, 1415,
	512, 1415,
	515, 1415,
	516, 1415,
	517, 1415,
	518, 1415,
	519, 1415,
	520, 1415,
	521, 1415,
	523, 1415,
	526, 1415,
	527, 1415,
	528, 1415,
	529, 1415,
	530, 1415,
	531, 1415,
	533, 1415,
	534, 1415,
	535, 1415,
	536, 1415,
	541, 1415,
	542, 1415,
	543, 1415,
	544, 1415,
	545, 1415,
	546, 1415,
	-2, 0,
	-1, 147,
	1, 1273,
	129, 1273,
	242, 1273,
	321, 1273,
	378, 1273,
	387, 1273,
	550, 1273,
	574, 1273,
	-2, 0,
	-1, 149,
	1, 1273,
	574, 1273,
	-2, 0,
	-1, 150,
	1, 1273,
	574, 1273,
	-2, 0,
	-1, 151,
	1, 1273,
	496, 1273,
	574, 1273,
	-2, 0,
	-1, 180,
	148, 1383,
	167, 1383,
	180, 1383,
	234, 1383,
	267, 1383,
	332, 1383,
	342, 1383,
	513, 1383,
	-2, 1358,
	-1, 222,
	4, 1422,
	5, 1422,
	6, 1422,
	7, 1422,
	8, 1422,
	9, 1422,
	10, 1422,
	21, 1422,
	22, 1422,
	23, 1422,
	24, 1422,
	25, 1422,
	26, 1422,
	27, 1422,
	28, 1422,
	30, 1422,
	31, 1422,
	37, 1422,
	38, 1422,
	42, 1422,
	43, 1422,
	44, 1422,
	45, 1422,
	46, 1422,
	47, 1422,
	48, 1422,
	49, 1422,
	50, 1422,
	51, 1422,
	52, 1422,
	54, 1422,
	55, 1422,
	56, 1422,
	57, 1422,
	59, 1422,
	60, 1422,
	61, 1422,
	62, 1422,
	63, 1422,
	64, 1422,
	65, 1422,
	66, 1422,
	67, 1422,
	68, 1422,
	69, 1422,
	70, 1422,
	71, 1422,
	72, 1422,
	74, 1422,
	75, 1422,
	76, 1422,
	78, 1422,
	80, 1422,
	81, 1422,
	82, 1422,
	83, 1422,
	84, 1422,
	85, 1422,
	86, 1422,
	89, 1422,
	90, 1422,
	91, 1422,
	92, 1422,
	93, 1422,
	95, 1422,
	97, 1422,
	98, 1422,
	99, 1422,
	100, 1422,
	101, 1422,
	102, 1422,
	104, 1422,
	105, 1422,
	106, 1422,
	107, 1422,
	108, 1422,
	109, 1422,
	110, 1422,
	111, 1422,
	112, 1422,
	113, 1422,
	114, 1422,
	115, 1422,
	116, 1422,
	117, 1422,
	118, 1422,
	119, 1422,
	120, 1422,
	121, 1422,
	122, 1422,
	123, 1422,
	124, 1422,
	125, 1422,
	126, 1422,
	127, 1422,
	128, 1422,
	130, 1422,
	131, 1422,
	133, 1422,
	134, 1422,
	135, 1422,
	138, 1422,
	139, 1422,
	140, 1422,
	142, 1422,
	143, 1422,
	145, 1422,
	146, 1422,
	147, 1422,
	149, 1422,
	150, 1422,
	151, 1422,
	152, 1422,
	153, 1422,
	154, 1422,
	155, 1422,
	156, 1422,
	157, 1422,
	158, 1422,
	159, 1422,
	160, 1422,
	161, 1422,
	162, 1422,
	163, 1422,
	164, 1422,
	165, 1422,
	166, 1422,
	172, 1422,
	173, 1422,
	174, 1422,
	175, 1422,
	179, 1422,
	181, 1422,
	184, 1422,
	185, 1422,
	186, 1422,
	187, 1422,
	188, 1422,
	189, 1422,
	190, 1422,
	191, 1422,
	192, 1422,
	193, 1422,
	194, 1422,
	195, 1422,
	196, 1422,
	198, 1422,
	199, 1422,
	201, 1422,
	202, 1422,
	204, 1422,
	205, 1422,
	206, 1422,
	207, 1422,
	208, 1422,
	209, 1422,
	210, 1422,
	211, 1422,
	212, 1422,
	213, 1422,
	214, 1422,
	215, 1422,
	217, 1422,
	218, 1422,
	219, 1422,
	220, 1422,
	224, 1422,
	225, 1422,
	226, 1422,
	227, 1422,
	228, 1422,
	230, 1422,
	231, 1422,
	232, 1422,
	233, 1422,
	235, 1422,
	237, 1422,
	238, 1422,
	239, 1422,
	240, 1422,
	241, 1422,
	242, 1422,
	243, 1422,
	244, 1422,
	245, 1422,
	246, 1422,
	250, 1422,
	251, 1422,
	252, 1422,
	253, 1422,
	254, 1422,
	255, 1422,
	257, 1422,
	258, 1422,
	259, 1422,
	261, 1422,
	262, 1422,
	263, 1422,
	264, 1422,
	265, 1422,
	266, 1422,
	268, 1422,
	272, 1422,
	273, 1422,
	274, 1422,
	275, 1422,
	276, 1422,
	277, 1422,
	278, 1422,
	279, 1422,
	280, 1422,
	282, 1422,
	283, 1422,
	284, 1422,
	285, 1422,
	286, 1422,
	287, 1422,
	288, 1422,
	289, 1422,
	290, 1422,
	291, 1422,
	292, 1422,
	293, 1422,
	294, 1422,
	295, 1422,
	296, 1422,
	297, 1422,
	298, 1422,
	299, 1422,
	300, 1422,
	301, 1422,
	302, 1422,
	303, 1422,
	305, 1422,
	306, 1422,
	307, 1422,
	308, 1422,
	309, 1422,
	310, 1422,
	311, 1422,
	312, 1422,
	313, 1422,
	314, 1422,
	315, 1422,
	316, 1422,
	317, 1422,
	318, 1422,
	319, 1422,
	320, 1422,
	321, 1422,
	322, 1422,
	323, 1422,
	324, 1422,
	325, 1422,
	326, 1422,
	327, 1422,
	328, 1422,
	329, 1422,
	330, 1422,
	331, 1422,
	334, 1422,
	338, 1422,
	339, 1422,
	340, 1422,
	343, 1422,
	344, 1422,
	345, 1422,
	346, 1422,
	347, 1422,
	348, 1422,
	349, 1422,
	350, 1422,
	351, 1422,
	352, 1422,
	353, 1422,
	354, 1422,
	355, 1422,
	356, 1422,
	357, 1422,
	358, 1422,
	359, 1422,
	360, 1422,
	362, 1422,
	363, 1422,
	364, 1422,
	365, 1422,
	366, 1422,
	367, 1422,
	368, 1422,
	369, 1422,
	370, 1422,
	371, 1422,
	372, 1422,
	373, 1422,
	374, 1422,
	375, 1422,
	376, 1422,
	378, 1422,
	379, 1422,
	381, 1422,
	382, 1422,
	383, 1422,
	384, 1422,
	385, 1422,
	386, 1422,
	387, 1422,
	388, 1422,
	389, 1422,
	390, 1422,
	391, 1422,
	392, 1422,
	394, 1422,
	396, 1422,
	397, 1422,
	398, 1422,
	403, 1422,
	405, 1422,
	406, 1422,
	407, 1422,
	408, 1422,
	409, 1422,
	410, 1422,
	411, 1422,
	412, 1422,
	414, 1422,
	415, 1422,
	416, 1422,
	417, 1422,
	418, 1422,
	419, 1422,
	420, 1422,
	421, 1422,
	422, 1422,
	423, 1422,
	425, 1422,
	426, 1422,
	427, 1422,
	428, 1422,
	429, 1422,
	430, 1422,
	431, 1422,
	432, 1422,
	433, 1422,
	434, 1422,
	435, 1422,
	437, 1422,
	438, 1422,
	439, 1422,
	440, 1422,
	441, 1422,
	442, 1422,
	443, 1422,
	444, 1422,
	445, 1422,
	446, 1422,
	447, 1422,
	448, 1422,
	449, 1422,
	450, 1422,
	451, 1422,
	452, 1422,
	453, 1422,
	454, 1422,
	455, 1422,
	456, 1422,
	457, 1422,
	459, 1422,
	461, 1422,
	462, 1422,
	463, 1422,
	464, 1422,
	465, 1422,
	466, 1422,
	467, 1422,
	468, 1422,
	469, 1422,
	470, 1422,
	471, 1422,
	472, 1422,
	473, 1422,
	474, 1422,
	476, 1422,
	477, 1422,
	478, 1422,
	479, 1422,
	481, 1422,
	482, 1422,
	483, 1422,
	484, 1422,
	485, 1422,
	486, 1422,
	487, 1422,
	488, 1422,
	489, 1422,
	491, 1422,
	492, 1422,
	493, 1422,
	494, 1422,
	495, 1422,
	497, 1422,
	499, 1422,
	500, 1422,
	501, 1422,
	502, 1422,
	503, 1422,
	504, 1422,
	505, 1422,
	506, 1422,
	507, 1422,
	508, 1422,
	509, 1422,
	511, 1422,
	512, 1422,
	514, 1422,
	515, 1422,
	516, 1422,
	517, 1422,
	518, 1422,
	519, 1422,
	520, 1422,
	521, 1422,
	522, 1422,
	523, 1422,
	526, 1422,
	527, 1422,
	528, 1422,
	529, 1422,
	530, 1422,
	531, 1422,
	533, 1422,
	534, 1422,
	535, 1422,
	536, 1422,
	541, 1422,
	542, 1422,
	543, 1422,
	544, 1422,
	545, 1422,
	546, 1422,
	547, 1422,
	555, 1422,
	562, 1422,
	563, 1422,
	564, 1422,
	571, 1422,
	575, 1422,
	-2, 0,
	-1, 708,
	4, 1179,
	21, 1179,
	22, 1179,
	23, 1179,
	24, 1179,
	25, 1179,
	26, 1179,
	27, 1179,
	28, 1179,
	30, 1179,
	31, 1179,
	37, 1179,
	42, 1179,
	43, 1179,
	45, 1179,
	46, 1179,
	47, 1179,
	48, 1179,
	49, 1179,
	50, 1179,
	51, 1179,
	52, 1179,
	54, 1179,
	55, 1179,
	56, 1179,
	57, 1179,
	59, 1179,
	60, 1179,
	61, 1179,
	62, 1179,
	63, 1179,
	64, 1179,
	65, 1179,
	69, 1179,
	70, 1179,
	71, 1179,
	72, 1179,
	74, 1179,
	75, 1179,
	76, 1179,
	80, 1179,
	81, 1179,
	82, 1179,
	83, 1179,
	84, 1179,
	85, 1179,
	86, 1179,
	89, 1179,
	90, 1179,
	91, 1179,
	92, 1179,
	93, 1179,
	95, 1179,
	97, 1179,
	98, 1179,
	99, 1179,
	100, 1179,
	101, 1179,
	102, 1179,
	104, 1179,
	105, 1179,
	106, 1179,
	108, 1179,
	109, 1179,
	117, 1179,
	118, 1179,
	119, 1179,
	120, 1179,
	122, 1179,
	123, 1179,
	124, 1179,
	126, 1179,
	127, 1179,
	128, 1179,
	130, 1179,
	131, 1179,
	133, 1179,
	134, 1179,
	135, 1179,
	138, 1179,
	139, 1179,
	140, 1179,
	142, 1179,
	143, 1179,
	145, 1179,
	146, 1179,
	147, 1179,
	149, 1179,
	150, 1179,
	151, 1179,
	152, 1179,
	153, 1179,
	154, 1179,
	155, 1179,
	156, 1179,
	157, 1179,
	158, 1179,
	159, 1179,
	160, 1179,
	161, 1179,
	162, 1179,
	163, 1179,
	164, 1179,
	166, 1179,
	172, 1179,
	173, 1179,
	174, 1179,
	175, 1179,
	179, 1179,
	181, 1179,
	185, 1179,
	186, 1179,
	187, 1179,
	188, 1179,
	189, 1179,
	190, 1179,
	191, 1179,
	192, 1179,
	193, 1179,
	194, 1179,
	195, 1179,
	196, 1179,
	198, 1179,
	199, 1179,
	201, 1179,
	202, 1179,
	204, 1179,
	205, 1179,
	206, 1179,
	207, 1179,
	208, 1179,
	209, 1179,
	210, 1179,
	211, 1179,
	212, 1179,
	214, 1179,
	215, 1179,
	217, 1179,
	218, 1179,
	219, 1179,
	220, 1179,
	224, 1179,
	225, 1179,
	226, 1179,
	227, 1179,
	228, 1179,
	231, 1179,
	232, 1179,
	233, 1179,
	235, 1179,
	237, 1179,
	238, 1179,
	240, 1179,
	242, 1179,
	243, 1179,
	244, 1179,
	246, 1179,
	250, 1179,
	251, 1179,
	252, 1179,
	253, 1179,
	254, 1179,
	255, 1179,
	257, 1179,
	258, 1179,
	259, 1179,
	261, 1179,
	262, 1179,
	264, 1179,
	265, 1179,
	268, 1179,
	272, 1179,
	273, 1179,
	274, 1179,
	277, 1179,
	278, 1179,
	279, 1179,
	280, 1179,
	282, 1179,
	283, 1179,
	284, 1179,
	285, 1179,
	286, 1179,
	287, 1179,
	288, 1179,
	289, 1179,
	290, 1179,
	291, 1179,
	292, 1179,
	293, 1179,
	294, 1179,
	295, 1179,
	296, 1179,
	297, 1179,
	298, 1179,
	299, 1179,
	300, 1179,
	301, 1179,
	302, 1179,
	303, 1179,
	305, 1179,
	307, 1179,
	308, 1179,
	309, 1179,
	310, 1179,
	311, 1179,
	312, 1179,
	313, 1179,
	314, 1179,
	315, 1179,
	316, 1179,
	317, 1179,
	318, 1179,
	320, 1179,
	322, 1179,
	324, 1179,
	325, 1179,
	327, 1179,
	328, 1179,
	329, 1179,
	330, 1179,
	331, 1179,
	334, 1179,
	338, 1179,
	339, 1179,
	340, 1179,
	343, 1179,
	344, 1179,
	345, 1179,
	347, 1179,
	349, 1179,
	350, 1179,
	351, 1179,
	352, 1179,
	353, 1179,
	354, 1179,
	355, 1179,
	356, 1179,
	357, 1179,
	358, 1179,
	359, 1179,
	360, 1179,
	362, 1179,
	363, 1179,
	364, 1179,
	365, 1179,
	366, 1179,
	367, 1179,
	368, 1179,
	369, 1179,
	370, 1179,
	371, 1179,
	372, 1179,
	373, 1179,
	374, 1179,
	375, 1179,
	376, 1179,
	378, 1179,
	379, 1179,
	381, 1179,
	382, 1179,
	383, 1179,
	384, 1179,
	385, 1179,
	386, 1179,
	387, 1179,
	388, 1179,
	389, 1179,
	390, 1179,
	391, 1179,
	392, 1179,
	394, 1179,
	396, 1179,
	397, 1179,
	398, 1179,
	403, 1179,
	405, 1179,
	406, 1179,
	407, 1179,
	408, 1179,
	409, 1179,
	410, 1179,
	411, 1179,
	412, 1179,
	414, 1179,
	415, 1179,
	416, 1179,
	418, 1179,
	419, 1179,
	420, 1179,
	421, 1179,
	422, 1179,
	423, 1179,
	425, 1179,
	426, 1179,
	427, 1179,
	428, 1179,
	429, 1179,
	430, 1179,
	431, 1179,
	432, 1179,
	433, 1179,
	434, 1179,
	435, 1179,
	437, 1179,
	438, 1179,
	439, 1179,
	440, 1179,
	441, 1179,
	442, 1179,
	444, 1179,
	445, 1179,
	446, 1179,
	447, 1179,
	448, 1179,
	449, 1179,
	451, 1179,
	452, 1179,
	453, 1179,
	454, 1179,
	455, 1179,
	456, 1179,
	457, 1179,
	459, 1179,
	461, 1179,
	462, 1179,
	463, 1179,
	464, 1179,
	465, 1179,
	466, 1179,
	467, 1179,
	468, 1179,
	469, 1179,
	470, 1179,
	471, 1179,
	472, 1179,
	473, 1179,
	474, 1179,
	476, 1179,
	477, 1179,
	479, 1179,
	481, 1179,
	482, 1179,
	483, 1179,
	484, 1179,
	485, 1179,
	486, 1179,
	487, 1179,
	488, 1179,
	489, 1179,
	491, 1179,
	492, 1179,
	493, 1179,
	494, 1179,
	495, 1179,
	497, 1179,
	499, 1179,
	500, 1179,
	501, 1179,
	502, 1179,
	503, 1179,
	504, 1179,
	506, 1179,
	507, 1179,
	508, 1179,
	509, 1179,
	511, 1179,
	512, 1179,
	515, 1179,
	516, 1179,
	517, 1179,
	518, 1179,
	519, 1179,
	520, 1179,
	521, 1179,
	523, 1179,
	526, 1179,
	527, 1179,
	528, 1179,
	529, 1179,
	530, 1179,
	531, 1179,
	533, 1179,
	534, 1179,
	535, 1179,
	536, 1179,
	541, 1179,
	542, 1179,
	543, 1179,
	544, 1179,
	545, 1179,
	546, 1179,
	-2, 0,
	-1, 727,
	183, 2180,
	496, 2180,
	554, 2180,
	573, 2180,
	-2, 0,
	-1, 728,
	183, 2280,
	496, 2280,
	554, 2280,
	573, 2280,
	-2, 0,
	-1, 729,
	183, 2167,
	496, 2167,
	554, 2167,
	573, 2167,
	-2, 0,
	-1, 731,
	183, 2409,
	496, 2409,
	554, 2409,
	573, 2409,
	-2, 0,
	-1, 733,
	183, 2446,
	496, 2446,
	554, 2446,
	573, 2446,
	-2, 0,
	-1, 740,
	183, 2307,
	496, 2307,
	554, 2307,
	573, 2307,
	-2, 640,
	-1, 769,
	573, 2115,
	576, 2115,
	-2, 894,
	-1, 770,
	573, 2117,
	576, 2117,
	-2, 895,
	-1, 771,
	573, 2116,
	576, 2116,
	-2, 896,
	-1, 772,
	576, 2042,
	-2, 897,
	-1, 795,
	180, 233,
	-2, 0,
	-1, 818,
	44, 2089,
	-2, 0,
	-1, 819,
	533, 1158,
	-2, 962,
	-1, 835,
	4, 1551,
	21, 1551,
	22, 1551,
	23, 1551,
	24, 1551,
	25, 1551,
	26, 1551,
	27, 1551,
	28, 1551,
	30, 1551,
	31, 1551,
	37, 1551,
	42, 1551,
	43, 1551,
	45, 1551,
	46, 1551,
	47, 1551,
	48, 1551,
	49, 1551,
	50, 1551,
	51, 1551,
	52, 1551,
	54, 1551,
	55, 1551,
	56, 1551,
	57, 1551,
	59, 1551,
	60, 1551,
	61, 1551,
	62, 1551,
	63, 1551,
	64, 1551,
	65, 1551,
	69, 1551,
	70, 1551,
	71, 1551,
	72, 1551,
	74, 1551,
	75, 1551,
	76, 1551,
	80, 1551,
	81, 1551,
	82, 1551,
	83, 1551,
	84, 1551,
	85, 1551,
	86, 1551,
	89, 1551,
	90, 1551,
	91, 1551,
	92, 1551,
	93, 1551,
	95, 1551,
	97, 1551,
	98, 1551,
	99, 1551,
	100, 1551,
	101, 1551,
	102, 1551,
	104, 1551,
	105, 1551,
	106, 1551,
	108, 1551,
	109, 1551,
	117, 1551,
	118, 1551,
	119, 1551,
	120, 1551,
	122, 1551,
	123, 1551,
	124, 1551,
	126, 1551,
	127, 1551,
	128, 1551,
	130, 1551,
	131, 1551,
	133, 1551,
	134, 1551,
	135, 1551,
	138, 1551,
	139, 1551,
	140, 1551,
	142, 1551,
	143, 1551,
	145, 1551,
	146, 1551,
	147, 1551,
	149, 1551,
	150, 1551,
	151, 1551,
	152, 1551,
	153, 1551,
	154, 1551,
	155, 1551,
	156, 1551,
	157, 1551,
	158, 1551,
	159, 1551,
	160, 1551,
	161, 1551,
	162, 1551,
	163, 1551,
	164, 1551,
	166, 1551,
	172, 1551,
	173, 1551,
	174, 1551,
	175, 1551,
	179, 1551,
	181, 1551,
	185, 1551,
	186, 1551,
	187, 1551,
	188, 1551,
	189, 1551,
	190, 1551,
	191, 1551,
	192, 1551,
	193, 1551,
	194, 1551,
	195, 1551,
	196, 1551,
	198, 1551,
	199, 1551,
	201, 1551,
	202, 1551,
	204, 1551,
	205, 1551,
	206, 1551,
	207, 1551,
	208, 1551,
	209, 1551,
	210, 1551,
	211, 1551,
	212, 1551,
	214, 1551,
	215, 1551,
	217, 1551,
	218, 1551,
	219, 1551,
	220, 1551,
	224, 1551,
	225, 1551,
	226, 1551,
	227, 1551,
	228, 1551,
	231, 1551,
	232, 1551,
	233, 1551,
	235, 1551,
	237, 1551,
	238, 1551,
	240, 1551,
	242, 1551,
	243, 1551,
	244, 1551,
	246, 1551,
	250, 1551,
	251, 1551,
	252, 1551,
	253, 1551,
	254, 1551,
	255, 1551,
	257, 1551,
	258, 1551,
	259, 1551,
	261, 1551,
	262, 1551,
	264, 1551,
	265, 1551,
	268, 1551,
	272, 1551,
	273, 1551,
	274, 1551,
	277, 1551,
	278, 1551,
	279, 1551,
	280, 1551,
	282, 1551,
	283, 1551,
	284, 1551,
	285, 1551,
	286, 1551,
	287, 1551,
	288, 1551,
	289, 1551,
	290, 1551,
	291, 1551,
	292, 1551,
	293, 1551,
	294, 1551,
	295, 1551,
	296, 1551,
	297, 1551,
	298, 1551,
	299, 1551,
	300, 1551,
	301, 1551,
	302, 1551,
	303, 1551,
	305, 1551,
	307, 1551,
	308, 1551,
	309, 1551,
	310, 1551,
	311, 1551,
	312, 1551,
	313, 1551,
	314, 1551,
	315, 1551,
	316, 1551,
	317, 1551,
	318, 1551,
	320, 1551,
	322, 1551,
	324, 1551,
	325, 1551,
	327, 1551,
	328, 1551,
	329, 1551,
	330, 1551,
	331, 1551,
	334, 1551,
	338, 1551,
	339, 1551,
	340, 1551,
	343, 1551,
	344, 1551,
	345, 1551,
	347, 1551,
	349, 1551,
	350, 1551,
	351, 1551,
	352, 1551,
	353, 1551,
	354, 1551,
	355, 1551,
	356, 1551,
	357, 1551,
	358, 1551,
	359, 1551,
	360, 1551,
	362, 1551,
	363, 1551,
	364, 1551,
	365, 1551,
	366, 1551,
	367, 1551,
	368, 1551,
	369, 1551,
	370, 1551,
	371, 1551,
	372, 1551,
	373, 1551,
	374, 1551,
	375, 1551,
	376, 1551,
	378, 1551,
	379, 1551,
	381, 1551,
	382, 1551,
	383, 1551,
	384, 1551,
	385, 1551,
	386, 1551,
	387, 1551,
	388, 1551,
	389, 1551,
	390, 1551,
	391, 1551,
	392, 1551,
	394, 1551,
	396, 1551,
	397, 1551,
	398, 1551,
	403, 1551,
	405, 1551,
	406, 1551,
	407, 1551,
	408, 1551,
	409, 1551,
	410, 1551,
	411, 1551,
	412, 1551,
	414, 1551,
	415, 1551,
	416, 1551,
	418, 1551,
	419, 1551,
	420, 1551,
	421, 1551,
	422, 1551,
	423, 1551,
	425, 1551,
	426, 1551,
	427, 1551,
	428, 1551,
	429, 1551,
	430, 1551,
	431, 1551,
	432, 1551,
	433, 1551,
	434, 1551,
	435, 1551,
	437, 1551,
	438, 1551,
	439, 1551,
	440, 1551,
	441, 1551,
	442, 1551,
	444, 1551,
	445, 1551,
	446, 1551,
	447, 1551,
	448, 1551,
	449, 1551,
	451, 1551,
	452, 1551,
	453, 1551,
	454, 1551,
	455, 1551,
	456, 1551,
	457, 1551,
	459, 1551,
	461, 1551,
	462, 1551,
	463, 1551,
	464, 1551,
	465, 1551,
	466, 1551,
	467, 1551,
	468, 1551,
	469, 1551,
	470, 1551,
	471, 1551,
	472, 1551,
	473, 1551,
	474, 1551,
	476, 1551,
	477, 1551,
	479, 1551,
	481, 1551,
	482, 1551,
	483, 1551,
	484, 1551,
	485, 1551,
	486, 1551,
	487, 1551,
	488, 1551,
	489, 1551,
	491, 1551,
	492, 1551,
	493, 1551,
	494, 1551,
	495, 1551,
	497, 1551,
	499, 1551,
	500, 1551,
	501, 1551,
	502, 1551,
	503, 1551,
	504, 1551,
	506, 1551,
	507, 1551,
	508, 1551,
	509, 1551,
	511, 1551,
	512, 1551,
	515, 1551,
	516, 1551,
	517, 1551,
	518, 1551,
	519, 1551,
	520, 1551,
	521, 1551,
	523, 1551,
	526, 1551,
	527, 1551,
	528, 1551,
	529, 1551,
	530, 1551,
	531, 1551,
	533, 1551,
	534, 1551,
	535, 1551,
	536, 1551,
	541, 1551,
	542, 1551,
	543, 1551,
	544, 1551,
	545, 1551,
	546, 1551,
	-2, 0,
	-1, 843,
	254, 366,
	-2, 0,
	-1, 913,
	383, 802,
	442, 802,
	501, 802,
	-2, 0,
	-1, 914,
	383, 801,
	442, 801,
	501, 801,
	-2, 743,
	-1, 918,
	1, 846,
	570, 846,
	572, 846,
	574, 846,
	-2, 0,
	-1, 919,
	1, 778,
	570, 778,
	572, 778,
	574, 778,
	-2, 0,
	-1, 920,
	1, 780,
	570, 780,
	572, 780,
	574, 780,
	-2, 0,
	-1, 921,
	1, 893,
	180, 893,
	570, 893,
	572, 893,
	574, 893,
	-2, 0,
	-1, 929,
	1, 805,
	570, 805,
	572, 805,
	574, 805,
	-2, 0,
	-1, 935,
	1, 846,
	570, 846,
	572, 846,
	574, 846,
	-2, 0,
	-1, 936,
	1, 848,
	570, 848,
	572, 848,
	574, 848,
	-2, 0,
	-1, 937,
	1, 851,
	570, 851,
	572, 851,
	574, 851,
	-2, 0,
	-1, 943,
	1, 868,
	570, 868,
	572, 868,
	574, 868,
	-2, 0,
	-1, 944,
	1, 870,
	570, 870,
	572, 870,
	574, 870,
	-2, 0,
	-1, 994,
	167, 1426,
	180, 1426,
	267, 1426,
	332, 1426,
	-2, 1362,
	-1, 1009,
	167, 1425,
	180, 1425,
	267, 1425,
	332, 1425,
	-2, 1359,
	-1, 1035,
	573, 2114,
	-2, 648,
	-1, 1063,
	5, 2106,
	571, 2104,
	-2, 2095,
	-1, 1071,
	5, 2127,
	571, 2124,
	-2, 2115,
	-1, 1072,
	5, 2128,
	571, 2125,
	-2, 2116,
	-1, 1080,
	573, 2112,
	-2, 2094,
	-1, 1081,
	571, 2528,
	-2, 2113,
	-1, 1104,
	571, 2527,
	-2, 2129,
	-1, 1105,
	5, 1626,
	-2, 2498,
	-1, 1106,
	5, 1627,
	-2, 2499,
	-1, 1107,
	5, 1628,
	-2, 2513,
	-1, 1108,
	5, 1629,
	-2, 2477,
	-1, 1109,
	5, 1630,
	-2, 2511,
	-1, 1110,
	5, 1638,
	-2, 2490,
	-1, 1111,
	5, 1625,
	-2, 2486,
	-1, 1112,
	5, 1625,
	-2, 2485,
	-1, 1113,
	5, 1625,
	-2, 2504,
	-1, 1114,
	5, 1636,
	-2, 2479,
	-1, 1115,
	5, 1641,
	-2, 2478,
	-1, 1116,
	5, 1643,
	-2, 2523,
	-1, 1119,
	5, 1665,
	-2, 2516,
	-1, 1120,
	5, 1657,
	-2, 2517,
	-1, 1121,
	5, 1665,
	-2, 2518,
	-1, 1122,
	5, 1661,
	-2, 2519,
	-1, 1123,
	5, 1611,
	-2, 2491,
	-1, 1124,
	5, 1612,
	-2, 2492,
	-1, 1125,
	5, 1613,
	-2, 2480,
	-1, 1153,
	5, 1648,
	-2, 2524,
	-1, 1154,
	5, 1649,
	-2, 2514,
	-1, 1155,
	5, 1650,
	534, 1650,
	-2, 2481,
	-1, 1156,
	5, 1651,
	534, 1651,
	-2, 2482,
	-1, 1193,
	571, 2124,
	-2, 2115,
	-1, 1194,
	571, 2125,
	-2, 2116,
	-1, 1293,
	183, 2446,
	496, 2446,
	554, 2446,
	573, 2446,
	-2, 0,
	-1, 1296,
	1, 626,
	574, 626,
	-2, 1281,
	-1, 1423,
	405, 2090,
	444, 2090,
	564, 2090,
	-2, 2080,
	-1, 1434,
	575, 2090,
	-2, 2091,
	-1, 1439,
	1, 1155,
	570, 1155,
	572, 1155,
	574, 1155,
	-2, 1411,
	-1, 1487,
	390, 961,
	533, 961,
	-2, 361,
	-1, 1503,
	44, 2088,
	-2, 929,
	-1, 1510,
	1, 1155,
	570, 1155,
	572, 1155,
	574, 1155,
	-2, 1411,
	-1, 1517,
	4, 1179,
	21, 1179,
	22, 1179,
	23, 1179,
	24, 1179,
	25, 1179,
	26, 1179,
	27, 1179,
	28, 1179,
	30, 1179,
	31, 1179,
	37, 1179,
	42, 1179,
	43, 1179,
	45, 1179,
	46, 1179,
	47, 1179,
	48, 1179,
	49, 1179,
	50, 1179,
	51, 1179,
	52, 1179,
	54, 1179,
	55, 1179,
	56, 1179,
	57, 1179,
	59, 1179,
	60, 1179,
	61, 1179,
	62, 1179,
	63, 1179,
	64, 1179,
	65, 1179,
	69, 1179,
	70, 1179,
	71, 1179,
	72, 1179,
	74, 1179,
	75, 1179,
	76, 1179,
	80, 1179,
	81, 1179,
	82, 1179,
	83, 1179,
	84, 1179,
	85, 1179,
	86, 1179,
	89, 1179,
	90, 1179,
	91, 1179,
	92, 1179,
	93, 1179,
	95, 1179,
	97, 1179,
	98, 1179,
	99, 1179,
	100, 1179,
	101, 1179,
	102, 1179,
	104, 1179,
	105, 1179,
	106, 1179,
	108, 1179,
	109, 1179,
	117, 1179,
	118, 1179,
	119, 1179,
	120, 1179,
	122, 1179,
	123, 1179,
	124, 1179,
	126, 1179,
	127, 1179,
	128, 1179,
	130, 1179,
	131, 1179,
	133, 1179,
	134, 1179,
	135, 1179,
	138, 1179,
	139, 1179,
	140, 1179,
	142, 1179,
	143, 1179,
	145, 1179,
	146, 1179,
	147, 1179,
	149, 1179,
	150, 1179,
	151, 1179,
	152, 1179,
	153, 1179,
	154, 1179,
	155, 1179,
	156, 1179,
	157, 1179,
	158, 1179,
	159, 1179,
	160, 1179,
	161, 1179,
	162, 1179,
	163, 1179,
	164, 1179,
	172, 1179,
	173, 1179,
	174, 1179,
	175, 1179,
	179, 1179,
	181, 1179,
	185, 1179,
	186, 1179,
	187, 1179,
	188, 1179,
	189, 1179,
	190, 1179,
	191, 1179,
	192, 1179,
	193, 1179,
	194, 1179,
	195, 1179,
	196, 1179,
	198, 1179,
	199, 1179,
	201, 1179,
	202, 1179,
	204, 1179,
	205, 1179,
	206, 1179,
	207, 1179,
	208, 1179,
	209, 1179,
	210, 1179,
	211, 1179,
	212, 1179,
	214, 1179,
	215, 1179,
	217, 1179,
	218, 1179,
	219, 1179,
	220, 1179,
	225, 1179,
	226, 1179,
	227, 1179,
	228, 1179,
	231, 1179,
	232, 1179,
	233, 1179,
	235, 1179,
	237, 1179,
	238, 1179,
	240, 1179,
	242, 1179,
	243, 1179,
	244, 1179,
	246, 1179,
	250, 1179,
	251, 1179,
	252, 1179,
	253, 1179,
	254, 1179,
	255, 1179,
	257, 1179,
	258, 1179,
	259, 1179,
	261, 1179,
	262, 1179,
	264, 1179,
	265, 1179,
	268, 1179,
	272, 1179,
	273, 1179,
	274, 1179,
	277, 1179,
	278, 1179,
	279, 1179,
	280, 1179,
	282, 1179,
	283, 1179,
	284, 1179,
	285, 1179,
	286, 1179,
	287, 1179,
	288, 1179,
	289, 1179,
	290, 1179,
	291, 1179,
	292, 1179,
	293, 1179,
	294, 1179,
	295, 1179,
	296, 1179,
	297, 1179,
	298, 1179,
	299, 1179,
	300, 1179,
	301, 1179,
	302, 1179,
	303, 1179,
	305, 1179,
	307, 1179,
	308, 1179,
	309, 1179,
	310, 1179,
	311, 1179,
	312, 1179,
	313, 1179,
	314, 1179,
	315, 1179,
	316, 1179,
	317, 1179,
	318, 1179,
	320, 1179,
	324, 1179,
	325, 1179,
	327, 1179,
	328, 1179,
	329, 1179,
	330, 1179,
	331, 1179,
	334, 1179,
	336, 1179,
	338, 1179,
	339, 1179,
	340, 1179,
	343, 1179,
	344, 1179,
	345, 1179,
	347, 1179,
	349, 1179,
	350, 1179,
	351, 1179,
	352, 1179,
	353, 1179,
	354, 1179,
	355, 1179,
	356, 1179,
	357, 1179,
	358, 1179,
	359, 1179,
	360, 1179,
	362, 1179,
	363, 1179,
	364, 1179,
	365, 1179,
	366, 1179,
	367, 1179,
	368, 1179,
	369, 1179,
	370, 1179,
	371, 1179,
	372, 1179,
	373, 1179,
	374, 1179,
	375, 1179,
	376, 1179,
	378, 1179,
	379, 1179,
	381, 1179,
	382, 1179,
	383, 1179,
	384, 1179,
	385, 1179,
	386, 1179,
	387, 1179,
	388, 1179,
	389, 1179,
	390, 1179,
	391, 1179,
	392, 1179,
	394, 1179,
	396, 1179,
	397, 1179,
	398, 1179,
	403, 1179,
	405, 1179,
	406, 1179,
	407, 1179,
	408, 1179,
	409, 1179,
	410, 1179,
	411, 1179,
	412, 1179,
	414, 1179,
	415, 1179,
	416, 1179,
	418, 1179,
	419, 1179,
	420, 1179,
	421, 1179,
	422, 1179,
	423, 1179,
	425, 1179,
	426, 1179,
	427, 1179,
	428, 1179,
	429, 1179,
	430, 1179,
	431, 1179,
	432, 1179,
	433, 1179,
	434, 1179,
	435, 1179,
	437, 1179,
	438, 1179,
	439, 1179,
	440, 1179,
	441, 1179,
	442, 1179,
	444, 1179,
	445, 1179,
	446, 1179,
	447, 1179,
	448, 1179,
	449, 1179,
	451, 1179,
	452, 1179,
	453, 1179,
	454, 1179,
	455, 1179,
	456, 1179,
	457, 1179,
	459, 1179,
	461, 1179,
	462, 1179,
	463, 1179,
	464, 1179,
	465, 1179,
	466, 1179,
	467, 1179,
	468, 1179,
	469, 1179,
	470, 1179,
	471, 1179,
	472, 1179,
	473, 1179,
	474, 1179,
	476, 1179,
	477, 1179,
	479, 1179,
	481, 1179,
	482, 1179,
	483, 1179,
	484, 1179,
	485, 1179,
	486, 1179,
	487, 1179,
	488, 1179,
	489, 1179,
	491, 1179,
	492, 1179,
	493, 1179,
	494, 1179,
	495, 1179,
	497, 1179,
	499, 1179,
	500, 1179,
	501, 1179,
	502, 1179,
	503, 1179,
	504, 1179,
	506, 1179,
	507, 1179,
	508, 1179,
	509, 1179,
	511, 1179,
	512, 1179,
	515, 1179,
	516, 1179,
	517, 1179,
	518, 1179,
	519, 1179,
	520, 1179,
	521, 1179,
	523, 1179,
	526, 1179,
	527, 1179,
	528, 1179,
	529, 1179,
	530, 1179,
	531, 1179,
	533, 1179,
	534, 1179,
	535, 1179,
	536, 1179,
	541, 1179,
	542, 1179,
	543, 1179,
	544, 1179,
	545, 1179,
	546, 1179,
	-2, 0,
	-1, 1540,
	1, 499,
	570, 499,
	572, 499,
	574, 499,
	-2, 1382,
	-1, 1543,
	4, 2522,
	11, 2522,
	12, 2522,
	14, 2522,
	15, 2522,
	16, 2522,
	17, 2522,
	18, 2522,
	19, 2522,
	21, 2522,
	22, 2522,
	23, 2522,
	24, 2522,
	25, 2522,
	26, 2522,
	27, 2522,
	28, 2522,
	30, 2522,
	31, 2522,
	34, 2522,
	35, 2522,
	37, 2522,
	39, 2522,
	42, 2522,
	43, 2522,
	45, 2522,
	46, 2522,
	47, 2522,
	48, 2522,
	49, 2522,
	50, 2522,
	51, 2522,
	52, 2522,
	54, 2522,
	55, 2522,
	56, 2522,
	57, 2522,
	59, 2522,
	60, 2522,
	61, 2522,
	62, 2522,
	63, 2522,
	64, 2522,
	65, 2522,
	69, 2522,
	70, 2522,
	71, 2522,
	72, 2522,
	74, 2522,
	75, 2522,
	76, 2522,
	77, 2522,
	80, 2522,
	81, 2522,
	82, 2522,
	83, 2522,
	84, 2522,
	85, 2522,
	86, 2522,
	87, 2522,
	89, 2522,
	90, 2522,
	91, 2522,
	92, 2522,
	93, 2522,
	95, 2522,
	96, 2522,
	97, 2522,
	98, 2522,
	99, 2522,
	100, 2522,
	101, 2522,
	102, 2522,
	104, 2522,
	105, 2522,
	106, 2522,
	107, 2522,
	108, 2522,
	109, 2522,
	117, 2522,
	118, 2522,
	119, 2522,
	120, 2522,
	122, 2522,
	123, 2522,
	124, 2522,
	126, 2522,
	127, 2522,
	128, 2522,
	130, 2522,
	131, 2522,
	133, 2522,
	134, 2522,
	135, 2522,
	138, 2522,
	139, 2522,
	140, 2522,
	142, 2522,
	143, 2522,
	145, 2522,
	146, 2522,
	147, 2522,
	149, 2522,
	150, 2522,
	151, 2522,
	152, 2522,
	153, 2522,
	154, 2522,
	155, 2522,
	156, 2522,
	157, 2522,
	158, 2522,
	159, 2522,
	160, 2522,
	161, 2522,
	162, 2522,
	163, 2522,
	164, 2522,
	168, 2522,
	169, 2522,
	170, 2522,
	171, 2522,
	172, 2522,
	173, 2522,
	174, 2522,
	175, 2522,
	178, 2522,
	179, 2522,
	181, 2522,
	184, 2522,
	185, 2522,
	186, 2522,
	187, 2522,
	188, 2522,
	189, 2522,
	190, 2522,
	191, 2522,
	192, 2522,
	193, 2522,
	194, 2522,
	195, 2522,
	196, 2522,
	198, 2522,
	199, 2522,
	201, 2522,
	202, 2522,
	204, 2522,
	205, 2522,
	206, 2522,
	207, 2522,
	208, 2522,
	209, 2522,
	210, 2522,
	211, 2522,
	212, 2522,
	213, 2522,
	214, 2522,
	215, 2522,
	216, 2522,
	217, 2522,
	218, 2522,
	219, 2522,
	220, 2522,
	222, 2522,
	223, 2522,
	225, 2522,
	226, 2522,
	227, 2522,
	228, 2522,
	230, 2522,
	231, 2522,
	232, 2522,
	233, 2522,
	235, 2522,
	237, 2522,
	238, 2522,
	239, 2522,
	240, 2522,
	241, 2522,
	242, 2522,
	243, 2522,
	244, 2522,
	245, 2522,
	246, 2522,
	248, 2522,
	249, 2522,
	250, 2522,
	251, 2522,
	252, 2522,
	253, 2522,
	254, 2522,
	255, 2522,
	257, 2522,
	258, 2522,
	259, 2522,
	261, 2522,
	262, 2522,
	263, 2522,
	264, 2522,
	265, 2522,
	266, 2522,
	268, 2522,
	272, 2522,
	273, 2522,
	274, 2522,
	277, 2522,
	278, 2522,
	279, 2522,
	280, 2522,
	281, 2522,
	282, 2522,
	283, 2522,
	284, 2522,
	285, 2522,
	286, 2522,
	287, 2522,
	288, 2522,
	289, 2522,
	290, 2522,
	291, 2522,
	292, 2522,
	293, 2522,
	294, 2522,
	295, 2522,
	296, 2522,
	297, 2522,
	298, 2522,
	299, 2522,
	300, 2522,
	301, 2522,
	302, 2522,
	303, 2522,
	305, 2522,
	306, 2522,
	307, 2522,
	308, 2522,
	309, 2522,
	310, 2522,
	311, 2522,
	312, 2522,
	313, 2522,
	314, 2522,
	315, 2522,
	316, 2522,
	317, 2522,
	318, 2522,
	320, 2522,
	323, 2522,
	324, 2522,
	325, 2522,
	327, 2522,
	328, 2522,
	329, 2522,
	330, 2522,
	331, 2522,
	334, 2522,
	338, 2522,
	339, 2522,
	340, 2522,
	341, 2522,
	343, 2522,
	344, 2522,
	345, 2522,
	347, 2522,
	349, 2522,
	350, 2522,
	351, 2522,
	352, 2522,
	353, 2522,
	354, 2522,
	355, 2522,
	356, 2522,
	357, 2522,
	358, 2522,
	359, 2522,
	360, 2522,
	362, 2522,
	363, 2522,
	364, 2522,
	365, 2522,
	366, 2522,
	367, 2522,
	368, 2522,
	369, 2522,
	370, 2522,
	371, 2522,
	372, 2522,
	373, 2522,
	374, 2522,
	375, 2522,
	376, 2522,
	378, 2522,
	379, 2522,
	381, 2522,
	382, 2522,
	383, 2522,
	384, 2522,
	385, 2522,
	386, 2522,
	387, 2522,
	388, 2522,
	389, 2522,
	390, 2522,
	391, 2522,
	392, 2522,
	394, 2522,
	396, 2522,
	397, 2522,
	398, 2522,
	403, 2522,
	404, 2522,
	405, 2522,
	406, 2522,
	407, 2522,
	408, 2522,
	409, 2522,
	410, 2522,
	411, 2522,
	412, 2522,
	414, 2522,
	415, 2522,
	416, 2522,
	417, 2522,
	418, 2522,
	419, 2522,
	420, 2522,
	421, 2522,
	422, 2522,
	423, 2522,
	424, 2522,
	425, 2522,
	426, 2522,
	427, 2522,
	428, 2522,
	429, 2522,
	430, 2522,
	431, 2522,
	432, 2522,
	433, 2522,
	434, 2522,
	435, 2522,
	437, 2522,
	438, 2522,
	439, 2522,
	440, 2522,
	441, 2522,
	442, 2522,
	444, 2522,
	445, 2522,
	446, 2522,
	447, 2522,
	448, 2522,
	449, 2522,
	450, 2522,
	451, 2522,
	452, 2522,
	453, 2522,
	454, 2522,
	455, 2522,
	456, 2522,
	457, 2522,
	459, 2522,
	461, 2522,
	462, 2522,
	463, 2522,
	464, 2522,
	465, 2522,
	466, 2522,
	467, 2522,
	468, 2522,
	469, 2522,
	470, 2522,
	471, 2522,
	472, 2522,
	473, 2522,
	474, 2522,
	476, 2522,
	477, 2522,
	479, 2522,
	481, 2522,
	482, 2522,
	483, 2522,
	484, 2522,
	485, 2522,
	486, 2522,
	487, 2522,
	488, 2522,
	489, 2522,
	491, 2522,
	492, 2522,
	493, 2522,
	494, 2522,
	495, 2522,
	497, 2522,
	499, 2522,
	500, 2522,
	501, 2522,
	502, 2522,
	503, 2522,
	504, 2522,
	506, 2522,
	507, 2522,
	508, 2522,
	509, 2522,
	511, 2522,
	512, 2522,
	515, 2522,
	516, 2522,
	517, 2522,
	518, 2522,
	519, 2522,
	520, 2522,
	521, 2522,
	523, 2522,
	526, 2522,
	527, 2522,
	528, 2522,
	529, 2522,
	530, 2522,
	531, 2522,
	533, 2522,
	534, 2522,
	535, 2522,
	536, 2522,
	541, 2522,
	542, 2522,
	543, 2522,
	544, 2522,
	545, 2522,
	546, 2522,
	547, 2522,
	549, 2522,
	552, 2522,
	553, 2522,
	554, 2522,
	555, 2522,
	556, 2522,
	557, 2522,
	559, 2522,
	560, 2522,
	561, 2522,
	562, 2522,
	563, 2522,
	564, 2522,
	565, 2522,
	566, 2522,
	567, 2522,
	569, 2522,
	572, 2522,
	573, 2522,
	575, 2522,
	576, 2522,
	-2, 0,
	-1, 1548,
	183, 2409,
	496, 2409,
	554, 2409,
	573, 2409,
	-2, 0,
	-1, 1597,
	383, 802,
	442, 802,
	501, 802,
	-2, 0,
	-1, 1623,
	1, 797,
	570, 797,
	572, 797,
	574, 797,
	-2, 0,
	-1, 1624,
	1, 833,
	570, 833,
	572, 833,
	574, 833,
	-2, 0,
	-1, 1625,
	1, 841,
	570, 841,
	572, 841,
	574, 841,
	-2, 0,
	-1, 1626,
	1, 804,
	570, 804,
	572, 804,
	574, 804,
	-2, 0,
	-1, 1628,
	1, 808,
	570, 808,
	572, 808,
	574, 808,
	-2, 0,
	-1, 1634,
	1, 815,
	570, 815,
	572, 815,
	574, 815,
	-2, 0,
	-1, 1662,
	1, 2468,
	570, 2468,
	572, 2468,
	573, 2468,
	574, 2468,
	-2, 866,
	-1, 1663,
	1, 2406,
	570, 2406,
	572, 2406,
	573, 2406,
	574, 2406,
	-2, 867,
	-1, 1680,
	1, 1276,
	574, 1276,
	-2, 1281,
	-1, 1683,
	167, 1425,
	180, 1425,
	267, 1425,
	332, 1425,
	-2, 1363,
	-1, 1777,
	148, 1384,
	167, 1384,
	180, 1384,
	234, 1384,
	267, 1384,
	332, 1384,
	342, 1384,
	513, 1384,
	-2, 1826,
	-1, 1837,
	572, 1976,
	-2, 0,
	-1, 1872,
	148, 1384,
	167, 1384,
	180, 1384,
	234, 1384,
	267, 1384,
	332, 1384,
	342, 1384,
	513, 1384,
	-2, 1512,
	-1, 1921,
	571, 1653,
	-2, 1641,
	-1, 1999,
	1, 628,
	574, 628,
	-2, 1281,
	-1, 2117,
	216, 234,
	-2, 2123,
	-1, 2118,
	216, 235,
	-2, 277,
	-1, 2217,
	1, 799,
	570, 799,
	572, 799,
	574, 799,
	-2, 0,
	-1, 2218,
	1, 835,
	570, 835,
	572, 835,
	574, 835,
	-2, 0,
	-1, 2219,
	1, 843,
	570, 843,
	572, 843,
	574, 843,
	-2, 0,
	-1, 2252,
	1, 817,
	570, 817,
	572, 817,
	574, 817,
	-2, 0,
	-1, 2300,
	422, 1452,
	423, 1452,
	-2, 1686,
	-1, 2331,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1706,
	-1, 2332,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1707,
	-1, 2333,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1708,
	-1, 2334,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1709,
	-1, 2335,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1710,
	-1, 2336,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1711,
	-1, 2337,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1712,
	-1, 2338,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1713,
	-1, 2350,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1725,
	-1, 2351,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1726,
	-1, 2352,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1727,
	-1, 2355,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1732,
	-1, 2361,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1736,
	-1, 2363,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1744,
	-1, 2364,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1745,
	-1, 2365,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1746,
	-1, 2366,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1747,
	-1, 2502,
	5, 2127,
	183, 1987,
	571, 2124,
	-2, 2115,
	-1, 2503,
	183, 1988,
	-2, 2473,
	-1, 2504,
	183, 1989,
	-2, 2306,
	-1, 2505,
	183, 1990,
	-2, 2196,
	-1, 2506,
	183, 1991,
	-2, 2247,
	-1, 2507,
	183, 1992,
	-2, 2291,
	-1, 2508,
	183, 1993,
	-2, 2404,
	-1, 2509,
	183, 1994,
	-2, 1809,
	-1, 2579,
	1, 1513,
	2, 1513,
	107, 1513,
	148, 1513,
	167, 1513,
	180, 1513,
	184, 1513,
	200, 1513,
	203, 1513,
	230, 1513,
	234, 1513,
	245, 1513,
	263, 1513,
	267, 1513,
	306, 1513,
	332, 1513,
	336, 1513,
	342, 1513,
	413, 1513,
	417, 1513,
	513, 1513,
	524, 1513,
	538, 1513,
	539, 1513,
	540, 1513,
	550, 1513,
	570, 1513,
	572, 1513,
	574, 1513,
	576, 1513,
	-2, 1512,
	-1, 2592,
	571, 2096,
	-2, 2110,
	-1, 2594,
	54, 1411,
	133, 1411,
	-2, 293,
	-1, 2619,
	571, 1652,
	-2, 1642,
	-1, 2791,
	1, 1155,
	570, 1155,
	572, 1155,
	574, 1155,
	-2, 1411,
	-1, 2951,
	337, 1455,
	-2, 2512,
	-1, 2952,
	337, 1456,
	-2, 2390,
	-1, 2956,
	422, 2053,
	423, 2053,
	-2, 1807,
	-1, 2957,
	422, 2057,
	423, 2057,
	-2, 1808,
	-1, 2958,
	422, 2054,
	423, 2054,
	-2, 1807,
	-1, 2959,
	422, 2058,
	423, 2058,
	-2, 1808,
	-1, 2972,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1734,
	-1, 2973,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1738,
	-1, 2979,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1740,
	-1, 3219,
	1, 625,
	570, 625,
	572, 625,
	574, 625,
	-2, 1281,
	-1, 3360,
	44, 2088,
	-2, 930,
	-1, 3365,
	1, 1155,
	570, 1155,
	572, 1155,
	574, 1155,
	-2, 1411,
	-1, 3466,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1742,
	-1, 3473,
	239, 0,
	241, 0,
	323, 0,
	-2, 1761,
	-1, 3540,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1790,
	-1, 3541,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1791,
	-1, 3542,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1792,
	-1, 3546,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1796,
	-1, 3547,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1797,
	-1, 3548,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1798,
	-1, 3594,
	571, 2097,
	-2, 2111,
	-1, 3744,
	573, 2629,
	-2, 1337,
	-1, 3800,
	239, 0,
	241, 0,
	323, 0,
	-2, 1762,
	-1, 3803,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1765,
	-1, 3804,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1767,
	-1, 3897,
	573, 2112,
	-2, 1189,
	-1, 4026,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1766,
	-1, 4027,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1768,
	-1, 4038,
	239, 0,
	-2, 1799,
	-1, 4199,
	239, 0,
	-2, 1800,
	-1, 4374,
	51, 0,
	213, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 2476,
}

const sqlPrivate = 57344

const sqlLast = 118384

var sqlAct = [...]int{

	258, 2853, 4125, 4233, 2866, 3130, 4255, 4373, 4079, 3349,
	4251, 4356, 3350, 4384, 4490, 4272, 4345, 2114, 4225, 4326,
	3783, 4309, 4385, 3505, 1451, 4386, 4437, 4329, 4152, 4066,
	4132, 2724, 1197, 4203, 4372, 3377, 3983, 3978, 3950, 3932,
	4084, 1019, 4015, 2534, 1070, 4047, 3458, 3244, 1269, 2310,
	3382, 3964, 3736, 4141, 3878, 2965, 3678, 4166, 3894, 1258,
	2378, 1981, 1010, 3988, 3375, 2683, 3296, 1692, 3345, 3712,
	3696, 3230, 1563, 3247, 771, 2195, 3698, 738, 2054, 4043,
	2311, 1908, 3421, 1329, 2875, 2888, 2842, 2318, 3335, 3423,
	1956, 2877, 2824, 2186, 2814, 3597, 1271, 3153, 771, 3145,
	1265, 3839, 3113, 3173, 2885, 3782, 3136, 2868, 1847, 845,
	2874, 2754, 2854, 3134, 2837, 2839, 2108, 2064, 2673, 2685,
	1909, 3565, 3112, 2109, 2315, 4204, 1063, 1018, 171, 1605,
	2422, 1878, 1785, 2572, 1823, 2391, 2949, 3241, 1420, 1505,
	1427, 766, 3893, 2193, 2103, 2768, 4, 1263, 2884, 2094,
	4252, 2087, 2420, 105, 1067, 252, 1177, 2035, 2160, 1312,
	1979, 1680, 2552, 2411, 2723, 2825, 1069, 2038, 2375, 2025,
	3180, 2571, 2299, 2280, 2282, 2531, 2604, 1848, 1541, 3347,
	1562, 1508, 1260, 2847, 1072, 1248, 2148, 2668, 772, 773,
	1298, 1237, 2517, 2603, 1867, 669, 1818, 2414, 2542, 2878,
	2561, 1180, 1159, 251, 2498, 2464, 2392, 1857, 1770, 180,
	1694, 181, 1693, 720, 2574, 1634, 2147, 768, 171, 1539,
	1864, 2281, 732, 2283, 1446, 1194, 1046, 1532, 2172, 777,
	2053, 1176, 4357, 2304, 1048, 1957, 1954, 838, 672, 44,
	43, 1182, 41, 32, 30, 28, 1157, 250, 1186, 1699,
	680, 3000, 1679, 777, 907, 927, 1457, 3579, 2996, 3580,
	3401, 3132, 1014, 4559, 655, 1970, 1970, 2551, 677, 1189,
	3392, 1307, 1014, 2122, 695, 72, 1970, 780, 819, 3203,
	1970, 1970, 3202, 1707, 1708, 1307, 1740, 1741, 1742, 1750,
	1751, 1752, 73, 1970, 4549, 2544, 4536, 2194, 3401, 3391,
	2551, 780, 2964, 2551, 1215, 4535, 1743, 1738, 77, 2551,
	3188, 3569, 4526, 4508, 1710, 860, 2122, 4083, 4506, 2606,
	4456, 39, 4083, 1756, 2122, 1571, 4415, 4300, 4408, 4406,
	4416, 1174, 2551, 2551, 4403, 4400, 1015, 4370, 4404, 4401,
	4369, 2122, 4368, 4363, 2122, 4205, 1991, 1991, 84, 1709,
	4362, 1192, 4354, 4352, 1991, 2122, 4083, 4083, 4324, 1729,
	4299, 4292, 4083, 4291, 2610, 2551, 4196, 2551, 1726, 4286,
	1707, 1708, 4285, 4083, 4279, 4247, 4083, 4184, 2122, 3942,
	4201, 995, 4183, 994, 2610, 843, 3771, 1991, 4180, 4177,
	1988, 1188, 2122, 4083, 1738, 1707, 1708, 3569, 4134, 104,
	2543, 1710, 4135, 4099, 90, 101, 4098, 2122, 4090, 4089,
	2122, 4082, 2122, 4083, 4054, 4083, 4028, 4007, 2122, 1738,
	2610, 1991, 3009, 3996, 1251, 3927, 1710, 3401, 3010, 2551,
	2629, 1160, 1160, 1009, 1004, 3915, 1709, 1208, 3977, 2551,
	1732, 1733, 1734, 1735, 3942, 3916, 1729, 1031, 1707, 1708,
	1715, 1190, 3802, 3752, 3746, 3710, 2610, 3418, 3418, 3711,
	91, 1709, 3771, 3409, 1161, 3589, 1707, 1708, 2745, 3590,
	3587, 3572, 1738, 3489, 3588, 2551, 3485, 2122, 3417, 1710,
	2551, 2058, 3418, 3408, 1163, 1747, 1164, 3409, 1757, 3129,
	1738, 2667, 2004, 2551, 1737, 1739, 2551, 1710, 3124, 1969,
	3123, 3076, 2551, 1459, 2551, 3077, 2999, 1985, 1627, 1988,
	2628, 1753, 3050, 1754, 1709, 3042, 3051, 1209, 3040, 3043,
	1724, 1725, 2551, 2820, 2121, 2762, 2665, 1732, 1733, 1734,
	1735, 3011, 1709, 1843, 1445, 2551, 2891, 1715, 1745, 2588,
	1991, 2864, 3668, 1707, 1708, 2182, 1740, 1741, 1742, 1750,
	1751, 1752, 2863, 1730, 2652, 2609, 2182, 2601, 2551, 2610,
	2595, 2551, 1715, 1607, 2122, 2550, 1743, 1738, 2181, 2551,
	3461, 3393, 2182, 3439, 1710, 1865, 2097, 3085, 3086, 2587,
	2586, 1737, 1739, 1756, 2585, 2584, 222, 1165, 1162, 1003,
	3394, 222, 1002, 1001, 1000, 1755, 2928, 4187, 999, 998,
	1707, 1708, 997, 94, 993, 992, 1737, 1739, 991, 1709,
	990, 1971, 1971, 1744, 989, 1715, 988, 987, 986, 1729,
	985, 984, 1971, 983, 1738, 982, 1971, 1971, 1726, 981,
	224, 1710, 980, 1715, 979, 224, 978, 977, 905, 1971,
	1730, 904, 903, 902, 901, 900, 899, 3085, 3086, 898,
	897, 896, 895, 3100, 179, 97, 894, 100, 893, 1737,
	1739, 2447, 892, 3391, 891, 1730, 1709, 890, 889, 888,
	4391, 887, 1209, 1450, 886, 1988, 1736, 1737, 1739, 223,
	885, 222, 884, 883, 223, 882, 1459, 881, 2543, 844,
	216, 880, 879, 878, 144, 1968, 1731, 1209, 877, 217,
	1732, 1733, 1734, 1735, 876, 875, 874, 873, 863, 862,
	1715, 1557, 858, 1274, 1072, 857, 851, 850, 1730, 837,
	1450, 182, 1748, 836, 3855, 224, 182, 794, 1471, 2433,
	793, 792, 1465, 791, 783, 782, 1730, 1072, 781, 753,
	744, 1072, 743, 742, 3091, 1747, 726, 246, 1757, 245,
	244, 146, 243, 242, 1737, 1739, 241, 1332, 240, 222,
	239, 1332, 238, 1736, 237, 1274, 183, 1715, 236, 235,
	234, 1753, 233, 1754, 223, 3814, 2639, 1969, 1311, 232,
	1724, 1725, 1316, 1731, 231, 216, 1072, 1988, 1072, 2431,
	1072, 1985, 2628, 230, 217, 229, 1274, 228, 1745, 227,
	226, 225, 3607, 224, 2275, 3583, 3419, 3176, 1731, 1302,
	3022, 1737, 1739, 1730, 3091, 3005, 182, 2801, 2833, 1746,
	2614, 1274, 1435, 1430, 1721, 1722, 1728, 1749, 1727, 1723,
	2593, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717,
	2578, 1274, 1868, 2033, 3824, 4371, 1274, 3101, 3823, 1990,
	1891, 1796, 223, 3990, 1072, 1755, 1072, 1826, 3127, 1453,
	1274, 1731, 1458, 216, 1825, 1706, 1072, 1318, 1072, 1196,
	1730, 90, 217, 1744, 1826, 2189, 4262, 4193, 4185, 1731,
	4042, 1825, 1514, 1516, 4077, 1787, 1829, 1255, 3997, 1459,
	3976, 3862, 3837, 3836, 182, 1296, 3128, 4208, 1242, 1245,
	3830, 3829, 3828, 1824, 1794, 3821, 3820, 1449, 3818, 3085,
	3086, 1437, 1325, 1274, 1417, 1422, 3813, 3101, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 3810, 3809, 3709,
	777, 1072, 3611, 3610, 1072, 1470, 1736, 1542, 3715, 1464,
	3609, 3593, 222, 1720, 1718, 1719, 1711, 1712, 1713, 1714,
	1716, 1717, 3560, 3559, 1291, 2188, 1731, 2850, 1259, 3558,
	3481, 3477, 2163, 1448, 1447, 3666, 1503, 3171, 3120, 171,
	171, 3085, 3086, 3111, 3084, 3081, 3080, 3078, 780, 1576,
	3049, 2417, 1748, 1707, 1708, 3048, 224, 3047, 1544, 1546,
	3102, 3044, 3041, 3021, 1015, 3004, 2997, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 2865, 1423, 1738, 2579, 1434,
	1259, 2404, 1706, 1731, 1710, 1575, 1719, 1711, 1712, 1713,
	1714, 1716, 1717, 1789, 4553, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1788, 1561, 1786, 223, 1281, 1173, 1787, 1302,
	1459, 1705, 1302, 1629, 4500, 4499, 216, 4468, 2129, 1709,
	2750, 3716, 3992, 2127, 4425, 217, 1072, 1684, 2835, 1729,
	3102, 4423, 1072, 1198, 3507, 1643, 2418, 1535, 1726, 4316,
	1259, 1259, 4254, 4243, 4240, 4239, 3091, 182, 1282, 1746,
	4238, 1017, 4219, 4207, 1721, 1722, 1728, 1749, 1727, 1723,
	4206, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717,
	3085, 3086, 4181, 3194, 4312, 4165, 4164, 2709, 1456, 2381,
	1463, 1556, 1469, 4150, 4147, 4095, 4073, 1678, 4040, 3796,
	4023, 4022, 4004, 1570, 4003, 3096, 3094, 3095, 3087, 3088,
	3089, 3090, 3092, 3093, 3967, 3943, 3854, 1533, 3091, 4188,
	1732, 1733, 1734, 1735, 3835, 222, 3125, 2419, 222, 2416,
	1715, 1711, 1712, 1713, 1714, 1716, 1717, 3772, 3766, 3763,
	4209, 144, 222, 1581, 3655, 3654, 222, 1072, 1072, 1072,
	1598, 3641, 3640, 1072, 3638, 3716, 1555, 3575, 1560, 3101,
	1194, 3563, 1194, 3472, 1425, 1776, 1630, 2387, 1569, 224,
	1574, 1774, 224, 1845, 1737, 1739, 3420, 1332, 3087, 3088,
	3089, 3090, 3092, 3093, 3402, 1072, 224, 3970, 771, 1015,
	224, 3368, 3307, 3275, 1926, 771, 1854, 3246, 1274, 1681,
	1724, 1725, 3196, 1894, 1189, 222, 1189, 3026, 995, 3025,
	994, 2446, 1689, 1905, 1688, 3020, 3858, 3168, 223, 2988,
	1952, 223, 2813, 1832, 2834, 1831, 1683, 1830, 1901, 216,
	1519, 1628, 216, 1730, 1827, 223, 1828, 1819, 217, 223,
	1685, 217, 1702, 1703, 1899, 1817, 216, 3091, 222, 224,
	216, 3085, 3086, 2621, 2620, 217, 1851, 1852, 2590, 217,
	182, 2583, 222, 182, 1274, 2549, 2429, 3991, 1875, 1707,
	1708, 1072, 1890, 1846, 2421, 1274, 222, 182, 3806, 2432,
	1841, 182, 1840, 1839, 1838, 1837, 1192, 1836, 1192, 1820,
	1821, 171, 224, 1072, 1960, 1835, 1707, 1708, 223, 1332,
	1710, 1834, 3102, 1833, 1814, 1813, 224, 1812, 1898, 216,
	1811, 1810, 1809, 1808, 1997, 1015, 1807, 1806, 217, 1805,
	224, 1804, 2022, 2190, 1803, 1802, 1188, 1710, 1188, 1801,
	1800, 1789, 1775, 1773, 2031, 1709, 1897, 1768, 3606, 2430,
	182, 223, 1290, 777, 1213, 1204, 1996, 3586, 3578, 1302,
	777, 3008, 216, 1160, 2581, 223, 1736, 1876, 1538, 2612,
	1960, 217, 1709, 1873, 4058, 3860, 216, 3085, 3086, 223,
	3605, 1960, 1788, 3192, 1771, 217, 1731, 3918, 1866, 2024,
	216, 3397, 1886, 2849, 2415, 1844, 1190, 4497, 1190, 217,
	4489, 780, 3278, 1307, 3459, 1707, 1708, 182, 780, 3378,
	4186, 1870, 1315, 1885, 1884, 1902, 1883, 1881, 1880, 1879,
	2623, 182, 1949, 1973, 2024, 4241, 4142, 4137, 3091, 1308,
	4136, 3995, 2024, 3945, 1274, 1274, 1710, 3944, 1906, 222,
	1434, 3302, 2728, 4076, 1332, 1999, 1868, 3096, 3094, 3095,
	3087, 3088, 3089, 3090, 3092, 3093, 3917, 222, 1809, 3857,
	1795, 1995, 1538, 1809, 3775, 3774, 2046, 3719, 1313, 3773,
	1314, 1709, 3581, 1715, 3404, 3403, 1676, 1307, 1826, 1307,
	3046, 1597, 3653, 224, 2164, 1825, 1434, 3045, 2970, 2711,
	1310, 3248, 1798, 1779, 2082, 1882, 2086, 1784, 975, 2091,
	4367, 224, 222, 2187, 4133, 222, 2115, 2119, 3085, 3086,
	1993, 4411, 3087, 3088, 3089, 3090, 3092, 3093, 1727, 1723,
	2002, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717,
	2209, 3101, 223, 1606, 2027, 2017, 1274, 3352, 1274, 3351,
	1274, 976, 1304, 216, 4396, 3413, 224, 4383, 3336, 224,
	223, 2889, 217, 1607, 2110, 3675, 1274, 1274, 3673, 3659,
	1564, 216, 2010, 3436, 3217, 4044, 1644, 1274, 3132, 2058,
	217, 2095, 1715, 3509, 182, 2412, 2063, 3014, 2619, 1274,
	1842, 1274, 1274, 1274, 4392, 1822, 3343, 2157, 1513, 2112,
	1442, 777, 182, 1285, 1241, 223, 1172, 2759, 223, 4405,
	1537, 4402, 3387, 771, 2756, 1585, 216, 3633, 4234, 216,
	3979, 4323, 4216, 3251, 1895, 217, 3648, 2158, 217, 2872,
	2846, 1309, 3329, 4453, 1448, 1447, 4454, 3453, 4116, 3906,
	1481, 2653, 1542, 2169, 1542, 1074, 2153, 182, 4480, 780,
	182, 4548, 1117, 3089, 3090, 3092, 3093, 1443, 2081, 4393,
	3221, 2090, 2192, 2016, 2015, 3193, 2196, 2024, 2026, 832,
	2120, 973, 2213, 4109, 4101, 971, 969, 967, 964, 4062,
	2258, 1641, 2256, 2208, 3102, 3091, 3940, 3684, 1305, 956,
	3683, 2671, 1489, 3677, 3672, 2417, 1072, 1306, 1072, 1015,
	3670, 1015, 1065, 2166, 1537, 1072, 2669, 3621, 1926, 1926,
	1332, 3620, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 2197, 1072, 2177,
	1072, 1072, 1072, 1072, 2171, 2156, 2179, 1642, 1535, 2175,
	2174, 2292, 2174, 2140, 2279, 2183, 2139, 2184, 777, 833,
	2000, 1291, 1072, 1315, 1490, 1072, 1072, 3332, 1640, 2011,
	2418, 3187, 3688, 1072, 2019, 2671, 3019, 1072, 3101, 1072,
	1072, 1315, 3018, 1583, 2200, 3017, 3016, 1332, 2974, 2766,
	2669, 3277, 2765, 1072, 1072, 1072, 1072, 2761, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 780, 2752, 2393, 2394,
	3094, 3095, 3087, 3088, 3089, 3090, 3092, 3093, 2316, 2317,
	2234, 1314, 2393, 2409, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1013, 4481, 1717, 3687, 1072, 2741, 1314,
	2740, 2737, 2252, 2736, 2715, 2702, 2602, 2362, 2455, 1194,
	1307, 2419, 1682, 2416, 2187, 3223, 1332, 2303, 2843, 1713,
	1714, 1716, 1717, 3248, 2460, 1194, 2217, 2501, 2501, 2515,
	1623, 2393, 2459, 1485, 2535, 2537, 1297, 2138, 2320, 3437,
	2541, 1072, 1332, 1525, 2021, 1524, 2276, 1308, 2290, 1227,
	1523, 2284, 1522, 1189, 2270, 2291, 2278, 2273, 2277, 995,
	2613, 2307, 995, 995, 2308, 2309, 2055, 1444, 961, 1189,
	2205, 2408, 3867, 2687, 4021, 4484, 2225, 1015, 2713, 1012,
	1498, 3102, 2020, 2267, 2591, 2218, 1015, 2660, 1975, 1624,
	1015, 1977, 2085, 3093, 2594, 2377, 2377, 1982, 3694, 2051,
	2457, 1984, 2058, 2725, 2726, 2458, 1987, 2288, 2461, 3919,
	2462, 2463, 1599, 2290, 1657, 2558, 1711, 1712, 1713, 1714,
	1716, 1717, 1653, 2701, 2732, 2056, 2057, 2566, 2389, 2262,
	3866, 1875, 2947, 2412, 2222, 1192, 1578, 3693, 2725, 2726,
	4510, 2700, 1274, 1274, 2219, 2406, 2725, 2726, 1625, 3636,
	1595, 1192, 2176, 2216, 2201, 2052, 3444, 2385, 2421, 2269,
	1304, 2962, 3498, 1308, 2383, 2421, 4485, 1687, 3443, 2925,
	2557, 3939, 2288, 4453, 1639, 1188, 871, 1289, 1015, 3644,
	1675, 2226, 2690, 4389, 1332, 171, 1509, 1014, 2497, 2510,
	3671, 1188, 3669, 2615, 2526, 2642, 2539, 3292, 2580, 3331,
	2547, 2548, 1886, 3299, 2607, 1201, 835, 834, 1160, 2565,
	2758, 2570, 2563, 2564, 2576, 2577, 1926, 2559, 3095, 3087,
	3088, 3089, 3090, 3092, 3093, 1828, 1873, 3285, 2760, 1302,
	2735, 1607, 1582, 1507, 951, 1190, 3291, 2605, 3220, 1309,
	1636, 2373, 2757, 2648, 2714, 1199, 2289, 4227, 1332, 2755,
	2286, 1190, 667, 1579, 1023, 3890, 2126, 2125, 3656, 1008,
	4465, 4471, 1274, 4470, 1607, 2931, 3284, 839, 2415, 751,
	2371, 2793, 2622, 2985, 2679, 4487, 1304, 1072, 1072, 662,
	1072, 2600, 1820, 1821, 2626, 2039, 2644, 1584, 2961, 3886,
	4513, 2040, 4442, 3902, 2625, 72, 1305, 842, 841, 2627,
	3870, 1259, 2983, 1274, 2650, 1306, 2651, 951, 2753, 2421,
	2792, 2289, 73, 2643, 2633, 3788, 2287, 2077, 2636, 965,
	2637, 2817, 2645, 965, 965, 966, 965, 2257, 77, 2255,
	4020, 2717, 1008, 1274, 2712, 830, 2718, 829, 3787, 2266,
	3384, 3887, 2656, 2831, 2654, 1274, 1856, 4539, 1259, 952,
	1202, 3385, 2670, 4390, 1654, 1309, 2076, 2704, 1011, 2061,
	1274, 2658, 4229, 1487, 2733, 2386, 2049, 1970, 84, 2716,
	2934, 2028, 2029, 3232, 749, 2954, 2955, 2689, 2692, 2695,
	1779, 2287, 2734, 1259, 1259, 2727, 2729, 2730, 2731, 2682,
	2359, 3630, 2857, 2823, 2659, 1484, 4493, 2569, 2060, 1960,
	1072, 2041, 3629, 1860, 2912, 843, 2913, 2886, 2367, 2796,
	3235, 1226, 1305, 2798, 2657, 2268, 2093, 2890, 2045, 104,
	2049, 1306, 952, 1860, 90, 101, 2368, 777, 3384, 1542,
	4235, 2369, 2739, 1268, 2522, 2374, 2738, 2224, 2910, 2092,
	2980, 3495, 4296, 2894, 2895, 2079, 1072, 4249, 2871, 1863,
	4388, 2107, 1072, 1072, 2901, 2902, 2903, 4486, 1509, 171,
	1448, 2799, 3263, 2981, 2560, 1651, 2827, 2986, 1307, 1863,
	3310, 2811, 2088, 1423, 4274, 780, 4275, 2743, 2861, 2936,
	91, 2938, 1861, 3645, 1858, 1439, 2821, 2042, 2047, 3900,
	1655, 2892, 1211, 3222, 1434, 2896, 716, 2897, 2056, 2057,
	3190, 2933, 1861, 2907, 2841, 2106, 864, 1072, 1072, 2852,
	1815, 2862, 2058, 1072, 2688, 2916, 1474, 2918, 3262, 2920,
	2873, 2083, 3496, 2274, 2049, 2708, 1072, 1072, 2089, 2976,
	2376, 2930, 1072, 1072, 2674, 953, 3784, 3882, 1072, 2929,
	872, 1510, 3883, 2859, 4441, 1859, 962, 1072, 1072, 1072,
	3701, 2860, 2357, 1072, 4033, 2360, 2744, 3959, 2641, 3699,
	2915, 2080, 2749, 1072, 2674, 2914, 1550, 4418, 4464, 2676,
	2043, 2977, 685, 4343, 3233, 3147, 4419, 1656, 3007, 2221,
	1072, 750, 2942, 2098, 1307, 1652, 2953, 2403, 2384, 2105,
	4334, 3002, 3003, 3885, 1594, 1596, 3006, 2802, 2215, 2676,
	2805, 2943, 2807, 2944, 3266, 2356, 1200, 2998, 953, 3888,
	2370, 1686, 2048, 663, 1580, 2303, 2049, 4228, 2948, 3701,
	2372, 1288, 3925, 94, 1434, 4294, 2932, 752, 3699, 1767,
	748, 1259, 852, 1589, 2671, 3024, 1862, 2562, 4514, 3901,
	4491, 2575, 2982, 4017, 2848, 4501, 1014, 2848, 2963, 2693,
	3511, 3969, 2984, 3778, 3268, 3602, 1862, 2675, 1216, 3789,
	3455, 2945, 4256, 4295, 1611, 1434, 3270, 1434, 3702, 2421,
	1072, 1072, 1072, 954, 179, 97, 4387, 100, 2975, 1072,
	1072, 1072, 2678, 4452, 1072, 1015, 4450, 2675, 664, 4271,
	4149, 3657, 3734, 4540, 1072, 1194, 1332, 3371, 2146, 2104,
	1072, 222, 1072, 3139, 3140, 3271, 1853, 1214, 1207, 844,
	654, 1194, 2678, 1971, 144, 3714, 1697, 3267, 2989, 2990,
	2922, 2672, 955, 3785, 3013, 2306, 2059, 3122, 3549, 1332,
	3884, 2012, 4092, 665, 3833, 666, 4091, 3702, 4440, 1189,
	2677, 1194, 4492, 3141, 1332, 224, 954, 865, 866, 4519,
	1696, 3181, 4070, 4215, 784, 1189, 3697, 3161, 3735, 3905,
	4158, 1926, 3681, 3146, 3632, 1332, 3904, 3891, 3960, 3242,
	2677, 146, 2078, 4016, 3372, 4494, 3364, 3186, 3238, 1274,
	1274, 2832, 2826, 2815, 2170, 1189, 183, 2159, 2044, 2358,
	1696, 2151, 2132, 3494, 223, 955, 2296, 4257, 1478, 3200,
	2909, 3617, 1072, 1691, 3175, 216, 1218, 725, 2009, 3564,
	4310, 2917, 4417, 2919, 217, 2921, 1072, 3149, 3456, 2634,
	4276, 1192, 2719, 4061, 3984, 2638, 2084, 2742, 3871, 3237,
	3236, 3700, 2263, 2005, 1926, 1696, 840, 1192, 3737, 2649,
	2812, 1229, 3577, 3218, 4131, 2939, 4129, 2940, 3790, 3151,
	1695, 3211, 1072, 1274, 3117, 3118, 3119, 3224, 4072, 3254,
	3250, 1188, 3108, 3109, 3110, 3170, 3167, 1192, 3179, 3204,
	3205, 3133, 3148, 853, 854, 1960, 1960, 1188, 3249, 1302,
	2206, 3191, 2968, 2007, 3227, 3228, 2946, 3150, 1274, 3144,
	1695, 3253, 3159, 2522, 3258, 2085, 1767, 3260, 3162, 3163,
	3700, 3197, 3198, 1332, 3199, 3143, 2599, 1188, 3252, 4018,
	2101, 3256, 1274, 3550, 1626, 1697, 3239, 1274, 3183, 3184,
	3185, 1190, 3551, 2008, 3165, 3280, 3166, 3155, 3834, 3791,
	2297, 2598, 2694, 867, 868, 1695, 3282, 1190, 3160, 2597,
	1274, 2596, 3706, 3265, 1517, 1531, 1274, 2819, 1274, 1960,
	4518, 3212, 1332, 1012, 3243, 1697, 3298, 3293, 1518, 771,
	2553, 4222, 3903, 4126, 2099, 3219, 1529, 1190, 2046, 870,
	1274, 4080, 3313, 2522, 2522, 3316, 3951, 3208, 3295, 3321,
	3323, 1274, 3317, 2698, 1960, 3225, 3639, 3324, 4258, 3174,
	2720, 2721, 3618, 3414, 2556, 785, 786, 1194, 1612, 1898,
	2168, 3380, 3318, 2100, 3339, 2046, 4461, 3325, 1960, 1920,
	3363, 4001, 3269, 1960, 3308, 4253, 1923, 4060, 3334, 3156,
	3337, 3276, 1274, 1274, 3283, 3294, 2893, 3287, 2797, 3348,
	2795, 1588, 4313, 4068, 1006, 2555, 951, 1434, 1434, 4320,
	2554, 1189, 4307, 3288, 1274, 3303, 2095, 3289, 4223, 3290,
	3840, 3566, 2428, 3389, 2095, 3309, 3311, 3319, 3330, 855,
	856, 1008, 3357, 3326, 4338, 2886, 1914, 4463, 3154, 3431,
	3115, 4081, 3182, 3431, 2886, 4407, 4069, 4242, 3424, 4000,
	1673, 1332, 3424, 1671, 1332, 2254, 4039, 1669, 724, 3832,
	1648, 3705, 1646, 2717, 3114, 1622, 1620, 1618, 1616, 3158,
	3341, 3333, 3471, 3434, 3201, 3079, 3373, 1007, 1614, 3400,
	3381, 1434, 3361, 2987, 777, 1072, 4314, 2522, 2522, 2522,
	3360, 1072, 1072, 1192, 1604, 1072, 1072, 1072, 3432, 1072,
	2816, 2751, 4224, 1602, 2156, 788, 787, 2710, 1072, 1926,
	2624, 171, 171, 1893, 3438, 3412, 3450, 1072, 3386, 3416,
	1072, 952, 1889, 1015, 1330, 1527, 1332, 3395, 1428, 1674,
	3398, 3399, 780, 1188, 1566, 1072, 3410, 3449, 3452, 3451,
	1691, 2927, 3426, 1332, 2926, 2899, 3426, 3272, 3273, 1530,
	2285, 3274, 2265, 1926, 1926, 1072, 1072, 3425, 1072, 1072,
	1072, 3425, 1635, 789, 790, 3457, 2229, 3440, 2131, 3441,
	1528, 3442, 1953, 869, 1799, 3157, 1577, 2039, 1856, 1502,
	2427, 4382, 3674, 2040, 3483, 3484, 3388, 3301, 3304, 3305,
	3474, 3446, 3306, 1190, 3433, 3926, 3914, 4306, 3982, 963,
	1072, 3931, 1900, 3523, 1072, 3454, 1926, 1926, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 4438, 1072, 3524,
	3312, 1672, 3875, 2253, 1670, 1072, 1072, 1926, 1668, 3733,
	2185, 1647, 1072, 1645, 3725, 3422, 1621, 1619, 1617, 1615,
	3686, 3651, 3479, 1072, 3649, 1860, 1268, 2198, 3631, 1613,
	3367, 3362, 3353, 3490, 1194, 1194, 2844, 2199, 1072, 2830,
	3506, 3501, 2822, 2316, 3514, 1603, 2809, 3513, 2794, 2207,
	2640, 2210, 2211, 2212, 1601, 3561, 3300, 4175, 3467, 3468,
	3497, 3499, 3500, 2041, 3520, 2635, 2130, 1332, 2128, 3521,
	2111, 1863, 1434, 3522, 3595, 2096, 1526, 953, 1189, 1189,
	2045, 2075, 2062, 3582, 2050, 1992, 1858, 1989, 1986, 1983,
	1978, 1976, 1972, 1963, 3491, 3526, 2316, 3529, 3376, 4430,
	3528, 1700, 3600, 3601, 1861, 3553, 4454, 2966, 2013, 3320,
	4167, 2271, 4348, 3599, 1072, 2105, 3612, 3613, 3614, 968,
	970, 972, 4006, 4168, 3999, 3998, 3554, 3557, 3427, 3428,
	3429, 3430, 3427, 3428, 3429, 3430, 1169, 1072, 3938, 3863,
	3573, 3574, 2887, 171, 2032, 1483, 4160, 1859, 2699, 2042,
	2047, 3570, 3571, 4153, 4169, 2272, 3745, 2058, 2220, 3379,
	1192, 1192, 3562, 1170, 1666, 1667, 1072, 1072, 3568, 2167,
	3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539,
	3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3584,
	3552, 3626, 3598, 1249, 1250, 2671, 2671, 2249, 1072, 2967,
	1188, 1188, 4347, 712, 2248, 2227, 3907, 3933, 1701, 3660,
	2669, 2696, 1600, 1005, 4171, 954, 4195, 3608, 3841, 3207,
	1274, 3819, 3209, 3210, 3622, 2104, 2722, 3213, 3585, 3214,
	2703, 3215, 2043, 1707, 1708, 1704, 4170, 1283, 1217, 1926,
	4457, 3676, 4448, 1920, 1920, 3664, 3447, 3680, 3665, 3667,
	1923, 1923, 668, 4172, 3635, 1250, 1707, 1708, 1862, 4412,
	1190, 1190, 2808, 3682, 955, 2251, 2746, 3722, 1274, 3679,
	1171, 247, 2152, 1294, 2048, 1072, 764, 2756, 2049, 1250,
	3658, 2764, 2763, 1194, 1072, 2705, 3747, 1710, 820, 4301,
	1080, 2748, 2707, 3691, 1274, 1274, 1274, 3754, 2717, 1709,
	1914, 1914, 3738, 4266, 2747, 2706, 4263, 679, 4221, 4145,
	4124, 1274, 3724, 2522, 2522, 3713, 3739, 3704, 651, 3592,
	3720, 3366, 1709, 2851, 3742, 2540, 1998, 1189, 3226, 1907,
	1332, 4488, 4078, 3741, 1892, 3873, 254, 254, 254, 3872,
	657, 658, 3628, 673, 657, 673, 683, 2857, 3234, 723,
	3189, 4517, 1332, 741, 4265, 1072, 1072, 1450, 747, 3243,
	4340, 1072, 1072, 1926, 254, 4341, 1072, 1072, 3695, 1072,
	3811, 3703, 3726, 1072, 2886, 3085, 3086, 2423, 3721, 1707,
	1708, 3692, 849, 3743, 1072, 3604, 4467, 2663, 254, 1587,
	3758, 3723, 3707, 3740, 3748, 1586, 3749, 4340, 2661, 3753,
	1072, 2456, 4341, 2663, 2664, 4146, 3792, 3759, 3760, 1192,
	3761, 3770, 3805, 3768, 2661, 2662, 3728, 3767, 3764, 1650,
	3765, 4110, 1649, 3934, 3930, 2522, 2522, 2522, 2522, 2522,
	2522, 2522, 2522, 2522, 2522, 2522, 2522, 2522, 2522, 2522,
	2522, 2522, 2522, 2522, 3801, 2522, 3786, 3929, 3807, 1188,
	2044, 1259, 2647, 1268, 3731, 3603, 2034, 3502, 3314, 1793,
	1194, 1792, 4503, 3793, 4472, 3781, 4305, 3776, 1194, 4304,
	4303, 4210, 1332, 4127, 1332, 4105, 4059, 4056, 3962, 3859,
	3769, 1194, 3751, 3708, 3647, 3642, 3370, 3369, 3259, 3206,
	3846, 3075, 4173, 3074, 3073, 3072, 3071, 4174, 1332, 3070,
	2156, 3069, 3068, 3067, 1189, 1152, 3066, 657, 657, 1190,
	3065, 3064, 1189, 3063, 3062, 254, 3061, 3060, 3059, 3831,
	3058, 3057, 3056, 3055, 3054, 1189, 3053, 3052, 2924, 1194,
	2906, 1194, 2905, 2904, 2836, 2810, 2697, 2631, 2617, 2616,
	2388, 2250, 2065, 2247, 2246, 2245, 2244, 2243, 2165, 2141,
	2137, 2136, 2135, 2134, 2133, 1966, 3899, 1965, 1964, 1332,
	1962, 1665, 3843, 3844, 3845, 2069, 3842, 3848, 1332, 3910,
	3911, 1664, 2791, 1189, 3847, 1189, 3864, 3865, 3727, 1609,
	3869, 171, 3856, 3849, 3853, 1608, 1192, 1497, 1496, 3909,
	1495, 2123, 1494, 1493, 1192, 1492, 1274, 1274, 1491, 1486,
	3838, 1920, 1482, 1480, 1479, 3908, 3874, 1192, 1923, 1323,
	3852, 1322, 1321, 1274, 1320, 1319, 1287, 1286, 1236, 3913,
	2066, 1235, 1234, 1233, 1332, 1232, 1188, 1231, 1230, 1274,
	3949, 3921, 1228, 3923, 1188, 1223, 1222, 3937, 1221, 1220,
	3935, 1219, 3936, 2003, 974, 960, 3777, 1188, 4226, 3889,
	1659, 3975, 89, 1488, 1194, 1192, 807, 1192, 1914, 83,
	2102, 3646, 932, 3985, 1274, 1274, 1274, 3952, 4337, 3948,
	2900, 1472, 4248, 3898, 3941, 1332, 815, 3986, 4322, 3928,
	3261, 4005, 3946, 2767, 2228, 1610, 1190, 1072, 1072, 1072,
	2230, 3169, 2300, 3953, 1190, 1188, 3947, 1188, 1189, 3989,
	3994, 3924, 3968, 3971, 2582, 1332, 3972, 1190, 4293, 1960,
	1072, 3815, 3023, 1072, 1072, 4202, 4032, 3987, 2426, 3922,
	1797, 3126, 2070, 1072, 85, 1056, 1926, 1102, 3958, 3174,
	3957, 1072, 1072, 3876, 3634, 3980, 2876, 4011, 3955, 4024,
	3954, 1911, 1913, 1022, 1335, 4009, 1332, 4273, 1274, 2014,
	1062, 4008, 4013, 2030, 2023, 1190, 2618, 1190, 4019, 2500,
	1079, 4029, 1076, 1915, 1917, 1078, 1077, 1916, 1816, 1075,
	1332, 1910, 3730, 3729, 3974, 2818, 2855, 3895, 1072, 3895,
	1192, 3396, 1536, 1534, 934, 2018, 2382, 1072, 2071, 2072,
	4035, 2410, 3012, 1790, 3615, 1072, 4002, 1926, 3616, 1037,
	1058, 2407, 1212, 1047, 1036, 1072, 3152, 4041, 1072, 3131,
	2156, 3383, 2067, 4052, 4053, 4064, 3591, 1072, 2295, 824,
	1188, 3082, 2413, 1203, 1332, 1259, 2523, 2516, 4088, 2512,
	3216, 2518, 2845, 1677, 4046, 1274, 1274, 1769, 2856, 1317,
	1040, 2380, 3650, 1781, 3652, 2992, 2305, 2319, 4071, 4104,
	4063, 3390, 3172, 2068, 2611, 4344, 3510, 4065, 2145, 1168,
	1167, 1210, 1166, 4328, 4325, 3762, 3346, 4115, 4139, 2006,
	2655, 1759, 4055, 1332, 3354, 1052, 1274, 1433, 3137, 4130,
	1190, 3415, 1499, 746, 4102, 4085, 1064, 1758, 2788, 4106,
	2787, 4218, 1303, 1301, 1194, 1194, 1300, 4144, 1299, 4426,
	4538, 4117, 3895, 3643, 4120, 221, 4159, 3685, 4122, 4119,
	4154, 4112, 4128, 1072, 1072, 4038, 2960, 4094, 1698, 1690,
	256, 218, 220, 3348, 4155, 3961, 4138, 4123, 219, 4157,
	1072, 1926, 3963, 3596, 2424, 4143, 3973, 3178, 1189, 1189,
	4410, 3662, 4156, 3338, 23, 22, 4162, 21, 4161, 4176,
	1205, 109, 3989, 42, 20, 125, 4191, 4192, 3993, 143,
	142, 117, 141, 140, 1072, 139, 2073, 1072, 138, 145,
	4074, 137, 136, 4190, 1194, 131, 135, 134, 133, 132,
	130, 4163, 129, 1225, 4151, 4194, 1194, 124, 4214, 4118,
	128, 4182, 127, 126, 123, 254, 122, 254, 254, 121,
	1254, 254, 1264, 120, 119, 118, 116, 115, 114, 4213,
	113, 112, 4200, 1284, 111, 110, 737, 4211, 1189, 4212,
	1192, 1192, 741, 734, 4236, 61, 60, 1072, 1072, 2592,
	1189, 4231, 4230, 108, 107, 19, 4178, 4179, 1194, 2074,
	40, 1194, 14, 65, 66, 1274, 254, 18, 254, 254,
	1254, 13, 254, 254, 1264, 1274, 1274, 4244, 35, 88,
	1188, 1188, 99, 98, 36, 254, 4246, 1452, 4260, 4261,
	96, 4284, 1274, 95, 34, 17, 16, 4259, 15, 93,
	92, 33, 1189, 31, 4264, 1189, 1072, 1072, 1476, 11,
	9, 8, 37, 4277, 1877, 12, 1072, 5, 4280, 4278,
	1192, 4289, 4281, 4290, 1035, 176, 4143, 1501, 175, 1264,
	178, 174, 1192, 254, 254, 177, 1254, 4288, 4315, 87,
	1190, 1190, 4199, 173, 172, 86, 4319, 29, 4237, 4297,
	10, 1072, 1072, 168, 1072, 741, 4298, 254, 254, 4140,
	1188, 4302, 3895, 3895, 3718, 80, 1920, 170, 169, 4327,
	4330, 4342, 1188, 1923, 167, 4282, 4283, 4339, 166, 1434,
	849, 165, 81, 4318, 1192, 78, 164, 1192, 4317, 82,
	2522, 2666, 4287, 4332, 4331, 4361, 4336, 4335, 163, 4365,
	4268, 79, 162, 4270, 27, 1072, 1072, 1072, 6, 4366,
	64, 4349, 7, 4364, 4014, 3435, 102, 4353, 103, 4358,
	1190, 38, 4359, 1914, 1188, 4360, 76, 1188, 75, 74,
	4346, 26, 1190, 63, 1072, 4381, 4394, 25, 4399, 1920,
	4378, 4379, 3895, 206, 4380, 2522, 1923, 205, 204, 203,
	202, 4395, 201, 254, 3895, 196, 195, 200, 198, 4413,
	4107, 197, 4420, 199, 4397, 194, 4422, 209, 208, 213,
	3327, 254, 212, 211, 1259, 210, 207, 4433, 215, 193,
	192, 190, 4435, 4424, 1190, 1072, 186, 1190, 185, 189,
	191, 4421, 4439, 4427, 4434, 188, 1914, 187, 184, 4429,
	3358, 4428, 214, 160, 161, 71, 3895, 159, 158, 3895,
	2950, 3365, 4459, 4455, 157, 4445, 4446, 156, 155, 4451,
	154, 4449, 4447, 153, 70, 24, 2, 1, 0, 4458,
	0, 4460, 4327, 0, 1194, 4330, 1194, 4477, 4474, 0,
	4466, 4473, 4462, 4469, 0, 0, 0, 4483, 0, 0,
	0, 4475, 3406, 3407, 4482, 4479, 4250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4431, 4432, 0, 0,
	0, 4496, 4436, 0, 0, 0, 0, 4267, 1189, 4495,
	1189, 3890, 4498, 0, 0, 0, 0, 0, 4505, 0,
	2518, 2518, 4346, 4504, 0, 0, 0, 2522, 4507, 1072,
	1072, 4509, 0, 4502, 4512, 4511, 4515, 0, 1072, 0,
	1072, 1072, 0, 0, 754, 3886, 4524, 4521, 0, 3879,
	4529, 4527, 4532, 0, 0, 0, 4528, 4533, 0, 0,
	4530, 0, 0, 0, 0, 4534, 3877, 4531, 0, 0,
	4537, 0, 0, 0, 4544, 3881, 4543, 0, 4545, 0,
	4546, 4541, 0, 4522, 4523, 4551, 4547, 4550, 4542, 0,
	1192, 0, 1192, 0, 1072, 4552, 0, 3887, 0, 657,
	0, 4558, 4554, 4560, 0, 4555, 4476, 4557, 4478, 0,
	4561, 0, 0, 0, 0, 0, 2857, 0, 0, 0,
	254, 0, 254, 0, 0, 4350, 254, 0, 4351, 0,
	1188, 0, 1188, 0, 0, 0, 0, 4556, 3880, 1452,
	1254, 254, 0, 254, 4096, 4097, 0, 0, 254, 1452,
	673, 2039, 0, 0, 0, 254, 1452, 2040, 0, 0,
	2783, 759, 0, 0, 2518, 2518, 2518, 0, 4111, 0,
	1967, 4113, 4114, 0, 1920, 0, 0, 0, 0, 0,
	0, 1923, 254, 0, 0, 0, 0, 0, 0, 254,
	1190, 0, 1190, 2775, 2773, 0, 0, 0, 0, 0,
	2777, 2779, 2769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3895, 0, 3895, 0, 0, 0, 1920, 1920,
	1707, 1708, 0, 0, 0, 1923, 1923, 0, 0, 741,
	0, 1914, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 2041, 0, 0,
	0, 1920, 1920, 0, 0, 1914, 1914, 0, 1923, 1923,
	0, 0, 0, 0, 2045, 0, 1709, 0, 0, 0,
	0, 0, 0, 3882, 0, 0, 1729, 0, 3883, 0,
	0, 0, 1920, 0, 0, 1726, 0, 1035, 0, 1923,
	0, 1035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 765, 0, 1415, 1914, 1914,
	0, 1415, 0, 3138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3885,
	0, 4245, 0, 2042, 2047, 0, 3470, 0, 0, 1914,
	0, 0, 0, 0, 0, 3888, 3164, 0, 0, 0,
	0, 0, 0, 0, 2771, 0, 0, 1732, 1733, 1734,
	1735, 3177, 0, 254, 0, 2785, 254, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 756, 0, 0,
	0, 0, 3195, 0, 0, 0, 2784, 2776, 2774, 2778,
	2780, 2770, 2772, 2786, 0, 0, 0, 0, 0, 0,
	2782, 0, 0, 0, 0, 0, 0, 760, 0, 0,
	0, 1737, 1739, 0, 0, 0, 2043, 0, 0, 254,
	3689, 0, 0, 254, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 2789, 254, 0, 0, 1724, 1725, 0,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 254, 0, 763, 0, 657, 0, 254, 2048, 758,
	0, 0, 2049, 0, 0, 0, 3884, 0, 0, 741,
	1730, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3755, 3756, 3757, 0, 254, 0,
	1254, 254, 755, 3891, 0, 0, 0, 0, 0, 0,
	0, 1268, 2036, 0, 1920, 741, 0, 0, 0, 0,
	0, 1923, 254, 0, 0, 0, 0, 0, 0, 0,
	762, 0, 0, 254, 254, 0, 254, 0, 254, 0,
	254, 0, 254, 0, 719, 0, 0, 0, 0, 0,
	72, 2037, 4409, 0, 0, 757, 0, 0, 0, 0,
	0, 0, 0, 2259, 0, 0, 2260, 73, 2261, 3177,
	0, 1914, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	2518, 2518, 2790, 723, 0, 0, 0, 741, 0, 0,
	0, 2781, 0, 1731, 0, 0, 0, 1707, 1708, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 1920, 0,
	0, 1738, 0, 0, 0, 1923, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	843, 0, 0, 0, 1855, 0, 0, 3085, 3086, 0,
	3103, 3104, 3105, 0, 104, 0, 0, 0, 0, 90,
	101, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	3798, 0, 0, 1729, 0, 1914, 0, 0, 1428, 0,
	0, 1330, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2518, 2518, 2518, 2518, 2518, 2518, 2518, 2518,
	2518, 2518, 2518, 2518, 2518, 2518, 2518, 2518, 2518, 2518,
	2518, 0, 2518, 0, 0, 91, 0, 0, 0, 0,
	0, 0, 0, 3100, 0, 1727, 1723, 1415, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 3487, 1732, 1733, 1734, 1735, 0, 254,
	0, 0, 0, 0, 1715, 0, 0, 0, 657, 0,
	3503, 0, 0, 0, 0, 254, 1268, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 1264, 0, 0, 1737, 1739,
	0, 0, 0, 0, 3091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1021, 0,
	0, 0, 0, 0, 1724, 1725, 0, 0, 2608, 0,
	0, 0, 0, 1035, 4010, 0, 4012, 0, 0, 1415,
	0, 254, 1264, 0, 673, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 2630, 0, 0, 1730, 0, 0,
	254, 0, 0, 254, 0, 3106, 0, 254, 0, 254,
	0, 0, 0, 0, 1254, 0, 254, 254, 0, 1264,
	1264, 2646, 0, 152, 0, 0, 254, 0, 0, 0,
	0, 0, 72, 0, 46, 45, 0, 0, 0, 179,
	97, 0, 100, 0, 0, 0, 0, 3101, 0, 73,
	0, 0, 147, 0, 3594, 0, 0, 0, 4057, 0,
	0, 0, 0, 0, 0, 77, 222, 0, 0, 0,
	2686, 0, 0, 0, 844, 0, 67, 0, 0, 144,
	0, 254, 0, 48, 0, 149, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 47, 0, 84, 254, 0, 0, 0,
	224, 1920, 0, 0, 1415, 0, 0, 0, 1923, 0,
	1736, 0, 0, 0, 0, 0, 0, 254, 0, 50,
	68, 0, 0, 0, 0, 0, 146, 51, 0, 0,
	1731, 0, 57, 0, 0, 4121, 150, 0, 0, 0,
	0, 183, 254, 2800, 49, 0, 104, 0, 0, 223,
	0, 90, 101, 0, 0, 0, 0, 0, 1914, 0,
	216, 0, 0, 0, 0, 0, 0, 1452, 0, 217,
	254, 0, 1920, 0, 0, 0, 0, 0, 254, 1923,
	3102, 0, 0, 0, 0, 0, 0, 2840, 0, 52,
	0, 182, 0, 0, 0, 0, 0, 2686, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 91, 2869, 849,
	0, 2686, 2686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 1914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 1254, 254, 0, 0,
	1452, 0, 1452, 1264, 254, 0, 0, 1254, 0, 1254,
	0, 1254, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712,
	1713, 1714, 1716, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 254, 254,
	254, 1254, 0, 1254, 254, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1920, 0, 3097, 3098,
	3099, 0, 0, 1923, 0, 3096, 3094, 3095, 3087, 3088,
	3089, 3090, 3092, 3093, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 1268, 1268, 0, 0, 0,
	1415, 0, 0, 1914, 0, 0, 0, 53, 0, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 0, 0,
	58, 179, 97, 0, 100, 0, 0, 0, 54, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 55,
	0, 0, 0, 0, 1452, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 62, 0, 0, 0,
	0, 144, 1707, 1708, 0, 0, 0, 1415, 1750, 1751,
	1752, 3851, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 224, 1710, 0, 3861, 0, 0, 1279, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 3085,
	3086, 1021, 3103, 3104, 3105, 1021, 0, 0, 1709, 0,
	0, 0, 0, 183, 0, 0, 1415, 0, 1729, 0,
	0, 223, 3797, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 1415, 0, 0, 0, 0, 0, 0, 0,
	1454, 0, 1460, 0, 1466, 3085, 3086, 2518, 3103, 3104,
	3105, 0, 0, 182, 0, 254, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 3100, 0, 0, 3476, 0,
	0, 254, 0, 0, 0, 0, 657, 0, 0, 0,
	0, 657, 0, 0, 657, 0, 0, 657, 657, 1732,
	1733, 1734, 1735, 657, 0, 0, 0, 0, 0, 1715,
	0, 254, 2518, 0, 0, 0, 0, 0, 1553, 0,
	1558, 0, 0, 1452, 0, 0, 0, 0, 0, 0,
	1567, 3100, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 1452, 0, 1757, 0, 0,
	0, 0, 1330, 1737, 1739, 0, 254, 0, 0, 0,
	254, 254, 0, 0, 0, 0, 3091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	1725, 0, 4030, 0, 1415, 0, 0, 1707, 1708, 2686,
	2686, 254, 0, 3231, 0, 1631, 0, 1745, 1637, 0,
	0, 0, 2686, 0, 0, 3245, 0, 0, 0, 0,
	0, 1738, 1730, 2686, 3245, 0, 2686, 3245, 1710, 0,
	3245, 0, 3091, 4030, 0, 0, 0, 3106, 0, 0,
	0, 0, 0, 254, 254, 3231, 254, 0, 3085, 3086,
	0, 3103, 3104, 3105, 0, 0, 0, 2319, 1415, 0,
	0, 0, 0, 1709, 72, 0, 3231, 254, 0, 3297,
	3297, 3475, 1254, 1729, 2518, 0, 0, 0, 0, 3101,
	0, 73, 1726, 0, 0, 0, 0, 2686, 0, 3315,
	2686, 3231, 0, 3106, 2686, 2686, 3231, 77, 0, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 0, 0, 0, 0,
	0, 2319, 0, 0, 0, 0, 3085, 3086, 0, 3103,
	3104, 3105, 0, 0, 3100, 254, 0, 0, 0, 0,
	1778, 0, 0, 3465, 0, 3101, 1791, 84, 0, 254,
	3342, 0, 0, 3344, 2686, 1736, 0, 254, 0, 0,
	0, 254, 0, 1264, 1732, 1733, 1734, 1735, 0, 0,
	0, 0, 0, 0, 1715, 1731, 0, 0, 0, 0,
	0, 0, 2840, 0, 843, 1254, 0, 254, 0, 0,
	2686, 0, 657, 0, 0, 0, 0, 0, 104, 2686,
	0, 1748, 3100, 90, 101, 0, 0, 0, 0, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 1737, 1739,
	254, 2840, 0, 0, 2840, 3091, 1104, 73, 0, 0,
	0, 0, 3102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 1724, 1725, 0, 0, 0, 0,
	0, 1849, 1849, 1849, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3445,
	0, 0, 1254, 254, 0, 254, 0, 1730, 0, 0,
	0, 0, 0, 84, 0, 0, 3106, 0, 3102, 0,
	0, 0, 0, 3091, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 1749, 1727, 1723, 254,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 3101, 0,
	0, 3107, 0, 0, 104, 0, 0, 0, 0, 90,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3106, 0, 0, 0, 0, 0,
	3097, 3098, 3099, 0, 0, 3508, 0, 3096, 3094, 3095,
	3087, 3088, 3089, 3090, 3092, 3093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 91, 3101, 1021, 0, 0,
	1736, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3097, 3098, 3099, 0,
	1731, 0, 0, 3096, 3094, 3095, 3087, 3088, 3089, 3090,
	3092, 3093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 179, 97, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3102, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 254, 254, 0, 0, 844, 0,
	0, 0, 0, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 1452, 1452,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 3102,
	0, 0, 1452, 1452, 1452, 0, 0, 0, 0, 1415,
	146, 0, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712,
	1713, 1714, 1716, 1717, 1415, 183, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 3297, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 1415, 0, 0, 0, 179,
	97, 0, 100, 217, 0, 0, 0, 0, 0, 3097,
	3098, 3099, 0, 0, 0, 0, 3096, 3094, 3095, 3087,
	3088, 3089, 3090, 3092, 3093, 1547, 222, 0, 741, 0,
	0, 0, 1035, 0, 844, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 3097, 3098, 3099,
	0, 0, 3231, 254, 3096, 3094, 3095, 3087, 3088, 3089,
	3090, 3092, 3093, 0, 254, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 183, 0, 254, 0, 0, 0, 0, 254, 223,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 1415, 0, 0, 0, 0, 0, 217,
	0, 0, 2686, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 2869, 2869, 0, 0, 0, 0, 849, 849,
	2686, 1545, 0, 0, 2840, 2840, 0, 0, 849, 2686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 254, 0,
	2294, 0, 2298, 0, 0, 0, 0, 0, 0, 2312,
	0, 0, 0, 0, 0, 0, 2321, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 0, 2361, 0, 2363, 2364, 2365, 2366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3816, 0,
	0, 0, 0, 0, 0, 0, 2390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 0,
	0, 2405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2435, 2438, 2441,
	2444, 0, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 0,
	0, 1415, 0, 0, 1415, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 1452, 0, 254, 0,
	2514, 0, 2525, 2527, 2532, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2686, 2686, 0, 3297, 0, 0, 0, 0, 0,
	0, 0, 2686, 0, 0, 0, 1415, 0, 0, 3897,
	0, 3897, 1452, 1195, 0, 1707, 1708, 1195, 0, 0,
	2686, 1195, 3245, 1415, 0, 1452, 1452, 254, 3231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	3231, 254, 3231, 254, 3085, 3086, 1710, 3103, 3104, 3105,
	0, 0, 1195, 0, 0, 2686, 0, 2686, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 1709, 2686, 0, 0, 0, 0, 3965, 0, 0,
	0, 1729, 0, 0, 0, 0, 254, 1195, 0, 0,
	1726, 0, 1195, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	3100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3897, 0, 0, 1452, 0, 0,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	0, 3464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 1195,
	0, 1710, 1732, 1733, 1734, 1735, 0, 1415, 0, 0,
	1756, 0, 1715, 0, 0, 0, 0, 0, 0, 3085,
	3086, 0, 3103, 3104, 3105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 3091, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 1737, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2803, 2804, 0, 2806, 0, 2686, 0, 3245, 0,
	0, 4067, 1724, 1725, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 3100, 4086, 0, 4086, 0,
	0, 0, 3106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 1254, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	3231, 254, 0, 0, 3101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4067, 0, 0, 0, 0, 0, 0, 0, 2686, 0,
	0, 0, 1747, 0, 0, 1757, 0, 0, 0, 0,
	4148, 1737, 1739, 0, 0, 0, 3091, 0, 0, 0,
	0, 0, 1452, 0, 2923, 0, 0, 0, 1753, 0,
	1754, 0, 0, 0, 3897, 3897, 0, 1724, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 254, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	1730, 0, 0, 0, 0, 3508, 1760, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	0, 3297, 0, 3297, 0, 0, 1195, 0, 1195, 4067,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 1195, 3897, 0, 0, 3102, 0, 3101,
	0, 0, 1415, 0, 0, 0, 3897, 0, 0, 0,
	1927, 2972, 2973, 0, 1195, 0, 0, 2979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 2993, 2994, 0, 0,
	0, 0, 2405, 0, 0, 0, 3965, 0, 0, 0,
	0, 3001, 0, 0, 0, 0, 0, 0, 3897, 0,
	254, 3897, 0, 0, 0, 0, 0, 3015, 0, 0,
	0, 3245, 0, 1736, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 3027, 0, 0, 0, 0, 0,
	0, 1195, 0, 1731, 0, 0, 0, 1452, 0, 1452,
	1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714,
	1716, 1717, 0, 0, 0, 1195, 0, 0, 0, 1748,
	0, 0, 1415, 0, 1415, 3097, 3098, 3099, 0, 0,
	4311, 0, 3096, 3094, 3095, 3087, 3088, 3089, 3090, 3092,
	3093, 0, 3102, 4086, 0, 0, 254, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 2532, 2532, 2532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 3142, 0, 0, 1415,
	0, 3508, 0, 0, 0, 0, 1746, 0, 1415, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 1452, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	1195, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1452,
	3097, 3098, 3099, 0, 1415, 0, 0, 3096, 3094, 3095,
	3087, 3088, 3089, 3090, 3092, 3093, 0, 0, 0, 0,
	0, 0, 0, 4067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 1415, 0, 2686, 0, 0,
	0, 0, 0, 0, 3897, 0, 3897, 0, 0, 0,
	0, 0, 1195, 0, 1195, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 3264, 0, 0, 0,
	0, 0, 1195, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 1452,
	0, 0, 0, 0, 0, 1195, 0, 1195, 1195, 1195,
	0, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 2869, 0, 0, 0, 0, 0, 0, 0,
	1415, 2686, 0, 0, 0, 1743, 1738, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 2869, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 1415, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 703,
	0, 253, 253, 253, 1927, 1927, 1195, 1707, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 1415, 0, 687, 0, 0, 0, 778,
	0, 1738, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 778, 0, 0, 0, 0, 0, 1732,
	1733, 1734, 1735, 0, 688, 0, 0, 0, 0, 1715,
	0, 0, 0, 1709, 0, 689, 0, 0, 0, 0,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 1195, 0, 0, 690, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 1757, 0, 0,
	0, 0, 0, 1737, 1739, 0, 709, 0, 0, 2312,
	0, 0, 0, 0, 0, 3462, 3463, 0, 0, 3466,
	1753, 0, 1754, 3469, 0, 691, 0, 0, 0, 1724,
	1725, 0, 3473, 2978, 0, 0, 0, 0, 0, 0,
	0, 3480, 0, 0, 3142, 1195, 0, 1745, 692, 0,
	0, 0, 1195, 0, 1732, 1733, 1734, 1735, 0, 3492,
	0, 1195, 1730, 0, 1715, 0, 0, 1035, 1035, 693,
	1191, 0, 694, 0, 0, 0, 0, 0, 1195, 3515,
	3516, 0, 3517, 3518, 3519, 0, 0, 718, 1707, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 1737, 1739,
	0, 708, 1738, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 1744, 0, 3525, 0, 0, 0, 3527, 0,
	0, 0, 0, 0, 1724, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 3555,
	3556, 0, 0, 0, 1729, 0, 0, 1730, 0, 0,
	705, 0, 1035, 1726, 0, 0, 0, 3567, 1195, 1195,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 3576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 2971, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 715, 0, 696,
	0, 0, 0, 0, 0, 1732, 1733, 1734, 1735, 0,
	0, 0, 1927, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 3619, 697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 0, 0, 0,
	1736, 3637, 0, 0, 0, 0, 0, 0, 1195, 1737,
	1739, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	1731, 0, 698, 0, 0, 0, 713, 714, 711, 0,
	0, 3661, 0, 0, 706, 1724, 1725, 699, 1746, 0,
	0, 0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 1195,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0,
	0, 0, 0, 3036, 0, 0, 0, 3037, 1730, 0,
	0, 0, 0, 0, 0, 0, 700, 707, 0, 1195,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 0, 0, 710, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 3750, 0,
	0, 0, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712,
	1713, 1714, 1716, 1717, 0, 0, 0, 0, 0, 1707,
	1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 1743, 1738, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 1731, 0, 0, 0, 0, 0, 0, 0, 3794,
	3795, 0, 0, 0, 0, 3799, 3800, 0, 0, 0,
	3803, 3804, 0, 0, 0, 1709, 0, 3808, 0, 0,
	0, 0, 0, 0, 0, 1729, 0, 0, 3812, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	253, 0, 253, 253, 3817, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2493, 2494, 2495, 2496, 2489, 2490, 2491, 2492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 253, 253, 0, 0, 253, 253, 0,
	0, 0, 0, 0, 0, 0, 1732, 1733, 1734, 1735,
	778, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 1727, 1723, 0, 1720, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 0, 796, 0, 0, 0,
	0, 0, 2469, 2470, 2471, 2472, 0, 0, 0, 0,
	0, 1747, 0, 0, 1757, 0, 798, 0, 253, 253,
	1737, 1739, 799, 0, 0, 2481, 2482, 2483, 2484, 2477,
	2478, 2479, 2480, 2485, 2486, 2487, 2488, 1753, 0, 1754,
	0, 0, 253, 253, 0, 0, 1724, 1725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 800, 0, 817, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1730,
	0, 1195, 1195, 0, 0, 0, 0, 0, 801, 0,
	0, 0, 0, 802, 0, 0, 0, 1195, 2465, 2466,
	2467, 2468, 2473, 2474, 2475, 2476, 0, 0, 0, 0,
	0, 0, 0, 825, 0, 1195, 0, 0, 0, 803,
	0, 1755, 0, 0, 0, 0, 0, 1195, 0, 0,
	1195, 0, 823, 0, 0, 0, 0, 0, 253, 1744,
	0, 0, 0, 0, 0, 0, 0, 1927, 0, 0,
	0, 1195, 0, 0, 0, 797, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 804, 0, 0, 805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 4025, 4026, 4027, 718, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2312, 0, 0, 4036, 4037, 0,
	1927, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4045, 4048, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 826, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 4087, 0, 0, 0, 0, 0, 0, 1195, 4093,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 4100,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 4108, 0, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 1195, 0, 1195, 806, 0, 0, 1195, 0,
	0, 0, 0, 0, 0, 1746, 808, 0, 0, 0,
	1721, 1722, 1728, 1749, 1727, 1723, 1195, 1720, 1718, 1719,
	1711, 1712, 1713, 1714, 1716, 1717, 0, 1195, 0, 0,
	2401, 0, 0, 0, 2402, 1871, 809, 1191, 0, 0,
	0, 253, 0, 1195, 0, 1184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 1871, 253, 0,
	0, 0, 0, 778, 0, 0, 0, 0, 1195, 1195,
	778, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 0, 818, 0, 0, 0, 0,
	1195, 249, 249, 653, 810, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 4217, 0,
	1195, 4220, 0, 811, 0, 0, 812, 830, 0, 829,
	0, 0, 0, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 0, 822, 0, 0, 0, 0, 0, 831, 0,
	828, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 0, 0, 0,
	0, 1021, 1021, 0, 0, 0, 0, 703, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 1195,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 1927,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2312, 0, 0, 0, 0, 0, 0, 0, 0,
	4048, 0, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 0, 0, 0,
	0, 0, 1927, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 690, 0, 1021, 0, 253, 0,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	1195, 1195, 0, 0, 0, 0, 0, 0, 0, 4377,
	4377, 4377, 0, 0, 253, 0, 692, 0, 253, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 1195, 0, 0, 0, 693, 4398, 0,
	694, 0, 0, 0, 253, 0, 253, 0, 0, 0,
	0, 0, 253, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4377,
	0, 0, 0, 253, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 778, 253,
	0, 253, 0, 253, 0, 253, 0, 253, 705, 0,
	0, 0, 0, 0, 0, 1707, 1708, 0, 1740, 1741,
	1742, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 1738,
	0, 1081, 0, 0, 0, 253, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4377, 4516, 1927, 0, 696, 0, 0,
	0, 1709, 4520, 0, 0, 0, 0, 255, 255, 255,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 1195, 716, 0, 697, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 1195, 1195, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 717, 0, 0, 0, 1195, 0, 0,
	698, 0, 0, 0, 713, 714, 711, 0, 0, 0,
	0, 0, 706, 0, 0, 699, 1195, 0, 0, 0,
	0, 0, 1732, 1733, 1734, 1735, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1927,
	0, 0, 0, 0, 700, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 0, 1747, 0, 0,
	1757, 0, 0, 0, 0, 0, 1737, 1739, 702, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 1191, 1754, 0, 719, 0, 0,
	0, 0, 1724, 1725, 0, 0, 0, 0, 704, 0,
	1191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	1240, 0, 1240, 1240, 0, 1730, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 0, 1195, 0,
	1195, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 1327, 0, 0, 1195, 0, 253, 1432, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 253, 0,
	0, 0, 253, 0, 253, 1195, 0, 1195, 0, 0,
	0, 253, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1551, 1552, 0, 0, 0, 0, 1731, 0,
	0, 0, 1195, 1195, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 1195,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	1195, 253, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 1195, 1195, 0, 0, 0, 0, 778, 0, 0,
	0, 1195, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 1195, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749,
	1727, 1723, 1927, 1720, 1718, 1719, 1711, 1712, 1713, 1714,
	1716, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	3822, 0, 1195, 0, 1195, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	253, 0, 253, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 253, 253, 253, 0, 0, 0, 253,
	1195, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1057, 106, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 255, 255,
	0, 0, 255, 0, 1277, 0, 0, 0, 0, 0,
	0, 1887, 0, 0, 0, 0, 0, 1927, 0, 0,
	0, 0, 0, 0, 0, 106, 1896, 0, 1432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 1277, 255,
	255, 0, 1277, 255, 255, 0, 1277, 0, 0, 0,
	1195, 0, 0, 0, 0, 0, 255, 1240, 0, 0,
	0, 0, 1195, 0, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 996, 0, 0, 0,
	0, 0, 1277, 0, 255, 255, 0, 1016, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 1195, 0, 0,
	0, 1195, 1277, 0, 0, 0, 0, 1277, 255, 255,
	0, 1195, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 1195, 1178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1191, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 253, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2143, 0, 0, 0, 2150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2162,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 253,
	0, 253, 0, 0, 2173, 0, 2173, 0, 1871, 0,
	0, 0, 2180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 1195, 2150, 0, 0, 2203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2223, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 2235,
	0, 2237, 0, 2239, 778, 2241, 0, 2242, 0, 0,
	0, 0, 253, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 1191, 0, 0, 2264, 0, 0, 1277, 0,
	0, 0, 255, 255, 255, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 1277,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	253, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2589, 0, 0, 0, 0, 0,
	0, 106, 0, 106, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 1277, 1277, 255, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1016, 106, 106, 0, 1191,
	1191, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	255, 106, 0, 0, 255, 2632, 0, 0, 1240, 255,
	0, 106, 1240, 106, 1240, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 2162, 255, 0, 0, 0, 0, 0, 255, 0,
	770, 0, 0, 0, 0, 0, 0, 1277, 0, 1277,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 0, 1277, 1277, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 1277, 255,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 1277, 1277, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 255, 0, 255, 0, 255,
	0, 255, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 255, 0, 996, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 1772, 0, 2150, 0, 0, 0, 253,
	0, 0, 0, 2162, 0, 0, 0, 0, 0, 253,
	1777, 0, 0, 0, 1783, 0, 0, 0, 253, 0,
	0, 1277, 0, 253, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1191, 0,
	0, 2898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2908, 0, 2911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 0,
	0, 0, 2935, 1432, 2937, 1432, 0, 0, 0, 2941,
	0, 0, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 1872, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 0,
	2969, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 0, 1334, 0, 0, 0, 1276, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 1277, 0, 0, 0, 1276, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1191, 0, 0, 0, 0,
	0, 0, 1276, 1191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 1276, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 255, 0, 0, 0, 255, 0,
	255, 0, 0, 0, 1871, 0, 1871, 255, 255, 0,
	0, 0, 0, 1277, 1277, 0, 0, 255, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 0, 253, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 255, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 1277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 1277, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1240, 0, 0, 0, 1432, 1432, 0, 0, 1275,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	1016, 0, 1016, 0, 0, 0, 1277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3229, 255, 0, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 255, 1333, 255, 0,
	0, 1275, 0, 0, 253, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3279, 3281,
	0, 2162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 255, 255,
	255, 255, 0, 0, 0, 255, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 255, 0,
	0, 0, 1275, 0, 0, 0, 255, 0, 0, 1276,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 996, 0, 0, 996, 996, 1871,
	1871, 0, 3355, 0, 0, 0, 3359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1276, 0, 0, 0,
	0, 0, 2379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3411, 0, 0, 1016, 0,
	1334, 0, 0, 0, 0, 0, 0, 1777, 0, 1871,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 3448, 0,
	1432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 253, 1871, 0, 0, 0,
	0, 0, 0, 1178, 3460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1276, 1276, 1277, 0, 0,
	0, 0, 106, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 1277, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 255, 255, 0, 0, 0, 0, 1276, 0, 1276,
	0, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 1276, 1276, 0,
	0, 0, 255, 0, 770, 0, 0, 0, 1276, 0,
	0, 770, 0, 0, 1275, 0, 0, 0, 0, 253,
	1276, 0, 1276, 1276, 1276, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 255, 0, 255, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 255, 1277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 1275, 0, 1277, 0, 0, 0, 0, 1277, 1871,
	106, 1871, 0, 106, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 1277, 0, 0, 0, 0, 255, 1277, 0, 1277,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	255, 1334, 0, 0, 0, 0, 0, 106, 255, 0,
	106, 1277, 255, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2162, 0,
	0, 0, 0, 1277, 1277, 0, 0, 0, 0, 2162,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 3717,
	0, 0, 0, 106, 0, 1277, 0, 0, 1334, 0,
	0, 0, 0, 2162, 0, 0, 0, 3732, 0, 0,
	1275, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 255, 1277, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	255, 0, 0, 3779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 0, 1707, 1708, 0, 1740,
	1741, 1742, 1750, 1751, 1752, 2379, 0, 1277, 0, 0,
	0, 0, 1275, 0, 1275, 0, 1275, 0, 0, 1743,
	1738, 0, 0, 0, 1277, 0, 1777, 1710, 0, 0,
	0, 0, 1275, 1275, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 1275, 1275, 1275,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 0, 770,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1276, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 1733, 1734, 1735, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 3912, 0, 0, 0, 0, 0, 1747, 1334,
	0, 1757, 0, 0, 0, 1178, 2162, 1737, 1739, 0,
	0, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 1754, 0, 0, 0,
	0, 0, 0, 1724, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 2162, 0, 1333, 0, 0, 1730, 0, 0, 0,
	3981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 1276, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1744, 0, 0, 0,
	0, 1277, 1333, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	106, 106, 0, 0, 106, 255, 0, 0, 1333, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 255,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 1277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 106, 106, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 1277, 1277, 0, 1731,
	0, 0, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750,
	1751, 1752, 1277, 0, 4075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 1743, 1738, 0, 255,
	0, 1277, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 1275, 1275,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2162, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1729,
	0, 1178, 0, 0, 1016, 0, 0, 0, 1726, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 106, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 1721, 1722, 1728,
	1749, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713,
	1714, 1716, 1717, 0, 0, 0, 4189, 1432, 0, 0,
	0, 3478, 0, 0, 1333, 0, 0, 0, 0, 0,
	1732, 1733, 1734, 1735, 0, 0, 0, 0, 1275, 0,
	1715, 0, 0, 1277, 0, 1277, 0, 0, 0, 0,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	0, 0, 0, 1743, 1738, 1747, 0, 0, 1757, 1275,
	0, 1710, 0, 0, 1737, 1739, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 1754, 0, 0, 0, 1334, 0, 1275,
	1724, 1725, 0, 0, 0, 0, 1709, 0, 255, 0,
	0, 1275, 0, 0, 0, 0, 1729, 0, 1745, 0,
	1277, 0, 255, 0, 255, 1726, 1275, 0, 0, 1277,
	1334, 0, 0, 1730, 0, 4269, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1277, 1277, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 0, 1277, 1755, 0, 255, 0, 0,
	1276, 1276, 0, 0, 0, 1277, 255, 0, 0, 0,
	1277, 0, 0, 1744, 0, 0, 0, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 4321, 0, 0, 0, 1277, 1277, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 1178, 1178,
	0, 0, 1747, 0, 0, 1757, 0, 0, 0, 0,
	0, 1737, 1739, 0, 1276, 0, 1736, 4355, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 1731, 1724, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 1748, 0, 1334, 0, 0, 1277, 0, 1277,
	1730, 0, 0, 1276, 0, 0, 0, 0, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4414,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 1276, 0, 0, 0, 0, 0, 1276, 0, 1276,
	0, 0, 1755, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 1277, 1277, 0, 1746,
	0, 0, 0, 0, 1721, 1722, 1728, 1749, 1727, 1723,
	0, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717,
	0, 0, 0, 1276, 1276, 0, 0, 0, 3039, 0,
	0, 0, 0, 1736, 1277, 0, 0, 1277, 0, 0,
	0, 0, 0, 0, 0, 1276, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 106, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 255, 0, 0, 0, 0, 0, 1748,
	0, 0, 1334, 0, 0, 1334, 0, 1178, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 1334, 0, 1746, 0, 0, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	0, 255, 0, 0, 0, 3038, 1277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 1277, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 1333,
	0, 0, 1178, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 1275, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 1275, 0, 1275, 0, 0, 0, 1333, 0,
	0, 0, 0, 255, 0, 770, 0, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 1738, 0, 0, 0, 0, 1275, 1275,
	1710, 0, 0, 0, 0, 255, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1729, 0, 0, 0, 0,
	0, 106, 0, 0, 1726, 0, 0, 1333, 1707, 1708,
	1333, 1740, 1741, 1742, 1750, 1751, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 1738, 0, 0, 0, 0, 0, 0, 1710,
	0, 1276, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 1732, 1733, 1734, 1735,
	0, 0, 1333, 0, 1729, 0, 1715, 0, 0, 1276,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1276, 1276, 1276, 0, 0,
	0, 1747, 0, 0, 1757, 0, 0, 0, 0, 0,
	1737, 1739, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 1754,
	0, 1334, 0, 0, 0, 0, 1724, 1725, 0, 0,
	0, 0, 0, 0, 0, 1732, 1733, 1734, 1735, 0,
	0, 0, 0, 1334, 1745, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 1757, 0, 0, 0, 0, 0, 1737,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 1753, 0, 1754, 0,
	0, 0, 0, 0, 0, 1724, 1725, 0, 0, 1744,
	2379, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 1334,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 1736, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1276, 1276, 0,
	0, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 1748, 0, 0,
	1276, 0, 0, 0, 1275, 1746, 0, 0, 0, 0,
	1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718, 1719,
	1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0, 0,
	1275, 1275, 1275, 0, 3035, 1276, 1276, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 106, 0,
	0, 106, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 1721,
	1722, 1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 0, 0, 1334, 0, 1276,
	0, 0, 0, 3034, 1707, 1708, 0, 1740, 1741, 1742,
	1750, 1751, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 1743, 1738, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1709, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	1729, 0, 0, 1743, 1738, 0, 1276, 1276, 1333, 1726,
	1333, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 1709, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 1733, 1734, 1735, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 1757,
	0, 0, 1275, 1275, 0, 1737, 1739, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 1275,
	0, 0, 1753, 0, 1754, 0, 0, 0, 0, 0,
	1333, 1724, 1725, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 1747, 0, 0, 1757, 0, 0, 0, 0,
	0, 1737, 1739, 0, 1730, 0, 0, 0, 0, 0,
	1275, 1275, 1275, 0, 0, 0, 0, 0, 1753, 0,
	1754, 1333, 0, 0, 0, 0, 1276, 1724, 1725, 0,
	0, 0, 0, 0, 0, 0, 1276, 1276, 0, 0,
	0, 0, 0, 0, 0, 1745, 1755, 0, 0, 0,
	0, 1333, 0, 1276, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 1275, 1275, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749, 1727,
	1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 3033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 2402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 1275, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 1336, 271, 272, 1337, 1338, 1339, 1275, 1340,
	599, 1341, 1342, 1343, 1344, 273, 274, 1135, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 1345, 604, 283, 284, 285, 286, 287, 288, 1346,
	1347, 0, 289, 605, 606, 607, 1348, 290, 291, 608,
	1349, 1278, 1350, 292, 293, 294, 295, 296, 297, 298,
	0, 1351, 300, 301, 302, 299, 303, 1352, 304, 0,
	305, 306, 307, 308, 309, 310, 1353, 311, 312, 313,
	1136, 314, 315, 1354, 1355, 1357, 1356, 1358, 1359, 1360,
	316, 317, 318, 319, 0, 320, 609, 610, 1361, 324,
	321, 322, 1362, 325, 323, 1363, 326, 327, 328, 1364,
	1365, 329, 330, 331, 1366, 332, 333, 1367, 334, 335,
	336, 1368, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 1369, 260,
	1370, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 1371, 355, 1372, 1373, 1137, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	1374, 366, 617, 1375, 618, 367, 1376, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 1139, 373, 374, 1377,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 1378, 1138, 382, 622, 623, 1379, 624, 1380,
	384, 385, 1140, 625, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 1381,
	396, 398, 397, 1382, 399, 626, 1143, 400, 401, 1144,
	1383, 402, 0, 0, 0, 403, 404, 407, 1384, 1385,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 1386, 262, 1147, 446, 447, 1387,
	627, 448, 628, 450, 451, 1388, 0, 452, 0, 1389,
	1390, 454, 455, 456, 1391, 1392, 457, 458, 629, 1148,
	459, 1149, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 1393, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	1394, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 1395, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 1396, 507, 508, 509,
	1150, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 1397,
	530, 531, 529, 532, 533, 534, 1398, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 1399, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 1400, 558,
	559, 0, 556, 1401, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 1402, 568, 640, 641, 642, 643, 1403,
	577, 1404, 569, 570, 571, 644, 572, 645, 1405, 573,
	574, 575, 576, 0, 578, 579, 1406, 1407, 580, 581,
	582, 584, 585, 583, 586, 1408, 587, 1409, 0, 588,
	589, 590, 646, 647, 648, 1410, 592, 591, 593, 649,
	1411, 1412, 1413, 1414, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 2567, 0, 0, 0, 0, 0, 0, 0,
	2568, 263, 265, 264, 266, 267, 268, 269, 270, 1336,
	271, 272, 1337, 1338, 1339, 0, 1340, 599, 1341, 1342,
	1343, 1344, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 1345, 604,
	283, 284, 285, 286, 287, 288, 1346, 1347, 0, 289,
	605, 606, 607, 1348, 290, 291, 608, 1349, 1278, 1350,
	292, 293, 294, 295, 296, 297, 298, 0, 1351, 300,
	301, 302, 299, 303, 1352, 304, 0, 305, 306, 307,
	308, 309, 310, 1353, 311, 312, 313, 1136, 314, 315,
	1354, 1355, 1357, 1356, 1358, 1359, 1360, 316, 317, 318,
	319, 0, 320, 609, 610, 1361, 324, 321, 322, 1362,
	325, 323, 1363, 326, 327, 328, 1364, 1365, 329, 330,
	331, 1366, 332, 333, 1367, 334, 335, 336, 1368, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 1369, 260, 1370, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	1371, 355, 1372, 1373, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 1374, 366, 617,
	1375, 618, 367, 1376, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1139, 373, 374, 1377, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 1378,
	1138, 382, 622, 623, 1379, 624, 1380, 384, 385, 1140,
	625, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 1381, 396, 398, 397,
	1382, 399, 626, 1143, 400, 401, 1144, 1383, 402, 0,
	0, 0, 403, 404, 407, 1384, 1385, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1386, 262, 1147, 446, 447, 1387, 627, 448, 628,
	450, 451, 1388, 0, 452, 0, 1389, 1390, 454, 455,
	456, 1391, 1392, 457, 458, 629, 1148, 459, 1149, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 1393, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 1394, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 1395, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 1396, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 1397, 530, 531, 529,
	532, 533, 534, 1398, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	1399, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 1400, 558, 559, 0, 556,
	1401, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	1402, 568, 640, 641, 642, 643, 1403, 577, 1404, 569,
	570, 571, 644, 572, 645, 1405, 573, 574, 575, 576,
	0, 578, 579, 1406, 1407, 580, 581, 582, 584, 585,
	583, 586, 1408, 587, 1409, 0, 588, 589, 590, 646,
	647, 648, 1410, 592, 591, 593, 649, 1411, 1412, 1413,
	1414, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 0, 0, 0, 3486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3488, 263, 265, 264, 266,
	267, 268, 269, 270, 1336, 271, 272, 1337, 1338, 1339,
	0, 1340, 599, 1341, 1342, 1343, 1344, 273, 274, 1135,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 1345, 604, 283, 284, 285, 286, 287,
	288, 1346, 1347, 0, 289, 605, 606, 607, 1348, 290,
	291, 608, 1349, 1278, 1350, 292, 293, 294, 295, 296,
	297, 298, 0, 1351, 300, 301, 302, 299, 303, 1352,
	304, 0, 305, 306, 307, 308, 309, 310, 1353, 311,
	312, 313, 1136, 314, 315, 1354, 1355, 1357, 1356, 1358,
	1359, 1360, 316, 317, 318, 319, 0, 320, 609, 610,
	1361, 324, 321, 322, 1362, 325, 323, 1363, 326, 327,
	328, 1364, 1365, 329, 330, 331, 1366, 332, 333, 1367,
	334, 335, 336, 1368, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	1369, 260, 1370, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 1371, 355, 1372, 1373, 1137,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 1374, 366, 617, 1375, 618, 367, 1376, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1139, 373,
	374, 1377, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 1378, 1138, 382, 622, 623, 1379,
	624, 1380, 384, 385, 1140, 625, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 1381, 396, 398, 397, 1382, 399, 626, 1143, 400,
	401, 1144, 1383, 402, 0, 0, 0, 403, 404, 407,
	1384, 1385, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 1386, 262, 1147, 446,
	447, 1387, 627, 448, 628, 450, 451, 1388, 0, 452,
	0, 1389, 1390, 454, 455, 456, 1391, 1392, 457, 458,
	629, 1148, 459, 1149, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 1393, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 1394, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 1395, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 1396, 507,
	508, 509, 1150, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 1397, 530, 531, 529, 532, 533, 534, 1398, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 1399, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	1400, 558, 559, 0, 556, 1401, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 1402, 568, 640, 641, 642,
	643, 1403, 577, 1404, 569, 570, 571, 644, 572, 645,
	1405, 573, 574, 575, 576, 0, 578, 579, 1406, 1407,
	580, 581, 582, 584, 585, 583, 586, 1408, 587, 1409,
	0, 588, 589, 590, 646, 647, 648, 1410, 592, 591,
	593, 649, 1411, 1412, 1413, 1414, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3850, 263, 265, 264, 266, 267,
	268, 269, 270, 1336, 271, 272, 1337, 1338, 1339, 0,
	1340, 599, 1341, 1342, 1343, 1344, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 1345, 604, 283, 284, 285, 286, 287, 288,
	1346, 1347, 0, 289, 605, 606, 607, 1348, 290, 291,
	608, 1349, 1278, 1350, 292, 293, 294, 295, 296, 297,
	298, 0, 1351, 300, 301, 302, 299, 303, 1352, 304,
	0, 305, 306, 307, 308, 309, 310, 1353, 311, 312,
	313, 1136, 314, 315, 1354, 1355, 1357, 1356, 1358, 1359,
	1360, 316, 317, 318, 319, 0, 320, 609, 610, 1361,
	324, 321, 322, 1362, 325, 323, 1363, 326, 327, 328,
	1364, 1365, 329, 330, 331, 1366, 332, 333, 1367, 334,
	335, 336, 1368, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 1369,
	260, 1370, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 1371, 355, 1372, 1373, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 1374, 366, 617, 1375, 618, 367, 1376, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1139, 373, 374,
	1377, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 1378, 1138, 382, 622, 623, 1379, 624,
	1380, 384, 385, 1140, 625, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1381, 396, 398, 397, 1382, 399, 626, 1143, 400, 401,
	1144, 1383, 402, 0, 0, 0, 403, 404, 407, 1384,
	1385, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1386, 262, 1147, 446, 447,
	1387, 627, 448, 628, 450, 451, 1388, 0, 452, 0,
	1389, 1390, 454, 455, 456, 1391, 1392, 457, 458, 629,
	1148, 459, 1149, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 1393, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 1394, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 1395, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 1396, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	1397, 530, 531, 529, 532, 533, 534, 1398, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 1399, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 1400,
	558, 559, 0, 556, 1401, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 1402, 568, 640, 641, 642, 643,
	1403, 577, 1404, 569, 570, 571, 644, 572, 645, 1405,
	573, 574, 575, 576, 0, 578, 579, 1406, 1407, 580,
	581, 582, 584, 585, 583, 586, 1408, 587, 1409, 0,
	588, 589, 590, 646, 647, 648, 1410, 592, 591, 593,
	649, 1411, 1412, 1413, 1414, 594, 595, 650, 596, 597,
	598, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4031, 263,
	265, 264, 266, 267, 268, 269, 270, 1336, 271, 272,
	1337, 1338, 1339, 0, 1340, 599, 1341, 1342, 1343, 1344,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 1345, 604, 283, 284,
	285, 286, 287, 288, 1346, 1347, 0, 289, 605, 606,
	607, 1348, 290, 291, 608, 1349, 1278, 1350, 292, 293,
	294, 295, 296, 297, 298, 0, 1351, 300, 301, 302,
	299, 303, 1352, 304, 0, 305, 306, 307, 308, 309,
	310, 1353, 311, 312, 313, 1136, 314, 315, 1354, 1355,
	1357, 1356, 1358, 1359, 1360, 316, 317, 318, 319, 0,
	320, 609, 610, 1361, 324, 321, 322, 1362, 325, 323,
	1363, 326, 327, 328, 1364, 1365, 329, 330, 331, 1366,
	332, 333, 1367, 334, 335, 336, 1368, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 1369, 260, 1370, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 1371, 355,
	1372, 1373, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 1374, 366, 617, 1375, 618,
	367, 1376, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 1139, 373, 374, 1377, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 1378, 1138, 382,
	622, 623, 1379, 624, 1380, 384, 385, 1140, 625, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 1381, 396, 398, 397, 1382, 399,
	626, 1143, 400, 401, 1144, 1383, 402, 0, 0, 0,
	403, 404, 407, 1384, 1385, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1386,
	262, 1147, 446, 447, 1387, 627, 448, 628, 450, 451,
	1388, 0, 452, 0, 1389, 1390, 454, 455, 456, 1391,
	1392, 457, 458, 629, 1148, 459, 1149, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 1393,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 1394, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 1395, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 1396, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 1397, 530, 531, 529, 532, 533,
	534, 1398, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 1399, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 1400, 558, 559, 0, 556, 1401, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 1402, 568,
	640, 641, 642, 643, 1403, 577, 1404, 569, 570, 571,
	644, 572, 645, 1405, 573, 574, 575, 576, 0, 578,
	579, 1406, 1407, 580, 581, 582, 584, 585, 583, 586,
	1408, 587, 1409, 0, 588, 589, 590, 646, 647, 648,
	1410, 592, 591, 593, 649, 1411, 1412, 1413, 1414, 594,
	595, 650, 596, 597, 598, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3920, 263, 265, 264, 266, 267, 268, 269,
	270, 1336, 271, 272, 1337, 1338, 1339, 0, 1340, 599,
	1341, 1342, 1343, 1344, 273, 274, 1135, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	1345, 604, 283, 284, 285, 286, 287, 288, 1346, 1347,
	0, 289, 605, 606, 607, 1348, 290, 291, 608, 1349,
	1278, 1350, 292, 293, 294, 295, 296, 297, 298, 0,
	1351, 300, 301, 302, 299, 303, 1352, 304, 0, 305,
	306, 307, 308, 309, 310, 1353, 311, 312, 313, 1136,
	314, 315, 1354, 1355, 1357, 1356, 1358, 1359, 1360, 316,
	317, 318, 319, 0, 320, 609, 610, 1361, 324, 321,
	322, 1362, 325, 323, 1363, 326, 327, 328, 1364, 1365,
	329, 330, 331, 1366, 332, 333, 1367, 334, 335, 336,
	1368, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 1369, 260, 1370,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 1371, 355, 1372, 1373, 1137, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 1374,
	366, 617, 1375, 618, 367, 1376, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1139, 373, 374, 1377, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 1378, 1138, 382, 622, 623, 1379, 624, 1380, 384,
	385, 1140, 625, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 1381, 396,
	398, 397, 1382, 399, 626, 1143, 400, 401, 1144, 1383,
	402, 0, 0, 0, 403, 404, 407, 1384, 1385, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1386, 262, 1147, 446, 447, 1387, 627,
	448, 628, 450, 451, 1388, 0, 452, 0, 1389, 1390,
	454, 455, 456, 1391, 1392, 457, 458, 629, 1148, 459,
	1149, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 1393, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 1394,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 1395, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 1396, 507, 508, 509, 1150,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 1397, 530,
	531, 529, 532, 533, 534, 1398, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 1399, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 1400, 558, 559,
	0, 556, 1401, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 1402, 568, 640, 641, 642, 643, 1403, 577,
	1404, 569, 570, 571, 644, 572, 645, 1405, 573, 574,
	575, 576, 0, 578, 579, 1406, 1407, 580, 581, 582,
	584, 585, 583, 586, 1408, 587, 1409, 0, 588, 589,
	590, 646, 647, 648, 1410, 592, 591, 593, 649, 1411,
	1412, 1413, 1414, 594, 595, 650, 596, 597, 598, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3780, 263, 265, 264,
	266, 267, 268, 269, 270, 1336, 271, 272, 1337, 1338,
	1339, 0, 1340, 599, 1341, 1342, 1343, 1344, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 1345, 604, 283, 284, 285, 286,
	287, 288, 1346, 1347, 0, 289, 605, 606, 607, 1348,
	290, 291, 608, 1349, 1278, 1350, 292, 293, 294, 295,
	296, 297, 298, 0, 1351, 300, 301, 302, 299, 303,
	1352, 304, 0, 305, 306, 307, 308, 309, 310, 1353,
	311, 312, 313, 1136, 314, 315, 1354, 1355, 1357, 1356,
	1358, 1359, 1360, 316, 317, 318, 319, 0, 320, 609,
	610, 1361, 324, 321, 322, 1362, 325, 323, 1363, 326,
	327, 328, 1364, 1365, 329, 330, 331, 1366, 332, 333,
	1367, 334, 335, 336, 1368, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 1369, 260, 1370, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 1371, 355, 1372, 1373,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 1374, 366, 617, 1375, 618, 367, 1376,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 1377, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 1378, 1138, 382, 622, 623,
	1379, 624, 1380, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 1381, 396, 398, 397, 1382, 399, 626, 1143,
	400, 401, 1144, 1383, 402, 0, 0, 0, 403, 404,
	407, 1384, 1385, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1386, 262, 1147,
	446, 447, 1387, 627, 448, 628, 450, 451, 1388, 0,
	452, 0, 1389, 1390, 454, 455, 456, 1391, 1392, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 1393, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 1394, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 1395,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 1396,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 1397, 530, 531, 529, 532, 533, 534, 1398,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 1399, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 1400, 558, 559, 0, 556, 1401, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 1402, 568, 640, 641,
	642, 643, 1403, 577, 1404, 569, 570, 571, 644, 572,
	645, 1405, 573, 574, 575, 576, 0, 578, 579, 1406,
	1407, 580, 581, 582, 584, 585, 583, 586, 1408, 587,
	1409, 0, 588, 589, 590, 646, 647, 648, 1410, 592,
	591, 593, 649, 1411, 1412, 1413, 1414, 594, 595, 650,
	596, 597, 598, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3504, 263, 265, 264, 266, 267, 268, 269, 270, 1336,
	271, 272, 1337, 1338, 1339, 0, 1340, 599, 1341, 1342,
	1343, 1344, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 1345, 604,
	283, 284, 285, 286, 287, 288, 1346, 1347, 0, 289,
	605, 606, 607, 1348, 290, 291, 608, 1349, 1278, 1350,
	292, 293, 294, 295, 296, 297, 298, 0, 1351, 300,
	301, 302, 299, 303, 1352, 304, 0, 305, 306, 307,
	308, 309, 310, 1353, 311, 312, 313, 1136, 314, 315,
	1354, 1355, 1357, 1356, 1358, 1359, 1360, 316, 317, 318,
	319, 0, 320, 609, 610, 1361, 324, 321, 322, 1362,
	325, 323, 1363, 326, 327, 328, 1364, 1365, 329, 330,
	331, 1366, 332, 333, 1367, 334, 335, 336, 1368, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 1369, 260, 1370, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	1371, 355, 1372, 1373, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 1374, 366, 617,
	1375, 618, 367, 1376, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1139, 373, 374, 1377, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 1378,
	1138, 382, 622, 623, 1379, 624, 1380, 384, 385, 1140,
	625, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 1381, 396, 398, 397,
	1382, 399, 626, 1143, 400, 401, 1144, 1383, 402, 0,
	0, 0, 403, 404, 407, 1384, 1385, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1386, 262, 1147, 446, 447, 1387, 627, 448, 628,
	450, 451, 1388, 0, 452, 0, 1389, 1390, 454, 455,
	456, 1391, 1392, 457, 458, 629, 1148, 459, 1149, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 1393, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 1394, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 1395, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 1396, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 1397, 530, 531, 529,
	532, 533, 534, 1398, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	1399, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 1400, 558, 559, 0, 556,
	1401, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	1402, 568, 640, 641, 642, 643, 1403, 577, 1404, 569,
	570, 571, 644, 572, 645, 1405, 573, 574, 575, 576,
	0, 578, 579, 1406, 1407, 580, 581, 582, 584, 585,
	583, 586, 1408, 587, 1409, 0, 588, 589, 590, 646,
	647, 648, 1410, 592, 591, 593, 649, 1411, 1412, 1413,
	1414, 594, 595, 650, 596, 597, 598, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3340, 263, 265, 264, 266, 267,
	268, 269, 270, 1336, 271, 272, 1337, 1338, 1339, 0,
	1340, 599, 1341, 1342, 1343, 1344, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 1345, 604, 283, 284, 285, 286, 287, 288,
	1346, 1347, 0, 289, 605, 606, 607, 1348, 290, 291,
	608, 1349, 1278, 1350, 292, 293, 294, 295, 296, 297,
	298, 0, 1351, 300, 301, 302, 299, 303, 1352, 304,
	0, 305, 306, 307, 308, 309, 310, 1353, 311, 312,
	313, 1136, 314, 315, 1354, 1355, 1357, 1356, 1358, 1359,
	1360, 316, 317, 318, 319, 0, 320, 609, 610, 1361,
	324, 321, 322, 1362, 325, 323, 1363, 326, 327, 328,
	1364, 1365, 329, 330, 331, 1366, 332, 333, 1367, 334,
	335, 336, 1368, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 1369,
	260, 1370, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 1371, 355, 1372, 1373, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 1374, 366, 617, 1375, 618, 367, 1376, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1139, 373, 374,
	1377, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 1378, 1138, 382, 622, 623, 1379, 624,
	1380, 384, 385, 1140, 625, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1381, 396, 398, 397, 1382, 399, 626, 1143, 400, 401,
	1144, 1383, 402, 0, 0, 0, 403, 404, 407, 1384,
	1385, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1386, 262, 1147, 446, 447,
	1387, 627, 448, 628, 450, 451, 1388, 0, 452, 0,
	1389, 1390, 454, 455, 456, 1391, 1392, 457, 458, 629,
	1148, 459, 1149, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 1393, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 1394, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 1395, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 1396, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	1397, 530, 531, 529, 532, 533, 534, 1398, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 1399, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 1400,
	558, 559, 0, 556, 1401, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 1402, 568, 640, 641, 642, 643,
	1403, 577, 1404, 569, 570, 571, 644, 572, 645, 1405,
	573, 574, 575, 576, 0, 578, 579, 1406, 1407, 580,
	581, 582, 584, 585, 583, 586, 1408, 587, 1409, 0,
	588, 589, 590, 646, 647, 648, 1410, 592, 591, 593,
	649, 1411, 1412, 1413, 1414, 594, 595, 650, 596, 597,
	598, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2425, 263,
	265, 264, 266, 267, 268, 269, 270, 1336, 271, 272,
	1337, 1338, 1339, 0, 1340, 599, 1341, 1342, 1343, 1344,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 1345, 604, 283, 284,
	285, 286, 287, 288, 1346, 1347, 0, 289, 605, 606,
	607, 1348, 290, 291, 608, 1349, 1278, 1350, 292, 293,
	294, 295, 296, 297, 298, 0, 1351, 300, 301, 302,
	299, 303, 1352, 304, 0, 305, 306, 307, 308, 309,
	310, 1353, 311, 312, 313, 1136, 314, 315, 1354, 1355,
	1357, 1356, 1358, 1359, 1360, 316, 317, 318, 319, 0,
	320, 609, 610, 1361, 324, 321, 322, 1362, 325, 323,
	1363, 326, 327, 328, 1364, 1365, 329, 330, 331, 1366,
	332, 333, 1367, 334, 335, 336, 1368, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 1369, 260, 1370, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 1371, 355,
	1372, 1373, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 1374, 366, 617, 1375, 618,
	367, 1376, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 1139, 373, 374, 1377, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 1378, 1138, 382,
	622, 623, 1379, 624, 1380, 384, 385, 1140, 625, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 1381, 396, 398, 397, 1382, 399,
	626, 1143, 400, 401, 1144, 1383, 402, 0, 0, 0,
	403, 404, 407, 1384, 1385, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1386,
	262, 1147, 446, 447, 1387, 627, 448, 628, 450, 451,
	1388, 0, 452, 0, 1389, 1390, 454, 455, 456, 1391,
	1392, 457, 458, 629, 1148, 459, 1149, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 1393,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 1394, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 1395, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 1396, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 1397, 530, 531, 529, 532, 533,
	534, 1398, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 1399, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 1400, 558, 559, 0, 556, 1401, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 1402, 568,
	640, 641, 642, 643, 1403, 577, 1404, 569, 570, 571,
	644, 572, 645, 1405, 573, 574, 575, 576, 0, 578,
	579, 1406, 1407, 580, 581, 582, 584, 585, 583, 586,
	1408, 587, 1409, 0, 588, 589, 590, 646, 647, 648,
	1410, 592, 591, 593, 649, 1411, 1412, 1413, 1414, 594,
	595, 650, 596, 597, 598, 1426, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2124, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 1336, 271, 272, 1337, 1338, 1339, 0, 1340,
	599, 1341, 1342, 1343, 1344, 273, 274, 1135, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 1345, 604, 283, 284, 285, 286, 287, 288, 1346,
	1347, 0, 289, 605, 606, 607, 1348, 290, 291, 608,
	1349, 1278, 1350, 292, 293, 294, 295, 296, 297, 298,
	0, 1351, 300, 301, 302, 299, 303, 1352, 304, 0,
	305, 306, 307, 308, 309, 310, 1353, 311, 312, 313,
	1136, 314, 315, 1354, 1355, 1357, 1356, 1358, 1359, 1360,
	316, 317, 318, 319, 0, 320, 609, 610, 1361, 324,
	321, 322, 1362, 325, 323, 1363, 326, 327, 328, 1364,
	1365, 329, 330, 331, 1366, 332, 333, 1367, 334, 335,
	336, 1368, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 1369, 260,
	1370, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 1371, 355, 1372, 1373, 1137, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	1374, 366, 617, 1375, 618, 367, 1376, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 1139, 373, 374, 1377,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 1378, 1138, 382, 622, 623, 1379, 624, 1380,
	384, 385, 1140, 625, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 1381,
	396, 398, 397, 1382, 399, 626, 1143, 400, 401, 1144,
	1383, 402, 0, 0, 0, 403, 404, 407, 1384, 1385,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 1386, 262, 1147, 446, 447, 1387,
	627, 448, 628, 450, 451, 1388, 0, 452, 0, 1389,
	1390, 454, 455, 456, 1391, 1392, 457, 458, 629, 1148,
	459, 1149, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 1393, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	1394, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 1395, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 1396, 507, 508, 509,
	1150, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 1397,
	530, 531, 529, 532, 533, 534, 1398, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 1399, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 1400, 558,
	559, 0, 556, 1401, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 1402, 568, 640, 641, 642, 643, 1403,
	577, 1404, 569, 570, 571, 644, 572, 645, 1405, 573,
	574, 575, 576, 0, 578, 579, 1406, 1407, 580, 581,
	582, 584, 585, 583, 586, 1408, 587, 1409, 0, 588,
	589, 590, 646, 647, 648, 1410, 592, 591, 593, 649,
	1411, 1412, 1413, 1414, 594, 595, 650, 596, 597, 598,
	1328, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 1336, 271, 272,
	1337, 1338, 1339, 0, 1340, 599, 1341, 1342, 1343, 1344,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 1345, 604, 283, 284,
	285, 286, 287, 288, 1346, 1347, 0, 289, 605, 606,
	607, 1348, 290, 291, 608, 1349, 1278, 1350, 292, 293,
	294, 295, 296, 297, 298, 0, 1351, 300, 301, 302,
	299, 303, 1352, 304, 0, 305, 306, 307, 308, 309,
	310, 1353, 311, 312, 313, 1136, 314, 315, 1354, 1355,
	1357, 1356, 1358, 1359, 1360, 316, 317, 318, 319, 0,
	320, 609, 610, 1361, 324, 321, 322, 1362, 325, 323,
	1363, 326, 327, 328, 1364, 1365, 329, 330, 331, 1366,
	332, 333, 1367, 334, 335, 336, 1368, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 1369, 260, 1370, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 1371, 355,
	1372, 1373, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 1374, 366, 617, 1375, 618,
	367, 1376, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 1139, 373, 374, 1377, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 1378, 1138, 382,
	622, 623, 1379, 624, 1380, 384, 385, 1140, 625, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 1381, 396, 398, 397, 1382, 399,
	626, 1143, 400, 401, 1144, 1383, 402, 0, 0, 0,
	403, 404, 407, 1384, 1385, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1386,
	262, 1147, 446, 447, 1387, 627, 448, 628, 450, 451,
	1388, 0, 452, 0, 1389, 1390, 454, 455, 456, 1391,
	1392, 457, 458, 629, 1148, 459, 1149, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 1393,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 1394, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 1395, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 1396, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 1397, 530, 531, 529, 532, 533,
	534, 1398, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 1399, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 1400, 558, 559, 0, 556, 1401, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 1402, 568,
	640, 641, 642, 643, 1403, 577, 1404, 569, 570, 571,
	644, 572, 645, 1405, 573, 574, 575, 576, 0, 578,
	579, 1406, 1407, 580, 581, 582, 584, 585, 583, 586,
	1408, 587, 1409, 0, 588, 589, 590, 646, 647, 648,
	1410, 592, 591, 593, 649, 1411, 1412, 1413, 1414, 594,
	595, 650, 596, 597, 598, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	1336, 271, 272, 1337, 1338, 1339, 0, 1340, 599, 1341,
	1342, 1343, 1344, 273, 274, 1135, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 1345,
	604, 283, 284, 285, 286, 287, 288, 1346, 1347, 0,
	289, 605, 606, 607, 1348, 290, 291, 608, 1349, 1278,
	1350, 292, 293, 294, 295, 296, 297, 298, 0, 1351,
	300, 301, 302, 299, 303, 1352, 304, 0, 305, 306,
	307, 308, 309, 310, 1353, 311, 312, 313, 1136, 314,
	315, 1354, 1355, 1357, 1356, 1358, 1359, 1360, 316, 317,
	318, 319, 0, 320, 609, 610, 1361, 324, 321, 322,
	1362, 325, 323, 1363, 326, 327, 328, 1364, 1365, 329,
	330, 331, 1366, 332, 333, 1367, 334, 335, 336, 1368,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 1369, 260, 1370, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 1371, 355, 1372, 1373, 1137, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 1374, 366,
	617, 1375, 618, 367, 1376, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 1139, 373, 374, 1377, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	1378, 1138, 382, 622, 623, 1379, 624, 1380, 384, 385,
	1140, 625, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 1381, 396, 398,
	397, 1382, 399, 626, 1143, 400, 401, 1144, 1383, 402,
	0, 0, 0, 403, 404, 407, 1384, 1385, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 1386, 262, 1147, 446, 447, 1387, 627, 448,
	628, 450, 451, 1388, 0, 452, 0, 1389, 1390, 454,
	455, 456, 1391, 1392, 457, 458, 629, 1148, 459, 1149,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 1393, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 1394, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 1395, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 1396, 507, 508, 509, 1150, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 1397, 530, 531,
	529, 532, 533, 534, 1398, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 1399, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 1400, 558, 559, 0,
	556, 1401, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 1402, 568, 640, 641, 642, 643, 1403, 577, 1404,
	569, 570, 571, 644, 572, 645, 1405, 573, 574, 575,
	576, 0, 578, 579, 1406, 1407, 580, 581, 582, 584,
	585, 583, 586, 1408, 587, 1409, 0, 588, 589, 590,
	646, 647, 648, 1410, 592, 591, 593, 649, 1411, 1412,
	1413, 1414, 594, 595, 650, 596, 597, 598, 2400, 0,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 2397, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 2398, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 2396, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	2399, 0, 0, 0, 0, 0, 0, 1055, 2395, 0,
	1017, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	262, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 222, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 224, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 1543, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 216, 594,
	595, 650, 596, 597, 598, 1030, 0, 217, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 1782,
	1780, 0, 0, 1053, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	262, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 222, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 224, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 1543, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 216, 594,
	595, 650, 596, 597, 598, 1030, 0, 217, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 1782,
	2991, 0, 0, 1053, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	262, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 222, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 224, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 1543, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 216, 594,
	595, 650, 596, 597, 598, 1030, 0, 217, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 1782,
	1780, 0, 0, 1053, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 2528, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 2533, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 2529, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	262, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 2530, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1030, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 0, 0, 0, 0, 0, 0, 0, 1055,
	0, 0, 2445, 1053, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 262, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 0, 0, 0, 0, 0, 0,
	0, 1055, 2443, 0, 2442, 1053, 1071, 1043, 1044, 1045,
	1041, 1042, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 1095,
	1059, 0, 0, 0, 273, 274, 1135, 275, 276, 277,
	278, 279, 280, 600, 1108, 0, 281, 1115, 282, 1114,
	0, 1125, 283, 284, 285, 286, 287, 288, 1061, 1094,
	1028, 289, 1155, 1156, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 1118, 320, 1112, 1111, 1032, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 1103, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 1038, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 1050, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 1110, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 1123,
	1124, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 1060, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 1138, 382, 1105, 1106, 0, 1066, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1029, 262, 1147, 446, 447, 1051, 1099,
	448, 1113, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	1109, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 1039, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 1107,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	1154, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	1027, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 1119, 1120, 1121, 1122, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 1049, 573, 574,
	575, 576, 0, 578, 579, 0, 1033, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 1116, 1153, 0, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1030,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 1024, 1025, 0, 0, 0, 0,
	0, 0, 0, 1055, 2440, 0, 2439, 1053, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 262, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 0, 0,
	0, 0, 0, 0, 0, 1055, 2437, 0, 2436, 1053,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	0, 0, 0, 0, 0, 0, 0, 1055, 2434, 0,
	1633, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	262, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 1632, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1030, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 0, 0, 0, 0, 0, 0, 0, 1055,
	0, 0, 1020, 1053, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 262, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 1034, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 1055, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 4333, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 262, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 1034, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 1055, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 2314, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 262, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 2313, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 1055, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 262, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 1034, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 1055, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 4103, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 262, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 1034, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 1055, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 3744, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 1850, 0, 0, 0, 0, 0,
	0, 1055, 0, 0, 0, 1053, 1071, 1043, 1044, 1045,
	1041, 1042, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 1095,
	1059, 0, 0, 0, 273, 274, 1135, 275, 276, 277,
	278, 279, 280, 600, 1108, 0, 281, 1115, 282, 1114,
	0, 1125, 283, 284, 285, 286, 287, 288, 1061, 1094,
	1028, 289, 1155, 1156, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 1118, 320, 1112, 1111, 1032, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 1103, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 1038, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 1050, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 1110, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 1123,
	1124, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 1060, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 1138, 382, 1105, 1106, 0, 1066, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1029, 262, 1147, 446, 447, 1051, 1099,
	448, 1113, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	1109, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 1039, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 1107,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	1154, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	1027, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 1119, 1120, 1121, 1122, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 1049, 573, 574,
	575, 576, 0, 578, 579, 0, 1033, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 1116, 1153, 3482, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1030,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 1024, 1025, 1071, 1043, 1044, 1045,
	1041, 1042, 1054, 1055, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 1095,
	1059, 0, 0, 0, 273, 274, 1135, 275, 276, 277,
	278, 279, 280, 600, 1108, 0, 281, 1115, 282, 1114,
	0, 1125, 283, 284, 285, 286, 287, 288, 1061, 1094,
	1028, 289, 1155, 1156, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 1118, 320, 1112, 1111, 1032, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 1103, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 1038, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 1050, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 1110, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 1123,
	1124, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 1060, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 1138, 382, 1105, 1106, 0, 1066, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1029, 262, 1147, 446, 447, 1051, 1099,
	448, 1113, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	1109, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 1039, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 1107,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	1154, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	1027, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 1119, 1120, 1121, 1122, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 1049, 573, 574,
	575, 576, 0, 578, 579, 0, 1033, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 1116, 1153, 0, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1030,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 1024, 1025, 1850, 0, 0, 0,
	0, 0, 0, 1055, 0, 0, 0, 1053, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 2533, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 262, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 1055, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 262, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 0, 0,
	0, 0, 0, 0, 0, 1055, 1780, 0, 2538, 1053,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	2536, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	262, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1030, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 0, 0, 0, 0, 0, 0, 0, 1055,
	0, 0, 2524, 1053, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 262, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 0, 0, 0, 0, 0, 0,
	0, 1055, 0, 0, 2513, 1053, 1071, 1043, 1044, 1045,
	1041, 1042, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 1095,
	1059, 0, 0, 0, 273, 274, 1135, 275, 276, 277,
	278, 279, 280, 600, 1108, 0, 281, 1115, 282, 1114,
	0, 1125, 283, 284, 285, 286, 287, 288, 1061, 1094,
	1028, 289, 1155, 1156, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 1118, 320, 1112, 1111, 1032, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 1103, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 1038, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 1050, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 1110, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 1123,
	1124, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 1060, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 1138, 382, 1105, 1106, 0, 1066, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1029, 262, 1147, 446, 447, 1051, 1099,
	448, 1113, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	1109, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 1039, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 1107,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	1154, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	1027, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 1119, 1120, 1121, 1122, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 1049, 573, 574,
	575, 576, 0, 578, 579, 0, 1033, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 1116, 1153, 0, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1030,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 1024, 1025, 0, 0, 0, 0,
	0, 0, 0, 1055, 0, 0, 2511, 1053, 2502, 2509,
	1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 2505, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 2506, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 2507, 417, 2504, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 262, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 2508,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 2503,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 0, 0,
	0, 0, 0, 0, 0, 1055, 0, 0, 2499, 1053,
	2502, 2509, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 2505, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 2506, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 2507, 417, 2504, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 2508, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 2503, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	0, 0, 0, 0, 0, 1788, 0, 1055, 0, 0,
	0, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 2293, 271, 272,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	262, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1030, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 0, 0, 0, 0, 0, 0, 0, 1055,
	0, 0, 1638, 1053, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 262, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 0, 0, 0, 0, 0, 0,
	0, 1055, 0, 0, 1573, 1053, 1071, 1043, 1044, 1045,
	1041, 1042, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 1095,
	1059, 0, 0, 0, 273, 274, 1135, 275, 276, 277,
	278, 279, 280, 600, 1108, 0, 281, 1115, 282, 1114,
	0, 1125, 283, 284, 285, 286, 287, 288, 1061, 1094,
	1028, 289, 1155, 1156, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 1118, 320, 1112, 1111, 1032, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 1103, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 1038, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 1050, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 1110, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 1123,
	1124, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 1060, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 1138, 382, 1105, 1106, 0, 1066, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1029, 262, 1147, 446, 447, 1051, 1099,
	448, 1113, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	1109, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 1039, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 1107,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	1154, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	1027, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 1119, 1120, 1121, 1122, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 1049, 573, 574,
	575, 576, 0, 578, 579, 0, 1033, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 1116, 1153, 0, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1030,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 1024, 1025, 0, 0, 0, 0,
	0, 0, 0, 1055, 0, 0, 1568, 1053, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 262, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 0, 0,
	0, 0, 0, 0, 0, 1055, 0, 0, 1559, 1053,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	1554, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	262, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1030, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 0, 0, 0, 0, 0, 0, 0, 1055,
	0, 0, 1468, 1053, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1467,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 262, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 0, 0, 0, 0, 0, 0,
	0, 1055, 0, 0, 1462, 1053, 1071, 1043, 1044, 1045,
	1041, 1042, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 1095,
	1059, 0, 0, 0, 273, 274, 1135, 275, 276, 277,
	278, 279, 280, 600, 1108, 0, 281, 1115, 282, 1114,
	0, 1125, 283, 284, 285, 286, 287, 288, 1061, 1094,
	1028, 289, 1155, 1156, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 1118, 320, 1112, 1111, 1032, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 1103, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 1038, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 1050, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 1110, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 1123,
	1124, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 1060, 367, 0, 368, 369, 370, 371,
	372, 1461, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 1138, 382, 1105, 1106, 0, 1066, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1029, 262, 1147, 446, 447, 1051, 1099,
	448, 1113, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	1109, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 1039, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 1107,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	1154, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	1027, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 1119, 1120, 1121, 1122, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 1049, 573, 574,
	575, 576, 0, 578, 579, 0, 1033, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 1116, 1153, 0, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1030,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 1024, 1025, 0, 0, 0, 0,
	0, 0, 0, 1055, 0, 0, 1455, 1053, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 262, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 0, 0,
	0, 0, 0, 0, 0, 1055, 0, 0, 1280, 1053,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 4376, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 4375, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 4374, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 4376, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 4375, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 4050, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 4051, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 4049, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 2958, 2959, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 2956, 2957, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 2301, 2302,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 0, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 2521, 0, 0, 0, 0, 0, 0, 2519, 2520,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 0, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 262, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 2951, 2952,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 2029,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 0, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 4376, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 0, 1098, 0, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 262, 0,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 4375, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 1193, 0, 0, 1024, 1025,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	0, 1053, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 1095, 0,
	0, 0, 0, 273, 274, 1135, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 1094, 0,
	289, 605, 606, 607, 0, 290, 291, 1101, 0, 1082,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1136, 314,
	315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 1126, 1127, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 1137, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	1133, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1096, 1097, 1100, 449, 1139, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 1138, 382, 622, 623, 0, 624, 0, 384, 385,
	1140, 1098, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 1179, 396, 398,
	397, 0, 399, 1134, 1143, 400, 401, 1144, 0, 402,
	0, 0, 0, 403, 404, 407, 1089, 1088, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 0, 262, 1147, 446, 447, 0, 1099, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 1185, 454,
	455, 456, 0, 0, 457, 458, 629, 1148, 459, 1149,
	1128, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 1129, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1150, 510,
	511, 512, 513, 636, 1187, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 222, 530, 531,
	529, 532, 533, 534, 1092, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 1130, 557, 0, 558, 559, 0,
	556, 224, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 1131, 572, 1132, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 1093, 587, 0, 0, 588, 589, 590,
	1543, 647, 648, 0, 592, 591, 593, 649, 1193, 0,
	0, 216, 594, 595, 650, 596, 597, 598, 0, 0,
	217, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	1183, 1095, 1874, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 1094, 0, 289, 605, 606, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 1138, 382, 622, 623, 0, 624,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1179, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 0, 262, 1147, 446, 447,
	0, 1099, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 1185, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 1187, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	222, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 0, 556, 224, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 1543, 647, 648, 0, 592, 591, 593,
	649, 3135, 0, 1193, 216, 594, 595, 650, 596, 597,
	598, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 1183, 0, 1874, 1095, 0, 0, 0,
	0, 273, 274, 1135, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 1094, 0, 289, 605,
	606, 607, 0, 290, 291, 1101, 0, 1082, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1136, 314, 315, 1085,
	1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1126, 1127, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 1137, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1133, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 1096, 1097,
	1100, 449, 1139, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1138,
	382, 622, 623, 0, 624, 0, 384, 385, 1140, 1098,
	1141, 386, 387, 388, 1142, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 1179, 396, 398, 397, 0,
	399, 1134, 1143, 400, 401, 1144, 0, 402, 0, 0,
	0, 403, 404, 407, 1089, 1088, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1145, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1146, 436,
	0, 262, 1147, 446, 447, 0, 1099, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 1185, 454, 455, 456,
	0, 0, 457, 458, 629, 1148, 459, 1149, 1128, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1129, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1150, 510, 511, 512,
	513, 636, 1187, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1092, 535, 536, 519, 520, 537, 538, 1151,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 1130, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 1131, 572, 1132, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 1093, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 1175, 0, 1193, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 1183, 0,
	1181, 1095, 0, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 1094, 0, 289, 605, 606, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 1138, 382, 622, 623, 0, 624,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1179, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 0, 262, 1147, 446, 447,
	0, 1099, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 1185, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 1187, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 1193, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 1183, 1095, 1181, 0, 0, 0, 273,
	274, 1135, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 1094, 0, 289, 605, 606, 607,
	0, 290, 291, 1101, 0, 1082, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1136, 314, 315, 1085, 1083, 1084,
	1091, 1087, 1086, 1090, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1126,
	1127, 350, 0, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 1137, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1133, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 1096, 1097, 1100, 449,
	1139, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 1138, 382, 622,
	623, 0, 624, 0, 384, 385, 1140, 1098, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 1179, 396, 398, 397, 0, 399, 1134,
	1143, 400, 401, 1144, 0, 402, 0, 0, 0, 403,
	404, 407, 1089, 1088, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 0, 262,
	1147, 446, 447, 0, 1099, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 1185, 454, 455, 456, 0, 0,
	457, 458, 629, 1148, 459, 1149, 1128, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1129,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1150, 510, 511, 512, 513, 636,
	1187, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1092, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	1130, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 1131,
	572, 1132, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 1093,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1193, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 1183, 1095, 1181, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 1094, 0, 289,
	605, 606, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 622, 623, 0, 624, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 0, 262, 1147, 446, 447, 0, 1099, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 1193, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1095, 3896, 0, 0, 0, 273, 274, 1135, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	1094, 0, 289, 605, 606, 607, 0, 290, 291, 1101,
	0, 1082, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1126, 1127, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1133, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 1096, 1097, 1100, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 1138, 382, 622, 623, 0, 624, 0,
	384, 385, 1140, 1098, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1134, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 1089, 1088,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 0, 262, 1147, 446, 447, 0,
	1099, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 1128, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1129, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 636, 1187, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1092, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 1130, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 1131, 572, 1132, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 1093, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	1017, 0, 1273, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 1773, 599, 0, 0, 0, 0,
	273, 274, 1135, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 1278, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 1138, 382,
	622, 623, 0, 624, 0, 384, 385, 1140, 625, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 0,
	0, 1147, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 222, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 224, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 1543, 647, 648,
	0, 592, 591, 593, 649, 1540, 0, 1273, 216, 594,
	595, 650, 596, 597, 598, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 182,
	599, 0, 0, 0, 0, 273, 274, 1135, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 1278, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 1138, 382, 622, 623, 0, 624, 0,
	384, 385, 1140, 625, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 0, 0, 1147, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 222,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 224, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 1543, 647, 648, 0, 592, 591, 593, 649,
	0, 0, 0, 216, 594, 595, 650, 596, 597, 598,
	0, 0, 217, 0, 0, 0, 0, 0, 1273, 1272,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 1278, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 1138, 382, 622, 623, 0, 624,
	0, 384, 385, 1140, 625, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 0, 0, 1147, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	1272, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1565, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 1135,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 1278, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1136, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 1137,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1139, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 1138, 382, 622, 623, 0,
	624, 0, 384, 385, 1140, 625, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 1143, 400,
	401, 1144, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 0, 0, 1147, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1148, 459, 1149, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1150, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 2117, 0, 0, 0, 0, 2118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3405, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 2116, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 1272, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1565, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 1135, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 1278, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1136, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 1137, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	1139, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 1138, 382, 622,
	623, 0, 624, 0, 384, 385, 1140, 625, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	1143, 400, 401, 1144, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 0, 0,
	1147, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1148, 459, 1149, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1150, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1193, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1095, 1549, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 1094, 0, 289,
	605, 606, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1138, 382, 622, 623, 0, 624, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 0, 262, 1147, 446, 447, 0, 1099, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 1017, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 222, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 224, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 1543, 647, 648, 0, 592, 591,
	593, 649, 257, 0, 0, 216, 594, 595, 650, 596,
	597, 598, 0, 0, 217, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 182, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	262, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 257, 2870, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 1888,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 257, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 4525, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 262, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 257, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 3356, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 262, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 1537, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 257, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 2858, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	257, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 3507, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 861, 0, 769, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 2191, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	776, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 859, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 774, 560, 561, 562, 563, 564, 775, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 767, 0,
	769, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 779, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 776, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 262, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 774, 560, 561, 562,
	563, 564, 775, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 1925, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	779, 0, 0, 0, 0, 0, 273, 274, 1135, 275,
	276, 277, 278, 279, 280, 0, 1931, 0, 281, 1921,
	282, 1937, 0, 1944, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 1947, 1948, 0, 0, 290, 291,
	0, 0, 1278, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 1118, 320, 1935, 1934, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 1933,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1942, 1943, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 0, 0, 0, 367, 0, 368, 369,
	370, 371, 372, 0, 0, 0, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 1138, 382, 1928, 1929, 0, 1924,
	0, 384, 385, 1140, 0, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 0, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 0, 0, 1147, 446, 447,
	0, 0, 448, 1936, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 0,
	1148, 459, 1149, 0, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 1918, 472,
	473, 474, 1919, 475, 476, 477, 0, 478, 0, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1932, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 0, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1930, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1946, 551, 552, 553, 554, 0, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1938, 1939, 1940, 1941,
	0, 577, 0, 569, 570, 571, 0, 572, 0, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 0, 1922, 1945, 0, 592, 591, 593,
	0, 0, 769, 0, 0, 594, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 1912,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 776, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	262, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 774, 560,
	561, 562, 563, 564, 775, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	769, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 779, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 776, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 262, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 2231, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 2232, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 774, 560, 561, 562,
	563, 564, 775, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 2233, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1994, 0, 1273, 1961, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	779, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 1135, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 1278,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1136, 314,
	315, 0, 0, 0, 0, 0, 0, 1958, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 1137, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 1139, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 1138, 382, 622, 623, 0, 624, 0, 384, 385,
	1140, 625, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 1143, 400, 401, 1144, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 0, 0, 1147, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1148, 459, 1149,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1150, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 1959, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1955, 0,
	1273, 1961, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 1958, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1959,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 769, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 776, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 262, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 1951, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 774, 560, 561, 562, 563, 564,
	775, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 1950, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 769, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 779, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 776, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 262, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 1904, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 774, 560, 561, 562, 563, 564, 775, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	1903, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 0,
	0, 1273, 1961, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 779, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 1135, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 1278, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1136, 314, 315, 0, 0, 0,
	0, 0, 0, 1958, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 1137, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	1139, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 1138, 382, 622,
	623, 0, 624, 0, 384, 385, 1140, 625, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	1143, 400, 401, 1144, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 0, 0,
	1147, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1148, 459, 1149, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1150, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1959, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1273, 1272, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 1135, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 1278, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	1138, 382, 622, 623, 0, 624, 0, 384, 385, 1140,
	625, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 0, 0, 1147, 446, 447, 3690, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1273, 1272, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 1135, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 1278, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 1138, 382, 622, 623, 0, 624, 0,
	384, 385, 1140, 625, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 0, 0, 1147, 446, 447, 3328,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 257, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1593, 0,
	1273, 1272, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 779, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 1592, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 1591, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 1590, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1512, 0, 1273, 1272, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 1135, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 1278,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1136, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 1137, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1511, 620, 621, 449, 1139, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 1138, 382, 622, 623, 0, 624, 0, 384, 385,
	1140, 625, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 1143, 400, 401, 1144, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 0, 0, 1147, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1148, 459, 1149,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1150, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1473, 0,
	1273, 1272, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1441, 0, 1273, 1272, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 1135, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 1278,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1136, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 1137, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1440, 620, 621, 449, 1139, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 1138, 382, 622, 623, 0, 624, 0, 384, 385,
	1140, 625, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 1143, 400, 401, 1144, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 0, 0, 1147, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1148, 459, 1149,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1150, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1267, 0,
	1273, 1272, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	1135, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1266, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1273, 1272, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 1135, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 1278, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1136, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 1137, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 1139, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 1138,
	382, 622, 623, 0, 624, 0, 384, 385, 1140, 625,
	1141, 386, 387, 388, 1142, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 1143, 400, 401, 1144, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1145, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1146, 436,
	0, 0, 1147, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1148, 459, 1149, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1150, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 1151,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 1273, 1961, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 1135, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	1278, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 2001, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 1138, 382, 622, 623, 0, 624, 0, 384,
	385, 1140, 625, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 0, 0, 1147, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 1273,
	1272, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 1135,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 1278, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1136, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 1137,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1139, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 1138, 382, 622, 623, 0,
	624, 0, 384, 385, 1140, 625, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 1143, 400,
	401, 1144, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 0, 0, 1147, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1148, 459, 1149, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1150, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 1273, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 1135, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 1278, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 1138, 382, 622, 623, 0, 624, 0,
	384, 385, 1140, 625, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 0, 0, 1147, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 257, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 2687, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 2684, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	2691, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 2883, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 2690, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 2880, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 2882,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 2879, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 2689, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 2881, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 257, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 2687, 290, 291, 608, 0, 0, 2681, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 2684, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 2691, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 2690, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 2680, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 2689, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 2688, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 1660, 0, 257, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 262, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 1663, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 1661, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 1662, 591, 593,
	649, 1419, 0, 257, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 1421, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 262, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 1185, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 1416, 0, 257, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 1418, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 262, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 1185, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 1324, 0, 257, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 1326, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 262, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 1185, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 682, 0, 257, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 681,
	268, 269, 270, 671, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 674, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 675, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 0, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	676, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 670, 0, 257, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 671, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 674, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 675, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 676, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 257, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 262,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 1185, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 257,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 3286, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 2829, 0, 257, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 2828,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 2204, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 257, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 262, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 2149, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	2155, 0, 257, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 2154, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	262, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 2142, 0, 257, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 2144, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 262, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 257, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	2113, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 1185, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1515, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 262, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1436, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1429, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1431, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 262, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1257, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1256, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1247, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1246, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 262, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1244, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1243, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1239, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1238, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 262, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 652, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 248, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 262, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 257, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 262, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 257, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 674, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 675,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 676, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 2240,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 257, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 2238, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	262, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	257, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 2236, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 262, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 257, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 2161, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 262, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 257, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 1980, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 262, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 1974,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 848, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 847, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 846, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 257, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 2883,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	3956, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 257, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 3624, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	3625, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 3627, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 3623, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 739, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	1294, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 1292, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 740, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 736, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 1295, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 735, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 739, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 1294, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 1292, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 740, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 736, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 1295, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 735, 641, 642, 643, 0, 577, 0,
	569, 1293, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 661, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 660, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 659, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 257, 2870, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 257, 3966, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 3868,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 257, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 3663, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	257, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 2573, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 257, 2870, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 2867,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 257, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 2214, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 2202, 0, 257, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 739,
	0, 257, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 729, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 740, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 736, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 1548, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 735,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1521, 0, 257, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 1520, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 1506,
	0, 257, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 1504, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1500, 0, 257, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 1477,
	0, 257, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 1475, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1438, 0, 257, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 1424,
	0, 257, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1262, 0, 257, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 1261, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 1253,
	0, 257, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 1252, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 257,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 1206, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 257, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 745, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	739, 0, 257, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 729, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 727, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 728, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 740, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	730, 514, 0, 515, 516, 522, 523, 517, 518, 736,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 731,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	735, 641, 642, 643, 0, 577, 0, 569, 733, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 721, 0, 257, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	722, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	684, 0, 257, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 678, 0, 257, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	656, 0, 257, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	257, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 257, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 3374, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 0, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 257, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 3322, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 3257,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 257, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 3255, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	257, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 3240, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 257, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 2838, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 0, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 257, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 722,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 2178,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 0, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 257, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 1224, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	257, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 1158, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 257, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 0, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 0, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 0,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 0,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 0, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 1738, 0, 0, 0, 0,
	1707, 1708, 1710, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 1709, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 1733,
	1734, 1735, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 1754, 1747, 0, 0, 1757, 0, 0, 1724, 1725,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1743, 1738, 0, 0, 0, 0,
	1707, 1708, 1710, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1748, 1756, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 1709, 0, 1748,
	1756, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733,
	1734, 1735, 4308, 0, 0, 0, 1746, 0, 1715, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733, 1734,
	1735, 4232, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 1754, 1747, 0, 0, 1757, 0, 0, 1724, 1725,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1743, 1738, 0, 0, 0, 0,
	1707, 1708, 1710, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1748, 1756, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 1709, 0, 1748,
	1756, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733,
	1734, 1735, 4198, 0, 0, 0, 1746, 0, 1715, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733, 1734,
	1735, 4197, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 1754, 1747, 0, 0, 1757, 0, 0, 1724, 1725,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1743, 1738, 0, 0, 0, 0,
	1707, 1708, 1710, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1748, 1756, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 1709, 0, 1748,
	1756, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733,
	1734, 1735, 4034, 0, 0, 0, 1746, 0, 1715, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733, 1734,
	1735, 3892, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 1754, 1747, 0, 0, 1757, 0, 0, 1724, 1725,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1743, 1738, 0, 0, 0, 0,
	1707, 1708, 1710, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1748, 1756, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 1709, 0, 1748,
	1756, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733,
	1734, 1735, 3827, 0, 0, 0, 1746, 0, 1715, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733, 1734,
	1735, 3826, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 1754, 1747, 0, 0, 1757, 0, 0, 1724, 1725,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1743, 1738, 0, 0, 0, 0,
	1707, 1708, 1710, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1748, 1756, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 1709, 0, 1748,
	1756, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733,
	1734, 1735, 3825, 0, 0, 0, 1746, 0, 1715, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733, 1734,
	1735, 3512, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 1754, 1747, 0, 0, 1757, 0, 0, 1724, 1725,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1743, 1738, 0, 0, 0, 0,
	1707, 1708, 1710, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1748, 1756, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 1709, 0, 1748,
	1756, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733,
	1734, 1735, 3031, 0, 0, 0, 1746, 0, 1715, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733, 1734,
	1735, 3030, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 1754, 1747, 0, 0, 1757, 0, 0, 1724, 1725,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1743, 1738, 0, 0, 0, 0,
	1707, 1708, 1710, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1748, 1756, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 1709, 0, 1748,
	1756, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733,
	1734, 1735, 3029, 0, 0, 0, 1746, 0, 1715, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733, 1734,
	1735, 3028, 0, 0, 0, 0, 0, 1715, 4444, 0,
	0, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 1754, 1747, 0, 0, 1757, 0, 0, 1724, 1725,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4443, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1748, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 1748,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0,
	2995, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 3115,
	0, 0, 3114, 0, 0, 0, 0, 1707, 1708, 0,
	1740, 1741, 1742, 1750, 1751, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 1738, 1747, 0, 0, 1757, 2966, 0, 1710, 0,
	0, 1737, 1739, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 0, 1745, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 1732, 1733, 1734, 1735, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 1757, 0, 0, 0, 0, 0, 1737, 1739,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 1754, 0, 0,
	0, 0, 0, 1731, 1724, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2546, 0, 1745, 0, 0, 0, 0, 1707, 1708, 1748,
	1740, 1741, 1742, 1750, 1751, 1752, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 1738, 0, 0, 0, 2545, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 1732, 1733, 1734, 1735, 0, 0,
	0, 0, 0, 0, 1715, 1707, 1708, 0, 1740, 1741,
	1742, 1750, 1751, 1752, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 1738,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 1747,
	0, 0, 1757, 0, 0, 1756, 0, 0, 1737, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 1754, 0, 0,
	0, 1709, 0, 0, 1724, 1725, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 1721, 1722,
	1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712,
	1713, 1714, 1716, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 1733, 1734, 1735, 0, 1744, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 1708, 0,
	1740, 1741, 1742, 1750, 1751, 1752, 0, 1747, 0, 0,
	1757, 0, 0, 0, 0, 0, 1737, 1739, 0, 0,
	1743, 1738, 0, 0, 0, 0, 0, 0, 1710, 0,
	1736, 0, 0, 1753, 0, 1754, 0, 1756, 0, 0,
	0, 0, 1724, 1725, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 1709, 1707, 1708, 0, 1740, 1741, 1742,
	1750, 1751, 1752, 1729, 0, 1730, 1748, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 1743, 1738, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 1744, 1014, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 1732, 1733, 1734, 1735, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 1721, 1722,
	1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712,
	1713, 1714, 1716, 1717, 0, 0, 0, 0, 1736, 1747,
	0, 0, 1757, 0, 0, 0, 0, 0, 1737, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	0, 1732, 1733, 1734, 1735, 1753, 0, 1754, 0, 0,
	0, 1715, 0, 0, 1724, 1725, 3121, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 1707, 1708, 0,
	1740, 1741, 1742, 1750, 1751, 1752, 1747, 1730, 0, 1757,
	0, 0, 0, 0, 0, 1737, 1739, 0, 0, 0,
	1743, 1738, 0, 0, 0, 3116, 0, 0, 1710, 0,
	0, 0, 1753, 0, 1754, 0, 0, 1756, 0, 0,
	0, 1724, 1725, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 1709, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 1729, 1730, 0, 0, 0, 0, 0,
	0, 1746, 1726, 0, 0, 0, 1721, 1722, 1728, 1749,
	1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714,
	1716, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 1732, 1733, 1734, 1735, 0, 0,
	0, 0, 0, 0, 1715, 1707, 1708, 0, 1740, 1741,
	1742, 1750, 1751, 1752, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 1738,
	0, 0, 0, 0, 0, 0, 1710, 1736, 0, 1747,
	0, 0, 1757, 0, 0, 1756, 0, 0, 1737, 1739,
	0, 0, 0, 0, 0, 0, 3493, 1731, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 1754, 0, 0,
	0, 1709, 0, 0, 1724, 1725, 0, 0, 0, 0,
	0, 1729, 0, 1748, 0, 0, 0, 0, 0, 0,
	1726, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 1721, 1722,
	1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712,
	1713, 1714, 1716, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 1733, 1734, 1735, 0, 1744, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749, 1727,
	1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716,
	1717, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	1757, 0, 0, 0, 0, 0, 1737, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 1753, 0, 1754, 0, 0, 0, 0,
	0, 0, 1724, 1725, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 0, 0, 0, 1730, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 1738, 0, 0, 0,
	3032, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 3083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 1721, 1722,
	1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712,
	1713, 1714, 1716, 1717, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 1731, 1732,
	1733, 1734, 1735, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 1743, 1738, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 1748, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 1757, 0, 0,
	0, 0, 0, 1737, 1739, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1729, 0, 0, 0, 0,
	1753, 0, 1754, 0, 1726, 0, 0, 0, 0, 1724,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749,
	1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714,
	1716, 1717, 0, 0, 0, 0, 1732, 1733, 1734, 1735,
	0, 0, 0, 0, 1755, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 1757, 0, 0, 0, 0, 0,
	1737, 1739, 0, 0, 0, 0, 1707, 1708, 0, 1740,
	1741, 1742, 1750, 1751, 1752, 0, 0, 1753, 0, 1754,
	0, 0, 0, 0, 0, 0, 1724, 1725, 0, 0,
	1738, 0, 0, 0, 0, 1736, 0, 1710, 0, 0,
	0, 0, 0, 0, 1745, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 1729, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 1733, 1734, 1735, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 1746, 0,
	0, 0, 1736, 1721, 1722, 1728, 1749, 1727, 1723, 0,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 1747, 0,
	0, 1757, 0, 0, 0, 0, 0, 1737, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 1753, 0, 1754, 0, 0, 0,
	0, 0, 0, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1730, 0, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 1755, 0,
	0, 0, 0, 0, 0, 1746, 0, 1729, 0, 0,
	1721, 1722, 1728, 1749, 1727, 1723, 1726, 1720, 1718, 1719,
	1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0, 906,
	0, 951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 928, 0, 912, 911, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 1733,
	1734, 1735, 0, 0, 0, 0, 0, 0, 1715, 1731,
	0, 0, 913, 0, 0, 0, 0, 916, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 0,
	0, 925, 926, 0, 0, 1748, 0, 0, 0, 0,
	942, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 952, 918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 1725,
	0, 0, 0, 919, 0, 0, 0, 0, 0, 0,
	0, 0, 950, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 921, 0, 1721, 1722, 1728,
	1749, 1727, 1723, 910, 1720, 1718, 1719, 1711, 1712, 1713,
	1714, 1716, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 922, 923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	930, 929, 0, 0, 0, 0, 0, 0, 924, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	956, 949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 917, 0, 0, 958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 915, 0,
	0, 0, 946, 947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 944, 0, 0, 0,
	0, 0, 0, 957, 940, 0, 933, 931, 0, 936,
	0, 0, 0, 0, 0, 937, 0, 1746, 908, 0,
	954, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0,
	0, 909, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 938, 0, 0, 0, 0, 935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 941, 0, 0,
	0, 0, 0, 0, 0, 0, 920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 945,
}
var sqlPact = [...]int{

	5372, -1000, -1000, -1000, -1000, 227, -1000, -1000, 226, 225,
	223, 221, 219, 210, 205, 198, 196, 195, 194, -1000,
	-1000, -1000, -1000, -1000, -1000, 190, -1000, -1000, 188, -1000,
	186, 184, 182, -1000, -1000, 179, -1000, 178, -1000, -1000,
	-1000, -1000, 176, 175, 173, 85326, 84791, 85854, 2224, 105538,
	92746, 2100, 76259, 105003, 75724, 104468, 2072, 7987, 103933, 2655,
	172, -1000, 103398, 169, 168, 166, -1000, 102863, -1000, 2000,
	-1000, 165, 4502, 61266, 164, 161, 160, 2602, 159, -1000,
	157, 156, 153, -1000, 8744, 1538, -1000, 149, 145, -1000,
	2115, 90085, 143, 142, 2480, 141, 138, 60731, 135, 134,
	2354, 2817, -1000, -1000, 1957, -1000, -1000, 133, 132, 131,
	130, 124, 119, 118, 117, 113, 111, 109, -1000, 108,
	106, 100, 97, 95, -1000, 94, 93, 90, -1000, 88,
	84, 82, 78, 77, 76, 75, 72, 71, 70, 69,
	68, 67, 64, -1000, 117837, -1000, 1916, 1676, 1675, 1674,
	1673, 1669, 1008, 63, 62, 60, 58, 55, 51, 49,
	47, 46, -1000, 44, 43, 42, 40, 36, 34, 31,
	30, 155, 28, 25, 24, 20, 19, 18, 15, 2882,
	-1000, 1695, 1079, 28000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 111346, 106066, 14, -90,
	13, -1000, 3244, 1035, 50534, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 296, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 492, 1976, 794, -1000, -1000, -1000, 102335,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2222, -59,
	-1000, 1963, -1000, -1000, -1000, -1000, -1000, 793, -1000, 2221,
	121, 2169, -1000, -1000, -1000, 3287, 2369, 3749, 3747, 3746,
	3744, 3743, 110818, 1781, 3740, 2437, 3736, 3735, 3733, 3731,
	3730, 3729, 3726, -1000, 84256, 1071, 83721, 83186, 3301, 101807,
	82651, 101272, 69856, 42776, 1076, 3286, -1000, -1000, -1000, -1000,
	-1000, -1000, 106066, -1000, 1070, -1000, -1000, 3725, 3724, 2025,
	791, 92211, -1000, 1884, -1000, 954, 29680, -1000, 1295, -1000,
	29680, 294, -1000, -1000, -1000, -1000, -1000, -1000, 3723, 3722,
	3720, 3719, 3717, -1000, -1000, 75189, 21228, 74654, 74119, 100737,
	20683, 82116, 81581, 100202, 69311, 1067, 1421, -1000, -1000, -1000,
	-1000, -1000, -1000, -42, 67131, 3459, 106066, -1000, 286, -1000,
	-1000, -1000, -1000, -1000, -1000, 42204, 860, 41632, 730, 41060,
	726, -1000, -1000, -1000, -1000, 68766, -1000, 99667, 2361, 3712,
	3711, 1137, 3710, 3156, 1765, 3707, 1806, 1267, 3706, 3703,
	3701, 3700, 3698, 3696, 3695, 1450, 99132, 2879, 98597, 1646,
	68221, 1065, 81046, 85854, 2570, 98062, 1417, 1410, -1000, -1000,
	-1000, -1000, 3003, 2814, 2793, 1135, -1000, -1000, -1000, -1000,
	53203, 6240, 6104, 9285, 97527, 55407, 85854, 85854, -1000, -1000,
	-1000, -1000, -1000, 40488, 709, 39916, 1031, -1000, -1000, 53754,
	2831, -1000, -1000, -1000, -1000, 39344, 323, 38772, 1013, 106066,
	-1000, 2876, 1984, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2080, 1613,
	3497, 2665, 67676, 1998, 1416, 3247, 2981, 2972, 1541, 3693,
	3687, 2512, 2956, 2946, 2945, 2944, 2943, 1497, 2520, 506,
	27428, 2862, 1660, 38200, 1525, 1574, 2940, 2938, 3527, 1931,
	1970, 1962, 73584, 3679, 3669, 3185, 2935, 2931, 2928, -1000,
	2826, -1000, -1000, -1000, -1000, 1484, -1000, -1000, -1000, -1000,
	76787, -1000, -1000, 1310, -1000, -1000, 1310, -1000, -1000, -1000,
	-1000, -1000, 1366, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1695, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2153, -1000, 2015, -1000, -1000,
	2473, 3182, 3182, 3182, 3284, 469, 440, -1000, 155, -1000,
	-1000, 117268, -1000, -1000, 43336, 43336, 43336, 43336, 43336, 43336,
	43336, 2131, -1000, 786, -1000, -1000, 825, -1000, 782, 620,
	-1000, -1000, -1000, -1000, -1000, -1000, 781, -1000, -1000, -1000,
	-1000, -1000, -1000, 3459, -1000, 24008, -1000, -1000, -1000, 463,
	780, 43336, -1000, -1000, 3566, 3564, 899, -1000, 278, 961,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2874, 779, 778, -1000, 774, 773, 770, 768,
	766, -1000, -1000, -1000, 765, 762, 761, 760, 759, 756,
	754, 753, -1000, 1986, -1000, -1000, -1000, -1000, -1000, -1000,
	694, 686, 686, 686, -1000, 1061, -1000, -1000, -1000, 332,
	683, 315, 676, 674, 672, -1000, 752, 750, 744, 736,
	734, 733, 732, 731, 729, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1056, -1000, -1000, -1000, -1000, -43, 106066, -1000,
	492, -43, -1000, -1000, 722, -1000, 31932, 31932, 31932, -1000,
	-1000, 2220, 43336, -1000, 2951, -1000, 0, 0, 907, 52133,
	-1000, 49464, 907, 712, 838, 57008, -1000, 2819, -1000, -1000,
	721, 277, -1000, -1000, -1000, -1000, 21771, 2810, 106066, 106066,
	85854, 85854, 85854, 2947, 43336, -1000, -1000, 64982, 106066, 86382,
	-1000, -1000, 3400, 61794, 64454, 106066, 2872, 63926, 3668, -1000,
	-1000, -1000, -1000, -1000, 3052, 3666, 3665, 3663, -1000, 106066,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 201, 3051, -1000,
	-1000, 89550, 201, 3050, -1000, 201, 3049, -1000, 89022, -1000,
	-1000, 2152, 3048, -1000, -1000, 215, 3047, -1000, -1000, -1000,
	211, 3046, -1000, -1000, 276, -189, 3044, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 117268,
	-1000, -1000, -1000, 63391, -1000, 3216, -1000, -1000, 106066, -1000,
	43336, -1000, 3397, 1768, 70932, 3339, -84, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2418, 2453, 1235, 2251, -1000, 3089,
	1659, -1000, 29680, 3145, -1000, -1000, -1000, 270, 21771, -1000,
	-1000, -1000, -1000, -1000, -1000, 4587, 3043, 1488, -1000, 2246,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1804, 3041, -1000,
	3613, 3040, 1762, -1000, -1000, 2271, -1000, 3176, -1000, -1000,
	1861, 3034, 1, -1000, -1000, 2409, -1000, 1950, -1000, 1024,
	3029, -1000, 80511, 54856, 53754, 67131, -52, -1000, -1000, -1000,
	-1000, -303, -1000, 20138, 117268, -1000, -1000, -1000, -1000, 1677,
	117268, 902, -1000, -1000, 3027, -1000, 117268, 897, -1000, -1000,
	3025, -1000, 2868, -1000, -1000, 2321, -1000, -1000, 3662, -1000,
	-1000, 3661, -1000, 3660, 3659, 3658, -1000, 1702, 1966, 3657,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 79983, 2212,
	-1000, -1000, 78913, -1000, 2320, 3338, -1000, 79448, 1064, -1000,
	1024, 2316, -1000, 88494, 923, -1000, 3656, 3277, 2626, 1024,
	2313, -1000, -1000, -1000, -1000, -1000, 1041, -1000, 58602, -1000,
	58602, -1000, 1558, -1000, 110290, 0, 85854, 3459, -1000, -4,
	-1000, -1000, -1000, 1035, -1000, 52668, -1000, 52668, 91676, 70399,
	973, 772, 60196, 117268, -1000, -1000, -1000, -1000, 117268, -1000,
	-1000, -1000, -279, -1000, -1000, 70399, 53754, 117268, -1000, -1000,
	-1000, -1000, 117268, -1000, -1000, -1000, 70399, 78913, -1000, 96992,
	78385, -1000, -1000, 1440, 2484, -1000, -1000, -1000, 70399, 1324,
	70399, 70399, 70399, -1000, 96457, -1000, -1000, 2001, 1493, 3178,
	1982, 85854, -1000, 1807, -1000, -1000, -1000, 3234, -1000, -1000,
	2866, -1000, 62856, 87966, -1000, 87438, -1000, 86910, -1000, 85854,
	-1000, 85854, -1000, 3655, 3654, 3653, 3652, -1000, 3651, 3228,
	-1000, 117268, 3221, -1000, 3649, 3328, 2862, 117268, -1000, 2933,
	1680, 1678, 106066, -1000, -1000, 106066, -1000, 106066, -1000, -1000,
	-1000, 1515, -1000, -1000, 2417, -1000, -1000, -1000, -1000, 85854,
	-1000, -1000, -1000, -1000, -1000, -1000, 2852, -1000, 1709, -1000,
	1785, -1000, 3146, -1000, 1427, -1000, -1000, 228, -1000, -1000,
	-84, -1000, 109762, -1000, 2473, -1000, 106066, -1000, 2433, 2840,
	2850, 1713, 2234, 2518, -1000, 37628, 2472, 46696, 2245, 155,
	-1000, -1000, 155, 155, 29120, -1000, -1000, 61794, 61794, 21771,
	1396, 43336, 43336, 43336, 43336, 43336, 43336, 43336, 43336, 43336,
	43336, 43336, 43336, 43336, 43336, 43336, 43336, 43336, 43336, 43336,
	43336, 43336, 43336, 43336, 43336, 43336, 43336, 43336, 43336, 43336,
	43336, 43336, 43336, 43336, 43336, 43336, 2189, 43336, 1361, 43336,
	43336, 43336, 43336, 1955, -1000, -1000, 1905, 538, 1978, -1000,
	3478, 3478, 3478, 1404, 1404, 117485, 117485, 616, 3648, 825,
	-1000, 43336, -1000, 150, 43336, 22316, -1000, 440, 8548, 2398,
	-1000, 439, 22888, -1000, -1000, -1000, 24008, 620, 37056, 43336,
	1048, 117268, -1000, -1000, 1573, 3479, 19594, 2887, 2702, 715,
	787, 727, 26856, 26284, 25712, 25140, 659, 43336, 43336, 43336,
	43336, 43336, 43336, 43336, 43336, -1000, -1000, 3503, -1000, 3479,
	-1000, -1000, -1000, -1000, 3479, 1390, 1382, 3479, -1000, 3479,
	3479, 8484, 8484, 36496, 35924, 35352, 47256, 34780, 43336, 24568,
	34208, 33636, -1000, 106066, -43, 3396, 43336, 112, -1000, 116076,
	-1000, 112, 112, 714, -7, 117268, 2606, 2606, 51067, 2069,
	2141, 2141, 2141, -1000, 907, 15213, 907, 95396, 2148, 907,
	907, 267, 293, 436, 48931, 2951, 95396, 804, 710, 11,
	10, 6, -1000, -1000, 5, -35, -1000, -1000, 85854, 707,
	22316, 21771, 257, 1478, -12, 2552, 2550, 2542, -1000, 2517,
	1708, -15, 1360, 85854, 106066, -221, -1000, 5000, -17, -1000,
	1341, 247, 3479, -1000, -1000, -1000, -1000, -1000, 3647, 3646,
	-1000, 1054, 703, 702, 859, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 694, 686, 686, 686, -1000, 332, 683,
	315, 676, 674, 672, -1000, -1000, -1000, -1000, -1000, 2807,
	85854, 106066, -303, 86382, -66, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 106066, -1000, -1000, -1000, 3645, -1000, 85854,
	-1000, -1000, 85854, 201, 3024, -1000, 85854, -1000, 85854, 200,
	3009, -1000, -1000, 106066, -1000, 85854, 85854, -1000, 106066, 106066,
	106066, 70399, 70399, 216, -1000, 85854, 926, -18, 1141, -84,
	-1000, -1000, -1000, 1310, -1000, 1805, -1000, -1000, -1000, -1000,
	-1000, -1000, 1460, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 899, -1000, -1000, -1000, -1000, -1000, -1000, 3516, 3505,
	-50, -1000, -1000, 21771, -1000, -85, 1706, 2140, -1000, 73049,
	2405, 3227, 3644, 2607, 3164, 1547, -1000, 1509, 1359, 3279,
	76787, 3353, 3373, 846, -1000, 2804, -1000, -1000, 953, 1704,
	1663, 1358, 76787, 3613, -1000, 61794, -1000, 2555, 3275, 1426,
	1391, 1426, 1426, 1434, -1000, 76787, 1649, 1357, 1355, 1890,
	1886, -1000, -1000, 1354, 1352, 2281, -1000, -108, 3334, 3372,
	789, -1000, 2798, 1321, -1000, -1000, 85854, 21771, 1571, 1564,
	1647, 1311, -51, -1000, 3349, 3348, 1306, 1303, -1000, 4556,
	-1000, 70399, 1716, 3007, 2664, 863, 2662, -1000, -1000, 863,
	-52, 67131, 106066, 244, -1000, 150, 43336, 43336, 150, 43336,
	150, 3325, 3005, -1000, -1000, -1000, -1000, -1000, 3643, 1918,
	2436, -1000, -1000, 671, 2312, 2797, 106066, 2561, -53, 85854,
	-1000, 3001, 65517, 3613, 2311, -1000, -1000, 77850, -1000, 2998,
	492, 2310, -1000, 673, 3642, -1000, 109234, -1000, 3216, 1384,
	2995, 1106, 832, 3394, -1000, 832, 59130, -1000, 106066, -1000,
	0, 245, 71993, -20, -31, 433, -1000, 95929, 106066, 1105,
	72521, 106066, 3134, 1021, 53754, -1000, -36, -279, 2660, 973,
	973, 863, -1000, 863, -1000, 85854, 2845, -1000, -1000, 70399,
	973, 973, 973, -1000, -1000, -1000, -1000, 3641, 3640, 3638,
	-1000, -1000, -1000, 1023, 85854, 106066, 85854, -1000, -1000, 106066,
	-1000, 106066, 106066, 85854, -1000, 1023, 106066, 1023, 106066, 1023,
	106066, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 150, 43336,
	-1000, -1000, 3636, 1578, -1000, 2844, -1000, 2841, -1000, 23,
	-1000, -1000, -1000, -1000, -1000, 1996, 85854, 85854, 85854, 85854,
	106066, -1000, 106066, 85854, -1000, 76787, -1000, 2433, 2840, -1000,
	-1000, -1000, -1000, -1000, -1000, 1648, 2174, -1000, 2486, -1000,
	1534, -1000, -1000, -1000, 117268, 47816, -1000, -1000, 117268, 1803,
	-1000, 46136, 45576, -1000, -1000, 1686, 85854, 2569, -1000, 2569,
	-274, -1000, 115816, 2482, 85854, -1000, -1000, -1000, -1000, -1000,
	952, 1305, 1305, 1278, 1278, 1278, 1278, 3355, 455, 589,
	437, 5811, 5811, 359, 359, 359, 359, 359, 5811, 384,
	1404, 1404, 384, 384, 384, 384, 384, 1404, 1404, 1404,
	5811, 5811, 5811, 117485, 7159, 8177, 43336, 43336, 1302, 1904,
	538, 7986, 43336, 5086, 5086, 5086, 5086, -1000, 1987, -1000,
	-1000, -1000, -1000, 2780, 668, 47256, 47256, -1000, -1000, -1000,
	-1000, 23448, 43336, -1000, -1000, -1000, -1000, 33064, -1000, -1000,
	115210, -321, 424, -273, -70, -1000, 43336, 43336, 43336, 423,
	-1000, 242, 43336, 106066, -1000, 14609, 801, -148, -1000, -41,
	1446, -1000, 43336, -1000, -1000, 1300, -1000, 1299, 1296, 1290,
	-1000, 664, 421, -1000, 237, -1000, 2138, 658, 656, 43336,
	-1000, -1000, -1000, -1000, -1000, 114839, -1000, -1000, 114810, -1000,
	-1000, 114439, -1000, -1000, 114410, -1000, -1000, -1000, 117121, 14553,
	13987, 13898, 7881, 13179, 13002, -54, 420, -57, 419, 951,
	944, 415, 413, 408, -60, -1000, 3635, 3634, 3632, -1000,
	3631, 3630, 3629, -1000, 3628, 3626, 3625, -1000, 3624, 3622,
	3621, -1000, 3619, 3618, 3614, -1000, 3611, 3610, 3609, -1000,
	3607, 3604, 3603, -1000, 3602, 3601, 3599, -71, 405, -1000,
	2772, -273, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	404, -1000, 403, -1000, 116864, -273, 402, 6175, -1000, 47256,
	47256, 47256, -1000, 401, -1000, 115639, -1000, 116696, 32504, 32504,
	32504, 396, 116503, 43336, -273, -72, -1000, -74, -1000, -1000,
	575, -83, 1040, 31932, 49999, 21771, -1000, 1040, 1040, 43336,
	-1000, 43336, 2510, -1000, -1000, -1000, -1000, 2494, 2089, 2606,
	51067, -1000, -1000, -1000, -1000, 95396, -1000, 3459, 2737, -1000,
	95396, -1000, -1000, 106066, 492, -1000, 95396, 95396, 21771, 907,
	-1000, 907, 95396, 665, -1000, -1000, -1000, -1000, -1000, 395,
	55940, -70, 234, 21771, 1024, -1000, 2596, 2596, 2596, 2596,
	-1000, -1000, 106066, 1285, -69, -186, 3435, -1000, 1988, -1000,
	61794, -1000, 824, 1095, 21771, -1000, -1000, -1000, 651, -1000,
	3479, 3479, -1000, 3479, 106066, 2771, 99, 96, 65517, 65517,
	3597, -1000, -1000, 201, -1000, 85854, 201, 201, -1000, 85854,
	85854, 2152, -1000, 215, -1000, 211, -1000, -1000, -189, -1000,
	1034, 29680, -1000, 1310, -1000, -1000, 1576, -1000, 1956, -1000,
	1373, -1000, -1000, -1000, -1000, 29680, -1000, 3033, 106066, 106066,
	85854, -1000, 106066, -1000, 2027, 3432, 1863, 2415, 2414, -1000,
	2307, 108706, 2298, 61794, 106066, -1000, -1000, 646, 959, 2478,
	2460, 1099, 106066, 106066, 2459, 108178, 107650, -1000, 3596, 106066,
	1981, 43336, 65517, 2182, 2111, 150, 150, -1000, -1000, 150,
	642, 1277, 85854, 85854, 106066, 85854, 1672, -1000, -1000, -1000,
	-1000, -1000, 77315, -1000, -1000, 3500, 3489, -1000, 1426, -1000,
	-1000, -1000, 1426, 3613, 1642, 106066, 85854, 65517, 106066, 106066,
	1622, 106066, 2903, 905, -1000, 2019, 150, 150, -1000, -1000,
	150, 641, 21771, 1915, -1000, 2901, 106066, 3563, 106066, 106066,
	106066, 65517, 3195, 107122, 106066, 106066, 65517, 4556, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 66603,
	1112, 1024, 1618, 1281, 76787, 53754, 1018, 53754, 2634, -1000,
	-1000, 19050, -1000, 117268, 117268, -1000, 117268, -1000, 62328, 106066,
	-1000, 1063, 106066, 72521, 1007, 2991, 58074, -303, 973, 70399,
	85854, -53, 106066, -1000, -1000, 3613, 2990, 492, 2305, -1000,
	70399, 3392, 2989, 640, 3595, 3594, -1000, 2211, 2303, -1000,
	-1000, 106594, 3066, 865, 106066, 1040, 51067, 1865, -1000, 56475,
	1083, 106066, 1777, 87, -1000, -1000, -1000, 17, 106066, -1000,
	837, -1000, -1000, 245, 245, 973, -316, 633, -1000, 931,
	930, 54305, 70399, -89, -1000, -1000, -1000, -1000, 2298, 85854,
	106066, 1331, 2619, 106066, -94, -1000, 233, 625, -1000, 2785,
	-1000, -1000, 1021, 53754, 2770, -1000, -1000, 1033, -1000, 1409,
	973, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -2, -303, -303, -67, -69, -1000, 1023, -1000, 1023,
	-1000, 1023, -1000, 117268, -1000, -1000, 1577, 1565, 106066, -1000,
	21771, 106066, 85854, 21771, 85854, 2839, 2838, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1119, -1000, 1803, 2173,
	-1000, 620, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2391, -1000, -77, 29120, 866, -1000, -1000, 85854, -5,
	43336, 43336, 7034, 6056, 43336, 47256, 47256, -1000, 43336, 4669,
	-1000, -1000, -1000, -1000, -1000, 2769, 612, 43336, 61794, 6107,
	5924, -1000, 389, 12585, 384, -1000, 43336, -1000, 388, 31372,
	-1000, 116244, -80, -96, -1000, 15770, -273, -99, -1000, -1000,
	823, -1000, 3060, -1000, 43336, 116436, 2353, 2084, 1724, 1580,
	3479, 3562, 18506, -1000, 59663, 1045, 2158, 114039, -1000, -1000,
	-1000, -1000, 61794, 61794, 43336, 43336, -1000, 43336, 43336, 43336,
	-1000, -1000, -1000, 3479, 946, -1000, -1000, -1000, 946, -1000,
	-1000, 1426, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1426, -1000, 43336,
	-1000, -1000, 2761, 43336, -1000, 61794, 61794, 47256, 47256, 47256,
	47256, 47256, 47256, 47256, 47256, 47256, 47256, 47256, 47256, 47256,
	47256, 47256, 47256, 47256, 47256, 47256, 2442, 47256, 3474, 3474,
	3474, -1000, 2740, 2761, 43336, 43336, 61794, 387, 381, 380,
	-1000, 43336, -273, -1000, -1000, 245, 610, -1000, 2376, -1000,
	2701, -1000, 43336, -1000, -265, -1000, 2951, -1000, -1000, 2701,
	2701, -101, 117268, 51067, 51067, -1000, 606, 43336, 2447, -1000,
	-1000, 798, -319, -1000, 928, -1000, -1000, -1000, -1000, -1000,
	492, -1000, -1000, -1000, 232, 95396, 95396, 797, -1000, -102,
	-1000, -1000, -107, -1000, 3390, 369, 21771, -1000, 1040, 3169,
	-1000, -1000, -1000, -1000, -1000, -1000, -303, 106066, 106066, 2166,
	3560, -1000, 3487, 821, 788, 229, 3479, 368, 361, 360,
	-303, 106066, 106066, 106066, -1000, -1000, -1000, -1000, 201, -1000,
	-1000, -1000, 200, -1000, -1000, -1000, -1000, 2533, -1000, -84,
	-1000, -1000, -1000, 43336, -1000, -1000, 3226, 1215, 1211, -1000,
	-1000, -1000, -1000, 3273, 91141, 3426, 1855, 1844, 2987, -1000,
	2293, -1000, 1091, -1000, 1850, -1000, 43336, 603, 2612, 601,
	600, 3593, 1889, 3592, 1102, 2983, 2152, 2980, 2152, -1000,
	-1000, -1000, 948, -1000, 117268, -1000, 594, 593, -1000, -85,
	1612, 2110, 1029, -1000, -1000, 43336, 43336, 94868, -1000, 390,
	3176, -33, -1000, -1000, 1611, 1204, -1000, -1000, -1000, -1000,
	3613, 1609, 1198, -1000, -1000, -1000, -1000, -1000, -1000, 1028,
	-1000, -1000, 2898, -1000, 1025, -1000, -1000, 43336, -1000, -108,
	1197, 3330, 2291, 85854, 1194, -1000, 1191, -1000, -1000, -1000,
	3344, 2152, 2979, 1338, -1000, -1000, -1000, -1000, -1000, 66060,
	-1000, 106066, 85854, 1543, 863, -1000, 2266, 863, 1018, 2758,
	-1000, 2556, -1000, 85854, 3591, 357, -117, -113, 61794, 3386,
	-1000, 2231, 604, 85854, 937, -1000, 3459, -1000, -1000, -1000,
	-1000, 3333, 85854, 3383, 2973, 1024, 150, 85854, 3559, -1000,
	-1000, 85854, 2968, 2206, 2287, 2429, 865, 71465, -1000, 1024,
	2154, -179, -1000, 1777, 30800, 3174, -118, -1000, -1000, -1000,
	1040, 59130, 51067, 43336, 3590, -119, -1000, -1000, -1000, -1000,
	-1000, 93279, 93279, 70399, 70399, 70399, 973, 106066, 106066, 72521,
	-1000, -1000, 588, 106066, 106066, 587, -1000, 106066, 106066, 3588,
	70399, -114, 586, -1000, 925, 921, 920, -1000, -1000, -1000,
	-1000, -1000, -1000, -279, 150, -1000, 2163, 85854, -1000, 17962,
	-1000, -1000, -1000, -1000, -1000, 1023, -1000, -1000, 2031, 2243,
	2031, 1766, 1743, -1000, 2172, -1000, -1000, -1000, -1000, 2524,
	3177, 21771, 3332, 5086, 43336, 43336, 972, 5868, 5136, 5086,
	43336, 43336, 61794, 117730, -120, 43336, 43336, -1000, 43336, 728,
	117268, 3553, 43336, 356, 355, -1000, -1000, -1000, 3472, -1000,
	-1000, -1000, 117268, 43336, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 344, -1000, 202, -1000, -1000, -1000, 111874, -1000, 43336,
	336, 3270, -1000, 334, 333, 9564, 272, 114010, 113639, 113610,
	330, -1000, -1000, 329, 328, 117268, 2740, 117268, -1000, -1000,
	1089, 1089, 1376, 1376, 1376, 1376, 3474, 1507, 636, 1260,
	566, 566, 566, 898, 960, 960, 566, 566, 566, 2756,
	2448, 573, 7063, -1000, -1000, 117268, 117268, 321, -1000, -1000,
	-1000, -273, 320, 245, -1000, 2697, 3267, 117268, -1000, 51067,
	2697, 2697, -1000, -1000, 2089, 106066, 117268, 51067, -1000, 2737,
	-1000, 16325, -1000, 21771, -1000, -1000, -1000, -1000, 3459, -1000,
	55940, -1000, 565, -1000, 151, -1000, 3169, -1000, 915, -1000,
	-303, -303, -1000, -1000, 666, 3587, 816, 21771, 319, -1000,
	-1000, -1000, -303, -303, -303, -1000, -1000, -1000, 3131, 117268,
	106066, 106066, 1500, 94340, 1728, -1000, -1000, 2413, -1000, 3423,
	3419, 106066, 2961, -1000, 4432, -1000, 1099, 113239, 51600, -1000,
	51600, 106066, -1000, -1000, 2018, 2491, 1131, -1000, 3236, 106066,
	-1000, 106066, -1000, -1000, 106066, 106066, 85854, 106066, -1000, 2918,
	-137, 117268, -131, -1000, 912, -1000, 1395, -1000, 17418, 106066,
	85854, 106066, 85854, 2119, -1000, 2917, -147, 21771, -1000, 3552,
	3529, 2930, 3240, 3528, 106066, -1000, 106066, 85854, 3130, -1000,
	-1000, -1000, -1000, 1590, 1190, 1018, -132, 564, -1000, 893,
	-1000, -1000, 889, 1018, -1000, 70399, 53754, 492, -1000, 2600,
	-1000, 90613, 2241, 150, -1000, 3586, 93812, 563, -1000, 2161,
	-1000, 637, 65517, 3613, 150, 85854, -1000, -1000, 492, 318,
	-138, -1000, 1096, 21771, 85854, 2927, 2416, 865, 71465, -1000,
	1384, 2518, -1000, -176, -1000, 716, 150, 2154, -1000, -179,
	117268, -1000, 887, -1000, -149, -1000, -1000, 316, -1000, 3117,
	3116, -1000, 2711, 51600, 553, 551, 106066, 3114, -1000, -1000,
	-155, 2789, 2789, 70399, 53754, 70399, 1021, -1000, 2399, -1000,
	-1000, -1000, -1000, -1000, 21771, 1700, -1000, 550, 549, -1000,
	-1000, -1000, -1000, 3177, 5086, 5086, 43336, 43336, 43336, 5086,
	117730, -156, -1000, 5086, 5086, -273, -1000, -1000, 116244, -1000,
	-1000, -1000, 117268, -1000, 16874, 2049, -1000, 113210, -1000, 29120,
	-1000, -1000, 43336, 43336, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47256, 2753, 547, 61794, -1000, -1000, 308, 1036,
	43336, 45016, 2951, 1036, 1036, -1000, -158, -1000, -1000, -1000,
	3459, 151, -1000, -1000, 3585, 21771, -1000, 70399, 815, -1000,
	3584, -1000, -1000, -1000, -1000, -1000, 2651, -1000, -1000, -1000,
	2408, -1000, 1183, -1000, -1000, 106066, -1000, 106066, -1000, 21771,
	106066, 2717, 2276, -1000, 959, 2458, 545, 47256, 85854, 882,
	-1000, 3411, 2692, -161, -1000, 106066, 43336, 106066, -163, -164,
	2260, -1000, -1000, 2256, 43336, -1000, 61794, 544, 2152, 2152,
	-166, -169, -1000, -1000, 43336, 1178, 106066, 30240, -1000, 3583,
	3176, -1000, -1000, -1000, -1000, 106066, 43336, 1177, -1000, -1000,
	-1000, 3526, 2152, 21771, -1000, 2152, 2152, 3240, 1130, 106066,
	85854, -1000, 2335, 2335, 70399, 53754, -1000, -189, 1018, 3381,
	2585, 3581, -1000, -1000, -1000, -1000, 2446, -1000, -1000, 106066,
	2444, 974, -1000, -174, -1000, 886, 883, 72521, 1007, 939,
	-1000, -1000, -1000, -1000, 492, 3380, -1000, 3510, 543, 106066,
	2204, 542, 21771, 3170, 865, 71465, -1000, 3066, 1777, -1000,
	2288, 106066, 3162, -1000, 2518, 538, -1000, 973, 535, 534,
	3138, 3138, -183, 51600, 51600, -184, 531, 973, -1000, -190,
	-1000, -1000, -1000, -1000, -199, -1000, 849, 568, -1000, -1000,
	85854, 85854, 43336, 43336, -1000, 5086, 5086, 5086, -1000, 305,
	-1000, -1000, 2154, 3265, -1000, -210, 112839, 112810, 7208, 47256,
	61794, -192, -1000, -1000, 106066, 117268, -231, -1000, 117268, 519,
	512, 452, -1000, -1000, -1000, 590, -1000, -1000, 3579, -1000,
	106066, -1000, 106066, -1000, 2066, -1000, -1000, -1000, 106066, 2282,
	-1000, -1000, 1098, 43336, 7063, 511, 43336, -1000, 3379, -1000,
	2582, 2768, 1995, 51600, -1000, 3177, -1000, 112439, -1000, 1094,
	1887, -1000, -1000, 117268, 3240, 51600, -1000, -1000, 509, 504,
	117268, 503, 881, 2744, -1000, -1000, -1000, -1000, 117268, 502,
	3330, -1000, -1000, -1000, -1000, 2152, 85854, -1000, -1000, -1000,
	-197, -1000, -1000, 1906, 150, 2019, 2649, -1000, 2241, 501,
	-1000, -1000, 2176, 2529, -1000, 93812, 29680, 29680, 304, 3377,
	939, -1000, 3455, -1000, 3374, 150, -1000, 51600, -1000, 85854,
	51600, 2203, 1928, 2403, 71465, -1000, 2429, -1000, -1000, -198,
	106066, 1777, -1000, -1000, 70399, 70399, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1094, -200, -203,
	-1000, 70399, -1000, -1000, 2399, -1000, 106066, -1000, 106066, -1000,
	-1000, -209, -211, -1000, 2090, 43336, 29120, -1000, -1000, 7208,
	-212, -1000, -249, -1000, 3360, 45016, 3578, 3577, 3574, -1000,
	-1000, -1000, -1000, -1000, -1000, 2926, 2688, 112410, 2378, 106066,
	532, -1000, 2752, -1000, -1000, 2585, 498, -1000, -1000, -1000,
	-1000, 866, 106066, 2585, 2685, 85854, 1097, -214, 2031, 2031,
	43336, 28560, 2087, 43336, -1000, -1000, 3240, -1000, 2730, 3502,
	-1000, 1007, -1000, 2070, 106066, -1000, 3229, -1000, 3104, -1000,
	-1000, -1000, 2600, 150, -1000, -1000, 150, -1000, -219, 1096,
	-220, 85854, 1468, 865, -1000, -1000, 865, -1000, 2416, 1040,
	-1000, -1000, -222, -229, 1995, 1094, 970, -230, -1000, -232,
	-235, -1000, -1000, 273, 44456, 44456, 44456, -273, -274, -1000,
	106066, 493, -1000, -1000, -1000, -1000, 2895, 1017, -1000, 2190,
	1849, 98, 1123, -1000, -1000, 2019, 106066, -1000, -1000, -1000,
	1014, 492, -1000, 43336, 1094, -237, -1000, 1082, -238, -1000,
	1080, -243, -1000, 2742, -1000, -244, 2152, 981, 3322, -1000,
	-1000, -1000, 2176, 85854, -246, -1000, -1000, 2286, -1000, 2585,
	974, -1000, 1094, 490, 1995, 483, -1000, -1000, 106066, 1426,
	3170, 3072, 973, 973, 2585, 1995, 1040, 480, 973, -1000,
	-1000, -1000, 2958, -1000, 48376, 2215, 1720, 115239, 2958, 2958,
	-1000, -1000, 106066, 3296, -1000, 2200, 2197, 1505, -1000, -1000,
	-1000, -1000, -1000, -1000, 2692, -252, 3294, 2378, 117268, 2585,
	-1000, 2031, 2640, -1000, 2031, 2734, -1000, 2065, -1000, -1000,
	-1000, 1681, 3465, -1000, 476, -1000, 106066, 1690, 1688, 3572,
	2019, 2176, 1995, 51600, 2585, 51600, -1000, -303, -1000, 1928,
	1326, -1000, -1000, 2019, 2585, -1000, -1000, -1000, 1816, 3407,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 856, -1000,
	3085, -1000, 1115, 2181, 2181, 1040, -1000, 853, 2190, -1000,
	-1000, 474, -1000, 473, -1000, 2155, -1000, -1000, 106066, -1000,
	-1000, 3570, -1000, 1007, -1000, 2585, -254, 2019, -259, 1468,
	-1000, 1546, 970, 2019, 1718, -1000, -1000, 2144, 43896, 43336,
	-1000, 3438, -1000, -1000, 2474, -1000, -1000, 43336, 2692, 43336,
	43336, 57541, -260, -1000, 2176, 2019, 1094, 970, 1995, -1000,
	59130, 1040, 970, -1000, -1000, -1000, 117268, -1000, -1000, -1000,
	117268, -1000, -267, -276, -316, 93279, 2132, -1000, 970, 1995,
	1040, 2585, -277, -1000, 1040, 2019, 1155, -278, -1000, -1000,
	-1000, 1040, 2585, -1000, 2019, -1000, -1000, -1000, 453, -1000,
	-1000, 2019, 970, 43336, 970, 1040, -309, 1040, -1000, 2019,
	-1000, -1000,
}
var sqlPgo = [...]int{

	0, 4417, 4416, 4415, 4414, 4413, 4410, 4408, 4407, 4404,
	4398, 4397, 4395, 4394, 4393, 4392, 4388, 4387, 4385, 4380,
	4379, 4378, 4376, 4371, 4370, 4369, 4368, 4366, 4365, 4363,
	4362, 4359, 4358, 4357, 4355, 4353, 4351, 4348, 4347, 4346,
	4345, 4342, 4340, 4339, 4338, 4337, 4333, 4327, 4323, 4321,
	4319, 4318, 4316, 4311, 4308, 4306, 4305, 4304, 42, 4302,
	4300, 4298, 4294, 4292, 4291, 4288, 4279, 4276, 4275, 4272,
	4271, 4268, 4264, 4258, 4257, 4255, 4254, 4249, 53, 4243,
	245, 4240, 4237, 4235, 4234, 4233, 4229, 4225, 4221, 4220,
	4218, 4215, 4207, 244, 4205, 146, 4204, 4202, 4201, 4200,
	4199, 243, 4193, 4191, 4190, 4189, 256, 4188, 4186, 4185,
	4184, 4183, 4180, 4174, 4173, 4172, 4169, 4168, 72, 180,
	4161, 4157, 321, 4154, 4153, 4152, 4150, 4145, 4144, 4143,
	4136, 4135, 4133, 222, 4126, 242, 4125, 4124, 4121, 4120,
	4118, 4117, 4116, 4115, 4114, 4113, 4109, 4106, 4104, 4103,
	4102, 4100, 4097, 4092, 4090, 4089, 4088, 4087, 4086, 4085,
	4082, 4081, 4079, 4078, 4075, 4073, 4072, 4071, 4070, 4069,
	4065, 254, 170, 4064, 4063, 240, 239, 4061, 4057, 4055,
	4054, 4053, 107, 4, 93, 4051, 4050, 88, 76, 70,
	85, 89, 82, 4047, 95, 4043, 109, 51, 4042, 9,
	12, 153, 211, 10244, 209, 4038, 4032, 4031, 223, 174,
	4029, 210, 4028, 4026, 4015, 4013, 55, 46, 167, 157,
	149, 151, 695, 4010, 137, 86, 64, 52, 36, 15,
	66, 4009, 232, 11, 118, 28, 4008, 4006, 4003, 4002,
	3400, 115, 4001, 238, 213, 145, 4000, 3998, 3997, 226,
	3996, 3995, 39, 3993, 424, 111, 114, 65, 104, 3992,
	125, 29, 3991, 214, 47, 3988, 140, 83, 87, 7945,
	9135, 3987, 138, 59, 158, 247, 203, 155, 176, 71,
	147, 139, 182, 189, 188, 154, 126, 3985, 228, 3984,
	3381, 61, 160, 3981, 3980, 3979, 68, 179, 94, 3976,
	3975, 57, 6, 2, 10, 150, 20, 105, 38, 19,
	3974, 27, 3973, 3972, 3971, 3970, 3969, 32, 148, 3968,
	251, 3966, 62, 49, 142, 3965, 24, 195, 3964, 198,
	113, 3962, 3961, 224, 186, 191, 3956, 43, 206, 3955,
	3953, 3951, 3950, 3949, 108, 1, 112, 3948, 3947, 121,
	3944, 45, 221, 173, 3943, 50, 3942, 3940, 165, 92,
	117, 249, 129, 200, 99, 207, 162, 204, 3939, 3937,
	3936, 175, 3933, 3932, 197, 152, 3931, 3929, 185, 255,
	73, 37, 67, 212, 63, 172, 136, 3928, 183, 3926,
	3921, 252, 161, 190, 3, 18, 84, 110, 3919, 5,
	208, 135, 220, 97, 3916, 5144, 192, 2104, 3914, 3913,
	122, 102, 60, 101, 132, 234, 81, 3912, 3911, 447,
	3910, 3909, 3903, 3902, 163, 3901, 3896, 3895, 133, 171,
	194, 3894, 80, 58, 40, 16, 106, 231, 241, 103,
	201, 156, 227, 3893, 3892, 3891, 177, 3886, 75, 143,
	3885, 178, 219, 3883, 3882, 120, 3881, 124, 1702, 56,
	134, 3879, 196, 3878, 3877, 3876, 3875, 3874, 3873, 3872,
	1652, 205, 3870, 3869, 3866, 31, 169, 3864, 233, 130,
	164, 131, 41, 3863, 77, 2247, 3860, 1645, 96, 48,
	235, 90, 236, 3859, 1570, 100, 3857, 0, 10701, 6286,
	9601, 11066, 3854, 4030, 3853, 3852, 3851, 199, 119, 3850,
	3848, 3846, 91, 3844, 69, 3843, 3840, 54, 3838, 21,
	13, 14, 25, 22, 166, 44, 3837, 3835, 248, 123,
	127, 3834, 246, 202, 3831, 3830, 3828, 3826, 79, 3825,
	33, 3822, 23, 3821, 3818, 34, 7, 26, 3814, 3801,
	217, 3800, 193, 216, 3795, 141, 3794, 3362, 116, 3793,
	3790, 230, 78, 3788, 278, 3786, 3313, 3782, 3781, 17,
	3778, 3772, 215, 159, 187, 3771, 3770, 144, 3769, 3766,
	3763, 274, 3762, 3760, 30, 3759, 8, 3758, 3755, 181,
	3079, 3754, 3753, 35, 3615, 168,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 45, 45,
	9, 9, 9, 9, 9, 9, 9, 9, 33, 29,
	30, 31, 10, 10, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 16, 16, 34, 34, 17, 17, 36,
	36, 18, 18, 37, 37, 561, 561, 21, 39, 22,
	40, 15, 562, 562, 562, 562, 32, 23, 41, 26,
	26, 26, 26, 26, 185, 185, 185, 185, 20, 20,
	35, 35, 219, 219, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 560,
	560, 221, 221, 220, 215, 215, 563, 563, 222, 222,
	222, 224, 224, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 459, 459, 459, 492, 492, 491, 491, 491,
	490, 490, 576, 576, 577, 577, 577, 577, 577, 121,
	121, 357, 357, 357, 47, 47, 47, 47, 47, 555,
	555, 187, 187, 187, 189, 189, 188, 188, 188, 188,
	69, 69, 568, 568, 569, 569, 567, 570, 570, 570,
	186, 186, 186, 117, 117, 117, 117, 118, 118, 119,
	119, 190, 190, 190, 192, 192, 191, 191, 191, 191,
	191, 191, 191, 191, 196, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 97, 97, 494, 494, 495, 495,
	181, 181, 182, 182, 182, 182, 183, 183, 184, 184,
	184, 61, 193, 193, 195, 195, 194, 194, 49, 49,
	49, 49, 49, 49, 49, 50, 50, 50, 50, 50,
	51, 51, 51, 51, 51, 51, 52, 52, 52, 52,
	52, 52, 59, 59, 59, 59, 172, 172, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 66,
	66, 66, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 579, 579, 580, 580, 581, 581, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 75, 75, 319, 319, 289, 289,
	76, 76, 76, 77, 77, 78, 78, 63, 63, 553,
	553, 334, 334, 450, 450, 80, 80, 356, 356, 81,
	81, 81, 81, 81, 81, 82, 82, 82, 82, 82,
	82, 82, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 90, 90, 90, 90,
	90, 91, 91, 91, 88, 88, 88, 85, 85, 85,
	84, 84, 84, 89, 89, 89, 552, 278, 278, 87,
	87, 87, 86, 86, 86, 335, 335, 92, 92, 92,
	92, 290, 93, 93, 93, 93, 93, 93, 93, 93,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 452, 452, 94, 94, 94, 417, 417,
	98, 98, 98, 372, 372, 99, 99, 99, 99, 99,
	100, 100, 100, 100, 100, 100, 120, 120, 120, 120,
	120, 120, 557, 557, 327, 327, 243, 243, 243, 243,
	110, 110, 110, 110, 111, 111, 111, 112, 112, 177,
	177, 127, 127, 127, 127, 127, 126, 126, 126, 126,
	126, 126, 53, 53, 53, 54, 54, 55, 55, 56,
	56, 57, 57, 58, 58, 58, 58, 58, 129, 129,
	573, 573, 131, 128, 128, 128, 130, 130, 130, 130,
	132, 133, 133, 133, 133, 133, 133, 133, 133, 134,
	134, 484, 484, 343, 343, 482, 482, 504, 504, 483,
	483, 294, 294, 294, 294, 294, 295, 295, 295, 493,
	493, 493, 493, 493, 493, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 178, 178, 179, 180, 180, 180, 180, 180, 157,
	157, 157, 171, 171, 171, 171, 171, 171, 171, 160,
	160, 160, 145, 145, 136, 136, 136, 136, 136, 136,
	136, 140, 140, 140, 140, 140, 140, 140, 140, 137,
	137, 147, 147, 147, 147, 147, 141, 141, 142, 142,
	167, 167, 144, 144, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 138, 138, 138, 138, 149, 149, 149,
	149, 379, 379, 379, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 170, 170, 170, 170, 170,
	170, 571, 571, 572, 572, 164, 164, 164, 164, 164,
	164, 431, 431, 158, 158, 158, 158, 163, 163, 163,
	163, 166, 166, 166, 166, 362, 362, 155, 155, 155,
	156, 156, 156, 161, 161, 162, 159, 159, 165, 165,
	165, 165, 139, 139, 139, 583, 583, 583, 168, 168,
	154, 154, 169, 169, 169, 169, 169, 169, 169, 169,
	151, 151, 151, 150, 150, 150, 150, 153, 153, 153,
	152, 143, 554, 554, 550, 550, 550, 550, 550, 550,
	550, 550, 551, 551, 551, 551, 556, 556, 103, 103,
	103, 103, 103, 113, 113, 113, 113, 113, 104, 104,
	104, 104, 104, 106, 106, 105, 105, 105, 105, 70,
	70, 70, 70, 70, 14, 14, 14, 71, 71, 199,
	199, 199, 308, 308, 200, 200, 302, 302, 302, 302,
	197, 197, 198, 198, 72, 72, 584, 584, 584, 564,
	564, 564, 565, 565, 565, 565, 565, 565, 296, 296,
	297, 297, 397, 397, 397, 397, 397, 300, 300, 300,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 303,
	303, 223, 223, 223, 306, 307, 307, 304, 304, 305,
	305, 305, 310, 310, 309, 312, 312, 311, 396, 513,
	513, 515, 515, 515, 515, 515, 515, 515, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 380,
	380, 585, 585, 511, 511, 511, 512, 507, 507, 508,
	508, 508, 508, 508, 298, 298, 299, 299, 299, 299,
	509, 510, 325, 325, 435, 514, 514, 516, 516, 518,
	586, 586, 586, 586, 586, 586, 587, 587, 587, 395,
	395, 394, 394, 317, 317, 519, 519, 519, 519, 520,
	520, 520, 520, 520, 523, 522, 521, 521, 521, 521,
	521, 74, 74, 74, 359, 359, 358, 358, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 174, 174, 246, 246, 68, 68, 68,
	12, 12, 12, 566, 566, 566, 73, 73, 73, 73,
	73, 73, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 559, 559, 558, 558, 247, 247, 589, 589,
	79, 79, 79, 79, 79, 79, 79, 453, 453, 454,
	454, 67, 67, 67, 67, 67, 381, 381, 378, 378,
	377, 377, 324, 324, 433, 433, 433, 434, 251, 251,
	252, 252, 216, 216, 216, 28, 27, 19, 19, 24,
	24, 25, 25, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 43, 43, 43, 43, 46,
	46, 42, 42, 42, 42, 44, 44, 38, 38, 574,
	574, 575, 575, 109, 109, 114, 114, 114, 114, 114,
	115, 115, 115, 115, 116, 116, 116, 116, 125, 125,
	173, 173, 173, 173, 173, 173, 173, 48, 48, 48,
	48, 60, 60, 60, 60, 123, 591, 591, 591, 124,
	124, 124, 590, 590, 244, 244, 391, 391, 392, 392,
	592, 592, 393, 393, 393, 393, 393, 237, 236, 238,
	238, 239, 239, 65, 65, 65, 229, 229, 496, 496,
	232, 232, 232, 233, 233, 225, 225, 226, 226, 227,
	227, 228, 228, 235, 235, 593, 593, 101, 101, 101,
	176, 176, 288, 288, 288, 388, 388, 388, 318, 318,
	258, 258, 390, 390, 390, 390, 355, 355, 355, 175,
	175, 332, 332, 345, 345, 346, 346, 447, 447, 347,
	107, 107, 108, 108, 122, 122, 203, 203, 201, 201,
	201, 201, 201, 201, 201, 201, 208, 208, 209, 209,
	210, 210, 211, 212, 212, 212, 212, 336, 336, 213,
	213, 213, 202, 202, 202, 204, 204, 204, 204, 204,
	204, 204, 207, 207, 207, 207, 214, 214, 214, 206,
	206, 530, 530, 530, 532, 532, 534, 534, 533, 533,
	529, 529, 531, 531, 588, 588, 361, 361, 361, 315,
	316, 313, 313, 314, 314, 322, 322, 320, 321, 321,
	323, 323, 432, 432, 432, 217, 217, 217, 352, 352,
	352, 352, 353, 353, 384, 384, 382, 382, 382, 382,
	383, 383, 385, 385, 385, 386, 386, 387, 387, 349,
	349, 350, 350, 351, 351, 351, 351, 413, 413, 205,
	205, 205, 329, 329, 329, 330, 330, 403, 403, 403,
	403, 403, 403, 404, 404, 402, 402, 402, 402, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 437, 438,
	438, 331, 331, 439, 389, 389, 548, 548, 548, 549,
	549, 430, 430, 440, 440, 440, 440, 440, 440, 428,
	428, 429, 429, 448, 449, 449, 365, 365, 365, 365,
	363, 363, 366, 366, 366, 366, 366, 364, 364, 441,
	441, 441, 441, 354, 354, 442, 442, 442, 442, 443,
	444, 444, 445, 445, 398, 399, 399, 455, 455, 455,
	455, 457, 328, 328, 328, 328, 328, 506, 505, 505,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 472, 472, 472, 472, 472, 472, 472, 458, 458,
	458, 458, 458, 462, 462, 462, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 463, 463, 468,
	468, 469, 469, 469, 464, 465, 470, 470, 470, 470,
	594, 594, 474, 474, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 460, 460, 460, 467, 467, 467, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 373, 373, 375, 375, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 407, 407, 407, 407, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 524, 524, 524, 524, 524, 524, 524, 524,
	409, 409, 527, 527, 528, 528, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 535, 535, 536, 536, 538,
	538, 539, 539, 540, 541, 541, 541, 542, 543, 543,
	537, 537, 544, 544, 544, 544, 545, 545, 546, 546,
	546, 546, 546, 547, 547, 547, 547, 547, 419, 419,
	420, 420, 426, 426, 426, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 248, 248, 248, 248, 248, 341, 341, 339, 339,
	339, 342, 342, 340, 340, 338, 338, 337, 337, 416,
	416, 414, 414, 418, 418, 367, 367, 473, 473, 473,
	473, 473, 473, 473, 473, 368, 368, 368, 376, 369,
	369, 370, 370, 370, 370, 370, 410, 411, 371, 371,
	371, 412, 412, 421, 425, 425, 424, 423, 423, 422,
	422, 400, 400, 401, 401, 348, 348, 595, 595, 344,
	344, 446, 446, 446, 446, 292, 292, 333, 333, 291,
	291, 283, 283, 284, 284, 284, 284, 326, 326, 427,
	427, 475, 475, 476, 476, 477, 477, 478, 478, 479,
	480, 481, 415, 415, 268, 267, 255, 256, 266, 265,
	264, 254, 257, 261, 262, 263, 259, 260, 274, 273,
	272, 230, 231, 279, 280, 280, 282, 282, 281, 281,
	270, 271, 451, 253, 285, 285, 286, 286, 286, 287,
	287, 287, 287, 249, 249, 250, 250, 275, 275, 276,
	277, 277, 269, 269, 269, 240, 240, 240, 241, 241,
	242, 242, 489, 489, 486, 486, 486, 487, 487, 487,
	488, 488, 488, 488, 485, 485, 485, 485, 485, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 498, 498, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 500, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 503, 503,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 3, 6, 6,
	6, 4, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 6, 6, 9, 6,
	9, 6, 5, 6, 5, 1, 1, 5, 5, 6,
	6, 4, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 6, 5, 6, 6, 4, 8, 3, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 3, 2,
	1, 1, 3, 1, 3, 2, 2, 0, 1, 1,
	0, 2, 0, 7, 10, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 3, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 6, 7, 9, 6,
	2, 2, 3, 0, 8, 6, 8, 7, 2, 0,
	1, 2, 5, 0, 1, 3, 3, 1, 1, 3,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	4, 6, 0, 5, 6, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 2, 0, 1, 2, 3, 1, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 6,
	3, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 5, 1,
	2, 1, 3, 2, 0, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 7, 7, 2, 6, 4, 7, 7,
	7, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 2, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 4, 3, 1, 1, 1, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 3, 4,
	10, 10, 3, 5, 5, 5, 3, 4, 5, 3,
	2, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 9,
	9, 3, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 8, 4, 2, 5, 5, 5, 2, 2,
	0, 1, 3, 11, 12, 8, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 4, 4, 4, 5, 3,
	3, 4, 3, 6, 4, 6, 7, 8, 9, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 11, 14, 3, 3, 0, 1, 1,
	3, 4, 2, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 574, -95, -92, -61, -59, -98, -99,
	-81, -100, -94, -120, -125, -107, -108, -109, -121, -127,
	-173, -178, -179, -180, -3, -47, -49, -62, -80, -82,
	-93, -102, -101, -103, -110, -117, -113, -97, -53, -122,
	-126, -135, -174, -175, -176, 33, 32, 101, 81, 152,
	127, 135, 197, 375, 416, 427, 389, 140, 408, 394,
	-130, -131, 444, -48, -60, -124, -123, 74, 128, 403,
	-4, -12, 30, 47, -50, -51, -52, 63, -68, -64,
	-75, -69, -66, -578, 103, -531, -83, -86, -116, -582,
	159, 215, -104, -105, 358, -111, -112, 410, -114, -115,
	412, 160, -55, -54, 154, -201, -203, -128, -129, -177,
	-136, -137, -138, -139, -140, -141, -142, -167, -143, -144,
	-145, -146, -147, -148, -152, -170, -149, -150, -151, -153,
	-154, -159, -155, -156, -157, -158, -160, -161, -163, -164,
	-165, -166, -168, -169, 449, -162, 506, 50, 463, 83,
	144, 420, 21, -5, -6, -7, -8, -9, -10, -11,
	-14, -13, -63, -65, -67, -70, -71, -72, -79, -73,
	-74, -530, -84, -85, -88, -90, -91, -87, -89, 409,
	-204, -202, 571, 521, -16, -21, -22, -17, -18, -20,
	-23, -19, -24, -25, -34, -39, -40, -36, -37, -35,
	-38, -41, -42, -43, -44, -45, -46, -27, -32, -33,
	-28, -29, -30, -31, -15, -26, 540, 549, -207, -205,
	-206, -214, 436, 529, 480, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, -290, 2, -270,
	-275, -276, -277, -269, -240, -500, -503, 4, -497, -501,
	166, 224, 322, 21, 23, 22, 24, 25, 26, 27,
	28, 30, 31, 42, 43, 45, 46, 47, 48, 49,
	50, 54, 56, 60, 61, 62, 63, 64, 65, 69,
	74, 75, 80, 81, 82, 83, 84, 85, 86, 92,
	89, 90, 91, 93, 95, 97, 98, 99, 100, 101,
	102, 104, 105, 106, 108, 109, 117, 118, 119, 120,
	122, 127, 128, 131, 126, 130, 133, 134, 135, 138,
	139, 140, 142, 143, 145, 146, 147, 149, 150, 152,
	153, 154, 157, 155, 488, 156, 158, 159, 160, 161,
	164, 172, 173, 174, 179, 181, 185, 186, 189, 190,
	191, 192, 193, 194, 195, 196, 198, 202, 204, 205,
	206, 207, 208, 214, 215, 217, 218, 219, 220, 225,
	226, 227, 231, 228, 237, 238, 242, 243, 244, 246,
	250, 251, 252, 253, 254, 255, 257, 259, 258, 261,
	264, 265, 268, 272, 273, 277, 278, 274, 279, 280,
	282, 283, 286, 284, 287, 288, 285, 289, 291, 292,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	290, 305, 303, 307, 308, 309, 320, 318, 313, 314,
	310, 315, 311, 312, 316, 317, 324, 325, 328, 212,
	330, 331, 334, 352, 338, 339, 340, 343, 344, 347,
	350, 351, 353, 354, 355, 356, 357, 358, 359, 360,
	362, 363, 365, 366, 367, 369, 370, 371, 373, 375,
	376, 378, 379, 381, 382, 383, 384, 385, 386, 387,
	389, 391, 390, 392, 394, 396, 397, 398, 403, 408,
	405, 406, 407, 409, 410, 411, 412, 414, 415, 416,
	418, 419, 420, 421, 423, 425, 426, 429, 430, 446,
	447, 465, 427, 428, 431, 432, 433, 434, 435, 439,
	437, 438, 440, 441, 442, 444, 445, 448, 449, 451,
	452, 453, 454, 455, 456, 459, 461, 462, 463, 464,
	466, 469, 470, 471, 472, 467, 479, 474, 476, 477,
	481, 482, 483, 484, 485, 486, 487, 489, 491, 499,
	500, 501, 503, 506, 507, 508, 509, 497, 511, 512,
	515, 516, 517, 520, 518, 519, 521, 523, 526, 527,
	528, 534, 533, 535, 541, 542, 544, 545, 546, 37,
	51, 52, 55, 57, 59, 70, 71, 72, 76, 123,
	124, 151, 162, 163, 175, 187, 188, 199, 201, 209,
	210, 211, 232, 233, 235, 240, 262, 327, 329, 345,
	349, 364, 368, 372, 374, 388, 422, 457, 468, 473,
	492, 493, 494, 495, 502, 504, 529, 530, 531, 536,
	543, -290, 2, -270, 336, -263, 2, -240, -240, 375,
	29, 2, 29, 363, 438, 483, 485, 2, -557, -327,
	2, 29, -243, -240, 103, 197, 436, -263, 2, -557,
	-327, 25, 2, -240, 2, 350, 22, 28, 67, 78,
	99, 138, 161, 182, 185, -581, 352, 382, 425, 440,
	479, 489, 503, 2, 533, 283, 437, 480, 224, 119,
	508, 431, -566, 429, 430, 350, 380, 418, 200, 522,
	-244, 2, 427, -240, 283, 2, 574, 95, 273, 75,
	422, 441, -133, 500, -132, 492, 431, -134, -484, 2,
	305, -240, 574, 574, 574, 29, -253, -240, 480, 224,
	431, 119, 477, 574, 2, 480, 355, 533, 437, 119,
	385, 224, 508, 431, -566, 283, -555, 2, -550, 4,
	-501, -497, -284, -283, 480, 486, 119, -277, -269, 564,
	-276, 574, 574, 574, 2, 243, 244, 384, 383, 441,
	442, 574, 574, 574, 574, 429, 2, 161, 22, 28,
	67, 94, 99, 125, 182, 185, 341, -579, 352, 382,
	440, 479, 482, 489, 503, -565, 464, 69, 431, -564,
	-566, 283, 508, 138, -377, 119, 273, 196, 516, 485,
	483, 514, 131, 231, 519, 518, 574, 574, -95, 2,
	571, 33, 32, 140, 444, -196, 480, 236, 2, -240,
	574, 574, 2, 243, 244, 429, 430, 574, 574, 183,
	-550, 2, 574, 574, 2, 243, 244, 429, 430, 236,
	2, 69, 433, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 2, -171, 441, 464,
	206, 48, 47, 75, 29, 381, 80, 356, 120, 146,
	509, 198, 224, 225, 251, 94, 95, -379, 45, 244,
	243, 430, -571, 429, -431, 481, 432, 438, 476, 255,
	427, 500, 103, 523, 419, 546, 385, 386, 398, 274,
	155, 4, 119, 305, 443, 492, 273, 426, 359, 85,
	-588, 2, 480, -590, 2, 500, 500, 2, -590, 2,
	-590, 2, -590, 2, -591, 500, 543, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, -202, -204, -203, 574, 574, 574,
	574, 574, 574, 574, -171, 441, 2, 75, 29, -320,
	-322, 513, 234, 148, 342, -201, -203, 2, -530, -482,
	2, -405, -504, -407, 562, 563, 555, 478, 68, 321,
	547, -419, 125, 514, 336, -503, -408, -421, 151, 422,
	-342, 8, 9, 5, 6, 7, -249, -409, -415, 505,
	165, 326, -287, 575, 10, 571, -527, -203, -420, 38,
	201, 66, -486, -286, -250, -458, 235, -285, -269, -524,
	-525, 4, -497, -498, -487, -461, -469, -465, -466, -472,
	-240, -500, 78, 111, 112, 110, 115, 114, 276, 275,
	116, 113, 443, 522, 67, 37, 209, 210, 240, 327,
	211, 76, -526, 139, -499, 232, 233, 457, 52, 388,
	175, 124, 123, 329, 57, 55, 530, -470, 121, 492,
	493, 494, 495, 187, 188, 59, 162, 163, 349, 372,
	473, 502, 504, 199, 262, 44, 107, 184, 230, 213,
	239, 241, 245, 263, 266, 306, 319, 323, 346, 348,
	417, 450, -594, 531, 468, 70, 71, -532, 390, -533,
	-263, -532, 574, 574, 576, 574, -313, -315, -316, 2,
	29, 136, 571, 2, -436, 2, -437, -441, -203, 256,
	-440, 571, -438, 569, -270, 337, -528, 423, -524, -525,
	-249, -269, -286, 4, -497, -499, 573, -317, 571, 119,
	480, 79, 224, -372, 571, -240, 29, 336, 496, 576,
	-314, 379, -417, 571, 336, 183, 339, 61, 287, 2,
	2, 2, 2, 2, 209, -240, 480, 118, 2, 254,
	2, 2, 2, 2, 2, 2, 2, -335, 209, 2,
	-270, 533, -335, 209, 2, -335, 209, 2, -378, 2,
	88, -254, 209, 2, -240, -278, 209, 2, -273, -275,
	-282, 209, 2, -280, -240, -495, 209, 2, -494, -489,
	10, -488, 5, 4, -497, -501, -498, -500, 78, -405,
	2, -122, 2, 61, -240, 533, 2, 2, 446, 2,
	571, -133, 72, 500, 44, 441, -392, 2, -393, -236,
	-237, -238, -448, -239, 242, 378, 387, 550, 129, 321,
	546, -482, -573, 183, 554, 496, -482, -343, 573, 2,
	2, 2, 2, 2, 2, -441, 209, -270, 2, -267,
	-485, 4, -497, -501, -498, -502, 29, 32, 33, 34,
	36, 38, 39, 40, 41, 58, 66, 67, 73, 77,
	79, 88, 94, 103, 110, 111, 113, 112, 114, 115,
	116, 125, 129, 132, 136, 137, 141, 144, 148, 165,
	167, 180, 182, 183, 197, 200, 203, 216, 229, 234,
	236, 256, 260, 267, 275, 276, 321, 326, 332, 336,
	337, 341, 342, 361, 377, 393, 413, 436, 443, 460,
	475, 480, 490, 496, 498, 505, 513, 514, 522, 524,
	532, 537, 538, 539, 540, -503, 2, -441, 209, 2,
	-272, 209, -441, -275, 2, -254, 2, -266, -485, 2,
	-291, 209, -270, -271, -275, -273, 2, -280, 2, -494,
	209, 2, 533, 236, 496, 576, -333, -283, -284, -481,
	8, -326, -240, 573, -405, 2, -122, -106, 2, 180,
	-405, 209, 2, -122, 209, 2, -405, 209, 2, -122,
	209, 2, -568, 2, -494, 209, -240, 2, 287, 2,
	2, 503, 2, 99, 480, 118, 2, 407, -580, 425,
	507, 2, 2, 2, 2, 2, 2, 2, 480, -259,
	2, -240, 180, -280, 209, -281, 2, 437, -589, 390,
	-494, 209, 2, 533, -273, 2, -273, 224, 238, -254,
	209, 2, 485, 483, 485, 483, 183, 2, 236, 2,
	236, 2, -442, 2, -443, -437, -444, 569, 337, -452,
	2, -451, -488, 529, -95, 571, -95, 571, 441, 571,
	-494, -270, -270, -405, 2, -122, -106, 2, -405, 2,
	-122, 2, -119, -118, -494, 571, 183, -405, 2, -122,
	-106, 2, -405, 2, -122, 2, -196, 180, 2, 119,
	480, -171, 2, 180, 524, 2, 8, 2, 216, -494,
	432, 386, 172, 2, 446, 2, 447, 75, -379, 546,
	75, 183, 2, 183, 2, -362, 2, 540, 2, 2,
	-554, 2, 336, 183, 2, 183, 2, 183, 2, 183,
	2, 183, 2, 383, 442, 501, 244, 2, -122, 537,
	-106, -405, 537, 2, -572, 180, 430, -405, 2, 499,
	253, 156, 183, -362, 2, 183, 2, 183, 2, 5,
	2, 384, 465, 2, 242, 378, 465, 2, -270, -583,
	2, 480, 533, 437, 2, 2, 89, 90, 183, 2,
	183, 2, 183, 2, 183, 546, 2, -354, -441, -391,
	-392, -391, 496, -320, -322, -171, 446, 2, -208, -352,
	-210, 180, -382, -383, -211, 267, 167, 332, -212, -361,
	29, 136, -361, -361, 61, 572, 572, 11, 12, 77,
	42, 562, 563, 564, 565, 178, 566, 567, 560, 561,
	559, 552, 553, 557, 248, 249, 96, 556, 554, 87,
	281, 424, 168, 169, 170, 171, 404, 222, 35, 223,
	14, 15, 16, 34, 341, 266, 547, 213, 450, 555,
	17, 18, 19, 239, 241, 323, 51, 216, -248, -293,
	-405, -405, -405, -405, -405, -405, -405, 348, 571, -348,
	-400, 569, -203, 571, 571, 571, -481, -203, -405, -419,
	572, -340, 571, -203, -419, -414, 571, 422, 569, 571,
	-422, -405, 5, 5, 5, 571, 573, -535, 541, 180,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 374, -463, 571, -462, 571,
	-462, -462, 534, -460, 571, 549, 542, 571, -460, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 534, 576, -532, -317, 571, -344, -446, -405,
	564, -344, -344, 336, -337, -405, 107, -365, 245, 306,
	184, 263, 417, 230, -402, 575, -402, -430, 549, -203,
	-438, -269, -203, -440, 571, -436, -430, -96, -481, -80,
	-93, -101, -122, -135, -175, -176, 564, -270, 571, 183,
	571, 573, -485, 183, -326, -254, -270, -285, -286, -291,
	135, -337, -550, 508, 431, -326, -243, 39, -416, -455,
	-456, -506, 575, -505, -458, -468, -464, -467, 364, 368,
	-487, 55, 530, -470, 235, 4, -497, -499, 232, 233,
	457, 52, 388, 175, 124, 123, 329, 57, 492, 493,
	494, 495, 187, 188, 59, 531, 468, 70, 71, -550,
	508, 431, -326, 180, -492, 2, -491, -490, 116, 443,
	-488, 5, 2, 151, 2, 2, 2, -240, -222, 576,
	65, 411, 151, -335, 209, -222, 151, -222, 151, -292,
	209, -291, -222, 151, -222, 576, 151, -222, 576, 151,
	573, 576, 151, -492, 2, -378, -484, -337, 39, -392,
	2, 125, -490, -592, 576, 265, -295, 280, 320, 205,
	337, 544, 330, 129, -493, 5, 4, -415, -427, 125,
	273, 235, -475, -477, 8, -476, 9, -478, 562, 563,
	-483, -482, 109, 573, -485, -219, 405, 444, -218, 24,
	30, 140, 226, 309, 527, 157, -305, 227, 351, 355,
	151, 461, 517, -561, -562, 428, 487, 488, 91, 330,
	444, 405, 151, -358, -360, 39, 117, 309, 350, 62,
	219, 285, 286, 463, 536, 151, 444, 405, 351, 24,
	140, -232, -562, 100, 405, 474, -562, -221, 461, 517,
	-561, -562, 428, 405, -220, -305, 151, 575, 24, 405,
	444, 351, -576, -577, 140, 30, 405, 351, -558, -529,
	540, 151, -441, 209, -569, -118, 257, 5, 10, -118,
	-333, 576, 576, -485, 564, 430, 429, 151, 151, 151,
	151, 180, 321, 2, 2, 2, 2, 2, 185, -564,
	-581, 2, 2, -270, 209, -319, 336, -553, -334, 480,
	-270, 321, 44, -272, 209, 2, -275, 533, -558, 321,
	-274, 209, -270, 39, 571, 2, -378, 2, 224, -529,
	321, -442, -288, -270, -437, -288, 444, -263, 39, -402,
	-270, 572, 576, -452, -452, -494, -184, 540, 183, 103,
	571, 571, -196, -449, 576, -448, -495, -119, -494, -494,
	-553, -254, 2, -270, 2, 480, 246, -494, -184, 216,
	-494, -494, -494, -484, 29, 447, 2, 383, 442, 501,
	90, 447, 2, -270, 480, 119, 224, 81, -556, 180,
	-551, 418, 431, 508, -550, -270, 119, -270, 119, -270,
	119, -270, -270, 2, 2, 2, 2, 2, 86, 86,
	2, 47, -572, 180, 2, 499, 2, 499, 2, -240,
	-240, -240, 464, 265, -270, 180, 480, 224, 480, 224,
	119, 75, 119, 480, -222, 576, -244, -208, -352, -484,
	-353, -352, -209, -208, -211, 180, 387, 518, 309, 448,
	250, -383, -382, 29, -405, -387, 174, 308, -405, -385,
	-407, 562, 563, -476, -478, -336, 330, -202, -202, -202,
	-323, -432, -405, 377, 224, -457, -455, -455, -268, -485,
	492, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, 266, 213, 450, 51,
	216, -405, 496, -405, -405, -405, -405, 303, 321, 326,
	505, 165, 515, 136, 330, -595, 475, 41, -412, -203,
	-341, 571, -426, 36, 460, 29, -419, 571, 2, -400,
	-405, -401, -338, -337, -337, 572, 532, 29, 136, 564,
	2, 572, 576, 39, 572, -405, -338, -418, -414, -337,
	-425, -424, 537, -373, -374, 545, 290, 122, 207, 288,
	-375, 435, -479, 8, -485, 564, -536, 173, 200, 571,
	572, 2, 572, 2, 572, -405, 2, 572, -405, 2,
	572, -405, 2, 572, -405, 2, 572, 2, -405, -405,
	-405, -405, -405, -405, -405, -337, 8, -479, -479, 492,
	492, -479, -479, -479, -471, 364, 365, 366, 367, 268,
	269, 270, 271, 368, 369, 370, 371, 295, 296, 297,
	298, 291, 292, 293, 294, 299, 300, 301, 302, 192,
	193, 194, 195, 188, 189, 190, 191, -471, -367, 2,
	-473, -337, 4, 545, 290, 122, 207, 288, 435, 5,
	-367, 2, -368, 2, -405, -337, -369, -406, -407, 562,
	563, 555, -419, -370, 2, -405, -338, -405, 58, 260,
	498, -371, -405, 183, -337, -337, 2, -337, 2, -533,
	39, -337, -329, 576, 183, 39, 4, -329, -329, 571,
	572, 576, -366, 204, 284, 279, 238, -366, -436, -365,
	245, -363, 346, -363, -363, -430, -255, 569, 577, -485,
	-430, -429, -428, 39, -263, 343, -430, -430, 573, 572,
	-429, 570, -548, 571, 574, 574, 574, 574, 574, -270,
	571, -337, -485, 573, 466, 572, 239, 239, 239, 239,
	423, 572, 496, -552, -278, -282, 540, -95, 338, 572,
	576, -328, 38, 569, 573, -479, 2, 2, -474, 534,
	571, 571, -374, 571, 183, -552, -282, -327, 576, 496,
	-240, 2, -270, -335, -222, 151, -335, -335, -222, 576,
	151, -254, -273, -278, -280, -282, -240, -494, -495, -222,
	-274, -573, 572, 500, -393, -294, 387, 459, 406, 439,
	477, 8, 9, 8, 9, 576, -485, 576, -574, 94,
	496, 79, 431, -234, 274, 397, 309, 480, 422, -396,
	209, 79, -507, -257, 94, -508, -240, 73, 514, 377,
	182, 149, -574, 94, 377, -574, 94, 2, 226, 94,
	444, 464, 496, 61, -441, 42, 42, 29, -122, 261,
	183, 546, 480, 224, 431, 496, -441, -360, -455, 117,
	285, 286, 61, -480, -475, 562, 563, -480, 61, -480,
	-480, -480, 540, -272, -441, 431, 496, 496, 396, 396,
	496, 496, 396, 46, 125, 576, 42, 42, 29, -122,
	261, 183, 496, -291, -255, 528, 43, 528, 496, 43,
	431, 496, 576, 43, 43, 496, 496, -559, -245, 106,
	315, 278, 316, 98, 312, 97, 311, 104, 313, 105,
	314, 535, 324, 64, 310, 289, 317, -246, -247, 357,
	526, -494, 444, 405, 151, 216, -449, 216, -449, -283,
	-240, 573, -122, -405, -405, -122, -405, -122, 47, 151,
	2, -589, 254, 571, -298, 321, 183, -326, -450, 236,
	576, -334, 151, -491, -359, -358, 321, -274, 209, 2,
	151, -317, 321, 145, 571, 385, 2, -256, 209, -241,
	-240, -378, -225, 484, 151, -356, 524, -388, -122, 571,
	125, 39, -388, -345, -346, -447, -347, -257, 571, -263,
	-402, -95, -451, 572, 572, 572, -183, 340, -182, -240,
	5, -196, 524, -297, -397, -396, -511, -512, -507, 266,
	224, 514, 238, 166, -318, -258, -257, 118, -190, 540,
	-118, 572, -449, 216, -184, -184, -449, -449, -270, 180,
	-494, -184, -184, -184, 2, 2, 2, -362, -270, -254,
	-291, -270, -326, -326, -282, -278, -362, -254, -362, -254,
	-362, -254, -122, -405, 2, 441, 180, 180, 573, -362,
	385, 119, 480, 355, 224, -270, -291, -270, -291, -254,
	-254, -270, -441, -353, -209, 337, 250, 448, -385, -386,
	-407, 422, 423, -386, 422, 423, 8, 9, 8, 9,
	-213, 452, 325, -335, 576, -216, 40, 132, 250, -270,
	546, 147, -405, -405, 496, -595, 475, -412, 147, -405,
	303, 326, 505, 165, 515, 136, 330, 183, 571, -406,
	-406, 572, -339, -405, -405, 570, 579, 572, -322, 576,
	-320, -405, -337, -337, 572, 573, -337, -326, 570, 570,
	576, 572, -423, -424, 141, -405, 496, 496, 496, 496,
	571, 572, 573, -541, 347, 571, 571, -405, 572, 572,
	572, 572, 39, 576, 576, 576, 572, 576, 576, 576,
	572, 572, 572, 576, 572, 546, 546, 572, 572, 572,
	572, 576, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 572, 576, 572, 183,
	572, 572, -376, 361, 572, 11, 12, 562, 563, 564,
	565, 178, 566, 567, 560, 561, 559, 552, 553, 554,
	87, 281, 424, 14, 15, 16, 239, 216, -406, -406,
	-406, 572, -410, -411, 183, 180, 39, -371, -371, -371,
	572, 183, -337, 572, 572, 571, -534, 283, 321, 572,
	-399, -398, 538, -446, -330, 2, -436, -265, -485, -399,
	-399, -337, -405, 245, 245, -364, 524, 336, -366, -436,
	-429, -481, -404, -403, 181, 40, 132, 318, 212, -429,
	-263, -317, -429, -429, -485, -430, -430, -428, 572, -549,
	-481, 572, -331, -439, -528, -322, 573, -485, -193, -529,
	-172, 5, 326, -172, -172, -172, -326, 496, 496, 25,
	362, -455, 569, 570, 8, -485, 571, -479, -479, -479,
	-326, 183, 183, 183, -491, -491, 2, -222, -335, -222,
	-222, -291, -292, -222, -222, -222, -357, 540, -482, -392,
	512, 84, 387, 492, -482, -218, 405, -257, -257, -270,
	-279, -240, 196, 397, 26, 397, 265, 265, 321, -396,
	209, -224, 321, -455, -264, -240, 571, -380, 542, 250,
	250, 524, -257, -264, 250, 209, -257, 209, -264, 2,
	-264, -560, 387, 331, -405, -491, 272, 385, 322, -219,
	405, 444, -122, -122, -122, 571, -573, 524, 135, -270,
	-291, -270, -279, -274, 444, 405, 319, -285, -480, -480,
	-358, 444, 405, -279, -272, -491, -230, -240, -230, 431,
	-254, 164, 546, -220, -122, -122, -122, 571, -255, -221,
	405, 5, 209, -257, 5, -240, -257, -279, -491, -577,
	24, -257, 209, -257, -279, -491, -245, -494, 326, 520,
	-558, 431, 496, -441, -118, -187, 540, -118, -181, 220,
	564, -555, -240, 533, -240, -296, -299, -297, -257, -199,
	-200, 542, 540, 151, -289, -270, 569, -184, -494, -270,
	-280, -281, 151, -317, 321, -494, 39, 151, 571, 2,
	2, 336, 321, -256, 209, -226, 142, -593, 554, -254,
	-399, -330, -355, -390, 413, 336, -318, 529, -263, -355,
	-332, 576, 183, 554, 573, -318, -445, 564, -95, -95,
	-184, 576, 571, 554, 554, 571, -494, -494, 572, 576,
	-224, -270, -256, 224, 224, -262, -241, 572, 576, 573,
	571, -192, 340, -191, 143, 252, 237, 453, 454, 455,
	456, 134, -190, -119, 183, -56, 540, 480, -184, 575,
	-362, -362, -362, 441, 441, -240, -266, -254, -270, -267,
	-291, 180, 180, 518, -386, 337, 277, -432, -217, 548,
	-270, 575, -405, -405, 147, 147, -405, -406, -406, -405,
	147, 183, 571, -405, -416, 34, 34, 572, 576, -401,
	-405, 572, 532, -322, -322, 572, 564, -485, 575, 572,
	-414, 144, -405, 490, 290, 207, 288, -375, 288, -375,
	-375, -479, 5, -485, 564, -542, -260, 571, -240, 538,
	-321, 342, 572, -457, -455, -405, -405, -405, -405, -405,
	-479, -460, -460, -475, -475, -405, -410, -405, -457, -455,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, 136,
	321, 330, -406, -411, -410, -405, -405, -455, 572, 572,
	572, -337, -95, 571, 283, -349, 200, -405, -449, 576,
	-349, -349, 572, -436, -436, 571, -405, 245, 570, 576,
	578, 554, -317, 573, -428, -429, 570, 572, 576, 572,
	576, -389, 39, 572, -485, -399, -195, -194, 133, 54,
	-326, -326, 339, 5, 8, 569, 570, 573, -479, 572,
	572, 572, -326, -326, -326, -222, -222, 118, 309, -405,
	496, 496, 61, 496, 42, 319, -230, 422, 26, 397,
	397, 151, 321, 526, -513, -508, 149, -405, 571, 224,
	571, 571, 2, -215, 140, 444, -575, 2, 524, 151,
	-222, 151, -222, 544, 571, 571, 496, 431, -234, 540,
	-337, -405, -185, 125, -484, -562, 575, -562, 575, 431,
	496, 431, 496, 540, 164, 540, -337, 496, -459, 49,
	27, 321, -273, 496, 496, -222, 151, 508, 444, -494,
	326, -279, -274, 444, 405, -449, -189, 340, -188, 143,
	415, 134, 252, -449, -187, 183, 236, -274, 2, 572,
	572, 576, -514, 39, 334, 334, 571, -270, -76, 540,
	-448, -481, 44, -272, 39, 151, -558, -122, -274, -453,
	-454, 5, -270, 151, 336, 321, -227, 259, -593, -489,
	-529, -322, -355, -344, 322, 92, 572, -399, -346, -330,
	-405, 2, 572, -182, -183, -494, -494, -494, -184, -196,
	-196, -397, -300, 571, -256, -241, 571, -196, -258, 2,
	-495, 576, 571, 554, 554, 554, -449, -122, 340, -270,
	564, -362, -307, -306, 355, 330, -307, 422, 422, 337,
	174, 255, -216, -255, -405, -405, 147, 34, 34, -405,
	-405, -416, 572, -405, -405, -337, 570, 5, -405, 572,
	572, 8, -405, 572, 573, -543, -240, -405, 572, 61,
	572, 572, 576, 576, 572, 572, 572, 572, 572, 572,
	572, -411, 183, 136, 330, 571, 572, 572, -95, -413,
	203, 61, -436, -413, -413, -364, -326, -436, -403, -255,
	569, -485, -481, -439, 571, 573, -194, 554, 570, 2,
	569, -485, 572, 118, -257, -257, 480, 422, 319, -230,
	422, 265, 26, 26, -396, 151, -515, 94, -517, 77,
	166, 103, 321, 326, 514, 377, 73, 125, 393, -585,
	39, 551, 572, -324, -433, -528, 571, -240, -324, -326,
	321, 471, 125, 321, 125, 118, 508, 80, -257, -264,
	-326, -326, -270, -279, 158, 572, 576, 554, 2, 564,
	564, -279, -274, -279, -272, 353, 158, 572, -255, 5,
	5, 151, -252, 77, 5, -257, -257, -273, 118, 431,
	496, -187, 576, 571, 554, 554, -187, -495, -118, -317,
	-308, 226, -257, -512, -509, -510, 377, -516, -518, 166,
	377, -122, 2, -198, -197, -240, 5, 571, -298, 340,
	570, -491, -359, -122, -274, -317, 572, 576, -381, 524,
	-255, -270, 151, -228, 258, -593, -489, -225, -384, -382,
	137, 571, 336, -122, -322, 554, 572, 572, 118, 118,
	218, 150, -324, 571, 571, -326, 118, 572, -191, -192,
	-494, -118, -494, -190, -57, -58, 224, 94, 360, -267,
	480, 224, 571, 571, -216, -405, -405, -405, 572, -322,
	-485, 564, -537, 355, 572, -432, -405, -405, -406, 183,
	571, -416, 572, -538, 539, -405, -350, -351, -405, 421,
	108, 201, -538, -538, 572, -481, 2, -494, 569, 2,
	216, 265, 496, -396, -264, -268, -261, -240, 166, 209,
	326, -380, 250, 571, -406, -270, 571, 2, 31, -586,
	129, 229, 572, 576, -434, -251, -240, -405, -434, 572,
	572, 326, 326, -405, -455, 571, -222, -222, 572, 572,
	-405, 496, -484, 101, -482, 2, -562, -254, -405, 496,
	5, -222, -268, -222, -222, -252, 508, -279, -274, -188,
	-189, -494, -118, -187, 39, -303, 228, 2, -514, 250,
	-261, 250, -584, 540, 572, 576, 554, 554, -296, -199,
	-77, -78, 497, -448, -317, 39, 5, 571, -240, 336,
	571, -255, -235, 93, -593, -489, -226, -355, 322, -326,
	94, -384, -412, -184, 571, 571, -301, 82, 95, 126,
	208, 186, 225, 464, 469, 29, -301, 572, -324, -324,
	572, 571, -184, 572, 576, 29, 571, 29, 571, -270,
	-291, -337, -337, 572, -322, 61, 576, 572, 572, -406,
	-416, 572, -539, -540, -260, 576, 571, 571, 445, 570,
	2, -230, -230, -517, -261, 321, 524, -405, -242, 571,
	-405, 39, 229, 130, 214, -395, -587, 102, 472, 217,
	-433, -216, 572, -394, 524, 393, -252, -324, 571, 571,
	571, 554, 183, 571, -459, -222, -273, 572, -567, 391,
	-122, -304, -305, 216, 571, -302, 336, 118, 309, -197,
	-482, -482, 572, 39, -78, 9, 39, -122, -324, -270,
	-324, 336, -229, -496, 396, 398, 267, -489, -227, 572,
	-264, -355, -495, -495, -394, 572, 572, -495, -58, -326,
	-326, 572, 572, -544, 385, 423, 202, -337, -323, 572,
	576, 39, -351, 2, 2, 2, 151, 204, 572, -519,
	282, -240, 572, 130, 214, -303, 571, -217, -434, -303,
	204, -270, -563, 524, 572, -310, -309, -306, -312, -311,
	-306, -337, -482, 101, 353, -337, -252, -570, 184, -569,
	5, 10, -199, 353, -325, -435, -257, 83, 118, -308,
	-122, -122, 572, -381, 572, -270, -233, -232, -593, -593,
	-228, -399, 572, 572, -395, -394, -200, 540, 572, 572,
	572, 572, -545, -546, 51, 511, 109, -405, -545, -545,
	-540, -542, 166, 540, -520, -523, -522, 336, 451, 184,
	354, 572, 471, 536, -304, -326, 540, -317, -405, -394,
	572, 576, 529, 572, 576, 529, 572, 183, 572, -222,
	-186, 540, 47, -302, -270, 572, 576, 376, 131, 140,
	-303, -584, -394, 571, -395, 571, -231, -326, -475, -235,
	137, -184, -184, -303, -395, -399, -184, -547, 149, -546,
	373, 179, 422, 373, 179, -547, -547, -261, 56, -522,
	336, -523, 336, 518, 131, -586, 572, 56, -519, -303,
	-309, 216, -311, 183, 353, 429, -569, 31, 571, -435,
	423, 423, 2, -304, -302, -395, -324, -303, -324, -229,
	322, 518, -304, -303, 109, 200, 491, 309, 34, 554,
	-521, 309, 411, 65, 444, -521, -399, 554, -520, 571,
	571, 340, -326, 2, -199, -303, 572, -304, 572, -233,
	444, -200, -304, 422, 344, -546, -405, 23, 326, 125,
	-405, -586, -337, -337, -183, 571, 572, -302, -304, -394,
	-200, -395, -345, -399, -200, 572, 572, -183, -223, 65,
	411, -200, -395, -399, -303, -399, -399, -304, 496, 572,
	-399, -303, -304, 571, -304, -200, -337, -200, -399, 572,
	-399, -304,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 500, 501, 503, 504, 505, 507,
	508, 510, 512, 514, 515, 516, 518, 519, 521, 522,
	523, 524, 525, 527, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	591, 593, 0, 1250, 1252, 1254, 1256, 0, 733, 0,
	36, 37, 0, -2, 298, 300, 302, 0, 328, 330,
	331, 333, 335, 337, -2, 0, 435, 436, 438, 440,
	-2, 0, 908, 910, 0, 580, 582, 0, 913, 915,
	0, 0, 602, 603, 0, 1354, -2, 596, 598, 600,
	665, 667, 669, 671, 673, 675, 677, 679, 681, 682,
	684, 686, 688, 690, 692, 693, 695, 697, 699, 700,
	702, 704, 706, 708, 710, 712, 714, 716, 718, 720,
	722, 724, 726, 728, -2, 730, -2, -2, 0, -2,
	-2, -2, 1268, 40, 42, 44, 46, 48, 50, 52,
	54, 56, 386, 387, 389, 391, 393, 395, 398, 400,
	402, 1412, 442, 444, 446, 448, 450, 452, 454, 0,
	-2, 1426, 0, 0, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 94, 95, 96, 97, 98, 99,
	100, 101, 71, 72, 74, 75, 76, 80, 81, 82,
	83, 84, 85, 86, 92, 69, 0, 0, 1385, 1387,
	1389, 1391, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 502, 506, 509,
	511, 513, 517, 520, 526, 528, 530, 487, 488, 491,
	2090, 2107, 2108, 2109, 2112, 2113, 2114, 2115, 2116, 2117,
	2547, 2628, 2629, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 489, 490, 1074, 0, 554, 552, 2075, 555, 2355,
	557, 559, 429, 430, 431, 432, 433, 434, 0, 573,
	565, 1424, 574, 576, 577, 578, 579, 549, 547, 0,
	573, 2143, 571, 1248, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 365, 1123, 1124, 1125,
	1233, 1234, 2398, 1275, 0, 210, 592, -2, -2, -2,
	2512, -2, 624, -2, 631, 2516, 2400, 636, 0, 638,
	-2, 641, 1251, 1253, 1255, 731, 732, 2093, 0, 0,
	0, 0, 0, 38, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 220, -2,
	-2, -2, -2, 0, 0, 2441, 2194, 2043, 2109, 2046,
	2041, 299, 301, 303, 304, 0, 0, 0, 0, 0,
	0, 329, 332, 334, 336, -2, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 967, 959,
	960, 1180, 0, 0, 0, -2, 437, 439, 492, 493,
	0, 1413, 1413, -2, 0, 0, 0, 0, 273, 264,
	909, 911, 912, 0, 0, 0, 0, 581, 583, 0,
	0, 246, 914, 916, 917, 0, 0, 0, 0, 0,
	275, 0, 0, 597, 599, 601, 666, 668, 670, 672,
	674, 676, 678, 680, 683, 685, 687, 689, 691, 694,
	696, 698, 701, 703, 705, 707, 709, 711, 713, 715,
	717, 719, 721, 723, 725, 727, 729, 739, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 823, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 890,
	0, 742, 744, 745, 746, 0, 803, 821, 822, 831,
	0, 1114, 1414, 1277, 1258, 1272, 1277, 1260, 1261, 1262,
	1263, 1264, 1269, 1271, 1265, 1266, 1267, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 388, 390, 392, 394,
	396, 399, 401, 403, -2, 1383, 1384, 443, 445, 447,
	449, 451, 453, 455, 584, 0, 586, 0, 743, -2,
	0, 1418, 1418, 1418, 0, 0, 1384, 1382, 0, 589,
	590, 645, 646, 1686, 0, 0, 0, 0, 0, 0,
	0, 1940, 1772, 0, 647, -2, 1803, 1805, 2487, 2512,
	1939, 1807, 1808, 1809, 1810, 1811, 0, 1813, 1814, 1815,
	1816, 1817, 1818, 0, 1820, 0, 1825, 1826, 1827, 0,
	2494, 2020, 2103, -2, 0, 0, 2500, 2099, 0, 1906,
	1843, -2, -2, 2126, 2105, 1618, 1619, 1620, 1621, 1622,
	-2, -2, 2530, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 0, 2475, 2495, 2496, 2501, 2503,
	2497, 2484, 1868, 2206, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1645, 1654, -2,
	-2, -2, -2, -2, -2, -2, 2488, 2489, 2506, 2509,
	2515, 2520, 2521, 2493, 2502, 2529, 2531, 2532, 2533, 2534,
	2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544,
	2545, 2546, 1646, -2, -2, -2, -2, 1401, 2368, 1404,
	1074, 1402, 1386, 1388, 0, 1390, 0, 0, 0, 1395,
	1421, 1419, 0, 1470, 1399, 1400, 1488, 1488, 1512, 0,
	1493, 0, 1512, 1413, 1539, 0, 1499, 2390, 1844, 1845,
	0, 2109, 2104, -2, -2, 2527, 0, 0, 0, 0,
	0, 0, 0, 550, 0, 556, 558, 0, 0, 0,
	572, 1423, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 2495, 0, 0, 0, 377, 0,
	379, 380, 381, 382, 383, 384, 385, 180, 2495, 460,
	485, 0, 180, 2495, 463, 180, 2495, 466, 0, 469,
	1178, 180, 2495, 472, 2071, 180, 2495, 475, 477, 2079,
	180, 2495, 481, 2086, 2084, 482, 2495, 484, 278, 276,
	277, 2122, 2123, 2130, 2131, 2132, 2133, 2528, 2530, 1244,
	1245, 1246, 1247, 0, 1274, 1179, 594, 595, 0, 619,
	0, 623, 2483, -2, 0, 2409, -2, 627, 1278, 1282,
	1283, 1284, 1285, 1286, 0, 0, 0, 0, 1291, 0,
	0, 633, 0, 0, 620, 621, 639, 642, 0, 734,
	735, 736, 737, 738, 68, 0, 2495, 1539, 70, 0,
	2065, 2134, 2135, 2136, 2137, 2138, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 73, 0, 2495, 77,
	0, 2495, 0, -2, 87, 0, 93, 0, 2068, 102,
	0, 2495, 0, 2040, -2, 0, 191, 0, 936, -2,
	2495, 1122, 0, 0, 0, 0, 899, 2037, 2042, 900,
	2061, 901, 2047, 0, 305, 306, 307, 308, 309, 0,
	310, 2495, 312, 313, 0, 315, 316, 2495, 318, 319,
	0, 321, 0, 231, 232, 2495, 340, 341, 0, 343,
	344, 0, 346, 0, 0, 0, 350, -2, 366, 0,
	363, 353, 354, 356, 357, 358, 359, 360, 0, 407,
	405, 2076, 0, -2, 2495, 0, 933, 0, 0, 1159,
	-2, 2495, 1119, 0, 1165, 1161, 0, -2, 0, 1411,
	2495, 1295, 963, 964, 965, 966, 1551, 426, 0, 1319,
	0, 1321, 0, 1340, 1545, 1488, 0, 0, 1550, 0,
	-2, 543, 2092, -2, 495, 0, 496, 0, -2, 0,
	290, 0, 0, 918, 919, 920, 921, 922, 925, 926,
	927, 928, 1525, 249, 247, 0, 0, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 0, 0, 604, 0,
	0, 740, 741, 0, 0, 751, 752, 753, 0, 290,
	2401, 2364, 2227, 760, 0, 763, 766, -2, 0, 0,
	0, 0, 770, 0, 775, 776, 777, 0, 779, 781,
	907, 783, 0, 0, 785, 0, 789, 0, 792, 0,
	794, 0, 796, -2, -2, -2, -2, 807, -2, 0,
	810, 812, 0, 814, -2, 0, 823, 819, 820, 0,
	0, 0, 0, 839, 840, 0, 849, 0, 852, 853,
	854, 0, 856, 857, 0, 859, 860, 861, 862, 0,
	864, 865, -2, -2, 869, 871, 0, 878, 0, 882,
	0, 886, 0, 889, 0, 747, 748, 180, 1543, 1257,
	-2, 1259, 0, -2, 0, 585, 0, 588, 1443, 1369,
	1366, 0, 1440, 1441, 1370, 0, 0, 0, 1377, 0,
	1416, 1417, 0, 0, 0, 1356, 1357, 0, 0, 0,
	0, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1951,
	1952, 1955, 1956, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 1959, 1960, 0, 0, 1962, 0, 1964, 0, 0,
	0, 0, 0, 0, 1751, 1753, 2028, 0, 0, 1961,
	1691, 1692, 1693, 1694, 1695, 1730, 1731, 0, 0, 1804,
	2025, 2024, 1806, 0, 1976, 0, 1819, -2, 0, 1940,
	1971, 0, 0, 1828, 1829, 1830, 0, 0, 1976, 0,
	0, 2019, 1840, 1841, 1683, 0, 0, 1908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 1631, 0, 1633, 0,
	1634, 1635, 1642, 1655, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 0, 2000, -2, 0, 0,
	0, 0, 1647, 0, 1403, 0, 0, 1474, 2029, 2033,
	2034, 1474, 1474, 0, 0, 1977, 1536, 1536, 0, 0,
	1531, 1531, 1531, 1529, 1512, 0, 1512, 1522, 0, 1512,
	1512, 0, -2, 1493, 0, 0, 1522, 0, 1506, 531,
	533, 535, 537, 538, 539, 541, 1540, 1541, 0, 0,
	0, 0, 2110, 0, 0, 0, 0, 0, 2095, 0,
	0, 0, 0, 2451, 2400, 561, 575, 1413, 0, 1979,
	1566, 1570, 0, 1572, 1573, 1574, 1575, 1576, 0, 0,
	1567, -2, 1643, 1645, 1666, 2127, 2128, 2129, 1626, 1627,
	1628, 1629, 1630, 1638, 1625, 1625, 1625, 1636, 1665, 1657,
	1665, 1661, 1611, 1612, 1613, 1648, 1649, 1650, 1651, 0,
	2451, 2400, 567, 0, 0, 1351, 195, 197, 198, 199,
	200, 201, 367, 0, 374, 375, 376, 0, 456, 0,
	178, 179, 0, 180, 2495, 461, 0, 464, 0, 180,
	2495, 2035, 470, 0, 473, 0, 0, 479, 0, 0,
	0, 0, 0, 180, 1353, 0, 0, 0, 0, -2,
	629, 634, 635, 0, 1280, 0, 1287, 656, 657, 658,
	1289, 1290, 0, 1292, 632, 659, 660, 661, 662, 663,
	664, 0, 2049, 2050, 2051, 2052, 2055, 2056, 0, 0,
	630, 649, 637, 0, 643, 103, 1230, 0, 142, 0,
	1230, 1230, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 127, 138, 115, 116, 0, 0,
	0, 0, 0, 78, 1096, 0, 1099, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 91, 126, 0, 0, 0, 121, 105, 0, 0,
	0, 128, 140, 0, 171, 173, 0, 0, 0, 0,
	0, 0, 190, 202, 0, 0, 0, 0, 1120, 0,
	1410, 0, 0, 2495, 0, 1525, 2272, -2, -2, 1525,
	898, 0, 0, 2110, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 345, 347, 348, 349, 0, 1158,
	0, 355, 397, 1045, 2495, 0, 0, 424, 419, 0,
	421, 0, 0, 1095, 2495, 1093, 2080, 0, 1117, 0,
	1074, 2495, 2078, 0, 0, 1166, 2119, 1175, 1179, 1306,
	0, 428, 0, 1322, 1324, 0, 0, 1546, 0, 1548,
	1488, 1413, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 253, 0, 1524, 0, 1525, 247, 290,
	290, 1525, 606, 1525, 608, 0, 0, 754, 755, 0,
	290, 290, 290, 761, 762, 764, 765, -2, -2, -2,
	879, 767, 768, 846, 0, 0, 0, 845, 782, 0,
	892, 2386, 2400, 2451, 905, 846, 2194, 846, 2194, 846,
	2194, 793, 795, 798, 834, 842, 806, 811, 0, 0,
	816, 824, -2, 0, 826, 0, 828, 0, 830, 846,
	847, 850, 855, 858, 863, 0, 0, 0, 0, 0,
	0, 887, 0, 0, 1113, 0, 1270, 1443, 1369, 587,
	1360, 1442, 1361, 1368, 1371, 0, 0, 1373, 0, 1375,
	0, 1438, 1439, 1446, 1447, 0, 1457, 1458, 1450, 0,
	-2, 0, 0, 1453, 1454, 1379, 0, 1396, 1397, 1398,
	1427, 1430, 1194, 0, 2628, 1687, 1561, 1688, 1689, 2064,
	0, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, -2, -2, -2, -2, -2, -2, -2, -2, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	-2, -2, -2, 1728, 1729, -2, 1963, 1965, 0, 2028,
	0, -2, 0, -2, -2, -2, -2, 1748, 0, 1750,
	1755, 1757, 1759, 0, 0, 0, 0, 2027, 1769, 2011,
	2012, 0, 0, 1942, 1943, 1944, 1754, 0, 1773, 2026,
	2023, 0, 0, 1975, 1426, 1832, 0, 0, 0, 0,
	1839, 1824, 1973, 0, 1972, 0, 0, 0, 1983, 0,
	2018, 2014, 0, 2062, 1682, 1669, 1670, 1671, 1672, 1673,
	1674, 1684, 0, 2059, 2096, 2102, 1916, 0, 0, 0,
	1869, 1870, 1871, 1872, 1873, 0, 1875, 1876, 0, 1878,
	1879, 0, 1881, 1882, 0, 1884, 1885, 1886, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1579, 0, 0, 0, 1583,
	0, 0, 0, 1587, 0, 0, 0, 1591, 0, 0,
	0, 1595, 0, 0, 0, 1599, 0, 0, 0, 1603,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 1888,
	0, 1986, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1890, 0, 1892, 1977, 1997, 0, 0, 1774, 0,
	0, 0, 1940, 0, 1895, 1977, 2005, 0, 0, 0,
	0, 0, 1977, 0, 2010, 0, 1902, 0, 1904, 1405,
	0, 0, 1556, 0, 0, 0, 2032, 1556, 1556, 0,
	1469, 0, 0, 1532, 1533, 1534, 1535, 0, 0, 1536,
	0, 1526, 1530, 1527, 1528, 1522, 1485, 0, 0, 2066,
	1522, 1491, 1521, 0, 1074, 1511, 1522, 1522, 0, -2,
	1495, 1512, 0, 0, 532, 534, 536, 540, 542, 0,
	0, 1426, -2, 0, -2, 1073, 0, 0, 0, 0,
	551, 553, 0, 0, 476, 0, 0, 545, 0, 548,
	0, 1557, 1560, 0, 0, 1571, 1577, 1578, 0, -2,
	0, 0, 1667, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 486, 180, 458, 0, 180, 180, 467, 0,
	0, 180, 478, 180, 2087, 180, 2085, 279, 483, 1352,
	213, 0, 622, 0, 1279, 1288, 0, 653, 0, 655,
	0, 2053, 2057, 2054, 2058, 0, 644, 0, 0, 0,
	0, 1229, 0, 1201, 0, 0, 0, 0, 0, 146,
	2495, 0, 182, 0, 0, 1038, 2072, 0, 1030, 0,
	0, 2213, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 1097, 1098, 1100,
	1107, 1109, 0, 1103, 2060, 0, 0, 1104, 0, 1106,
	1108, 1110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 114, 118,
	0, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1154, 1152, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 0,
	0, -2, 0, 0, 0, 0, 223, 0, 281, 2038,
	2048, 0, 923, 924, 311, 314, 317, 320, 219, 0,
	351, 0, 0, 969, 944, 0, 0, 406, 290, 0,
	0, 420, 2089, 931, 1091, 1094, 0, 1074, 2495, 1131,
	0, 0, 0, 0, 0, 0, 1164, 0, 2495, 2067,
	2118, 2119, 1308, 1316, 0, 1556, 0, 1338, 1325, 0,
	0, 0, 1338, 1342, 1343, 1345, 1346, 0, 0, 1547,
	1553, 494, 544, 1413, 1413, 290, 288, 2332, 286, 283,
	285, 0, 0, 0, 970, 972, 973, 974, 182, 0,
	2119, 1030, 2261, 2119, 0, 1328, 1330, 0, 243, 0,
	250, 248, 253, 0, 0, 418, 605, 610, 749, 0,
	290, 757, 758, 759, 800, 836, 844, 769, 771, 772,
	773, 0, 906, 902, 903, 904, 784, 846, 787, 846,
	790, 846, 809, 813, 818, 825, 0, 0, 0, 838,
	0, 0, 0, 0, 0, 0, 0, 883, 884, 885,
	888, 891, 1544, 1364, 1365, 1367, 0, 1376, 0, 0,
	1452, -2, -2, 1451, 1455, 1456, -2, -2, -2, -2,
	1372, 0, 1381, 1378, 0, 1437, 1192, 1193, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1770, 0, -2,
	1749, 1752, 1756, 1758, 1760, 0, 0, 0, 0, 0,
	0, 1966, 0, 1968, 1771, 2021, 2024, 1938, 0, 0,
	1425, 1426, 1426, 0, 1838, 0, 1974, 0, 1981, 1982,
	0, 1831, 0, 2015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 1874, 1877,
	1880, 1883, 0, 0, 0, 0, 1863, 0, 0, 0,
	1867, 1637, 1623, 0, 1665, 1663, 1664, 1658, 1665, 1662,
	1615, 0, 1580, 1581, 1582, 1584, 1585, 1586, 1588, 1589,
	1590, 1592, 1593, 1594, 1596, 1597, 1598, 1600, 1601, 1602,
	1604, 1605, 1606, 1608, 1609, 1610, 1614, 0, 1887, 0,
	1889, 1891, 0, 0, 1893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 1778,
	1779, 1894, 2003, 2004, 0, 0, 0, 0, 0, 0,
	1900, 0, 2009, 1901, 1903, 1413, 0, 1406, 0, 1471,
	1460, 1555, 0, 2030, 1525, 1473, 1475, 2031, 2069, 1460,
	1460, 0, 1978, 0, 0, 1516, 0, 0, 0, 1518,
	1489, 0, 0, 1483, 0, 1479, 1480, 1481, 1482, 1490,
	1074, 1520, 1492, 1496, 2096, 0, 1522, 0, 1507, 0,
	1509, 1542, 0, 1501, 1504, 0, 0, 2111, 1556, 0,
	322, 326, 327, 323, 324, 325, 560, 0, 0, 0,
	0, 1980, 0, 1562, 0, 1568, 0, 0, 0, 0,
	566, 0, 0, 0, 196, 1350, 373, 457, 180, 462,
	465, 2036, 180, 471, 474, 480, 209, 0, 618, -2,
	651, 652, 654, 0, 650, 143, 1230, 0, 0, 1197,
	1199, 2083, 1203, 0, 0, 0, 0, 0, 0, 148,
	2495, 157, 0, 1010, 0, 2070, 0, 0, 0, 0,
	0, 0, 1232, 0, 0, 2495, 180, 2495, 180, 160,
	162, 165, 0, 170, 167, 168, 0, 0, 1001, 104,
	1230, 0, 107, 111, 119, 0, 0, 0, 125, 0,
	0, 0, 1215, 1221, 0, 0, 1101, 1102, 1105, 1111,
	79, 0, 0, 1219, 1225, 88, 89, 2081, 90, 0,
	1196, 1300, 0, 172, 109, 113, 120, 0, 1227, 106,
	0, 194, 0, 0, 0, 186, 0, 187, 188, 203,
	0, 180, 2495, 0, 934, 935, 1153, 1115, 1116, 0,
	1121, 0, 0, 0, 1525, 215, 0, 1525, 223, 0,
	2044, 0, 339, 0, 0, 0, 0, 968, 1056, 0,
	939, 0, 0, 0, 412, 408, 0, 417, 423, 422,
	-2, 0, 0, 0, 0, -2, 0, 0, 1168, 1162,
	1163, 0, 0, 0, 2495, 1310, 1316, 0, 1315, 1411,
	1426, 427, 1317, 1338, 0, 0, 0, 1327, 1323, 1320,
	1556, 0, 0, 0, 0, 0, 1549, 1552, 497, 498,
	265, 0, 0, 0, 0, 0, 290, 0, 0, 0,
	975, 979, 0, 2119, 2119, 0, 2074, 0, 0, 0,
	0, 251, 0, 254, 0, 0, 0, 259, 260, 261,
	262, 263, 244, 1525, 0, 607, 0, 0, 756, 0,
	786, 788, 791, 827, 829, 846, 872, 873, 996, 0,
	996, 0, 0, 1374, 0, 1449, 1380, 1431, 1432, 0,
	1194, 0, 1690, 1733, 0, 0, -2, 0, 0, 1737,
	0, 0, 0, -2, 0, 0, 0, 1967, 1969, 0,
	2023, 1833, 0, 0, 0, 1837, 1821, 1822, 0, 1941,
	1984, 2013, 2017, 0, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 0, 2063, 2097, 2101, 1914, 1915, 1919, 2077, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 1660, 0, 0, 1985, 1996, 1998, 1775, 1776,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	-2, -2, -2, 1793, 1794, 1795, -2, -2, -2, 0,
	0, 0, 1999, 2001, 2002, 2006, 2007, 0, 1897, 1898,
	1899, 2008, 0, 1413, 1407, 1468, 0, 1554, 1472, 0,
	1468, 1468, 1420, 1514, 0, 0, 1538, 0, 1486, 0,
	1487, 0, 1519, 0, 1494, 1497, 1498, 1508, 0, 1500,
	0, 1503, 0, 1833, -2, 291, 292, 294, 0, 297,
	563, 564, 562, 546, 0, 0, 1564, 0, 0, 1640,
	1644, 1668, 569, 570, 568, 459, 468, 211, 0, 1523,
	0, 0, 0, 0, 2149, 1209, 1210, 2512, 1212, 0,
	0, 0, 0, 181, 1008, 1037, 0, 0, 0, 1029,
	0, 0, 1043, 150, 0, 0, 0, 158, 0, 0,
	155, 0, 164, 169, 0, 0, 0, 0, 1202, 0,
	0, 122, 123, 124, 0, 129, 0, 130, 0, 0,
	0, 0, 0, 0, 1301, 0, 0, 0, 183, 0,
	0, 0, 1191, 0, 0, 205, 0, 0, 0, 1156,
	1157, 1216, 1222, 0, 0, 223, 221, 0, 224, 0,
	227, 228, 0, 223, 217, 0, 0, 1074, 352, 942,
	1044, 0, 1046, 0, 940, 0, 0, 1045, 404, 0,
	411, 0, 0, 1095, 0, 0, 1118, 1129, 1074, 0,
	1167, 1169, 1177, 0, 0, 0, 1312, 1316, 0, 1305,
	1306, 1445, 1318, 1336, -2, 0, 0, 1426, 1344, 1341,
	1347, 1348, 0, 287, 0, 282, 284, 0, 268, 0,
	0, 971, 976, 0, 0, 0, 0, 0, 1329, 1331,
	0, 0, 0, 0, 0, 0, 253, 274, 0, 750,
	774, 837, 874, 995, 0, 0, 876, 0, 0, 1448,
	1435, 1436, 1433, 1194, 1735, 1739, 0, 0, 0, 1741,
	-2, 0, 1763, -2, -2, 1970, 2022, 1812, 1426, 1834,
	1836, 1823, 2016, 1685, 0, 1921, 1918, 0, 1905, 0,
	1858, 1859, 0, 0, 1862, 1864, 1865, 1866, 1624, 1617,
	1616, 1995, 0, 0, 0, 0, 1896, 1408, 0, 1910,
	0, 0, 1476, 1910, 1910, 1515, 0, 1517, 1484, 1477,
	0, 2097, 1510, 1502, 0, 0, 295, 0, 1558, 1563,
	0, 1569, 1639, 212, 144, 145, 0, 1205, 1206, 1207,
	0, 1211, 0, 1214, 147, 0, 1009, 0, 1012, 0,
	0, 0, 0, 1019, 1030, 0, 0, 0, 0, 0,
	1031, 0, 1060, 0, 1182, 1189, 0, -2, 0, 0,
	0, 152, 175, 0, 0, 1231, 0, 0, 180, 180,
	0, 0, 1198, 1200, 0, 0, 0, 0, 132, 0,
	0, 1217, 1223, 1220, 1226, 0, 0, 0, 1228, 192,
	193, 0, 180, 0, 185, 180, 180, 1191, 0, 0,
	0, 214, 0, 0, 0, 0, 216, 280, 223, 0,
	990, 0, 1056, 1048, 1049, 1050, 0, 1055, 1057, 0,
	0, 956, 941, 0, 952, 0, 0, 969, 944, 0,
	409, 932, 1092, 1126, 1074, 0, 1160, 0, 0, 0,
	0, 0, 0, 1314, 1316, 0, 1307, 1308, 1338, 1444,
	0, 0, 0, 1326, 1445, 0, 289, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 255, 0,
	256, 257, 258, 245, 609, 611, 0, 0, 617, 994,
	0, 0, 0, 0, 1434, 1743, -2, -2, 1764, 0,
	2098, 2100, 1426, 0, 1907, 1428, 0, 0, -2, 0,
	0, 0, 1409, 1392, 0, 1467, 1459, 1461, 1463, 2389,
	2190, 2494, 1393, 1394, 1537, 0, 1505, 296, 0, 1565,
	0, 1208, 0, 149, 0, 1013, 1014, 2073, 1016, 0,
	1018, 1020, 1021, 0, 1024, 2121, 0, 1028, 0, 1039,
	1061, 0, 1070, 0, 1184, 1194, 1188, 0, 1186, 1072,
	0, 151, 153, 174, 1191, 0, 154, 163, 0, 0,
	108, 0, 0, 2185, 135, 133, 131, 1195, 110, 0,
	194, 204, 1190, 189, 206, 180, 0, 1218, 1224, 225,
	0, 226, 229, 0, 0, 998, 0, 943, 1047, 0,
	1058, 1059, 946, 0, 945, 0, 0, 0, 0, 0,
	410, 413, 0, 416, 0, 0, 1170, 0, 1176, 0,
	0, 0, 1297, 0, 0, 1309, 1310, 425, 1332, 0,
	0, 1338, 1349, 267, 0, 0, 977, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 978, 1072, 0, 0,
	1036, 0, 272, 252, 0, 613, 0, 615, 0, 875,
	877, 0, 0, 1835, 1925, 0, 0, 1860, 1861, -2,
	0, 1801, 1909, 1911, 0, 0, 0, 0, 0, 1478,
	1559, 1204, 1213, 1011, 1015, 0, 0, 0, 1078, 0,
	0, 1032, 0, 1064, 1065, 990, 0, 1066, 1067, 1068,
	1183, 1437, 1189, 990, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 184, 207, 1191, 222, 239, 0,
	1127, 944, 997, 0, 0, 954, 0, 957, 0, 953,
	950, 951, 942, 0, 414, 415, 0, 1130, 0, 1177,
	0, 0, 1304, 1316, 1298, 1299, 1316, 1311, 1312, 1556,
	1335, 1339, 0, 0, 1070, 1072, 944, 0, 612, 0,
	0, 880, 881, 0, 0, 0, 0, 1920, 1429, 1802,
	0, 0, 1462, 1464, 1465, 1466, 0, 0, 1023, 1083,
	0, 0, 0, 1062, 1063, 998, 0, 1187, 1185, 1041,
	0, 1074, 156, 0, 1072, 0, 1002, 0, 0, 1005,
	0, 0, 136, 2185, 134, 0, 180, 242, 0, 236,
	234, 235, 946, 0, 0, 1052, 1054, 0, 958, 990,
	956, 1128, 1072, 0, 1070, 0, 1293, 1303, 0, 0,
	1314, 0, 290, 290, 990, 1070, 1556, 0, 290, 614,
	616, 1917, 1937, 1926, -2, 2454, 2191, 0, 1937, 1937,
	1912, 1913, 0, 0, 1025, 1079, 1080, 0, 1075, 1076,
	1077, 2120, 1026, 1027, 1060, 0, 0, 1078, 176, 990,
	999, 0, 0, 1000, 0, 0, 139, 0, 141, 208,
	230, 0, 0, 937, 0, 1051, 0, 0, 0, 0,
	998, 946, 1070, 0, 990, 0, 1296, 2082, 1313, 1297,
	0, 269, 270, 998, 990, 1035, 271, 1922, 0, 0,
	1928, 1929, 1930, 1931, 1932, 1923, 1924, 1017, 0, 1081,
	0, 1082, 0, 0, 0, 1556, 1069, 0, 1083, 161,
	1003, 0, 1006, 0, 137, 0, 237, 238, 0, 1053,
	947, 0, 949, 944, 955, 990, 0, 998, 0, 1304,
	1333, 0, 944, 998, 0, 1934, 1935, 0, 0, 0,
	1084, 0, 1087, 1088, 0, 1085, 1040, 0, 1060, 0,
	0, 0, 0, 948, 946, 998, 1072, 944, 1070, 1294,
	0, 1556, 944, 1933, 1936, 1927, 1022, 1086, 1089, 1090,
	1071, 1042, 0, 0, 240, 0, 993, 938, 944, 1070,
	1556, 990, 1556, 1033, 1556, 998, 0, 0, 989, 991,
	992, 1556, 990, 1173, 998, 1334, 1034, 1004, 0, 241,
	1171, 998, 944, 0, 944, 1556, 0, 1556, 1174, 998,
	1172, 1007,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 560, 3, 566, 561, 3,
	571, 572, 564, 562, 576, 563, 573, 565, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 579, 3,
	552, 554, 553, 557, 575, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 569, 3, 570, 567, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 577, 559, 578, 555,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 556,
	57895, 558, 57896, 568, 57897, 574, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1279
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1289
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1290
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1306
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1385
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1411
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1424
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1441
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1445
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1449
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1501
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvive{
				Name:    tree.Name(sqlDollar[3].str),
				Survive: sqlDollar[4].union.survive(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1561
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1565
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1575
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1581
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1590
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1601
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1605
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1619
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1633
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1643
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1654
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1661
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1673
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1680
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1688
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1697
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1708
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1716
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1727
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1737
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1747
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1756
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1767
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1773
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1799
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1804
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1927
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1933
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1985
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = nil
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2146
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2188
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2193
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2200
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2239
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 214:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2322
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2330
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2357
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = nil
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = nil
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2583
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2627
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2707
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2716
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2722
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2727
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2732
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2737
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2742
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2773
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = nil
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2849
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2879
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2899
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2900
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2901
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3013
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3032
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3037
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3052
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3053
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3054
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3055
		{
			return helpWith(sqllex, "CREATE")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3071
		{
			return unimplemented(sqllex, "create access method")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3072
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			return unimplemented(sqllex, "create cast")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3074
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3075
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3076
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3077
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3078
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3080
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3081
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3082
		{
			return unimplemented(sqllex, "create operator")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			return unimplemented(sqllex, "create publication")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3084
		{
			return unimplemented(sqllex, "create rule")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3085
		{
			return unimplemented(sqllex, "create server")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3092
		{
		}
	case 362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3093
		{
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3096
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3097
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3101
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3104
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3113
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3116
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplemented(sqllex, "drop server")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3133
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3134
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3135
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3242
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3277
		{

			sqlVAL.union.val = nil
		}
	case 425:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "DELETE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3304
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3305
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3316
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3318
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3319
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3320
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3331
		{
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			return helpWith(sqllex, "DROP")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3335
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3340
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3588
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3597
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3621
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3629
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3644
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "DELETE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3649
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3651
		{
			return helpWith(sqllex, "INSERT")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3665
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "DELETE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "INSERT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3706
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3739
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "GRANT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "RESET")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "RESET")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "USE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3956
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3957
		{
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3958
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3963
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "USE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4164
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4171
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplemented(sqllex, "set from current")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4200
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = tree.Low
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = tree.Normal
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = tree.High
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4376
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4380
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4385
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4390
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4395
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4400
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.str = "client_encoding"
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.str = "timezone"
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4445
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4468
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4508
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4517
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4634
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4642
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4686
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4702
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = true
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = true
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = false
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4733
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4836
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = false
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = true
		}
	case 846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = false
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4949
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4953
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4974
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4984
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5000
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5043
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5051
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5088
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5111
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowRegions{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.ShowRegions{
				Database: tree.Name(sqlDollar[5].str),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5141
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5151
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5158
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5291
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5343
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "RESUME")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5465
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5575
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5590
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{

			sqlVAL.union.val = nil
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5614
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.str = ""
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5624
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = nil
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5647
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5651
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 954:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5677
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5691
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5706
		{
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5707
		{
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5708
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5800
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5803
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5806
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5807
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5813
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5829
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5834
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.str = ""
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5929
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6025
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6039
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = true
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = false
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6060
		{
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6161
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6172
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6199
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6279
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6280
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6281
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6440
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6449
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6457
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6473
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6483
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6490
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6493
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6496
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6551
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = true
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{

			sqlVAL.union.val = true
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = false
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6576
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6590
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6602
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6614
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6624
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6634
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = nil
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6744
		{
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6763
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6765
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6767
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6769
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6771
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6809
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6827
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6846
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6863
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6880
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6884
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = false
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = true
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = false
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = true
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = false
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6944
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6958
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.str = ""
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.str = ""
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7017
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7023
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.AlterTableRegionalAffinity{
				Name:             sqlDollar[3].union.unresolvedObjectName(),
				RegionalAffinity: sqlDollar[5].union.regionAffinity(),
				IfExists:         false,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.AlterTableRegionalAffinity{
				Name:             sqlDollar[5].union.unresolvedObjectName(),
				RegionalAffinity: sqlDollar[7].union.regionAffinity(),
				IfExists:         true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[6].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[4].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[3].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[6].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7189
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7195
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7207
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7213
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7227
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7233
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7250
		{
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7251
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7254
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7255
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7284
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7293
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7314
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7343
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7351
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7366
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7368
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7392
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7405
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7421
		{
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7441
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7442
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7470
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7485
		{
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7489
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				Regions:         sqlDollar[10].union.nameList(),
				Survive:         sqlDollar[11].union.survive(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				Regions:         sqlDollar[13].union.nameList(),
				Survive:         sqlDollar[14].union.survive(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7574
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.SurviveRegionFailure
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.SurviveAvailabilityZoneFailure
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.str = ""
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.str = ""
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.str = ""
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.str = ""
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7653
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7666
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7667
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7696
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7714
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7727
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7803
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7807
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7845
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7877
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7898
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7913
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8057
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8092
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8093
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8094
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8155
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8199
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8215
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = true
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = false
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8268
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8269
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = nil
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8282
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8283
		{
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = true
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = false
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = false
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = true
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8313
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8317
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8358
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8379
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8384
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8413
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8446
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8501
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8505
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8506
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8540
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8541
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8542
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8572
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8574
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8589
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8611
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8632
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8644
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8663
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8702
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8712
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8747
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8758
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8788
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8821
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = nil
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = true
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = false
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.str = tree.AstFull
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.str = tree.AstRight
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.str = tree.AstInner
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8941
		{
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.str = tree.AstHash
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.str = ""
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9010
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9033
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9039
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9045
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9055
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = true
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = false
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = true
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = false
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9104
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9117
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9125
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9126
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9144
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9154
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9174
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9183
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9235
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9236
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9240
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9241
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9246
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9248
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9257
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9258
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9260
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9262
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9264
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9269
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9270
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = types.Geography
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9285
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9293
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9327
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = nil
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = types.Int2
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = types.Int
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = types.Float4
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = types.Float
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9370
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9378
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = types.Bool
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = types.Float
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9419
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9425
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9447
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = types.String
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = true
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = false
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = types.Date
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9496
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9504
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9518
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9527
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9535
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9552
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = true
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = false
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = false
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = types.Interval
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9576
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = nil
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9705
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9765
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10017
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10083
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10105
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10304
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10330
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10339
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10354
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10384
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10395
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10396
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10420
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10486
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10616
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10625
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10643
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10652
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10657
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10667
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10682
		{
			return unimplemented(sqllex, "treat")
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10703
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.str = ""
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10844
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10857
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10954
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = tree.Any
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = tree.Some
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = tree.All
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = tree.Div
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = tree.LT
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = tree.GT
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = tree.LE
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = tree.GE
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = tree.NE
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = tree.Like
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11315
		{
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11316
		{
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11388
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11469
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11485
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11514
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11522
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11534
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11747
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11767
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.str = ""
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
