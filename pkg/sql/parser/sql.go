// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12555

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1435,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 369,
	-2, 0,
	-1, 73,
	236, 221,
	498, 221,
	-2, 0,
	-1, 84,
	224, 1196,
	238, 1196,
	254, 365,
	380, 365,
	390, 975,
	425, 365,
	437, 975,
	482, 975,
	509, 365,
	535, 975,
	-2, 0,
	-1, 90,
	130, 1435,
	231, 1435,
	520, 1435,
	521, 1435,
	-2, 0,
	-1, 106,
	147, 1406,
	166, 1406,
	179, 1406,
	234, 1406,
	267, 1406,
	332, 1406,
	342, 1406,
	515, 1406,
	-2, 1377,
	-1, 145,
	155, 840,
	253, 840,
	383, 807,
	442, 807,
	481, 807,
	501, 840,
	503, 807,
	-2, 0,
	-1, 147,
	4, 1437,
	21, 1437,
	22, 1437,
	23, 1437,
	24, 1437,
	25, 1437,
	26, 1437,
	27, 1437,
	28, 1437,
	30, 1437,
	31, 1437,
	37, 1437,
	42, 1437,
	43, 1437,
	45, 1437,
	46, 1437,
	47, 1437,
	48, 1437,
	49, 1437,
	50, 1437,
	51, 1437,
	53, 1437,
	54, 1437,
	55, 1437,
	56, 1437,
	58, 1437,
	59, 1437,
	60, 1437,
	61, 1437,
	62, 1437,
	63, 1437,
	64, 1437,
	68, 1437,
	69, 1437,
	70, 1437,
	71, 1437,
	73, 1437,
	74, 1437,
	75, 1437,
	79, 1437,
	80, 1437,
	81, 1437,
	82, 1437,
	83, 1437,
	84, 1437,
	85, 1437,
	88, 1437,
	89, 1437,
	90, 1437,
	91, 1437,
	92, 1437,
	94, 1437,
	96, 1437,
	97, 1437,
	98, 1437,
	99, 1437,
	100, 1437,
	101, 1437,
	103, 1437,
	104, 1437,
	105, 1437,
	107, 1437,
	108, 1437,
	116, 1437,
	117, 1437,
	118, 1437,
	119, 1437,
	121, 1437,
	122, 1437,
	123, 1437,
	125, 1437,
	126, 1437,
	127, 1437,
	129, 1437,
	130, 1437,
	132, 1437,
	133, 1437,
	134, 1437,
	137, 1437,
	138, 1437,
	139, 1437,
	141, 1437,
	142, 1437,
	144, 1437,
	145, 1437,
	146, 1437,
	148, 1437,
	149, 1437,
	150, 1437,
	151, 1437,
	152, 1437,
	153, 1437,
	154, 1437,
	155, 1437,
	156, 1437,
	157, 1437,
	158, 1437,
	159, 1437,
	160, 1437,
	161, 1437,
	162, 1437,
	163, 1437,
	165, 1437,
	171, 1437,
	172, 1437,
	173, 1437,
	174, 1437,
	178, 1437,
	180, 1437,
	184, 1437,
	185, 1437,
	186, 1437,
	187, 1437,
	188, 1437,
	189, 1437,
	190, 1437,
	191, 1437,
	192, 1437,
	193, 1437,
	194, 1437,
	195, 1437,
	196, 1437,
	198, 1437,
	199, 1437,
	201, 1437,
	202, 1437,
	204, 1437,
	205, 1437,
	206, 1437,
	207, 1437,
	208, 1437,
	209, 1437,
	210, 1437,
	211, 1437,
	212, 1437,
	214, 1437,
	215, 1437,
	217, 1437,
	218, 1437,
	219, 1437,
	220, 1437,
	224, 1437,
	225, 1437,
	226, 1437,
	227, 1437,
	228, 1437,
	231, 1437,
	232, 1437,
	233, 1437,
	235, 1437,
	237, 1437,
	238, 1437,
	240, 1437,
	242, 1437,
	243, 1437,
	244, 1437,
	246, 1437,
	250, 1437,
	251, 1437,
	252, 1437,
	253, 1437,
	254, 1437,
	255, 1437,
	257, 1437,
	258, 1437,
	259, 1437,
	261, 1437,
	262, 1437,
	264, 1437,
	265, 1437,
	268, 1437,
	272, 1437,
	273, 1437,
	274, 1437,
	277, 1437,
	278, 1437,
	279, 1437,
	280, 1437,
	282, 1437,
	283, 1437,
	284, 1437,
	285, 1437,
	286, 1437,
	287, 1437,
	288, 1437,
	289, 1437,
	290, 1437,
	291, 1437,
	292, 1437,
	293, 1437,
	294, 1437,
	295, 1437,
	296, 1437,
	297, 1437,
	298, 1437,
	299, 1437,
	300, 1437,
	301, 1437,
	302, 1437,
	303, 1437,
	305, 1437,
	307, 1437,
	308, 1437,
	309, 1437,
	310, 1437,
	311, 1437,
	312, 1437,
	313, 1437,
	314, 1437,
	315, 1437,
	316, 1437,
	317, 1437,
	318, 1437,
	320, 1437,
	322, 1437,
	324, 1437,
	325, 1437,
	327, 1437,
	328, 1437,
	329, 1437,
	330, 1437,
	331, 1437,
	334, 1437,
	337, 1437,
	338, 1437,
	339, 1437,
	340, 1437,
	343, 1437,
	344, 1437,
	345, 1437,
	347, 1437,
	349, 1437,
	350, 1437,
	351, 1437,
	352, 1437,
	353, 1437,
	354, 1437,
	355, 1437,
	356, 1437,
	357, 1437,
	358, 1437,
	359, 1437,
	360, 1437,
	362, 1437,
	363, 1437,
	364, 1437,
	365, 1437,
	366, 1437,
	367, 1437,
	368, 1437,
	369, 1437,
	370, 1437,
	371, 1437,
	372, 1437,
	373, 1437,
	374, 1437,
	375, 1437,
	376, 1437,
	378, 1437,
	379, 1437,
	381, 1437,
	382, 1437,
	383, 1437,
	384, 1437,
	385, 1437,
	386, 1437,
	387, 1437,
	388, 1437,
	389, 1437,
	390, 1437,
	391, 1437,
	392, 1437,
	394, 1437,
	396, 1437,
	397, 1437,
	398, 1437,
	403, 1437,
	405, 1437,
	406, 1437,
	407, 1437,
	408, 1437,
	409, 1437,
	410, 1437,
	411, 1437,
	412, 1437,
	414, 1437,
	415, 1437,
	416, 1437,
	418, 1437,
	419, 1437,
	420, 1437,
	421, 1437,
	422, 1437,
	423, 1437,
	425, 1437,
	426, 1437,
	427, 1437,
	428, 1437,
	429, 1437,
	430, 1437,
	431, 1437,
	432, 1437,
	433, 1437,
	434, 1437,
	435, 1437,
	437, 1437,
	438, 1437,
	439, 1437,
	440, 1437,
	441, 1437,
	442, 1437,
	444, 1437,
	445, 1437,
	446, 1437,
	447, 1437,
	448, 1437,
	449, 1437,
	451, 1437,
	452, 1437,
	453, 1437,
	454, 1437,
	455, 1437,
	456, 1437,
	457, 1437,
	459, 1437,
	461, 1437,
	462, 1437,
	463, 1437,
	464, 1437,
	465, 1437,
	466, 1437,
	467, 1437,
	468, 1437,
	469, 1437,
	470, 1437,
	471, 1437,
	472, 1437,
	473, 1437,
	474, 1437,
	475, 1437,
	477, 1437,
	478, 1437,
	480, 1437,
	481, 1437,
	483, 1437,
	484, 1437,
	485, 1437,
	486, 1437,
	487, 1437,
	488, 1437,
	489, 1437,
	490, 1437,
	491, 1437,
	493, 1437,
	494, 1437,
	495, 1437,
	496, 1437,
	497, 1437,
	499, 1437,
	501, 1437,
	502, 1437,
	503, 1437,
	504, 1437,
	505, 1437,
	506, 1437,
	508, 1437,
	509, 1437,
	510, 1437,
	511, 1437,
	513, 1437,
	514, 1437,
	517, 1437,
	518, 1437,
	519, 1437,
	520, 1437,
	521, 1437,
	522, 1437,
	523, 1437,
	525, 1437,
	528, 1437,
	529, 1437,
	530, 1437,
	531, 1437,
	532, 1437,
	533, 1437,
	535, 1437,
	536, 1437,
	537, 1437,
	538, 1437,
	543, 1437,
	544, 1437,
	545, 1437,
	546, 1437,
	547, 1437,
	548, 1437,
	-2, 0,
	-1, 148,
	1, 1293,
	128, 1293,
	242, 1293,
	321, 1293,
	378, 1293,
	387, 1293,
	552, 1293,
	576, 1293,
	-2, 0,
	-1, 150,
	1, 1293,
	576, 1293,
	-2, 0,
	-1, 151,
	1, 1293,
	576, 1293,
	-2, 0,
	-1, 152,
	1, 1293,
	498, 1293,
	576, 1293,
	-2, 0,
	-1, 181,
	147, 1405,
	166, 1405,
	179, 1405,
	234, 1405,
	267, 1405,
	332, 1405,
	342, 1405,
	515, 1405,
	-2, 1380,
	-1, 224,
	4, 1444,
	5, 1444,
	6, 1444,
	7, 1444,
	8, 1444,
	9, 1444,
	10, 1444,
	21, 1444,
	22, 1444,
	23, 1444,
	24, 1444,
	25, 1444,
	26, 1444,
	27, 1444,
	28, 1444,
	30, 1444,
	31, 1444,
	37, 1444,
	38, 1444,
	42, 1444,
	43, 1444,
	44, 1444,
	45, 1444,
	46, 1444,
	47, 1444,
	48, 1444,
	49, 1444,
	50, 1444,
	51, 1444,
	53, 1444,
	54, 1444,
	55, 1444,
	56, 1444,
	58, 1444,
	59, 1444,
	60, 1444,
	61, 1444,
	62, 1444,
	63, 1444,
	64, 1444,
	65, 1444,
	66, 1444,
	67, 1444,
	68, 1444,
	69, 1444,
	70, 1444,
	71, 1444,
	73, 1444,
	74, 1444,
	75, 1444,
	77, 1444,
	79, 1444,
	80, 1444,
	81, 1444,
	82, 1444,
	83, 1444,
	84, 1444,
	85, 1444,
	88, 1444,
	89, 1444,
	90, 1444,
	91, 1444,
	92, 1444,
	94, 1444,
	96, 1444,
	97, 1444,
	98, 1444,
	99, 1444,
	100, 1444,
	101, 1444,
	103, 1444,
	104, 1444,
	105, 1444,
	106, 1444,
	107, 1444,
	108, 1444,
	109, 1444,
	110, 1444,
	111, 1444,
	112, 1444,
	113, 1444,
	114, 1444,
	115, 1444,
	116, 1444,
	117, 1444,
	118, 1444,
	119, 1444,
	120, 1444,
	121, 1444,
	122, 1444,
	123, 1444,
	124, 1444,
	125, 1444,
	126, 1444,
	127, 1444,
	129, 1444,
	130, 1444,
	132, 1444,
	133, 1444,
	134, 1444,
	137, 1444,
	138, 1444,
	139, 1444,
	141, 1444,
	142, 1444,
	144, 1444,
	145, 1444,
	146, 1444,
	148, 1444,
	149, 1444,
	150, 1444,
	151, 1444,
	152, 1444,
	153, 1444,
	154, 1444,
	155, 1444,
	156, 1444,
	157, 1444,
	158, 1444,
	159, 1444,
	160, 1444,
	161, 1444,
	162, 1444,
	163, 1444,
	164, 1444,
	165, 1444,
	171, 1444,
	172, 1444,
	173, 1444,
	174, 1444,
	178, 1444,
	180, 1444,
	183, 1444,
	184, 1444,
	185, 1444,
	186, 1444,
	187, 1444,
	188, 1444,
	189, 1444,
	190, 1444,
	191, 1444,
	192, 1444,
	193, 1444,
	194, 1444,
	195, 1444,
	196, 1444,
	198, 1444,
	199, 1444,
	201, 1444,
	202, 1444,
	204, 1444,
	205, 1444,
	206, 1444,
	207, 1444,
	208, 1444,
	209, 1444,
	210, 1444,
	211, 1444,
	212, 1444,
	213, 1444,
	214, 1444,
	215, 1444,
	217, 1444,
	218, 1444,
	219, 1444,
	220, 1444,
	224, 1444,
	225, 1444,
	226, 1444,
	227, 1444,
	228, 1444,
	230, 1444,
	231, 1444,
	232, 1444,
	233, 1444,
	235, 1444,
	237, 1444,
	238, 1444,
	239, 1444,
	240, 1444,
	241, 1444,
	242, 1444,
	243, 1444,
	244, 1444,
	245, 1444,
	246, 1444,
	250, 1444,
	251, 1444,
	252, 1444,
	253, 1444,
	254, 1444,
	255, 1444,
	257, 1444,
	258, 1444,
	259, 1444,
	261, 1444,
	262, 1444,
	263, 1444,
	264, 1444,
	265, 1444,
	266, 1444,
	268, 1444,
	272, 1444,
	273, 1444,
	274, 1444,
	275, 1444,
	276, 1444,
	277, 1444,
	278, 1444,
	279, 1444,
	280, 1444,
	282, 1444,
	283, 1444,
	284, 1444,
	285, 1444,
	286, 1444,
	287, 1444,
	288, 1444,
	289, 1444,
	290, 1444,
	291, 1444,
	292, 1444,
	293, 1444,
	294, 1444,
	295, 1444,
	296, 1444,
	297, 1444,
	298, 1444,
	299, 1444,
	300, 1444,
	301, 1444,
	302, 1444,
	303, 1444,
	305, 1444,
	306, 1444,
	307, 1444,
	308, 1444,
	309, 1444,
	310, 1444,
	311, 1444,
	312, 1444,
	313, 1444,
	314, 1444,
	315, 1444,
	316, 1444,
	317, 1444,
	318, 1444,
	319, 1444,
	320, 1444,
	321, 1444,
	322, 1444,
	323, 1444,
	324, 1444,
	325, 1444,
	326, 1444,
	327, 1444,
	328, 1444,
	329, 1444,
	330, 1444,
	331, 1444,
	334, 1444,
	338, 1444,
	339, 1444,
	340, 1444,
	343, 1444,
	344, 1444,
	345, 1444,
	346, 1444,
	347, 1444,
	348, 1444,
	349, 1444,
	350, 1444,
	351, 1444,
	352, 1444,
	353, 1444,
	354, 1444,
	355, 1444,
	356, 1444,
	357, 1444,
	358, 1444,
	359, 1444,
	360, 1444,
	362, 1444,
	363, 1444,
	364, 1444,
	365, 1444,
	366, 1444,
	367, 1444,
	368, 1444,
	369, 1444,
	370, 1444,
	371, 1444,
	372, 1444,
	373, 1444,
	374, 1444,
	375, 1444,
	376, 1444,
	378, 1444,
	379, 1444,
	381, 1444,
	382, 1444,
	383, 1444,
	384, 1444,
	385, 1444,
	386, 1444,
	387, 1444,
	388, 1444,
	389, 1444,
	390, 1444,
	391, 1444,
	392, 1444,
	394, 1444,
	396, 1444,
	397, 1444,
	398, 1444,
	403, 1444,
	405, 1444,
	406, 1444,
	407, 1444,
	408, 1444,
	409, 1444,
	410, 1444,
	411, 1444,
	412, 1444,
	414, 1444,
	415, 1444,
	416, 1444,
	417, 1444,
	418, 1444,
	419, 1444,
	420, 1444,
	421, 1444,
	422, 1444,
	423, 1444,
	425, 1444,
	426, 1444,
	427, 1444,
	428, 1444,
	429, 1444,
	430, 1444,
	431, 1444,
	432, 1444,
	433, 1444,
	434, 1444,
	435, 1444,
	437, 1444,
	438, 1444,
	439, 1444,
	440, 1444,
	441, 1444,
	442, 1444,
	443, 1444,
	444, 1444,
	445, 1444,
	446, 1444,
	447, 1444,
	448, 1444,
	449, 1444,
	450, 1444,
	451, 1444,
	452, 1444,
	453, 1444,
	454, 1444,
	455, 1444,
	456, 1444,
	457, 1444,
	459, 1444,
	461, 1444,
	462, 1444,
	463, 1444,
	464, 1444,
	465, 1444,
	466, 1444,
	467, 1444,
	468, 1444,
	469, 1444,
	470, 1444,
	471, 1444,
	472, 1444,
	473, 1444,
	474, 1444,
	475, 1444,
	477, 1444,
	478, 1444,
	479, 1444,
	480, 1444,
	481, 1444,
	483, 1444,
	484, 1444,
	485, 1444,
	486, 1444,
	487, 1444,
	488, 1444,
	489, 1444,
	490, 1444,
	491, 1444,
	493, 1444,
	494, 1444,
	495, 1444,
	496, 1444,
	497, 1444,
	499, 1444,
	501, 1444,
	502, 1444,
	503, 1444,
	504, 1444,
	505, 1444,
	506, 1444,
	507, 1444,
	508, 1444,
	509, 1444,
	510, 1444,
	511, 1444,
	513, 1444,
	514, 1444,
	516, 1444,
	517, 1444,
	518, 1444,
	519, 1444,
	520, 1444,
	521, 1444,
	522, 1444,
	523, 1444,
	524, 1444,
	525, 1444,
	528, 1444,
	529, 1444,
	530, 1444,
	531, 1444,
	532, 1444,
	533, 1444,
	535, 1444,
	536, 1444,
	537, 1444,
	538, 1444,
	543, 1444,
	544, 1444,
	545, 1444,
	546, 1444,
	547, 1444,
	548, 1444,
	549, 1444,
	557, 1444,
	564, 1444,
	565, 1444,
	566, 1444,
	573, 1444,
	577, 1444,
	-2, 0,
	-1, 712,
	4, 1194,
	21, 1194,
	22, 1194,
	23, 1194,
	24, 1194,
	25, 1194,
	26, 1194,
	27, 1194,
	28, 1194,
	30, 1194,
	31, 1194,
	37, 1194,
	42, 1194,
	43, 1194,
	45, 1194,
	46, 1194,
	47, 1194,
	48, 1194,
	49, 1194,
	50, 1194,
	51, 1194,
	53, 1194,
	54, 1194,
	55, 1194,
	56, 1194,
	58, 1194,
	59, 1194,
	60, 1194,
	61, 1194,
	62, 1194,
	63, 1194,
	64, 1194,
	68, 1194,
	69, 1194,
	70, 1194,
	71, 1194,
	73, 1194,
	74, 1194,
	75, 1194,
	79, 1194,
	80, 1194,
	81, 1194,
	82, 1194,
	83, 1194,
	84, 1194,
	85, 1194,
	88, 1194,
	89, 1194,
	90, 1194,
	91, 1194,
	92, 1194,
	94, 1194,
	96, 1194,
	97, 1194,
	98, 1194,
	99, 1194,
	100, 1194,
	101, 1194,
	103, 1194,
	104, 1194,
	105, 1194,
	107, 1194,
	108, 1194,
	116, 1194,
	117, 1194,
	118, 1194,
	119, 1194,
	121, 1194,
	122, 1194,
	123, 1194,
	125, 1194,
	126, 1194,
	127, 1194,
	129, 1194,
	130, 1194,
	132, 1194,
	133, 1194,
	134, 1194,
	137, 1194,
	138, 1194,
	139, 1194,
	141, 1194,
	142, 1194,
	144, 1194,
	145, 1194,
	146, 1194,
	148, 1194,
	149, 1194,
	150, 1194,
	151, 1194,
	152, 1194,
	153, 1194,
	154, 1194,
	155, 1194,
	156, 1194,
	157, 1194,
	158, 1194,
	159, 1194,
	160, 1194,
	161, 1194,
	162, 1194,
	163, 1194,
	165, 1194,
	171, 1194,
	172, 1194,
	173, 1194,
	174, 1194,
	178, 1194,
	180, 1194,
	184, 1194,
	185, 1194,
	186, 1194,
	187, 1194,
	188, 1194,
	189, 1194,
	190, 1194,
	191, 1194,
	192, 1194,
	193, 1194,
	194, 1194,
	195, 1194,
	196, 1194,
	198, 1194,
	199, 1194,
	201, 1194,
	202, 1194,
	204, 1194,
	205, 1194,
	206, 1194,
	207, 1194,
	208, 1194,
	209, 1194,
	210, 1194,
	211, 1194,
	212, 1194,
	214, 1194,
	215, 1194,
	217, 1194,
	218, 1194,
	219, 1194,
	220, 1194,
	224, 1194,
	225, 1194,
	226, 1194,
	227, 1194,
	228, 1194,
	231, 1194,
	232, 1194,
	233, 1194,
	235, 1194,
	237, 1194,
	238, 1194,
	240, 1194,
	242, 1194,
	243, 1194,
	244, 1194,
	246, 1194,
	250, 1194,
	251, 1194,
	252, 1194,
	253, 1194,
	254, 1194,
	255, 1194,
	257, 1194,
	258, 1194,
	259, 1194,
	261, 1194,
	262, 1194,
	264, 1194,
	265, 1194,
	268, 1194,
	272, 1194,
	273, 1194,
	274, 1194,
	277, 1194,
	278, 1194,
	279, 1194,
	280, 1194,
	282, 1194,
	283, 1194,
	284, 1194,
	285, 1194,
	286, 1194,
	287, 1194,
	288, 1194,
	289, 1194,
	290, 1194,
	291, 1194,
	292, 1194,
	293, 1194,
	294, 1194,
	295, 1194,
	296, 1194,
	297, 1194,
	298, 1194,
	299, 1194,
	300, 1194,
	301, 1194,
	302, 1194,
	303, 1194,
	305, 1194,
	307, 1194,
	308, 1194,
	309, 1194,
	310, 1194,
	311, 1194,
	312, 1194,
	313, 1194,
	314, 1194,
	315, 1194,
	316, 1194,
	317, 1194,
	318, 1194,
	320, 1194,
	322, 1194,
	324, 1194,
	325, 1194,
	327, 1194,
	328, 1194,
	329, 1194,
	330, 1194,
	331, 1194,
	334, 1194,
	338, 1194,
	339, 1194,
	340, 1194,
	343, 1194,
	344, 1194,
	345, 1194,
	347, 1194,
	349, 1194,
	350, 1194,
	351, 1194,
	352, 1194,
	353, 1194,
	354, 1194,
	355, 1194,
	356, 1194,
	357, 1194,
	358, 1194,
	359, 1194,
	360, 1194,
	362, 1194,
	363, 1194,
	364, 1194,
	365, 1194,
	366, 1194,
	367, 1194,
	368, 1194,
	369, 1194,
	370, 1194,
	371, 1194,
	372, 1194,
	373, 1194,
	374, 1194,
	375, 1194,
	376, 1194,
	378, 1194,
	379, 1194,
	381, 1194,
	382, 1194,
	383, 1194,
	384, 1194,
	385, 1194,
	386, 1194,
	387, 1194,
	388, 1194,
	389, 1194,
	390, 1194,
	391, 1194,
	392, 1194,
	394, 1194,
	396, 1194,
	397, 1194,
	398, 1194,
	403, 1194,
	405, 1194,
	406, 1194,
	407, 1194,
	408, 1194,
	409, 1194,
	410, 1194,
	411, 1194,
	412, 1194,
	414, 1194,
	415, 1194,
	416, 1194,
	418, 1194,
	419, 1194,
	420, 1194,
	421, 1194,
	422, 1194,
	423, 1194,
	425, 1194,
	426, 1194,
	427, 1194,
	428, 1194,
	429, 1194,
	430, 1194,
	431, 1194,
	432, 1194,
	433, 1194,
	434, 1194,
	435, 1194,
	437, 1194,
	438, 1194,
	439, 1194,
	440, 1194,
	441, 1194,
	442, 1194,
	444, 1194,
	445, 1194,
	446, 1194,
	447, 1194,
	448, 1194,
	449, 1194,
	451, 1194,
	452, 1194,
	453, 1194,
	454, 1194,
	455, 1194,
	456, 1194,
	457, 1194,
	459, 1194,
	461, 1194,
	462, 1194,
	463, 1194,
	464, 1194,
	465, 1194,
	466, 1194,
	467, 1194,
	468, 1194,
	469, 1194,
	470, 1194,
	471, 1194,
	472, 1194,
	473, 1194,
	474, 1194,
	475, 1194,
	477, 1194,
	478, 1194,
	480, 1194,
	481, 1194,
	483, 1194,
	484, 1194,
	485, 1194,
	486, 1194,
	487, 1194,
	488, 1194,
	489, 1194,
	490, 1194,
	491, 1194,
	493, 1194,
	494, 1194,
	495, 1194,
	496, 1194,
	497, 1194,
	499, 1194,
	501, 1194,
	502, 1194,
	503, 1194,
	504, 1194,
	505, 1194,
	506, 1194,
	508, 1194,
	509, 1194,
	510, 1194,
	511, 1194,
	513, 1194,
	514, 1194,
	517, 1194,
	518, 1194,
	519, 1194,
	520, 1194,
	521, 1194,
	522, 1194,
	523, 1194,
	525, 1194,
	528, 1194,
	529, 1194,
	530, 1194,
	531, 1194,
	532, 1194,
	533, 1194,
	535, 1194,
	536, 1194,
	537, 1194,
	538, 1194,
	543, 1194,
	544, 1194,
	545, 1194,
	546, 1194,
	547, 1194,
	548, 1194,
	-2, 0,
	-1, 731,
	182, 2201,
	498, 2201,
	556, 2201,
	575, 2201,
	-2, 0,
	-1, 732,
	182, 2302,
	498, 2302,
	556, 2302,
	575, 2302,
	-2, 0,
	-1, 733,
	182, 2188,
	498, 2188,
	556, 2188,
	575, 2188,
	-2, 0,
	-1, 735,
	182, 2431,
	498, 2431,
	556, 2431,
	575, 2431,
	-2, 0,
	-1, 737,
	182, 2470,
	498, 2470,
	556, 2470,
	575, 2470,
	-2, 0,
	-1, 744,
	182, 2329,
	498, 2329,
	556, 2329,
	575, 2329,
	-2, 643,
	-1, 773,
	575, 2137,
	578, 2137,
	-2, 906,
	-1, 774,
	575, 2139,
	578, 2139,
	-2, 907,
	-1, 775,
	575, 2138,
	578, 2138,
	-2, 908,
	-1, 776,
	578, 2064,
	-2, 909,
	-1, 799,
	179, 235,
	-2, 0,
	-1, 822,
	44, 2111,
	-2, 0,
	-1, 823,
	535, 1172,
	-2, 976,
	-1, 839,
	4, 1573,
	21, 1573,
	22, 1573,
	23, 1573,
	24, 1573,
	25, 1573,
	26, 1573,
	27, 1573,
	28, 1573,
	30, 1573,
	31, 1573,
	37, 1573,
	42, 1573,
	43, 1573,
	45, 1573,
	46, 1573,
	47, 1573,
	48, 1573,
	49, 1573,
	50, 1573,
	51, 1573,
	53, 1573,
	54, 1573,
	55, 1573,
	56, 1573,
	58, 1573,
	59, 1573,
	60, 1573,
	61, 1573,
	62, 1573,
	63, 1573,
	64, 1573,
	68, 1573,
	69, 1573,
	70, 1573,
	71, 1573,
	73, 1573,
	74, 1573,
	75, 1573,
	79, 1573,
	80, 1573,
	81, 1573,
	82, 1573,
	83, 1573,
	84, 1573,
	85, 1573,
	88, 1573,
	89, 1573,
	90, 1573,
	91, 1573,
	92, 1573,
	94, 1573,
	96, 1573,
	97, 1573,
	98, 1573,
	99, 1573,
	100, 1573,
	101, 1573,
	103, 1573,
	104, 1573,
	105, 1573,
	107, 1573,
	108, 1573,
	116, 1573,
	117, 1573,
	118, 1573,
	119, 1573,
	121, 1573,
	122, 1573,
	123, 1573,
	125, 1573,
	126, 1573,
	127, 1573,
	129, 1573,
	130, 1573,
	132, 1573,
	133, 1573,
	134, 1573,
	137, 1573,
	138, 1573,
	139, 1573,
	141, 1573,
	142, 1573,
	144, 1573,
	145, 1573,
	146, 1573,
	148, 1573,
	149, 1573,
	150, 1573,
	151, 1573,
	152, 1573,
	153, 1573,
	154, 1573,
	155, 1573,
	156, 1573,
	157, 1573,
	158, 1573,
	159, 1573,
	160, 1573,
	161, 1573,
	162, 1573,
	163, 1573,
	165, 1573,
	171, 1573,
	172, 1573,
	173, 1573,
	174, 1573,
	178, 1573,
	180, 1573,
	184, 1573,
	185, 1573,
	186, 1573,
	187, 1573,
	188, 1573,
	189, 1573,
	190, 1573,
	191, 1573,
	192, 1573,
	193, 1573,
	194, 1573,
	195, 1573,
	196, 1573,
	198, 1573,
	199, 1573,
	201, 1573,
	202, 1573,
	204, 1573,
	205, 1573,
	206, 1573,
	207, 1573,
	208, 1573,
	209, 1573,
	210, 1573,
	211, 1573,
	212, 1573,
	214, 1573,
	215, 1573,
	217, 1573,
	218, 1573,
	219, 1573,
	220, 1573,
	224, 1573,
	225, 1573,
	226, 1573,
	227, 1573,
	228, 1573,
	231, 1573,
	232, 1573,
	233, 1573,
	235, 1573,
	237, 1573,
	238, 1573,
	240, 1573,
	242, 1573,
	243, 1573,
	244, 1573,
	246, 1573,
	250, 1573,
	251, 1573,
	252, 1573,
	253, 1573,
	254, 1573,
	255, 1573,
	257, 1573,
	258, 1573,
	259, 1573,
	261, 1573,
	262, 1573,
	264, 1573,
	265, 1573,
	268, 1573,
	272, 1573,
	273, 1573,
	274, 1573,
	277, 1573,
	278, 1573,
	279, 1573,
	280, 1573,
	282, 1573,
	283, 1573,
	284, 1573,
	285, 1573,
	286, 1573,
	287, 1573,
	288, 1573,
	289, 1573,
	290, 1573,
	291, 1573,
	292, 1573,
	293, 1573,
	294, 1573,
	295, 1573,
	296, 1573,
	297, 1573,
	298, 1573,
	299, 1573,
	300, 1573,
	301, 1573,
	302, 1573,
	303, 1573,
	305, 1573,
	307, 1573,
	308, 1573,
	309, 1573,
	310, 1573,
	311, 1573,
	312, 1573,
	313, 1573,
	314, 1573,
	315, 1573,
	316, 1573,
	317, 1573,
	318, 1573,
	320, 1573,
	322, 1573,
	324, 1573,
	325, 1573,
	327, 1573,
	328, 1573,
	329, 1573,
	330, 1573,
	331, 1573,
	334, 1573,
	338, 1573,
	339, 1573,
	340, 1573,
	343, 1573,
	344, 1573,
	345, 1573,
	347, 1573,
	349, 1573,
	350, 1573,
	351, 1573,
	352, 1573,
	353, 1573,
	354, 1573,
	355, 1573,
	356, 1573,
	357, 1573,
	358, 1573,
	359, 1573,
	360, 1573,
	362, 1573,
	363, 1573,
	364, 1573,
	365, 1573,
	366, 1573,
	367, 1573,
	368, 1573,
	369, 1573,
	370, 1573,
	371, 1573,
	372, 1573,
	373, 1573,
	374, 1573,
	375, 1573,
	376, 1573,
	378, 1573,
	379, 1573,
	381, 1573,
	382, 1573,
	383, 1573,
	384, 1573,
	385, 1573,
	386, 1573,
	387, 1573,
	388, 1573,
	389, 1573,
	390, 1573,
	391, 1573,
	392, 1573,
	394, 1573,
	396, 1573,
	397, 1573,
	398, 1573,
	403, 1573,
	405, 1573,
	406, 1573,
	407, 1573,
	408, 1573,
	409, 1573,
	410, 1573,
	411, 1573,
	412, 1573,
	414, 1573,
	415, 1573,
	416, 1573,
	418, 1573,
	419, 1573,
	420, 1573,
	421, 1573,
	422, 1573,
	423, 1573,
	425, 1573,
	426, 1573,
	427, 1573,
	428, 1573,
	429, 1573,
	430, 1573,
	431, 1573,
	432, 1573,
	433, 1573,
	434, 1573,
	435, 1573,
	437, 1573,
	438, 1573,
	439, 1573,
	440, 1573,
	441, 1573,
	442, 1573,
	444, 1573,
	445, 1573,
	446, 1573,
	447, 1573,
	448, 1573,
	449, 1573,
	451, 1573,
	452, 1573,
	453, 1573,
	454, 1573,
	455, 1573,
	456, 1573,
	457, 1573,
	459, 1573,
	461, 1573,
	462, 1573,
	463, 1573,
	464, 1573,
	465, 1573,
	466, 1573,
	467, 1573,
	468, 1573,
	469, 1573,
	470, 1573,
	471, 1573,
	472, 1573,
	473, 1573,
	474, 1573,
	475, 1573,
	477, 1573,
	478, 1573,
	480, 1573,
	481, 1573,
	483, 1573,
	484, 1573,
	485, 1573,
	486, 1573,
	487, 1573,
	488, 1573,
	489, 1573,
	490, 1573,
	491, 1573,
	493, 1573,
	494, 1573,
	495, 1573,
	496, 1573,
	497, 1573,
	499, 1573,
	501, 1573,
	502, 1573,
	503, 1573,
	504, 1573,
	505, 1573,
	506, 1573,
	508, 1573,
	509, 1573,
	510, 1573,
	511, 1573,
	513, 1573,
	514, 1573,
	517, 1573,
	518, 1573,
	519, 1573,
	520, 1573,
	521, 1573,
	522, 1573,
	523, 1573,
	525, 1573,
	528, 1573,
	529, 1573,
	530, 1573,
	531, 1573,
	532, 1573,
	533, 1573,
	535, 1573,
	536, 1573,
	537, 1573,
	538, 1573,
	543, 1573,
	544, 1573,
	545, 1573,
	546, 1573,
	547, 1573,
	548, 1573,
	-2, 0,
	-1, 847,
	254, 369,
	-2, 0,
	-1, 917,
	383, 808,
	442, 808,
	481, 808,
	503, 808,
	-2, 0,
	-1, 918,
	383, 807,
	442, 807,
	481, 807,
	503, 807,
	-2, 747,
	-1, 922,
	1, 854,
	572, 854,
	574, 854,
	576, 854,
	-2, 0,
	-1, 923,
	1, 782,
	572, 782,
	574, 782,
	576, 782,
	-2, 0,
	-1, 924,
	1, 786,
	572, 786,
	574, 786,
	576, 786,
	-2, 0,
	-1, 925,
	1, 905,
	179, 905,
	572, 905,
	574, 905,
	576, 905,
	-2, 0,
	-1, 933,
	1, 813,
	572, 813,
	574, 813,
	576, 813,
	-2, 0,
	-1, 939,
	1, 854,
	572, 854,
	574, 854,
	576, 854,
	-2, 0,
	-1, 940,
	1, 856,
	572, 856,
	574, 856,
	576, 856,
	-2, 0,
	-1, 941,
	1, 859,
	572, 859,
	574, 859,
	576, 859,
	-2, 0,
	-1, 947,
	1, 876,
	572, 876,
	574, 876,
	576, 876,
	-2, 0,
	-1, 948,
	1, 878,
	572, 878,
	574, 878,
	576, 878,
	-2, 0,
	-1, 999,
	166, 1448,
	179, 1448,
	267, 1448,
	332, 1448,
	-2, 1384,
	-1, 1014,
	166, 1447,
	179, 1447,
	267, 1447,
	332, 1447,
	-2, 1381,
	-1, 1040,
	575, 2136,
	-2, 651,
	-1, 1068,
	5, 2128,
	573, 2126,
	-2, 2117,
	-1, 1076,
	5, 2149,
	573, 2146,
	-2, 2137,
	-1, 1077,
	5, 2150,
	573, 2147,
	-2, 2138,
	-1, 1085,
	575, 2134,
	-2, 2116,
	-1, 1086,
	573, 2552,
	-2, 2135,
	-1, 1109,
	573, 2551,
	-2, 2151,
	-1, 1110,
	5, 1648,
	-2, 2522,
	-1, 1111,
	5, 1649,
	-2, 2523,
	-1, 1112,
	5, 1650,
	-2, 2537,
	-1, 1113,
	5, 1651,
	-2, 2501,
	-1, 1114,
	5, 1652,
	-2, 2535,
	-1, 1115,
	5, 1660,
	-2, 2514,
	-1, 1116,
	5, 1647,
	-2, 2510,
	-1, 1117,
	5, 1647,
	-2, 2509,
	-1, 1118,
	5, 1647,
	-2, 2528,
	-1, 1119,
	5, 1658,
	-2, 2503,
	-1, 1120,
	5, 1663,
	-2, 2502,
	-1, 1121,
	5, 1665,
	-2, 2547,
	-1, 1124,
	5, 1687,
	-2, 2540,
	-1, 1125,
	5, 1679,
	-2, 2541,
	-1, 1126,
	5, 1687,
	-2, 2542,
	-1, 1127,
	5, 1683,
	-2, 2543,
	-1, 1128,
	5, 1633,
	-2, 2515,
	-1, 1129,
	5, 1634,
	-2, 2516,
	-1, 1130,
	5, 1635,
	-2, 2504,
	-1, 1158,
	5, 1670,
	-2, 2548,
	-1, 1159,
	5, 1671,
	-2, 2538,
	-1, 1160,
	5, 1672,
	536, 1672,
	-2, 2505,
	-1, 1161,
	5, 1673,
	536, 1673,
	-2, 2506,
	-1, 1198,
	573, 2146,
	-2, 2137,
	-1, 1199,
	573, 2147,
	-2, 2138,
	-1, 1298,
	182, 2470,
	498, 2470,
	556, 2470,
	575, 2470,
	-2, 0,
	-1, 1301,
	1, 629,
	576, 629,
	-2, 1301,
	-1, 1428,
	405, 2112,
	444, 2112,
	566, 2112,
	-2, 2102,
	-1, 1439,
	577, 2112,
	-2, 2113,
	-1, 1444,
	1, 1169,
	572, 1169,
	574, 1169,
	576, 1169,
	-2, 1433,
	-1, 1492,
	390, 975,
	535, 975,
	-2, 364,
	-1, 1508,
	44, 2110,
	-2, 941,
	-1, 1515,
	1, 1169,
	572, 1169,
	574, 1169,
	576, 1169,
	-2, 1433,
	-1, 1523,
	4, 1194,
	21, 1194,
	22, 1194,
	23, 1194,
	24, 1194,
	25, 1194,
	26, 1194,
	27, 1194,
	28, 1194,
	30, 1194,
	31, 1194,
	37, 1194,
	42, 1194,
	43, 1194,
	45, 1194,
	46, 1194,
	47, 1194,
	48, 1194,
	49, 1194,
	50, 1194,
	51, 1194,
	53, 1194,
	54, 1194,
	55, 1194,
	56, 1194,
	58, 1194,
	59, 1194,
	60, 1194,
	61, 1194,
	62, 1194,
	63, 1194,
	64, 1194,
	68, 1194,
	69, 1194,
	70, 1194,
	71, 1194,
	73, 1194,
	74, 1194,
	75, 1194,
	79, 1194,
	80, 1194,
	81, 1194,
	82, 1194,
	83, 1194,
	84, 1194,
	85, 1194,
	88, 1194,
	89, 1194,
	90, 1194,
	91, 1194,
	92, 1194,
	94, 1194,
	96, 1194,
	97, 1194,
	98, 1194,
	99, 1194,
	100, 1194,
	101, 1194,
	103, 1194,
	104, 1194,
	105, 1194,
	107, 1194,
	108, 1194,
	116, 1194,
	117, 1194,
	118, 1194,
	119, 1194,
	121, 1194,
	122, 1194,
	123, 1194,
	125, 1194,
	126, 1194,
	127, 1194,
	129, 1194,
	130, 1194,
	132, 1194,
	133, 1194,
	134, 1194,
	137, 1194,
	138, 1194,
	139, 1194,
	141, 1194,
	142, 1194,
	144, 1194,
	145, 1194,
	146, 1194,
	148, 1194,
	149, 1194,
	150, 1194,
	151, 1194,
	152, 1194,
	153, 1194,
	154, 1194,
	155, 1194,
	156, 1194,
	157, 1194,
	158, 1194,
	159, 1194,
	160, 1194,
	161, 1194,
	162, 1194,
	163, 1194,
	171, 1194,
	172, 1194,
	173, 1194,
	174, 1194,
	178, 1194,
	180, 1194,
	184, 1194,
	185, 1194,
	186, 1194,
	187, 1194,
	188, 1194,
	189, 1194,
	190, 1194,
	191, 1194,
	192, 1194,
	193, 1194,
	194, 1194,
	195, 1194,
	196, 1194,
	198, 1194,
	199, 1194,
	201, 1194,
	202, 1194,
	204, 1194,
	205, 1194,
	206, 1194,
	207, 1194,
	208, 1194,
	209, 1194,
	210, 1194,
	211, 1194,
	212, 1194,
	214, 1194,
	215, 1194,
	217, 1194,
	218, 1194,
	219, 1194,
	220, 1194,
	225, 1194,
	226, 1194,
	227, 1194,
	228, 1194,
	231, 1194,
	232, 1194,
	233, 1194,
	235, 1194,
	237, 1194,
	238, 1194,
	240, 1194,
	242, 1194,
	243, 1194,
	244, 1194,
	246, 1194,
	250, 1194,
	251, 1194,
	252, 1194,
	253, 1194,
	254, 1194,
	255, 1194,
	257, 1194,
	258, 1194,
	259, 1194,
	261, 1194,
	262, 1194,
	264, 1194,
	265, 1194,
	268, 1194,
	272, 1194,
	273, 1194,
	274, 1194,
	277, 1194,
	278, 1194,
	279, 1194,
	280, 1194,
	282, 1194,
	283, 1194,
	284, 1194,
	285, 1194,
	286, 1194,
	287, 1194,
	288, 1194,
	289, 1194,
	290, 1194,
	291, 1194,
	292, 1194,
	293, 1194,
	294, 1194,
	295, 1194,
	296, 1194,
	297, 1194,
	298, 1194,
	299, 1194,
	300, 1194,
	301, 1194,
	302, 1194,
	303, 1194,
	305, 1194,
	307, 1194,
	308, 1194,
	309, 1194,
	310, 1194,
	311, 1194,
	312, 1194,
	313, 1194,
	314, 1194,
	315, 1194,
	316, 1194,
	317, 1194,
	318, 1194,
	320, 1194,
	324, 1194,
	325, 1194,
	327, 1194,
	328, 1194,
	329, 1194,
	330, 1194,
	331, 1194,
	334, 1194,
	336, 1194,
	338, 1194,
	339, 1194,
	340, 1194,
	343, 1194,
	344, 1194,
	345, 1194,
	347, 1194,
	349, 1194,
	350, 1194,
	351, 1194,
	352, 1194,
	353, 1194,
	354, 1194,
	355, 1194,
	356, 1194,
	357, 1194,
	358, 1194,
	359, 1194,
	360, 1194,
	362, 1194,
	363, 1194,
	364, 1194,
	365, 1194,
	366, 1194,
	367, 1194,
	368, 1194,
	369, 1194,
	370, 1194,
	371, 1194,
	372, 1194,
	373, 1194,
	374, 1194,
	375, 1194,
	376, 1194,
	378, 1194,
	379, 1194,
	381, 1194,
	382, 1194,
	383, 1194,
	384, 1194,
	385, 1194,
	386, 1194,
	387, 1194,
	388, 1194,
	389, 1194,
	390, 1194,
	391, 1194,
	392, 1194,
	394, 1194,
	396, 1194,
	397, 1194,
	398, 1194,
	403, 1194,
	405, 1194,
	406, 1194,
	407, 1194,
	408, 1194,
	409, 1194,
	410, 1194,
	411, 1194,
	412, 1194,
	414, 1194,
	415, 1194,
	416, 1194,
	418, 1194,
	419, 1194,
	420, 1194,
	421, 1194,
	422, 1194,
	423, 1194,
	425, 1194,
	426, 1194,
	427, 1194,
	428, 1194,
	429, 1194,
	430, 1194,
	431, 1194,
	432, 1194,
	433, 1194,
	434, 1194,
	435, 1194,
	437, 1194,
	438, 1194,
	439, 1194,
	440, 1194,
	441, 1194,
	442, 1194,
	444, 1194,
	445, 1194,
	446, 1194,
	447, 1194,
	448, 1194,
	449, 1194,
	451, 1194,
	452, 1194,
	453, 1194,
	454, 1194,
	455, 1194,
	456, 1194,
	457, 1194,
	459, 1194,
	461, 1194,
	462, 1194,
	463, 1194,
	464, 1194,
	465, 1194,
	466, 1194,
	467, 1194,
	468, 1194,
	469, 1194,
	470, 1194,
	471, 1194,
	472, 1194,
	473, 1194,
	474, 1194,
	475, 1194,
	477, 1194,
	478, 1194,
	480, 1194,
	481, 1194,
	483, 1194,
	484, 1194,
	485, 1194,
	486, 1194,
	487, 1194,
	488, 1194,
	489, 1194,
	490, 1194,
	491, 1194,
	493, 1194,
	494, 1194,
	495, 1194,
	496, 1194,
	497, 1194,
	499, 1194,
	501, 1194,
	502, 1194,
	503, 1194,
	504, 1194,
	505, 1194,
	506, 1194,
	508, 1194,
	509, 1194,
	510, 1194,
	511, 1194,
	513, 1194,
	514, 1194,
	517, 1194,
	518, 1194,
	519, 1194,
	520, 1194,
	521, 1194,
	522, 1194,
	523, 1194,
	525, 1194,
	528, 1194,
	529, 1194,
	530, 1194,
	531, 1194,
	532, 1194,
	533, 1194,
	535, 1194,
	536, 1194,
	537, 1194,
	538, 1194,
	543, 1194,
	544, 1194,
	545, 1194,
	546, 1194,
	547, 1194,
	548, 1194,
	-2, 0,
	-1, 1546,
	1, 502,
	572, 502,
	574, 502,
	576, 502,
	-2, 1404,
	-1, 1549,
	4, 2546,
	11, 2546,
	12, 2546,
	14, 2546,
	15, 2546,
	16, 2546,
	17, 2546,
	18, 2546,
	19, 2546,
	21, 2546,
	22, 2546,
	23, 2546,
	24, 2546,
	25, 2546,
	26, 2546,
	27, 2546,
	28, 2546,
	30, 2546,
	31, 2546,
	34, 2546,
	35, 2546,
	37, 2546,
	39, 2546,
	42, 2546,
	43, 2546,
	45, 2546,
	46, 2546,
	47, 2546,
	48, 2546,
	49, 2546,
	50, 2546,
	51, 2546,
	53, 2546,
	54, 2546,
	55, 2546,
	56, 2546,
	58, 2546,
	59, 2546,
	60, 2546,
	61, 2546,
	62, 2546,
	63, 2546,
	64, 2546,
	68, 2546,
	69, 2546,
	70, 2546,
	71, 2546,
	73, 2546,
	74, 2546,
	75, 2546,
	76, 2546,
	79, 2546,
	80, 2546,
	81, 2546,
	82, 2546,
	83, 2546,
	84, 2546,
	85, 2546,
	86, 2546,
	88, 2546,
	89, 2546,
	90, 2546,
	91, 2546,
	92, 2546,
	94, 2546,
	95, 2546,
	96, 2546,
	97, 2546,
	98, 2546,
	99, 2546,
	100, 2546,
	101, 2546,
	103, 2546,
	104, 2546,
	105, 2546,
	106, 2546,
	107, 2546,
	108, 2546,
	116, 2546,
	117, 2546,
	118, 2546,
	119, 2546,
	121, 2546,
	122, 2546,
	123, 2546,
	125, 2546,
	126, 2546,
	127, 2546,
	129, 2546,
	130, 2546,
	132, 2546,
	133, 2546,
	134, 2546,
	137, 2546,
	138, 2546,
	139, 2546,
	141, 2546,
	142, 2546,
	144, 2546,
	145, 2546,
	146, 2546,
	148, 2546,
	149, 2546,
	150, 2546,
	151, 2546,
	152, 2546,
	153, 2546,
	154, 2546,
	155, 2546,
	156, 2546,
	157, 2546,
	158, 2546,
	159, 2546,
	160, 2546,
	161, 2546,
	162, 2546,
	163, 2546,
	167, 2546,
	168, 2546,
	169, 2546,
	170, 2546,
	171, 2546,
	172, 2546,
	173, 2546,
	174, 2546,
	177, 2546,
	178, 2546,
	180, 2546,
	183, 2546,
	184, 2546,
	185, 2546,
	186, 2546,
	187, 2546,
	188, 2546,
	189, 2546,
	190, 2546,
	191, 2546,
	192, 2546,
	193, 2546,
	194, 2546,
	195, 2546,
	196, 2546,
	198, 2546,
	199, 2546,
	201, 2546,
	202, 2546,
	204, 2546,
	205, 2546,
	206, 2546,
	207, 2546,
	208, 2546,
	209, 2546,
	210, 2546,
	211, 2546,
	212, 2546,
	213, 2546,
	214, 2546,
	215, 2546,
	216, 2546,
	217, 2546,
	218, 2546,
	219, 2546,
	220, 2546,
	222, 2546,
	223, 2546,
	225, 2546,
	226, 2546,
	227, 2546,
	228, 2546,
	230, 2546,
	231, 2546,
	232, 2546,
	233, 2546,
	235, 2546,
	237, 2546,
	238, 2546,
	239, 2546,
	240, 2546,
	241, 2546,
	242, 2546,
	243, 2546,
	244, 2546,
	245, 2546,
	246, 2546,
	248, 2546,
	249, 2546,
	250, 2546,
	251, 2546,
	252, 2546,
	253, 2546,
	254, 2546,
	255, 2546,
	257, 2546,
	258, 2546,
	259, 2546,
	261, 2546,
	262, 2546,
	263, 2546,
	264, 2546,
	265, 2546,
	266, 2546,
	268, 2546,
	272, 2546,
	273, 2546,
	274, 2546,
	277, 2546,
	278, 2546,
	279, 2546,
	280, 2546,
	281, 2546,
	282, 2546,
	283, 2546,
	284, 2546,
	285, 2546,
	286, 2546,
	287, 2546,
	288, 2546,
	289, 2546,
	290, 2546,
	291, 2546,
	292, 2546,
	293, 2546,
	294, 2546,
	295, 2546,
	296, 2546,
	297, 2546,
	298, 2546,
	299, 2546,
	300, 2546,
	301, 2546,
	302, 2546,
	303, 2546,
	305, 2546,
	306, 2546,
	307, 2546,
	308, 2546,
	309, 2546,
	310, 2546,
	311, 2546,
	312, 2546,
	313, 2546,
	314, 2546,
	315, 2546,
	316, 2546,
	317, 2546,
	318, 2546,
	320, 2546,
	323, 2546,
	324, 2546,
	325, 2546,
	327, 2546,
	328, 2546,
	329, 2546,
	330, 2546,
	331, 2546,
	334, 2546,
	338, 2546,
	339, 2546,
	340, 2546,
	341, 2546,
	343, 2546,
	344, 2546,
	345, 2546,
	347, 2546,
	349, 2546,
	350, 2546,
	351, 2546,
	352, 2546,
	353, 2546,
	354, 2546,
	355, 2546,
	356, 2546,
	357, 2546,
	358, 2546,
	359, 2546,
	360, 2546,
	362, 2546,
	363, 2546,
	364, 2546,
	365, 2546,
	366, 2546,
	367, 2546,
	368, 2546,
	369, 2546,
	370, 2546,
	371, 2546,
	372, 2546,
	373, 2546,
	374, 2546,
	375, 2546,
	376, 2546,
	378, 2546,
	379, 2546,
	381, 2546,
	382, 2546,
	383, 2546,
	384, 2546,
	385, 2546,
	386, 2546,
	387, 2546,
	388, 2546,
	389, 2546,
	390, 2546,
	391, 2546,
	392, 2546,
	394, 2546,
	396, 2546,
	397, 2546,
	398, 2546,
	403, 2546,
	404, 2546,
	405, 2546,
	406, 2546,
	407, 2546,
	408, 2546,
	409, 2546,
	410, 2546,
	411, 2546,
	412, 2546,
	414, 2546,
	415, 2546,
	416, 2546,
	417, 2546,
	418, 2546,
	419, 2546,
	420, 2546,
	421, 2546,
	422, 2546,
	423, 2546,
	424, 2546,
	425, 2546,
	426, 2546,
	427, 2546,
	428, 2546,
	429, 2546,
	430, 2546,
	431, 2546,
	432, 2546,
	433, 2546,
	434, 2546,
	435, 2546,
	437, 2546,
	438, 2546,
	439, 2546,
	440, 2546,
	441, 2546,
	442, 2546,
	444, 2546,
	445, 2546,
	446, 2546,
	447, 2546,
	448, 2546,
	449, 2546,
	450, 2546,
	451, 2546,
	452, 2546,
	453, 2546,
	454, 2546,
	455, 2546,
	456, 2546,
	457, 2546,
	459, 2546,
	461, 2546,
	462, 2546,
	463, 2546,
	464, 2546,
	465, 2546,
	466, 2546,
	467, 2546,
	468, 2546,
	469, 2546,
	470, 2546,
	471, 2546,
	472, 2546,
	473, 2546,
	474, 2546,
	475, 2546,
	477, 2546,
	478, 2546,
	480, 2546,
	481, 2546,
	483, 2546,
	484, 2546,
	485, 2546,
	486, 2546,
	487, 2546,
	488, 2546,
	489, 2546,
	490, 2546,
	491, 2546,
	493, 2546,
	494, 2546,
	495, 2546,
	496, 2546,
	497, 2546,
	499, 2546,
	501, 2546,
	502, 2546,
	503, 2546,
	504, 2546,
	505, 2546,
	506, 2546,
	508, 2546,
	509, 2546,
	510, 2546,
	511, 2546,
	513, 2546,
	514, 2546,
	517, 2546,
	518, 2546,
	519, 2546,
	520, 2546,
	521, 2546,
	522, 2546,
	523, 2546,
	525, 2546,
	528, 2546,
	529, 2546,
	530, 2546,
	531, 2546,
	532, 2546,
	533, 2546,
	535, 2546,
	536, 2546,
	537, 2546,
	538, 2546,
	543, 2546,
	544, 2546,
	545, 2546,
	546, 2546,
	547, 2546,
	548, 2546,
	549, 2546,
	551, 2546,
	554, 2546,
	555, 2546,
	556, 2546,
	557, 2546,
	558, 2546,
	559, 2546,
	561, 2546,
	562, 2546,
	563, 2546,
	564, 2546,
	565, 2546,
	566, 2546,
	567, 2546,
	568, 2546,
	569, 2546,
	571, 2546,
	574, 2546,
	575, 2546,
	577, 2546,
	578, 2546,
	-2, 0,
	-1, 1554,
	182, 2431,
	498, 2431,
	556, 2431,
	575, 2431,
	-2, 0,
	-1, 1603,
	383, 808,
	442, 808,
	481, 808,
	503, 808,
	-2, 0,
	-1, 1630,
	1, 803,
	572, 803,
	574, 803,
	576, 803,
	-2, 0,
	-1, 1631,
	1, 841,
	572, 841,
	574, 841,
	576, 841,
	-2, 0,
	-1, 1632,
	1, 849,
	572, 849,
	574, 849,
	576, 849,
	-2, 0,
	-1, 1635,
	1, 812,
	572, 812,
	574, 812,
	576, 812,
	-2, 0,
	-1, 1637,
	1, 816,
	572, 816,
	574, 816,
	576, 816,
	-2, 0,
	-1, 1643,
	1, 823,
	572, 823,
	574, 823,
	576, 823,
	-2, 0,
	-1, 1671,
	1, 2492,
	572, 2492,
	574, 2492,
	575, 2492,
	576, 2492,
	-2, 874,
	-1, 1672,
	1, 2428,
	572, 2428,
	574, 2428,
	575, 2428,
	576, 2428,
	-2, 875,
	-1, 1690,
	1, 1296,
	576, 1296,
	-2, 1301,
	-1, 1693,
	166, 1447,
	179, 1447,
	267, 1447,
	332, 1447,
	-2, 1385,
	-1, 1787,
	147, 1406,
	166, 1406,
	179, 1406,
	234, 1406,
	267, 1406,
	332, 1406,
	342, 1406,
	515, 1406,
	-2, 1848,
	-1, 1847,
	574, 1998,
	-2, 0,
	-1, 1882,
	147, 1406,
	166, 1406,
	179, 1406,
	234, 1406,
	267, 1406,
	332, 1406,
	342, 1406,
	515, 1406,
	-2, 1534,
	-1, 1931,
	573, 1675,
	-2, 1663,
	-1, 2009,
	1, 631,
	576, 631,
	-2, 1301,
	-1, 2129,
	216, 236,
	-2, 2145,
	-1, 2130,
	216, 237,
	-2, 280,
	-1, 2232,
	1, 805,
	572, 805,
	574, 805,
	576, 805,
	-2, 0,
	-1, 2233,
	1, 843,
	572, 843,
	574, 843,
	576, 843,
	-2, 0,
	-1, 2234,
	1, 851,
	572, 851,
	574, 851,
	576, 851,
	-2, 0,
	-1, 2268,
	1, 825,
	572, 825,
	574, 825,
	576, 825,
	-2, 0,
	-1, 2318,
	422, 1474,
	423, 1474,
	-2, 1708,
	-1, 2349,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1728,
	-1, 2350,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1729,
	-1, 2351,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1730,
	-1, 2352,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1731,
	-1, 2353,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1732,
	-1, 2354,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1733,
	-1, 2355,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1734,
	-1, 2356,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1735,
	-1, 2368,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1747,
	-1, 2369,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1748,
	-1, 2370,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1749,
	-1, 2373,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1754,
	-1, 2379,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1758,
	-1, 2381,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1766,
	-1, 2382,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1767,
	-1, 2383,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1768,
	-1, 2384,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1769,
	-1, 2520,
	5, 2149,
	182, 2009,
	573, 2146,
	-2, 2137,
	-1, 2521,
	182, 2010,
	-2, 2497,
	-1, 2522,
	182, 2011,
	-2, 2328,
	-1, 2523,
	182, 2012,
	-2, 2217,
	-1, 2524,
	182, 2013,
	-2, 2269,
	-1, 2525,
	182, 2014,
	-2, 2313,
	-1, 2526,
	182, 2015,
	-2, 2426,
	-1, 2527,
	182, 2016,
	-2, 1831,
	-1, 2597,
	1, 1535,
	2, 1535,
	106, 1535,
	147, 1535,
	166, 1535,
	179, 1535,
	183, 1535,
	200, 1535,
	203, 1535,
	230, 1535,
	234, 1535,
	245, 1535,
	263, 1535,
	267, 1535,
	306, 1535,
	332, 1535,
	336, 1535,
	342, 1535,
	413, 1535,
	417, 1535,
	515, 1535,
	526, 1535,
	540, 1535,
	541, 1535,
	542, 1535,
	552, 1535,
	572, 1535,
	574, 1535,
	576, 1535,
	578, 1535,
	-2, 1534,
	-1, 2610,
	573, 2118,
	-2, 2132,
	-1, 2612,
	53, 1433,
	132, 1433,
	-2, 296,
	-1, 2637,
	573, 1674,
	-2, 1664,
	-1, 2809,
	1, 1169,
	572, 1169,
	574, 1169,
	576, 1169,
	-2, 1433,
	-1, 2974,
	337, 1477,
	-2, 2536,
	-1, 2975,
	337, 1478,
	-2, 2412,
	-1, 2979,
	422, 2075,
	423, 2075,
	-2, 1829,
	-1, 2980,
	422, 2079,
	423, 2079,
	-2, 1830,
	-1, 2981,
	422, 2076,
	423, 2076,
	-2, 1829,
	-1, 2982,
	422, 2080,
	423, 2080,
	-2, 1830,
	-1, 2995,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1756,
	-1, 2996,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1760,
	-1, 3002,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1762,
	-1, 3242,
	1, 628,
	572, 628,
	574, 628,
	576, 628,
	-2, 1301,
	-1, 3384,
	44, 2110,
	-2, 942,
	-1, 3389,
	1, 1169,
	572, 1169,
	574, 1169,
	576, 1169,
	-2, 1433,
	-1, 3493,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1764,
	-1, 3500,
	239, 0,
	241, 0,
	323, 0,
	-2, 1783,
	-1, 3567,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1812,
	-1, 3568,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1813,
	-1, 3569,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1814,
	-1, 3573,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1818,
	-1, 3574,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1819,
	-1, 3575,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1820,
	-1, 3621,
	573, 2119,
	-2, 2133,
	-1, 3775,
	575, 2653,
	-2, 1359,
	-1, 3832,
	239, 0,
	241, 0,
	323, 0,
	-2, 1784,
	-1, 3835,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1787,
	-1, 3836,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1789,
	-1, 3931,
	575, 2134,
	-2, 1204,
	-1, 4061,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1788,
	-1, 4062,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1790,
	-1, 4073,
	239, 0,
	-2, 1821,
	-1, 4236,
	239, 0,
	-2, 1822,
	-1, 4416,
	50, 0,
	213, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 2500,
}

const sqlPrivate = 57344

const sqlLast = 119050

var sqlAct = [...]int{
	260, 4511, 4161, 4272, 2885, 2872, 3153, 4415, 4264, 4468,
	4294, 4397, 3374, 4115, 3373, 4426, 4537, 4312, 4290, 4349,
	4385, 4366, 2126, 4369, 2701, 4427, 4189, 4428, 3815, 4018,
	4168, 4102, 2760, 2742, 4240, 3532, 4480, 4414, 4013, 1202,
	3984, 2200, 4120, 2552, 2328, 3485, 4082, 1191, 4050, 1274,
	3966, 3267, 1270, 3767, 4177, 3998, 3759, 1263, 3708, 3319,
	2988, 3912, 1918, 3928, 1024, 3406, 1015, 3369, 1991, 4203,
	4023, 3726, 2396, 3742, 775, 2772, 3400, 3728, 3359, 2336,
	4078, 742, 3270, 1570, 1456, 1702, 1919, 2894, 2329, 1334,
	2064, 3445, 2861, 3447, 2907, 2842, 2832, 2896, 775, 1888,
	2209, 3624, 3196, 4, 1966, 3176, 3136, 3927, 1425, 2904,
	3814, 3168, 2887, 849, 3159, 3157, 2856, 2873, 2858, 3871,
	1857, 2074, 2893, 2121, 4512, 2120, 2207, 3592, 1611, 2703,
	2590, 1023, 172, 2589, 3135, 2440, 2333, 1833, 4241, 2438,
	1795, 2409, 1432, 3264, 1510, 770, 2106, 2099, 2903, 254,
	105, 2592, 2173, 1182, 2843, 2786, 1268, 2115, 2972, 2045,
	1072, 2048, 1276, 253, 1317, 1690, 3203, 1068, 2393, 2741,
	1242, 1989, 2570, 2429, 2035, 1858, 2549, 2317, 2298, 2866,
	2300, 1075, 3371, 1265, 2622, 1077, 1568, 1253, 1256, 4291,
	2161, 1547, 2897, 1877, 842, 1513, 776, 2686, 2432, 673,
	2621, 659, 777, 1079, 1303, 681, 2579, 1185, 2410, 1164,
	1780, 1867, 2516, 1703, 1704, 1874, 2482, 2299, 2301, 181,
	2560, 724, 172, 781, 1643, 1630, 3253, 1199, 1828, 736,
	2186, 1538, 182, 772, 1451, 2063, 1545, 784, 1181, 4469,
	1967, 2322, 2160, 4313, 1053, 1964, 676, 781, 44, 43,
	41, 32, 30, 28, 684, 1162, 1709, 911, 1187, 3023,
	1689, 784, 1462, 931, 3019, 1717, 1718, 3606, 3155, 3607,
	1455, 699, 1980, 1980, 1717, 1718, 4608, 823, 1019, 4598,
	2569, 1980, 1122, 3425, 1980, 3416, 4584, 4583, 1980, 1748,
	2569, 2569, 1019, 1980, 3226, 4573, 1720, 4555, 1748, 2135,
	4553, 4119, 3425, 4499, 4119, 1720, 3415, 2135, 4457, 4450,
	4448, 4445, 4458, 2569, 2569, 4446, 4442, 4412, 4411, 1636,
	4443, 2135, 2135, 4410, 4405, 4404, 3225, 2001, 2001, 2001,
	1719, 864, 4395, 4393, 1020, 2562, 4119, 4119, 4364, 1719,
	4337, 1179, 4119, 4330, 2628, 4329, 4324, 2569, 4323, 2569,
	4119, 4317, 4119, 4286, 4238, 2135, 4220, 3976, 2628, 4217,
	3802, 4214, 4170, 2135, 4135, 4119, 4171, 3211, 2135, 4134,
	1165, 1165, 4126, 2135, 4125, 4118, 2135, 4089, 4119, 4119,
	4063, 2135, 4042, 4031, 2628, 3961, 2001, 3425, 1312, 2569,
	1312, 3949, 1000, 3834, 1197, 2569, 3783, 2628, 3777, 3740,
	3442, 1220, 3442, 3741, 2768, 999, 3616, 3614, 1194, 3599,
	3617, 3615, 2647, 2569, 2208, 3516, 3596, 3512, 3441, 2135,
	90, 2569, 3442, 3432, 3152, 3147, 3146, 3433, 2569, 2569,
	2569, 1725, 1213, 2135, 2987, 3099, 3108, 3109, 1009, 3100,
	1725, 3073, 1014, 2624, 3065, 3074, 3063, 1998, 3066, 3034,
	2569, 3032, 2911, 2569, 2569, 4338, 2001, 3033, 1717, 1718,
	224, 1750, 1751, 1752, 1760, 1761, 1762, 2883, 2882, 2670,
	2627, 2196, 2196, 2569, 2628, 1166, 1747, 1749, 4242, 2135,
	2619, 1753, 1748, 2613, 2569, 1747, 1749, 2135, 1577, 1720,
	2568, 2195, 2646, 4233, 2569, 2196, 1464, 1766, 1717, 1718,
	1168, 4221, 1169, 2001, 3596, 2561, 226, 4011, 3976, 3950,
	3802, 3433, 1214, 2763, 2569, 2685, 2014, 1979, 1995, 1998,
	2838, 2134, 1748, 1719, 2780, 2683, 1853, 1450, 3022, 1720,
	3696, 3488, 2435, 1739, 3464, 1740, 1875, 2109, 3417, 1613,
	2068, 2606, 1736, 2605, 1740, 2604, 1717, 1718, 2603, 1750,
	1751, 1752, 1760, 1761, 1762, 225, 2602, 3418, 2465, 1170,
	1167, 1008, 1007, 1719, 1006, 1005, 218, 1004, 1003, 1002,
	1748, 998, 2949, 1739, 997, 219, 996, 1720, 995, 224,
	994, 1074, 1736, 993, 992, 1766, 991, 990, 224, 989,
	988, 987, 986, 985, 984, 983, 982, 183, 909, 908,
	1455, 907, 3114, 906, 905, 1563, 3108, 3109, 904, 903,
	902, 1719, 901, 900, 1742, 1743, 1744, 1745, 2436, 1981,
	1981, 1739, 899, 898, 1725, 226, 897, 896, 1981, 895,
	1736, 1981, 894, 3828, 226, 1981, 893, 3108, 3109, 892,
	1981, 891, 890, 889, 888, 887, 886, 885, 1051, 884,
	883, 882, 881, 880, 1742, 1743, 1744, 1745, 879, 878,
	1757, 877, 867, 1767, 1725, 1464, 866, 862, 2869, 1747,
	1749, 861, 855, 854, 225, 841, 840, 798, 1741, 2451,
	797, 3415, 796, 225, 795, 218, 1763, 1741, 1764, 1476,
	1214, 787, 786, 785, 219, 1734, 1735, 757, 224, 2437,
	748, 2434, 1742, 1743, 1744, 1745, 3124, 747, 746, 1747,
	1749, 145, 1725, 1755, 730, 248, 183, 1279, 1077, 2449,
	3887, 1463, 1998, 247, 246, 183, 245, 244, 1740, 3108,
	3109, 2561, 243, 242, 72, 1734, 1735, 241, 240, 239,
	238, 1077, 237, 236, 226, 1077, 235, 234, 1757, 233,
	73, 1767, 232, 224, 231, 230, 229, 1747, 1749, 228,
	227, 1337, 3846, 4025, 3634, 1337, 77, 3610, 1740, 1279,
	1765, 3443, 3114, 3199, 1581, 3045, 3028, 2932, 2819, 2632,
	2611, 2596, 1464, 1734, 1735, 2043, 2657, 1979, 1754, 1878,
	1077, 2000, 1077, 225, 1077, 1998, 1901, 1214, 1995, 226,
	1279, 1755, 2646, 3114, 218, 1316, 84, 2293, 1193, 1321,
	1806, 1458, 1716, 219, 1978, 1470, 1740, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 1440, 1279, 2203, 1721, 1722, 1723,
	1724, 1726, 1727, 1323, 1435, 183, 1201, 1836, 1307, 4433,
	2851, 4413, 3150, 847, 1835, 1279, 2439, 4392, 225, 3125,
	1279, 1746, 4301, 4230, 3108, 3109, 1638, 104, 1077, 218,
	1077, 4077, 90, 101, 1279, 4032, 1839, 3745, 219, 4245,
	1077, 1741, 1077, 4010, 4224, 1195, 3124, 3108, 3109, 1454,
	3151, 1247, 1250, 4222, 1519, 1522, 4113, 3894, 3869, 1797,
	183, 1746, 3868, 3862, 3861, 3114, 1475, 1758, 1464, 1260,
	3860, 1836, 3853, 1301, 3852, 3850, 2202, 3845, 1835, 3842,
	3841, 1741, 3739, 1330, 3638, 1422, 1427, 1279, 3637, 91,
	3636, 3620, 224, 843, 1442, 3587, 3586, 3585, 781, 3123,
	1834, 1804, 3508, 3504, 3194, 1077, 2727, 3143, 1077, 1746,
	3134, 3107, 784, 3104, 3103, 3101, 3072, 3071, 3070, 1550,
	1552, 72, 1430, 846, 845, 3067, 1567, 3064, 2433, 1741,
	3108, 3109, 3044, 4027, 3027, 1296, 3020, 73, 226, 2884,
	2597, 2422, 1716, 2176, 1797, 1453, 1178, 172, 172, 1508,
	224, 1452, 1715, 77, 2641, 1758, 4602, 1582, 3118, 3110,
	3111, 3112, 3113, 3115, 3116, 1020, 1756, 1799, 2142, 3124,
	2140, 1731, 1732, 1738, 1759, 1737, 1733, 1548, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 225, 1525, 3125,
	3114, 3856, 1469, 84, 4547, 3855, 226, 3694, 218, 4546,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 219, 1798, 224,
	1796, 4513, 2626, 3114, 3746, 1737, 1733, 4467, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 4465, 1203, 183,
	847, 1077, 94, 3534, 1287, 4356, 1694, 1077, 1652, 1307,
	4293, 4282, 1307, 4279, 104, 225, 1717, 1718, 1541, 90,
	101, 2853, 4278, 4277, 1756, 226, 218, 4258, 4244, 1731,
	1732, 1738, 1759, 1737, 1733, 219, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 4243, 3746, 1720, 2034, 4218,
	4202, 224, 4201, 180, 97, 2399, 100, 2868, 4187, 1688,
	4184, 1562, 4183, 224, 3124, 2405, 3114, 1022, 4131, 3217,
	2464, 4109, 3148, 1576, 225, 39, 91, 4075, 4058, 4057,
	224, 1719, 3125, 4039, 4038, 218, 4001, 3977, 848, 3886,
	3867, 3803, 3797, 145, 219, 224, 3794, 226, 1786, 3110,
	3111, 3112, 3113, 3115, 3116, 4246, 3191, 3683, 4004, 226,
	1587, 3682, 1077, 1077, 1077, 3669, 183, 3668, 1077, 3666,
	3602, 3590, 1604, 3499, 1784, 1199, 226, 1199, 3444, 3426,
	3110, 3111, 3112, 3113, 3115, 3116, 1639, 3392, 3331, 4093,
	4026, 226, 1337, 3298, 3269, 1855, 225, 3219, 224, 3049,
	1077, 1020, 147, 775, 3048, 3043, 3011, 218, 225, 1936,
	775, 1864, 2831, 1279, 1842, 1841, 219, 184, 1840, 218,
	3124, 1837, 1691, 1699, 1698, 225, 1829, 1827, 219, 2639,
	2638, 2608, 1725, 1000, 2601, 2567, 218, 2447, 183, 224,
	225, 2450, 1900, 1911, 226, 219, 999, 1856, 1851, 1693,
	183, 218, 1850, 1849, 1838, 1848, 1847, 3125, 1695, 2852,
	219, 1846, 1845, 1844, 1712, 1713, 1909, 183, 1843, 94,
	3117, 3118, 3110, 3111, 3112, 3113, 3115, 3116, 1904, 1279,
	1544, 2448, 183, 1861, 1862, 226, 1077, 2204, 1915, 1824,
	1279, 1885, 1823, 225, 1822, 1962, 1821, 1717, 1718, 1820,
	1819, 1818, 1817, 1816, 218, 1165, 1815, 1814, 1077, 1813,
	172, 1812, 1811, 219, 1337, 1810, 1799, 1785, 1783, 1778,
	180, 97, 1295, 100, 1539, 1218, 1209, 1020, 1720, 2007,
	3890, 3838, 3633, 3613, 225, 183, 1830, 1831, 3605, 2032,
	3031, 2630, 1197, 2599, 1197, 218, 3892, 224, 3632, 1798,
	1717, 1718, 781, 3215, 219, 848, 1194, 1907, 1194, 781,
	145, 1781, 1719, 3125, 1908, 2006, 784, 3108, 3109, 4544,
	3421, 1886, 2041, 784, 2034, 1970, 183, 1896, 4536, 1320,
	224, 1720, 3952, 1905, 1883, 2761, 2034, 4280, 1876, 1307,
	4173, 1312, 4172, 226, 3119, 3117, 3118, 3110, 3111, 3112,
	3113, 3115, 3116, 4030, 3979, 3978, 3301, 1983, 4225, 1854,
	3951, 1819, 1930, 1819, 3889, 1719, 3806, 4223, 3805, 147,
	3804, 3608, 3112, 3113, 3115, 3116, 226, 1895, 1894, 1893,
	1891, 1890, 1889, 1880, 184, 3428, 1912, 1319, 2746, 1279,
	1279, 1970, 225, 1959, 3427, 4178, 3749, 4112, 1878, 1337,
	1318, 1916, 1970, 218, 2009, 3486, 1312, 1836, 1686, 2020,
	3324, 3681, 219, 1725, 1835, 3069, 3068, 2993, 2005, 2729,
	1603, 1315, 980, 3437, 3376, 225, 3375, 3271, 1653, 1808,
	1612, 2224, 4409, 2201, 844, 4434, 218, 4169, 224, 1805,
	4453, 1933, 4438, 4425, 3360, 219, 2908, 2177, 1312, 1613,
	3119, 3117, 3118, 3110, 3111, 3112, 3113, 3115, 3116, 2122,
	2056, 2093, 4079, 2098, 1543, 981, 2103, 183, 3705, 3701,
	3687, 3461, 2127, 2132, 2003, 3240, 3155, 2068, 3536, 3037,
	2012, 2026, 2025, 2430, 226, 2034, 2036, 1177, 2637, 1852,
	1832, 3367, 1279, 2170, 1279, 1518, 1279, 2037, 1447, 2774,
	2027, 224, 4435, 1290, 1246, 4447, 4444, 3411, 3661, 4273,
	4014, 4363, 1279, 1279, 4255, 3274, 3676, 2777, 2891, 2865,
	2073, 3353, 4497, 1279, 4496, 3244, 3480, 836, 3718, 4152,
	3940, 1494, 1486, 225, 4527, 1279, 2308, 1279, 1279, 1279,
	781, 2124, 3246, 1018, 218, 978, 2671, 226, 976, 1650,
	1591, 974, 972, 219, 784, 969, 4597, 2274, 1448, 2272,
	775, 2166, 3325, 2689, 2211, 2107, 4145, 4137, 2689, 1721,
	1722, 1723, 1724, 1726, 1727, 183, 4098, 2223, 2687, 3974,
	3714, 2171, 2750, 2687, 3713, 3707, 3700, 1453, 3698, 2183,
	3648, 3647, 3356, 1452, 3717, 2306, 225, 3210, 3042, 3041,
	3040, 2029, 3039, 2997, 2743, 2744, 2784, 218, 1651, 1544,
	2091, 2102, 2206, 2783, 2092, 1495, 219, 2779, 2021, 961,
	2770, 2759, 2228, 2758, 2755, 2133, 2754, 2733, 837, 2720,
	1017, 2620, 2191, 3216, 2380, 1692, 2478, 2477, 183, 2338,
	2862, 1531, 1020, 1530, 1020, 2435, 1077, 1649, 1077, 4056,
	2010, 2180, 1490, 966, 1548, 1077, 1548, 3462, 1936, 1936,
	1337, 2291, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 2193, 1077, 2212,
	1077, 1077, 1077, 1077, 2185, 2153, 1193, 2189, 1193, 781,
	2152, 1541, 2031, 2188, 2216, 2188, 1320, 1529, 2297, 1528,
	1320, 1584, 1077, 784, 1296, 1077, 1077, 1589, 2197, 2310,
	2198, 2436, 4528, 1077, 2307, 1313, 2151, 1077, 1019, 1077,
	1077, 2705, 2731, 3271, 2334, 2335, 2220, 1337, 3300, 2283,
	2030, 3899, 1503, 1077, 1077, 1077, 1077, 2201, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 2215, 1232, 2411, 2412,
	2232, 2678, 4531, 1195, 1319, 1195, 1313, 2096, 1319, 1206,
	2395, 2395, 2411, 2427, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 2250, 1286, 2719, 1662, 1077, 2286, 2612,
	1634, 1634, 1723, 1724, 1726, 1727, 2305, 2278, 2473, 1199,
	2268, 3898, 2437, 2240, 2434, 2065, 1337, 3664, 3924, 1204,
	1449, 2970, 2321, 2952, 2631, 1199, 1302, 2519, 2519, 2533,
	2985, 2411, 3724, 4266, 2553, 2555, 3470, 1585, 3672, 3936,
	2559, 1077, 1337, 1543, 4557, 1601, 2718, 2190, 2061, 1309,
	2708, 3920, 2296, 2295, 2294, 2302, 2309, 3469, 1727, 2233,
	1631, 1930, 1930, 2946, 4532, 2439, 1461, 3973, 1468, 1000,
	1474, 3723, 1000, 1000, 1020, 3116, 2066, 2067, 2430, 2426,
	2743, 2744, 2325, 1020, 2609, 2326, 2327, 1020, 3315, 3699,
	1309, 2584, 2743, 2744, 1605, 1648, 3953, 671, 1633, 1633,
	3522, 875, 2068, 3921, 2285, 2475, 2062, 4055, 4431, 2237,
	2476, 1016, 4496, 2479, 1645, 2480, 2481, 839, 838, 2241,
	2234, 1632, 3525, 2576, 666, 1207, 3697, 3314, 1314, 2955,
	2407, 1514, 3355, 3322, 1561, 3308, 1566, 2778, 2049, 1885,
	1933, 1933, 1279, 1279, 2050, 1165, 1575, 2424, 1580, 4268,
	1697, 2231, 1313, 1896, 1685, 4508, 3243, 2984, 2403, 2439,
	2598, 2625, 2753, 2732, 4560, 2401, 2139, 2138, 1613, 1314,
	1613, 2308, 2776, 4534, 3307, 1020, 1197, 1294, 1512, 4516,
	2575, 3523, 4515, 3684, 1337, 1310, 2773, 2618, 2688, 172,
	1194, 1666, 1197, 2660, 1311, 2666, 2544, 2528, 2633, 2515,
	2730, 2811, 1985, 2557, 2775, 1987, 1194, 2282, 2583, 1637,
	2588, 1992, 2377, 2594, 2595, 1994, 1936, 1489, 2581, 2582,
	1997, 2577, 2565, 2566, 3924, 4485, 1310, 3903, 1838, 2087,
	2306, 4334, 1883, 2977, 2978, 1311, 3934, 834, 2623, 833,
	2810, 2038, 2039, 2071, 3820, 970, 2707, 3819, 970, 3409,
	1337, 970, 971, 2051, 1307, 970, 2273, 3920, 2271, 3408,
	2954, 3913, 755, 1492, 1279, 1588, 1309, 956, 2086, 2439,
	2055, 2433, 2692, 2640, 1590, 2674, 4587, 2697, 3911, 4432,
	1077, 1077, 2070, 1077, 788, 2644, 1980, 3915, 2059, 2692,
	2951, 3658, 1013, 2651, 2676, 2662, 2075, 2654, 2668, 2655,
	3916, 2643, 2736, 2645, 956, 3917, 1279, 2694, 2304, 3921,
	2049, 2669, 2691, 3008, 1830, 1831, 2050, 2771, 2079, 3657,
	1070, 2661, 2659, 2663, 2694, 4540, 3408, 2677, 2439, 1013,
	4274, 3258, 1231, 967, 2751, 2735, 3255, 1279, 3334, 2692,
	2052, 2057, 3006, 3673, 2119, 1314, 4399, 2675, 4400, 1279,
	3914, 1279, 2535, 2849, 2722, 2876, 3919, 4533, 2672, 1312,
	4345, 4344, 2284, 4096, 3904, 1279, 2734, 2059, 753, 2307,
	2905, 2762, 3922, 2076, 2694, 2375, 4430, 2239, 2378, 2752,
	2757, 957, 2700, 1205, 2835, 2706, 3935, 2953, 2710, 2713,
	2745, 2747, 2748, 2749, 2814, 2693, 2914, 2915, 2118, 2816,
	1312, 1586, 1310, 2756, 4267, 4288, 1077, 2921, 2922, 2923,
	2841, 1311, 2693, 1514, 4332, 2999, 2394, 2105, 957, 1930,
	2696, 868, 3286, 2053, 781, 2051, 3245, 720, 2374, 3685,
	1660, 1663, 2909, 2689, 1216, 3993, 3289, 2696, 784, 2880,
	2104, 2305, 2055, 2097, 1028, 4484, 2690, 1825, 2711, 3213,
	2930, 2059, 4333, 1866, 1077, 3816, 2890, 4068, 667, 1661,
	1077, 1077, 2693, 2845, 1892, 2058, 876, 172, 1970, 2059,
	2933, 1453, 2934, 2100, 4507, 4383, 2080, 2817, 3285, 2912,
	2695, 3003, 3455, 2916, 2878, 2917, 3291, 2696, 2829, 1600,
	1602, 3448, 2957, 2839, 2959, 3918, 4052, 2695, 1933, 1548,
	4374, 2066, 2067, 3959, 3004, 689, 3916, 2927, 3009, 2871,
	2860, 3917, 2052, 2057, 1777, 1077, 1077, 2421, 3047, 3293,
	2937, 1077, 2939, 2049, 2941, 789, 790, 2892, 2881, 2050,
	1870, 2101, 3925, 668, 1077, 1077, 2580, 2910, 3256, 4561,
	1077, 1077, 2081, 2082, 2950, 2089, 1077, 2695, 856, 3290,
	2879, 2593, 1019, 2110, 2236, 1077, 1077, 1077, 3294, 2117,
	3538, 1077, 3919, 4548, 4003, 3810, 2077, 1664, 958, 2929,
	4538, 1077, 2935, 3629, 2936, 754, 1312, 1873, 3922, 2391,
	669, 2938, 670, 2940, 4460, 2942, 3450, 2965, 1077, 2402,
	1193, 3000, 1868, 4461, 1696, 2053, 2230, 1866, 1221, 3025,
	3026, 3449, 3821, 3482, 3029, 958, 1193, 2078, 2389, 2968,
	1871, 2068, 2376, 4295, 2966, 2960, 2976, 2967, 2962, 3021,
	2094, 1293, 756, 4588, 4429, 3731, 752, 4051, 2321, 1618,
	4495, 2971, 4493, 1981, 3729, 2986, 3731, 2058, 2051, 4311,
	4483, 2059, 2292, 2054, 4212, 3729, 3030, 3994, 4186, 3765,
	3396, 2159, 1863, 1869, 1665, 2055, 1219, 1195, 1212, 658,
	2090, 3744, 869, 870, 1707, 792, 791, 3817, 2116, 2324,
	1706, 2069, 4539, 1195, 1870, 2022, 3204, 4128, 1077, 1077,
	1077, 4195, 4127, 3170, 3865, 3005, 2998, 1077, 1077, 1077,
	1020, 2046, 1077, 4566, 4106, 3007, 4204, 4254, 1870, 3766,
	3711, 3918, 1077, 1199, 1337, 4541, 959, 3576, 1077, 4205,
	1077, 3660, 3162, 3163, 3265, 3939, 1706, 3397, 3388, 1199,
	2083, 1873, 3938, 793, 794, 2052, 2057, 3261, 2850, 1701,
	2047, 2019, 2712, 2844, 2833, 3145, 1868, 1337, 3925, 2184,
	4206, 2178, 3036, 959, 3732, 1873, 2172, 2385, 2164, 1199,
	2145, 3164, 1337, 4296, 1871, 3732, 3521, 960, 1483, 2587,
	2578, 3644, 2314, 4053, 1872, 2386, 1223, 2737, 729, 1936,
	2387, 1705, 3184, 1337, 2392, 3483, 3591, 4350, 1871, 4314,
	1706, 4097, 3905, 3260, 3259, 2279, 4019, 1279, 1279, 857,
	858, 3768, 2015, 2830, 960, 2084, 3197, 1869, 1234, 2221,
	4208, 4167, 3451, 3452, 3453, 3454, 2017, 3822, 2053, 4165,
	1077, 4108, 3277, 3273, 3272, 2054, 3198, 1705, 2991, 3604,
	2969, 3167, 3178, 4207, 1077, 3174, 1777, 3166, 1635, 2617,
	4459, 2616, 3727, 3172, 2615, 2614, 1707, 3736, 2837, 1017,
	4209, 3193, 1936, 3985, 1523, 3209, 2018, 4261, 871, 872,
	2058, 3250, 3251, 4162, 2059, 3214, 1537, 3173, 1524, 2716,
	1077, 1279, 3182, 3140, 3141, 3142, 3234, 3223, 3185, 3186,
	1197, 3190, 2088, 3169, 3241, 3275, 3202, 3156, 3279, 3866,
	2113, 1705, 1707, 3183, 1194, 252, 1197, 4116, 3247, 3823,
	3171, 3227, 3228, 3577, 3667, 4565, 1279, 2315, 2097, 1535,
	1194, 3455, 3578, 3276, 3249, 3438, 3281, 3730, 1872, 3283,
	3448, 1337, 1307, 3179, 3220, 3221, 1197, 3222, 3730, 3937,
	1279, 2182, 3206, 3207, 3208, 1279, 2095, 3262, 3266, 3363,
	1194, 3188, 1872, 3189, 2111, 3326, 2738, 2739, 2652, 3337,
	3303, 874, 3340, 4036, 2656, 4297, 3345, 3347, 1279, 1970,
	1970, 2388, 4504, 3645, 1279, 4292, 1279, 3321, 2667, 4095,
	1337, 2390, 3177, 1619, 3231, 3288, 2913, 775, 2815, 2813,
	3235, 2210, 1930, 2112, 1594, 859, 860, 3242, 1279, 3335,
	4360, 4347, 2571, 4104, 4353, 3593, 3332, 3248, 4117, 1279,
	3872, 2446, 1681, 4378, 3181, 2096, 3372, 3205, 4262, 1683,
	3318, 4506, 1680, 3317, 4449, 3450, 1199, 4281, 1678, 1657,
	1655, 3404, 4035, 1629, 1627, 2056, 2574, 1085, 3381, 4074,
	3449, 3864, 3292, 1970, 3342, 3387, 3306, 4105, 2054, 3349,
	1625, 1279, 1279, 2905, 3299, 3402, 2270, 3358, 1623, 3361,
	1621, 3310, 2905, 3735, 3137, 1930, 3313, 1615, 1908, 728,
	3327, 1933, 2056, 3395, 1279, 1610, 3311, 2573, 1970, 3333,
	3312, 1608, 2572, 256, 256, 256, 3424, 661, 662, 4354,
	677, 661, 677, 687, 3498, 3354, 727, 3413, 3343, 4210,
	745, 3350, 1970, 4263, 4211, 751, 3459, 1970, 3323, 3224,
	1536, 256, 1337, 2107, 3102, 1337, 1533, 3010, 2834, 3305,
	3180, 2107, 3463, 2769, 2728, 2735, 3357, 2642, 3446, 853,
	2287, 1903, 3365, 1899, 1684, 256, 781, 3398, 1572, 3138,
	3316, 3405, 3478, 3477, 1933, 3385, 3422, 3423, 1077, 1701,
	784, 2948, 2947, 1534, 1077, 1077, 2919, 3384, 1077, 1077,
	1077, 2303, 1077, 2281, 1644, 3341, 2245, 3457, 2144, 1963,
	3348, 1077, 1936, 2445, 172, 172, 3436, 3410, 1809, 1020,
	1077, 3440, 3412, 1077, 3476, 1583, 3419, 1507, 4424, 1337,
	4346, 3960, 3703, 1197, 3948, 873, 3702, 3456, 1077, 1682,
	4017, 3434, 1679, 3336, 3475, 3965, 1337, 1194, 1677, 1656,
	1654, 3909, 3403, 1628, 1626, 4481, 1936, 1936, 1077, 1077,
	3764, 1077, 1077, 1077, 3755, 3716, 3679, 3466, 968, 3467,
	1624, 3468, 3677, 2269, 3501, 3659, 3484, 3391, 1622, 3386,
	1620, 3451, 3452, 3453, 3454, 3377, 2863, 1614, 2855, 2848,
	2840, 3510, 3511, 2827, 3472, 1609, 661, 661, 2812, 2658,
	3458, 1607, 2653, 1077, 256, 2143, 2141, 1077, 3550, 1936,
	1936, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	3481, 1077, 2123, 2108, 3551, 2085, 1532, 2072, 1077, 1077,
	1936, 3473, 2334, 3541, 1193, 1077, 2060, 2002, 1999, 1996,
	3479, 1993, 1988, 1986, 1982, 1973, 1077, 4012, 3518, 3401,
	1193, 3506, 4473, 3344, 1910, 3626, 1710, 1199, 1199, 2117,
	1174, 1077, 4497, 2989, 3517, 2023, 2963, 2290, 2961, 3528,
	3524, 3526, 3527, 4388, 4041, 4034, 3533, 4033, 3588, 3972,
	1193, 1011, 3540, 956, 3895, 2334, 3556, 1175, 2906, 2726,
	1337, 2042, 3547, 1488, 4197, 3548, 2717, 4190, 3622, 3549,
	2689, 1195, 3776, 2689, 2068, 1930, 1675, 1676, 1013, 973,
	975, 977, 2288, 3609, 4387, 2687, 3584, 1195, 2714, 2235,
	2181, 1254, 1255, 716, 2265, 2264, 2242, 3941, 2767, 3967,
	3553, 1606, 3580, 4232, 3625, 3555, 3873, 1077, 3851, 1717,
	1718, 3649, 3589, 2740, 2721, 1717, 1718, 1195, 1714, 1930,
	1930, 1288, 1222, 1012, 2990, 4500, 2289, 4491, 3710, 672,
	1077, 3581, 1711, 4454, 2820, 3752, 2826, 2823, 2116, 2825,
	172, 3600, 3601, 249, 3595, 2267, 1720, 2165, 2774, 3709,
	3597, 3598, 1299, 2782, 1933, 3627, 3628, 2781, 2764, 1077,
	1077, 2723, 4339, 1176, 4305, 4302, 768, 957, 2766, 3639,
	3640, 3641, 1930, 1930, 1719, 1255, 1255, 3653, 824, 3611,
	1719, 2765, 2867, 3612, 683, 2867, 4260, 2725, 4181, 4160,
	655, 3762, 1077, 3754, 1197, 1197, 3743, 4535, 1933, 1933,
	2724, 3619, 3688, 1930, 3390, 2870, 2558, 2008, 1194, 1194,
	1917, 4380, 4114, 3907, 1279, 3635, 4381, 3906, 3656, 3257,
	3212, 4564, 3108, 3109, 1717, 1718, 4380, 2681, 2682, 4304,
	1593, 4381, 1455, 1936, 3843, 3706, 1592, 4510, 2679, 2680,
	1335, 2441, 3692, 3631, 1433, 2681, 3704, 2679, 2474, 3761,
	4182, 1933, 1933, 3693, 3695, 3712, 4146, 3663, 1659, 1924,
	2943, 1658, 3968, 1279, 3964, 3963, 3839, 3630, 3529, 1077,
	3338, 1803, 1802, 4550, 4517, 4343, 4342, 1199, 1077, 3686,
	4341, 3778, 1933, 4247, 4163, 4141, 4094, 4091, 1279, 1279,
	1279, 3785, 3996, 3891, 3769, 2735, 3800, 3782, 3738, 3675,
	2876, 3734, 3670, 3394, 3393, 1279, 3282, 1193, 3229, 3098,
	3097, 3096, 3770, 3095, 3094, 3093, 3092, 3091, 3090, 3266,
	1264, 3089, 3088, 3087, 3086, 1337, 3230, 2905, 3085, 3232,
	3233, 3772, 3789, 3773, 3236, 3084, 3237, 3083, 3238, 3750,
	3751, 3082, 3081, 3080, 3079, 3725, 3078, 3077, 3733, 1337,
	3076, 3075, 1077, 1077, 958, 3753, 2945, 3801, 1077, 1077,
	1936, 2926, 2925, 1077, 1077, 2924, 1077, 2854, 1428, 3722,
	1077, 1439, 1264, 2828, 1195, 3756, 2715, 2649, 2635, 2634,
	3737, 1077, 2406, 2266, 2263, 2262, 2261, 3771, 2260, 3774,
	2259, 2179, 3780, 3779, 2154, 2150, 2149, 1077, 3784, 2148,
	2147, 1210, 2146, 1976, 3758, 3790, 3791, 1975, 3824, 3837,
	1974, 3807, 3799, 1972, 3795, 3798, 3792, 3796, 1674, 1673,
	1616, 1502, 3833, 1501, 3825, 1500, 1499, 1498, 1497, 1496,
	1491, 1487, 1264, 1264, 1230, 1485, 1930, 1484, 1328, 1327,
	1326, 1325, 3721, 1324, 1197, 3808, 256, 3818, 256, 256,
	1292, 1259, 256, 1269, 1291, 1241, 1240, 1199, 1194, 1239,
	3813, 1238, 1237, 1236, 1289, 1199, 1235, 1233, 1228, 1337,
	1227, 1337, 1036, 745, 1226, 1225, 1224, 1157, 1199, 2013,
	979, 965, 4265, 3923, 1668, 89, 1493, 811, 83, 2114,
	1010, 3674, 959, 936, 4377, 1337, 1477, 256, 4287, 256,
	256, 1259, 819, 256, 256, 1269, 4362, 3284, 2785, 2244,
	1617, 2246, 3192, 2600, 4331, 1933, 256, 3847, 1457, 3046,
	3863, 4239, 4067, 2444, 1807, 3197, 3149, 1199, 85, 1199,
	1061, 1107, 3896, 3897, 3992, 3991, 3910, 3662, 2895, 1481,
	3989, 3988, 1921, 960, 3881, 1923, 1027, 3878, 1340, 4398,
	2024, 1067, 2040, 2033, 3870, 2636, 2518, 1337, 1506, 1084,
	1269, 1081, 3942, 1930, 256, 256, 1925, 1259, 1337, 1927,
	3901, 3874, 3880, 3877, 3929, 3884, 3929, 3875, 3876, 3879,
	3885, 1083, 172, 1082, 1926, 3888, 745, 1826, 256, 256,
	1080, 3943, 1920, 3760, 2836, 2874, 1279, 1279, 3420, 3969,
	1542, 3970, 1540, 938, 2028, 2400, 2428, 3908, 1193, 1193,
	3035, 853, 1800, 1279, 3933, 1042, 1063, 2425, 1217, 1052,
	1041, 3175, 3154, 3407, 1197, 1337, 3986, 3944, 3945, 3618,
	1279, 2313, 1197, 828, 3105, 3971, 3932, 3983, 1194, 2431,
	1208, 2541, 1933, 3962, 2534, 1197, 1194, 2530, 3981, 3239,
	2864, 1687, 4081, 1779, 2875, 1199, 1322, 1045, 4009, 1194,
	2398, 4020, 1791, 3015, 3975, 1279, 1279, 1279, 2323, 3958,
	3414, 3195, 3980, 2629, 4384, 1195, 1195, 1337, 3537, 4021,
	3982, 1902, 2158, 1173, 256, 1172, 1215, 1171, 4368, 1077,
	1077, 1077, 4365, 3793, 1197, 3370, 1197, 2016, 2673, 3987,
	4015, 1769, 3929, 256, 4002, 4029, 3378, 1337, 1194, 4006,
	1194, 3956, 1077, 1057, 1438, 1077, 1077, 4005, 4024, 3295,
	3296, 3160, 3439, 3297, 4022, 1077, 1504, 750, 1936, 4121,
	1069, 1768, 2806, 1077, 1077, 2805, 4257, 1308, 1306, 1305,
	1304, 4524, 4040, 4586, 3671, 223, 4059, 2983, 1337, 4046,
	1279, 1708, 1700, 220, 222, 4044, 4043, 221, 1924, 1924,
	3328, 3329, 4037, 4048, 3330, 3997, 4054, 4064, 4008, 3623,
	3201, 4452, 3947, 3690, 1337, 1970, 3362, 23, 22, 21,
	109, 42, 1077, 20, 3955, 125, 3957, 144, 143, 117,
	4076, 1077, 142, 141, 140, 139, 146, 138, 137, 1077,
	4070, 1936, 132, 2044, 136, 135, 134, 133, 131, 1077,
	129, 130, 1077, 1439, 124, 128, 4087, 4088, 127, 126,
	123, 1077, 1197, 4100, 122, 121, 120, 119, 1337, 118,
	116, 115, 114, 113, 4124, 112, 1194, 111, 110, 1279,
	1279, 741, 4090, 738, 61, 60, 108, 107, 19, 40,
	14, 65, 66, 4101, 18, 13, 35, 4099, 1193, 1439,
	88, 4107, 99, 98, 36, 96, 95, 34, 17, 16,
	15, 93, 2318, 92, 33, 31, 4140, 4175, 1337, 11,
	9, 1279, 4151, 8, 37, 4166, 3372, 4130, 1887, 12,
	5, 177, 4138, 176, 179, 175, 178, 87, 174, 1199,
	1199, 661, 173, 86, 29, 4142, 3642, 4148, 4180, 4156,
	3643, 10, 4191, 169, 4155, 4176, 3748, 80, 1077, 1077,
	4164, 4159, 256, 4158, 256, 1195, 171, 170, 256, 4174,
	4192, 1930, 168, 167, 4200, 1077, 1936, 166, 2136, 81,
	78, 1457, 1259, 256, 4219, 256, 3929, 3929, 165, 4194,
	256, 1457, 677, 4188, 3678, 82, 3680, 256, 1457, 4193,
	4198, 4228, 4229, 4199, 4179, 164, 4213, 79, 163, 27,
	1077, 4196, 1977, 1077, 6, 4024, 64, 7, 4049, 3460,
	1199, 102, 103, 38, 256, 4227, 76, 4154, 75, 74,
	26, 256, 1199, 63, 4231, 25, 4253, 207, 4237, 206,
	205, 204, 203, 202, 1930, 197, 4215, 4216, 4143, 196,
	1933, 2536, 201, 199, 198, 4248, 200, 195, 4250, 210,
	3715, 209, 4252, 215, 214, 213, 212, 3929, 211, 208,
	217, 745, 194, 1077, 1077, 193, 191, 187, 1193, 3929,
	186, 4275, 4270, 4269, 190, 1199, 1193, 192, 1199, 189,
	188, 185, 1279, 216, 161, 162, 71, 160, 159, 1193,
	4153, 158, 1279, 1279, 157, 4283, 1197, 1197, 156, 155,
	4285, 154, 70, 24, 2, 1865, 1, 0, 4322, 1279,
	1194, 1194, 0, 1933, 0, 0, 0, 4298, 0, 0,
	0, 4303, 3929, 1077, 1077, 3929, 0, 4299, 4300, 4276,
	4307, 4315, 0, 1077, 0, 1195, 0, 4316, 1193, 4318,
	1193, 0, 0, 1195, 4320, 4321, 1924, 0, 2169, 0,
	0, 0, 0, 0, 4319, 0, 1195, 4355, 0, 0,
	4326, 4325, 0, 0, 0, 4359, 4335, 4179, 4336, 1930,
	1077, 1077, 0, 1077, 0, 0, 0, 1197, 0, 4340,
	0, 0, 4308, 0, 0, 4310, 0, 0, 0, 1197,
	0, 1194, 0, 0, 0, 4382, 4367, 4370, 4327, 0,
	4328, 4379, 0, 1194, 4358, 1195, 4357, 1195, 4386, 0,
	0, 0, 0, 4371, 4403, 256, 4375, 4407, 256, 0,
	0, 4406, 0, 1077, 1077, 1077, 4376, 4408, 0, 2337,
	0, 0, 4389, 0, 0, 4372, 4402, 4401, 4394, 0,
	0, 0, 1197, 0, 0, 1197, 0, 0, 1933, 0,
	0, 0, 0, 0, 1077, 0, 1194, 0, 4441, 1194,
	0, 4420, 4421, 4422, 4436, 4423, 1193, 0, 0, 0,
	0, 256, 0, 0, 0, 256, 0, 0, 0, 0,
	256, 0, 4462, 4455, 0, 0, 256, 4464, 0, 0,
	1026, 4439, 0, 0, 4466, 0, 0, 0, 0, 4476,
	0, 0, 256, 0, 256, 4478, 4477, 1077, 661, 0,
	256, 4463, 0, 0, 4482, 0, 2442, 0, 0, 4472,
	0, 4470, 745, 0, 0, 4471, 853, 0, 0, 0,
	0, 4437, 0, 1195, 4502, 0, 4474, 4475, 0, 0,
	4498, 0, 4479, 0, 4494, 4492, 4490, 4488, 4489, 4501,
	0, 256, 0, 1259, 256, 4503, 1199, 0, 1199, 4522,
	4505, 0, 4367, 4520, 4519, 4370, 0, 4509, 745, 4514,
	4530, 4518, 0, 4386, 0, 256, 0, 0, 0, 0,
	4526, 0, 2243, 0, 0, 4529, 0, 256, 256, 0,
	256, 0, 256, 0, 256, 4543, 256, 0, 0, 0,
	0, 0, 0, 3929, 4542, 3929, 0, 4545, 0, 0,
	0, 2610, 0, 4552, 0, 0, 3757, 0, 0, 2275,
	0, 0, 2276, 4551, 2277, 0, 1077, 1077, 4556, 0,
	0, 4554, 4558, 4562, 0, 1077, 256, 1077, 1077, 4559,
	0, 0, 0, 4571, 0, 4525, 0, 4576, 0, 4568,
	0, 0, 4574, 4580, 4578, 4581, 4579, 4577, 0, 0,
	727, 4575, 4582, 4521, 745, 4523, 4589, 4585, 0, 0,
	0, 4593, 2876, 0, 4592, 4591, 0, 4594, 4590, 4595,
	4569, 4570, 0, 0, 4600, 3809, 0, 4599, 4549, 0,
	0, 0, 4596, 1077, 0, 0, 3012, 3013, 0, 0,
	0, 4607, 4601, 4609, 4604, 0, 4606, 0, 2973, 4603,
	1193, 1193, 0, 0, 0, 0, 0, 4610, 0, 0,
	0, 0, 0, 1197, 0, 1197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4605, 1194, 0, 1194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1264,
	0, 0, 0, 2684, 0, 0, 0, 0, 0, 0,
	2801, 0, 758, 1789, 0, 0, 0, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2536, 2536,
	0, 1193, 0, 2793, 2791, 0, 1264, 0, 0, 0,
	2795, 2797, 2787, 1193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1264, 1264, 0, 0, 0, 256, 0, 0, 0,
	3131, 3132, 3133, 0, 0, 661, 0, 4132, 4133, 0,
	0, 0, 256, 0, 661, 0, 1193, 0, 1195, 1193,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 2131,
	1195, 4147, 0, 0, 4149, 4150, 0, 0, 763, 0,
	0, 256, 1269, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 1717, 1718, 0, 1750,
	1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0, 0,
	0, 1428, 0, 1195, 0, 0, 1195, 0, 256, 1269,
	1748, 677, 2536, 2536, 2536, 0, 0, 1720, 0, 0,
	0, 2648, 0, 0, 1439, 1766, 0, 256, 0, 0,
	256, 0, 0, 0, 256, 0, 256, 0, 0, 0,
	722, 1259, 0, 256, 256, 0, 1269, 1269, 2664, 3995,
	0, 1719, 1924, 256, 0, 2789, 0, 0, 0, 0,
	4007, 1739, 0, 0, 765, 0, 2803, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4028, 0, 0, 0, 2802, 2794, 2792,
	2796, 2798, 2788, 2790, 2804, 0, 0, 2704, 0, 0,
	0, 2800, 0, 1284, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 769, 0, 0, 1026, 0, 0, 0,
	1026, 0, 0, 256, 2807, 0, 4284, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 0, 0, 0, 0,
	0, 0, 1725, 1040, 0, 0, 256, 1439, 0, 0,
	0, 0, 0, 0, 0, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1459, 0, 1465, 0, 1471,
	0, 0, 256, 2818, 0, 0, 0, 0, 1757, 0,
	0, 1767, 0, 0, 0, 760, 0, 1747, 1749, 1439,
	0, 1439, 0, 0, 0, 0, 0, 1457, 0, 0,
	256, 0, 0, 0, 1763, 0, 1764, 1193, 256, 1193,
	0, 0, 0, 1734, 1735, 764, 0, 0, 2859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2704, 0,
	661, 1755, 0, 1559, 0, 1564, 0, 0, 0, 2888,
	853, 0, 2704, 2704, 0, 1573, 1740, 1578, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 767, 0, 0, 0, 0, 0, 762, 0, 0,
	0, 0, 0, 0, 1195, 0, 1195, 256, 1259, 256,
	0, 0, 0, 1457, 0, 1457, 1269, 256, 1765, 0,
	1259, 0, 1259, 0, 1259, 2808, 0, 0, 0, 0,
	0, 0, 0, 0, 2799, 0, 0, 0, 0, 0,
	1640, 0, 759, 1646, 0, 0, 0, 0, 0, 0,
	256, 256, 256, 256, 1259, 0, 0, 1259, 0, 256,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 0, 0, 3161, 0, 0, 0, 0, 0, 0,
	0, 4451, 1924, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 761, 0, 0, 0, 1746,
	256, 3494, 3495, 0, 0, 0, 3187, 3108, 3109, 0,
	3126, 3127, 3128, 0, 0, 0, 0, 0, 0, 1741,
	0, 3200, 0, 0, 0, 0, 1924, 1924, 0, 0,
	1717, 1718, 0, 0, 0, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 3218, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 1924,
	1924, 0, 3123, 0, 0, 0, 4289, 0, 0, 1457,
	0, 0, 0, 2536, 2536, 1719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 0, 4306, 0, 0,
	1924, 0, 0, 3557, 3558, 3559, 3560, 3561, 3562, 3563,
	3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573,
	3574, 3575, 0, 3579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 3114, 0, 0, 0, 1859, 1859, 1859,
	2404, 0, 0, 0, 0, 0, 1742, 1743, 1744, 1745,
	0, 0, 0, 1439, 1439, 1789, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 2536, 2536, 2536, 2536, 2536,
	2536, 2536, 2536, 2536, 2536, 2536, 2536, 2536, 2536, 2536,
	2536, 2536, 2536, 2536, 0, 2536, 0, 0, 4390, 3200,
	256, 4391, 0, 0, 0, 3129, 0, 0, 0, 0,
	0, 1747, 1749, 0, 0, 0, 256, 0, 0, 2540,
	0, 661, 0, 0, 0, 0, 661, 0, 0, 661,
	0, 0, 661, 661, 0, 0, 0, 1439, 661, 0,
	0, 0, 0, 0, 0, 0, 256, 3124, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 1457, 0,
	2169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 1026, 0, 256, 256, 0, 0, 1040,
	0, 0, 0, 1040, 0, 0, 0, 0, 1444, 0,
	0, 0, 0, 1924, 0, 0, 0, 0, 0, 1420,
	0, 0, 0, 1420, 2704, 2704, 256, 0, 3254, 0,
	0, 1433, 0, 0, 1335, 0, 0, 2704, 0, 1479,
	3268, 0, 0, 0, 0, 0, 0, 0, 2704, 3268,
	0, 2704, 3268, 0, 0, 3268, 0, 0, 0, 0,
	0, 1264, 0, 0, 1515, 0, 0, 0, 256, 256,
	3254, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1556,
	3125, 3254, 256, 1746, 3320, 3320, 0, 1259, 1717, 1718,
	0, 0, 0, 1569, 0, 0, 0, 0, 3514, 0,
	0, 0, 2704, 1741, 3339, 2704, 3254, 0, 0, 2704,
	2704, 3254, 1748, 0, 0, 3530, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 1439, 0, 1719, 256, 3366, 0, 0, 3368, 2704,
	0, 0, 256, 0, 0, 0, 256, 0, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 2859, 0,
	0, 1259, 0, 256, 0, 0, 2704, 0, 661, 0,
	0, 0, 0, 0, 0, 2704, 0, 0, 0, 0,
	3120, 3121, 3122, 0, 0, 0, 0, 3119, 3117, 3118,
	3110, 3111, 3112, 3113, 3115, 3116, 256, 2859, 0, 0,
	2859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	3465, 0, 0, 0, 0, 0, 0, 0, 0, 3621,
	0, 0, 0, 0, 0, 0, 0, 3471, 0, 0,
	1259, 256, 0, 256, 0, 1717, 1718, 0, 0, 1259,
	0, 0, 0, 0, 0, 0, 0, 1717, 1718, 1747,
	1749, 0, 0, 0, 0, 0, 0, 1109, 0, 1748,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 256,
	0, 1748, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 1740, 0,
	1739, 0, 1719, 0, 0, 0, 0, 0, 0, 1736,
	0, 2312, 0, 2316, 0, 3535, 2540, 0, 0, 0,
	2330, 0, 0, 0, 0, 0, 0, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 0, 2379, 0, 2381, 2382, 2383, 2384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 2408, 0, 0,
	1420, 1725, 0, 0, 0, 0, 2540, 2540, 1788, 0,
	0, 0, 2423, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2453, 2456,
	2459, 2462, 0, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	0, 0, 0, 0, 256, 256, 1747, 1749, 1924, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 1747, 1749,
	0, 2532, 0, 2543, 2545, 2550, 661, 661, 0, 0,
	0, 0, 1734, 1735, 0, 0, 0, 4073, 0, 0,
	0, 0, 0, 1264, 1200, 0, 0, 0, 1457, 1457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1457, 1457, 1457, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1040, 1740, 0, 0,
	0, 1924, 1420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2169, 0, 4110, 3320, 3108, 3109, 0, 3126,
	3127, 3128, 0, 0, 0, 0, 0, 0, 0, 0,
	2540, 2540, 2540, 0, 0, 0, 0, 0, 0, 3830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2536,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 0, 0, 0, 3320, 0, 0, 0, 0, 0,
	0, 3123, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2536, 0, 1746, 0,
	3883, 0, 0, 3254, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 1741, 0,
	0, 0, 0, 0, 3893, 256, 1924, 1420, 0, 0,
	1741, 0, 0, 0, 256, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4236, 0, 0,
	0, 0, 0, 2704, 256, 0, 0, 0, 0, 0,
	0, 0, 3114, 2888, 2888, 0, 0, 0, 0, 853,
	853, 2704, 0, 0, 0, 2859, 2859, 0, 0, 853,
	2704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2199, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 2213, 0, 0, 2821, 2822, 0, 2824, 0,
	0, 0, 2214, 0, 3129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2222, 0, 2225, 2226, 2227, 2536,
	0, 0, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 3124, 0, 0, 0,
	0, 0, 3848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 2169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 1264, 0, 0, 4065, 0, 0, 0,
	0, 0, 0, 0, 256, 77, 0, 0, 0, 0,
	1457, 2944, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4065, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 1420, 0,
	0, 0, 0, 0, 0, 2704, 2704, 0, 3320, 0,
	0, 0, 0, 2337, 0, 1770, 1771, 2704, 0, 0,
	0, 0, 0, 0, 3931, 0, 3931, 1457, 0, 3125,
	0, 0, 847, 0, 0, 2704, 0, 3268, 0, 0,
	1457, 1457, 256, 3254, 0, 0, 104, 0, 0, 0,
	0, 90, 101, 0, 1200, 3254, 256, 3254, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 2337, 0, 0,
	2995, 2996, 2704, 0, 2704, 256, 3002, 0, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 0, 0, 0,
	0, 2540, 2540, 0, 0, 3016, 3017, 0, 1200, 2704,
	0, 2423, 1200, 0, 3999, 0, 1200, 0, 91, 0,
	3024, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 72, 0, 3038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	73, 0, 0, 3050, 0, 0, 0, 0, 0, 0,
	0, 0, 3931, 0, 1420, 1457, 77, 0, 0, 3120,
	3121, 3122, 1200, 0, 0, 0, 3119, 3117, 3118, 3110,
	3111, 3112, 3113, 3115, 3116, 0, 0, 0, 0, 0,
	1420, 0, 1200, 0, 0, 0, 0, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 1200, 0, 2540, 2540, 2540, 2540, 2540, 2540, 2540,
	2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540,
	2540, 2540, 0, 2540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 0, 0, 0, 0, 0, 0,
	0, 0, 2550, 2550, 2550, 0, 0, 104, 0, 0,
	0, 94, 90, 101, 1200, 0, 0, 1859, 0, 0,
	0, 2665, 1273, 0, 0, 3165, 0, 2704, 0, 3268,
	0, 0, 4103, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 1439, 0, 0, 0, 0, 4122, 0, 4122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 97, 0, 100, 0, 0, 745, 91,
	0, 0, 0, 0, 0, 0, 0, 1259, 0, 0,
	0, 0, 1420, 0, 0, 0, 0, 0, 0, 224,
	0, 3254, 256, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 4103, 0, 0, 0, 0, 0, 0, 0, 2704,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 4185, 0, 0, 226, 0, 0, 1264, 1026,
	0, 0, 0, 2809, 1457, 0, 0, 0, 1420, 0,
	0, 0, 0, 0, 0, 0, 3931, 3931, 0, 0,
	0, 147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 256, 3287, 184, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 3535, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 94, 3320, 0, 0, 3320, 0, 0, 0,
	0, 0, 4103, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3931, 0, 0,
	0, 0, 0, 0, 2920, 0, 0, 0, 0, 3931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 97, 0, 100, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 0, 1200, 0, 0, 0, 0, 3999,
	224, 0, 0, 0, 0, 0, 0, 0, 848, 1200,
	0, 0, 3931, 145, 256, 3931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3268, 1937, 0, 0, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 1457, 0, 1457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 1717, 1718, 0,
	0, 0, 0, 1760, 1761, 1762, 4351, 184, 0, 0,
	0, 0, 0, 0, 0, 225, 1200, 0, 0, 4122,
	0, 1748, 256, 0, 0, 0, 218, 1200, 1720, 0,
	0, 0, 0, 0, 0, 219, 1766, 0, 0, 0,
	0, 2704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1200, 0, 0, 0, 0, 0, 1553, 0, 256,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 2330, 0, 0, 0, 0, 0, 3489,
	3490, 1736, 0, 3493, 0, 0, 3535, 3496, 0, 0,
	0, 0, 0, 0, 0, 0, 3500, 0, 0, 0,
	0, 0, 0, 0, 1457, 3507, 0, 0, 3165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3519, 0, 0, 0, 0, 0, 3108,
	3109, 256, 3126, 3127, 3128, 0, 0, 0, 0, 0,
	0, 0, 0, 3542, 3543, 0, 3544, 3545, 3546, 0,
	0, 0, 3829, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 4103, 0, 0, 0, 1200, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 3552, 0,
	0, 0, 3554, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1767, 0, 3123, 0, 2704, 0, 1747, 1749,
	0, 0, 0, 3931, 0, 3931, 0, 0, 1457, 0,
	0, 0, 0, 3582, 3583, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 1734, 1735, 0, 0, 0, 0,
	0, 3594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 3603, 0, 0, 0,
	0, 1457, 1717, 1718, 0, 1420, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1200,
	1420, 1200, 0, 1200, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 1720, 0, 3114, 2888, 1073, 0, 1200,
	1200, 1420, 0, 0, 0, 2704, 0, 0, 0, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2888, 0, 1200, 0, 1200, 1200, 1200, 1719, 0, 0,
	0, 0, 3646, 0, 0, 0, 0, 1739, 1040, 0,
	0, 0, 0, 255, 255, 255, 1736, 2540, 1717, 1718,
	0, 0, 1040, 0, 0, 3665, 0, 3129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 782, 1748, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 3689, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 782, 0, 3497, 0, 3124,
	0, 0, 0, 0, 2540, 0, 0, 0, 0, 0,
	1741, 0, 0, 1719, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 0, 1739, 0, 0, 0, 0, 1725, 0,
	0, 0, 1736, 0, 0, 0, 1758, 0, 0, 1420,
	0, 0, 0, 0, 0, 1937, 1937, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 3492, 0, 0, 0, 3382, 1420, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 3389, 1734,
	1735, 0, 0, 3781, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1196, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 1200, 1756, 0, 0, 0, 0,
	3430, 3431, 3125, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 2540, 0, 1747,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3826, 3827, 0,
	0, 0, 0, 3831, 3832, 1734, 1735, 0, 3835, 3836,
	0, 0, 0, 0, 0, 3840, 1200, 0, 0, 0,
	0, 0, 0, 1200, 0, 0, 3844, 0, 0, 0,
	0, 0, 1200, 0, 0, 0, 0, 0, 1740, 0,
	1420, 0, 3849, 1420, 0, 0, 0, 1717, 1718, 1200,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 1746, 3108, 3109, 1720, 3126,
	3127, 3128, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 3120, 3121, 3122, 1741, 0, 0, 0, 3119,
	3117, 3118, 3110, 3111, 3112, 3113, 3115, 3116, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 1420, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 1420, 0, 0, 3108, 3109, 0,
	3126, 3127, 3128, 0, 0, 0, 0, 0, 0, 1200,
	1200, 3123, 0, 0, 0, 0, 0, 0, 0, 0,
	3503, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 3123, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 0, 0, 0, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 0, 3114, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1767, 0, 0, 0, 0, 1200, 1747, 1749,
	0, 0, 0, 0, 3108, 3109, 0, 3126, 3127, 3128,
	0, 1200, 0, 0, 0, 1763, 0, 1764, 0, 0,
	0, 3130, 0, 0, 1734, 1735, 0, 3502, 1420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 3114, 3129, 0, 0, 0, 0, 0,
	0, 0, 0, 1200, 0, 1737, 1733, 1740, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 0, 0, 0, 4060, 4061, 4062, 0, 0, 3123,
	0, 0, 0, 0, 1200, 0, 3124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 2330, 1200, 1765,
	4071, 4072, 0, 0, 0, 3129, 0, 0, 0, 0,
	0, 0, 1200, 0, 0, 0, 0, 1754, 4080, 4083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3719, 0, 0, 255, 0, 255, 255,
	3114, 0, 255, 0, 0, 0, 4123, 0, 0, 0,
	1746, 0, 0, 0, 4129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4136, 0, 0, 1026, 0, 0,
	1741, 0, 0, 0, 0, 0, 4144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 255,
	255, 0, 0, 255, 255, 0, 1758, 0, 0, 3125,
	0, 0, 3129, 0, 0, 0, 782, 3786, 3787, 3788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 255, 0, 0, 0, 0,
	3125, 0, 0, 1420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 255,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	3059, 0, 0, 0, 3060, 4256, 0, 0, 4259, 3120,
	3121, 3122, 0, 0, 0, 0, 3119, 3117, 3118, 3110,
	3111, 3112, 3113, 3115, 3116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 1718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 1720, 0, 3125, 1026, 1026,
	3120, 3121, 3122, 255, 0, 0, 0, 3119, 3117, 3118,
	3110, 3111, 3112, 3113, 3115, 3116, 0, 1420, 0, 1420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	1200, 1200, 0, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 1420, 0, 0, 1200, 0, 1736, 0,
	0, 0, 0, 0, 72, 0, 0, 0, 0, 2330,
	0, 0, 0, 0, 1200, 0, 0, 0, 4083, 0,
	73, 0, 0, 0, 0, 0, 1200, 0, 0, 1200,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 3491,
	1200, 0, 0, 0, 0, 1420, 1026, 0, 0, 0,
	0, 0, 0, 0, 1200, 1200, 1420, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 1273, 84, 3120, 3121, 3122,
	1725, 0, 0, 0, 3119, 3117, 3118, 3110, 3111, 3112,
	3113, 3115, 3116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4419, 4419,
	4419, 0, 0, 847, 0, 0, 0, 0, 0, 1937,
	0, 0, 0, 1420, 0, 1747, 1749, 104, 0, 0,
	0, 0, 90, 101, 0, 0, 0, 0, 1200, 4440,
	0, 0, 0, 0, 4045, 0, 4047, 0, 0, 0,
	0, 1734, 1735, 0, 0, 3108, 3109, 0, 3126, 3127,
	3128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 1200, 1196, 1420, 0, 0, 255, 1717,
	1718, 0, 0, 0, 1740, 0, 0, 0, 1200, 91,
	0, 0, 4419, 255, 1881, 255, 0, 1200, 0, 0,
	782, 0, 1200, 1748, 0, 1420, 0, 782, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 0, 0, 4092,
	3123, 1200, 0, 1200, 255, 0, 153, 1200, 0, 0,
	0, 255, 0, 0, 1719, 72, 1420, 46, 45, 0,
	0, 0, 0, 0, 1739, 1200, 0, 0, 0, 0,
	0, 73, 0, 1736, 148, 0, 1200, 0, 0, 0,
	0, 0, 1420, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 1200, 0, 0, 0, 0, 67, 0,
	0, 0, 0, 0, 0, 48, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 1200, 1200,
	1040, 4419, 4563, 0, 3001, 47, 0, 84, 4157, 0,
	4567, 3114, 0, 0, 0, 0, 1420, 1741, 0, 0,
	0, 1200, 94, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 50, 68, 0, 0, 1725, 0, 0, 0, 51,
	0, 0, 0, 0, 57, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 49, 0, 104, 1200,
	0, 0, 1200, 90, 101, 0, 1420, 0, 0, 0,
	0, 0, 0, 180, 97, 0, 100, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1189, 0, 0,
	224, 0, 52, 0, 0, 0, 1734, 1735, 848, 0,
	0, 0, 0, 145, 0, 3124, 0, 0, 0, 1937,
	91, 0, 0, 0, 0, 255, 0, 0, 782, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 0, 1740,
	0, 0, 0, 251, 251, 657, 226, 0, 0, 0,
	0, 1737, 1733, 1200, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 1937, 1937, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 255, 0, 184, 0, 0,
	255, 0, 0, 0, 0, 225, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 255, 0, 255, 219, 1937, 1937, 0, 0,
	255, 1040, 1040, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 1273, 0, 0, 0, 0, 1551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1937, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3125, 0,
	0, 255, 1746, 94, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 1200, 0, 0, 0, 0,
	53, 0, 1741, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 56, 0, 0, 782, 255, 59,
	255, 0, 255, 0, 255, 0, 255, 1200, 69, 0,
	0, 1086, 0, 58, 180, 97, 0, 100, 0, 0,
	0, 54, 0, 0, 0, 152, 0, 0, 0, 1040,
	0, 0, 55, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 255, 0, 0, 62,
	0, 0, 0, 0, 145, 0, 0, 257, 257, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 226, 3120, 3121,
	3122, 0, 0, 0, 0, 3119, 3117, 3118, 3110, 3111,
	3112, 3113, 3115, 3116, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 147, 0, 0, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 184, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	1937, 3, 0, 1717, 1718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	1200, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 1200, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 0, 1719, 0,
	0, 0, 1200, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 1196, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 1200, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 1742,
	1743, 1744, 1745, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	255, 0, 0, 0, 255, 0, 255, 0, 0, 0,
	0, 0, 0, 255, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 1200, 0, 0, 0, 1200, 0, 1200, 0,
	1734, 1735, 0, 0, 0, 1200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 1200, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 0, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 0, 1245, 0, 1245, 1245,
	0, 0, 782, 0, 0, 1200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 1200, 1200, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	1200, 0, 0, 1437, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 0, 0, 0, 1746, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1741, 0, 255, 0,
	0, 0, 1200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 1200, 1200, 0, 0, 255, 0, 255,
	0, 0, 0, 0, 1200, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1557, 1558,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	255, 255, 255, 255, 0, 0, 0, 0, 0, 255,
	0, 255, 0, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 1200, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 1200, 257, 257, 0, 0, 257, 0, 1282, 0,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 0, 0, 1667, 0, 0, 0, 1937, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 1282, 257, 257, 1200, 1282, 257, 257, 0,
	1282, 0, 0, 0, 0, 0, 1200, 1200, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 0, 1200, 0,
	0, 0, 0, 0, 0, 0, 1282, 0, 257, 257,
	0, 0, 0, 0, 0, 0, 1200, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 0, 0, 0,
	0, 1282, 257, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 0, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1200, 1282, 1717,
	1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 1200,
	1196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 1748, 0, 0, 1196, 0, 257, 0,
	1720, 0, 0, 0, 0, 0, 1062, 106, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 1897, 0,
	0, 0, 1200, 0, 1719, 1200, 0, 0, 0, 1200,
	0, 0, 0, 1906, 1739, 1437, 0, 0, 0, 1200,
	1200, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 0, 0,
	0, 255, 0, 0, 0, 255, 255, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 1437, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 255,
	0, 255, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 255, 0, 1767, 0, 0, 0, 0, 1001,
	1747, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 0, 1763, 0, 1764,
	0, 0, 0, 0, 0, 0, 1734, 1735, 0, 0,
	0, 0, 0, 2511, 2512, 2513, 2514, 2507, 2508, 2509,
	2510, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	255, 0, 0, 1183, 0, 0, 0, 0, 0, 1740,
	0, 0, 257, 0, 782, 0, 0, 0, 0, 0,
	0, 0, 255, 1282, 0, 0, 255, 257, 257, 257,
	0, 0, 0, 0, 257, 0, 0, 707, 0, 0,
	0, 257, 0, 255, 1282, 0, 0, 0, 0, 0,
	0, 1765, 0, 1196, 0, 0, 0, 690, 0, 0,
	0, 0, 0, 691, 2487, 2488, 2489, 2490, 257, 1754,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 1200, 0, 1200, 255, 2499, 2500, 2501,
	2502, 2495, 2496, 2497, 2498, 2503, 2504, 2505, 2506, 0,
	0, 692, 0, 0, 0, 0, 0, 0, 0, 0,
	1282, 2156, 693, 0, 0, 2163, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 0, 2175, 0, 0, 0,
	0, 0, 1746, 694, 0, 0, 0, 0, 0, 0,
	0, 255, 2187, 255, 2187, 1282, 0, 0, 0, 0,
	2194, 0, 1741, 713, 0, 0, 0, 0, 0, 0,
	2483, 2484, 2485, 2486, 2491, 2492, 2493, 2494, 0, 0,
	0, 0, 695, 0, 0, 0, 0, 0, 1758, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2163, 0, 0, 2218, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2238, 697, 0, 0, 698,
	0, 0, 0, 0, 0, 0, 0, 0, 2251, 0,
	2253, 0, 2255, 0, 2257, 722, 2258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	1282, 1282, 257, 0, 0, 0, 2280, 1756, 0, 0,
	1282, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 0, 2419, 0, 0, 0, 2420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 257,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1196, 1196, 257, 0, 257, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 0, 1282, 0, 1282, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 700, 0, 0,
	0, 0, 0, 1282, 1282, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 1282, 257, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 720, 1282, 701, 1282, 1282,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 257, 0, 257, 0, 257, 0, 257, 0,
	257, 0, 0, 721, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 0, 717, 718, 715, 0, 0, 774,
	0, 0, 710, 0, 0, 703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 774, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2607, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 255, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 1282, 0, 0, 255, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 723,
	0, 0, 0, 0, 0, 255, 0, 106, 0, 106,
	708, 106, 0, 0, 255, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 255, 0, 0, 2650, 0, 0,
	1245, 0, 0, 0, 1245, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 1196, 0, 0, 0, 0, 0,
	0, 0, 0, 2175, 0, 0, 0, 0, 0, 0,
	0, 1021, 106, 106, 0, 0, 0, 0, 1282, 0,
	0, 0, 0, 0, 0, 106, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 106,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 690, 0, 0, 0, 0, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 1437, 0, 0, 0,
	257, 0, 0, 1282, 0, 0, 0, 692, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2163, 0, 0, 0, 0, 0, 0, 0, 2175, 713,
	0, 0, 257, 0, 1196, 0, 0, 0, 0, 0,
	0, 0, 1196, 0, 0, 0, 0, 0, 695, 0,
	1001, 257, 0, 0, 257, 1881, 0, 0, 257, 0,
	257, 0, 0, 0, 0, 0, 0, 257, 257, 0,
	1782, 696, 0, 1282, 1282, 0, 0, 257, 2918, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 1793, 697, 0, 0, 698, 0, 2928, 0, 2931,
	0, 0, 0, 0, 1881, 0, 1881, 0, 0, 0,
	0, 722, 0, 0, 0, 1282, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 712, 255, 0, 255, 0,
	2956, 1437, 2958, 1437, 257, 0, 0, 0, 0, 2964,
	0, 0, 0, 0, 0, 255, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 1282, 1245, 0, 0, 0, 0, 0, 0, 0,
	2992, 0, 0, 255, 709, 1282, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 257, 0, 0, 0,
	0, 1879, 0, 1882, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 257, 0, 0, 1282, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 700, 0, 0, 0, 0, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1282, 0, 1282, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 257, 701, 0, 0, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 0,
	717, 718, 715, 0, 0, 0, 0, 0, 710, 0,
	0, 703, 0, 0, 257, 257, 257, 257, 0, 0,
	255, 0, 1280, 257, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 0, 711, 0, 0, 257, 0, 0, 0,
	0, 0, 705, 0, 257, 0, 1338, 0, 0, 0,
	1338, 0, 255, 0, 1280, 0, 706, 0, 0, 0,
	0, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1717, 1718, 0, 1750, 1751, 1752, 1760, 1761, 1762,
	1280, 0, 0, 0, 0, 0, 1881, 1881, 0, 0,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 0,
	1280, 0, 1720, 255, 255, 1280, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 1245, 0, 0, 0, 1437, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 3252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 1021, 0,
	1021, 0, 0, 0, 0, 0, 0, 0, 3302, 3304,
	255, 2175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 1742, 1743, 1744,
	1745, 0, 1881, 0, 255, 1881, 0, 1725, 0, 0,
	0, 0, 0, 0, 0, 1282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 1767, 0, 1282, 0,
	0, 0, 1747, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 0, 0, 0, 0, 0, 1763,
	0, 1764, 3379, 0, 0, 0, 3383, 0, 1734, 1735,
	0, 0, 0, 0, 1282, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 1755, 0, 1282, 1282,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 257,
	257, 1740, 0, 0, 0, 0, 1001, 0, 0, 1001,
	1001, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 3435, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 1282, 0, 2397, 0, 0, 0, 0, 0,
	0, 0, 257, 257, 0, 257, 0, 0, 0, 0,
	1021, 3474, 257, 1437, 0, 0, 0, 0, 0, 1787,
	0, 255, 0, 1787, 0, 0, 257, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 0, 0, 0, 0, 1338, 0, 3487,
	0, 1282, 0, 0, 1746, 0, 1282, 0, 774, 0,
	0, 0, 0, 0, 0, 774, 0, 0, 1280, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 1282,
	0, 0, 0, 0, 257, 1282, 0, 1282, 0, 0,
	0, 1282, 0, 0, 0, 1183, 0, 0, 257, 0,
	1758, 0, 0, 1881, 0, 1881, 257, 0, 0, 1282,
	257, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	1282, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 1282, 0, 0, 0, 0, 0, 1338,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 1282, 0, 257, 1282, 257, 3854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 1280, 1280, 0, 0, 0, 0,
	1282, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1282, 0, 1717,
	1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 1748, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 106, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 1280, 0, 1280,
	0, 1280, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 2175, 0, 106, 1280, 1280, 0,
	0, 0, 106, 0, 0, 2175, 0, 0, 1280, 0,
	0, 0, 0, 0, 0, 3747, 0, 0, 0, 0,
	1280, 0, 1280, 1280, 1280, 0, 0, 0, 0, 2175,
	0, 0, 0, 0, 3763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 774, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3811, 1757, 0, 0, 1767, 0, 0, 0, 0, 0,
	1747, 1749, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 1764,
	0, 0, 0, 0, 0, 0, 1734, 1735, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 1339, 0, 0,
	0, 1339, 0, 0, 0, 1281, 0, 0, 0, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2397, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 1787, 0, 257, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 1338, 0, 0, 0, 0, 0, 257, 0,
	0, 1281, 0, 257, 0, 0, 1281, 0, 257, 0,
	0, 0, 0, 0, 1282, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1282,
	1282, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 1282, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1741, 1281, 257, 0, 1282, 0, 0, 0,
	0, 0, 3946, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 2175, 0, 1758, 0,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 2175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	1282, 0, 1282, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 106, 0, 0, 106, 1338, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 1280,
	257, 0, 257, 0, 0, 0, 0, 0, 0, 1282,
	4111, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 106, 106, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1282, 1282, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 1282, 0, 0, 257, 0, 0,
	0, 0, 2175, 0, 0, 0, 1282, 257, 0, 1281,
	0, 1282, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 1282, 1282, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 0,
	0, 0, 1183, 0, 0, 1021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 0, 106,
	106, 0, 0, 4226, 1437, 0, 1281, 0, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1282,
	0, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 1717, 1718, 0, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 1282,
	0, 0, 0, 0, 4309, 0, 257, 0, 0, 0,
	1282, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 1281, 1281, 0, 0, 0,
	1739, 0, 0, 0, 0, 1339, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1282,
	0, 0, 1282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 257, 0,
	0, 0, 4361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 0, 1281, 4396,
	1281, 0, 1281, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 1281,
	0, 0, 0, 1183, 1183, 0, 0, 1757, 0, 1281,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 1338,
	0, 1281, 0, 1281, 1281, 1281, 0, 0, 0, 0,
	0, 0, 0, 1763, 257, 1764, 0, 0, 0, 0,
	0, 0, 1734, 1735, 0, 0, 0, 0, 0, 0,
	0, 4456, 1338, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 1338, 257, 0,
	0, 0, 0, 1282, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 1282, 1282, 0, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1282, 0, 1280, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 1718, 0, 1750,
	1751, 1752, 1760, 1761, 1762, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	1748, 0, 0, 257, 0, 0, 0, 1720, 1746, 0,
	0, 0, 0, 0, 0, 1766, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 1338, 106, 0, 0,
	0, 1719, 0, 1339, 0, 1280, 0, 0, 0, 0,
	1280, 1739, 0, 0, 1758, 0, 0, 0, 0, 0,
	1736, 0, 0, 1183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 257, 0, 0, 0, 1280,
	0, 1280, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 106, 0, 0, 0,
	0, 0, 1339, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 0, 0, 1339, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 1280, 1280, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 1757, 1280,
	0, 1767, 3505, 0, 0, 0, 0, 1747, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 1764, 0, 0, 910,
	0, 956, 0, 1734, 1735, 0, 0, 1338, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 918, 106, 1281, 1281,
	0, 0, 0, 1183, 0, 0, 1740, 0, 0, 0,
	0, 1183, 932, 916, 915, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 917, 0, 0, 0, 0, 920, 0, 1765, 0,
	0, 964, 0, 0, 1338, 0, 0, 0, 0, 0,
	929, 930, 0, 0, 0, 0, 1754, 0, 0, 946,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 957, 922, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 923, 0, 0, 0, 0, 0, 0, 0,
	1281, 955, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1741,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 1281, 0, 0, 925, 0, 0, 0, 0,
	0, 0, 0, 914, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 926, 927, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 1281, 0, 0,
	934, 933, 0, 0, 0, 0, 0, 0, 928, 0,
	0, 1281, 943, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	961, 954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 3062, 0, 0, 0, 0, 1717, 1718,
	0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0,
	0, 0, 0, 921, 0, 0, 963, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 1766, 919, 0,
	0, 0, 950, 951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 953, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 0, 0, 0, 1280,
	0, 0, 0, 1739, 0, 0, 948, 0, 0, 0,
	0, 0, 1736, 962, 944, 0, 937, 935, 0, 940,
	0, 0, 0, 0, 0, 941, 0, 0, 912, 0,
	959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 0,
	0, 913, 0, 0, 0, 0, 0, 2397, 0, 0,
	0, 0, 952, 0, 942, 0, 0, 0, 0, 0,
	939, 0, 0, 1280, 1280, 1280, 0, 0, 0, 0,
	0, 960, 0, 0, 1742, 1743, 1744, 1745, 0, 945,
	1280, 0, 0, 0, 1725, 0, 0, 0, 924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 1767, 1338, 949, 0, 0, 0, 1747,
	1749, 0, 0, 0, 0, 0, 0, 1717, 1718, 0,
	1750, 1751, 1752, 1760, 1761, 1762, 1763, 0, 1764, 0,
	0, 0, 0, 0, 0, 1734, 1735, 0, 0, 0,
	1753, 1748, 0, 0, 0, 0, 0, 0, 1720, 0,
	1339, 0, 0, 1755, 0, 0, 1766, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 1719, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 1339, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 1338, 0, 1338, 0, 1754, 0,
	0, 0, 0, 1281, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 106, 0, 0, 0, 0, 1281, 0, 0,
	0, 1741, 1338, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1767, 1338, 0, 0, 0, 0, 1747, 1749,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 1281, 0, 0, 1763, 0, 1764, 0, 0,
	0, 1280, 1280, 0, 1734, 1735, 0, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 1280, 0,
	0, 1281, 1755, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 1280, 0, 1740, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	1281, 0, 1281, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 1280, 1280, 0, 1281, 0, 0, 0, 0, 1765,
	0, 0, 1338, 0, 0, 1281, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 1754, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 0, 1338, 0, 0, 3061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 1338, 0, 1280, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	1741, 0, 0, 0, 0, 0, 0, 0, 1339, 1717,
	1718, 1339, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 0,
	0, 0, 1753, 1748, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 1339, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 1338, 0, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 3058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 0, 0, 0, 0, 1725, 1717, 1718, 0, 1750,
	1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	1748, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 1757, 0, 0, 1767, 1766, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 1764,
	0, 1719, 0, 0, 0, 0, 1734, 1735, 0, 0,
	0, 1739, 0, 0, 0, 0, 1339, 0, 0, 0,
	1736, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 1740,
	0, 0, 0, 0, 0, 0, 0, 1280, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 0, 0, 0, 1754,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 1718,
	0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 1757, 0,
	0, 1767, 0, 0, 0, 0, 0, 1747, 1749, 0,
	0, 1753, 1748, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 1746, 0, 1763, 0, 1764, 1766, 0, 0,
	1281, 0, 0, 1734, 1735, 0, 0, 0, 0, 0,
	0, 0, 1741, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 1719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 1740, 0, 1758, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 1281, 1281, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1339, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 1746,
	1757, 0, 0, 1767, 0, 0, 3057, 0, 0, 1747,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 1763, 0, 1764, 0,
	0, 0, 0, 0, 0, 1734, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 1717,
	1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 1748, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 1339, 0, 1339, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1339, 0, 0, 1719, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 3056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 0, 1281, 1281, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1339, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 1757, 0, 0, 1767, 0, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 1764,
	0, 1281, 1281, 1281, 0, 0, 1734, 1735, 0, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1740,
	0, 0, 0, 1339, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 2420, 0, 0, 0, 0,
	0, 1765, 0, 0, 1339, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 1281, 0, 0, 0,
	0, 0, 1741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 1339, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 0, 4352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1336, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 1281,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 1341,
	273, 274, 1342, 1343, 1344, 1281, 1345, 603, 1346, 1347,
	1348, 1349, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 1350, 608, 284,
	285, 286, 287, 288, 289, 1351, 1352, 0, 290, 609,
	610, 611, 1353, 291, 292, 612, 1354, 1283, 1355, 293,
	294, 295, 296, 297, 298, 299, 0, 1356, 301, 302,
	303, 300, 304, 1357, 305, 0, 306, 307, 308, 309,
	310, 311, 1358, 312, 313, 314, 1141, 315, 316, 1359,
	1360, 1362, 1361, 1363, 1364, 1365, 317, 318, 319, 320,
	0, 321, 613, 614, 1366, 325, 322, 323, 1367, 326,
	324, 1368, 327, 328, 329, 1369, 1370, 330, 331, 332,
	1371, 333, 334, 1372, 335, 336, 337, 1373, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 1374, 262, 1375, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 1376,
	356, 1377, 1378, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 1379, 368, 621,
	1380, 622, 369, 1381, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 1144, 375, 376, 1382, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 1383,
	1143, 384, 626, 627, 1384, 628, 1385, 386, 387, 1145,
	629, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1386, 398, 400, 399,
	1387, 401, 630, 1148, 402, 403, 1149, 1388, 404, 0,
	0, 0, 405, 406, 409, 1389, 1390, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1391, 264, 1152, 448, 449, 1392, 631, 450, 632,
	452, 453, 1393, 0, 454, 0, 1394, 1395, 456, 457,
	458, 1396, 1397, 459, 460, 633, 1153, 461, 1154, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 1398, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 1399, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 1400, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 1401, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 1402, 532, 533, 531,
	534, 535, 536, 1403, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	1404, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 1405, 562, 563, 0,
	559, 551, 1406, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 1407, 572, 644, 645, 646, 647, 1408, 581,
	1409, 573, 574, 575, 648, 576, 649, 1410, 577, 578,
	579, 580, 0, 582, 583, 1411, 1412, 584, 585, 586,
	588, 589, 587, 590, 1413, 591, 1414, 0, 592, 593,
	594, 650, 651, 652, 1415, 596, 595, 597, 653, 1416,
	1417, 1418, 1419, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1336, 0, 0, 0, 0, 0, 0,
	0, 2585, 0, 0, 0, 0, 0, 0, 0, 2586,
	265, 267, 266, 268, 269, 270, 271, 272, 1341, 273,
	274, 1342, 1343, 1344, 0, 1345, 603, 1346, 1347, 1348,
	1349, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 1350, 608, 284, 285,
	286, 287, 288, 289, 1351, 1352, 0, 290, 609, 610,
	611, 1353, 291, 292, 612, 1354, 1283, 1355, 293, 294,
	295, 296, 297, 298, 299, 0, 1356, 301, 302, 303,
	300, 304, 1357, 305, 0, 306, 307, 308, 309, 310,
	311, 1358, 312, 313, 314, 1141, 315, 316, 1359, 1360,
	1362, 1361, 1363, 1364, 1365, 317, 318, 319, 320, 0,
	321, 613, 614, 1366, 325, 322, 323, 1367, 326, 324,
	1368, 327, 328, 329, 1369, 1370, 330, 331, 332, 1371,
	333, 334, 1372, 335, 336, 337, 1373, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 1374, 262, 1375, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 1376, 356,
	1377, 1378, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 1379, 368, 621, 1380,
	622, 369, 1381, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 1144, 375, 376, 1382, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 1383, 1143,
	384, 626, 627, 1384, 628, 1385, 386, 387, 1145, 629,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 1386, 398, 400, 399, 1387,
	401, 630, 1148, 402, 403, 1149, 1388, 404, 0, 0,
	0, 405, 406, 409, 1389, 1390, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1391, 264, 1152, 448, 449, 1392, 631, 450, 632, 452,
	453, 1393, 0, 454, 0, 1394, 1395, 456, 457, 458,
	1396, 1397, 459, 460, 633, 1153, 461, 1154, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	1398, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 1399, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 1400, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 1401, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 1402, 532, 533, 531, 534,
	535, 536, 1403, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 1404,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 1405, 562, 563, 0, 559,
	551, 1406, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 1407, 572, 644, 645, 646, 647, 1408, 581, 1409,
	573, 574, 575, 648, 576, 649, 1410, 577, 578, 579,
	580, 0, 582, 583, 1411, 1412, 584, 585, 586, 588,
	589, 587, 590, 1413, 591, 1414, 0, 592, 593, 594,
	650, 651, 652, 1415, 596, 595, 597, 653, 1416, 1417,
	1418, 1419, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 0, 3513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3515, 265, 267, 266,
	268, 269, 270, 271, 272, 1341, 273, 274, 1342, 1343,
	1344, 0, 1345, 603, 1346, 1347, 1348, 1349, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 1350, 608, 284, 285, 286, 287, 288,
	289, 1351, 1352, 0, 290, 609, 610, 611, 1353, 291,
	292, 612, 1354, 1283, 1355, 293, 294, 295, 296, 297,
	298, 299, 0, 1356, 301, 302, 303, 300, 304, 1357,
	305, 0, 306, 307, 308, 309, 310, 311, 1358, 312,
	313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361, 1363,
	1364, 1365, 317, 318, 319, 320, 0, 321, 613, 614,
	1366, 325, 322, 323, 1367, 326, 324, 1368, 327, 328,
	329, 1369, 1370, 330, 331, 332, 1371, 333, 334, 1372,
	335, 336, 337, 1373, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	1374, 262, 1375, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 1376, 356, 1377, 1378, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1379, 368, 621, 1380, 622, 369, 1381,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 1382, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1383, 1143, 384, 626, 627,
	1384, 628, 1385, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1386, 398, 400, 399, 1387, 401, 630, 1148,
	402, 403, 1149, 1388, 404, 0, 0, 0, 405, 406,
	409, 1389, 1390, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1391, 264, 1152,
	448, 449, 1392, 631, 450, 632, 452, 453, 1393, 0,
	454, 0, 1394, 1395, 456, 457, 458, 1396, 1397, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1398, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 1399, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 1400,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1401,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1402, 532, 533, 531, 534, 535, 536, 1403,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 1404, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 1405, 562, 563, 0, 559, 551, 1406, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 1407, 572,
	644, 645, 646, 647, 1408, 581, 1409, 573, 574, 575,
	648, 576, 649, 1410, 577, 578, 579, 580, 0, 582,
	583, 1411, 1412, 584, 585, 586, 588, 589, 587, 590,
	1413, 591, 1414, 0, 592, 593, 594, 650, 651, 652,
	1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3882, 265, 267,
	266, 268, 269, 270, 271, 272, 1341, 273, 274, 1342,
	1343, 1344, 0, 1345, 603, 1346, 1347, 1348, 1349, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 1350, 608, 284, 285, 286, 287,
	288, 289, 1351, 1352, 0, 290, 609, 610, 611, 1353,
	291, 292, 612, 1354, 1283, 1355, 293, 294, 295, 296,
	297, 298, 299, 0, 1356, 301, 302, 303, 300, 304,
	1357, 305, 0, 306, 307, 308, 309, 310, 311, 1358,
	312, 313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361,
	1363, 1364, 1365, 317, 318, 319, 320, 0, 321, 613,
	614, 1366, 325, 322, 323, 1367, 326, 324, 1368, 327,
	328, 329, 1369, 1370, 330, 331, 332, 1371, 333, 334,
	1372, 335, 336, 337, 1373, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 1374, 262, 1375, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 1376, 356, 1377, 1378,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1379, 368, 621, 1380, 622, 369,
	1381, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	1144, 375, 376, 1382, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1383, 1143, 384, 626,
	627, 1384, 628, 1385, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1386, 398, 400, 399, 1387, 401, 630,
	1148, 402, 403, 1149, 1388, 404, 0, 0, 0, 405,
	406, 409, 1389, 1390, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1391, 264,
	1152, 448, 449, 1392, 631, 450, 632, 452, 453, 1393,
	0, 454, 0, 1394, 1395, 456, 457, 458, 1396, 1397,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1398, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 1399, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	1400, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1401, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1402, 532, 533, 531, 534, 535, 536,
	1403, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 1404, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 1405, 562, 563, 0, 559, 551, 1406,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 1407,
	572, 644, 645, 646, 647, 1408, 581, 1409, 573, 574,
	575, 648, 576, 649, 1410, 577, 578, 579, 580, 0,
	582, 583, 1411, 1412, 584, 585, 586, 588, 589, 587,
	590, 1413, 591, 1414, 0, 592, 593, 594, 650, 651,
	652, 1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419,
	598, 599, 654, 600, 601, 602, 0, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4066, 265, 267, 266, 268, 269, 270,
	271, 272, 1341, 273, 274, 1342, 1343, 1344, 0, 1345,
	603, 1346, 1347, 1348, 1349, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	1350, 608, 284, 285, 286, 287, 288, 289, 1351, 1352,
	0, 290, 609, 610, 611, 1353, 291, 292, 612, 1354,
	1283, 1355, 293, 294, 295, 296, 297, 298, 299, 0,
	1356, 301, 302, 303, 300, 304, 1357, 305, 0, 306,
	307, 308, 309, 310, 311, 1358, 312, 313, 314, 1141,
	315, 316, 1359, 1360, 1362, 1361, 1363, 1364, 1365, 317,
	318, 319, 320, 0, 321, 613, 614, 1366, 325, 322,
	323, 1367, 326, 324, 1368, 327, 328, 329, 1369, 1370,
	330, 331, 332, 1371, 333, 334, 1372, 335, 336, 337,
	1373, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 1374, 262, 1375,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 1376, 356, 1377, 1378, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	1379, 368, 621, 1380, 622, 369, 1381, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 1382,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 1383, 1143, 384, 626, 627, 1384, 628, 1385,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1386,
	398, 400, 399, 1387, 401, 630, 1148, 402, 403, 1149,
	1388, 404, 0, 0, 0, 405, 406, 409, 1389, 1390,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1391, 264, 1152, 448, 449, 1392,
	631, 450, 632, 452, 453, 1393, 0, 454, 0, 1394,
	1395, 456, 457, 458, 1396, 1397, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 1398, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	1399, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 1400, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 1401, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 1402,
	532, 533, 531, 534, 535, 536, 1403, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 1404, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 1405,
	562, 563, 0, 559, 551, 1406, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 1407, 572, 644, 645, 646,
	647, 1408, 581, 1409, 573, 574, 575, 648, 576, 649,
	1410, 577, 578, 579, 580, 0, 582, 583, 1411, 1412,
	584, 585, 586, 588, 589, 587, 590, 1413, 591, 1414,
	0, 592, 593, 594, 650, 651, 652, 1415, 596, 595,
	597, 653, 1416, 1417, 1418, 1419, 598, 599, 654, 600,
	601, 602, 0, 1336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3954,
	265, 267, 266, 268, 269, 270, 271, 272, 1341, 273,
	274, 1342, 1343, 1344, 0, 1345, 603, 1346, 1347, 1348,
	1349, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 1350, 608, 284, 285,
	286, 287, 288, 289, 1351, 1352, 0, 290, 609, 610,
	611, 1353, 291, 292, 612, 1354, 1283, 1355, 293, 294,
	295, 296, 297, 298, 299, 0, 1356, 301, 302, 303,
	300, 304, 1357, 305, 0, 306, 307, 308, 309, 310,
	311, 1358, 312, 313, 314, 1141, 315, 316, 1359, 1360,
	1362, 1361, 1363, 1364, 1365, 317, 318, 319, 320, 0,
	321, 613, 614, 1366, 325, 322, 323, 1367, 326, 324,
	1368, 327, 328, 329, 1369, 1370, 330, 331, 332, 1371,
	333, 334, 1372, 335, 336, 337, 1373, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 1374, 262, 1375, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 1376, 356,
	1377, 1378, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 1379, 368, 621, 1380,
	622, 369, 1381, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 1144, 375, 376, 1382, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 1383, 1143,
	384, 626, 627, 1384, 628, 1385, 386, 387, 1145, 629,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 1386, 398, 400, 399, 1387,
	401, 630, 1148, 402, 403, 1149, 1388, 404, 0, 0,
	0, 405, 406, 409, 1389, 1390, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1391, 264, 1152, 448, 449, 1392, 631, 450, 632, 452,
	453, 1393, 0, 454, 0, 1394, 1395, 456, 457, 458,
	1396, 1397, 459, 460, 633, 1153, 461, 1154, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	1398, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 1399, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 1400, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 1401, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 1402, 532, 533, 531, 534,
	535, 536, 1403, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 1404,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 1405, 562, 563, 0, 559,
	551, 1406, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 1407, 572, 644, 645, 646, 647, 1408, 581, 1409,
	573, 574, 575, 648, 576, 649, 1410, 577, 578, 579,
	580, 0, 582, 583, 1411, 1412, 584, 585, 586, 588,
	589, 587, 590, 1413, 591, 1414, 0, 592, 593, 594,
	650, 651, 652, 1415, 596, 595, 597, 653, 1416, 1417,
	1418, 1419, 598, 599, 654, 600, 601, 602, 0, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3812, 265, 267, 266, 268,
	269, 270, 271, 272, 1341, 273, 274, 1342, 1343, 1344,
	0, 1345, 603, 1346, 1347, 1348, 1349, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 1350, 608, 284, 285, 286, 287, 288, 289,
	1351, 1352, 0, 290, 609, 610, 611, 1353, 291, 292,
	612, 1354, 1283, 1355, 293, 294, 295, 296, 297, 298,
	299, 0, 1356, 301, 302, 303, 300, 304, 1357, 305,
	0, 306, 307, 308, 309, 310, 311, 1358, 312, 313,
	314, 1141, 315, 316, 1359, 1360, 1362, 1361, 1363, 1364,
	1365, 317, 318, 319, 320, 0, 321, 613, 614, 1366,
	325, 322, 323, 1367, 326, 324, 1368, 327, 328, 329,
	1369, 1370, 330, 331, 332, 1371, 333, 334, 1372, 335,
	336, 337, 1373, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 1374,
	262, 1375, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 1376, 356, 1377, 1378, 1142, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 1379, 368, 621, 1380, 622, 369, 1381, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 1144, 375,
	376, 1382, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 1383, 1143, 384, 626, 627, 1384,
	628, 1385, 386, 387, 1145, 629, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1386, 398, 400, 399, 1387, 401, 630, 1148, 402,
	403, 1149, 1388, 404, 0, 0, 0, 405, 406, 409,
	1389, 1390, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1391, 264, 1152, 448,
	449, 1392, 631, 450, 632, 452, 453, 1393, 0, 454,
	0, 1394, 1395, 456, 457, 458, 1396, 1397, 459, 460,
	633, 1153, 461, 1154, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 1398, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 1399, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 1400, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 1401, 509,
	510, 511, 1155, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 1402, 532, 533, 531, 534, 535, 536, 1403, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 1404, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 1405, 562, 563, 0, 559, 551, 1406, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 1407, 572, 644,
	645, 646, 647, 1408, 581, 1409, 573, 574, 575, 648,
	576, 649, 1410, 577, 578, 579, 580, 0, 582, 583,
	1411, 1412, 584, 585, 586, 588, 589, 587, 590, 1413,
	591, 1414, 0, 592, 593, 594, 650, 651, 652, 1415,
	596, 595, 597, 653, 1416, 1417, 1418, 1419, 598, 599,
	654, 600, 601, 602, 0, 1336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3531, 265, 267, 266, 268, 269, 270, 271, 272,
	1341, 273, 274, 1342, 1343, 1344, 0, 1345, 603, 1346,
	1347, 1348, 1349, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 1350, 608,
	284, 285, 286, 287, 288, 289, 1351, 1352, 0, 290,
	609, 610, 611, 1353, 291, 292, 612, 1354, 1283, 1355,
	293, 294, 295, 296, 297, 298, 299, 0, 1356, 301,
	302, 303, 300, 304, 1357, 305, 0, 306, 307, 308,
	309, 310, 311, 1358, 312, 313, 314, 1141, 315, 316,
	1359, 1360, 1362, 1361, 1363, 1364, 1365, 317, 318, 319,
	320, 0, 321, 613, 614, 1366, 325, 322, 323, 1367,
	326, 324, 1368, 327, 328, 329, 1369, 1370, 330, 331,
	332, 1371, 333, 334, 1372, 335, 336, 337, 1373, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 1374, 262, 1375, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	1376, 356, 1377, 1378, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1379, 368,
	621, 1380, 622, 369, 1381, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 1382, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1383, 1143, 384, 626, 627, 1384, 628, 1385, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1386, 398, 400,
	399, 1387, 401, 630, 1148, 402, 403, 1149, 1388, 404,
	0, 0, 0, 405, 406, 409, 1389, 1390, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1391, 264, 1152, 448, 449, 1392, 631, 450,
	632, 452, 453, 1393, 0, 454, 0, 1394, 1395, 456,
	457, 458, 1396, 1397, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1398, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 1399, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 1400, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1401, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1402, 532, 533,
	531, 534, 535, 536, 1403, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 1404, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 1405, 562, 563,
	0, 559, 551, 1406, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 1407, 572, 644, 645, 646, 647, 1408,
	581, 1409, 573, 574, 575, 648, 576, 649, 1410, 577,
	578, 579, 580, 0, 582, 583, 1411, 1412, 584, 585,
	586, 588, 589, 587, 590, 1413, 591, 1414, 0, 592,
	593, 594, 650, 651, 652, 1415, 596, 595, 597, 653,
	1416, 1417, 1418, 1419, 598, 599, 654, 600, 601, 602,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3364, 265, 267,
	266, 268, 269, 270, 271, 272, 1341, 273, 274, 1342,
	1343, 1344, 0, 1345, 603, 1346, 1347, 1348, 1349, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 1350, 608, 284, 285, 286, 287,
	288, 289, 1351, 1352, 0, 290, 609, 610, 611, 1353,
	291, 292, 612, 1354, 1283, 1355, 293, 294, 295, 296,
	297, 298, 299, 0, 1356, 301, 302, 303, 300, 304,
	1357, 305, 0, 306, 307, 308, 309, 310, 311, 1358,
	312, 313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361,
	1363, 1364, 1365, 317, 318, 319, 320, 0, 321, 613,
	614, 1366, 325, 322, 323, 1367, 326, 324, 1368, 327,
	328, 329, 1369, 1370, 330, 331, 332, 1371, 333, 334,
	1372, 335, 336, 337, 1373, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 1374, 262, 1375, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 1376, 356, 1377, 1378,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1379, 368, 621, 1380, 622, 369,
	1381, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	1144, 375, 376, 1382, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1383, 1143, 384, 626,
	627, 1384, 628, 1385, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1386, 398, 400, 399, 1387, 401, 630,
	1148, 402, 403, 1149, 1388, 404, 0, 0, 0, 405,
	406, 409, 1389, 1390, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1391, 264,
	1152, 448, 449, 1392, 631, 450, 632, 452, 453, 1393,
	0, 454, 0, 1394, 1395, 456, 457, 458, 1396, 1397,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1398, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 1399, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	1400, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1401, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1402, 532, 533, 531, 534, 535, 536,
	1403, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 1404, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 1405, 562, 563, 0, 559, 551, 1406,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 1407,
	572, 644, 645, 646, 647, 1408, 581, 1409, 573, 574,
	575, 648, 576, 649, 1410, 577, 578, 579, 580, 0,
	582, 583, 1411, 1412, 584, 585, 586, 588, 589, 587,
	590, 1413, 591, 1414, 0, 592, 593, 594, 650, 651,
	652, 1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419,
	598, 599, 654, 600, 601, 602, 0, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2443, 265, 267, 266, 268, 269, 270,
	271, 272, 1341, 273, 274, 1342, 1343, 1344, 0, 1345,
	603, 1346, 1347, 1348, 1349, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	1350, 608, 284, 285, 286, 287, 288, 289, 1351, 1352,
	0, 290, 609, 610, 611, 1353, 291, 292, 612, 1354,
	1283, 1355, 293, 294, 295, 296, 297, 298, 299, 0,
	1356, 301, 302, 303, 300, 304, 1357, 305, 0, 306,
	307, 308, 309, 310, 311, 1358, 312, 313, 314, 1141,
	315, 316, 1359, 1360, 1362, 1361, 1363, 1364, 1365, 317,
	318, 319, 320, 0, 321, 613, 614, 1366, 325, 322,
	323, 1367, 326, 324, 1368, 327, 328, 329, 1369, 1370,
	330, 331, 332, 1371, 333, 334, 1372, 335, 336, 337,
	1373, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 1374, 262, 1375,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 1376, 356, 1377, 1378, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	1379, 368, 621, 1380, 622, 369, 1381, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 1382,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 1383, 1143, 384, 626, 627, 1384, 628, 1385,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1386,
	398, 400, 399, 1387, 401, 630, 1148, 402, 403, 1149,
	1388, 404, 0, 0, 0, 405, 406, 409, 1389, 1390,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1391, 264, 1152, 448, 449, 1392,
	631, 450, 632, 452, 453, 1393, 0, 454, 0, 1394,
	1395, 456, 457, 458, 1396, 1397, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 1398, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	1399, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 1400, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 1401, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 1402,
	532, 533, 531, 534, 535, 536, 1403, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 1404, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 1405,
	562, 563, 0, 559, 551, 1406, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 1407, 572, 644, 645, 646,
	647, 1408, 581, 1409, 573, 574, 575, 648, 576, 649,
	1410, 577, 578, 579, 580, 0, 582, 583, 1411, 1412,
	584, 585, 586, 588, 589, 587, 590, 1413, 591, 1414,
	0, 592, 593, 594, 650, 651, 652, 1415, 596, 595,
	597, 653, 1416, 1417, 1418, 1419, 598, 599, 654, 600,
	601, 602, 1431, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2137,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 1341,
	273, 274, 1342, 1343, 1344, 0, 1345, 603, 1346, 1347,
	1348, 1349, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 1350, 608, 284,
	285, 286, 287, 288, 289, 1351, 1352, 0, 290, 609,
	610, 611, 1353, 291, 292, 612, 1354, 1283, 1355, 293,
	294, 295, 296, 297, 298, 299, 0, 1356, 301, 302,
	303, 300, 304, 1357, 305, 0, 306, 307, 308, 309,
	310, 311, 1358, 312, 313, 314, 1141, 315, 316, 1359,
	1360, 1362, 1361, 1363, 1364, 1365, 317, 318, 319, 320,
	0, 321, 613, 614, 1366, 325, 322, 323, 1367, 326,
	324, 1368, 327, 328, 329, 1369, 1370, 330, 331, 332,
	1371, 333, 334, 1372, 335, 336, 337, 1373, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 1374, 262, 1375, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 1376,
	356, 1377, 1378, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 1379, 368, 621,
	1380, 622, 369, 1381, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 1144, 375, 376, 1382, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 1383,
	1143, 384, 626, 627, 1384, 628, 1385, 386, 387, 1145,
	629, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1386, 398, 400, 399,
	1387, 401, 630, 1148, 402, 403, 1149, 1388, 404, 0,
	0, 0, 405, 406, 409, 1389, 1390, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1391, 264, 1152, 448, 449, 1392, 631, 450, 632,
	452, 453, 1393, 0, 454, 0, 1394, 1395, 456, 457,
	458, 1396, 1397, 459, 460, 633, 1153, 461, 1154, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 1398, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 1399, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 1400, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 1401, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 1402, 532, 533, 531,
	534, 535, 536, 1403, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	1404, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 1405, 562, 563, 0,
	559, 551, 1406, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 1407, 572, 644, 645, 646, 647, 1408, 581,
	1409, 573, 574, 575, 648, 576, 649, 1410, 577, 578,
	579, 580, 0, 582, 583, 1411, 1412, 584, 585, 586,
	588, 589, 587, 590, 1413, 591, 1414, 0, 592, 593,
	594, 650, 651, 652, 1415, 596, 595, 597, 653, 1416,
	1417, 1418, 1419, 598, 599, 654, 600, 601, 602, 1333,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1341, 273, 274, 1342,
	1343, 1344, 0, 1345, 603, 1346, 1347, 1348, 1349, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 1350, 608, 284, 285, 286, 287,
	288, 289, 1351, 1352, 0, 290, 609, 610, 611, 1353,
	291, 292, 612, 1354, 1283, 1355, 293, 294, 295, 296,
	297, 298, 299, 0, 1356, 301, 302, 303, 300, 304,
	1357, 305, 0, 306, 307, 308, 309, 310, 311, 1358,
	312, 313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361,
	1363, 1364, 1365, 317, 318, 319, 320, 0, 321, 613,
	614, 1366, 325, 322, 323, 1367, 326, 324, 1368, 327,
	328, 329, 1369, 1370, 330, 331, 332, 1371, 333, 334,
	1372, 335, 336, 337, 1373, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 1374, 262, 1375, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 1376, 356, 1377, 1378,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1379, 368, 621, 1380, 622, 369,
	1381, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	1144, 375, 376, 1382, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1383, 1143, 384, 626,
	627, 1384, 628, 1385, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1386, 398, 400, 399, 1387, 401, 630,
	1148, 402, 403, 1149, 1388, 404, 0, 0, 0, 405,
	406, 409, 1389, 1390, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1391, 264,
	1152, 448, 449, 1392, 631, 450, 632, 452, 453, 1393,
	0, 454, 0, 1394, 1395, 456, 457, 458, 1396, 1397,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1398, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 1399, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	1400, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1401, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1402, 532, 533, 531, 534, 535, 536,
	1403, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 1404, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 1405, 562, 563, 0, 559, 551, 1406,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 1407,
	572, 644, 645, 646, 647, 1408, 581, 1409, 573, 574,
	575, 648, 576, 649, 1410, 577, 578, 579, 580, 0,
	582, 583, 1411, 1412, 584, 585, 586, 588, 589, 587,
	590, 1413, 591, 1414, 0, 592, 593, 594, 650, 651,
	652, 1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419,
	598, 599, 654, 600, 601, 602, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 1341, 273, 274, 1342, 1343, 1344, 0, 1345, 603,
	1346, 1347, 1348, 1349, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 1350,
	608, 284, 285, 286, 287, 288, 289, 1351, 1352, 0,
	290, 609, 610, 611, 1353, 291, 292, 612, 1354, 1283,
	1355, 293, 294, 295, 296, 297, 298, 299, 0, 1356,
	301, 302, 303, 300, 304, 1357, 305, 0, 306, 307,
	308, 309, 310, 311, 1358, 312, 313, 314, 1141, 315,
	316, 1359, 1360, 1362, 1361, 1363, 1364, 1365, 317, 318,
	319, 320, 0, 321, 613, 614, 1366, 325, 322, 323,
	1367, 326, 324, 1368, 327, 328, 329, 1369, 1370, 330,
	331, 332, 1371, 333, 334, 1372, 335, 336, 337, 1373,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 1374, 262, 1375, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 1376, 356, 1377, 1378, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1379,
	368, 621, 1380, 622, 369, 1381, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 1144, 375, 376, 1382, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1383, 1143, 384, 626, 627, 1384, 628, 1385, 386,
	387, 1145, 629, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1386, 398,
	400, 399, 1387, 401, 630, 1148, 402, 403, 1149, 1388,
	404, 0, 0, 0, 405, 406, 409, 1389, 1390, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1391, 264, 1152, 448, 449, 1392, 631,
	450, 632, 452, 453, 1393, 0, 454, 0, 1394, 1395,
	456, 457, 458, 1396, 1397, 459, 460, 633, 1153, 461,
	1154, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1398, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 1399,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 1400, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1401, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1402, 532,
	533, 531, 534, 535, 536, 1403, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 1404, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 1405, 562,
	563, 0, 559, 551, 1406, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 1407, 572, 644, 645, 646, 647,
	1408, 581, 1409, 573, 574, 575, 648, 576, 649, 1410,
	577, 578, 579, 580, 0, 582, 583, 1411, 1412, 584,
	585, 586, 588, 589, 587, 590, 1413, 591, 1414, 0,
	592, 593, 594, 650, 651, 652, 1415, 596, 595, 597,
	653, 1416, 1417, 1418, 1419, 598, 599, 654, 600, 601,
	602, 2418, 0, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 2415, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 2416, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 2414, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 2417, 0, 0, 0, 0,
	0, 0, 1060, 2413, 0, 1022, 1058, 1076, 1048, 1049,
	1050, 1046, 1047, 1059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 264, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 224,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 226, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 1549, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 218, 598, 599, 654, 600,
	601, 602, 1035, 0, 219, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 1076,
	1048, 1049, 1050, 1046, 1047, 1059, 1792, 1790, 0, 0,
	1058, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1100, 1064, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 1113, 0, 282, 1120,
	283, 1119, 0, 1130, 284, 285, 286, 287, 288, 289,
	1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 1123, 321, 1117, 1116, 1037,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1108, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1043, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 1055,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1115,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 1128, 1129, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 1065, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 1110, 1111, 0,
	1071, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1034, 264, 1152, 448,
	449, 1056, 1104, 450, 1118, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1114, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 1044, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 224, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 1112, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 1159, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 1032, 559, 551, 226, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 1124,
	1125, 1126, 1127, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 1054, 577, 578, 579, 580, 0, 582, 583,
	0, 1038, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 1549, 1121, 1158, 0,
	596, 595, 597, 653, 0, 0, 0, 218, 598, 599,
	654, 600, 601, 602, 1035, 0, 219, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 1029,
	1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 1792, 3014,
	0, 0, 1058, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 1064, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 1113, 0,
	282, 1120, 283, 1119, 0, 1130, 284, 285, 286, 287,
	288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 1123, 321, 1117,
	1116, 1037, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1108, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1043, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 1055, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1115, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 1128, 1129, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 1065, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 1110,
	1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1034, 264,
	1152, 448, 449, 1056, 1104, 450, 1118, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1114, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 1044,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 224, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 1112, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 1159, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 1032, 559, 551, 226,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 1124, 1125, 1126, 1127, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 1054, 577, 578, 579, 580, 0,
	582, 583, 0, 1038, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 1549, 1121,
	1158, 0, 596, 595, 597, 653, 0, 0, 0, 218,
	598, 599, 654, 600, 601, 602, 1035, 0, 219, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	1792, 1790, 0, 0, 1058, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 2546, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 2551, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 2547,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 2548,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 0, 0, 0, 0, 0,
	0, 0, 1060, 0, 0, 2463, 1058, 1076, 1048, 1049,
	1050, 1046, 1047, 1059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 264, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1035, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 0,
	0, 0, 0, 0, 0, 0, 1060, 2461, 0, 2460,
	1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 1064, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 1113, 0,
	282, 1120, 283, 1119, 0, 1130, 284, 285, 286, 287,
	288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 1123, 321, 1117,
	1116, 1037, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1108, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1043, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 1055, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1115, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 1128, 1129, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 1065, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 1110,
	1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1034, 264,
	1152, 448, 449, 1056, 1104, 450, 1118, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1114, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 1044,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 1112, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 1159, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 1032, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 1124, 1125, 1126, 1127, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 1054, 577, 578, 579, 580, 0,
	582, 583, 0, 1038, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 1121,
	1158, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1035, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 1029, 1030, 0, 0, 0, 0, 0, 0, 0,
	1060, 2458, 0, 2457, 1058, 1076, 1048, 1049, 1050, 1046,
	1047, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1100, 1064,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 1113, 0, 282, 1120, 283, 1119, 0, 1130,
	284, 285, 286, 287, 288, 289, 1066, 1099, 1033, 290,
	1160, 1161, 611, 0, 291, 292, 1106, 0, 1087, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319,
	320, 1123, 321, 1117, 1116, 1037, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1108,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1043, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1131, 1132, 351, 1055, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1115, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 1128, 1129, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1138, 0, 1065, 369, 0, 370, 371, 372, 373, 374,
	1101, 1102, 1105, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1143, 384, 1110, 1111, 0, 1071, 0, 386, 387,
	1145, 1103, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1139, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 1094, 1093, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104, 450,
	1118, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	1133, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 1134, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1114,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 1044, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1097, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 1112, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 1159,
	554, 555, 556, 557, 1135, 560, 561, 0, 562, 563,
	1032, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 1124, 1125, 1126, 1127, 0,
	581, 0, 573, 574, 575, 1136, 576, 1137, 1054, 577,
	578, 579, 580, 0, 582, 583, 0, 1038, 584, 585,
	586, 588, 589, 587, 590, 1098, 591, 0, 0, 592,
	593, 594, 650, 1121, 1158, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1035, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 0, 0, 0, 0, 1029, 1030, 0, 0, 0,
	0, 0, 0, 0, 1060, 2455, 0, 2454, 1058, 1076,
	1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1100, 1064, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 1113, 0, 282, 1120,
	283, 1119, 0, 1130, 284, 285, 286, 287, 288, 289,
	1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 1123, 321, 1117, 1116, 1037,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1108, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1043, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 1055,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1115,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 1128, 1129, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 1065, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 1110, 1111, 0,
	1071, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1034, 264, 1152, 448,
	449, 1056, 1104, 450, 1118, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1114, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 1044, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 1112, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 1159, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 1032, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 1124,
	1125, 1126, 1127, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 1054, 577, 578, 579, 580, 0, 582, 583,
	0, 1038, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 650, 1121, 1158, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 1035, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 1029,
	1030, 0, 0, 0, 0, 0, 0, 0, 1060, 2452,
	0, 1642, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 1641, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 0, 0, 0, 0, 0,
	0, 0, 1060, 0, 0, 1025, 1058, 1076, 1048, 1049,
	1050, 1046, 1047, 1059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 264, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 1039,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1035, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 1076,
	1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1100, 1064, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 1113, 0, 282, 1120,
	283, 1119, 0, 1130, 284, 285, 286, 287, 288, 289,
	1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 4373, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 1123, 321, 1117, 1116, 1037,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1108, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1043, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 1055,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1115,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 1128, 1129, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 1065, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 1110, 1111, 0,
	1071, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1034, 264, 1152, 448,
	449, 1056, 1104, 450, 1118, 452, 453, 0, 0, 454,
	0, 1039, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1114, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 1044, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 1112, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 1159, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 1032, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 1124,
	1125, 1126, 1127, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 1054, 577, 578, 579, 580, 0, 582, 583,
	0, 1038, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 650, 1121, 1158, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 1035, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 1029,
	1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 1064, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 1113, 0,
	282, 1120, 283, 1119, 0, 1130, 284, 285, 286, 287,
	288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 1123, 321, 1117,
	1116, 1037, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1108, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1043, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 1055, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1115, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 1128, 1129, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 1065, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 2332, 381, 382, 383, 385, 0, 1143, 384, 1110,
	1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1034, 264,
	1152, 448, 449, 1056, 1104, 450, 1118, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 2331, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1114, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 1044,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 1112, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 1159, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 1032, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 1124, 1125, 1126, 1127, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 1054, 577, 578, 579, 580, 0,
	582, 583, 0, 1038, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 1121,
	1158, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1035, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	1060, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 1039, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 1046,
	1047, 1059, 1060, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1100, 1064,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 1113, 0, 282, 1120, 283, 1119, 0, 1130,
	284, 285, 286, 287, 288, 289, 1066, 1099, 1033, 290,
	1160, 1161, 611, 0, 291, 292, 1106, 0, 1087, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 4139, 311, 0, 312, 313, 314, 1141, 315, 316,
	1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319,
	320, 1123, 321, 1117, 1116, 1037, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1108,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1043, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1131, 1132, 351, 1055, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1115, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 1128, 1129, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1138, 0, 1065, 369, 0, 370, 371, 372, 373, 374,
	1101, 1102, 1105, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1143, 384, 1110, 1111, 0, 1071, 0, 386, 387,
	1145, 1103, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1139, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 1094, 1093, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104, 450,
	1118, 452, 453, 0, 0, 454, 0, 1039, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	1133, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 1134, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1114,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 1044, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1097, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 1112, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 1159,
	554, 555, 556, 557, 1135, 560, 561, 0, 562, 563,
	1032, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 1124, 1125, 1126, 1127, 0,
	581, 0, 573, 574, 575, 1136, 576, 1137, 1054, 577,
	578, 579, 580, 0, 582, 583, 0, 1038, 584, 585,
	586, 588, 589, 587, 590, 1098, 591, 0, 0, 592,
	593, 594, 650, 1121, 1158, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1035, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049,
	1050, 1046, 1047, 1059, 1060, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 3775, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1035, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 1860,
	0, 0, 0, 0, 0, 0, 1060, 0, 0, 0,
	1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 1064, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 1113, 0,
	282, 1120, 283, 1119, 0, 1130, 284, 285, 286, 287,
	288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 1123, 321, 1117,
	1116, 1037, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1108, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1043, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 1055, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1115, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 1128, 1129, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 1065, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 1110,
	1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1034, 264,
	1152, 448, 449, 1056, 1104, 450, 1118, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1114, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 1044,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 1112, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 1159, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 1032, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 1124, 1125, 1126, 1127, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 1054, 577, 578, 579, 580, 0,
	582, 583, 0, 1038, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 1121,
	1158, 3509, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1035, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	1060, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 1860, 0, 0, 0, 0,
	0, 0, 1060, 0, 0, 0, 1058, 1076, 1048, 1049,
	1050, 1046, 1047, 1059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 2551, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 264, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1035, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 1076,
	1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1100, 1064, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 1113, 0, 282, 1120,
	283, 1119, 0, 1130, 284, 285, 286, 287, 288, 289,
	1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 1123, 321, 1117, 1116, 1037,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1108, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1043, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 1055,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1115,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 1128, 1129, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 1065, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 1110, 1111, 0,
	1071, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1034, 264, 1152, 448,
	449, 1056, 1104, 450, 1118, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1114, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 1044, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 1112, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 1159, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 1032, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 1124,
	1125, 1126, 1127, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 1054, 577, 578, 579, 580, 0, 582, 583,
	0, 1038, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 650, 1121, 1158, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 1035, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 1029,
	1030, 0, 0, 0, 0, 0, 0, 0, 1060, 1790,
	0, 2556, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 0, 0, 0, 0, 0,
	0, 0, 1060, 0, 0, 2554, 1058, 1076, 1048, 1049,
	1050, 1046, 1047, 1059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 264, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1035, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 0,
	0, 0, 0, 0, 0, 0, 1060, 0, 0, 2542,
	1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 1064, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 1113, 0,
	282, 1120, 283, 1119, 0, 1130, 284, 285, 286, 287,
	288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 1123, 321, 1117,
	1116, 1037, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1108, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1043, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 1055, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1115, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 1128, 1129, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 1065, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 1110,
	1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1034, 264,
	1152, 448, 449, 1056, 1104, 450, 1118, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1114, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 1044,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 1112, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 1159, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 1032, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 1124, 1125, 1126, 1127, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 1054, 577, 578, 579, 580, 0,
	582, 583, 0, 1038, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 1121,
	1158, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1035, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 1029, 1030, 0, 0, 0, 0, 0, 0, 0,
	1060, 0, 0, 2531, 1058, 1076, 1048, 1049, 1050, 1046,
	1047, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1100, 1064,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 1113, 0, 282, 1120, 283, 1119, 0, 1130,
	284, 285, 286, 287, 288, 289, 1066, 1099, 1033, 290,
	1160, 1161, 611, 0, 291, 292, 1106, 0, 1087, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319,
	320, 1123, 321, 1117, 1116, 1037, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1108,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1043, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1131, 1132, 351, 1055, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1115, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 1128, 1129, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1138, 0, 1065, 369, 0, 370, 371, 372, 373, 374,
	1101, 1102, 1105, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1143, 384, 1110, 1111, 0, 1071, 0, 386, 387,
	1145, 1103, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1139, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 1094, 1093, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104, 450,
	1118, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	1133, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 1134, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1114,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 1044, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1097, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 1112, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 1159,
	554, 555, 556, 557, 1135, 560, 561, 0, 562, 563,
	1032, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 1124, 1125, 1126, 1127, 0,
	581, 0, 573, 574, 575, 1136, 576, 1137, 1054, 577,
	578, 579, 580, 0, 582, 583, 0, 1038, 584, 585,
	586, 588, 589, 587, 590, 1098, 591, 0, 0, 592,
	593, 594, 650, 1121, 1158, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1035, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 0, 0, 0, 0, 1029, 1030, 0, 0, 0,
	0, 0, 0, 0, 1060, 0, 0, 2529, 1058, 2520,
	2527, 1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1100, 1064, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 1113, 0, 282, 1120,
	283, 1119, 0, 1130, 284, 285, 286, 287, 288, 289,
	1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 1123, 2523, 1117, 1116, 1037,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1108, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1043, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 1055,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1115,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 1128, 1129, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 1065, 369, 0, 370,
	371, 372, 2524, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 1110, 1111, 0,
	1071, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 2525, 419, 2522, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1034, 264, 1152, 448,
	449, 1056, 1104, 450, 1118, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1114, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 1044, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	2526, 0, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 1112, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 1159, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 1032, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 1124,
	1125, 1126, 1127, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 1054, 577, 578, 579, 580, 0, 582, 583,
	0, 1038, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 650, 1121, 1158, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 2521, 602, 1035, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 1029,
	1030, 0, 0, 0, 0, 0, 0, 0, 1060, 0,
	0, 2517, 1058, 2520, 2527, 1049, 1050, 1046, 1047, 1059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	2523, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 2524, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 2525, 419, 2522,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 2526, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 2521, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 1046,
	1047, 1059, 1060, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1100, 1064,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 1113, 0, 282, 1120, 283, 1119, 0, 1130,
	284, 285, 286, 287, 288, 289, 1066, 1099, 1033, 290,
	1160, 1161, 611, 0, 291, 292, 1106, 0, 1087, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319,
	320, 1123, 321, 1117, 1116, 1037, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1108,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1043, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1131, 1132, 351, 1055, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1115, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 1128, 1129, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1138, 0, 1065, 369, 0, 370, 371, 372, 373, 374,
	1101, 1102, 1105, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1143, 384, 1110, 1111, 0, 1071, 0, 386, 387,
	1145, 1103, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1139, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 1094, 1093, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104, 450,
	1118, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	1133, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 1134, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1114,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 1044, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1097, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 1112, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 1159,
	554, 555, 556, 557, 1135, 560, 561, 0, 562, 563,
	1032, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 1124, 1125, 1126, 1127, 0,
	581, 0, 573, 574, 575, 1136, 576, 1137, 1054, 577,
	578, 579, 580, 0, 582, 583, 0, 1038, 584, 585,
	586, 588, 589, 587, 590, 1098, 591, 0, 0, 592,
	593, 594, 650, 1121, 1158, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1035, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 0, 0, 0, 0, 1029, 1030, 0, 0, 0,
	0, 0, 1798, 0, 1060, 0, 0, 0, 1058, 1076,
	1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 2311, 273, 274, 0, 0, 0,
	0, 0, 1100, 1064, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 1113, 0, 282, 1120,
	283, 1119, 0, 1130, 284, 285, 286, 287, 288, 289,
	1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 1123, 321, 1117, 1116, 1037,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1108, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1043, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 1055,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1115,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 1128, 1129, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 1065, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 1110, 1111, 0,
	1071, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1034, 264, 1152, 448,
	449, 1056, 1104, 450, 1118, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1114, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 1044, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 1112, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 1159, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 1032, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 1124,
	1125, 1126, 1127, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 1054, 577, 578, 579, 580, 0, 582, 583,
	0, 1038, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 650, 1121, 1158, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 1035, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 1029,
	1030, 0, 0, 0, 0, 0, 0, 0, 1060, 0,
	0, 1647, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 0, 0, 0, 0, 0,
	0, 0, 1060, 0, 0, 1579, 1058, 1076, 1048, 1049,
	1050, 1046, 1047, 1059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 264, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1035, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 0,
	0, 0, 0, 0, 0, 0, 1060, 0, 0, 1574,
	1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 1064, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 1113, 0,
	282, 1120, 283, 1119, 0, 1130, 284, 285, 286, 287,
	288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 1123, 321, 1117,
	1116, 1037, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1108, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1043, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 1055, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1115, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 1128, 1129, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 1065, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 1110,
	1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1034, 264,
	1152, 448, 449, 1056, 1104, 450, 1118, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1114, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 1044,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 1112, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 1159, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 1032, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 1124, 1125, 1126, 1127, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 1054, 577, 578, 579, 580, 0,
	582, 583, 0, 1038, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 1121,
	1158, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1035, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 1029, 1030, 0, 0, 0, 0, 0, 0, 0,
	1060, 0, 0, 1565, 1058, 1076, 1048, 1049, 1050, 1046,
	1047, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1100, 1064,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 1113, 0, 282, 1120, 283, 1119, 0, 1130,
	284, 285, 286, 287, 288, 289, 1066, 1099, 1033, 290,
	1160, 1161, 611, 0, 291, 292, 1106, 0, 1087, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319,
	320, 1123, 321, 1117, 1116, 1037, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1108,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1043, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1131, 1132, 351, 1055, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1115, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 1128, 1129, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1138, 0, 1065, 369, 0, 370, 371, 372, 373, 374,
	1101, 1102, 1105, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1143, 384, 1110, 1111, 0, 1071, 0, 386, 387,
	1145, 1103, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1139, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 1094, 1093, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104, 450,
	1118, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	1133, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 1134, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1114,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 1044, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1097, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 1112, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 1159,
	554, 555, 556, 557, 1135, 560, 561, 0, 562, 563,
	1032, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 1124, 1125, 1126, 1127, 0,
	581, 0, 573, 574, 575, 1136, 576, 1137, 1054, 577,
	578, 579, 580, 0, 582, 583, 0, 1038, 584, 585,
	586, 588, 589, 587, 590, 1098, 591, 0, 0, 592,
	593, 594, 650, 1121, 1158, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1035, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 0, 0, 0, 0, 1029, 1030, 0, 0, 0,
	0, 0, 0, 0, 1060, 0, 0, 1560, 1058, 1076,
	1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1100, 1064, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 1113, 0, 282, 1120,
	283, 1119, 0, 1130, 284, 285, 286, 287, 288, 289,
	1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 1123, 321, 1117, 1116, 1037,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1108, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1043, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 1055,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1115,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 1128, 1129, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 1065, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 1110, 1111, 0,
	1071, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1034, 264, 1152, 448,
	449, 1056, 1104, 450, 1118, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1114, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 1044, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 1112, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 1159, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 1032, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 1124,
	1125, 1126, 1127, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 1054, 577, 578, 579, 580, 0, 582, 583,
	0, 1038, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 650, 1121, 1158, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 1035, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 1029,
	1030, 0, 0, 0, 0, 0, 0, 0, 1060, 0,
	0, 1473, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 373, 374, 1472, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 0, 0, 0, 0, 0,
	0, 0, 1060, 0, 0, 1467, 1058, 1076, 1048, 1049,
	1050, 1046, 1047, 1059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1466, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 264, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1035, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 0,
	0, 0, 0, 0, 0, 0, 1060, 0, 0, 1460,
	1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 1064, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 1113, 0,
	282, 1120, 283, 1119, 0, 1130, 284, 285, 286, 287,
	288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 1123, 321, 1117,
	1116, 1037, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1108, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1043, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 1055, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1115, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 1128, 1129, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 1065, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 1110,
	1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1034, 264,
	1152, 448, 449, 1056, 1104, 450, 1118, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1114, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 1044,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 1112, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 1159, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 1032, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 1124, 1125, 1126, 1127, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 1054, 577, 578, 579, 580, 0,
	582, 583, 0, 1038, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 1121,
	1158, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1035, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 1029, 1030, 0, 0, 0, 0, 0, 0, 0,
	1060, 0, 0, 1285, 1058, 1076, 1048, 1049, 1050, 1046,
	1047, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1100, 1064,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 1113, 0, 282, 1120, 283, 1119, 0, 1130,
	284, 285, 286, 287, 288, 289, 1066, 1099, 1033, 290,
	1160, 1161, 611, 0, 291, 292, 1106, 0, 1087, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319,
	320, 1123, 321, 1117, 1116, 1037, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1108,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1043, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1131, 1132, 351, 1055, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1115, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 1128, 1129, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1138, 0, 1065, 369, 0, 370, 371, 372, 373, 374,
	1101, 1102, 1105, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1143, 384, 1110, 1111, 0, 1071, 0, 386, 387,
	1145, 1103, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1139, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 1094, 1093, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104, 450,
	1118, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	1133, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 1134, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1114,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 1044, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1097, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 1112, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 1159,
	554, 555, 556, 557, 1135, 560, 561, 0, 562, 563,
	1032, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 1124, 1125, 1126, 1127, 0,
	581, 0, 573, 574, 575, 1136, 576, 1137, 1054, 577,
	578, 579, 580, 0, 582, 583, 0, 1038, 584, 585,
	586, 588, 589, 587, 590, 1098, 591, 0, 0, 592,
	593, 594, 650, 1121, 1158, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1035, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049,
	1050, 1046, 1047, 1059, 1060, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 264, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1035, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 1076,
	1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1100, 1064, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 1113, 0, 282, 1120,
	283, 1119, 0, 1130, 284, 285, 286, 287, 288, 289,
	1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 4418, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 1123, 321, 1117, 1116, 1037,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1108, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1043, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 1055,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1115,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 1128, 1129, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 1065, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 1110, 1111, 0,
	1071, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1034, 264, 1152, 448,
	449, 1056, 1104, 450, 1118, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1114, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 1044, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 1112, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 1159, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 1032, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 1124,
	1125, 1126, 1127, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 1054, 577, 578, 579, 580, 0, 4417, 583,
	0, 1038, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 650, 1121, 1158, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 1035, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 1029,
	1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 1064, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 4416, 1113, 0,
	282, 1120, 283, 1119, 0, 1130, 284, 285, 286, 287,
	288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 4418, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 1123, 321, 1117,
	1116, 1037, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1108, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1043, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 1055, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1115, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 1128, 1129, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 1065, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 1110,
	1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1034, 264,
	1152, 448, 449, 1056, 1104, 450, 1118, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1114, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 1044,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 1112, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 1159, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 1032, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 1124, 1125, 1126, 1127, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 1054, 577, 578, 579, 580, 0,
	4417, 583, 0, 1038, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 1121,
	1158, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1035, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	1060, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 4085, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 1037, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	4086, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	4084, 1044, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 1032, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 1038, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1035, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 2981,
	2982, 1059, 1060, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1100, 1064,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 1113, 0, 282, 1120, 283, 1119, 0, 1130,
	284, 285, 286, 287, 288, 289, 1066, 1099, 1033, 290,
	1160, 1161, 611, 0, 291, 292, 1106, 0, 1087, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319,
	320, 1123, 321, 1117, 1116, 1037, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1108,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1043, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1131, 1132, 351, 1055, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1115, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 1128, 1129, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1138, 0, 1065, 369, 0, 370, 371, 372, 373, 374,
	1101, 1102, 1105, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1143, 384, 1110, 1111, 0, 1071, 0, 386, 387,
	1145, 1103, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1139, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 1094, 1093, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104, 450,
	1118, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	1133, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 1134, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1114,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 1044, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1097, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 1112, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 1159,
	554, 555, 556, 557, 1135, 560, 561, 0, 562, 563,
	1032, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 1124, 1125, 1126, 1127, 0,
	581, 0, 573, 574, 575, 1136, 576, 1137, 1054, 577,
	578, 579, 580, 0, 582, 583, 0, 1038, 584, 585,
	586, 588, 589, 587, 590, 1098, 591, 0, 0, 592,
	593, 594, 650, 1121, 1158, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1035, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049,
	1050, 2979, 2980, 1059, 1060, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1064, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 1113, 0, 282, 1120, 283, 1119,
	0, 1130, 284, 285, 286, 287, 288, 289, 1066, 1099,
	1033, 290, 1160, 1161, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 1123, 321, 1117, 1116, 1037, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1108, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1043, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 1055, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1115, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 1128,
	1129, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 1065, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 1110, 1111, 0, 1071, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1034, 264, 1152, 448, 449, 1056,
	1104, 450, 1118, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1114, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 1044, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	1112, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 1159, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 1032, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 1124, 1125, 1126,
	1127, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	1054, 577, 578, 579, 580, 0, 582, 583, 0, 1038,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 1121, 1158, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1035, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 1029, 1030, 1076,
	1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1100, 1064, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 1113, 0, 282, 1120,
	283, 1119, 0, 1130, 284, 285, 286, 287, 288, 289,
	1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 1123, 321, 1117, 1116, 1037,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1108, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1043, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 1055,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1115,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 1128, 1129, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 1065, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 1110, 1111, 0,
	1071, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1034, 264, 1152, 448,
	449, 1056, 1104, 450, 1118, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1114, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 1044, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 1112, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 1159, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 1032, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 1124,
	1125, 1126, 1127, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 1054, 577, 578, 579, 580, 0, 582, 583,
	0, 1038, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 650, 1121, 1158, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 1035, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 2319,
	2320, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 1064, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 1113, 0,
	282, 1120, 283, 1119, 0, 1130, 284, 285, 286, 287,
	288, 289, 1066, 1099, 0, 290, 1160, 1161, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 1123, 321, 1117,
	1116, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1108, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1043, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 1055, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1115, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 1128, 1129, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 1065, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 1110,
	1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 264,
	1152, 448, 449, 1056, 1104, 450, 1118, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1114, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 1044,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 1112, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 1159, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 1124, 1125, 1126, 1127, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 1054, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 1121,
	1158, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 2539, 0, 0, 0, 0, 0,
	0, 2537, 2538, 1076, 1048, 1049, 1050, 1046, 1047, 1059,
	1060, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 1064, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	1113, 0, 282, 1120, 283, 1119, 0, 1130, 284, 285,
	286, 287, 288, 289, 1066, 1099, 0, 290, 1160, 1161,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123,
	321, 1117, 1116, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1043,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 1055, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1115, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1128, 1129, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	1065, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 264, 1152, 448, 449, 1056, 1104, 450, 1118, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1114, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 2974, 2975, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1112, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1159, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1124, 1125, 1126, 1127, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 1054, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 1121, 1158, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 2039, 1076, 1048, 1049, 1050, 1046,
	1047, 1059, 1060, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1100, 1064,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 0, 1113, 0, 282, 1120, 283, 1119, 0, 1130,
	284, 285, 286, 287, 288, 289, 1066, 1099, 1033, 290,
	1160, 1161, 611, 0, 291, 292, 1106, 0, 1087, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 4418,
	1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319,
	320, 1123, 321, 1117, 1116, 1037, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1108,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1043, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1131, 1132, 351, 1055, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1115, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 1128, 1129, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1138, 0, 1065, 369, 0, 370, 371, 372, 373, 374,
	1101, 1102, 1105, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1143, 384, 1110, 1111, 0, 1071, 0, 386, 387,
	0, 1103, 0, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1139, 1148, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 1094, 1093, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1034, 264, 0, 448, 449, 1056, 1104, 450,
	1118, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	1133, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 1134, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1114,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 1044, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1097, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 1112, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 1159,
	554, 555, 556, 557, 1135, 560, 561, 0, 562, 563,
	1032, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 1124, 1125, 1126, 1127, 0,
	581, 0, 573, 574, 575, 1136, 576, 1137, 1054, 577,
	578, 579, 580, 0, 4417, 583, 0, 1038, 584, 585,
	586, 588, 589, 587, 590, 1098, 591, 0, 0, 592,
	593, 594, 650, 1121, 1158, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1022, 0, 1198, 0, 0, 1029, 1030, 0, 0, 0,
	0, 0, 0, 0, 1060, 0, 0, 0, 1058, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 1099, 0, 290, 609, 610, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	626, 627, 0, 628, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 1184, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 0,
	264, 1152, 448, 449, 0, 1104, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 1190, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 1192, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 224, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 0, 559, 551,
	226, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 1549,
	651, 652, 0, 596, 595, 597, 653, 1198, 0, 0,
	218, 598, 599, 654, 600, 601, 602, 0, 0, 219,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 1188,
	1100, 1884, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 1099,
	0, 290, 609, 610, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1184,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 264, 1152, 448, 449, 0,
	1104, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	1190, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 1192, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 224,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 0, 559, 551, 226, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 1549, 651, 652, 0, 596, 595,
	597, 653, 3158, 0, 1198, 218, 598, 599, 654, 600,
	601, 602, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 1188, 0, 1884, 1100, 0, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 1099, 0, 290, 609,
	610, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 626, 627, 0, 628, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1184, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 0, 264, 1152, 448, 449, 0, 1104, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 1190, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 1192, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 1180,
	0, 1198, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 1188, 0, 1186, 1100, 0, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 1099, 0, 290, 609, 610, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 626,
	627, 0, 628, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1184, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 264,
	1152, 448, 449, 0, 1104, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 1190, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	1192, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1198, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 1188, 1100,
	1186, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 1099, 0,
	290, 609, 610, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 626, 627, 0, 628, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1184, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 0, 264, 1152, 448, 449, 0, 1104,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 1190,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 1192, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 1198, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 1188, 1100, 1186, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 1099, 0, 290, 609, 610, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 626,
	627, 0, 628, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 264,
	1152, 448, 449, 0, 1104, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1198, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	3930, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 1099, 0,
	290, 609, 610, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 626, 627, 0, 628, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 0, 264, 1152, 448, 449, 0, 1104,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 1192, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 1022, 0, 1278, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 1783, 603, 0, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 1283, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1143,
	384, 626, 627, 0, 628, 0, 386, 387, 1145, 629,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 0, 1152, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 224, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 226, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	1549, 651, 652, 0, 596, 595, 597, 653, 1546, 0,
	1278, 218, 598, 599, 654, 600, 601, 602, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 183, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 224, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 226, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 1549, 651, 652,
	0, 596, 595, 597, 653, 0, 0, 0, 218, 598,
	599, 654, 600, 601, 602, 0, 0, 219, 0, 0,
	0, 0, 0, 1278, 1277, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 1283, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1143,
	384, 626, 627, 0, 628, 0, 386, 387, 1145, 629,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 0, 1152, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 1277, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 1283,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1143, 384, 626, 627, 0, 628, 0, 386,
	387, 1145, 629, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 0, 0, 1152, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 1278,
	2129, 0, 0, 0, 0, 2130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3429, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 1283, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1143, 384, 626, 627, 0,
	628, 0, 386, 387, 1145, 629, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 2128, 400, 399, 0, 401, 630, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 0, 0, 1152, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 1278, 1277, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1571, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 1283, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1143, 384,
	626, 627, 0, 628, 0, 386, 387, 1145, 629, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 0,
	0, 1152, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 1198, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 1555, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 1099,
	0, 290, 609, 610, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 264, 1152, 448, 449, 0,
	1104, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1022, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 224, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 226, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 1549, 651, 652, 0, 596, 595, 597, 653, 259,
	0, 0, 218, 598, 599, 654, 600, 601, 602, 0,
	0, 219, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 183, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 259, 2889, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 1898, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 259,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 4572, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 259,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 3380, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 259,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 1543, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 259, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 2877, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 259,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 3534, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 865, 0, 773, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 2205, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	780, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 863, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 778, 564, 565, 566, 567, 568,
	779, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 771, 0, 773, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 783, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 780, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 778, 564, 565, 566, 567, 568, 779, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 1935, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 783, 0, 0, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 0,
	1941, 0, 282, 1931, 283, 1947, 0, 1954, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 1957, 1958,
	0, 0, 291, 292, 0, 0, 1283, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 1123,
	321, 1945, 1944, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1108, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 0,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 1943, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 1952, 1953, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 0, 0,
	0, 369, 0, 370, 371, 372, 373, 374, 0, 0,
	0, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1143,
	384, 1938, 1939, 0, 1934, 0, 386, 387, 1145, 0,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 0, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 0, 1152, 448, 449, 0, 0, 450, 1946, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 0, 1153, 461, 1154, 0, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 1928, 474, 475, 476, 1929, 477, 478,
	479, 0, 480, 0, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1942, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 0, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 1940, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 1956, 554, 555,
	556, 557, 0, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 1948, 1949, 1950, 1951, 0, 581, 0,
	573, 574, 575, 0, 576, 0, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	0, 1932, 1955, 0, 596, 595, 597, 0, 0, 773,
	0, 0, 598, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 1922, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 780, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 778, 564, 565,
	566, 567, 568, 779, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 773,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 783, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 780, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 2247, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 2248, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 778, 564, 565,
	566, 567, 568, 779, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 2249, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 2004, 0, 1278, 1971, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 783, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 1283,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 0, 0, 0, 0, 0, 0, 1968, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1143, 384, 626, 627, 0, 628, 0, 386,
	387, 1145, 629, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 0, 0, 1152, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1969, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 1965, 0, 1278, 1971, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 1283, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 0, 0,
	0, 0, 0, 0, 1968, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1143,
	384, 626, 627, 0, 628, 0, 386, 387, 1145, 629,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 0, 1152, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1969, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 773, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 780, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	1961, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 778, 564, 565, 566, 567, 568, 779, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 1960,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 773, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 783, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 780, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	1914, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 778, 564, 565, 566, 567, 568, 779, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 1913,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 0, 0,
	1278, 1971, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 783, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 1968, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1969,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1278, 1277, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 3720, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1278, 1277, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 3352, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1599, 0, 1278, 1277, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 783, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	1283, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 1598, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 0, 1152, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 1597,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 1596, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1517, 0, 1278, 1277, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 1283, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1516,
	624, 625, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	1143, 384, 626, 627, 0, 628, 0, 386, 387, 1145,
	629, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 0, 0, 1152, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1478,
	0, 1278, 1277, 0, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 1283, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1143, 384, 626,
	627, 0, 628, 0, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 0,
	1152, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1446, 0, 1278, 1277,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 1283, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1445, 624, 625, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1143, 384, 626, 627, 0, 628,
	0, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 0, 1152, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1272, 0, 1278, 1277, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	1271, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1278, 1277, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 1278, 1971, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 2011, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	1278, 1277, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	1278, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 2705, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 2702,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 2709, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 2902, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 2708, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	2899, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 2901, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 2898, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 2707, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 2900, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 2705, 291,
	292, 612, 0, 0, 2699, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 2702,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 2709, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 2708, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 2698, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 2707, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 2706, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 1669, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	1672, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 1670, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 1671, 595,
	597, 653, 1424, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1426,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 1190, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 1421,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1423, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 1190, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1329, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1331, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 1190, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 686, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 685, 270, 271, 272,
	675, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 678, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 679, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 680, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	674, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 675, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	678, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 679, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 680, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 259, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 1190, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 259, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 3309, 438, 0,
	264, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 2847, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 2846, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 2219, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 2162, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 2168, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 2167, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 2155, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 2157, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 2125, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 1190, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 1521, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 1520, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1441, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 1434,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1436, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1262, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1261, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 1252, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	1251, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	1249, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 1248, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 1244, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 1243, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 656, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 250, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 3651, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 3652, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 3654, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 3655, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 3650, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 678, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 679, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 680, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 2256, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 2254, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 2252, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 2174, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 1990, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 1984, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 852, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 851, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 850, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 2902, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 3990, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 3900, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 3902, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 743, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 1299, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 1297, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 744, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 740, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 1300, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 739, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 743, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 1299, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 1297, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 744, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 740, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 1300, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 739, 645, 646, 647, 0, 581,
	0, 573, 1298, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 665,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 664, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 663, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 259, 2889, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 259, 4000, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 4251, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 4249, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 3691, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 2591, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 259, 2889, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 2886, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 2229, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 2217, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 743, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	733, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 744, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 740, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 1554, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	739, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 1527, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 1526, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1511, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1509,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 1505,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1482, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1480, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 1443, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	1429, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 1267, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 1266, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 1258, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1257, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 1211, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 749, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 743, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 733, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 731, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 732, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 744, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 734, 516, 0, 517, 518, 524, 525, 519, 520,
	740, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	735, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 739, 645, 646, 647, 0, 581, 0,
	573, 737, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 725, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 726, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 688, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 682, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 660,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 3399, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 3346, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 3280, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 3278, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 3263, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 2857, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 726, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 2192, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 0, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1229, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 1163, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 0,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 0, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 0, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	0, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1717, 1718, 0, 1750,
	1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	1748, 0, 0, 0, 0, 1717, 1718, 1720, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 1766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 1719, 1717, 1718, 1766, 1750, 1751, 1752, 1760, 1761,
	1762, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1753, 1748, 0, 0, 0,
	1719, 1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761, 1762,
	1739, 1766, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 1719, 0, 0,
	1766, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 1719, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 1767, 0, 0, 0, 0, 0, 1747, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 0, 0, 1763, 0, 1764, 1757, 1725, 0,
	1767, 0, 0, 1734, 1735, 0, 1747, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 1755, 0, 1763, 0, 1764, 0, 1725, 0, 0,
	0, 0, 1734, 1735, 1757, 0, 1740, 1767, 0, 0,
	0, 0, 0, 1747, 1749, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 1764, 1757, 0, 1740, 1767, 0, 0, 1734,
	1735, 0, 1747, 1749, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 1763,
	0, 1764, 0, 0, 0, 0, 1754, 0, 1734, 1735,
	0, 0, 1740, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0, 4348,
	0, 0, 0, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 4271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 0, 0, 0, 0, 4235, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 1717, 1718, 4234, 1750, 1751, 1752, 1760, 1761,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 1748, 0, 0, 0,
	0, 1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761, 1762,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 1719, 1717, 1718,
	1766, 1750, 1751, 1752, 1760, 1761, 1762, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 1719, 1717, 1718, 1720,
	1750, 1751, 1752, 1760, 1761, 1762, 1739, 1766, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 1719, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 1719, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 1767, 0, 0,
	0, 0, 0, 1747, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	1763, 0, 1764, 1757, 1725, 0, 1767, 0, 0, 1734,
	1735, 0, 1747, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 1755, 0, 1763,
	0, 1764, 0, 1725, 0, 0, 0, 0, 1734, 1735,
	1757, 0, 1740, 1767, 0, 0, 0, 0, 0, 1747,
	1749, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 1764, 1757,
	0, 1740, 1767, 0, 0, 1734, 1735, 0, 1747, 1749,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 1763, 0, 1764, 0, 0,
	0, 0, 1754, 0, 1734, 1735, 0, 0, 1740, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 0,
	1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 0, 0, 0, 0, 4069, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 3926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 3859, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 1717, 1718,
	3858, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 0, 1717, 1718, 1720,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 1719, 1717, 1718, 1766, 1750, 1751, 1752,
	1760, 1761, 1762, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1753, 1748, 0,
	0, 0, 1719, 1717, 1718, 1720, 1750, 1751, 1752, 1760,
	1761, 1762, 1739, 1766, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 1753, 1748, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 1719,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 1719, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 1767, 0, 0, 0, 0, 0, 1747,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 0, 1763, 0, 1764, 1757,
	1725, 0, 1767, 0, 0, 1734, 1735, 0, 1747, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	1743, 1744, 1745, 1755, 0, 1763, 0, 1764, 0, 1725,
	0, 0, 0, 0, 1734, 1735, 1757, 0, 1740, 1767,
	0, 0, 0, 0, 0, 1747, 1749, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 1764, 1757, 0, 1740, 1767, 0,
	0, 1734, 1735, 0, 1747, 1749, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 1763, 0, 1764, 0, 0, 0, 0, 1754, 0,
	1734, 1735, 0, 0, 1740, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 3857, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	3539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 0, 3054, 0, 0,
	0, 1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 0, 0, 1717, 1718, 3053, 1750, 1751, 1752,
	1760, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 1748, 0,
	0, 0, 0, 1717, 1718, 1720, 1750, 1751, 1752, 1760,
	1761, 1762, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 1748, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 1719,
	1717, 1718, 1766, 1750, 1751, 1752, 1760, 1761, 1762, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1753, 1748, 0, 0, 0, 1719, 1717,
	1718, 1720, 1750, 1751, 1752, 1760, 1761, 1762, 1739, 1766,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 1753, 1748, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 1719, 0, 0, 1766, 0,
	0, 0, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 1719, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 1742,
	1743, 1744, 1745, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 1767,
	0, 0, 0, 0, 0, 1747, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1743, 1744, 1745,
	0, 0, 1763, 0, 1764, 1757, 1725, 0, 1767, 0,
	0, 1734, 1735, 0, 1747, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 1755,
	0, 1763, 0, 1764, 0, 1725, 4487, 0, 0, 0,
	1734, 1735, 1757, 0, 1740, 1767, 0, 0, 0, 0,
	0, 1747, 1749, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	1764, 1757, 0, 1740, 1767, 0, 0, 1734, 1735, 0,
	1747, 1749, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 1763, 0, 1764,
	0, 0, 0, 0, 1754, 0, 1734, 1735, 0, 0,
	1740, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4486, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 1741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 0, 3052, 0, 0,
	0, 1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 0, 0, 0, 0, 3051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	0, 3018, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 1717, 1718,
	0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 0, 1717, 1718, 1720,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 0, 2989, 0, 1720, 0,
	0, 0, 0, 1719, 1717, 1718, 1766, 1750, 1751, 1752,
	1760, 1761, 1762, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 2564, 1753, 1748, 0,
	0, 0, 1719, 1717, 1718, 1720, 1750, 1751, 1752, 1760,
	1761, 1762, 1739, 1766, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 1753, 1748, 0, 0,
	0, 2563, 0, 0, 1720, 0, 0, 0, 0, 1719,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 2990, 1736, 0,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 1719, 0,
	0, 0, 0, 0, 1725, 0, 3138, 0, 1739, 3137,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 1767, 0, 0, 0, 0, 0, 1747,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 0, 1763, 0, 1764, 1757,
	1725, 0, 1767, 0, 0, 1734, 1735, 0, 1747, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	1743, 1744, 1745, 1755, 0, 1763, 0, 1764, 0, 1725,
	0, 0, 0, 0, 1734, 1735, 1757, 0, 1740, 1767,
	0, 0, 0, 0, 0, 1747, 1749, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 1764, 1757, 0, 1740, 1767, 0,
	0, 1734, 1735, 0, 1747, 1749, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 1763, 0, 1764, 0, 0, 0, 0, 1754, 0,
	1734, 1735, 0, 0, 1740, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1754, 1019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 1717, 1718, 0, 1750, 1751, 1752, 1760, 1761,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 1748, 0, 0, 0,
	0, 1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761, 1762,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 1719, 1717, 1718,
	1766, 1750, 1751, 1752, 1760, 1761, 1762, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 1719, 1717, 1718, 1720,
	1750, 1751, 1752, 1760, 1761, 1762, 1739, 1766, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 3139, 0, 0, 1720, 0,
	0, 0, 0, 1719, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 1719, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 0, 3144, 0, 1757, 0, 0, 1767, 0, 0,
	0, 0, 0, 1747, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	1763, 0, 1764, 1757, 1725, 0, 1767, 0, 0, 1734,
	1735, 0, 1747, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 1755, 0, 1763,
	0, 1764, 0, 1725, 0, 0, 0, 0, 1734, 1735,
	1757, 0, 1740, 1767, 0, 0, 0, 0, 0, 1747,
	1749, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 1764, 1757,
	0, 1740, 1767, 0, 0, 1734, 1735, 0, 1747, 1749,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 1763, 0, 1764, 0, 0,
	0, 0, 1754, 0, 1734, 1735, 0, 0, 1740, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 1741, 0, 0, 3106, 0,
	0, 0, 0, 0, 1746, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 3520, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 0,
	1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 1717, 1718, 0, 1750,
	1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	1748, 0, 0, 0, 3055, 1717, 1718, 1720, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 1766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 1719, 0, 0, 1766, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 800, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 802, 1757, 0,
	0, 1767, 0, 803, 0, 0, 0, 1747, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 1764, 1757, 0, 0,
	1767, 0, 0, 1734, 1735, 0, 1747, 1749, 0, 0,
	0, 804, 0, 821, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 1763, 0, 1764, 0, 0, 0, 0,
	0, 0, 1734, 1735, 0, 0, 1740, 0, 805, 0,
	0, 0, 0, 806, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 0, 1740, 0, 0, 0, 807,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 801, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 808, 0, 0, 809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 812, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 0, 813, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 799, 0, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 815, 0, 0, 0, 816,
	834, 0, 833, 0, 0, 0, 817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	818, 0, 0, 0, 0, 826, 0, 0, 0, 0,
	0, 835, 0, 832, 0, 0, 0, 0, 0, 723,
}

var sqlPact = [...]int{
	8655, -1000, -1000, -1000, -1000, 184, -1000, -1000, 183, 180,
	179, 178, 176, 173, 171, 170, 167, 166, 164, -1000,
	-1000, -1000, -1000, -1000, -1000, 163, -1000, -1000, 162, -1000,
	161, 157, 156, -1000, -1000, 151, -1000, 150, -1000, -1000,
	-1000, -1000, 148, 147, 139, 86159, 85622, 86689, 2183, 107507,
	94137, 1955, 77058, 106970, 76521, 106433, 2015, 10275, 105896, 2626,
	138, -1000, 105359, 132, 131, 124, -1000, 104822, -1000, 2004,
	-1000, 121, 4670, 62009, 117, 116, 115, 2142, 108, -1000,
	106, 104, 101, -1000, 118525, 1457, -1000, 100, 99, -1000,
	921, 91466, 97, 96, 2406, 95, 91, 61472, 90, 86,
	2279, 2799, -1000, -1000, 1893, -1000, -1000, 85, 83, 82,
	77, 76, 75, 74, 73, 71, 70, 69, -1000, 68,
	67, 66, 65, 63, -1000, 60, 56, 53, -1000, 51,
	-1000, 50, 47, 46, 37, 36, 34, 33, 32, 28,
	27, 25, 23, 22, -1000, 13577, -1000, 1711, 1613, 1610,
	1609, 1606, 1603, 980, 20, 19, 18, 17, 16, 15,
	14, 13, 11, -1000, 10, 8, 7, 4, 2, 0,
	-2, -5, 152, -7, -8, -9, -11, -12, -14, -15,
	3189, -1000, 1456, 1125, 28623, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 113337, 108037,
	-16, -76, -17, -1000, 3168, 974, 51237, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 261, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 485, 1761, 763,
	-1000, -1000, -1000, 104292, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2182, -66, -1000, 1915, -1000, -1000, -1000, -1000,
	-1000, 762, -1000, 2180, 219, 2119, -1000, -1000, -1000, 3202,
	2339, 3614, 3613, 3612, 3608, 3606, 112807, 1710, 3605, 2404,
	3604, 3601, 3600, 3599, 3597, 3594, 3593, -1000, 85085, 1029,
	84548, 84011, 3229, 103762, 83474, 103225, 70631, 43451, 1062, 3201,
	-1000, -1000, -1000, -1000, -1000, -1000, 108037, -1000, 1028, -1000,
	-1000, 3592, 3588, 2035, 759, 93600, -1000, 1884, -1000, 933,
	30309, -1000, 1278, -1000, 30309, 258, -1000, -1000, -1000, -1000,
	-1000, -1000, 3581, 3579, 3578, 3577, 3576, -1000, -1000, 75984,
	21827, 75447, 74910, 102688, 21280, 82937, 82400, 102151, 70084, 1023,
	1382, -1000, -1000, -1000, -1000, -1000, -1000, -51, 67896, 3364,
	108037, -1000, 236, -1000, -1000, -1000, -1000, -1000, -1000, 42877,
	719, 42303, 813, 41729, 687, -1000, -1000, -1000, -1000, 69537,
	-1000, 101614, 2331, 3575, 3573, 1087, 3569, 3105, 1595, 3568,
	1716, 1166, 3567, 3566, 3565, 3564, 3563, 3561, 3559, 1330,
	101077, 2848, 100540, 1601, 68990, 1020, 81863, 86689, 2480, 100003,
	1292, 1216, -1000, -1000, -1000, -1000, 2954, 2757, 2714, 1332,
	-1000, -1000, -1000, -1000, 53916, 8414, 6614, 10901, 99466, 56128,
	86689, 86689, -1000, -1000, -1000, -1000, -1000, 41155, 603, 40581,
	954, -1000, -1000, 54469, 2796, -1000, -1000, -1000, -1000, 40007,
	486, 39433, 772, 108037, -1000, 2846, 1779, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2123, 1608, 3368, 2618, 68443, 1903, 1406, 3167,
	2919, 2913, 1488, 2905, 3558, 2487, 2898, 2896, 2888, 2872,
	2871, 1478, 2444, 317, 28049, 2825, 1544, 38859, 1454, 1486,
	2868, 2867, 3396, 1906, 1854, 2049, 74373, 3557, 3556, 3128,
	2866, 2860, 2656, 2857, -1000, 2792, -1000, -1000, -1000, -1000,
	1466, -1000, -1000, -1000, -1000, 77588, -1000, -1000, 1667, -1000,
	-1000, 1667, -1000, -1000, -1000, -1000, -1000, 1197, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1456,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2160, -1000, 2008, -1000, -1000, 2410, 3137, 3137, 3137, 3198,
	408, 398, -1000, 152, -1000, -1000, 118364, -1000, -1000, 44013,
	44013, 44013, 44013, 44013, 44013, 44013, 2026, -1000, 756, -1000,
	-1000, 800, -1000, 755, 611, -1000, -1000, -1000, -1000, -1000,
	-1000, 754, -1000, -1000, -1000, -1000, -1000, -1000, 3364, -1000,
	24617, -1000, -1000, -1000, 467, 753, 44013, -1000, -1000, 3407,
	3406, 926, -1000, 235, 946, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2839, 752, 749,
	-1000, 748, 746, 744, 743, 740, -1000, -1000, -1000, 739,
	738, 737, 736, 733, 731, 729, 726, -1000, 1933, -1000,
	-1000, -1000, -1000, -1000, -1000, 664, 663, 663, 663, -1000,
	1014, -1000, -1000, -1000, 357, 658, 293, 655, 652, 651,
	-1000, 705, 700, 699, 698, 693, 692, 690, 689, 685,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1013, -1000, -1000,
	-1000, -1000, -52, 108037, -1000, 485, -52, -1000, -1000, 684,
	-1000, 32569, 32569, 32569, -1000, -1000, 2176, 44013, -1000, 2351,
	-1000, -41, -41, 907, 52842, -1000, 50163, 907, 262, 821,
	57735, -1000, 2791, -1000, -1000, 679, 221, -1000, -1000, -1000,
	-1000, 22372, 2789, 108037, 108037, 86689, 86689, 86689, 3030, 44013,
	-1000, -1000, 65739, 108037, 87749, -1000, -1000, 3311, 62539, 65209,
	108037, 2830, 64679, 3551, -1000, -1000, -1000, -1000, -1000, 3005,
	3548, 3545, 3541, -1000, 108037, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 209, 3004, -1000, -1000, 90929, 209, 3003, -1000,
	209, 3002, -1000, 90399, -1000, -1000, 2082, 3001, -1000, -1000,
	220, 2999, -1000, -1000, -1000, 217, 2998, -1000, -1000, 216,
	-75, 2997, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 118364, -1000, -1000, -1000, 64142, -1000,
	3145, -1000, -1000, 108037, -1000, 44013, -1000, 3308, 1708, 71711,
	3248, -62, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2387,
	2386, 1132, 2205, -1000, 3047, 1537, -1000, 30309, 3093, -1000,
	-1000, -1000, 210, 22372, -1000, -1000, -1000, -1000, -1000, -1000,
	2146, 2996, 1447, -1000, 2201, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1698, 2987, -1000, 2117, 2985, 1684, -1000, -1000,
	2381, -1000, 3124, -1000, -1000, 1872, 2983, -40, -1000, -1000,
	2389, -1000, 1853, -1000, 977, 2982, -1000, 81326, 55575, 54469,
	67896, -57, -1000, -1000, -1000, -1000, -145, -1000, 20733, 118364,
	-1000, -1000, -1000, -1000, 1597, 118364, 850, -1000, -1000, 2956,
	-1000, 118364, 848, -1000, -1000, 2955, -1000, 2829, -1000, -1000,
	2289, -1000, -1000, 3540, -1000, -1000, 3538, -1000, 3537, 3534,
	3533, -1000, 1612, 1907, 3532, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 80796, 2175, -1000, -1000, 79722, -1000, 2287,
	3243, -1000, 80259, 1018, -1000, 977, 2285, -1000, 89869, 934,
	2280, -1000, 3529, 3228, 2557, 977, 2278, -1000, -1000, -1000,
	-1000, -1000, 953, -1000, 59335, -1000, 59335, -1000, 1463, -1000,
	112277, -41, 86689, 3364, -1000, -83, -1000, -1000, -1000, 974,
	-1000, 53379, -1000, 53379, 93063, 71176, 951, 724, 60935, 118364,
	-1000, -1000, -1000, -1000, 118364, -1000, -1000, -1000, -164, 2615,
	-1000, 71176, 54469, 118364, -1000, -1000, -1000, -1000, 118364, -1000,
	-1000, -1000, 71176, 79722, -1000, 98929, 79192, -1000, -1000, 1324,
	2413, -1000, -1000, -1000, 71176, 1275, 71176, 71176, 71176, -1000,
	98392, -1000, -1000, 2009, 1477, 3140, 1967, 86689, -1000, 1755,
	-1000, -1000, -1000, 3156, 108037, -1000, -1000, 2827, -1000, 63605,
	89339, -1000, 88809, -1000, 88279, -1000, 86689, -1000, 86689, -1000,
	3528, 3526, 3524, -1000, -1000, 3523, -1000, 3522, 3150, -1000,
	118364, 3149, -1000, 3521, 3239, 2825, 118364, -1000, 2894, 1617,
	1615, 108037, -1000, -1000, 108037, -1000, 108037, -1000, -1000, -1000,
	1403, -1000, -1000, 2380, -1000, -1000, -1000, -1000, 86689, -1000,
	-1000, -1000, -1000, -1000, -1000, 2824, -1000, 1585, -1000, 1740,
	-1000, 2788, 3148, -1000, 1239, -1000, -1000, 229, -1000, -1000,
	-62, -1000, 111747, -1000, 2410, -1000, 108037, -1000, 2364, 2810,
	2822, 1781, 2192, 2474, -1000, 38285, 2449, 47385, 2199, 152,
	-1000, -1000, 152, 152, 29747, -1000, -1000, 62539, 62539, 22372,
	1205, 44013, 44013, 44013, 44013, 44013, 44013, 44013, 44013, 44013,
	44013, 44013, 44013, 44013, 44013, 44013, 44013, 44013, 44013, 44013,
	44013, 44013, 44013, 44013, 44013, 44013, 44013, 44013, 44013, 44013,
	44013, 44013, 44013, 44013, 44013, 44013, 2022, 44013, 1196, 44013,
	44013, 44013, 44013, 2304, -1000, -1000, 1800, 542, 1989, -1000,
	3353, 3353, 3353, 1065, 1065, 4805, 4805, 552, 3520, 800,
	-1000, 44013, -1000, 24, 44013, 22919, -1000, 398, 9968, 2338,
	-1000, 397, 23493, -1000, -1000, -1000, 24617, 611, 37711, 44013,
	1004, 118364, -1000, -1000, 1584, 3373, 20187, 2841, 2651, 674,
	717, 677, 27475, 26901, 26327, 25753, 556, 44013, 44013, 44013,
	44013, 44013, 44013, 44013, 44013, -1000, -1000, 3380, -1000, 3373,
	-1000, -1000, -1000, -1000, 3373, 1203, 1202, 3373, -1000, 3373,
	3373, 10036, 10036, 37149, 36575, 36001, 47947, 35427, 44013, 25179,
	34853, 34279, -1000, 108037, -52, 3307, 44013, 153, -1000, 117122,
	-1000, 153, 153, 672, -84, 118364, 2638, 2638, 51772, 2375,
	2050, 2050, 2050, -1000, 907, 15790, 907, 97327, 2068, 907,
	907, 206, 238, 396, 49628, 2351, 97327, 781, 671, -20,
	-28, -31, -1000, -1000, -33, -35, -1000, -1000, 86689, 668,
	22919, 22372, 205, 1393, -91, 2456, 2455, 2452, -1000, 2450,
	1624, -94, 1193, 86689, 108037, -99, -1000, 704, -104, -1000,
	1313, 204, 3373, -1000, -1000, -1000, -1000, -1000, 3517, 3516,
	-1000, 1012, 667, 666, 411, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 664, 663, 663, 663, -1000, 357, 658,
	293, 655, 652, 651, -1000, -1000, -1000, -1000, -1000, 2785,
	86689, 108037, -145, 87749, -86, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 108037, -1000, -1000, -1000, 3515, -1000, 86689,
	-1000, -1000, 86689, 209, 2952, -1000, 86689, -1000, 86689, 208,
	2949, -1000, -1000, 108037, -1000, 86689, 86689, -1000, 108037, 108037,
	108037, 71176, 71176, 224, -1000, 86689, 891, -105, 1104, -62,
	-1000, -1000, -1000, 1667, -1000, 1748, -1000, -1000, -1000, -1000,
	-1000, -1000, 1353, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 926, -1000, -1000, -1000, -1000, -1000, -1000, 3370, 3359,
	-53, -1000, -1000, 22372, -1000, -63, 1550, 1875, -1000, 73836,
	2215, 3135, 3514, 2493, 3113, 1462, -1000, 1391, 1191, 3194,
	77588, 3259, 3298, 675, -1000, 2782, -1000, -1000, 931, 1578,
	1592, 1189, 77588, 2117, -1000, 62539, -1000, 2511, 3193, 1376,
	1388, 1376, 1376, 1100, -1000, 77588, 1591, 1188, 1186, 1867,
	1844, -1000, -1000, -1000, 1185, 1183, 839, 1835, -1000, -65,
	3256, 3279, 143, -1000, 2781, 1182, -1000, -1000, 86689, 22372,
	1516, 1534, 1566, 1179, -54, -1000, 3254, 3250, 1175, 1168,
	-1000, 4607, -1000, 71176, 1656, 2948, 2613, 849, 2612, -1000,
	-1000, -1000, 849, -57, 67896, 108037, 203, -1000, 24, 44013,
	44013, 24, 44013, 24, 3230, 2943, -1000, -1000, -1000, -1000,
	-1000, 3511, 1883, 2399, -1000, -1000, 649, 2273, 2776, 108037,
	2462, -58, 86689, -1000, 2940, 66276, 2117, 2272, -1000, -1000,
	78655, -1000, 2939, 485, 2267, -1000, 696, 3505, 2938, -1000,
	111217, -1000, 3145, 1214, 2936, 1053, 544, 3306, -1000, 544,
	59865, -1000, 108037, -1000, -41, 6413, 72776, -106, -107, 395,
	-1000, 97862, 108037, 1052, 73306, 108037, 3081, 964, 54469, -1000,
	54469, -122, -164, 2610, 951, 951, 849, -1000, 849, -1000,
	86689, 2817, -1000, -1000, 71176, 951, 951, 951, -1000, -1000,
	-1000, -1000, 3503, 3500, 3499, -1000, -1000, -1000, 967, 86689,
	108037, 86689, -1000, 202, -1000, 108037, -1000, 108037, 108037, 86689,
	-1000, 967, 108037, 967, 108037, 967, 108037, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 24, 44013, -1000, -1000, 3494, 1482,
	-1000, 2813, -1000, 2812, -1000, -3, -1000, -1000, -1000, -1000,
	-1000, 1765, 86689, 86689, 86689, 86689, 108037, 3060, -1000, 108037,
	3057, 86689, -1000, 77588, -1000, 2364, 2810, -1000, -1000, -1000,
	-1000, -1000, -1000, 1346, 2132, -1000, 2430, -1000, 1433, -1000,
	-1000, -1000, 118364, 48509, -1000, -1000, 118364, 1671, -1000, 46823,
	46261, -1000, -1000, 1565, 86689, 2465, -1000, 2465, -144, -1000,
	117056, 2428, 86689, -1000, -1000, -1000, -1000, -1000, 929, 1296,
	1296, 1349, 1349, 1349, 1349, 3244, 254, 263, 5836, 7116,
	7116, 5229, 5229, 5229, 5229, 5229, 7116, 5627, 1065, 1065,
	5627, 5627, 5627, 5627, 5627, 1065, 1065, 1065, 7116, 7116,
	7116, 4805, 12098, 9222, 44013, 44013, 1165, 1799, 542, 8608,
	44013, 5824, 5824, 5824, 5824, -1000, 2038, -1000, -1000, -1000,
	-1000, 2775, 643, 47947, 47947, -1000, -1000, -1000, -1000, 24055,
	44013, -1000, -1000, -1000, -1000, 33705, -1000, -1000, 116439, -317,
	392, -124, -50, -1000, 44013, 44013, 44013, 390, -1000, 201,
	44013, 108037, -1000, 14907, 778, -121, -1000, -125, 1399, -1000,
	44013, -1000, -1000, 1164, -1000, 1162, 1161, 1160, -1000, 642,
	388, -1000, 200, -1000, 2031, 641, 636, 44013, -1000, -1000,
	-1000, -1000, -1000, 116402, -1000, -1000, 116373, -1000, -1000, 115812,
	-1000, -1000, 115783, -1000, -1000, -1000, 118335, 14715, 14548, 14126,
	7746, 13907, 13335, -128, 383, -130, 381, 928, 927, 374,
	373, 372, -133, -1000, 3489, 3488, 3485, -1000, 3484, 3482,
	3481, -1000, 3480, 3479, 3475, -1000, 3473, 3466, 3462, -1000,
	3461, 3460, 3459, -1000, 3456, 3455, 3454, -1000, 3453, 3452,
	3451, -1000, 3449, 3448, 3447, -139, 371, -1000, 2772, -124,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 370, -1000,
	369, -1000, 117747, -124, 367, 7775, -1000, 47947, 47947, 47947,
	-1000, 366, -1000, 117027, -1000, 117776, 33143, 33143, 33143, 363,
	117710, 44013, -124, -148, -1000, -149, -1000, -1000, 559, -150,
	996, 32569, 50700, 22372, -1000, 996, 996, 44013, -1000, 44013,
	2442, -1000, -1000, -1000, -1000, 2436, 2207, 2638, 51772, -1000,
	-1000, -1000, -1000, 97327, -1000, 3364, 2642, -1000, 97327, -1000,
	-1000, 108037, 485, -1000, 97327, 97327, 22372, 907, -1000, 907,
	97327, 592, -1000, -1000, -1000, -1000, -1000, 360, 56663, -50,
	198, 22372, 977, -1000, 2531, 2531, 2531, 2531, -1000, -1000,
	108037, 1159, -60, -131, 3335, -1000, 1947, -1000, 62539, -1000,
	792, 1121, 22372, -1000, -1000, -1000, 634, -1000, 3373, 3373,
	-1000, 3373, 108037, 2767, 144, 112, 66276, 66276, 3446, -1000,
	-1000, 209, -1000, 86689, 209, 209, -1000, 86689, 86689, 2082,
	-1000, 220, -1000, 217, -1000, -1000, -75, -1000, 993, 30309,
	-1000, 1667, -1000, -1000, 1502, -1000, 1899, -1000, 1108, -1000,
	-1000, -1000, -1000, 30309, -1000, 2359, 108037, 108037, 86689, -1000,
	108037, -1000, 2001, 3333, 1794, 2379, 2378, -1000, 2266, 110687,
	2253, 62539, 108037, -1000, -1000, 631, 943, 2424, 2423, 1049,
	108037, 108037, 2422, 110157, 109627, -1000, 3444, 108037, 1951, 44013,
	66276, 2024, 1974, 24, 24, -1000, -1000, 24, 630, 1282,
	86689, 86689, 108037, 86689, 1590, -1000, -1000, -1000, -1000, -1000,
	78118, -1000, -1000, 3379, 3377, -1000, 1376, -1000, -1000, -1000,
	1376, 2117, 1543, 108037, 86689, 66276, 108037, 108037, 1562, 108037,
	1074, -1000, 839, 1956, 24, 24, -1000, -1000, 24, 625,
	22372, 1793, -1000, 2834, 108037, 3405, 108037, 108037, 108037, 66276,
	3139, 109097, 108037, 108037, 66276, 4607, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 67366, 1059, 977,
	1561, 1154, 77588, 54469, 962, 54469, 2569, -1000, -1000, 19641,
	-1000, 118364, 118364, -1000, 118364, -1000, 63075, 108037, -1000, 1016,
	108037, 73306, 942, 2935, 58805, -145, 951, 71176, 86689, -58,
	108037, -1000, -1000, 2117, 2929, 485, 2257, -1000, 71176, 3305,
	2927, 624, 3442, 3441, -1000, 86689, 2174, 2256, -1000, -1000,
	108567, 3018, 839, 108037, 996, 51772, 1773, -1000, 57200, 1036,
	108037, 1706, 103, -1000, -1000, -1000, -18, 108037, -1000, 814,
	-1000, -1000, 6413, 6413, 951, -276, 616, -1000, 898, 889,
	55022, 71176, -151, -1000, -1000, -1000, -1000, 2253, 86689, 108037,
	1259, 2541, 108037, -156, -1000, 196, 615, -1000, 2628, -1000,
	-164, -1000, 964, 54469, 2764, -1000, -1000, 989, -1000, 1235,
	951, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -43, 108037, -145, -145, -59, -60, -1000, 967, -1000,
	967, -1000, 967, -1000, 118364, -1000, -1000, 1476, 1455, 108037,
	-1000, 22372, 108037, 86689, 22372, 86689, 2804, 2803, -1000, -1000,
	-1000, 108037, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1066,
	-1000, 1671, 2126, -1000, 611, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2358, -1000, -61, 29747, 915, -1000,
	-1000, 86689, -46, 44013, 44013, 8343, 7467, 44013, 47947, 47947,
	-1000, 44013, 7381, -1000, -1000, -1000, -1000, -1000, 2752, 610,
	44013, 62539, 7963, 7836, -1000, 359, 12974, 5627, -1000, 44013,
	-1000, 358, 32007, -1000, 117093, -64, -157, -1000, 16349, -124,
	-159, -1000, -1000, 788, -1000, 3015, -1000, 44013, 117681, 2326,
	1753, 1694, 1490, 3373, 3403, 19095, -1000, 60400, 998, 2078,
	115746, -1000, -1000, -1000, -1000, 62539, 62539, 44013, 44013, -1000,
	44013, 44013, 44013, -1000, -1000, -1000, 3373, 923, -1000, -1000,
	-1000, 923, -1000, -1000, 1376, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1376, -1000, 44013, -1000, -1000, 2722, 44013, -1000, 62539, 62539,
	47947, 47947, 47947, 47947, 47947, 47947, 47947, 47947, 47947, 47947,
	47947, 47947, 47947, 47947, 47947, 47947, 47947, 47947, 47947, 2432,
	47947, 3351, 3351, 3351, -1000, 2800, 2722, 44013, 44013, 62539,
	353, 352, 351, -1000, 44013, -124, -1000, -1000, 6413, 608,
	-1000, 2353, -1000, 2645, -1000, 44013, -1000, -162, -1000, 2351,
	-1000, -1000, 2645, 2645, -165, 118364, 51772, 51772, -1000, 607,
	44013, 2434, -1000, -1000, 776, -311, -1000, 875, -1000, -1000,
	-1000, -1000, -1000, 485, -1000, -1000, -1000, 192, 97327, 97327,
	771, -1000, -167, -1000, -1000, -168, -1000, 3302, 347, 22372,
	-1000, 996, 3112, -1000, -1000, -1000, -1000, -1000, -1000, -145,
	108037, 108037, 2094, 3402, -1000, 3375, 787, 770, 189, 3373,
	346, 344, 340, -145, 108037, 108037, 108037, -1000, -1000, -1000,
	-1000, 209, -1000, -1000, -1000, 208, -1000, -1000, -1000, -1000,
	2504, -1000, -62, -1000, -1000, -1000, 44013, -1000, -1000, 3132,
	1153, 1152, -1000, -1000, -1000, -1000, 3191, 87219, 3332, 1782,
	1754, 2925, -1000, 2250, -1000, 1040, -1000, 1729, -1000, 44013,
	606, 2530, 604, 602, 3440, 1759, 3437, 1050, 2922, 2082,
	2916, 2082, -1000, -1000, -1000, 925, -1000, 118364, -1000, 598,
	594, -1000, -63, 1545, 1858, 988, -1000, -1000, 44013, 44013,
	96797, -1000, 450, 3124, -47, -1000, -1000, 1555, 1150, -1000,
	-1000, -1000, -1000, 2117, 1518, 1148, -1000, -1000, -1000, -1000,
	-1000, -1000, 987, -1000, 2873, 2869, 108037, -1000, 986, -1000,
	-1000, 44013, -1000, -65, 1147, 3241, 2239, 86689, 1146, -1000,
	1142, -1000, -1000, -1000, 3245, 2082, 2915, 1144, -1000, -1000,
	-1000, -1000, -1000, 66821, -1000, 108037, 86689, 1487, 849, -1000,
	2352, 849, 962, 2721, -1000, 2461, -1000, 86689, 3436, 338,
	-175, -67, 62539, 3297, -1000, 2187, 533, 86689, 914, -1000,
	3364, -1000, -1000, -1000, -1000, 3231, 86689, 3294, 2914, 977,
	24, 86689, 3384, -1000, -1000, 3292, 86689, 2910, 2173, 2238,
	2392, 839, 72246, 977, 2070, -74, -1000, 1706, 31433, 3121,
	-176, -1000, -1000, -1000, 996, 59865, 51772, 44013, 3435, -178,
	-1000, -1000, -1000, -1000, -1000, 94672, 94672, 71176, 71176, 71176,
	951, 108037, 108037, 73306, -1000, -1000, 583, 108037, 108037, 579,
	-1000, 108037, 108037, 3434, 71176, -68, 578, -1000, 874, 872,
	870, -1000, -1000, -1000, -1000, -1000, 964, -1000, -164, 24,
	-1000, 2085, 86689, -1000, 18549, -1000, -1000, -1000, -1000, -1000,
	-1000, 967, -1000, -1000, 1960, 2197, 1960, 1685, 1682, -1000,
	-1000, 2125, -1000, -1000, -1000, -1000, 2494, 3133, 22372, 3238,
	5824, 44013, 44013, 487, 7248, 6125, 5824, 44013, 44013, 62539,
	535, -181, 44013, 44013, -1000, 44013, 769, 118364, 3401, 44013,
	336, 335, -1000, -1000, -1000, 3366, -1000, -1000, -1000, 118364,
	44013, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 333, -1000,
	187, -1000, -1000, -1000, 113867, -1000, 44013, 331, 3188, -1000,
	330, 328, 11440, 447, 115717, 115156, 115127, 326, -1000, -1000,
	320, 319, 118364, 2800, 118364, -1000, -1000, 866, 866, 1366,
	1366, 1366, 1366, 3351, 425, 595, 718, 843, 843, 843,
	949, 626, 626, 843, 843, 843, 2699, 2409, 577, 5206,
	-1000, -1000, 118364, 118364, 318, -1000, -1000, -1000, -124, 314,
	6413, -1000, 2647, 3186, 118364, -1000, 51772, 2647, 2647, -1000,
	-1000, 2207, 108037, 118364, 51772, -1000, 2642, -1000, 16906, -1000,
	22372, -1000, -1000, -1000, -1000, 3364, -1000, 56663, -1000, 576,
	-1000, 145, -1000, 3112, -1000, 868, -1000, -145, -145, -1000,
	-1000, 768, 3431, 785, 22372, 313, -1000, -1000, -1000, -145,
	-145, -145, -1000, -1000, -1000, 3077, 118364, 108037, 108037, 1389,
	92526, 1665, -1000, -1000, 1828, 2377, -1000, 3331, 3327, 108037,
	2901, -1000, 2045, -1000, 1049, 115090, 52307, -1000, 52307, 108037,
	-1000, -1000, 1775, 2458, 1080, -1000, 3158, 108037, -1000, 108037,
	-1000, -1000, 108037, 108037, 86689, 108037, -1000, 2877, -183, 118364,
	-69, -1000, 864, -1000, 1390, -1000, 18003, 108037, 86689, 108037,
	86689, 2010, -1000, -1000, -1000, 2874, -189, 22372, -1000, 3400,
	3399, 2895, 3163, 3397, 108037, -1000, 108037, 86689, 3072, -1000,
	-1000, -1000, -1000, 1496, 1141, 962, -70, 574, -1000, 859,
	-1000, -1000, 858, 962, -1000, 71176, 54469, 485, -1000, 2477,
	-1000, 91996, 2130, 24, -1000, 3430, 95207, 573, -1000, 2084,
	-1000, 596, 66276, 2117, 24, 86689, -1000, -1000, 485, 299,
	-71, -1000, 3013, 1044, 22372, 86689, 2890, 2388, 839, 72246,
	-1000, 1214, 2474, -1000, -73, -1000, 627, 24, 2070, -1000,
	-74, 118364, -1000, 857, -1000, -191, -1000, -1000, 291, -1000,
	3070, 3068, -1000, 2654, 52307, 571, 570, 108037, 3067, -1000,
	-1000, -192, 2209, 2209, 71176, 54469, 71176, -1000, 964, -1000,
	2263, -1000, -1000, -1000, -1000, -1000, 22372, 1485, -1000, 566,
	565, -1000, -1000, -1000, -1000, 3133, 5824, 5824, 44013, 44013,
	44013, 5824, 535, -194, -1000, 5824, 5824, -124, -1000, -1000,
	117093, -1000, -1000, -1000, 118364, -1000, 17457, 1962, -1000, 115061,
	-1000, 29747, -1000, -1000, 44013, 44013, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 47947, 2697, 564, 62539, -1000, -1000,
	287, 981, 44013, 45699, 2351, 981, 981, -1000, -197, -1000,
	-1000, -1000, 3364, 145, -1000, -1000, 3425, 22372, -1000, 71176,
	628, -1000, 3424, -1000, -1000, -1000, -1000, -1000, 2603, -1000,
	-1000, -1000, 1827, 2376, -1000, -1000, 1138, -1000, -1000, 108037,
	-1000, 108037, -1000, 22372, 108037, 2678, 2228, -1000, 943, 2421,
	558, 47947, 86689, 884, -1000, 3321, 2619, -199, -1000, 108037,
	44013, 108037, -200, -202, 2216, -1000, -1000, 2211, 44013, -1000,
	62539, 555, 2082, 2082, -205, -210, -1000, -1000, 44013, 1129,
	108037, 30871, -1000, 3423, 3124, -1000, -1000, -1000, -1000, 108037,
	44013, 1128, -1000, -1000, -1000, 3391, 2082, 22372, -1000, 2082,
	2082, 3163, 1079, 108037, 86689, -1000, 2363, 2363, 71176, 54469,
	-1000, -75, 962, 3290, 2485, 3422, -1000, -1000, -1000, -1000,
	2419, -1000, -1000, 108037, 2411, 955, -1000, -212, -1000, 846,
	844, 73306, 942, 956, -1000, -1000, -1000, -1000, 485, 3289,
	-1000, 3385, 549, 547, 108037, 2172, 545, 22372, 3115, 839,
	72246, -1000, 3018, 1706, -1000, 2219, 108037, 3111, -1000, 2474,
	542, -1000, 951, 539, 537, 2475, 2475, -213, 52307, 52307,
	-215, 536, 951, -1000, -218, -1000, -1000, -1000, -1000, -77,
	-1000, 854, 845, -1000, -1000, 86689, 86689, 44013, 44013, -1000,
	5824, 5824, 5824, -1000, 279, -1000, -1000, 2070, 3183, -1000,
	-85, 114500, 114471, 8584, 47947, 62539, -220, -1000, -1000, 108037,
	118364, -100, -1000, 118364, 532, 515, 424, -1000, -1000, -1000,
	593, -1000, -1000, 3421, -1000, 96267, -1000, -1000, 95737, -1000,
	1839, -1000, -1000, -1000, 108037, 2236, -1000, -1000, 1048, 44013,
	5206, 514, 44013, -1000, 3287, -1000, 2478, 2729, 1792, 52307,
	-1000, 3133, -1000, 114434, -1000, 1043, 1797, -1000, -1000, 118364,
	3163, 52307, -1000, -1000, 510, 509, 118364, 500, 841, 2685,
	-1000, -1000, -1000, -1000, 118364, 498, 3241, -1000, -1000, -1000,
	-1000, 2082, 86689, -1000, -1000, -1000, -221, -1000, -1000, 1874,
	24, 1956, 2599, -1000, 2130, 497, -1000, -1000, 2137, 2496,
	-1000, 95207, 30309, 30309, 278, 3266, 956, -1000, 3360, -1000,
	3265, 24, -1000, 3384, 52307, -1000, 86689, 52307, 2163, 1926,
	2372, 72246, -1000, 2392, -1000, -1000, -223, 108037, 1706, -1000,
	-1000, 71176, 71176, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1043, -226, -228, -1000, 71176, -1000,
	-1000, 2263, -1000, 108037, -1000, 108037, -1000, -1000, -229, -231,
	-1000, 1889, 44013, 29747, -1000, -1000, 8584, -234, -1000, -123,
	-1000, 3263, 45699, 3418, 3414, 3413, -1000, -1000, -1000, 1825,
	-1000, 1824, -1000, -1000, 2880, 2637, 114405, 2355, 108037, 15168,
	-1000, 2715, -1000, -1000, 2485, 492, -1000, -1000, -1000, -1000,
	915, 108037, 2485, 2636, 86689, 1045, -236, 1960, 1960, 44013,
	29185, 2007, 44013, -1000, -1000, 3163, -1000, 2670, 3361, -1000,
	942, -1000, 1982, 108037, -1000, 3142, -1000, 3066, -1000, -1000,
	-1000, 2477, 24, -1000, -1000, 24, -1000, 273, -241, 1044,
	-242, 86689, 1810, -1000, 839, -1000, 2388, 996, -1000, -1000,
	-249, -250, 1792, 1043, 950, -251, -1000, -256, -257, -1000,
	-1000, 267, 45137, 45137, 45137, -124, -144, -1000, 108037, 490,
	-1000, -1000, -1000, -1000, -1000, -1000, 2863, 961, -1000, 2148,
	1785, 265, 1024, -1000, -1000, 1956, 108037, -1000, -1000, -1000,
	960, 485, -1000, 44013, 1043, -258, -1000, 1035, -263, -1000,
	1034, -264, -1000, 2682, -1000, -265, 2082, 958, 3227, -1000,
	-1000, -1000, 2137, 86689, -266, -1000, -1000, 2314, -1000, 2485,
	955, -1000, -1000, 1043, 484, 1792, 474, 1363, 839, -1000,
	-1000, 1376, 3115, 3026, 951, 951, 2485, 1792, 996, 471,
	951, -1000, -1000, -1000, 2907, -1000, 49071, 2127, 1663, 116468,
	2907, 2907, -1000, -1000, 108037, 3212, -1000, 2156, 2154, 1452,
	-1000, -1000, -1000, -1000, -1000, -1000, 2619, -271, 3210, 2355,
	118364, 2485, -1000, 1960, 2596, -1000, 1960, 2679, -1000, 1981,
	-1000, -1000, -1000, 1586, 3346, 1925, 468, -1000, 108037, 1619,
	1616, 3412, 1956, 2137, 1792, 52307, 2485, 52307, -1000, -1000,
	108037, -1000, 1926, 1272, -1000, -1000, 1956, 2485, -1000, -1000,
	-1000, 1724, 3303, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 832, -1000, 3042, -1000, 1064, 2121, 2121, 996, -1000,
	823, 2148, -1000, -1000, 456, -1000, 451, -1000, 2083, -1000,
	-1000, -1000, -1000, 108037, -1000, -1000, 3411, -1000, 942, -1000,
	2485, -274, 1956, -277, -1000, -145, 1810, -1000, 1460, 950,
	1956, 1602, -1000, -1000, 2055, 44575, 44013, -1000, 3338, -1000,
	-1000, 2429, -1000, -1000, 44013, 2619, 44013, 44013, 58270, -279,
	-1000, 2137, 1956, 1043, 950, 1792, 1363, 59865, 996, 950,
	-1000, -1000, -1000, 118364, -1000, -1000, -1000, 118364, -1000, -287,
	-288, -276, 94672, 2072, 1925, 950, 1792, 996, 2485, -1000,
	-272, -1000, 996, 1956, 1118, -295, -1000, -1000, -1000, -1000,
	996, 2485, -1000, 1956, -1000, -1000, -1000, 413, -1000, -1000,
	1956, 950, 44013, 950, 996, -298, 996, -1000, 1956, -1000,
	-1000,
}

var sqlPgo = [...]int{
	0, 4216, 4214, 4213, 4212, 4211, 4209, 4208, 4204, 4201,
	4198, 4197, 4196, 4195, 4194, 4193, 4191, 4190, 4189, 4187,
	4184, 4180, 4177, 4176, 4175, 4172, 4170, 4169, 4168, 4166,
	4165, 4164, 4163, 4161, 4159, 4157, 4156, 4154, 4153, 4152,
	4149, 4145, 4143, 4142, 4141, 4140, 4139, 4137, 4135, 4133,
	4130, 4129, 4128, 4126, 4123, 4122, 4121, 4119, 4118, 48,
	4117, 4116, 4114, 4109, 4108, 4107, 4105, 4095, 4088, 4080,
	4079, 4077, 4073, 4072, 4067, 4066, 4057, 4056, 4055, 54,
	4053, 253, 4051, 4044, 4043, 4042, 4038, 4037, 4036, 4035,
	4034, 4033, 4031, 4030, 252, 4029, 103, 4028, 4024, 4023,
	4020, 4019, 251, 4015, 4014, 4013, 4011, 262, 4010, 4009,
	4008, 4007, 4006, 4005, 4004, 4003, 4002, 4000, 3996, 83,
	186, 3995, 3994, 1135, 3992, 3991, 3990, 3989, 3988, 3987,
	3986, 3985, 3984, 3983, 229, 3981, 250, 3978, 3977, 3975,
	3973, 3972, 3971, 3970, 3969, 3967, 3966, 3965, 3964, 3960,
	3959, 3958, 3955, 3954, 3951, 3950, 3948, 3947, 3946, 3945,
	3944, 3942, 3938, 3937, 3936, 3935, 3934, 3933, 3932, 3929,
	3928, 3927, 3925, 225, 257, 166, 3923, 3921, 249, 248,
	3920, 3919, 3918, 3917, 3916, 112, 4, 41, 3913, 3911,
	78, 77, 71, 94, 93, 91, 3910, 101, 3909, 113,
	55, 3905, 14, 12, 150, 232, 10016, 219, 3897, 3894,
	3893, 218, 180, 3892, 214, 3891, 3887, 3885, 3884, 60,
	45, 161, 159, 146, 147, 814, 3883, 143, 92, 76,
	53, 29, 11, 59, 243, 17, 3881, 239, 9, 124,
	1, 26, 3880, 3879, 3878, 3877, 2877, 118, 3876, 246,
	221, 155, 3875, 3872, 3871, 648, 3870, 3869, 50, 3867,
	188, 75, 116, 24, 109, 3866, 138, 31, 3862, 151,
	51, 3861, 142, 89, 79, 7427, 8847, 3854, 108, 57,
	152, 2745, 163, 149, 184, 226, 156, 144, 183, 202,
	196, 160, 167, 3853, 230, 3846, 3283, 68, 171, 3841,
	3838, 3837, 67, 182, 96, 3835, 3833, 69, 10, 2,
	18, 189, 28, 110, 40, 21, 3832, 23, 3828, 3827,
	3826, 3825, 3823, 39, 148, 3822, 259, 3818, 66, 44,
	107, 3814, 84, 199, 3813, 220, 115, 3811, 3810, 234,
	190, 170, 3808, 43, 208, 3803, 3802, 3800, 3797, 3796,
	120, 5, 117, 3794, 3793, 127, 3792, 46, 217, 178,
	3791, 65, 3790, 3789, 154, 95, 121, 256, 128, 206,
	111, 211, 172, 212, 3787, 3784, 3781, 176, 3780, 3779,
	198, 139, 3774, 3773, 187, 263, 82, 38, 85, 213,
	70, 177, 158, 3771, 179, 3769, 3763, 260, 165, 204,
	3, 8, 87, 122, 3762, 6, 210, 141, 215, 105,
	3761, 4215, 2212, 2304, 3760, 3759, 134, 106, 72, 119,
	140, 244, 62, 3758, 3757, 3612, 3756, 3755, 3752, 3750,
	173, 3746, 3745, 3744, 130, 133, 193, 3743, 88, 63,
	42, 20, 114, 238, 258, 102, 207, 153, 231, 3742,
	3740, 3738, 175, 3735, 100, 126, 3734, 191, 236, 56,
	3733, 86, 3732, 136, 2180, 58, 137, 3730, 228, 3727,
	3724, 3723, 3721, 3709, 3706, 3701, 282, 216, 3699, 3696,
	3695, 33, 174, 3693, 241, 135, 169, 99, 64, 3692,
	81, 2619, 3691, 203, 162, 49, 240, 104, 245, 3690,
	4779, 52, 3689, 0, 11606, 5857, 9061, 10635, 3688, 4798,
	3686, 3685, 3682, 192, 129, 3681, 3680, 3678, 97, 3677,
	73, 3676, 3675, 61, 3674, 19, 15, 16, 27, 25,
	581, 181, 3671, 3670, 47, 123, 131, 3668, 255, 209,
	3666, 3664, 3663, 3662, 80, 3661, 34, 3659, 35, 3657,
	3654, 37, 7, 36, 3653, 3652, 233, 3651, 200, 242,
	3650, 145, 3649, 3269, 125, 3648, 3647, 235, 90, 3646,
	277, 3642, 3233, 3638, 3636, 22, 3634, 3633, 224, 164,
	197, 3631, 3629, 157, 3628, 3627, 3626, 271, 3625, 3624,
	30, 3623, 13, 3622, 3621, 195, 3068, 3620, 3619, 32,
	3617, 168,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 46, 46,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 34,
	29, 30, 31, 32, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 16, 16, 35, 35, 17,
	17, 37, 37, 18, 18, 38, 38, 567, 567, 21,
	40, 22, 41, 15, 568, 568, 568, 568, 33, 23,
	42, 26, 26, 26, 26, 26, 188, 188, 188, 188,
	20, 20, 36, 36, 222, 222, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 566, 566, 224, 224, 223, 218, 218, 569, 569,
	225, 225, 225, 227, 227, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 465, 465, 465, 498, 498, 497,
	497, 497, 496, 496, 582, 582, 583, 583, 583, 583,
	583, 122, 122, 363, 363, 363, 48, 48, 48, 48,
	48, 561, 561, 190, 190, 190, 192, 192, 191, 191,
	191, 191, 70, 70, 574, 574, 575, 575, 573, 576,
	576, 576, 189, 189, 189, 118, 118, 118, 118, 118,
	119, 119, 120, 120, 193, 193, 193, 195, 195, 194,
	194, 194, 194, 194, 194, 194, 194, 199, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 98, 98, 500,
	500, 501, 501, 184, 184, 185, 185, 185, 185, 186,
	186, 187, 187, 187, 62, 196, 196, 198, 198, 197,
	197, 50, 50, 50, 50, 50, 50, 50, 51, 51,
	51, 51, 51, 52, 52, 52, 52, 52, 52, 53,
	53, 53, 53, 53, 53, 60, 60, 60, 60, 175,
	175, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 67, 67, 67, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 585, 585, 586, 586, 587, 587,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 76, 76, 325,
	325, 295, 295, 77, 77, 77, 78, 78, 79, 79,
	64, 64, 559, 559, 340, 340, 456, 456, 81, 81,
	362, 362, 82, 82, 82, 82, 82, 82, 83, 83,
	83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 91,
	91, 91, 91, 91, 92, 92, 92, 89, 89, 89,
	86, 86, 86, 85, 85, 85, 90, 90, 90, 558,
	284, 284, 88, 88, 88, 87, 87, 87, 341, 341,
	93, 93, 93, 93, 296, 94, 94, 94, 94, 94,
	94, 94, 94, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 458, 458, 95, 95,
	95, 423, 423, 99, 99, 99, 378, 378, 100, 100,
	100, 100, 100, 101, 101, 101, 101, 101, 101, 121,
	121, 121, 121, 121, 121, 563, 563, 333, 333, 249,
	249, 249, 249, 111, 111, 111, 111, 112, 112, 112,
	113, 113, 180, 180, 128, 128, 128, 128, 128, 127,
	127, 127, 127, 127, 127, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 58, 58, 59, 59, 59, 59,
	59, 130, 130, 579, 579, 132, 129, 129, 129, 131,
	131, 131, 131, 133, 134, 134, 134, 134, 134, 134,
	134, 134, 135, 135, 490, 490, 349, 349, 488, 488,
	510, 510, 489, 489, 300, 300, 300, 300, 300, 301,
	301, 301, 499, 499, 499, 499, 499, 499, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 181, 181, 182, 183, 183,
	183, 183, 183, 159, 159, 159, 174, 174, 174, 174,
	174, 174, 174, 162, 162, 162, 146, 146, 137, 137,
	137, 137, 137, 137, 137, 141, 141, 141, 141, 141,
	141, 141, 141, 138, 138, 148, 148, 148, 148, 148,
	142, 142, 143, 143, 143, 143, 169, 169, 145, 145,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 139,
	139, 139, 139, 150, 150, 150, 150, 385, 385, 385,
	173, 173, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 172, 172, 172, 172, 172, 172, 577,
	577, 578, 578, 166, 166, 166, 166, 166, 166, 437,
	437, 160, 160, 160, 160, 165, 165, 165, 165, 168,
	168, 168, 168, 368, 368, 157, 157, 157, 158, 158,
	158, 163, 163, 164, 161, 161, 167, 167, 167, 167,
	140, 140, 140, 589, 589, 589, 170, 170, 156, 156,
	171, 171, 171, 171, 171, 171, 171, 171, 152, 152,
	152, 151, 151, 151, 151, 154, 154, 155, 155, 155,
	155, 155, 153, 144, 560, 560, 556, 556, 556, 556,
	556, 556, 556, 556, 557, 557, 557, 557, 562, 562,
	104, 104, 104, 104, 104, 114, 114, 114, 114, 114,
	105, 105, 105, 105, 105, 107, 107, 106, 106, 106,
	106, 71, 71, 71, 71, 71, 14, 14, 14, 72,
	72, 240, 240, 202, 202, 202, 314, 314, 203, 203,
	308, 308, 308, 308, 200, 200, 201, 201, 73, 73,
	590, 590, 590, 570, 570, 570, 571, 571, 571, 571,
	571, 571, 302, 302, 303, 303, 403, 403, 403, 403,
	403, 306, 306, 306, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 309, 309, 226, 226, 226, 312, 313,
	313, 310, 310, 311, 311, 311, 316, 316, 315, 318,
	318, 317, 402, 519, 519, 521, 521, 521, 521, 521,
	521, 521, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 386, 386, 591, 591, 517, 517, 517,
	518, 513, 513, 514, 514, 514, 514, 514, 304, 304,
	305, 305, 305, 305, 515, 516, 331, 331, 441, 520,
	520, 522, 522, 524, 592, 592, 592, 592, 592, 592,
	593, 593, 593, 401, 401, 400, 400, 323, 323, 525,
	525, 525, 525, 526, 526, 526, 526, 526, 529, 528,
	527, 527, 527, 527, 527, 75, 75, 75, 365, 365,
	364, 364, 366, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 177, 177, 252,
	252, 69, 69, 69, 12, 12, 12, 572, 572, 572,
	74, 74, 74, 74, 74, 74, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 565, 565, 564, 564,
	253, 253, 595, 595, 80, 80, 80, 80, 80, 80,
	80, 80, 459, 459, 460, 460, 68, 68, 68, 68,
	68, 387, 387, 384, 384, 383, 383, 330, 330, 439,
	439, 439, 440, 257, 257, 258, 258, 219, 219, 219,
	28, 27, 19, 19, 24, 24, 25, 25, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 44, 44, 44, 44, 47,
	47, 43, 43, 43, 43, 45, 45, 39, 39, 580,
	580, 581, 581, 110, 110, 115, 115, 115, 115, 115,
	116, 116, 116, 116, 117, 117, 117, 117, 126, 126,
	176, 176, 176, 176, 176, 176, 176, 49, 49, 49,
	49, 61, 61, 61, 61, 124, 597, 597, 597, 125,
	125, 125, 596, 596, 250, 250, 397, 397, 398, 398,
	598, 598, 399, 399, 399, 399, 399, 243, 242, 244,
	244, 245, 245, 66, 66, 66, 235, 235, 234, 232,
	232, 502, 502, 237, 237, 238, 238, 228, 228, 229,
	229, 230, 230, 231, 231, 241, 241, 599, 599, 102,
	102, 102, 179, 179, 294, 294, 294, 394, 394, 394,
	324, 324, 264, 264, 396, 396, 396, 396, 361, 361,
	361, 178, 178, 338, 338, 351, 351, 352, 352, 453,
	453, 353, 108, 108, 109, 109, 123, 123, 206, 206,
	204, 204, 204, 204, 204, 204, 204, 204, 211, 211,
	212, 212, 213, 213, 214, 215, 215, 215, 215, 342,
	342, 216, 216, 216, 205, 205, 205, 207, 207, 207,
	207, 207, 207, 207, 210, 210, 210, 210, 217, 217,
	217, 209, 209, 536, 536, 536, 538, 538, 540, 540,
	539, 539, 535, 535, 537, 537, 594, 594, 367, 367,
	367, 321, 322, 319, 319, 320, 320, 328, 328, 326,
	327, 327, 329, 329, 438, 438, 438, 220, 220, 220,
	358, 358, 358, 358, 359, 359, 390, 390, 388, 388,
	388, 388, 389, 389, 391, 391, 391, 392, 392, 393,
	393, 355, 355, 356, 356, 357, 357, 357, 357, 419,
	419, 208, 208, 208, 335, 335, 335, 336, 336, 409,
	409, 409, 409, 409, 409, 410, 410, 408, 408, 408,
	408, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	443, 444, 444, 337, 337, 445, 395, 395, 554, 554,
	554, 555, 555, 436, 436, 446, 446, 446, 446, 446,
	446, 434, 434, 435, 435, 454, 455, 455, 371, 371,
	371, 371, 369, 369, 372, 372, 372, 372, 372, 370,
	370, 447, 447, 447, 447, 360, 360, 448, 448, 448,
	448, 449, 450, 450, 451, 451, 404, 405, 405, 461,
	461, 461, 461, 463, 334, 334, 334, 334, 334, 512,
	511, 511, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 478, 478, 478, 478, 478, 478, 478,
	464, 464, 464, 464, 464, 468, 468, 468, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 469,
	469, 474, 474, 475, 475, 475, 470, 471, 476, 476,
	476, 476, 600, 600, 480, 480, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 466, 466, 466, 473, 473,
	473, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 379, 379, 381, 381, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 413, 413, 413, 413, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 530, 530, 530, 530, 530, 530,
	530, 530, 415, 415, 533, 533, 534, 534, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 541, 541, 542,
	542, 544, 544, 545, 545, 546, 547, 547, 547, 548,
	549, 549, 543, 543, 550, 550, 550, 550, 551, 551,
	552, 552, 552, 552, 552, 553, 553, 553, 553, 553,
	425, 425, 426, 426, 432, 432, 432, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 254, 254, 254, 254, 254, 347, 347,
	345, 345, 345, 348, 348, 346, 346, 344, 344, 343,
	343, 422, 422, 420, 420, 424, 424, 373, 373, 479,
	479, 479, 479, 479, 479, 479, 479, 374, 374, 374,
	382, 375, 375, 376, 376, 376, 376, 376, 416, 417,
	377, 377, 377, 418, 418, 427, 431, 431, 430, 429,
	429, 428, 428, 406, 406, 407, 407, 354, 354, 601,
	601, 350, 350, 452, 452, 452, 452, 298, 298, 339,
	339, 297, 297, 289, 289, 290, 290, 290, 290, 332,
	332, 433, 433, 481, 481, 482, 482, 483, 483, 484,
	484, 485, 486, 487, 421, 421, 274, 273, 261, 262,
	272, 271, 270, 260, 263, 267, 268, 269, 265, 266,
	280, 279, 278, 233, 236, 285, 286, 286, 288, 288,
	287, 287, 276, 277, 457, 259, 291, 291, 292, 292,
	292, 293, 293, 293, 293, 255, 255, 256, 256, 281,
	281, 282, 283, 283, 275, 275, 275, 246, 246, 246,
	247, 247, 248, 248, 495, 495, 492, 492, 492, 493,
	493, 493, 494, 494, 494, 494, 491, 491, 491, 491,
	491, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 504, 504, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 506, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 509, 509,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 6,
	6, 6, 4, 4, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 6, 3, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 2, 6,
	4, 7, 7, 7, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 4, 3, 3, 5, 3, 4,
	3, 5, 3, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 4, 3, 1, 1, 1, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 3, 4, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 3, 2, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 13,
	16, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 8,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 4, 4, 5, 5, 3, 3, 4,
	4, 3, 6, 7, 4, 6, 7, 8, 9, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 12, 15, 3, 1, 0, 4, 3,
	0, 1, 1, 4, 4, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 576, -96, -93, -62, -60, -99, -100,
	-82, -101, -95, -121, -126, -108, -109, -110, -122, -128,
	-176, -181, -182, -183, -3, -48, -50, -63, -81, -83,
	-94, -103, -102, -104, -111, -118, -114, -98, -54, -123,
	-127, -136, -177, -178, -179, 33, 32, 100, 80, 151,
	126, 134, 197, 375, 416, 427, 389, 139, 408, 394,
	-131, -132, 444, -49, -61, -125, -124, 73, 127, 403,
	-4, -12, 30, 46, -51, -52, -53, 62, -69, -65,
	-76, -70, -67, -584, 102, -537, -84, -87, -117, -588,
	158, 215, -105, -106, 358, -112, -113, 410, -115, -116,
	412, 159, -56, -55, 153, -204, -206, -129, -130, -180,
	-137, -138, -139, -140, -141, -142, -143, -169, -144, -145,
	-146, -147, -148, -149, -153, -172, -150, -151, -152, -155,
	-154, -156, -161, -157, -158, -159, -160, -162, -163, -165,
	-166, -167, -168, -170, -171, 449, -164, 508, 49, 463,
	82, 143, 420, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -64, -66, -68, -71, -72, -73, -80,
	-74, -75, -536, -85, -86, -89, -91, -92, -88, -90,
	409, -207, -205, 573, 523, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -35, -40, -41, -37, -38,
	-36, -39, -42, -43, -44, -45, -46, -47, -27, -33,
	-34, -28, -29, -30, -31, -32, -15, -26, 542, 551,
	-210, -208, -209, -217, 436, 531, 482, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, -296,
	2, -276, -281, -282, -283, -275, -246, -506, -509, 4,
	-503, -507, 165, 224, 322, 21, 23, 22, 24, 25,
	26, 27, 28, 30, 31, 42, 43, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 116, 117, 118,
	119, 121, 126, 127, 130, 125, 129, 132, 133, 134,
	137, 138, 139, 141, 142, 144, 145, 146, 148, 149,
	151, 152, 153, 156, 154, 490, 155, 157, 158, 159,
	160, 163, 171, 172, 173, 178, 180, 184, 185, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 198, 202,
	204, 205, 206, 207, 208, 214, 215, 217, 218, 219,
	220, 225, 226, 227, 231, 228, 237, 238, 242, 243,
	244, 246, 250, 251, 252, 253, 254, 255, 257, 259,
	258, 261, 264, 265, 268, 272, 273, 277, 278, 274,
	279, 280, 282, 283, 286, 284, 287, 288, 285, 289,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 290, 305, 303, 307, 308, 309, 320, 318,
	313, 314, 310, 315, 311, 312, 316, 317, 324, 325,
	328, 212, 330, 331, 334, 352, 338, 339, 340, 343,
	344, 347, 350, 351, 353, 354, 355, 356, 357, 358,
	359, 360, 362, 363, 365, 366, 367, 369, 370, 371,
	373, 375, 376, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 389, 391, 390, 392, 394, 396, 397, 398,
	403, 408, 405, 406, 407, 409, 410, 411, 412, 414,
	415, 416, 418, 419, 420, 421, 423, 425, 426, 429,
	430, 446, 447, 465, 427, 428, 431, 432, 433, 434,
	435, 439, 437, 438, 440, 441, 442, 444, 445, 448,
	449, 451, 452, 453, 454, 455, 456, 459, 461, 462,
	463, 481, 464, 466, 469, 470, 471, 472, 467, 480,
	474, 475, 477, 478, 483, 484, 485, 486, 487, 488,
	489, 491, 493, 501, 502, 503, 505, 508, 509, 510,
	511, 499, 513, 514, 517, 518, 519, 522, 520, 521,
	523, 525, 528, 529, 530, 536, 535, 537, 543, 544,
	546, 547, 548, 37, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 122, 123, 150, 161, 162, 174, 186,
	187, 199, 201, 209, 210, 211, 232, 233, 235, 240,
	262, 327, 329, 345, 349, 364, 368, 372, 374, 388,
	422, 457, 468, 473, 494, 495, 496, 497, 504, 506,
	531, 532, 533, 538, 545, -296, 2, -276, 336, -269,
	2, -246, -246, 375, 29, 2, 29, 363, 438, 485,
	487, 2, -563, -333, 2, 29, -249, -246, 102, 197,
	436, -269, 2, -563, -333, 25, 2, -246, 2, 350,
	22, 28, 66, 77, 98, 137, 160, 181, 184, -587,
	352, 382, 425, 440, 480, 491, 505, 2, 535, 283,
	437, 482, 224, 118, 510, 431, -572, 429, 430, 350,
	380, 418, 200, 524, -250, 2, 427, -246, 283, 2,
	576, 94, 273, 74, 422, 441, -134, 502, -133, 494,
	431, -135, -490, 2, 305, -246, 576, 576, 576, 29,
	-259, -246, 482, 224, 431, 118, 478, 576, 2, 482,
	355, 535, 437, 118, 385, 224, 510, 431, -572, 283,
	-561, 2, -556, 4, -507, -503, -290, -289, 482, 488,
	118, -283, -275, 566, -282, 576, 576, 576, 2, 243,
	244, 384, 383, 441, 442, 576, 576, 576, 576, 429,
	2, 160, 22, 28, 66, 93, 98, 124, 181, 184,
	341, -585, 352, 382, 440, 480, 484, 491, 505, -571,
	464, 68, 431, -570, -572, 283, 510, 137, -383, 118,
	273, 195, 518, 487, 485, 516, 130, 231, 521, 520,
	576, 576, -96, 2, 573, 33, 32, 139, 444, -199,
	482, 236, 2, -246, 576, 576, 2, 243, 244, 429,
	430, 576, 576, 182, -556, 2, 576, 576, 2, 243,
	244, 429, 430, 236, 2, 68, 433, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	2, -174, 441, 464, 206, 47, 46, 74, 29, 381,
	79, 356, 119, 145, 511, 198, 224, 225, 251, 93,
	94, -385, 45, 244, 243, 430, -577, 429, -437, 483,
	432, 438, 477, 255, 427, 502, 102, 525, 419, 548,
	385, 386, 475, 398, 274, 154, 4, 118, 305, 443,
	494, 273, 426, 359, 84, -594, 2, 482, -596, 2,
	502, 502, 2, -596, 2, -596, 2, -596, 2, -597,
	502, 545, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, -205,
	-207, -206, 576, 576, 576, 576, 576, 576, 576, -174,
	441, 2, 74, 29, -326, -328, 515, 234, 147, 342,
	-204, -206, 2, -536, -488, 2, -411, -510, -413, 564,
	565, 557, 479, 67, 321, 549, -425, 124, 516, 336,
	-509, -414, -427, 150, 422, -348, 8, 9, 5, 6,
	7, -255, -415, -421, 507, 164, 326, -293, 577, 10,
	573, -533, -206, -426, 38, 201, 65, -492, -292, -256,
	-464, 235, -291, -275, -530, -531, 4, -503, -504, -493,
	-467, -475, -471, -472, -478, -246, -506, 77, 110, 111,
	109, 114, 113, 276, 275, 115, 112, 443, 524, 66,
	37, 209, 210, 240, 327, 211, 75, -532, 138, -505,
	232, 233, 457, 51, 388, 174, 123, 122, 329, 56,
	54, 532, -476, 120, 494, 495, 496, 497, 186, 187,
	58, 161, 162, 349, 372, 473, 504, 506, 199, 262,
	44, 106, 183, 230, 213, 239, 241, 245, 263, 266,
	306, 319, 323, 346, 348, 417, 450, -600, 533, 468,
	69, 70, -538, 390, -539, -269, -538, 576, 576, 578,
	576, -319, -321, -322, 2, 29, 135, 573, 2, -442,
	2, -443, -447, -206, 256, -446, 573, -444, 571, -276,
	337, -534, 423, -530, -531, -255, -275, -292, 4, -503,
	-505, 575, -323, 573, 118, 482, 78, 224, -378, 573,
	-246, 29, 336, 498, 578, -320, 379, -423, 573, 336,
	182, 339, 60, 287, 2, 2, 2, 2, 2, 209,
	-246, 482, 117, 2, 254, 2, 2, 2, 2, 2,
	2, 2, -341, 209, 2, -276, 535, -341, 209, 2,
	-341, 209, 2, -384, 2, 87, -260, 209, 2, -246,
	-284, 209, 2, -279, -281, -288, 209, 2, -286, -246,
	-501, 209, 2, -500, -495, 10, -494, 5, 4, -503,
	-507, -504, -506, 77, -411, 2, -123, 2, 60, -246,
	535, 2, 2, 446, 2, 573, -134, 71, 502, 44,
	441, -398, 2, -399, -242, -243, -244, -454, -245, 242,
	378, 387, 552, 128, 321, 548, -488, -579, 182, 556,
	498, -488, -349, 575, 2, 2, 2, 2, 2, 2,
	-447, 209, -276, 2, -273, -491, 4, -503, -507, -504,
	-508, 29, 32, 33, 34, 36, 38, 39, 40, 41,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 109,
	110, 112, 111, 113, 114, 115, 124, 128, 131, 135,
	136, 140, 143, 147, 164, 166, 179, 181, 182, 197,
	200, 203, 216, 229, 234, 236, 256, 260, 267, 275,
	276, 321, 326, 332, 336, 337, 341, 342, 361, 377,
	393, 413, 436, 443, 460, 476, 482, 492, 498, 500,
	507, 515, 516, 524, 526, 534, 539, 540, 541, 542,
	-509, 2, -447, 209, 2, -278, 209, -447, -281, 2,
	-260, 2, -272, -491, 2, -297, 209, -276, -277, -281,
	-279, 2, -286, 2, -500, 209, 2, 535, 236, 498,
	578, -339, -289, -290, -487, 8, -332, -246, 575, -411,
	2, -123, -107, 2, 179, -411, 209, 2, -123, 209,
	2, -411, 209, 2, -123, 209, 2, -574, 2, -500,
	209, -246, 2, 287, 2, 2, 505, 2, 98, 482,
	117, 2, 407, -586, 425, 509, 2, 2, 2, 2,
	2, 2, 2, 482, -265, 2, -246, 179, -286, 209,
	-287, 2, 437, -595, 390, -500, 209, 2, 535, -279,
	209, 2, -279, 224, 238, -260, 209, 2, 487, 485,
	487, 485, 182, 2, 236, 2, 236, 2, -448, 2,
	-449, -443, -450, 571, 337, -458, 2, -457, -494, 531,
	-96, 573, -96, 573, 441, 573, -500, -276, -276, -411,
	2, -123, -107, 2, -411, 2, -123, 2, -120, -500,
	-119, 573, 182, -411, 2, -123, -107, 2, -411, 2,
	-123, 2, -199, 179, 2, 118, 482, -174, 2, 179,
	526, 2, 8, 2, 216, -500, 432, 386, 171, 2,
	446, 2, 447, 74, -385, 548, 74, 182, 2, 182,
	2, -368, 2, 542, 182, 2, 2, -560, 2, 336,
	182, 2, 182, 2, 182, 2, 182, 2, 182, 2,
	-173, 442, 503, 481, 383, 244, 2, -123, 539, -107,
	-411, 539, 2, -578, 179, 430, -411, 2, 501, 253,
	155, 182, -368, 2, 182, 2, 182, 2, 5, 2,
	384, 465, 2, 242, 378, 465, 2, -276, -589, 2,
	482, 535, 437, 2, 2, 88, 89, 182, 2, 182,
	2, 196, 182, 2, 182, 548, 2, -360, -447, -397,
	-398, -397, 498, -326, -328, -174, 446, 2, -211, -358,
	-213, 179, -388, -389, -214, 267, 166, 332, -215, -367,
	29, 135, -367, -367, 60, 574, 574, 11, 12, 76,
	42, 564, 565, 566, 567, 177, 568, 569, 562, 563,
	561, 554, 555, 559, 248, 249, 95, 558, 556, 86,
	281, 424, 167, 168, 169, 170, 404, 222, 35, 223,
	14, 15, 16, 34, 341, 266, 549, 213, 450, 557,
	17, 18, 19, 239, 241, 323, 50, 216, -254, -299,
	-411, -411, -411, -411, -411, -411, -411, 348, 573, -354,
	-406, 571, -206, 573, 573, 573, -487, -206, -411, -425,
	574, -346, 573, -206, -425, -420, 573, 422, 571, 573,
	-428, -411, 5, 5, 5, 573, 575, -541, 543, 179,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 374, -469, 573, -468, 573,
	-468, -468, 536, -466, 573, 551, 544, 573, -466, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 536, 578, -538, -323, 573, -350, -452, -411,
	566, -350, -350, 336, -343, -411, 106, -371, 245, 306,
	183, 263, 417, 230, -408, 577, -408, -436, 551, -206,
	-444, -275, -206, -446, 573, -442, -436, -97, -487, -81,
	-94, -102, -123, -136, -178, -179, 566, -276, 573, 182,
	573, 575, -491, 182, -332, -260, -276, -291, -292, -297,
	134, -343, -556, 510, 431, -332, -249, 39, -422, -461,
	-462, -512, 577, -511, -464, -474, -470, -473, 364, 368,
	-493, 54, 532, -476, 235, 4, -503, -505, 232, 233,
	457, 51, 388, 174, 123, 122, 329, 56, 494, 495,
	496, 497, 186, 187, 58, 533, 468, 69, 70, -556,
	510, 431, -332, 179, -498, 2, -497, -496, 115, 443,
	-494, 5, 2, 150, 2, 2, 2, -246, -225, 578,
	64, 411, 150, -341, 209, -225, 150, -225, 150, -298,
	209, -297, -225, 150, -225, 578, 150, -225, 578, 150,
	575, 578, 150, -498, 2, -384, -490, -343, 39, -398,
	2, 124, -496, -598, 578, 265, -301, 280, 320, 205,
	337, 546, 330, 128, -499, 5, 4, -421, -433, 124,
	273, 235, -481, -483, 8, -482, 9, -484, 564, 565,
	-489, -488, 108, 575, -491, -222, 405, 444, -221, 24,
	30, 139, 226, 309, 529, 156, -311, 227, 351, 355,
	150, 461, 519, -567, -568, 428, 489, 490, 90, 330,
	444, 405, 150, -364, -366, 39, 116, 309, 350, 61,
	219, 285, 286, 463, 538, 150, 444, 405, 351, 24,
	139, -237, -234, -568, 99, 405, 474, 377, -568, -224,
	461, 519, -567, -568, 428, 405, -223, -311, 150, 577,
	24, 405, 444, 351, -582, -583, 139, 30, 405, 351,
	-564, -535, 542, 150, -447, 209, -575, -119, 257, 5,
	10, -500, -119, -339, 578, 578, -491, 566, 430, 429,
	150, 150, 150, 150, 179, 321, 2, 2, 2, 2,
	2, 184, -570, -587, 2, 2, -276, 209, -325, 336,
	-559, -340, 482, -276, 321, 44, -278, 209, 2, -281,
	535, -564, 321, -280, 209, -276, 39, 573, 321, 2,
	-384, 2, 224, -535, 321, -448, -294, -276, -443, -294,
	444, -269, 39, -408, -276, 574, 578, -458, -458, -500,
	-187, 542, 182, 102, 573, 573, -199, -455, 578, -454,
	216, -501, -120, -500, -500, -559, -260, 2, -276, 2,
	482, 246, -500, -187, 216, -500, -500, -500, -490, 29,
	447, 2, -173, 442, 503, 89, 447, 2, -276, 482,
	118, 224, 80, -246, -562, 179, -557, 418, 431, 510,
	-556, -276, 118, -276, 118, -276, 118, -276, -276, 2,
	2, 2, 2, 2, 85, 85, 2, 46, -578, 179,
	2, 501, 2, 501, 2, -246, -246, -246, 464, 265,
	-276, 179, 482, 224, 482, 224, 118, 182, 74, 118,
	29, 482, -225, 578, -250, -211, -358, -490, -359, -358,
	-212, -211, -214, 179, 387, 520, 309, 448, 250, -389,
	-388, 29, -411, -393, 173, 308, -411, -391, -413, 564,
	565, -482, -484, -342, 330, -205, -205, -205, -329, -438,
	-411, 377, 224, -463, -461, -461, -274, -491, 494, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, 266, 213, 450, 50, 216, -411,
	498, -411, -411, -411, -411, 303, 321, 326, 507, 164,
	517, 135, 330, -601, 476, 41, -418, -206, -347, 573,
	-432, 36, 460, 29, -425, 573, 2, -406, -411, -407,
	-344, -343, -343, 574, 534, 29, 135, 566, 2, 574,
	578, 39, 574, -411, -344, -424, -420, -343, -431, -430,
	539, -379, -380, 547, 290, 121, 207, 288, -381, 435,
	-485, 8, -491, 566, -542, 172, 200, 573, 574, 2,
	574, 2, 574, -411, 2, 574, -411, 2, 574, -411,
	2, 574, -411, 2, 574, 2, -411, -411, -411, -411,
	-411, -411, -411, -343, 8, -485, -485, 494, 494, -485,
	-485, -485, -477, 364, 365, 366, 367, 268, 269, 270,
	271, 368, 369, 370, 371, 295, 296, 297, 298, 291,
	292, 293, 294, 299, 300, 301, 302, 191, 192, 193,
	194, 187, 188, 189, 190, -477, -373, 2, -479, -343,
	4, 547, 290, 121, 207, 288, 435, 5, -373, 2,
	-374, 2, -411, -343, -375, -412, -413, 564, 565, 557,
	-425, -376, 2, -411, -344, -411, 57, 260, 500, -377,
	-411, 182, -343, -343, 2, -343, 2, -539, 39, -343,
	-335, 578, 182, 39, 4, -335, -335, 573, 574, 578,
	-372, 204, 284, 279, 238, -372, -442, -371, 245, -369,
	346, -369, -369, -436, -261, 571, 579, -491, -436, -435,
	-434, 39, -269, 343, -436, -436, 575, 574, -435, 572,
	-554, 573, 576, 576, 576, 576, 576, -276, 573, -343,
	-491, 575, 466, 574, 239, 239, 239, 239, 423, 574,
	498, -558, -284, -288, 542, -96, 338, 574, 578, -334,
	38, 571, 575, -485, 2, 2, -480, 536, 573, 573,
	-380, 573, 182, -558, -288, -333, 578, 498, -246, 2,
	-276, -341, -225, 150, -341, -341, -225, 578, 150, -260,
	-279, -284, -286, -288, -246, -500, -501, -225, -280, -579,
	574, 502, -399, -300, 387, 459, 406, 439, 478, 8,
	9, 8, 9, 578, -491, 578, -580, 93, 498, 78,
	431, -239, 274, 397, 309, 482, 422, -402, 209, 78,
	-513, -263, 93, -514, -246, 72, 516, 377, 181, 148,
	-580, 93, 377, -580, 93, 2, 226, 93, 444, 464,
	498, 60, -447, 42, 42, 29, -123, 261, 182, 548,
	482, 224, 431, 498, -447, -366, -461, 116, 285, 286,
	60, -486, -481, 564, 565, -486, 60, -486, -486, -486,
	542, -278, -447, 431, 498, 498, 396, 396, 498, 498,
	-599, 556, 396, 578, 42, 42, 29, -123, 261, 182,
	498, -297, -261, 530, 43, 530, 498, 43, 431, 498,
	578, 43, 43, 498, 498, -565, -251, 105, 315, 278,
	316, 97, 312, 96, 311, 103, 313, 104, 314, 537,
	324, 63, 310, 289, 317, -252, -253, 357, 528, -500,
	444, 405, 150, 216, -455, 216, -455, -289, -246, 575,
	-123, -411, -411, -123, -411, -123, 46, 150, 2, -595,
	254, 573, -304, 321, 182, -332, -456, 236, 578, -340,
	150, -497, -365, -364, 321, -280, 209, 2, 150, -323,
	321, 144, 573, 385, 2, 150, -262, 209, -247, -246,
	-384, -228, 486, 150, -362, 526, -394, -123, 573, 124,
	39, -394, -351, -352, -453, -353, -263, 573, -269, -408,
	-96, -457, 574, 574, 574, -186, 340, -185, -246, 5,
	-199, 526, -303, -403, -402, -517, -518, -513, 266, 224,
	516, 238, 165, -324, -264, -263, 117, -193, 542, -119,
	-120, 574, -455, 216, -187, -187, -455, -455, -276, 179,
	-500, -187, -187, -187, 2, 2, 2, -368, -276, -260,
	-297, -276, 575, -332, -332, -288, -284, -368, -260, -368,
	-260, -368, -260, -123, -411, 2, 441, 179, 179, 575,
	-368, 385, 118, 482, 355, 224, -276, -297, -276, -297,
	-260, 118, -260, 119, -276, -447, -359, -212, 337, 250,
	448, -391, -392, -413, 422, 423, -392, 422, 423, 8,
	9, 8, 9, -216, 452, 325, -341, 578, -219, 40,
	131, 250, -276, 548, 146, -411, -411, 498, -601, 476,
	-418, 146, -411, 303, 326, 507, 164, 517, 135, 330,
	182, 573, -412, -412, 574, -345, -411, -411, 572, 581,
	574, -328, 578, -326, -411, -343, -343, 574, 575, -343,
	-332, 572, 572, 578, 574, -429, -430, 140, -411, 498,
	498, 498, 498, 573, 574, 575, -547, 347, 573, 573,
	-411, 574, 574, 574, 574, 39, 578, 578, 578, 574,
	578, 578, 578, 574, 574, 574, 578, 574, 548, 548,
	574, 574, 574, 574, 578, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 574,
	578, 574, 182, 574, 574, -382, 361, 574, 11, 12,
	564, 565, 566, 567, 177, 568, 569, 562, 563, 561,
	554, 555, 556, 86, 281, 424, 14, 15, 16, 239,
	216, -412, -412, -412, 574, -416, -417, 182, 179, 39,
	-377, -377, -377, 574, 182, -343, 574, 574, 573, -540,
	283, 321, 574, -405, -404, 540, -452, -336, 2, -442,
	-271, -491, -405, -405, -343, -411, 245, 245, -370, 526,
	336, -372, -442, -435, -487, -410, -409, 180, 40, 131,
	318, 212, -435, -269, -323, -435, -435, -491, -436, -436,
	-434, 574, -555, -487, 574, -337, -445, -534, -328, 575,
	-491, -196, -535, -175, 5, 326, -175, -175, -175, -332,
	498, 498, 25, 362, -461, 571, 572, 8, -491, 573,
	-485, -485, -485, -332, 182, 182, 182, -497, -497, 2,
	-225, -341, -225, -225, -297, -298, -225, -225, -225, -363,
	542, -488, -398, 514, 83, 387, 494, -488, -221, 405,
	-263, -263, -276, -285, -246, 195, 397, 26, 397, 265,
	265, 321, -402, 209, -227, 321, -461, -270, -246, 573,
	-386, 544, 250, 250, 526, -263, -270, 250, 209, -263,
	209, -270, 2, -270, -566, 387, 331, -411, -497, 272,
	385, 322, -222, 405, 444, -123, -123, -123, 573, -579,
	526, 134, -276, -297, -276, -285, -280, 444, 405, 319,
	-291, -486, -486, -364, 444, 405, -285, -278, -497, -233,
	-246, -233, 431, -260, 396, 548, -599, -223, -123, -123,
	-123, 573, -261, -224, 405, 5, 209, -263, 5, -246,
	-263, -285, -497, -583, 24, -263, 209, -263, -285, -497,
	-251, -500, 326, 522, -564, 431, 498, -447, -119, -190,
	542, -119, -184, 220, 566, -561, -246, 535, -246, -302,
	-305, -303, -263, -202, -203, 544, 542, 150, -295, -276,
	571, -187, -500, -276, -286, -287, 150, -323, 321, -500,
	39, 150, 573, 2, 2, -279, 336, 321, -262, 209,
	-229, 141, -599, -260, -405, -336, -361, -396, 413, 336,
	-324, 531, -269, -361, -338, 578, 182, 556, 575, -324,
	-451, 566, -96, -96, -187, 578, 573, 556, 556, 573,
	-500, -500, 574, 578, -227, -276, -262, 224, 224, -268,
	-247, 574, 578, 575, 573, -195, 340, -194, 142, 252,
	237, 453, 454, 455, 456, 133, -455, -193, -120, 182,
	-57, 542, 482, -187, 577, -246, -368, -368, -368, 441,
	441, -246, -272, -260, -276, -273, -297, 179, 179, -260,
	520, -392, 337, 277, -438, -220, 550, -276, 577, -411,
	-411, 146, 146, -411, -412, -412, -411, 146, 182, 573,
	-411, -422, 34, 34, 574, 578, -407, -411, 574, 534,
	-328, -328, 574, 566, -491, 577, 574, -420, 143, -411,
	492, 290, 207, 288, -381, 288, -381, -381, -485, 5,
	-491, 566, -548, -266, 573, -246, 540, -327, 342, 574,
	-463, -461, -411, -411, -411, -411, -411, -485, -466, -466,
	-481, -481, -411, -416, -411, -463, -461, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, 135, 321, 330, -412,
	-417, -416, -411, -411, -461, 574, 574, 574, -343, -96,
	573, 283, -355, 200, -411, -455, 578, -355, -355, 574,
	-442, -442, 573, -411, 245, 572, 578, 580, 556, -323,
	575, -434, -435, 572, 574, 578, 574, 578, -395, 39,
	574, -491, -405, -198, -197, 132, 53, -332, -332, 339,
	5, 8, 571, 572, 575, -485, 574, 574, 574, -332,
	-332, -332, -225, -225, 117, 309, -411, 498, 498, 60,
	498, 42, 319, -233, 377, 422, 26, 397, 397, 150,
	321, 528, -519, -514, 148, -411, 573, 224, 573, 573,
	2, -218, 139, 444, -581, 2, 526, 150, -225, 150,
	-225, 546, 573, 573, 498, 431, -239, 542, -343, -411,
	-188, 124, -490, -568, 577, -568, 577, 431, 498, 431,
	498, 542, 163, 163, -233, 542, -343, 498, -465, 48,
	27, 321, -279, 498, 498, -225, 150, 510, 444, -500,
	326, -285, -280, 444, 405, -455, -192, 340, -191, 142,
	415, 133, 252, -455, -190, 182, 236, -280, 2, 574,
	574, 578, -520, 39, 334, 334, 573, -276, -77, 542,
	-454, -487, 44, -278, 39, 150, -564, -123, -280, -459,
	-460, 5, 39, -276, 150, 336, 321, -230, 259, -599,
	-495, -535, -328, -361, -350, 322, 91, 574, -405, -352,
	-336, -411, 2, 574, -185, -186, -500, -500, -500, -187,
	-199, -199, -403, -306, 573, -262, -247, 573, -199, -264,
	2, -501, 578, 573, 556, 556, 556, -193, -455, -123,
	340, -276, 566, -368, -313, -312, 355, 330, -313, 422,
	422, 337, 173, 255, -219, -261, -411, -411, 146, 34,
	34, -411, -411, -422, 574, -411, -411, -343, 572, 5,
	-411, 574, 574, 8, -411, 574, 575, -549, -246, -411,
	574, 60, 574, 574, 578, 578, 574, 574, 574, 574,
	574, 574, 574, -417, 182, 135, 330, 573, 574, 574,
	-96, -419, 203, 60, -442, -419, -419, -370, -332, -442,
	-409, -261, 571, -491, -487, -445, 573, 575, -197, 556,
	572, 2, 571, -491, 574, 117, -263, -263, 482, 422,
	319, -233, 377, 422, 396, 265, 26, 26, -402, 150,
	-521, 93, -523, 76, 165, 102, 321, 326, 516, 377,
	72, 124, 393, -591, 39, 553, 574, -330, -439, -534,
	573, -246, -330, -332, 321, 471, 124, 321, 124, 117,
	510, 79, -263, -270, -332, -332, -276, -285, 157, 574,
	578, 556, 2, 566, 566, -285, -280, -285, -278, 353,
	157, 574, -261, 5, 5, 150, -258, 76, 5, -263,
	-263, -279, 117, 431, 498, -190, 578, 573, 556, 556,
	-190, -501, -119, -323, -314, 226, -263, -518, -515, -516,
	377, -522, -524, 165, 377, -123, 2, -201, -200, -246,
	5, 573, -304, 340, 572, -497, -365, -123, -280, -323,
	574, 578, 144, -387, 526, -261, -276, 150, -231, 258,
	-599, -495, -228, -390, -388, 136, 573, 336, -123, -328,
	556, 574, 574, 117, 117, 218, 149, -330, 573, 573,
	-332, 117, 574, -194, -195, -500, -119, -500, -193, -58,
	-59, 224, 93, 360, -273, 482, 224, 573, 573, -219,
	-411, -411, -411, 574, -328, -491, 566, -543, 355, 574,
	-438, -411, -411, -412, 182, 573, -422, 574, -544, 541,
	-411, -356, -357, -411, 421, 107, 201, -544, -544, 574,
	-487, 2, -500, 571, 2, 216, 396, 265, 498, -402,
	-270, -274, -267, -246, 165, 209, 326, -386, 250, 573,
	-412, -276, 573, 2, 31, -592, 128, 229, 574, 578,
	-440, -257, -246, -411, -440, 574, 574, 326, 326, -411,
	-461, 573, -225, -225, 574, 574, -411, 498, -490, 100,
	-488, 2, -568, -260, -411, 498, 5, -225, -274, -225,
	-225, -258, 510, -285, -280, -191, -192, -500, -119, -190,
	39, -309, 228, 2, -520, 250, -267, 250, -590, 542,
	574, 578, 556, 556, -302, -202, -78, -79, 499, -454,
	-323, 39, 5, 573, 573, -246, 336, 573, -261, -241,
	92, -599, -495, -229, -361, 322, -332, 93, -390, -418,
	-187, 573, 573, -307, 81, 94, 125, 208, 185, 225,
	464, 469, 29, -307, 574, -330, -330, 574, 573, -187,
	574, 578, 29, 573, 29, 573, -276, -297, -343, -343,
	574, -328, 60, 578, 574, 574, -412, -422, 574, -545,
	-546, -266, 578, 573, 573, 445, 572, 2, -233, 377,
	-233, 377, -523, -267, 321, 526, -411, -248, 573, -411,
	39, 229, 129, 214, -401, -593, 101, 472, 217, -439,
	-219, 574, -400, 526, 393, -258, -330, 573, 573, 573,
	556, 182, 573, -465, -225, -279, 574, -573, 391, -123,
	-310, -311, 216, 573, -308, 336, 117, 309, -200, -488,
	-488, 574, 39, -79, 9, 39, -123, -459, -330, -276,
	-330, 336, -235, -234, 267, -495, -230, 574, -270, -361,
	-501, -501, -400, 574, 574, -501, -59, -332, -332, 574,
	574, -550, 385, 423, 202, -343, -329, 574, 578, 39,
	-357, 2, 2, 2, 396, 396, 150, 204, 574, -525,
	282, -246, 574, 129, 214, -309, 573, -220, -440, -309,
	204, -276, -569, 526, 574, -316, -315, -312, -318, -317,
	-312, -343, -488, 100, 353, -343, -258, -576, 183, -575,
	5, 10, -202, 353, -331, -441, -263, 82, 117, -314,
	-123, -123, 574, 574, -387, 574, -276, -232, -502, 396,
	398, -599, -231, -405, 574, 574, -401, -400, -203, 542,
	574, 574, 574, 574, -551, -552, 50, 513, 108, -411,
	-551, -551, -546, -548, 165, 542, -526, -529, -528, 336,
	451, 183, 354, 574, 471, 538, -310, -332, 542, -323,
	-411, -400, 574, 578, 531, 574, 578, 531, 574, 182,
	574, -225, -189, 542, 46, -308, -276, 574, 578, 376,
	130, 139, -309, -590, -400, 573, -401, 573, -238, -237,
	-599, -481, -241, 136, -187, -187, -309, -401, -405, -187,
	-553, 148, -552, 373, 178, 422, 373, 178, -553, -553,
	-267, 55, -528, 336, -529, 336, 520, 130, -592, 574,
	55, -525, -309, -315, 216, -317, 182, 353, 429, -575,
	31, -240, -239, 573, -441, 423, 423, 2, -310, -308,
	-401, -330, -309, -330, -236, -332, -235, 322, 520, -310,
	-309, 108, 200, 493, 309, 34, 556, -527, 309, 411,
	64, 444, -527, -405, 556, -526, 573, 573, 340, -332,
	2, -202, -309, 574, -310, 574, -232, 444, -203, -310,
	422, 344, -552, -411, 23, 326, 124, -411, -592, -343,
	-343, -186, 573, 574, -308, -310, -400, -203, -401, -238,
	-351, -405, -203, 574, 574, -186, -226, 64, 411, -240,
	-203, -401, -405, -309, -405, -405, -310, 498, 574, -405,
	-309, -310, 573, -310, -203, -343, -203, -405, 574, -405,
	-310,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 503, 504, 506, 507, 508, 510,
	511, 513, 515, 517, 518, 519, 521, 522, 524, 525,
	526, 527, 528, 530, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	594, 596, 0, 1270, 1272, 1274, 1276, 0, 737, 0,
	36, 37, 0, -2, 301, 303, 305, 0, 331, 333,
	334, 336, 338, 340, -2, 0, 438, 439, 441, 443,
	-2, 0, 920, 922, 0, 583, 585, 0, 925, 927,
	0, 0, 605, 606, 0, 1376, -2, 599, 601, 603,
	668, 670, 672, 674, 676, 678, 680, 682, 684, 685,
	687, 689, 691, 693, 695, 696, 698, 700, 702, 703,
	705, 706, 708, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 728, 730, 732, -2, 734, -2, -2, 0,
	-2, -2, -2, 1288, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 389, 390, 392, 394, 396, 398, 401,
	403, 405, 1434, 445, 447, 449, 451, 453, 455, 457,
	0, -2, 1448, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 96, 97, 98, 99, 100,
	101, 102, 103, 71, 72, 74, 75, 76, 80, 81,
	82, 83, 84, 85, 86, 87, 94, 69, 0, 0,
	1407, 1409, 1411, 1413, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 505,
	509, 512, 514, 516, 520, 523, 529, 531, 533, 490,
	491, 494, 2112, 2129, 2130, 2131, 2134, 2135, 2136, 2137,
	2138, 2139, 2571, 2652, 2653, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 492, 493, 1088, 0, 557,
	555, 2097, 558, 2377, 560, 562, 432, 433, 434, 435,
	436, 437, 0, 576, 568, 1446, 577, 579, 580, 581,
	582, 552, 550, 0, 576, 2165, 574, 1268, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 444, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	368, 1137, 1138, 1139, 1253, 1254, 2420, 1295, 0, 212,
	595, -2, -2, -2, 2536, -2, 627, -2, 634, 2540,
	2422, 639, 0, 641, -2, 644, 1271, 1273, 1275, 735,
	736, 2115, 0, 0, 0, 0, 0, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 222, -2, -2, -2, -2, 0, 0, 2465,
	2215, 2065, 2131, 2068, 2063, 302, 304, 306, 307, 0,
	0, 0, 0, 0, 0, 332, 335, 337, 339, -2,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 981, 973, 974, 1195, 0, 0, 0, -2,
	440, 442, 495, 496, 0, 1435, 1435, -2, 0, 0,
	0, 0, 276, 267, 921, 923, 924, 0, 0, 0,
	0, 584, 586, 0, 0, 249, 926, 928, 929, 0,
	0, 0, 0, 0, 278, 0, 0, 600, 602, 604,
	669, 671, 673, 675, 677, 679, 681, 683, 686, 688,
	690, 692, 694, 697, 699, 701, 704, 707, 709, 711,
	713, 715, 717, 719, 721, 723, 725, 727, 729, 731,
	733, 743, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 831, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 902, 0, 746, 748, 749, 750,
	0, 809, 829, 830, 839, 0, 1128, 1436, 1297, 1278,
	1292, 1297, 1280, 1281, 1282, 1283, 1284, 1289, 1291, 1285,
	1286, 1287, 41, 43, 45, 47, 49, 51, 53, 55,
	57, 391, 393, 395, 397, 399, 402, 404, 406, -2,
	1405, 1406, 446, 448, 450, 452, 454, 456, 458, 587,
	0, 589, 0, 747, -2, 0, 1440, 1440, 1440, 0,
	0, 1406, 1404, 0, 592, 593, 648, 649, 1708, 0,
	0, 0, 0, 0, 0, 0, 1962, 1794, 0, 650,
	-2, 1825, 1827, 2511, 2536, 1961, 1829, 1830, 1831, 1832,
	1833, 0, 1835, 1836, 1837, 1838, 1839, 1840, 0, 1842,
	0, 1847, 1848, 1849, 0, 2518, 2042, 2125, -2, 0,
	0, 2524, 2121, 0, 1928, 1865, -2, -2, 2148, 2127,
	1640, 1641, 1642, 1643, 1644, -2, -2, 2554, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 0,
	2499, 2519, 2520, 2525, 2527, 2521, 2508, 1890, 2227, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1667, 1676, -2, -2, -2, -2, -2, -2,
	-2, 2512, 2513, 2530, 2533, 2539, 2544, 2545, 2517, 2526,
	2553, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 1668, -2, -2,
	-2, -2, 1423, 2390, 1426, 1088, 1424, 1408, 1410, 0,
	1412, 0, 0, 0, 1417, 1443, 1441, 0, 1492, 1421,
	1422, 1510, 1510, 1534, 0, 1515, 0, 1534, 1435, 1561,
	0, 1521, 2412, 1866, 1867, 0, 2131, 2126, -2, -2,
	2551, 0, 0, 0, 0, 0, 0, 0, 553, 0,
	559, 561, 0, 0, 0, 575, 1445, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 374, 375, 2519,
	0, 0, 0, 380, 0, 382, 383, 384, 385, 386,
	387, 388, 182, 2519, 463, 488, 0, 182, 2519, 466,
	182, 2519, 469, 0, 472, 1193, 182, 2519, 475, 2093,
	182, 2519, 478, 480, 2101, 182, 2519, 484, 2108, 2106,
	485, 2519, 487, 281, 279, 280, 2144, 2145, 2152, 2153,
	2154, 2155, 2552, 2554, 1264, 1265, 1266, 1267, 0, 1294,
	1194, 597, 598, 0, 622, 0, 626, 2507, -2, 0,
	2431, -2, 630, 1298, 1302, 1303, 1304, 1305, 1306, 0,
	0, 0, 0, 1311, 0, 0, 636, 0, 0, 623,
	624, 642, 645, 0, 738, 739, 740, 741, 742, 68,
	0, 2519, 1561, 70, 0, 2087, 2156, 2157, 2158, 2159,
	2160, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 73, 0, 2519, 77, 0, 2519, 0, -2, 88,
	0, 95, 0, 2090, 104, 0, 2519, 0, 2062, -2,
	0, 193, 0, 948, -2, 2519, 1136, 0, 0, 0,
	0, 911, 2059, 2064, 912, 2083, 913, 2069, 0, 308,
	309, 310, 311, 312, 0, 313, 2519, 315, 316, 0,
	318, 319, 2519, 321, 322, 0, 324, 0, 233, 234,
	2519, 343, 344, 0, 346, 347, 0, 349, 0, 0,
	0, 353, -2, 369, 0, 366, 356, 357, 359, 360,
	361, 362, 363, 0, 410, 408, 2098, 0, -2, 2519,
	0, 945, 0, 0, 1173, -2, 2519, 1133, 0, 1180,
	2519, 1176, 0, -2, 0, 1433, 2519, 1315, 977, 978,
	979, 980, 1573, 429, 0, 1341, 0, 1343, 0, 1362,
	1567, 1510, 0, 0, 1572, 0, -2, 546, 2114, -2,
	498, 0, 499, 0, -2, 0, 293, 0, 0, 930,
	931, 932, 933, 934, 937, 938, 939, 940, 1547, 250,
	252, 0, 0, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 0, 0, 607, 0, 0, 744, 745, 0,
	0, 755, 756, 757, 0, 293, 2423, 2386, 2248, 764,
	0, 767, 770, -2, 0, 0, 0, 0, 774, 0,
	779, 780, 781, 0, 0, 785, 787, 919, 789, 0,
	0, 791, 0, 795, 0, 798, 0, 800, 0, 802,
	-2, -2, -2, 810, 811, -2, 815, -2, 0, 818,
	820, 0, 822, -2, 0, 831, 827, 828, 0, 0,
	0, 0, 847, 848, 0, 857, 0, 860, 861, 862,
	0, 864, 865, 0, 867, 868, 869, 870, 0, 872,
	873, -2, -2, 877, 879, 0, 886, 0, 890, 0,
	894, 0, 0, 901, 0, 751, 752, 182, 1565, 1277,
	-2, 1279, 0, -2, 0, 588, 0, 591, 1465, 1391,
	1388, 0, 1462, 1463, 1392, 0, 0, 0, 1399, 0,
	1438, 1439, 0, 0, 0, 1378, 1379, 0, 0, 0,
	0, 1967, 1968, 1969, 1970, 1971, 1972, 1975, 1976, 1973,
	1974, 1977, 1978, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 1981, 1982, 0, 0, 1984, 0, 1986, 0, 0,
	0, 0, 0, 0, 1773, 1775, 2050, 0, 0, 1983,
	1713, 1714, 1715, 1716, 1717, 1752, 1753, 0, 0, 1826,
	2047, 2046, 1828, 0, 1998, 0, 1841, -2, 0, 1962,
	1993, 0, 0, 1850, 1851, 1852, 0, 0, 1998, 0,
	0, 2041, 1862, 1863, 1705, 0, 0, 1930, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1654, 1653, 0, 1655, 0,
	1656, 1657, 1664, 1677, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 2022, -2, 0, 0,
	0, 0, 1669, 0, 1425, 0, 0, 1496, 2051, 2055,
	2056, 1496, 1496, 0, 0, 1999, 1558, 1558, 0, 0,
	1553, 1553, 1553, 1551, 1534, 0, 1534, 1544, 0, 1534,
	1534, 0, -2, 1515, 0, 0, 1544, 0, 1528, 534,
	536, 538, 540, 541, 542, 544, 1562, 1563, 0, 0,
	0, 0, 2132, 0, 0, 0, 0, 0, 2117, 0,
	0, 0, 0, 2475, 2422, 564, 578, 1435, 0, 2001,
	1588, 1592, 0, 1594, 1595, 1596, 1597, 1598, 0, 0,
	1589, -2, 1665, 1667, 1688, 2149, 2150, 2151, 1648, 1649,
	1650, 1651, 1652, 1660, 1647, 1647, 1647, 1658, 1687, 1679,
	1687, 1683, 1633, 1634, 1635, 1670, 1671, 1672, 1673, 0,
	2475, 2422, 570, 0, 0, 1373, 197, 199, 200, 201,
	202, 203, 370, 0, 377, 378, 379, 0, 459, 0,
	180, 181, 0, 182, 2519, 464, 0, 467, 0, 182,
	2519, 2057, 473, 0, 476, 0, 0, 482, 0, 0,
	0, 0, 0, 182, 1375, 0, 0, 0, 0, -2,
	632, 637, 638, 0, 1300, 0, 1307, 659, 660, 661,
	1309, 1310, 0, 1312, 635, 662, 663, 664, 665, 666,
	667, 0, 2071, 2072, 2073, 2074, 2077, 2078, 0, 0,
	633, 652, 640, 0, 646, 105, 1250, 0, 144, 0,
	1250, 1250, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 129, 140, 117, 118, 0, 0,
	0, 0, 0, 78, 1110, 0, 1113, 0, 0, 0,
	0, 0, 0, 0, 1126, 0, 0, 0, 0, 0,
	0, 92, 93, 128, 0, 0, 1338, 0, 123, 107,
	0, 0, 0, 130, 142, 0, 173, 175, 0, 0,
	0, 0, 0, 0, 192, 204, 0, 0, 0, 0,
	1134, 0, 1432, 0, 0, 2519, 0, 1547, 2294, -2,
	-2, 250, 1547, 910, 0, 0, 2132, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 348, 350, 351,
	352, 0, 1172, 0, 358, 400, 1059, 2519, 0, 0,
	427, 422, 0, 424, 0, 0, 1109, 2519, 1107, 2102,
	0, 1131, 0, 1088, 2519, 2100, 0, 0, 0, 1181,
	2141, 1190, 1194, 1328, 0, 431, 0, 1344, 1346, 0,
	0, 1568, 0, 1570, 1510, 1435, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 256, 0, 1546,
	0, 0, 1547, 250, 293, 293, 1547, 609, 1547, 611,
	0, 0, 758, 759, 0, 293, 293, 293, 765, 766,
	768, 769, -2, -2, -2, 887, 771, 772, 854, 0,
	0, 0, 853, 784, 788, 0, 904, 2408, 2422, 2475,
	917, 854, 2215, 854, 2215, 854, 2215, 799, 801, 804,
	842, 850, 814, 819, 0, 0, 824, 832, -2, 0,
	834, 0, 836, 0, 838, 854, 855, 858, 863, 866,
	871, 0, 0, 0, 0, 0, 0, 0, 897, 898,
	0, 0, 1127, 0, 1290, 1465, 1391, 590, 1382, 1464,
	1383, 1390, 1393, 0, 0, 1395, 0, 1397, 0, 1460,
	1461, 1468, 1469, 0, 1479, 1480, 1472, 0, -2, 0,
	0, 1475, 1476, 1401, 0, 1418, 1419, 1420, 1449, 1452,
	1209, 0, 2652, 1709, 1583, 1710, 1711, 2086, 0, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, -2,
	-2, -2, -2, -2, -2, -2, -2, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, -2, -2,
	-2, 1750, 1751, -2, 1985, 1987, 0, 2050, 0, -2,
	0, -2, -2, -2, -2, 1770, 0, 1772, 1777, 1779,
	1781, 0, 0, 0, 0, 2049, 1791, 2033, 2034, 0,
	0, 1964, 1965, 1966, 1776, 0, 1795, 2048, 2045, 0,
	0, 1997, 1448, 1854, 0, 0, 0, 0, 1861, 1846,
	1995, 0, 1994, 0, 0, 0, 2005, 0, 2040, 2036,
	0, 2084, 1704, 1691, 1692, 1693, 1694, 1695, 1696, 1706,
	0, 2081, 2118, 2124, 1938, 0, 0, 0, 1891, 1892,
	1893, 1894, 1895, 0, 1897, 1898, 0, 1900, 1901, 0,
	1903, 1904, 0, 1906, 1907, 1908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 1605, 0, 0,
	0, 1609, 0, 0, 0, 1613, 0, 0, 0, 1617,
	0, 0, 0, 1621, 0, 0, 0, 1625, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 1910, 0, 2008,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 1912,
	0, 1914, 1999, 2019, 0, 0, 1796, 0, 0, 0,
	1962, 0, 1917, 1999, 2027, 0, 0, 0, 0, 0,
	1999, 0, 2032, 0, 1924, 0, 1926, 1427, 0, 0,
	1578, 0, 0, 0, 2054, 1578, 1578, 0, 1491, 0,
	0, 1554, 1555, 1556, 1557, 0, 0, 1558, 0, 1548,
	1552, 1549, 1550, 1544, 1507, 0, 0, 2088, 1544, 1513,
	1543, 0, 1088, 1533, 1544, 1544, 0, -2, 1517, 1534,
	0, 0, 535, 537, 539, 543, 545, 0, 0, 1448,
	-2, 0, -2, 1087, 0, 0, 0, 0, 554, 556,
	0, 0, 479, 0, 0, 548, 0, 551, 0, 1579,
	1582, 0, 0, 1593, 1599, 1600, 0, -2, 0, 0,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	489, 182, 461, 0, 182, 182, 470, 0, 0, 182,
	481, 182, 2109, 182, 2107, 282, 486, 1374, 215, 0,
	625, 0, 1299, 1308, 0, 656, 0, 658, 0, 2075,
	2079, 2076, 2080, 0, 647, 0, 0, 0, 0, 1249,
	0, 1216, 0, 0, 0, 0, 0, 148, 2519, 0,
	184, 0, 0, 1052, 2094, 0, 1044, 0, 0, 2234,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 1111, 1112, 1114, 1121, 1123,
	0, 1117, 2082, 0, 0, 1118, 0, 1120, 1122, 1124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 1338, 0, 0, 0, 116, 120, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 1166, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 0, 0, -2,
	0, 0, 0, 0, 225, 0, 284, 2060, 2070, 0,
	935, 936, 314, 317, 320, 323, 221, 0, 354, 0,
	0, 983, 958, 0, 0, 409, 293, 0, 0, 423,
	2111, 943, 1105, 1108, 0, 1088, 2519, 1145, 0, 0,
	0, 0, 0, 0, 1179, 0, 0, 2519, 2089, 2140,
	2141, 1330, 1338, 0, 1578, 0, 1360, 1347, 0, 0,
	0, 1360, 1364, 1365, 1367, 1368, 0, 0, 1569, 1575,
	497, 547, 1435, 1435, 293, 291, 2354, 289, 286, 288,
	0, 0, 0, 984, 986, 987, 988, 184, 0, 2141,
	1044, 2283, 2141, 0, 1350, 1352, 0, 245, 0, 253,
	1547, 251, 256, 0, 0, 421, 608, 613, 753, 0,
	293, 761, 762, 763, 806, 844, 852, 773, 775, 776,
	777, 0, 0, 918, 914, 915, 916, 790, 854, 793,
	854, 796, 854, 817, 821, 826, 833, 0, 0, 0,
	846, 0, 0, 0, 0, 0, 0, 0, 891, 892,
	893, 895, 900, 899, 903, 1566, 1386, 1387, 1389, 0,
	1398, 0, 0, 1474, -2, -2, 1473, 1477, 1478, -2,
	-2, -2, -2, 1394, 0, 1403, 1400, 0, 1459, 1207,
	1208, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1792, 0, -2, 1771, 1774, 1778, 1780, 1782, 0, 0,
	0, 0, 0, 0, 1988, 0, 1990, 1793, 2043, 2046,
	1960, 0, 0, 1447, 1448, 1448, 0, 1860, 0, 1996,
	0, 2003, 2004, 0, 1853, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 1896, 1899, 1902, 1905, 0, 0, 0, 0, 1885,
	0, 0, 0, 1889, 1659, 1645, 0, 1687, 1685, 1686,
	1680, 1687, 1684, 1637, 0, 1602, 1603, 1604, 1606, 1607,
	1608, 1610, 1611, 1612, 1614, 1615, 1616, 1618, 1619, 1620,
	1622, 1623, 1624, 1626, 1627, 1628, 1630, 1631, 1632, 1636,
	0, 1909, 0, 1911, 1913, 0, 0, 1915, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 1800, 1801, 1916, 2025, 2026, 0, 0, 0,
	0, 0, 0, 1922, 0, 2031, 1923, 1925, 1435, 0,
	1428, 0, 1493, 1482, 1577, 0, 2052, 1547, 1495, 1497,
	2053, 2091, 1482, 1482, 0, 2000, 0, 0, 1538, 0,
	0, 0, 1540, 1511, 0, 0, 1505, 0, 1501, 1502,
	1503, 1504, 1512, 1088, 1542, 1514, 1518, 2118, 0, 1544,
	0, 1529, 0, 1531, 1564, 0, 1523, 1526, 0, 0,
	2133, 1578, 0, 325, 329, 330, 326, 327, 328, 563,
	0, 0, 0, 0, 2002, 0, 1584, 0, 1590, 0,
	0, 0, 0, 569, 0, 0, 0, 198, 1372, 376,
	460, 182, 465, 468, 2058, 182, 474, 477, 483, 211,
	0, 621, -2, 654, 655, 657, 0, 653, 145, 1250,
	0, 0, 1212, 1214, 2105, 1218, 0, 0, 0, 0,
	0, 0, 150, 2519, 159, 0, 1024, 0, 2092, 0,
	0, 0, 0, 0, 0, 1252, 0, 0, 2519, 182,
	2519, 182, 162, 164, 167, 0, 172, 169, 170, 0,
	0, 1015, 106, 1250, 0, 109, 113, 121, 0, 0,
	0, 127, 0, 0, 0, 1235, 1241, 0, 0, 1115,
	1116, 1119, 1125, 79, 0, 0, 1239, 1245, 89, 90,
	2103, 91, 0, 1211, 0, 0, 0, 174, 111, 115,
	122, 0, 1247, 108, 0, 196, 0, 0, 0, 188,
	0, 189, 190, 205, 0, 182, 2519, 0, 946, 947,
	1167, 1129, 1130, 0, 1135, 0, 0, 0, 1547, 217,
	0, 1547, 225, 0, 2066, 0, 342, 0, 0, 0,
	0, 982, 1070, 0, 953, 0, 0, 0, 415, 411,
	0, 420, 426, 425, -2, 0, 0, 0, 0, -2,
	0, 0, 1183, 1177, 1178, 0, 0, 0, 0, 2519,
	1332, 1338, 0, 1433, 1448, 430, 1339, 1360, 0, 0,
	0, 1349, 1345, 1342, 1578, 0, 0, 0, 0, 0,
	1571, 1574, 500, 501, 268, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 989, 993, 0, 2141, 2141, 0,
	2096, 0, 0, 0, 0, 254, 0, 257, 0, 0,
	0, 262, 263, 264, 265, 266, 256, 247, 1547, 0,
	610, 0, 0, 760, 0, 783, 792, 794, 797, 835,
	837, 854, 880, 881, 1010, 0, 1010, 0, 0, 896,
	1396, 0, 1471, 1402, 1453, 1454, 0, 1209, 0, 1712,
	1755, 0, 0, -2, 0, 0, 1759, 0, 0, 0,
	-2, 0, 0, 0, 1989, 1991, 0, 2045, 1855, 0,
	0, 0, 1859, 1843, 1844, 0, 1963, 2006, 2035, 2039,
	0, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 0, 2085,
	2119, 2123, 1936, 1937, 1941, 2099, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 1678, 1682,
	0, 0, 2007, 2018, 2020, 1797, 1798, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, -2, -2, -2,
	1815, 1816, 1817, -2, -2, -2, 0, 0, 0, 2021,
	2023, 2024, 2028, 2029, 0, 1919, 1920, 1921, 2030, 0,
	1435, 1429, 1490, 0, 1576, 1494, 0, 1490, 1490, 1442,
	1536, 0, 0, 1560, 0, 1508, 0, 1509, 0, 1541,
	0, 1516, 1519, 1520, 1530, 0, 1522, 0, 1525, 0,
	1855, -2, 294, 295, 297, 0, 300, 566, 567, 565,
	549, 0, 0, 1586, 0, 0, 1662, 1666, 1690, 572,
	573, 571, 462, 471, 213, 0, 1545, 0, 0, 0,
	0, 2171, 1227, 1228, 0, 2536, 1231, 0, 0, 0,
	0, 183, 1022, 1051, 0, 0, 0, 1043, 0, 0,
	1057, 152, 0, 0, 0, 160, 0, 0, 157, 0,
	166, 171, 0, 0, 0, 0, 1217, 0, 0, 124,
	125, 126, 0, 131, 0, 132, 0, 0, 0, 0,
	0, 0, 1323, 1324, 1318, 0, 0, 0, 185, 0,
	0, 0, 1206, 0, 0, 207, 0, 0, 0, 1170,
	1171, 1236, 1242, 0, 0, 225, 223, 0, 226, 0,
	229, 230, 0, 225, 219, 0, 0, 1088, 355, 956,
	1058, 0, 1060, 0, 954, 0, 0, 1059, 407, 0,
	414, 0, 0, 1109, 0, 0, 1132, 1143, 1088, 0,
	1182, 1184, 0, 1192, 0, 0, 0, 1334, 1338, 0,
	1327, 1328, 1467, 1340, 1358, -2, 0, 0, 1448, 1366,
	1363, 1369, 1370, 0, 290, 0, 285, 287, 0, 271,
	0, 0, 985, 990, 0, 0, 0, 0, 0, 1351,
	1353, 0, 0, 0, 0, 0, 0, 246, 256, 277,
	0, 754, 778, 845, 882, 1009, 0, 0, 884, 0,
	0, 1470, 1457, 1458, 1455, 1209, 1757, 1761, 0, 0,
	0, 1763, -2, 0, 1785, -2, -2, 1992, 2044, 1834,
	1448, 1856, 1858, 1845, 2038, 1707, 0, 1943, 1940, 0,
	1927, 0, 1880, 1881, 0, 0, 1884, 1886, 1887, 1888,
	1646, 1639, 1638, 2017, 0, 0, 0, 0, 1918, 1430,
	0, 1932, 0, 0, 1498, 1932, 1932, 1537, 0, 1539,
	1506, 1499, 0, 2119, 1532, 1524, 0, 0, 298, 0,
	1580, 1585, 0, 1591, 1661, 214, 146, 147, 1221, 1222,
	1223, 1224, 0, 0, 1229, 1230, 0, 1234, 149, 0,
	1023, 0, 1026, 0, 0, 0, 0, 1033, 1044, 0,
	0, 0, 0, 0, 1045, 0, 1074, 0, 1197, 1204,
	0, -2, 0, 0, 0, 154, 177, 0, 0, 1251,
	0, 0, 182, 182, 0, 0, 1213, 1215, 0, 0,
	0, 0, 134, 0, 0, 1237, 1243, 1240, 1246, 0,
	0, 0, 1248, 194, 195, 0, 182, 0, 187, 182,
	182, 1206, 0, 0, 0, 216, 0, 0, 0, 0,
	218, 283, 225, 0, 1004, 0, 1070, 1062, 1063, 1064,
	0, 1069, 1071, 0, 0, 970, 955, 0, 966, 0,
	0, 983, 958, 0, 412, 944, 1106, 1140, 1088, 0,
	1174, 0, 0, 0, 0, 0, 0, 0, 1336, 1338,
	0, 1329, 1330, 1360, 1466, 0, 0, 0, 1348, 1467,
	0, 292, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 258, 0, 259, 260, 261, 248, 612,
	614, 0, 0, 620, 1008, 0, 0, 0, 0, 1456,
	1765, -2, -2, 1786, 0, 2120, 2122, 1448, 0, 1929,
	1450, 0, 0, -2, 0, 0, 0, 1431, 1414, 0,
	1489, 1481, 1483, 1485, 2411, 2211, 2518, 1415, 1416, 1559,
	0, 1527, 299, 0, 1587, 0, 1225, 1226, 0, 151,
	0, 1027, 1028, 2095, 1030, 0, 1032, 1034, 1035, 0,
	1038, 2143, 0, 1042, 0, 1053, 1075, 0, 1084, 0,
	1199, 1209, 1203, 0, 1201, 1086, 0, 153, 155, 176,
	1206, 0, 156, 165, 0, 0, 110, 0, 0, 2206,
	137, 135, 133, 1210, 112, 0, 196, 206, 1205, 191,
	208, 182, 0, 1238, 1244, 227, 0, 228, 231, 0,
	0, 1012, 0, 957, 1061, 0, 1072, 1073, 960, 0,
	959, 0, 0, 0, 0, 0, 413, 416, 0, 419,
	0, 0, 1185, 1183, 0, 1191, 0, 0, 0, 1317,
	0, 0, 1331, 1332, 428, 1354, 0, 0, 1360, 1371,
	270, 0, 0, 991, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 992, 1086, 0, 0, 1050, 0, 275,
	255, 0, 616, 0, 618, 0, 883, 885, 0, 0,
	1857, 1947, 0, 0, 1882, 1883, -2, 0, 1823, 1931,
	1933, 0, 0, 0, 0, 0, 1500, 1581, 1219, 0,
	1232, 0, 1025, 1029, 0, 0, 0, 1092, 0, 0,
	1046, 0, 1078, 1079, 1004, 0, 1080, 1081, 1082, 1198,
	1459, 1204, 1004, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 186, 209, 1206, 224, 241, 0, 1141,
	958, 1011, 0, 0, 968, 0, 971, 0, 967, 964,
	965, 956, 0, 417, 418, 0, 1144, 0, 0, 1192,
	0, 0, 1320, 1316, 1338, 1333, 1334, 1578, 1357, 1361,
	0, 0, 1084, 1086, 958, 0, 615, 0, 0, 888,
	889, 0, 0, 0, 0, 1942, 1451, 1824, 0, 0,
	1484, 1486, 1487, 1488, 1220, 1233, 0, 0, 1037, 1097,
	0, 0, 0, 1076, 1077, 1012, 0, 1202, 1200, 1055,
	0, 1088, 158, 0, 1086, 0, 1016, 0, 0, 1019,
	0, 0, 138, 2206, 136, 0, 182, 244, 0, 238,
	236, 237, 960, 0, 0, 1066, 1068, 0, 972, 1004,
	970, 1142, 1175, 1086, 0, 1084, 0, 1326, 1338, 1321,
	1322, 0, 1336, 0, 293, 293, 1004, 1084, 1578, 0,
	293, 617, 619, 1939, 1959, 1948, -2, 2478, 2212, 0,
	1959, 1959, 1934, 1935, 0, 0, 1039, 1093, 1094, 0,
	1089, 1090, 1091, 2142, 1040, 1041, 1074, 0, 0, 1092,
	178, 1004, 1013, 0, 0, 1014, 0, 0, 141, 0,
	143, 210, 232, 0, 0, 952, 0, 1065, 0, 0,
	0, 0, 1012, 960, 1084, 0, 1004, 0, 1313, 1325,
	0, 1335, 1317, 0, 272, 273, 1012, 1004, 1049, 274,
	1944, 0, 0, 1950, 1951, 1952, 1953, 1954, 1945, 1946,
	1031, 0, 1095, 0, 1096, 0, 0, 0, 1578, 1083,
	0, 1097, 163, 1017, 0, 1020, 0, 139, 0, 239,
	240, 949, 951, 0, 1067, 961, 0, 963, 958, 969,
	1004, 0, 1012, 0, 1319, 2104, 1320, 1355, 0, 958,
	1012, 0, 1956, 1957, 0, 0, 0, 1098, 0, 1101,
	1102, 0, 1099, 1054, 0, 1074, 0, 0, 0, 0,
	962, 960, 1012, 1086, 958, 1084, 1326, 0, 1578, 958,
	1955, 1958, 1949, 1036, 1100, 1103, 1104, 1085, 1056, 0,
	0, 242, 0, 1007, 952, 958, 1084, 1578, 1004, 1314,
	1578, 1047, 1578, 1012, 0, 0, 1003, 1005, 1006, 950,
	1578, 1004, 1188, 1012, 1356, 1048, 1018, 0, 243, 1186,
	1012, 958, 0, 958, 1578, 0, 1578, 1189, 1012, 1187,
	1021,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 562, 3, 568, 563, 3,
	573, 574, 566, 564, 578, 565, 575, 567, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 581, 3,
	554, 556, 555, 559, 577, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 571, 3, 572, 569, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 579, 561, 580, 557,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 558, 57897, 560, 57898, 570, 57899, 576,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1283
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1288
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1290
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1300
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1302
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1310
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1328
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1329
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1330
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1389
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1415
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1428
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1445
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1449
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1453
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1489
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1498
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1507
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1540
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1576
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1580
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1586
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1596
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1605
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1616
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1626
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1634
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1644
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1658
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1669
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1676
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1688
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1695
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1712
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1723
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1731
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1742
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1752
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1762
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1771
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1782
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1788
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1814
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1819
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1939
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1942
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1948
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1988
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2000
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2161
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2165
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2168
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2203
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2215
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2223
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2254
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2337
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2345
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2372
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2483
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = nil
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2608
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2652
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2732
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2741
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2747
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2752
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2757
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2767
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2790
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2798
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2874
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2904
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3038
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3057
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3062
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3079
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3080
		{
			return helpWith(sqllex, "CREATE")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3093
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3096
		{
			return unimplemented(sqllex, "create access method")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3097
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			return unimplemented(sqllex, "create cast")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3099
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3101
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3102
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3103
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3105
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3106
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "create operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "create publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "create rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "create server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3118
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3121
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3122
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3125
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3126
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "drop server")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3154
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3205
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3267
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3302
		{

			sqlVAL.union.val = nil
		}
	case 428:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "DELETE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3330
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3344
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3345
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "DROP")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3556
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3561
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3613
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3622
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3646
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3654
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "DELETE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "INSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "DELETE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "INSERT")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3731
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3764
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "GRANT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "RESET")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "RESET")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "USE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3982
		{
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "USE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4050
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4201
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			return unimplemented(sqllex, "set from current")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4225
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = tree.Low
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = tree.Normal
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = tree.High
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4402
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4406
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4421
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.str = "client_encoding"
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.str = "timezone"
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4471
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4475
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4494
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4534
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4543
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4680
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4712
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4748
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = true
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = false
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4888
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = true
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = false
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = true
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = false
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4997
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5005
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5031
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5052
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5095
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5103
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5140
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5163
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5237
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5377
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5420
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5490
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5492
		{
			return helpWith(sqllex, "RESUME")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5661
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[13].union.locality(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5677
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[16].union.locality(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{

			sqlVAL.union.val = nil
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.str = ""
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5722
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = nil
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5745
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5749
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 968:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5775
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5789
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5804
		{
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5806
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5861
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5898
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5901
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5904
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5905
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5911
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5927
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5932
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.str = ""
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6027
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6123
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = true
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = false
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6158
		{
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6259
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6270
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6297
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6312
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6377
		{
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6378
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6380
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6381
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6382
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6454
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6538
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6547
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6555
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6566
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6581
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6584
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6588
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6591
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6594
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6634
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6649
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = true
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{

			sqlVAL.union.val = true
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = false
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6674
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6688
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6700
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6712
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6722
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6732
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = nil
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6842
		{
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6843
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6870
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6872
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6874
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6876
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6878
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6916
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6934
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6953
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6970
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6987
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6991
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = false
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = true
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = false
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = true
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = false
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7045
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7051
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7057
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7065
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.str = ""
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.str = ""
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7124
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7130
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7326
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7332
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7344
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7350
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7364
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7370
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7388
		{
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7391
		{
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7392
		{
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7403
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7421
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7430
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7459
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7480
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7488
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7499
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7503
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7504
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7505
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7529
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7542
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7547
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7558
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7578
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7579
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7607
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7620
		{
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7622
		{
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7626
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7713
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.str = ""
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{

		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.str = ""
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.str = ""
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.str = ""
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.str = ""
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7803
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7816
		{
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7817
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7864
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7877
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7926
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7953
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7995
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8048
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8063
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8207
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8242
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8243
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8244
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8305
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8349
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8365
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = true
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = false
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8419
		{
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = nil
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8433
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = true
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = false
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = false
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = true
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8463
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8467
		{
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8529
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8534
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8563
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8596
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8652
		{
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8655
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8690
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8691
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8724
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8739
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8761
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8771
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8782
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8813
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8852
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8862
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8908
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8938
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8971
		{
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8973
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = nil
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = true
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = false
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.str = tree.AstFull
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.str = tree.AstRight
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.str = tree.AstInner
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9091
		{
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.str = tree.AstHash
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.str = ""
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9165
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9183
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9195
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9205
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = true
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = false
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = true
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = false
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9267
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9275
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9276
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9294
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9296
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9304
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9324
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9385
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9390
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9392
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9396
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9400
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9403
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9404
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9408
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9410
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9411
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9414
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9415
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9416
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9418
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9420
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = types.Geography
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9435
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9443
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9477
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = nil
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = types.Int2
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = types.Int
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = types.Float4
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = types.Float
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9528
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9536
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = types.Bool
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = types.Float
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9569
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9575
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9597
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = types.String
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = true
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = false
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = types.Date
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9646
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9654
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9668
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9677
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9685
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9702
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = true
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = false
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = false
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = types.Interval
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9726
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9810
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = nil
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9855
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9915
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10167
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10233
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10454
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10480
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10504
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10534
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10545
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10546
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10561
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10570
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10636
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10793
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10817
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10832
		{
			return unimplemented(sqllex, "treat")
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10858
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.str = ""
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11007
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11104
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = tree.Any
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = tree.Some
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = tree.All
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = tree.Div
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = tree.LT
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = tree.GT
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = tree.LE
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = tree.GE
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = tree.NE
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = tree.Like
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11466
		{
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11538
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11546
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11619
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11635
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11644
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11664
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11672
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11684
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11910
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11917
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.str = ""
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
