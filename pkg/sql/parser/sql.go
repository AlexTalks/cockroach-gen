// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:66

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:624
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10221

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1102,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	185, 929,
	202, 929,
	217, 247,
	304, 247,
	313, 748,
	340, 247,
	349, 748,
	388, 748,
	412, 247,
	437, 748,
	-2, 0,
	-1, 72,
	217, 251,
	-2, 0,
	-1, 73,
	112, 1102,
	191, 1102,
	422, 1102,
	423, 1102,
	-2, 0,
	-1, 85,
	125, 1076,
	141, 1076,
	154, 1076,
	199, 1076,
	229, 1076,
	267, 1076,
	277, 1076,
	417, 1076,
	-2, 1047,
	-1, 117,
	131, 657,
	216, 657,
	307, 637,
	358, 637,
	405, 657,
	-2, 0,
	-1, 118,
	4, 1104,
	21, 1104,
	22, 1104,
	23, 1104,
	24, 1104,
	25, 1104,
	27, 1104,
	33, 1104,
	38, 1104,
	39, 1104,
	40, 1104,
	41, 1104,
	42, 1104,
	43, 1104,
	44, 1104,
	45, 1104,
	46, 1104,
	47, 1104,
	48, 1104,
	49, 1104,
	50, 1104,
	52, 1104,
	53, 1104,
	54, 1104,
	55, 1104,
	56, 1104,
	57, 1104,
	58, 1104,
	61, 1104,
	62, 1104,
	63, 1104,
	64, 1104,
	66, 1104,
	67, 1104,
	71, 1104,
	72, 1104,
	73, 1104,
	74, 1104,
	75, 1104,
	76, 1104,
	78, 1104,
	79, 1104,
	80, 1104,
	81, 1104,
	83, 1104,
	85, 1104,
	86, 1104,
	87, 1104,
	89, 1104,
	91, 1104,
	92, 1104,
	100, 1104,
	101, 1104,
	102, 1104,
	103, 1104,
	104, 1104,
	105, 1104,
	106, 1104,
	107, 1104,
	109, 1104,
	111, 1104,
	112, 1104,
	114, 1104,
	117, 1104,
	118, 1104,
	119, 1104,
	121, 1104,
	123, 1104,
	124, 1104,
	126, 1104,
	127, 1104,
	128, 1104,
	129, 1104,
	130, 1104,
	131, 1104,
	132, 1104,
	133, 1104,
	134, 1104,
	135, 1104,
	136, 1104,
	137, 1104,
	138, 1104,
	140, 1104,
	146, 1104,
	147, 1104,
	148, 1104,
	149, 1104,
	150, 1104,
	151, 1104,
	153, 1104,
	155, 1104,
	159, 1104,
	160, 1104,
	162, 1104,
	163, 1104,
	165, 1104,
	166, 1104,
	168, 1104,
	169, 1104,
	170, 1104,
	171, 1104,
	172, 1104,
	173, 1104,
	174, 1104,
	175, 1104,
	177, 1104,
	178, 1104,
	180, 1104,
	181, 1104,
	182, 1104,
	185, 1104,
	186, 1104,
	187, 1104,
	188, 1104,
	191, 1104,
	192, 1104,
	193, 1104,
	194, 1104,
	195, 1104,
	196, 1104,
	197, 1104,
	198, 1104,
	200, 1104,
	202, 1104,
	204, 1104,
	206, 1104,
	207, 1104,
	208, 1104,
	210, 1104,
	211, 1104,
	214, 1104,
	215, 1104,
	216, 1104,
	217, 1104,
	218, 1104,
	220, 1104,
	221, 1104,
	223, 1104,
	224, 1104,
	226, 1104,
	227, 1104,
	230, 1104,
	231, 1104,
	234, 1104,
	235, 1104,
	236, 1104,
	237, 1104,
	239, 1104,
	240, 1104,
	241, 1104,
	242, 1104,
	243, 1104,
	244, 1104,
	245, 1104,
	246, 1104,
	247, 1104,
	248, 1104,
	250, 1104,
	251, 1104,
	252, 1104,
	253, 1104,
	254, 1104,
	256, 1104,
	258, 1104,
	260, 1104,
	262, 1104,
	263, 1104,
	264, 1104,
	265, 1104,
	266, 1104,
	268, 1104,
	269, 1104,
	270, 1104,
	272, 1104,
	273, 1104,
	274, 1104,
	275, 1104,
	278, 1104,
	279, 1104,
	280, 1104,
	282, 1104,
	284, 1104,
	285, 1104,
	286, 1104,
	287, 1104,
	288, 1104,
	289, 1104,
	290, 1104,
	291, 1104,
	292, 1104,
	293, 1104,
	295, 1104,
	296, 1104,
	297, 1104,
	298, 1104,
	299, 1104,
	300, 1104,
	301, 1104,
	303, 1104,
	305, 1104,
	306, 1104,
	307, 1104,
	308, 1104,
	309, 1104,
	310, 1104,
	311, 1104,
	312, 1104,
	313, 1104,
	314, 1104,
	316, 1104,
	317, 1104,
	318, 1104,
	319, 1104,
	320, 1104,
	322, 1104,
	323, 1104,
	324, 1104,
	325, 1104,
	326, 1104,
	327, 1104,
	328, 1104,
	329, 1104,
	331, 1104,
	333, 1104,
	334, 1104,
	335, 1104,
	336, 1104,
	337, 1104,
	338, 1104,
	340, 1104,
	341, 1104,
	342, 1104,
	343, 1104,
	344, 1104,
	345, 1104,
	346, 1104,
	347, 1104,
	349, 1104,
	350, 1104,
	351, 1104,
	352, 1104,
	353, 1104,
	354, 1104,
	355, 1104,
	356, 1104,
	357, 1104,
	358, 1104,
	360, 1104,
	361, 1104,
	362, 1104,
	363, 1104,
	364, 1104,
	366, 1104,
	367, 1104,
	368, 1104,
	369, 1104,
	370, 1104,
	372, 1104,
	373, 1104,
	374, 1104,
	375, 1104,
	376, 1104,
	377, 1104,
	378, 1104,
	379, 1104,
	380, 1104,
	381, 1104,
	382, 1104,
	383, 1104,
	385, 1104,
	386, 1104,
	387, 1104,
	389, 1104,
	390, 1104,
	391, 1104,
	392, 1104,
	393, 1104,
	394, 1104,
	395, 1104,
	397, 1104,
	398, 1104,
	399, 1104,
	400, 1104,
	401, 1104,
	403, 1104,
	405, 1104,
	406, 1104,
	407, 1104,
	408, 1104,
	409, 1104,
	411, 1104,
	412, 1104,
	413, 1104,
	415, 1104,
	416, 1104,
	419, 1104,
	420, 1104,
	421, 1104,
	422, 1104,
	423, 1104,
	424, 1104,
	425, 1104,
	427, 1104,
	429, 1104,
	430, 1104,
	431, 1104,
	432, 1104,
	433, 1104,
	434, 1104,
	435, 1104,
	437, 1104,
	438, 1104,
	439, 1104,
	444, 1104,
	445, 1104,
	446, 1104,
	447, 1104,
	448, 1104,
	449, 1104,
	-2, 0,
	-1, 119,
	1, 981,
	206, 981,
	303, 981,
	311, 981,
	452, 981,
	475, 981,
	-2, 0,
	-1, 121,
	1, 981,
	475, 981,
	-2, 0,
	-1, 122,
	1, 981,
	475, 981,
	-2, 0,
	-1, 123,
	1, 981,
	402, 981,
	475, 981,
	-2, 0,
	-1, 148,
	125, 1075,
	141, 1075,
	154, 1075,
	199, 1075,
	229, 1075,
	267, 1075,
	277, 1075,
	417, 1075,
	-2, 1050,
	-1, 181,
	4, 1111,
	5, 1111,
	6, 1111,
	7, 1111,
	8, 1111,
	9, 1111,
	10, 1111,
	21, 1111,
	22, 1111,
	23, 1111,
	24, 1111,
	25, 1111,
	27, 1111,
	33, 1111,
	34, 1111,
	38, 1111,
	39, 1111,
	40, 1111,
	41, 1111,
	42, 1111,
	43, 1111,
	44, 1111,
	45, 1111,
	46, 1111,
	47, 1111,
	48, 1111,
	49, 1111,
	50, 1111,
	52, 1111,
	53, 1111,
	54, 1111,
	55, 1111,
	56, 1111,
	57, 1111,
	58, 1111,
	59, 1111,
	60, 1111,
	61, 1111,
	62, 1111,
	63, 1111,
	64, 1111,
	66, 1111,
	67, 1111,
	69, 1111,
	71, 1111,
	72, 1111,
	73, 1111,
	74, 1111,
	75, 1111,
	76, 1111,
	78, 1111,
	79, 1111,
	80, 1111,
	81, 1111,
	83, 1111,
	85, 1111,
	86, 1111,
	87, 1111,
	89, 1111,
	90, 1111,
	91, 1111,
	92, 1111,
	93, 1111,
	94, 1111,
	95, 1111,
	96, 1111,
	97, 1111,
	98, 1111,
	99, 1111,
	100, 1111,
	101, 1111,
	102, 1111,
	103, 1111,
	104, 1111,
	105, 1111,
	106, 1111,
	107, 1111,
	108, 1111,
	109, 1111,
	111, 1111,
	112, 1111,
	114, 1111,
	117, 1111,
	118, 1111,
	119, 1111,
	121, 1111,
	123, 1111,
	124, 1111,
	126, 1111,
	127, 1111,
	128, 1111,
	129, 1111,
	130, 1111,
	131, 1111,
	132, 1111,
	133, 1111,
	134, 1111,
	135, 1111,
	136, 1111,
	137, 1111,
	138, 1111,
	139, 1111,
	140, 1111,
	146, 1111,
	147, 1111,
	148, 1111,
	149, 1111,
	150, 1111,
	151, 1111,
	153, 1111,
	155, 1111,
	158, 1111,
	159, 1111,
	160, 1111,
	162, 1111,
	163, 1111,
	165, 1111,
	166, 1111,
	168, 1111,
	169, 1111,
	170, 1111,
	171, 1111,
	172, 1111,
	173, 1111,
	174, 1111,
	175, 1111,
	176, 1111,
	177, 1111,
	178, 1111,
	180, 1111,
	181, 1111,
	182, 1111,
	185, 1111,
	186, 1111,
	187, 1111,
	188, 1111,
	190, 1111,
	191, 1111,
	192, 1111,
	193, 1111,
	194, 1111,
	195, 1111,
	196, 1111,
	197, 1111,
	198, 1111,
	200, 1111,
	202, 1111,
	203, 1111,
	204, 1111,
	205, 1111,
	206, 1111,
	207, 1111,
	208, 1111,
	209, 1111,
	210, 1111,
	211, 1111,
	214, 1111,
	215, 1111,
	216, 1111,
	217, 1111,
	218, 1111,
	220, 1111,
	221, 1111,
	223, 1111,
	224, 1111,
	225, 1111,
	226, 1111,
	227, 1111,
	228, 1111,
	230, 1111,
	231, 1111,
	232, 1111,
	233, 1111,
	234, 1111,
	235, 1111,
	236, 1111,
	237, 1111,
	239, 1111,
	240, 1111,
	241, 1111,
	242, 1111,
	243, 1111,
	244, 1111,
	245, 1111,
	246, 1111,
	247, 1111,
	248, 1111,
	249, 1111,
	250, 1111,
	251, 1111,
	252, 1111,
	253, 1111,
	254, 1111,
	255, 1111,
	256, 1111,
	257, 1111,
	258, 1111,
	259, 1111,
	260, 1111,
	261, 1111,
	262, 1111,
	263, 1111,
	264, 1111,
	265, 1111,
	266, 1111,
	268, 1111,
	269, 1111,
	270, 1111,
	273, 1111,
	274, 1111,
	275, 1111,
	278, 1111,
	279, 1111,
	280, 1111,
	281, 1111,
	282, 1111,
	283, 1111,
	284, 1111,
	285, 1111,
	286, 1111,
	287, 1111,
	288, 1111,
	289, 1111,
	290, 1111,
	291, 1111,
	292, 1111,
	293, 1111,
	295, 1111,
	296, 1111,
	297, 1111,
	298, 1111,
	299, 1111,
	300, 1111,
	301, 1111,
	303, 1111,
	305, 1111,
	306, 1111,
	307, 1111,
	308, 1111,
	309, 1111,
	310, 1111,
	311, 1111,
	312, 1111,
	313, 1111,
	314, 1111,
	316, 1111,
	317, 1111,
	318, 1111,
	319, 1111,
	320, 1111,
	322, 1111,
	323, 1111,
	324, 1111,
	325, 1111,
	326, 1111,
	327, 1111,
	328, 1111,
	329, 1111,
	331, 1111,
	332, 1111,
	333, 1111,
	334, 1111,
	335, 1111,
	336, 1111,
	337, 1111,
	338, 1111,
	340, 1111,
	341, 1111,
	342, 1111,
	343, 1111,
	344, 1111,
	345, 1111,
	346, 1111,
	347, 1111,
	349, 1111,
	350, 1111,
	351, 1111,
	352, 1111,
	353, 1111,
	354, 1111,
	355, 1111,
	356, 1111,
	357, 1111,
	358, 1111,
	359, 1111,
	360, 1111,
	361, 1111,
	362, 1111,
	363, 1111,
	364, 1111,
	365, 1111,
	366, 1111,
	367, 1111,
	368, 1111,
	369, 1111,
	370, 1111,
	372, 1111,
	373, 1111,
	374, 1111,
	375, 1111,
	376, 1111,
	377, 1111,
	378, 1111,
	379, 1111,
	380, 1111,
	381, 1111,
	382, 1111,
	383, 1111,
	385, 1111,
	386, 1111,
	387, 1111,
	389, 1111,
	390, 1111,
	391, 1111,
	392, 1111,
	393, 1111,
	394, 1111,
	395, 1111,
	397, 1111,
	398, 1111,
	399, 1111,
	400, 1111,
	401, 1111,
	403, 1111,
	405, 1111,
	406, 1111,
	407, 1111,
	408, 1111,
	409, 1111,
	410, 1111,
	411, 1111,
	412, 1111,
	413, 1111,
	415, 1111,
	416, 1111,
	418, 1111,
	419, 1111,
	420, 1111,
	421, 1111,
	422, 1111,
	423, 1111,
	424, 1111,
	425, 1111,
	426, 1111,
	427, 1111,
	429, 1111,
	430, 1111,
	431, 1111,
	432, 1111,
	433, 1111,
	434, 1111,
	435, 1111,
	437, 1111,
	438, 1111,
	439, 1111,
	444, 1111,
	445, 1111,
	446, 1111,
	447, 1111,
	448, 1111,
	449, 1111,
	450, 1111,
	456, 1111,
	463, 1111,
	464, 1111,
	465, 1111,
	472, 1111,
	476, 1111,
	-2, 0,
	-1, 568,
	157, 1814,
	402, 1814,
	455, 1814,
	474, 1814,
	-2, 0,
	-1, 569,
	157, 1894,
	402, 1894,
	455, 1894,
	474, 1894,
	-2, 0,
	-1, 570,
	157, 1803,
	402, 1803,
	455, 1803,
	474, 1803,
	-2, 0,
	-1, 572,
	157, 1991,
	402, 1991,
	455, 1991,
	474, 1991,
	-2, 0,
	-1, 574,
	157, 2021,
	402, 2021,
	455, 2021,
	474, 2021,
	-2, 0,
	-1, 581,
	157, 1906,
	402, 1906,
	455, 1906,
	474, 1906,
	-2, 502,
	-1, 602,
	474, 1759,
	477, 1759,
	-2, 710,
	-1, 603,
	474, 1761,
	477, 1761,
	-2, 711,
	-1, 604,
	474, 1760,
	477, 1760,
	-2, 712,
	-1, 605,
	477, 1697,
	-2, 713,
	-1, 647,
	437, 911,
	-2, 749,
	-1, 751,
	307, 638,
	358, 638,
	-2, 0,
	-1, 752,
	307, 637,
	358, 637,
	-2, 585,
	-1, 756,
	1, 667,
	471, 667,
	473, 667,
	475, 667,
	-2, 0,
	-1, 757,
	1, 709,
	154, 709,
	471, 709,
	473, 709,
	475, 709,
	-2, 0,
	-1, 765,
	1, 641,
	471, 641,
	473, 641,
	475, 641,
	-2, 0,
	-1, 768,
	1, 667,
	471, 667,
	473, 667,
	475, 667,
	-2, 0,
	-1, 769,
	1, 669,
	471, 669,
	473, 669,
	475, 669,
	-2, 0,
	-1, 770,
	1, 672,
	471, 672,
	473, 672,
	475, 672,
	-2, 0,
	-1, 775,
	1, 688,
	471, 688,
	473, 688,
	475, 688,
	-2, 0,
	-1, 776,
	1, 690,
	471, 690,
	473, 690,
	475, 690,
	-2, 0,
	-1, 819,
	141, 1113,
	154, 1113,
	229, 1113,
	267, 1113,
	-2, 1054,
	-1, 832,
	141, 1112,
	154, 1112,
	229, 1112,
	267, 1112,
	-2, 1051,
	-1, 856,
	474, 1758,
	-2, 510,
	-1, 884,
	472, 1750,
	-2, 1741,
	-1, 890,
	5, 1253,
	-2, 1792,
	-1, 891,
	5, 1254,
	-2, 1798,
	-1, 892,
	5, 1255,
	-2, 1797,
	-1, 893,
	5, 1256,
	-2, 2018,
	-1, 894,
	5, 1257,
	-2, 1908,
	-1, 895,
	5, 1258,
	-2, 1983,
	-1, 896,
	5, 1259,
	-2, 1985,
	-1, 897,
	5, 1260,
	-2, 1998,
	-1, 898,
	5, 1261,
	-2, 1986,
	-1, 899,
	5, 1262,
	-2, 1987,
	-1, 900,
	5, 1263,
	-2, 1791,
	-1, 901,
	5, 1264,
	-2, 2035,
	-1, 902,
	5, 1265,
	-2, 1868,
	-1, 903,
	5, 1266,
	-2, 1920,
	-1, 904,
	5, 1267,
	-2, 1922,
	-1, 905,
	5, 1268,
	-2, 1872,
	-1, 906,
	5, 1269,
	472, 1768,
	-2, 1759,
	-1, 912,
	472, 1769,
	-2, 1760,
	-1, 914,
	5, 1273,
	-2, 2068,
	-1, 915,
	5, 1274,
	-2, 2069,
	-1, 916,
	5, 1275,
	-2, 1871,
	-1, 917,
	5, 1276,
	-2, 2081,
	-1, 918,
	5, 1277,
	-2, 1873,
	-1, 919,
	5, 1278,
	-2, 1874,
	-1, 920,
	5, 1279,
	-2, 1875,
	-1, 921,
	5, 1280,
	-2, 2050,
	-1, 922,
	5, 1281,
	-2, 2079,
	-1, 923,
	5, 1282,
	-2, 1851,
	-1, 924,
	5, 1283,
	-2, 1852,
	-1, 925,
	5, 1297,
	-2, 2062,
	-1, 927,
	5, 1272,
	-2, 2058,
	-1, 928,
	5, 1272,
	-2, 2057,
	-1, 929,
	5, 1272,
	-2, 2074,
	-1, 930,
	5, 1289,
	-2, 2052,
	-1, 931,
	5, 1290,
	-2, 1793,
	-1, 932,
	5, 1300,
	-2, 2051,
	-1, 933,
	5, 1302,
	-2, 2090,
	-1, 935,
	5, 1313,
	-2, 1825,
	-1, 936,
	5, 1324,
	-2, 2083,
	-1, 937,
	5, 1316,
	-2, 2084,
	-1, 938,
	5, 1324,
	-2, 2085,
	-1, 939,
	5, 1320,
	-2, 2086,
	-1, 940,
	5, 1241,
	-2, 1881,
	-1, 941,
	5, 1242,
	-2, 1882,
	-1, 942,
	474, 1756,
	-2, 1740,
	-1, 943,
	472, 2111,
	-2, 1757,
	-1, 965,
	5, 1308,
	-2, 2009,
	-1, 983,
	5, 1307,
	-2, 2091,
	-1, 993,
	5, 1309,
	438, 1309,
	-2, 2053,
	-1, 994,
	5, 1310,
	438, 1310,
	-2, 2054,
	-1, 1031,
	472, 1768,
	-2, 1759,
	-1, 1059,
	157, 2021,
	402, 2021,
	455, 2021,
	474, 2021,
	-2, 0,
	-1, 1062,
	1, 488,
	475, 488,
	-2, 989,
	-1, 1182,
	322, 1737,
	465, 1737,
	-2, 1735,
	-1, 1194,
	476, 1737,
	-2, 1738,
	-1, 1195,
	1, 908,
	471, 908,
	473, 908,
	475, 908,
	-2, 1100,
	-1, 1243,
	313, 748,
	437, 748,
	-2, 246,
	-1, 1266,
	1, 908,
	471, 908,
	473, 908,
	475, 908,
	-2, 1100,
	-1, 1272,
	271, 1763,
	-2, 0,
	-1, 1335,
	1, 363,
	471, 363,
	473, 363,
	475, 363,
	-2, 1074,
	-1, 1338,
	4, 2089,
	11, 2089,
	12, 2089,
	14, 2089,
	15, 2089,
	16, 2089,
	17, 2089,
	18, 2089,
	19, 2089,
	21, 2089,
	22, 2089,
	23, 2089,
	24, 2089,
	25, 2089,
	27, 2089,
	30, 2089,
	31, 2089,
	33, 2089,
	35, 2089,
	38, 2089,
	39, 2089,
	40, 2089,
	41, 2089,
	42, 2089,
	43, 2089,
	44, 2089,
	45, 2089,
	46, 2089,
	47, 2089,
	48, 2089,
	49, 2089,
	50, 2089,
	52, 2089,
	53, 2089,
	54, 2089,
	55, 2089,
	56, 2089,
	57, 2089,
	58, 2089,
	61, 2089,
	62, 2089,
	63, 2089,
	64, 2089,
	66, 2089,
	67, 2089,
	68, 2089,
	71, 2089,
	72, 2089,
	73, 2089,
	74, 2089,
	75, 2089,
	76, 2089,
	77, 2089,
	78, 2089,
	79, 2089,
	80, 2089,
	81, 2089,
	83, 2089,
	84, 2089,
	85, 2089,
	86, 2089,
	87, 2089,
	89, 2089,
	90, 2089,
	91, 2089,
	92, 2089,
	100, 2089,
	101, 2089,
	102, 2089,
	103, 2089,
	104, 2089,
	105, 2089,
	106, 2089,
	107, 2089,
	109, 2089,
	111, 2089,
	112, 2089,
	114, 2089,
	117, 2089,
	118, 2089,
	119, 2089,
	121, 2089,
	123, 2089,
	124, 2089,
	126, 2089,
	127, 2089,
	128, 2089,
	129, 2089,
	130, 2089,
	131, 2089,
	132, 2089,
	133, 2089,
	134, 2089,
	135, 2089,
	136, 2089,
	137, 2089,
	138, 2089,
	142, 2089,
	143, 2089,
	144, 2089,
	145, 2089,
	146, 2089,
	147, 2089,
	148, 2089,
	149, 2089,
	150, 2089,
	151, 2089,
	152, 2089,
	153, 2089,
	155, 2089,
	158, 2089,
	159, 2089,
	160, 2089,
	162, 2089,
	163, 2089,
	165, 2089,
	166, 2089,
	168, 2089,
	169, 2089,
	170, 2089,
	171, 2089,
	172, 2089,
	173, 2089,
	174, 2089,
	175, 2089,
	176, 2089,
	177, 2089,
	178, 2089,
	179, 2089,
	180, 2089,
	181, 2089,
	182, 2089,
	183, 2089,
	184, 2089,
	186, 2089,
	187, 2089,
	188, 2089,
	190, 2089,
	191, 2089,
	192, 2089,
	193, 2089,
	194, 2089,
	195, 2089,
	196, 2089,
	197, 2089,
	198, 2089,
	200, 2089,
	202, 2089,
	203, 2089,
	204, 2089,
	205, 2089,
	206, 2089,
	207, 2089,
	208, 2089,
	209, 2089,
	210, 2089,
	211, 2089,
	212, 2089,
	213, 2089,
	214, 2089,
	215, 2089,
	216, 2089,
	217, 2089,
	218, 2089,
	220, 2089,
	221, 2089,
	223, 2089,
	224, 2089,
	225, 2089,
	226, 2089,
	227, 2089,
	228, 2089,
	230, 2089,
	231, 2089,
	234, 2089,
	235, 2089,
	236, 2089,
	237, 2089,
	238, 2089,
	239, 2089,
	240, 2089,
	241, 2089,
	242, 2089,
	243, 2089,
	244, 2089,
	245, 2089,
	246, 2089,
	247, 2089,
	248, 2089,
	249, 2089,
	250, 2089,
	251, 2089,
	252, 2089,
	253, 2089,
	254, 2089,
	256, 2089,
	259, 2089,
	260, 2089,
	262, 2089,
	263, 2089,
	264, 2089,
	265, 2089,
	266, 2089,
	268, 2089,
	269, 2089,
	270, 2089,
	273, 2089,
	274, 2089,
	275, 2089,
	276, 2089,
	278, 2089,
	279, 2089,
	280, 2089,
	282, 2089,
	284, 2089,
	285, 2089,
	286, 2089,
	287, 2089,
	288, 2089,
	289, 2089,
	290, 2089,
	291, 2089,
	292, 2089,
	293, 2089,
	295, 2089,
	296, 2089,
	297, 2089,
	298, 2089,
	299, 2089,
	300, 2089,
	301, 2089,
	303, 2089,
	305, 2089,
	306, 2089,
	307, 2089,
	308, 2089,
	309, 2089,
	310, 2089,
	311, 2089,
	312, 2089,
	313, 2089,
	314, 2089,
	316, 2089,
	317, 2089,
	318, 2089,
	319, 2089,
	320, 2089,
	321, 2089,
	322, 2089,
	323, 2089,
	324, 2089,
	325, 2089,
	326, 2089,
	327, 2089,
	328, 2089,
	329, 2089,
	331, 2089,
	332, 2089,
	333, 2089,
	334, 2089,
	335, 2089,
	336, 2089,
	337, 2089,
	338, 2089,
	339, 2089,
	340, 2089,
	341, 2089,
	342, 2089,
	343, 2089,
	344, 2089,
	345, 2089,
	346, 2089,
	347, 2089,
	349, 2089,
	350, 2089,
	351, 2089,
	352, 2089,
	353, 2089,
	354, 2089,
	355, 2089,
	356, 2089,
	357, 2089,
	358, 2089,
	360, 2089,
	361, 2089,
	362, 2089,
	363, 2089,
	364, 2089,
	365, 2089,
	366, 2089,
	367, 2089,
	368, 2089,
	369, 2089,
	370, 2089,
	372, 2089,
	373, 2089,
	374, 2089,
	375, 2089,
	376, 2089,
	377, 2089,
	378, 2089,
	379, 2089,
	380, 2089,
	381, 2089,
	382, 2089,
	383, 2089,
	385, 2089,
	386, 2089,
	387, 2089,
	389, 2089,
	390, 2089,
	391, 2089,
	392, 2089,
	393, 2089,
	394, 2089,
	395, 2089,
	397, 2089,
	398, 2089,
	399, 2089,
	400, 2089,
	401, 2089,
	403, 2089,
	405, 2089,
	406, 2089,
	407, 2089,
	408, 2089,
	409, 2089,
	411, 2089,
	412, 2089,
	413, 2089,
	415, 2089,
	416, 2089,
	419, 2089,
	420, 2089,
	421, 2089,
	422, 2089,
	423, 2089,
	424, 2089,
	425, 2089,
	427, 2089,
	429, 2089,
	430, 2089,
	431, 2089,
	432, 2089,
	433, 2089,
	434, 2089,
	435, 2089,
	437, 2089,
	438, 2089,
	439, 2089,
	444, 2089,
	445, 2089,
	446, 2089,
	447, 2089,
	448, 2089,
	449, 2089,
	450, 2089,
	451, 2089,
	453, 2089,
	454, 2089,
	455, 2089,
	456, 2089,
	457, 2089,
	458, 2089,
	460, 2089,
	461, 2089,
	462, 2089,
	463, 2089,
	464, 2089,
	465, 2089,
	466, 2089,
	467, 2089,
	468, 2089,
	470, 2089,
	473, 2089,
	474, 2089,
	476, 2089,
	477, 2089,
	-2, 0,
	-1, 1344,
	157, 1991,
	402, 1991,
	455, 1991,
	474, 1991,
	-2, 0,
	-1, 1376,
	307, 638,
	358, 638,
	-2, 0,
	-1, 1400,
	1, 633,
	471, 633,
	473, 633,
	475, 633,
	-2, 0,
	-1, 1401,
	1, 658,
	471, 658,
	473, 658,
	475, 658,
	-2, 0,
	-1, 1402,
	1, 640,
	471, 640,
	473, 640,
	475, 640,
	-2, 0,
	-1, 1404,
	1, 644,
	471, 644,
	473, 644,
	475, 644,
	-2, 0,
	-1, 1431,
	1, 2042,
	471, 2042,
	473, 2042,
	474, 2042,
	475, 2042,
	-2, 686,
	-1, 1432,
	1, 1988,
	471, 1988,
	473, 1988,
	474, 1988,
	475, 1988,
	-2, 687,
	-1, 1447,
	1, 984,
	475, 984,
	-2, 989,
	-1, 1450,
	141, 1112,
	154, 1112,
	229, 1112,
	267, 1112,
	-2, 1055,
	-1, 1544,
	125, 1076,
	141, 1076,
	154, 1076,
	199, 1076,
	229, 1076,
	267, 1076,
	277, 1076,
	417, 1076,
	-2, 1483,
	-1, 1601,
	473, 1631,
	-2, 0,
	-1, 1635,
	125, 1076,
	141, 1076,
	154, 1076,
	199, 1076,
	229, 1076,
	267, 1076,
	277, 1076,
	417, 1076,
	-2, 1191,
	-1, 1694,
	472, 1312,
	-2, 1300,
	-1, 1738,
	1, 490,
	475, 490,
	-2, 989,
	-1, 1943,
	1, 635,
	471, 635,
	473, 635,
	475, 635,
	-2, 0,
	-1, 1944,
	1, 660,
	471, 660,
	473, 660,
	475, 660,
	-2, 0,
	-1, 2016,
	337, 1137,
	338, 1137,
	-2, 1345,
	-1, 2047,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1363,
	-1, 2048,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1364,
	-1, 2049,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1365,
	-1, 2050,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1366,
	-1, 2051,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1367,
	-1, 2052,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1368,
	-1, 2053,
	84, 0,
	212, 0,
	213, 0,
	457, 0,
	458, 0,
	-2, 1369,
	-1, 2054,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1370,
	-1, 2066,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1382,
	-1, 2067,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1383,
	-1, 2068,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1384,
	-1, 2071,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1389,
	-1, 2077,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1393,
	-1, 2079,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1401,
	-1, 2080,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1402,
	-1, 2081,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1403,
	-1, 2082,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1404,
	-1, 2184,
	5, 1269,
	157, 1642,
	472, 1768,
	-2, 1759,
	-1, 2185,
	157, 1643,
	-2, 2046,
	-1, 2186,
	157, 1644,
	-2, 1905,
	-1, 2187,
	157, 1645,
	-2, 1826,
	-1, 2188,
	157, 1646,
	-2, 1862,
	-1, 2189,
	157, 1647,
	-2, 1903,
	-1, 2190,
	157, 1648,
	-2, 1982,
	-1, 2191,
	157, 1649,
	-2, 1466,
	-1, 2260,
	1, 1192,
	2, 1192,
	90, 1192,
	125, 1192,
	141, 1192,
	154, 1192,
	158, 1192,
	164, 1192,
	167, 1192,
	190, 1192,
	199, 1192,
	209, 1192,
	225, 1192,
	229, 1192,
	249, 1192,
	267, 1192,
	271, 1192,
	277, 1192,
	330, 1192,
	332, 1192,
	417, 1192,
	428, 1192,
	441, 1192,
	442, 1192,
	443, 1192,
	452, 1192,
	471, 1192,
	473, 1192,
	475, 1192,
	477, 1192,
	-2, 1191,
	-1, 2273,
	472, 1742,
	-2, 1754,
	-1, 2293,
	472, 1311,
	-2, 1301,
	-1, 2394,
	1, 908,
	471, 908,
	473, 908,
	475, 908,
	-2, 1100,
	-1, 2546,
	272, 1140,
	-2, 2080,
	-1, 2547,
	272, 1141,
	-2, 1971,
	-1, 2551,
	337, 1708,
	338, 1708,
	-2, 1464,
	-1, 2552,
	337, 1712,
	338, 1712,
	-2, 1465,
	-1, 2553,
	337, 1709,
	338, 1709,
	-2, 1464,
	-1, 2554,
	337, 1713,
	338, 1713,
	-2, 1465,
	-1, 2567,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1391,
	-1, 2568,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1395,
	-1, 2574,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1397,
	-1, 2763,
	206, 989,
	303, 989,
	311, 989,
	452, 989,
	-2, 487,
	-1, 2861,
	1, 908,
	471, 908,
	473, 908,
	475, 908,
	-2, 1100,
	-1, 2950,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1399,
	-1, 2957,
	203, 0,
	205, 0,
	259, 0,
	-2, 1418,
	-1, 3021,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1447,
	-1, 3022,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1448,
	-1, 3023,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1449,
	-1, 3027,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1453,
	-1, 3028,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1454,
	-1, 3029,
	14, 0,
	15, 0,
	16, 0,
	453, 0,
	454, 0,
	455, 0,
	-2, 1455,
	-1, 3073,
	472, 1743,
	-2, 1755,
	-1, 3165,
	474, 2193,
	-2, 1033,
	-1, 3215,
	203, 0,
	205, 0,
	259, 0,
	-2, 1419,
	-1, 3218,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1422,
	-1, 3219,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1424,
	-1, 3384,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1423,
	-1, 3385,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 1425,
	-1, 3395,
	203, 0,
	-2, 1456,
	-1, 3509,
	203, 0,
	-2, 1457,
	-1, 3643,
	43, 0,
	176, 0,
	228, 0,
	365, 0,
	450, 0,
	456, 0,
	-2, 2049,
}

const sqlPrivate = 57344

const sqlLast = 84749

var sqlAct = [...]int{

	912, 3427, 3453, 3757, 3424, 3642, 3530, 3653, 3742, 2694,
	3590, 3545, 3654, 3609, 3413, 3320, 2216, 3655, 2847, 3606,
	3619, 2447, 3696, 3460, 1032, 2989, 3641, 3513, 2695, 3349,
	2034, 1330, 3373, 1198, 3157, 3152, 2876, 3198, 1830, 213,
	3469, 213, 213, 2325, 213, 213, 213, 213, 213, 842,
	857, 213, 2780, 3333, 3277, 1669, 2094, 2869, 833, 604,
	1459, 3354, 2843, 3137, 579, 1641, 2942, 3399, 3094, 2871,
	1087, 2436, 1789, 2420, 2560, 213, 2479, 2481, 2489, 604,
	2709, 2423, 1917, 2411, 1214, 2680, 2383, 2700, 2737, 3197,
	1873, 1876, 2717, 697, 2478, 1024, 2470, 2698, 1610, 3093,
	1670, 1826, 3250, 2448, 1384, 2472, 884, 1326, 1825, 2679,
	2327, 1798, 2253, 3044, 4, 2250, 3514, 1572, 2031, 841,
	141, 2107, 1179, 2595, 2027, 2544, 1552, 1187, 2488, 1259,
	3454, 2385, 1814, 2395, 1821, 2421, 1075, 2136, 1774, 908,
	2255, 2360, 1447, 1776, 2743, 2234, 1611, 2252, 2127, 1829,
	2091, 1896, 1996, 84, 1764, 2015, 1352, 1313, 2213, 1998,
	2138, 1323, 2845, 1200, 1336, 2441, 1630, 205, 1264, 1859,
	1018, 207, 1064, 605, 606, 2482, 213, 213, 547, 2317,
	2130, 533, 1620, 1535, 1460, 555, 2224, 1184, 690, 206,
	2242, 997, 1461, 141, 2180, 1997, 563, 1999, 148, 600,
	1858, 2108, 1334, 1287, 573, 149, 1567, 1014, 1627, 1351,
	672, 1882, 647, 1211, 1788, 32, 550, 2020, 2361, 869,
	37, 1020, 36, 34, 558, 25, 1466, 23, 21, 995,
	609, 746, 763, 1446, 1269, 3058, 2591, 3059, 2696, 3790,
	3780, 2233, 1898, 2233, 2233, 1898, 837, 3779, 612, 1898,
	609, 2233, 3752, 3732, 3730, 3679, 1835, 3291, 3291, 3680,
	3677, 3675, 3672, 3669, 2233, 2233, 3673, 3670, 612, 837,
	1001, 1012, 1002, 832, 2885, 1015, 1474, 1475, 708, 1507,
	1508, 1509, 1517, 1518, 1519, 3664, 2886, 3639, 3638, 1835,
	1030, 1835, 1835, 2652, 2653, 1510, 1505, 3637, 3634, 2761,
	3585, 1910, 1910, 1477, 838, 3633, 3604, 3584, 1523, 1910,
	3291, 2288, 1474, 1475, 934, 3578, 998, 998, 3577, 2233,
	3572, 3571, 2233, 3565, 3291, 3291, 3559, 1835, 2226, 3495,
	3291, 3557, 1505, 1476, 3511, 3291, 1049, 3492, 2288, 1477,
	820, 1835, 1496, 3048, 3489, 1072, 3462, 819, 3291, 1493,
	3463, 3443, 3442, 3434, 3433, 1835, 1835, 1835, 3291, 3405,
	3386, 3371, 3362, 1835, 2288, 1910, 2899, 3318, 3309, 1476,
	3048, 2233, 2233, 3290, 57, 1072, 3217, 3291, 3173, 827,
	2288, 3167, 2915, 3135, 2225, 2915, 3068, 3136, 58, 3066,
	3069, 3051, 2973, 3067, 2969, 2233, 1835, 2914, 2233, 2906,
	1925, 2915, 1910, 2907, 62, 2284, 999, 1499, 1500, 1501,
	1502, 2693, 2691, 1044, 2690, 2233, 2233, 1482, 2233, 2644,
	2623, 2606, 2604, 2233, 2624, 2233, 2468, 2467, 2605, 2397,
	1913, 1913, 2301, 1910, 2658, 67, 2233, 3310, 1835, 1835,
	2907, 1514, 2652, 2653, 1524, 2374, 2233, 2379, 1504, 1506,
	2287, 2282, 2275, 1482, 2288, 2233, 1835, 2232, 1912, 1232,
	181, 2233, 1913, 2316, 1793, 1744, 72, 1897, 1520, 2594,
	1521, 2899, 2417, 2559, 1834, 2314, 83, 1491, 1492, 1606,
	1210, 73, 80, 3121, 1504, 1506, 2945, 2887, 1045, 2923,
	1628, 1824, 1386, 1512, 2269, 2268, 2267, 2266, 2265, 1003,
	183, 691, 1000, 1497, 826, 825, 2888, 3266, 2667, 1543,
	824, 823, 1899, 2652, 2653, 1899, 2670, 2671, 2672, 1899,
	2668, 822, 181, 2524, 1522, 74, 57, 694, 693, 818,
	817, 816, 815, 814, 813, 812, 811, 810, 213, 1497,
	58, 1511, 809, 808, 807, 182, 806, 805, 744, 2652,
	2653, 695, 2670, 2671, 2672, 175, 62, 743, 742, 741,
	2652, 2653, 183, 176, 740, 739, 213, 738, 3213, 737,
	736, 735, 181, 213, 734, 733, 732, 731, 730, 2667,
	729, 728, 727, 2658, 150, 726, 1503, 67, 725, 213,
	1090, 213, 213, 213, 1090, 213, 1203, 724, 723, 722,
	1203, 721, 720, 719, 1498, 718, 2885, 182, 213, 213,
	717, 706, 183, 1068, 705, 2667, 663, 3229, 72, 1045,
	2286, 2669, 624, 623, 615, 614, 613, 1074, 83, 1231,
	1515, 1079, 213, 73, 80, 73, 868, 586, 585, 75,
	1498, 584, 583, 567, 203, 213, 150, 213, 2225, 1203,
	213, 213, 202, 213, 2658, 201, 1045, 182, 200, 2652,
	2653, 1906, 3062, 213, 1897, 199, 2916, 175, 1991, 2668,
	213, 198, 197, 147, 78, 176, 79, 74, 196, 195,
	194, 193, 192, 191, 213, 213, 213, 213, 213, 1203,
	2658, 190, 189, 1203, 188, 181, 150, 213, 1203, 213,
	213, 2658, 1190, 187, 186, 1088, 185, 696, 1203, 1188,
	184, 117, 2740, 2617, 213, 1513, 1543, 1062, 1488, 1489,
	1495, 1516, 1494, 1490, 2600, 1487, 1485, 1486, 1478, 1479,
	1480, 1481, 1483, 1484, 1403, 183, 2429, 1226, 3239, 1631,
	2668, 2673, 3238, 2661, 2662, 2654, 2655, 2656, 2657, 2659,
	2660, 1203, 2401, 2276, 2259, 1920, 1206, 2171, 118, 1182,
	2157, 1473, 1194, 1486, 1478, 1479, 1480, 1481, 1483, 1484,
	2669, 1772, 151, 1654, 1561, 213, 2668, 1057, 2133, 609,
	182, 1213, 1212, 1216, 1081, 2155, 1034, 2668, 1554, 213,
	175, 75, 3660, 911, 3640, 1575, 3552, 612, 176, 3504,
	2658, 1574, 3423, 3363, 3270, 181, 3498, 1356, 1339, 1341,
	1343, 3249, 3496, 141, 141, 141, 3248, 1270, 1270, 150,
	1559, 1575, 1578, 2347, 1919, 147, 78, 1574, 79, 3236,
	1068, 3358, 3235, 1068, 1219, 3234, 1224, 3233, 1230, 3228,
	1274, 2669, 1317, 1320, 2134, 183, 838, 181, 1573, 181,
	3225, 3224, 3134, 3082, 1194, 3141, 1337, 1011, 3081, 696,
	3119, 3080, 3072, 117, 1083, 117, 1176, 1181, 3041, 3040,
	1290, 3039, 2965, 1413, 2961, 1327, 2910, 2669, 1451, 2735,
	2687, 1220, 2678, 2651, 2648, 1271, 2668, 183, 2669, 183,
	182, 2663, 2661, 2662, 2654, 2655, 2656, 2657, 2659, 2660,
	175, 2647, 2645, 2630, 2290, 2629, 2628, 1225, 176, 2625,
	118, 2444, 2622, 2616, 2599, 2592, 2469, 2135, 2132, 1350,
	2260, 1555, 2430, 1553, 151, 2120, 1473, 1355, 840, 150,
	1554, 1870, 182, 1840, 182, 1838, 1472, 3787, 3751, 3750,
	1542, 3678, 175, 1450, 175, 1033, 2991, 910, 181, 3629,
	176, 3627, 176, 3544, 3541, 2664, 2665, 2666, 3538, 3537,
	3536, 3529, 2663, 2661, 2662, 2654, 2655, 2656, 2657, 2659,
	2660, 692, 3523, 150, 1649, 3493, 3488, 1027, 3487, 1361,
	2097, 1404, 3439, 3419, 3397, 1377, 3381, 2669, 183, 2652,
	2653, 2664, 2665, 2666, 3380, 3368, 3367, 213, 2663, 2661,
	2662, 2654, 2655, 2656, 2657, 2659, 2660, 2652, 2653, 2663,
	2661, 2662, 2654, 2655, 2656, 2657, 2659, 2660, 3347, 3344,
	2137, 2755, 3337, 1608, 213, 3265, 3247, 1617, 1448, 1456,
	838, 1455, 3357, 182, 213, 1090, 213, 213, 213, 213,
	820, 3187, 3184, 175, 604, 213, 213, 819, 3110, 604,
	213, 176, 3109, 3097, 3096, 213, 1577, 1664, 3140, 3054,
	1452, 1203, 1469, 1470, 1445, 2103, 2956, 1539, 2917, 2900,
	2863, 2827, 150, 1736, 2806, 2652, 2653, 2783, 2782, 2756,
	181, 2692, 1090, 181, 2621, 2428, 2620, 2615, 2583, 2410,
	1579, 1576, 1568, 1565, 1741, 1474, 1475, 867, 1068, 2295,
	2294, 2271, 2264, 2231, 1614, 1615, 2153, 1638, 1653, 1609,
	2662, 2654, 2655, 2656, 2657, 2659, 2660, 1605, 1656, 1735,
	183, 2131, 1477, 183, 1030, 1770, 1030, 1474, 1475, 1666,
	2658, 1026, 1604, 1603, 1733, 1569, 1570, 998, 1602, 1921,
	1601, 141, 1600, 1599, 1661, 2297, 1662, 1598, 2658, 1597,
	1657, 181, 1476, 1595, 1477, 1594, 1593, 1592, 1591, 1590,
	1589, 1588, 1587, 2783, 1586, 182, 1585, 1584, 182, 1583,
	1582, 1581, 1405, 838, 1556, 175, 1540, 1660, 175, 1538,
	3515, 2732, 1533, 176, 1476, 1056, 176, 1639, 1047, 1040,
	1636, 183, 3340, 3267, 3221, 3078, 3065, 1773, 3057, 2603,
	2262, 3408, 1738, 1793, 150, 3748, 1194, 150, 3269, 1203,
	1203, 213, 3077, 1555, 1782, 609, 2658, 1090, 2753, 1536,
	609, 2652, 2653, 1658, 1629, 1763, 1607, 181, 2170, 3741,
	3312, 2156, 1763, 612, 1763, 1078, 182, 1645, 612, 1633,
	1831, 1072, 1648, 1665, 1647, 1646, 175, 1644, 1732, 1643,
	1642, 3539, 3499, 2809, 176, 213, 2154, 1811, 3497, 213,
	1813, 3470, 1667, 1818, 213, 2872, 1076, 183, 1482, 3465,
	1631, 3464, 3422, 213, 181, 2443, 3361, 2365, 1590, 3311,
	1590, 1028, 213, 3060, 213, 2902, 213, 1560, 1077, 2901,
	213, 1766, 1761, 1756, 3144, 1575, 1474, 1475, 1443, 1750,
	3108, 1574, 2668, 1072, 213, 2627, 2626, 1069, 1474, 1475,
	1072, 1376, 182, 2133, 183, 1797, 2565, 2349, 1073, 1739,
	1563, 1822, 175, 1477, 803, 1918, 1385, 1010, 1505, 1063,
	176, 2849, 1836, 2848, 3461, 1477, 3665, 3652, 1386, 3400,
	2291, 1203, 1827, 1203, 3124, 213, 1203, 3112, 2921, 213,
	3758, 150, 2696, 1476, 1203, 2993, 3661, 1203, 213, 182,
	213, 213, 1696, 2609, 804, 1476, 1832, 2128, 1871, 175,
	1203, 1203, 1203, 2293, 213, 1868, 1879, 176, 1596, 2134,
	1571, 213, 609, 2841, 1213, 1212, 1863, 1414, 1867, 1247,
	604, 213, 3674, 213, 3671, 213, 2881, 213, 150, 213,
	612, 3089, 3531, 2669, 1070, 1817, 1755, 1754, 1365, 3602,
	1763, 1765, 1071, 213, 3662, 3153, 213, 3520, 213, 3103,
	2476, 2440, 2834, 3713, 1833, 3712, 3564, 2937, 836, 213,
	1887, 1866, 2765, 3301, 1235, 1245, 2302, 1482, 1939, 801,
	2386, 1977, 1923, 2656, 2657, 2659, 2660, 799, 797, 1482,
	213, 1935, 2135, 2132, 213, 1850, 1849, 1975, 795, 2654,
	2655, 2656, 2657, 2659, 2660, 1790, 2767, 3784, 2329, 1901,
	792, 3452, 1903, 3445, 1751, 1905, 786, 1090, 2006, 1908,
	1504, 1506, 3126, 3123, 2754, 1881, 2922, 3122, 2006, 1290,
	3086, 1884, 3085, 1884, 838, 1786, 838, 1885, 2614, 1889,
	1890, 1924, 835, 2149, 1337, 2613, 1337, 1246, 659, 2612,
	1758, 1078, 2611, 2569, 2320, 2004, 1791, 1792, 1995, 2381,
	2373, 2008, 2372, 1069, 2352, 2004, 2318, 2654, 2655, 2656,
	2657, 2659, 2660, 1069, 2283, 1497, 2078, 1449, 1209, 2148,
	1411, 1078, 1412, 1914, 1787, 1915, 2036, 1929, 846, 1057,
	2437, 1358, 1484, 1072, 2320, 2137, 2109, 2110, 1928, 2332,
	1363, 609, 1090, 1926, 1077, 3379, 2318, 2808, 1989, 1280,
	211, 1279, 2109, 2125, 1933, 2032, 2033, 1254, 1988, 612,
	837, 1480, 1481, 1483, 1484, 2002, 2388, 660, 1649, 1957,
	3563, 1278, 2035, 1277, 1077, 789, 1990, 1301, 1241, 2309,
	3429, 2351, 1760, 2387, 2389, 2340, 2274, 213, 1950, 1037,
	2542, 3631, 2179, 1454, 2183, 2183, 2197, 1985, 2109, 2019,
	1070, 2217, 2219, 2093, 1848, 1410, 2223, 2005, 1071, 1090,
	1070, 213, 1799, 1759, 2557, 2339, 1498, 2005, 1071, 2101,
	213, 1035, 2392, 1422, 2007, 2099, 1992, 1994, 1886, 1993,
	2000, 1359, 213, 1803, 2093, 1090, 2131, 1943, 2928, 1400,
	2369, 1987, 1947, 3099, 2927, 820, 1942, 2305, 820, 820,
	2272, 2521, 2023, 2199, 3725, 2024, 2025, 2140, 2660, 2307,
	2362, 2363, 2124, 2128, 1672, 1055, 2003, 2362, 2363, 2362,
	2363, 1951, 838, 3313, 1378, 1265, 2003, 1800, 3724, 2089,
	3736, 2137, 2281, 838, 2982, 2331, 545, 838, 1944, 2239,
	1401, 2308, 1619, 1777, 715, 2247, 3761, 1778, 2105, 2878,
	834, 3701, 856, 2087, 1038, 1638, 2306, 1374, 1030, 2146,
	540, 1263, 3203, 3712, 2147, 213, 3202, 2150, 1243, 2151,
	2152, 2556, 2820, 1203, 1030, 1442, 2814, 998, 1478, 1479,
	1480, 1481, 1483, 1484, 2527, 2549, 2550, 2122, 1485, 1486,
	1478, 1479, 1480, 1481, 1483, 1484, 2238, 1386, 3378, 1072,
	2273, 1777, 3737, 1090, 2764, 1778, 1741, 1804, 213, 1072,
	1623, 2393, 1068, 2285, 1810, 1795, 213, 2261, 141, 1696,
	1696, 838, 3532, 2192, 2246, 3297, 2251, 213, 2221, 2257,
	2258, 2229, 2230, 2208, 2350, 2240, 1793, 2137, 1636, 1779,
	213, 1027, 1626, 1027, 1409, 2244, 2245, 2979, 662, 661,
	1984, 2330, 1781, 3288, 213, 1090, 3658, 1265, 1386, 1203,
	2083, 1621, 2879, 2766, 1364, 213, 213, 2530, 1426, 1805,
	1806, 2084, 1577, 793, 1976, 2085, 3111, 1624, 1801, 2090,
	689, 793, 793, 3285, 2321, 657, 3278, 656, 213, 3739,
	1974, 213, 794, 587, 1986, 1767, 1768, 1779, 213, 1784,
	3276, 1622, 2300, 1566, 793, 3721, 3280, 1783, 2296, 213,
	1781, 1784, 1802, 1793, 1300, 1240, 2319, 213, 2315, 213,
	2980, 2878, 213, 2711, 1949, 3430, 3286, 2580, 213, 3375,
	2355, 213, 2830, 213, 3100, 213, 3614, 213, 213, 2354,
	213, 1203, 1203, 2299, 1203, 1362, 2303, 781, 781, 213,
	213, 2578, 213, 213, 1569, 1570, 1203, 1036, 3279, 3745,
	2451, 2382, 2370, 3773, 213, 1783, 3199, 1360, 1898, 831,
	831, 2529, 2414, 2464, 3295, 2751, 2364, 2366, 2367, 2368,
	213, 213, 213, 2324, 1625, 213, 3659, 213, 2333, 2336,
	213, 2526, 213, 592, 213, 1026, 2490, 1026, 3682, 2434,
	2571, 1807, 1453, 2075, 3391, 3683, 3543, 1182, 3329, 1784,
	1532, 790, 2398, 3700, 2100, 213, 213, 213, 213, 213,
	213, 1194, 213, 2137, 2086, 1777, 2119, 2619, 716, 1778,
	541, 2092, 3374, 2088, 2346, 3738, 609, 2492, 1213, 2399,
	2495, 2496, 2802, 2475, 2460, 782, 782, 1421, 2408, 2501,
	2502, 2503, 1946, 213, 612, 597, 1941, 2465, 2575, 2453,
	2418, 213, 141, 2378, 3657, 3582, 1808, 1784, 2243, 2511,
	2528, 2512, 1423, 2576, 1054, 3281, 594, 2581, 1812, 3282,
	2710, 2446, 3762, 2506, 542, 2403, 1623, 2405, 2457, 2509,
	2458, 2342, 2459, 2513, 2256, 2515, 837, 2517, 3296, 2461,
	2770, 2796, 2353, 852, 1194, 1194, 2494, 1337, 2466, 2497,
	3074, 2498, 2493, 2525, 2477, 2371, 1373, 1375, 1626, 3339,
	3284, 1779, 1784, 2532, 543, 2534, 544, 2462, 2442, 3288,
	3193, 2442, 1050, 3287, 1781, 3204, 2073, 2241, 2798, 2076,
	3376, 1672, 1672, 2939, 1696, 1028, 2795, 1028, 2540, 1194,
	213, 1780, 3743, 1624, 3546, 1820, 3656, 1388, 3699, 3285,
	2597, 2598, 3030, 2572, 3711, 2601, 2800, 3709, 2508, 1424,
	3330, 2548, 3245, 1619, 3476, 1819, 2538, 2514, 856, 2516,
	589, 2518, 856, 1194, 2539, 1194, 2320, 3681, 2072, 1783,
	1174, 783, 783, 3346, 1174, 2867, 2019, 2543, 2334, 2593,
	593, 2432, 3286, 1857, 1616, 1815, 2535, 1048, 3580, 1780,
	2558, 1043, 532, 1463, 3139, 1464, 2519, 2799, 3200, 2022,
	1794, 1752, 2577, 3767, 596, 2943, 1791, 1792, 3436, 3744,
	3435, 2579, 1463, 3774, 2602, 2744, 3283, 3581, 1899, 3417,
	591, 1623, 1425, 1749, 3519, 1458, 3088, 2868, 2978, 2860,
	2778, 2774, 2433, 2422, 1816, 2412, 2570, 1880, 1090, 3591,
	1625, 3746, 2689, 1869, 1862, 1844, 2940, 2235, 2012, 2703,
	2704, 1981, 1745, 1626, 1532, 3158, 3350, 213, 2705, 588,
	2409, 838, 213, 3205, 3547, 213, 3300, 1463, 213, 213,
	1090, 1784, 1621, 3299, 213, 1303, 3459, 2537, 3457, 3418,
	2788, 1462, 784, 784, 3031, 2608, 2785, 1090, 1624, 2356,
	2725, 1747, 3032, 1934, 213, 2784, 2563, 598, 616, 2541,
	1462, 3056, 3246, 2708, 1775, 2074, 712, 2707, 590, 213,
	1748, 1402, 1622, 2280, 2279, 2237, 2278, 2277, 2416, 1464,
	2236, 785, 785, 1286, 2715, 704, 835, 3525, 213, 213,
	213, 3281, 3425, 3206, 213, 3282, 3321, 213, 1464, 2713,
	2734, 2739, 2719, 1030, 213, 213, 1284, 213, 213, 213,
	2013, 1068, 1272, 2702, 714, 1462, 3766, 2911, 1030, 1878,
	2762, 213, 213, 213, 2396, 3718, 3455, 2741, 3599, 1273,
	213, 2771, 2772, 3588, 2768, 3415, 3284, 2738, 2749, 2684,
	2685, 2686, 2697, 213, 213, 2728, 2731, 2786, 1030, 3287,
	2790, 3251, 1090, 2760, 3594, 1625, 2712, 2787, 2335, 2752,
	2792, 2793, 2742, 1203, 2714, 2724, 1389, 3416, 3526, 2723,
	2775, 3426, 1090, 1780, 3548, 2726, 2727, 213, 3045, 2720,
	213, 213, 3298, 2144, 213, 1027, 1440, 1203, 213, 1438,
	213, 2357, 2358, 2746, 2747, 2748, 2779, 2729, 1203, 2730,
	2682, 1027, 3720, 213, 2813, 1418, 1672, 3676, 3540, 213,
	3396, 1416, 3244, 1399, 213, 2763, 213, 1782, 2859, 2874,
	3595, 2718, 1397, 213, 2846, 2757, 2758, 1395, 2759, 2811,
	2769, 2745, 1393, 2681, 3527, 2955, 1661, 1391, 2828, 1383,
	1381, 2722, 1282, 1782, 2919, 2837, 1203, 1203, 2836, 2646,
	2582, 2801, 3283, 2883, 213, 213, 2807, 2490, 213, 2413,
	2380, 2936, 2348, 617, 618, 2821, 2490, 2298, 2854, 2816,
	1655, 710, 711, 2835, 1652, 1822, 2819, 2817, 1441, 2823,
	1353, 2818, 1285, 1822, 1973, 2829, 2831, 2742, 2935, 1194,
	702, 703, 1458, 2523, 2522, 213, 2500, 1090, 213, 213,
	1090, 213, 2838, 2354, 2001, 1283, 1983, 1954, 2875, 1734,
	1866, 1580, 1357, 713, 1258, 2143, 3651, 1030, 3317, 2857,
	2721, 3308, 2898, 3587, 3274, 3156, 3149, 3106, 3104, 2803,
	2804, 2822, 3087, 2805, 213, 829, 3697, 781, 2870, 1026,
	2866, 1439, 2880, 2858, 1437, 2909, 2850, 2918, 2438, 2913,
	2427, 2889, 2896, 2897, 2419, 1026, 2882, 141, 141, 831,
	1417, 2824, 2825, 620, 619, 2826, 1415, 838, 1398, 2406,
	2933, 1090, 1911, 1696, 1909, 1174, 1907, 1396, 1904, 2891,
	2892, 2893, 1394, 2894, 2895, 1902, 1900, 1392, 1090, 2924,
	213, 2925, 1390, 2926, 1382, 1380, 2873, 1281, 1891, 830,
	1841, 1839, 1828, 1823, 1809, 1796, 1785, 2975, 2934, 2958,
	1696, 3481, 1188, 621, 622, 1088, 856, 1007, 2561, 942,
	791, 1467, 1174, 1663, 2930, 2967, 2968, 3713, 3622, 3370,
	3365, 3364, 2491, 1771, 1237, 782, 1972, 2320, 2320, 2938,
	3483, 1008, 2338, 3166, 1793, 1945, 1971, 1435, 1436, 2318,
	2337, 1970, 3621, 1952, 2941, 3302, 3534, 1379, 209, 3506,
	535, 536, 3252, 551, 535, 551, 561, 566, 1194, 2359,
	582, 2341, 595, 1471, 3714, 3042, 1474, 1475, 209, 3707,
	546, 2377, 1742, 2963, 2345, 2931, 2971, 2375, 2343, 1028,
	3740, 1474, 1475, 2376, 701, 2562, 2344, 3586, 209, 3556,
	213, 213, 2974, 2987, 3553, 1028, 2990, 2032, 3000, 3148,
	1468, 1090, 3138, 2996, 3071, 2994, 2445, 2997, 1477, 3061,
	2981, 2983, 2984, 2032, 3010, 2999, 557, 2222, 1737, 3007,
	1009, 1668, 213, 1476, 2750, 3034, 3765, 2652, 2653, 3555,
	648, 3009, 796, 798, 800, 688, 2985, 1367, 1476, 1474,
	1475, 2312, 2313, 1366, 3038, 2995, 1543, 1174, 2310, 2311,
	3035, 3226, 2139, 3076, 2312, 3052, 3053, 2310, 2145, 1420,
	3222, 3075, 1419, 2986, 1541, 3777, 3753, 3043, 3726, 213,
	3516, 783, 141, 3449, 1030, 1030, 3409, 3049, 3050, 3407,
	3336, 3268, 3190, 3113, 3183, 535, 535, 3172, 3151, 3133,
	3132, 3131, 3102, 209, 2890, 1203, 2864, 2862, 1203, 2505,
	2504, 2455, 3063, 2431, 3125, 2407, 3083, 2104, 3047, 1969,
	1968, 213, 1967, 1966, 1894, 1893, 3073, 1892, 1872, 213,
	1852, 1851, 1847, 1846, 1845, 1843, 1842, 1090, 213, 3129,
	1434, 1433, 1203, 3117, 1312, 1311, 1310, 1309, 3064, 1308,
	1307, 1306, 1305, 3118, 3120, 1304, 213, 1302, 1297, 1296,
	3145, 3091, 1295, 1294, 3168, 1293, 1253, 1252, 1696, 1251,
	213, 213, 1203, 1203, 1203, 3160, 213, 213, 213, 1250,
	1249, 213, 213, 1248, 3163, 213, 213, 3079, 1203, 3146,
	828, 3130, 784, 213, 1090, 1672, 1242, 1236, 1234, 2451,
	1233, 2354, 1053, 3162, 1052, 982, 889, 1743, 802, 788,
	3159, 3428, 3105, 1428, 3107, 71, 1090, 2779, 1244, 3191,
	1546, 1696, 1696, 3154, 1551, 635, 66, 3101, 643, 2490,
	3601, 785, 1672, 2794, 2384, 1953, 1387, 1696, 1696, 1955,
	3150, 2733, 2263, 3579, 3230, 3161, 2618, 3164, 3512, 3220,
	3390, 3147, 2142, 1562, 3170, 68, 877, 3179, 964, 3169,
	3328, 3327, 213, 1030, 3189, 3275, 3090, 3175, 1696, 3180,
	3181, 3185, 3182, 3186, 2480, 3174, 3325, 3324, 3188, 845,
	1093, 1753, 3216, 2016, 883, 1769, 1762, 2292, 2182, 3207,
	1027, 1676, 886, 1673, 3201, 1675, 1866, 888, 887, 1674,
	1564, 885, 3208, 1671, 3196, 1027, 2415, 2449, 1289, 767,
	1757, 2098, 2126, 2607, 1557, 858, 879, 1174, 2123, 1046,
	2716, 2877, 3070, 3356, 2011, 213, 651, 2649, 2129, 1039,
	2205, 1090, 2198, 1090, 2194, 1027, 2439, 1444, 1534, 2450,
	1080, 861, 2096, 1548, 2587, 2021, 2884, 2736, 2289, 3618,
	2026, 1856, 1333, 1006, 1005, 1004, 213, 213, 213, 3608,
	3605, 2844, 1746, 3243, 2304, 1526, 2851, 873, 213, 1193,
	2701, 2912, 1255, 3533, 1525, 213, 2391, 213, 2390, 3522,
	213, 213, 213, 1067, 1066, 1065, 2777, 3772, 3098, 180,
	2555, 1465, 1090, 213, 213, 1457, 177, 1090, 179, 3271,
	3272, 178, 1174, 3263, 3256, 3192, 3253, 213, 3332, 3257,
	3115, 213, 88, 35, 3258, 16, 116, 3260, 3303, 2200,
	213, 3259, 3254, 3255, 213, 1030, 115, 1090, 3264, 3304,
	1203, 1696, 114, 1030, 3273, 2738, 113, 112, 111, 110,
	3292, 105, 109, 108, 1026, 107, 1030, 106, 3262, 104,
	3322, 103, 3294, 102, 101, 100, 99, 1041, 213, 1026,
	98, 97, 96, 3352, 3305, 3306, 3293, 95, 94, 1174,
	1090, 93, 92, 91, 3315, 90, 89, 578, 575, 49,
	48, 87, 86, 3319, 3323, 1051, 15, 33, 13, 1026,
	1672, 3341, 582, 3355, 53, 1174, 3338, 3360, 3351, 54,
	1090, 3343, 12, 3353, 1027, 28, 29, 77, 209, 76,
	209, 209, 1185, 3348, 209, 27, 3316, 14, 26, 24,
	10, 8, 7, 30, 1640, 11, 146, 209, 1215, 145,
	144, 70, 143, 142, 69, 22, 9, 1090, 138, 3402,
	3377, 1696, 3369, 1672, 1672, 213, 3468, 213, 3143, 1090,
	213, 1239, 3387, 3382, 3366, 65, 140, 139, 213, 1672,
	1672, 1866, 137, 136, 1257, 135, 1262, 63, 134, 209,
	209, 133, 1185, 3398, 64, 132, 20, 5, 52, 3412,
	6, 213, 209, 3372, 2920, 1088, 81, 82, 31, 1299,
	1672, 61, 3403, 3404, 1028, 60, 59, 3406, 19, 3411,
	213, 51, 18, 209, 209, 209, 209, 1185, 213, 1028,
	170, 169, 168, 1174, 3458, 3388, 582, 213, 209, 209,
	167, 3410, 1203, 162, 3331, 161, 166, 3467, 213, 3432,
	3431, 3448, 164, 701, 3342, 163, 165, 160, 3472, 1028,
	172, 171, 174, 158, 154, 3446, 153, 157, 3471, 213,
	213, 2846, 3388, 3359, 159, 3478, 3456, 3450, 1026, 156,
	155, 3480, 152, 173, 2035, 1174, 56, 3502, 3503, 131,
	3466, 213, 3438, 130, 129, 128, 127, 126, 125, 55,
	17, 3479, 2, 1, 0, 0, 213, 0, 3485, 0,
	3477, 3355, 3484, 0, 209, 0, 0, 0, 0, 0,
	3518, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 3482, 3528, 3473, 0, 3486, 3475, 0, 3505,
	0, 0, 0, 3510, 3494, 3440, 3441, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 3517, 3490, 3491, 0,
	0, 0, 3542, 0, 0, 0, 0, 213, 1203, 0,
	0, 0, 0, 1672, 213, 0, 0, 3501, 1203, 1203,
	0, 0, 0, 0, 1203, 0, 3570, 0, 213, 0,
	213, 1027, 1027, 0, 0, 0, 0, 3471, 0, 3554,
	3558, 3561, 0, 0, 3562, 3550, 3551, 3549, 0, 3568,
	3569, 3567, 0, 3583, 213, 3573, 0, 0, 3574, 0,
	213, 3596, 0, 213, 0, 1090, 3566, 0, 1028, 3535,
	0, 0, 0, 0, 213, 213, 3598, 1194, 0, 0,
	0, 0, 0, 0, 3616, 3611, 0, 0, 3615, 0,
	2545, 3628, 1696, 0, 3626, 3603, 0, 0, 3623, 0,
	0, 0, 3635, 0, 3607, 3610, 0, 0, 3636, 0,
	0, 0, 3575, 0, 3576, 0, 213, 0, 3620, 3612,
	0, 0, 3630, 1672, 3632, 0, 0, 0, 0, 0,
	0, 3663, 0, 0, 0, 0, 2102, 0, 3647, 3648,
	0, 3668, 3650, 3649, 3597, 0, 1696, 0, 0, 0,
	0, 0, 0, 1546, 0, 3666, 3684, 0, 3686, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 3694, 0,
	2200, 2200, 0, 0, 3688, 0, 535, 0, 3685, 3698,
	2035, 3693, 213, 3690, 0, 1026, 1026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3706, 209, 3710, 209,
	3704, 3705, 3708, 209, 2204, 2451, 0, 3715, 1195, 213,
	1027, 213, 1207, 1215, 3716, 1185, 209, 3719, 209, 0,
	3717, 3731, 0, 209, 1215, 551, 3734, 3728, 209, 1215,
	3733, 3723, 3729, 3727, 582, 0, 0, 0, 3607, 0,
	3735, 3610, 1696, 0, 0, 0, 3691, 3692, 0, 0,
	3695, 0, 3747, 3749, 3620, 0, 0, 3687, 0, 3689,
	0, 1266, 3755, 0, 3759, 0, 0, 3756, 3760, 3754,
	0, 0, 0, 0, 1618, 0, 3763, 0, 0, 0,
	2200, 2200, 2200, 0, 3769, 0, 0, 0, 3776, 3775,
	0, 0, 0, 3722, 0, 2584, 2585, 3770, 3771, 3624,
	0, 0, 3625, 0, 0, 3778, 0, 0, 0, 0,
	1346, 3782, 3783, 0, 3785, 0, 3786, 0, 0, 3788,
	1207, 0, 3781, 3791, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 0, 3789, 1028, 1028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 1368, 1026, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 1174, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 1027, 2652, 2653, 0, 2670, 2671, 2672,
	0, 856, 0, 0, 0, 2675, 2676, 2677, 0, 0,
	0, 0, 0, 3212, 1672, 856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 844, 1474, 1475, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 209, 0,
	0, 0, 0, 209, 0, 0, 0, 1505, 0, 0,
	1474, 1475, 1877, 0, 1477, 0, 0, 0, 0, 0,
	2667, 209, 0, 209, 0, 209, 0, 0, 1672, 535,
	1505, 0, 1474, 1475, 0, 0, 0, 1477, 1517, 1518,
	1519, 0, 1174, 1895, 1476, 1474, 1475, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 0, 1477,
	0, 0, 1174, 0, 1523, 1505, 0, 1476, 0, 0,
	0, 0, 1477, 0, 1028, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 1026, 0, 701, 1476,
	0, 0, 0, 0, 1026, 2658, 0, 209, 1496, 1185,
	209, 0, 1476, 0, 0, 1493, 0, 1026, 0, 0,
	0, 1496, 0, 582, 0, 0, 0, 0, 1493, 0,
	209, 0, 0, 0, 1672, 0, 0, 0, 1482, 209,
	209, 0, 209, 0, 209, 0, 209, 0, 209, 0,
	0, 1499, 1500, 1501, 1502, 0, 2673, 0, 0, 0,
	0, 1482, 1978, 0, 0, 1979, 0, 1980, 3211, 1504,
	1506, 0, 0, 1499, 1500, 1501, 1502, 0, 209, 0,
	0, 0, 0, 1482, 0, 2204, 1499, 1500, 1501, 1502,
	0, 2668, 1504, 1506, 0, 0, 1482, 1174, 0, 566,
	1174, 0, 0, 582, 0, 0, 0, 1514, 0, 0,
	1524, 0, 0, 0, 1504, 1506, 0, 0, 0, 2200,
	2200, 0, 0, 0, 1497, 0, 0, 1504, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1491, 1492, 0, 1028, 1497, 0, 0,
	0, 0, 0, 0, 1028, 0, 1491, 1492, 0, 1512,
	0, 0, 0, 0, 0, 2204, 2204, 1028, 0, 1497,
	0, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1497, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 2669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2200, 2200, 2200, 2200, 2200, 2200, 2200,
	2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200,
	2200, 2200, 0, 2200, 0, 1498, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2951, 2952, 0, 0, 1498, 0,
	0, 0, 1503, 0, 0, 0, 535, 0, 0, 2652,
	2653, 0, 2670, 2671, 2672, 1503, 0, 0, 0, 0,
	1498, 209, 0, 0, 0, 2204, 2204, 2204, 2960, 0,
	535, 0, 0, 1498, 0, 0, 0, 209, 0, 535,
	0, 0, 1207, 0, 0, 0, 1515, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 2664, 2665, 2666, 0,
	0, 1174, 0, 2663, 2661, 2662, 2654, 2655, 2656, 2657,
	2659, 2660, 844, 0, 0, 2667, 844, 0, 3011, 3012,
	3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022,
	3023, 3024, 3025, 3026, 3027, 3028, 3029, 0, 3033, 1478,
	1479, 1480, 1481, 1483, 1484, 0, 0, 0, 0, 1474,
	1475, 0, 1217, 0, 1221, 0, 1227, 0, 0, 1487,
	1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484, 0, 1505,
	0, 1513, 0, 0, 551, 0, 1477, 1516, 1494, 1490,
	0, 1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484,
	2658, 1494, 1490, 0, 1487, 1485, 1486, 1478, 1479, 1480,
	1481, 1483, 1484, 0, 0, 0, 1476, 0, 0, 0,
	0, 0, 0, 0, 0, 1496, 0, 2328, 1916, 0,
	0, 0, 1493, 0, 0, 209, 1207, 1174, 0, 1927,
	0, 0, 0, 0, 0, 0, 209, 1349, 0, 0,
	0, 2673, 1936, 1937, 1938, 1354, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2954, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 2400, 2668, 0, 0, 0,
	1499, 1500, 1501, 1502, 1174, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 0, 0, 1215, 0, 0,
	209, 1406, 0, 0, 0, 0, 1174, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 0,
	0, 1504, 1506, 0, 0, 0, 2328, 0, 535, 0,
	0, 2454, 0, 0, 0, 0, 0, 209, 0, 0,
	209, 0, 209, 0, 209, 0, 209, 209, 0, 1185,
	1491, 1492, 0, 0, 0, 0, 0, 0, 2473, 701,
	0, 2328, 2328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 1497, 2669, 0, 0,
	0, 0, 1527, 1528, 1529, 1530, 1531, 0, 0, 209,
	1185, 209, 0, 0, 1215, 0, 1215, 0, 0, 1185,
	0, 1185, 0, 1185, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 1558, 0, 0,
	0, 1174, 0, 1174, 209, 209, 209, 209, 1185, 209,
	0, 209, 0, 0, 2204, 2204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 1174, 0, 0,
	0, 2664, 2665, 2666, 0, 0, 0, 0, 2663, 2661,
	2662, 2654, 2655, 2656, 2657, 2659, 2660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 2204, 2204,
	2204, 2204, 2204, 2204, 2204, 2204, 2204, 2204, 2204, 2204,
	2204, 2204, 2204, 2204, 2204, 2204, 2204, 0, 2204, 1612,
	1612, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1215,
	1174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2200, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 1494, 1490, 0, 1487, 1485,
	1486, 1478, 1479, 1480, 1481, 1483, 1484, 0, 0, 0,
	844, 0, 0, 2652, 2653, 0, 2670, 2671, 2672, 0,
	0, 0, 0, 0, 0, 2200, 0, 1174, 0, 0,
	0, 0, 2959, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 2652, 2653, 0, 2670, 2671, 2672, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 856, 0, 0, 0, 0, 0, 0, 2667,
	0, 209, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 535, 0, 0, 535, 0, 0, 535, 535, 0,
	0, 2394, 0, 535, 0, 0, 0, 0, 3395, 2667,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2200, 0, 0, 1215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3420, 0, 0, 0, 2658, 0, 0, 2328, 2328, 209,
	0, 0, 0, 2328, 0, 0, 2781, 0, 0, 0,
	0, 0, 0, 2328, 2781, 0, 2328, 2781, 2781, 0,
	0, 1474, 1475, 2463, 2658, 0, 0, 0, 0, 0,
	209, 209, 209, 0, 0, 0, 0, 0, 1207, 0,
	0, 1505, 0, 0, 0, 2673, 0, 0, 1477, 0,
	0, 2674, 209, 1185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2673, 0, 0, 1476, 0,
	2668, 0, 0, 0, 0, 0, 2840, 1496, 0, 2842,
	2328, 0, 0, 209, 1493, 0, 0, 209, 0, 1262,
	3509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2668, 0, 209, 0, 0, 0, 0, 0, 1185, 0,
	209, 0, 0, 2328, 0, 535, 0, 0, 0, 0,
	0, 0, 2328, 0, 2949, 1174, 0, 0, 0, 0,
	856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 1500, 1501, 1502, 0, 0, 0, 0,
	0, 0, 1482, 209, 1877, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2929, 0, 0, 1185, 209, 0,
	209, 2669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1491, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2010, 0, 2014,
	0, 0, 0, 209, 0, 0, 2028, 0, 1497, 0,
	0, 0, 0, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 0, 2077,
	0, 2079, 2080, 2081, 2082, 2664, 2665, 2666, 0, 2992,
	0, 0, 2663, 2661, 2662, 2654, 2655, 2656, 2657, 2659,
	2660, 2106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 2664, 2665, 2666, 2121, 0,
	0, 1503, 2663, 2661, 2662, 2654, 2655, 2656, 2657, 2659,
	2660, 0, 0, 0, 0, 0, 0, 0, 2204, 1498,
	124, 0, 0, 0, 0, 0, 57, 0, 2159, 2162,
	2165, 2168, 0, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	58, 119, 0, 0, 2196, 0, 2207, 2209, 2214, 0,
	0, 0, 0, 0, 0, 0, 62, 209, 209, 0,
	2204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 39, 121, 0, 0, 1474, 1475, 0, 0, 535,
	535, 0, 0, 0, 0, 38, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 1477, 0, 0, 0, 0, 0, 41, 0,
	0, 1215, 0, 42, 0, 0, 0, 0, 72, 0,
	0, 122, 0, 0, 0, 0, 0, 40, 83, 0,
	0, 0, 1476, 73, 80, 0, 0, 1494, 1490, 0,
	1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	43, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2204, 0, 943, 0, 0, 2832, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2855,
	209, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	2861, 210, 0, 0, 0, 0, 1482, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 2328, 209, 0, 2204, 2204,
	0, 0, 0, 0, 0, 0, 0, 1504, 1506, 2473,
	2473, 210, 0, 0, 0, 701, 701, 2328, 2904, 2905,
	1877, 1877, 0, 0, 701, 2328, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 2402, 0, 2404, 0, 0, 0, 0,
	0, 75, 0, 0, 0, 0, 58, 0, 0, 44,
	0, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 147, 78, 0, 79, 0,
	45, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	46, 3231, 0, 67, 0, 0, 0, 181, 1474, 1475,
	0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 50,
	0, 0, 0, 117, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 120, 72, 1477, 0, 0, 0, 0,
	1523, 0, 0, 0, 83, 0, 0, 183, 0, 73,
	80, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 1498, 1215, 1476, 209, 0, 0, 0,
	118, 0, 0, 0, 1496, 0, 2520, 0, 0, 209,
	0, 1493, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 182, 74, 0, 2328, 2328, 2328, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 1215, 0, 0,
	176, 0, 0, 0, 2328, 0, 2781, 0, 0, 1215,
	1215, 209, 1527, 1528, 0, 0, 0, 0, 0, 0,
	0, 150, 209, 209, 3, 0, 0, 0, 0, 1499,
	1500, 1501, 1502, 0, 0, 0, 2328, 0, 0, 1482,
	3334, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 3345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 1524, 2567, 2568, 0,
	1504, 1506, 0, 2574, 1487, 1485, 1486, 1478, 1479, 1480,
	1481, 1483, 1484, 0, 0, 0, 0, 1215, 0, 0,
	0, 0, 2588, 2589, 0, 0, 0, 75, 2121, 1491,
	1492, 0, 0, 0, 0, 0, 0, 2596, 0, 0,
	0, 0, 0, 0, 0, 1512, 0, 0, 0, 0,
	0, 0, 0, 2610, 0, 1497, 0, 0, 0, 0,
	0, 147, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2631, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 696, 0, 3127, 0, 117,
	0, 0, 0, 0, 2328, 0, 2781, 0, 0, 3414,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2214, 2214, 2214, 1503, 0,
	582, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 1498, 0, 2706, 3414,
	151, 0, 0, 0, 3176, 3177, 3178, 2328, 182, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 175, 0,
	0, 0, 1515, 0, 0, 0, 176, 1215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 209, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	2992, 0, 0, 0, 0, 0, 0, 0, 0, 844,
	0, 210, 1095, 210, 210, 3414, 1095, 210, 1095, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 2797, 0, 1513, 0, 0,
	1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485, 1486,
	1478, 1479, 1480, 1481, 1483, 1484, 0, 0, 0, 0,
	0, 1474, 1475, 3334, 0, 0, 0, 0, 0, 0,
	0, 1095, 210, 210, 1474, 1475, 209, 0, 0, 0,
	0, 1505, 0, 2781, 0, 210, 0, 0, 1477, 0,
	0, 0, 0, 0, 1505, 0, 0, 1215, 0, 1215,
	0, 1477, 0, 0, 0, 0, 210, 210, 210, 210,
	0, 1095, 0, 0, 0, 1095, 0, 0, 1476, 0,
	1095, 210, 210, 3592, 0, 0, 0, 1496, 0, 1215,
	1095, 1476, 209, 0, 1493, 0, 0, 0, 0, 0,
	1496, 0, 0, 209, 2328, 0, 0, 1493, 57, 0,
	0, 0, 0, 0, 0, 0, 2652, 2653, 0, 2670,
	2671, 2672, 58, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 2948, 0, 0, 0, 62, 0,
	0, 0, 0, 0, 0, 2992, 0, 2573, 0, 0,
	0, 0, 1499, 1500, 1501, 1502, 0, 210, 0, 0,
	0, 0, 1482, 0, 0, 1499, 1500, 1501, 1502, 67,
	0, 210, 0, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 2667, 0, 0, 0, 0, 0, 0, 0,
	0, 2328, 0, 1504, 1506, 909, 0, 0, 0, 0,
	72, 0, 0, 0, 0, 0, 1504, 1506, 0, 0,
	83, 3414, 0, 0, 2028, 73, 80, 0, 0, 0,
	2946, 2947, 1491, 1492, 2950, 0, 0, 0, 2953, 0,
	0, 0, 0, 0, 208, 1491, 1492, 2957, 1215, 0,
	2328, 0, 0, 0, 0, 0, 2964, 0, 1497, 2706,
	0, 0, 0, 0, 610, 0, 0, 2658, 0, 74,
	0, 1497, 0, 0, 2976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3001, 3002, 0, 3003, 3004, 3005, 0,
	0, 3006, 0, 0, 0, 3008, 0, 0, 2673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 3036, 3037, 0, 0,
	0, 0, 0, 2668, 1503, 0, 0, 0, 0, 1498,
	0, 3046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 3055, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 1029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 147, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 1095, 0, 210,
	210, 210, 3084, 0, 0, 0, 210, 0, 0, 181,
	0, 210, 0, 0, 0, 0, 0, 3092, 3095, 0,
	0, 696, 0, 1095, 2669, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3114, 0, 1095, 0, 0, 1494, 1490, 183,
	1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484, 0,
	1494, 1490, 0, 1487, 1485, 1486, 1478, 1479, 1480, 1481,
	1483, 1484, 118, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 0,
	0, 0, 176, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 3171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 603, 0, 2664, 2665,
	2666, 0, 0, 0, 0, 2663, 2661, 2662, 2654, 2655,
	2656, 2657, 2659, 2660, 0, 0, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 1095, 210, 0, 0, 0, 0, 0, 1095,
	0, 0, 0, 3209, 3210, 0, 0, 878, 85, 3214,
	3215, 0, 0, 0, 3218, 3219, 0, 0, 0, 0,
	0, 3223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3227, 0, 0, 0, 0, 210, 0, 0,
	0, 210, 0, 0, 0, 0, 210, 0, 3232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 210, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 1474, 1475, 0, 1507, 1508, 1509,
	1517, 1518, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 1505, 0, 0, 0, 0, 0,
	0, 1477, 0, 0, 0, 0, 1523, 0, 0, 0,
	0, 0, 0, 1095, 0, 1095, 0, 0, 1095, 0,
	0, 0, 0, 0, 0, 0, 1095, 0, 0, 1095,
	210, 1476, 0, 210, 0, 0, 0, 0, 0, 821,
	1496, 3095, 1095, 1095, 1095, 0, 0, 1493, 839, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 210, 0, 210, 0, 210, 0, 210,
	0, 210, 0, 0, 208, 0, 208, 208, 0, 0,
	208, 1016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 1499, 1500, 1501, 1502, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3095,
	0, 0, 0, 0, 0, 208, 208, 0, 0, 1514,
	0, 0, 1524, 0, 0, 0, 1504, 1506, 208, 1095,
	0, 0, 0, 0, 0, 0, 3383, 3384, 3385, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 1521, 208,
	208, 208, 208, 0, 0, 1491, 1492, 0, 0, 0,
	0, 0, 3393, 3394, 208, 208, 0, 0, 0, 0,
	0, 1512, 0, 0, 0, 0, 3401, 0, 0, 0,
	0, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 3095, 0, 0, 1511,
	0, 0, 0, 0, 3437, 0, 0, 0, 0, 0,
	0, 0, 0, 3444, 0, 0, 844, 0, 0, 0,
	208, 0, 3451, 0, 0, 0, 0, 1022, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 0, 3095,
	0, 0, 3095, 0, 0, 0, 0, 0, 0, 0,
	57, 1095, 1498, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 3095, 3095, 58, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 1095, 1515, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 3521, 0, 0, 3524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 0,
	0, 1091, 0, 1204, 3095, 0, 0, 1204, 0, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 0, 0, 0, 0, 73, 80, 0,
	0, 0, 0, 1513, 0, 1095, 1488, 1489, 1495, 1516,
	1494, 1490, 0, 1487, 1485, 1486, 1478, 1479, 1480, 1481,
	1483, 1484, 0, 0, 0, 0, 1204, 0, 0, 0,
	3237, 0, 0, 0, 0, 1095, 0, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 1204, 0, 0, 0,
	1204, 0, 210, 0, 844, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1204, 210, 1095, 0, 0,
	0, 1095, 0, 1634, 0, 1029, 0, 210, 0, 208,
	0, 0, 0, 0, 0, 0, 85, 0, 85, 0,
	85, 0, 208, 1634, 208, 3646, 3646, 3646, 0, 610,
	0, 0, 0, 210, 610, 0, 0, 0, 1204, 0,
	210, 0, 0, 0, 0, 0, 0, 3667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	210, 0, 3095, 210, 3095, 210, 0, 210, 0, 210,
	210, 0, 0, 1095, 1095, 0, 1095, 0, 3646, 0,
	839, 85, 85, 85, 0, 0, 0, 0, 1095, 147,
	78, 85, 79, 0, 0, 0, 210, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 210, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 210, 210,
	210, 183, 210, 85, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 118, 3646, 3764, 0, 0, 0,
	0, 0, 0, 3768, 0, 210, 610, 0, 151, 0,
	0, 0, 0, 210, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 913, 0, 0, 0, 0, 0, 0, 0, 821,
	208, 0, 0, 0, 208, 1340, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 208,
	0, 208, 0, 0, 1544, 0, 0, 0, 1550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1474, 1475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 1505, 0, 0, 0,
	0, 603, 0, 1477, 0, 0, 603, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 208, 0, 1204, 0,
	0, 0, 0, 0, 0, 0, 1085, 0, 0, 0,
	0, 0, 1192, 1476, 0, 0, 208, 0, 0, 1091,
	0, 0, 1496, 0, 0, 610, 208, 0, 208, 1493,
	208, 0, 208, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 1632, 0, 1635, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1291, 0, 1095, 0, 0, 0, 0, 1499, 1500, 1501,
	1502, 0, 0, 0, 0, 0, 0, 1482, 0, 1095,
	0, 1316, 1316, 1316, 1192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 1348, 0, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 1504, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 664, 0, 0, 1204, 1204, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 1491, 1492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 210, 210, 0, 0, 665, 0,
	0, 0, 210, 1497, 0, 0, 0, 666, 0, 0,
	0, 0, 1427, 0, 0, 210, 0, 0, 0, 1474,
	1475, 0, 0, 667, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 0, 1505,
	687, 0, 0, 0, 1095, 0, 1477, 0, 0, 0,
	0, 0, 0, 0, 0, 668, 210, 0, 0, 1095,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1095, 0, 0, 0, 669, 210, 1476, 1029, 0, 0,
	0, 0, 0, 0, 0, 1496, 1503, 0, 0, 0,
	0, 0, 1493, 1029, 670, 0, 0, 671, 1204, 0,
	1204, 0, 597, 1204, 1498, 0, 0, 208, 0, 0,
	0, 1204, 0, 0, 1204, 0, 0, 0, 1095, 1095,
	0, 0, 0, 686, 0, 0, 210, 1204, 1204, 1204,
	0, 0, 2566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 0,
	1499, 1500, 1501, 1502, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 0, 0, 0, 0, 1095,
	0, 210, 1095, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 839, 0,
	839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1491, 1492, 1494, 1490, 673, 1487, 1485, 1486, 1478, 1479,
	1480, 1481, 1483, 1484, 1091, 0, 0, 0, 0, 0,
	0, 208, 689, 1095, 674, 0, 1497, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	1095, 1650, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 596, 0, 0, 1659, 0, 1192, 0, 675, 208,
	0, 676, 0, 0, 0, 0, 0, 684, 0, 0,
	610, 1092, 0, 0, 677, 1092, 0, 1205, 0, 0,
	0, 1205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 1091,
	0, 0, 0, 208, 0, 678, 685, 0, 0, 1503,
	0, 0, 0, 679, 821, 0, 0, 821, 821, 0,
	0, 0, 0, 0, 0, 0, 681, 1498, 0, 0,
	1205, 680, 0, 208, 0, 0, 208, 0, 208, 0,
	208, 0, 208, 208, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 1091, 0, 0, 208,
	1205, 0, 2095, 0, 1205, 0, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 208, 839, 208, 0, 1205,
	0, 0, 1091, 0, 0, 0, 0, 1544, 0, 0,
	0, 1544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 208, 208, 208, 0, 208, 0, 208, 0, 0,
	0, 0, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 1490, 0, 1487, 1485,
	1486, 1478, 1479, 1480, 1481, 1483, 1484, 1095, 208, 0,
	1095, 0, 0, 0, 0, 0, 208, 0, 0, 1016,
	0, 0, 1854, 210, 0, 0, 1861, 0, 0, 0,
	1204, 210, 0, 0, 0, 1635, 0, 0, 0, 1095,
	210, 0, 0, 0, 1095, 0, 0, 0, 0, 1291,
	0, 1883, 0, 1883, 0, 0, 0, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 1095, 1095, 1095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1095, 0, 0, 0, 0, 210, 1095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 625, 1091, 0, 0, 0, 1204, 0, 1095, 0,
	0, 0, 0, 0, 0, 1861, 0, 0, 1931, 0,
	0, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	1960, 0, 1962, 0, 1964, 0, 1965, 0, 0, 627,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 628, 0, 0, 629, 0, 1982, 0, 1204, 1204,
	0, 1204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 652, 1029, 1204, 0, 85, 0, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 1029, 0, 0,
	0, 0, 0, 1095, 0, 1095, 0, 85, 0, 85,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 632, 1092, 0, 633, 654,
	0, 0, 0, 597, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 85, 210, 0, 0, 0, 0, 0,
	0, 0, 1205, 0, 1095, 210, 210, 0, 0, 1095,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	85, 0, 0, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 1095,
	0, 0, 1095, 0, 0, 0, 208, 208, 208, 0,
	653, 0, 0, 0, 0, 1634, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 208,
	0, 0, 1095, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 638, 0, 0, 208, 2270,
	0, 0, 0, 0, 0, 0, 1029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1095,
	1205, 1205, 596, 0, 0, 0, 0, 0, 1092, 0,
	0, 1095, 646, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 639, 0, 0, 0, 208,
	0, 0, 0, 0, 2095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1544, 640, 0, 0, 657,
	0, 656, 0, 0, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 1091, 208, 642, 0, 210,
	0, 0, 649, 0, 1095, 0, 0, 658, 0, 655,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 208,
	0, 210, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 1205, 0, 1205, 0, 0, 1205, 0, 0,
	0, 0, 0, 0, 0, 1205, 0, 0, 1205, 0,
	0, 1192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1205, 1205, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1016, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 2426, 0, 0, 0, 1016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1095, 1095, 0, 0, 0, 2456, 1095, 0, 1316, 1091,
	1316, 0, 1316, 0, 1192, 1192, 0, 0, 0, 0,
	1204, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 1029, 1029, 0, 0, 0, 0, 0,
	0, 2499, 0, 0, 1204, 210, 0, 1095, 1092, 0,
	0, 0, 0, 0, 0, 1204, 210, 2507, 0, 2510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 85, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 2531, 1192, 2533, 1192, 0, 2536, 0, 0,
	0, 0, 0, 1204, 1204, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 85, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 0, 1092, 0, 0, 0, 0, 2564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 1016, 0,
	0, 839, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	1092, 0, 0, 0, 0, 85, 85, 0, 0, 0,
	0, 0, 1029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1092, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1474,
	1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1505,
	0, 0, 0, 0, 0, 0, 1477, 0, 0, 0,
	0, 1523, 0, 0, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1476, 0, 0, 0,
	0, 0, 0, 0, 1092, 1496, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 1029, 0, 0, 0, 0, 0,
	0, 0, 1029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 1092, 0, 0, 0,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 1500, 1501, 1502, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 0, 0, 2773, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 1514, 1016, 1016, 1524, 208, 208,
	0, 1504, 1506, 0, 0, 0, 0, 0, 2810, 2812,
	2426, 0, 1204, 0, 0, 1204, 0, 0, 0, 0,
	0, 1520, 0, 1521, 0, 208, 0, 0, 0, 0,
	1491, 1492, 1205, 1205, 0, 1205, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 1512, 1205, 0, 1204,
	0, 0, 0, 0, 0, 0, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2852, 0, 0, 0, 2856, 0, 1522, 0, 1204,
	1204, 1204, 0, 0, 0, 0, 0, 0, 0, 0,
	2865, 0, 0, 0, 1511, 1204, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 2908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1016, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 2932, 0, 1192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2944, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 0,
	0, 1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485,
	1486, 1478, 1479, 1480, 1481, 1483, 1484, 0, 0, 0,
	0, 2640, 0, 0, 0, 2641, 0, 0, 0, 1091,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 1016, 1204, 0, 0,
	0, 0, 0, 0, 1016, 0, 0, 0, 0, 1092,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 1474,
	1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 1510, 1505,
	0, 1092, 0, 0, 0, 0, 1477, 0, 0, 0,
	0, 1523, 0, 0, 0, 0, 0, 0, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 208, 0,
	0, 0, 0, 0, 0, 0, 1476, 0, 0, 208,
	0, 0, 0, 0, 0, 1496, 85, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 1500, 1501, 1502, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 1092, 0, 0, 0, 0, 3142, 0,
	0, 0, 0, 0, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 1092, 1514, 3155, 0, 1524, 0, 1204,
	0, 1504, 1506, 0, 0, 0, 0, 0, 1205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	0, 1520, 0, 1521, 0, 0, 0, 0, 0, 0,
	1491, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 0,
	3194, 0, 0, 0, 0, 0, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 1205, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1092, 2095,
	0, 1092, 0, 0, 0, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1204, 1204, 0, 0, 1503,
	0, 1204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1474, 1475,
	0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0,
	0, 0, 1091, 1515, 0, 0, 0, 1510, 1505, 0,
	0, 0, 1092, 0, 0, 1477, 0, 0, 0, 0,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 3307,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	2426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 0,
	0, 1488, 1489, 1495, 1516, 1494, 1490, 2426, 1487, 1485,
	1486, 1478, 1479, 1480, 1481, 1483, 1484, 0, 0, 0,
	0, 2117, 0, 0, 0, 2118, 0, 0, 0, 1499,
	1500, 1501, 1502, 0, 0, 0, 0, 0, 0, 1482,
	0, 85, 0, 0, 85, 0, 0, 0, 1474, 1475,
	0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0,
	0, 0, 1092, 1514, 0, 0, 1524, 1510, 1505, 0,
	1504, 1506, 0, 0, 0, 1477, 0, 0, 0, 0,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 1521, 0, 0, 0, 0, 0, 0, 1491,
	1492, 0, 0, 0, 0, 1476, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 1512, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 1497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3421, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 0, 0, 1205,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	1500, 1501, 1502, 0, 0, 0, 0, 0, 1092, 1482,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3474, 0, 0, 0, 1503, 0,
	0, 0, 0, 1514, 0, 0, 1524, 0, 0, 0,
	1504, 1506, 0, 1205, 1205, 1205, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3500, 1192, 0, 1205,
	1520, 0, 1521, 0, 0, 1092, 0, 0, 0, 1491,
	1492, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1512, 1693, 1092, 0, 0,
	0, 0, 0, 0, 0, 1497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 1687, 1694, 0,
	1677, 1720, 1719, 1511, 0, 0, 1679, 1678, 0, 0,
	0, 0, 0, 0, 1730, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 3560, 0, 0, 1513, 0, 0,
	1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485, 1486,
	1478, 1479, 1480, 1481, 1483, 1484, 0, 0, 1503, 0,
	0, 0, 0, 0, 2962, 0, 1721, 0, 1717, 1716,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	1715, 0, 1092, 0, 1092, 0, 0, 0, 0, 0,
	3600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3617, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 1714, 1712, 1713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1092, 1689, 0, 0, 0, 1092, 0,
	0, 0, 0, 0, 1703, 1692, 1705, 1707, 1708, 1709,
	1704, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 1727, 0, 0, 0, 0, 1092, 0,
	0, 1205, 0, 0, 0, 0, 0, 1513, 0, 0,
	1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485, 1486,
	1478, 1479, 1480, 1481, 1483, 1484, 0, 0, 0, 1681,
	0, 0, 0, 0, 2643, 0, 0, 0, 0, 0,
	0, 1092, 0, 0, 0, 0, 1718, 0, 0, 0,
	1690, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 1700, 1698,
	1699, 1702, 1701, 0, 0, 0, 0, 0, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1682, 1683, 1685, 1686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1706, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	1722, 1723, 1724, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1688, 0, 0, 0, 0, 1695, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	1205, 0, 0, 0, 0, 1205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 1096, 223, 1097, 1098, 1099, 1092, 1100, 486, 1101,
	1102, 1103, 1104, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 1105, 233, 234, 235,
	236, 237, 238, 239, 1106, 1107, 240, 491, 492, 493,
	1108, 241, 494, 1109, 1094, 1110, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 1111, 252, 0,
	253, 254, 255, 1112, 256, 966, 257, 258, 1113, 1114,
	1116, 1115, 1117, 1118, 1119, 259, 260, 261, 262, 263,
	264, 495, 496, 1120, 265, 1121, 267, 266, 1122, 268,
	1123, 1124, 269, 270, 271, 1125, 272, 1126, 273, 274,
	1127, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 1128, 215, 1129, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 1130,
	292, 1131, 1132, 967, 293, 294, 1133, 295, 501, 1134,
	502, 296, 1135, 297, 298, 299, 300, 503, 504, 505,
	355, 969, 301, 302, 1136, 303, 304, 306, 0, 0,
	216, 305, 307, 314, 1137, 968, 308, 506, 310, 309,
	311, 312, 313, 507, 1138, 508, 1139, 315, 970, 509,
	971, 316, 317, 318, 972, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 1140, 327, 326, 1141, 328, 510,
	973, 329, 330, 974, 1142, 331, 332, 1143, 1144, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 975, 347, 348, 351, 352, 350,
	976, 349, 1145, 217, 977, 353, 1146, 511, 354, 512,
	356, 357, 1147, 358, 359, 360, 1148, 1149, 362, 363,
	364, 1150, 1151, 365, 366, 513, 978, 367, 979, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 1152,
	376, 377, 515, 378, 516, 379, 380, 1153, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	1154, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 1155, 404, 980, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 1156, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 1157, 431, 411, 412, 432, 433,
	981, 434, 435, 519, 436, 437, 1158, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 1159,
	449, 450, 448, 1160, 451, 452, 453, 454, 455, 280,
	456, 1161, 457, 521, 522, 523, 524, 1162, 464, 1163,
	458, 459, 525, 460, 526, 1164, 461, 462, 463, 0,
	465, 466, 1165, 1166, 467, 468, 469, 471, 472, 470,
	474, 1167, 475, 1168, 473, 476, 477, 478, 527, 528,
	529, 1169, 480, 479, 530, 1170, 1171, 1172, 1173, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	0, 0, 0, 0, 0, 2248, 0, 0, 0, 0,
	0, 0, 0, 2249, 218, 219, 220, 221, 222, 1096,
	223, 1097, 1098, 1099, 0, 1100, 486, 1101, 1102, 1103,
	1104, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 1105, 233, 234, 235, 236, 237,
	238, 239, 1106, 1107, 240, 491, 492, 493, 1108, 241,
	494, 1109, 1094, 1110, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 1111, 252, 0, 253, 254,
	255, 1112, 256, 966, 257, 258, 1113, 1114, 1116, 1115,
	1117, 1118, 1119, 259, 260, 261, 262, 263, 264, 495,
	496, 1120, 265, 1121, 267, 266, 1122, 268, 1123, 1124,
	269, 270, 271, 1125, 272, 1126, 273, 274, 1127, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 1128, 215, 1129, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 1130, 292, 1131,
	1132, 967, 293, 294, 1133, 295, 501, 1134, 502, 296,
	1135, 297, 298, 299, 300, 503, 504, 505, 355, 969,
	301, 302, 1136, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 1137, 968, 308, 506, 310, 309, 311, 312,
	313, 507, 1138, 508, 1139, 315, 970, 509, 971, 316,
	317, 318, 972, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 1140, 327, 326, 1141, 328, 510, 973, 329,
	330, 974, 1142, 331, 332, 1143, 1144, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 352, 350, 976, 349,
	1145, 217, 977, 353, 1146, 511, 354, 512, 356, 357,
	1147, 358, 359, 360, 1148, 1149, 362, 363, 364, 1150,
	1151, 365, 366, 513, 978, 367, 979, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 1152, 376, 377,
	515, 378, 516, 379, 380, 1153, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 1154, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 1155, 404, 980, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 1156, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 1157, 431, 411, 412, 432, 433, 981, 434,
	435, 519, 436, 437, 1158, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 1159, 449, 450,
	448, 1160, 451, 452, 453, 454, 455, 280, 456, 1161,
	457, 521, 522, 523, 524, 1162, 464, 1163, 458, 459,
	525, 460, 526, 1164, 461, 462, 463, 0, 465, 466,
	1165, 1166, 467, 468, 469, 471, 472, 470, 474, 1167,
	475, 1168, 473, 476, 477, 478, 527, 528, 529, 1169,
	480, 479, 530, 1170, 1171, 1172, 1173, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 0, 2970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2972,
	218, 219, 220, 221, 222, 1096, 223, 1097, 1098, 1099,
	0, 1100, 486, 1101, 1102, 1103, 1104, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	1105, 233, 234, 235, 236, 237, 238, 239, 1106, 1107,
	240, 491, 492, 493, 1108, 241, 494, 1109, 1094, 1110,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 1111, 252, 0, 253, 254, 255, 1112, 256, 966,
	257, 258, 1113, 1114, 1116, 1115, 1117, 1118, 1119, 259,
	260, 261, 262, 263, 264, 495, 496, 1120, 265, 1121,
	267, 266, 1122, 268, 1123, 1124, 269, 270, 271, 1125,
	272, 1126, 273, 274, 1127, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 1128, 215,
	1129, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 1130, 292, 1131, 1132, 967, 293, 294,
	1133, 295, 501, 1134, 502, 296, 1135, 297, 298, 299,
	300, 503, 504, 505, 355, 969, 301, 302, 1136, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 1137, 968,
	308, 506, 310, 309, 311, 312, 313, 507, 1138, 508,
	1139, 315, 970, 509, 971, 316, 317, 318, 972, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 1140, 327,
	326, 1141, 328, 510, 973, 329, 330, 974, 1142, 331,
	332, 1143, 1144, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 975, 347,
	348, 351, 352, 350, 976, 349, 1145, 217, 977, 353,
	1146, 511, 354, 512, 356, 357, 1147, 358, 359, 360,
	1148, 1149, 362, 363, 364, 1150, 1151, 365, 366, 513,
	978, 367, 979, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 1152, 376, 377, 515, 378, 516, 379,
	380, 1153, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 1154, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 1155,
	404, 980, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 1156, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 1157, 431,
	411, 412, 432, 433, 981, 434, 435, 519, 436, 437,
	1158, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 1159, 449, 450, 448, 1160, 451, 452,
	453, 454, 455, 280, 456, 1161, 457, 521, 522, 523,
	524, 1162, 464, 1163, 458, 459, 525, 460, 526, 1164,
	461, 462, 463, 0, 465, 466, 1165, 1166, 467, 468,
	469, 471, 472, 470, 474, 1167, 475, 1168, 473, 476,
	477, 478, 527, 528, 529, 1169, 480, 479, 530, 1170,
	1171, 1172, 1173, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3261,
	218, 219, 220, 221, 222, 1096, 223, 1097, 1098, 1099,
	0, 1100, 486, 1101, 1102, 1103, 1104, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	1105, 233, 234, 235, 236, 237, 238, 239, 1106, 1107,
	240, 491, 492, 493, 1108, 241, 494, 1109, 1094, 1110,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 1111, 252, 0, 253, 254, 255, 1112, 256, 966,
	257, 258, 1113, 1114, 1116, 1115, 1117, 1118, 1119, 259,
	260, 261, 262, 263, 264, 495, 496, 1120, 265, 1121,
	267, 266, 1122, 268, 1123, 1124, 269, 270, 271, 1125,
	272, 1126, 273, 274, 1127, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 1128, 215,
	1129, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 1130, 292, 1131, 1132, 967, 293, 294,
	1133, 295, 501, 1134, 502, 296, 1135, 297, 298, 299,
	300, 503, 504, 505, 355, 969, 301, 302, 1136, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 1137, 968,
	308, 506, 310, 309, 311, 312, 313, 507, 1138, 508,
	1139, 315, 970, 509, 971, 316, 317, 318, 972, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 1140, 327,
	326, 1141, 328, 510, 973, 329, 330, 974, 1142, 331,
	332, 1143, 1144, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 975, 347,
	348, 351, 352, 350, 976, 349, 1145, 217, 977, 353,
	1146, 511, 354, 512, 356, 357, 1147, 358, 359, 360,
	1148, 1149, 362, 363, 364, 1150, 1151, 365, 366, 513,
	978, 367, 979, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 1152, 376, 377, 515, 378, 516, 379,
	380, 1153, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 1154, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 1155,
	404, 980, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 1156, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 1157, 431,
	411, 412, 432, 433, 981, 434, 435, 519, 436, 437,
	1158, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 1159, 449, 450, 448, 1160, 451, 452,
	453, 454, 455, 280, 456, 1161, 457, 521, 522, 523,
	524, 1162, 464, 1163, 458, 459, 525, 460, 526, 1164,
	461, 462, 463, 0, 465, 466, 1165, 1166, 467, 468,
	469, 471, 472, 470, 474, 1167, 475, 1168, 473, 476,
	477, 478, 527, 528, 529, 1169, 480, 479, 530, 1170,
	1171, 1172, 1173, 481, 482, 531, 483, 484, 485, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3389, 0, 218, 219, 220, 221,
	222, 1096, 223, 1097, 1098, 1099, 0, 1100, 486, 1101,
	1102, 1103, 1104, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 1105, 233, 234, 235,
	236, 237, 238, 239, 1106, 1107, 240, 491, 492, 493,
	1108, 241, 494, 1109, 1094, 1110, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 1111, 252, 0,
	253, 254, 255, 1112, 256, 966, 257, 258, 1113, 1114,
	1116, 1115, 1117, 1118, 1119, 259, 260, 261, 262, 263,
	264, 495, 496, 1120, 265, 1121, 267, 266, 1122, 268,
	1123, 1124, 269, 270, 271, 1125, 272, 1126, 273, 274,
	1127, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 1128, 215, 1129, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 1130,
	292, 1131, 1132, 967, 293, 294, 1133, 295, 501, 1134,
	502, 296, 1135, 297, 298, 299, 300, 503, 504, 505,
	355, 969, 301, 302, 1136, 303, 304, 306, 0, 0,
	216, 305, 307, 314, 1137, 968, 308, 506, 310, 309,
	311, 312, 313, 507, 1138, 508, 1139, 315, 970, 509,
	971, 316, 317, 318, 972, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 1140, 327, 326, 1141, 328, 510,
	973, 329, 330, 974, 1142, 331, 332, 1143, 1144, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 975, 347, 348, 351, 352, 350,
	976, 349, 1145, 217, 977, 353, 1146, 511, 354, 512,
	356, 357, 1147, 358, 359, 360, 1148, 1149, 362, 363,
	364, 1150, 1151, 365, 366, 513, 978, 367, 979, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 1152,
	376, 377, 515, 378, 516, 379, 380, 1153, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	1154, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 1155, 404, 980, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 1156, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 1157, 431, 411, 412, 432, 433,
	981, 434, 435, 519, 436, 437, 1158, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 1159,
	449, 450, 448, 1160, 451, 452, 453, 454, 455, 280,
	456, 1161, 457, 521, 522, 523, 524, 1162, 464, 1163,
	458, 459, 525, 460, 526, 1164, 461, 462, 463, 0,
	465, 466, 1165, 1166, 467, 468, 469, 471, 472, 470,
	474, 1167, 475, 1168, 473, 476, 477, 478, 527, 528,
	529, 1169, 480, 479, 530, 1170, 1171, 1172, 1173, 481,
	482, 531, 483, 484, 485, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3314, 0, 218, 219, 220, 221, 222, 1096, 223, 1097,
	1098, 1099, 0, 1100, 486, 1101, 1102, 1103, 1104, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 1105, 233, 234, 235, 236, 237, 238, 239,
	1106, 1107, 240, 491, 492, 493, 1108, 241, 494, 1109,
	1094, 1110, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 1111, 252, 0, 253, 254, 255, 1112,
	256, 966, 257, 258, 1113, 1114, 1116, 1115, 1117, 1118,
	1119, 259, 260, 261, 262, 263, 264, 495, 496, 1120,
	265, 1121, 267, 266, 1122, 268, 1123, 1124, 269, 270,
	271, 1125, 272, 1126, 273, 274, 1127, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	1128, 215, 1129, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 1130, 292, 1131, 1132, 967,
	293, 294, 1133, 295, 501, 1134, 502, 296, 1135, 297,
	298, 299, 300, 503, 504, 505, 355, 969, 301, 302,
	1136, 303, 304, 306, 0, 0, 216, 305, 307, 314,
	1137, 968, 308, 506, 310, 309, 311, 312, 313, 507,
	1138, 508, 1139, 315, 970, 509, 971, 316, 317, 318,
	972, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	1140, 327, 326, 1141, 328, 510, 973, 329, 330, 974,
	1142, 331, 332, 1143, 1144, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 1145, 217,
	977, 353, 1146, 511, 354, 512, 356, 357, 1147, 358,
	359, 360, 1148, 1149, 362, 363, 364, 1150, 1151, 365,
	366, 513, 978, 367, 979, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 1152, 376, 377, 515, 378,
	516, 379, 380, 1153, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 1154, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 1155, 404, 980, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 1156,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	1157, 431, 411, 412, 432, 433, 981, 434, 435, 519,
	436, 437, 1158, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 1159, 449, 450, 448, 1160,
	451, 452, 453, 454, 455, 280, 456, 1161, 457, 521,
	522, 523, 524, 1162, 464, 1163, 458, 459, 525, 460,
	526, 1164, 461, 462, 463, 0, 465, 466, 1165, 1166,
	467, 468, 469, 471, 472, 470, 474, 1167, 475, 1168,
	473, 476, 477, 478, 527, 528, 529, 1169, 480, 479,
	530, 1170, 1171, 1172, 1173, 481, 482, 531, 483, 484,
	485, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3195, 0, 218, 219,
	220, 221, 222, 1096, 223, 1097, 1098, 1099, 0, 1100,
	486, 1101, 1102, 1103, 1104, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 1105, 233,
	234, 235, 236, 237, 238, 239, 1106, 1107, 240, 491,
	492, 493, 1108, 241, 494, 1109, 1094, 1110, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 1111,
	252, 0, 253, 254, 255, 1112, 256, 966, 257, 258,
	1113, 1114, 1116, 1115, 1117, 1118, 1119, 259, 260, 261,
	262, 263, 264, 495, 496, 1120, 265, 1121, 267, 266,
	1122, 268, 1123, 1124, 269, 270, 271, 1125, 272, 1126,
	273, 274, 1127, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 1128, 215, 1129, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 1130, 292, 1131, 1132, 967, 293, 294, 1133, 295,
	501, 1134, 502, 296, 1135, 297, 298, 299, 300, 503,
	504, 505, 355, 969, 301, 302, 1136, 303, 304, 306,
	0, 0, 216, 305, 307, 314, 1137, 968, 308, 506,
	310, 309, 311, 312, 313, 507, 1138, 508, 1139, 315,
	970, 509, 971, 316, 317, 318, 972, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 1140, 327, 326, 1141,
	328, 510, 973, 329, 330, 974, 1142, 331, 332, 1143,
	1144, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 1145, 217, 977, 353, 1146, 511,
	354, 512, 356, 357, 1147, 358, 359, 360, 1148, 1149,
	362, 363, 364, 1150, 1151, 365, 366, 513, 978, 367,
	979, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 1152, 376, 377, 515, 378, 516, 379, 380, 1153,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 1154, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 1155, 404, 980,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 1156, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 1157, 431, 411, 412,
	432, 433, 981, 434, 435, 519, 436, 437, 1158, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 1159, 449, 450, 448, 1160, 451, 452, 453, 454,
	455, 280, 456, 1161, 457, 521, 522, 523, 524, 1162,
	464, 1163, 458, 459, 525, 460, 526, 1164, 461, 462,
	463, 0, 465, 466, 1165, 1166, 467, 468, 469, 471,
	472, 470, 474, 1167, 475, 1168, 473, 476, 477, 478,
	527, 528, 529, 1169, 480, 479, 530, 1170, 1171, 1172,
	1173, 481, 482, 531, 483, 484, 485, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2988, 0, 218, 219, 220, 221, 222, 1096,
	223, 1097, 1098, 1099, 0, 1100, 486, 1101, 1102, 1103,
	1104, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 1105, 233, 234, 235, 236, 237,
	238, 239, 1106, 1107, 240, 491, 492, 493, 1108, 241,
	494, 1109, 1094, 1110, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 1111, 252, 0, 253, 254,
	255, 1112, 256, 966, 257, 258, 1113, 1114, 1116, 1115,
	1117, 1118, 1119, 259, 260, 261, 262, 263, 264, 495,
	496, 1120, 265, 1121, 267, 266, 1122, 268, 1123, 1124,
	269, 270, 271, 1125, 272, 1126, 273, 274, 1127, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 1128, 215, 1129, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 1130, 292, 1131,
	1132, 967, 293, 294, 1133, 295, 501, 1134, 502, 296,
	1135, 297, 298, 299, 300, 503, 504, 505, 355, 969,
	301, 302, 1136, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 1137, 968, 308, 506, 310, 309, 311, 312,
	313, 507, 1138, 508, 1139, 315, 970, 509, 971, 316,
	317, 318, 972, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 1140, 327, 326, 1141, 328, 510, 973, 329,
	330, 974, 1142, 331, 332, 1143, 1144, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 352, 350, 976, 349,
	1145, 217, 977, 353, 1146, 511, 354, 512, 356, 357,
	1147, 358, 359, 360, 1148, 1149, 362, 363, 364, 1150,
	1151, 365, 366, 513, 978, 367, 979, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 1152, 376, 377,
	515, 378, 516, 379, 380, 1153, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 1154, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 1155, 404, 980, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 1156, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 1157, 431, 411, 412, 432, 433, 981, 434,
	435, 519, 436, 437, 1158, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 1159, 449, 450,
	448, 1160, 451, 452, 453, 454, 455, 280, 456, 1161,
	457, 521, 522, 523, 524, 1162, 464, 1163, 458, 459,
	525, 460, 526, 1164, 461, 462, 463, 0, 465, 466,
	1165, 1166, 467, 468, 469, 471, 472, 470, 474, 1167,
	475, 1168, 473, 476, 477, 478, 527, 528, 529, 1169,
	480, 479, 530, 1170, 1171, 1172, 1173, 481, 482, 531,
	483, 484, 485, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2839, 0,
	218, 219, 220, 221, 222, 1096, 223, 1097, 1098, 1099,
	0, 1100, 486, 1101, 1102, 1103, 1104, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	1105, 233, 234, 235, 236, 237, 238, 239, 1106, 1107,
	240, 491, 492, 493, 1108, 241, 494, 1109, 1094, 1110,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 1111, 252, 0, 253, 254, 255, 1112, 256, 966,
	257, 258, 1113, 1114, 1116, 1115, 1117, 1118, 1119, 259,
	260, 261, 262, 263, 264, 495, 496, 1120, 265, 1121,
	267, 266, 1122, 268, 1123, 1124, 269, 270, 271, 1125,
	272, 1126, 273, 274, 1127, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 1128, 215,
	1129, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 1130, 292, 1131, 1132, 967, 293, 294,
	1133, 295, 501, 1134, 502, 296, 1135, 297, 298, 299,
	300, 503, 504, 505, 355, 969, 301, 302, 1136, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 1137, 968,
	308, 506, 310, 309, 311, 312, 313, 507, 1138, 508,
	1139, 315, 970, 509, 971, 316, 317, 318, 972, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 1140, 327,
	326, 1141, 328, 510, 973, 329, 330, 974, 1142, 331,
	332, 1143, 1144, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 975, 347,
	348, 351, 352, 350, 976, 349, 1145, 217, 977, 353,
	1146, 511, 354, 512, 356, 357, 1147, 358, 359, 360,
	1148, 1149, 362, 363, 364, 1150, 1151, 365, 366, 513,
	978, 367, 979, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 1152, 376, 377, 515, 378, 516, 379,
	380, 1153, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 1154, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 1155,
	404, 980, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 1156, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 1157, 431,
	411, 412, 432, 433, 981, 434, 435, 519, 436, 437,
	1158, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 1159, 449, 450, 448, 1160, 451, 452,
	453, 454, 455, 280, 456, 1161, 457, 521, 522, 523,
	524, 1162, 464, 1163, 458, 459, 525, 460, 526, 1164,
	461, 462, 463, 0, 465, 466, 1165, 1166, 467, 468,
	469, 471, 472, 470, 474, 1167, 475, 1168, 473, 476,
	477, 478, 527, 528, 529, 1169, 480, 479, 530, 1170,
	1171, 1172, 1173, 481, 482, 531, 483, 484, 485, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2141, 0, 218, 219, 220, 221,
	222, 1096, 223, 1097, 1098, 1099, 0, 1100, 486, 1101,
	1102, 1103, 1104, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 1105, 233, 234, 235,
	236, 237, 238, 239, 1106, 1107, 240, 491, 492, 493,
	1108, 241, 494, 1109, 1094, 1110, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 1111, 252, 0,
	253, 254, 255, 1112, 256, 966, 257, 258, 1113, 1114,
	1116, 1115, 1117, 1118, 1119, 259, 260, 261, 262, 263,
	264, 495, 496, 1120, 265, 1121, 267, 266, 1122, 268,
	1123, 1124, 269, 270, 271, 1125, 272, 1126, 273, 274,
	1127, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 1128, 215, 1129, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 1130,
	292, 1131, 1132, 967, 293, 294, 1133, 295, 501, 1134,
	502, 296, 1135, 297, 298, 299, 300, 503, 504, 505,
	355, 969, 301, 302, 1136, 303, 304, 306, 0, 0,
	216, 305, 307, 314, 1137, 968, 308, 506, 310, 309,
	311, 312, 313, 507, 1138, 508, 1139, 315, 970, 509,
	971, 316, 317, 318, 972, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 1140, 327, 326, 1141, 328, 510,
	973, 329, 330, 974, 1142, 331, 332, 1143, 1144, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 975, 347, 348, 351, 352, 350,
	976, 349, 1145, 217, 977, 353, 1146, 511, 354, 512,
	356, 357, 1147, 358, 359, 360, 1148, 1149, 362, 363,
	364, 1150, 1151, 365, 366, 513, 978, 367, 979, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 1152,
	376, 377, 515, 378, 516, 379, 380, 1153, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	1154, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 1155, 404, 980, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 1156, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 1157, 431, 411, 412, 432, 433,
	981, 434, 435, 519, 436, 437, 1158, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 1159,
	449, 450, 448, 1160, 451, 452, 453, 454, 455, 280,
	456, 1161, 457, 521, 522, 523, 524, 1162, 464, 1163,
	458, 459, 525, 460, 526, 1164, 461, 462, 463, 0,
	465, 466, 1165, 1166, 467, 468, 469, 471, 472, 470,
	474, 1167, 475, 1168, 473, 476, 477, 478, 527, 528,
	529, 1169, 480, 479, 530, 1170, 1171, 1172, 1173, 481,
	482, 531, 483, 484, 485, 1186, 0, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 218, 219, 220, 221, 222, 1096,
	223, 1097, 1098, 1099, 0, 1100, 486, 1101, 1102, 1103,
	1104, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 1105, 233, 234, 235, 236, 237,
	238, 239, 1106, 1107, 240, 491, 492, 493, 1108, 241,
	494, 1109, 1094, 1110, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 1111, 252, 0, 253, 254,
	255, 1112, 256, 966, 257, 258, 1113, 1114, 1116, 1115,
	1117, 1118, 1119, 259, 260, 261, 262, 263, 264, 495,
	496, 1120, 265, 1121, 267, 266, 1122, 268, 1123, 1124,
	269, 270, 271, 1125, 272, 1126, 273, 274, 1127, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 1128, 215, 1129, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 1130, 292, 1131,
	1132, 967, 293, 294, 1133, 295, 501, 1134, 502, 296,
	1135, 297, 298, 299, 300, 503, 504, 505, 355, 969,
	301, 302, 1136, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 1137, 968, 308, 506, 310, 309, 311, 312,
	313, 507, 1138, 508, 1139, 315, 970, 509, 971, 316,
	317, 318, 972, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 1140, 327, 326, 1141, 328, 510, 973, 329,
	330, 974, 1142, 331, 332, 1143, 1144, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 352, 350, 976, 349,
	1145, 217, 977, 353, 1146, 511, 354, 512, 356, 357,
	1147, 358, 359, 360, 1148, 1149, 362, 363, 364, 1150,
	1151, 365, 366, 513, 978, 367, 979, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 1152, 376, 377,
	515, 378, 516, 379, 380, 1153, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 1154, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 1155, 404, 980, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 1156, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 1157, 431, 411, 412, 432, 433, 981, 434,
	435, 519, 436, 437, 1158, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 1159, 449, 450,
	448, 1160, 451, 452, 453, 454, 455, 280, 456, 1161,
	457, 521, 522, 523, 524, 1162, 464, 1163, 458, 459,
	525, 460, 526, 1164, 461, 462, 463, 0, 465, 466,
	1165, 1166, 467, 468, 469, 471, 472, 470, 474, 1167,
	475, 1168, 473, 476, 477, 478, 527, 528, 529, 1169,
	480, 479, 530, 1170, 1171, 1172, 1173, 481, 482, 531,
	483, 484, 485, 1086, 0, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 1096, 223, 1097,
	1098, 1099, 0, 1100, 486, 1101, 1102, 1103, 1104, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 1105, 233, 234, 235, 236, 237, 238, 239,
	1106, 1107, 240, 491, 492, 493, 1108, 241, 494, 1109,
	1094, 1110, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 1111, 252, 0, 253, 254, 255, 1112,
	256, 966, 257, 258, 1113, 1114, 1116, 1115, 1117, 1118,
	1119, 259, 260, 261, 262, 263, 264, 495, 496, 1120,
	265, 1121, 267, 266, 1122, 268, 1123, 1124, 269, 270,
	271, 1125, 272, 1126, 273, 274, 1127, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	1128, 215, 1129, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 1130, 292, 1131, 1132, 967,
	293, 294, 1133, 295, 501, 1134, 502, 296, 1135, 297,
	298, 299, 300, 503, 504, 505, 355, 969, 301, 302,
	1136, 303, 304, 306, 0, 0, 216, 305, 307, 314,
	1137, 968, 308, 506, 310, 309, 311, 312, 313, 507,
	1138, 508, 1139, 315, 970, 509, 971, 316, 317, 318,
	972, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	1140, 327, 326, 1141, 328, 510, 973, 329, 330, 974,
	1142, 331, 332, 1143, 1144, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 1145, 217,
	977, 353, 1146, 511, 354, 512, 356, 357, 1147, 358,
	359, 360, 1148, 1149, 362, 363, 364, 1150, 1151, 365,
	366, 513, 978, 367, 979, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 1152, 376, 377, 515, 378,
	516, 379, 380, 1153, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 1154, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 1155, 404, 980, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 1156,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	1157, 431, 411, 412, 432, 433, 981, 434, 435, 519,
	436, 437, 1158, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 1159, 449, 450, 448, 1160,
	451, 452, 453, 454, 455, 280, 456, 1161, 457, 521,
	522, 523, 524, 1162, 464, 1163, 458, 459, 525, 460,
	526, 1164, 461, 462, 463, 0, 465, 466, 1165, 1166,
	467, 468, 469, 471, 472, 470, 474, 1167, 475, 1168,
	473, 476, 477, 478, 527, 528, 529, 1169, 480, 479,
	530, 1170, 1171, 1172, 1173, 481, 482, 531, 483, 484,
	485, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 1096, 223, 1097, 1098, 1099, 0, 1100,
	486, 1101, 1102, 1103, 1104, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 1105, 233,
	234, 235, 236, 237, 238, 239, 1106, 1107, 240, 491,
	492, 493, 1108, 241, 494, 1109, 1094, 1110, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 1111,
	252, 0, 253, 254, 255, 1112, 256, 966, 257, 258,
	1113, 1114, 1116, 1115, 1117, 1118, 1119, 259, 260, 261,
	262, 263, 264, 495, 496, 1120, 265, 1121, 267, 266,
	1122, 268, 1123, 1124, 269, 270, 271, 1125, 272, 1126,
	273, 274, 1127, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 1128, 215, 1129, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 1130, 292, 1131, 1132, 967, 293, 294, 1133, 295,
	501, 1134, 502, 296, 1135, 297, 298, 299, 300, 503,
	504, 505, 355, 969, 301, 302, 1136, 303, 304, 306,
	0, 0, 216, 305, 307, 314, 1137, 968, 308, 506,
	310, 309, 311, 312, 313, 507, 1138, 508, 1139, 315,
	970, 509, 971, 316, 317, 318, 972, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 1140, 327, 326, 1141,
	328, 510, 973, 329, 330, 974, 1142, 331, 332, 1143,
	1144, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 1145, 217, 977, 353, 1146, 511,
	354, 512, 356, 357, 1147, 358, 359, 360, 1148, 1149,
	362, 363, 364, 1150, 1151, 365, 366, 513, 978, 367,
	979, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 1152, 376, 377, 515, 378, 516, 379, 380, 1153,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 1154, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 1155, 404, 980,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 1156, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 1157, 431, 411, 412,
	432, 433, 981, 434, 435, 519, 436, 437, 1158, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 1159, 449, 450, 448, 1160, 451, 452, 453, 454,
	455, 280, 456, 1161, 457, 521, 522, 523, 524, 1162,
	464, 1163, 458, 459, 525, 460, 526, 1164, 461, 462,
	463, 0, 465, 466, 1165, 1166, 467, 468, 469, 471,
	472, 470, 474, 1167, 475, 1168, 473, 476, 477, 478,
	527, 528, 529, 1169, 480, 479, 530, 1170, 1171, 1172,
	1173, 481, 482, 531, 483, 484, 485, 2116, 0, 906,
	864, 865, 866, 862, 863, 875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 2113, 223, 0, 0, 0, 0, 0, 957, 880,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 921,
	900, 932, 232, 890, 931, 930, 0, 233, 234, 892,
	891, 237, 238, 239, 882, 956, 240, 993, 994, 493,
	0, 241, 963, 0, 944, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 966, 257, 258, 947, 945,
	946, 953, 949, 948, 952, 259, 260, 261, 262, 935,
	264, 928, 927, 853, 265, 0, 267, 266, 0, 268,
	2114, 0, 269, 926, 271, 0, 272, 0, 273, 274,
	0, 275, 859, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 984, 985, 871, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 925, 923, 924, 0, 291, 0,
	292, 0, 0, 967, 293, 294, 0, 295, 991, 0,
	881, 296, 0, 297, 298, 299, 300, 958, 959, 962,
	355, 969, 301, 302, 0, 303, 304, 902, 0, 0,
	216, 305, 307, 314, 0, 968, 308, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 315, 970, 960,
	971, 316, 317, 318, 972, 940, 941, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 992,
	973, 329, 330, 974, 0, 331, 332, 951, 950, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 894, 344, 975, 347, 348, 351, 352, 350,
	976, 349, 850, 217, 977, 353, 872, 961, 354, 929,
	356, 357, 0, 903, 359, 904, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 978, 367, 979, 986,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 987, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 922, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 980, 405, 406,
	407, 408, 860, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 895, 896, 898, 899,
	422, 428, 429, 430, 954, 431, 411, 412, 432, 433,
	981, 434, 435, 917, 897, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 965, 443, 444, 445, 988, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	893, 0, 457, 936, 937, 938, 939, 0, 464, 0,
	458, 459, 989, 460, 990, 870, 461, 462, 463, 0,
	465, 466, 0, 854, 467, 468, 469, 471, 472, 470,
	474, 955, 475, 0, 901, 476, 477, 478, 527, 933,
	983, 2112, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 851, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	2115, 0, 0, 0, 0, 0, 0, 876, 2111, 0,
	840, 874, 906, 864, 865, 866, 862, 863, 875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 921, 900, 932, 232, 890, 931, 930, 0,
	233, 234, 892, 891, 237, 238, 239, 882, 956, 240,
	993, 994, 493, 0, 241, 963, 0, 944, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 966, 257,
	258, 947, 945, 946, 953, 949, 948, 952, 259, 260,
	261, 262, 935, 264, 928, 927, 853, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 926, 271, 0, 272,
	0, 273, 274, 0, 275, 859, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 984, 985, 871, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 925, 923, 924,
	0, 291, 0, 292, 0, 0, 967, 293, 294, 0,
	295, 991, 0, 881, 296, 0, 297, 298, 299, 300,
	958, 959, 962, 355, 969, 301, 302, 0, 303, 304,
	902, 0, 0, 216, 305, 307, 314, 0, 968, 308,
	914, 905, 916, 918, 919, 920, 915, 0, 907, 0,
	315, 970, 960, 971, 316, 317, 318, 972, 940, 941,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 992, 973, 329, 330, 974, 0, 331, 332,
	951, 950, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 352, 350, 976, 349, 850, 217, 977, 353, 872,
	961, 354, 929, 356, 357, 0, 903, 359, 904, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 978,
	367, 979, 986, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 987, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	922, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	980, 405, 406, 407, 408, 860, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 181, 426, 427, 895,
	896, 898, 899, 422, 428, 429, 430, 954, 431, 411,
	412, 432, 433, 981, 434, 435, 917, 897, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 965, 443, 444,
	445, 988, 0, 449, 450, 448, 183, 451, 452, 453,
	454, 455, 280, 893, 0, 457, 936, 937, 938, 939,
	0, 464, 0, 458, 459, 989, 460, 990, 870, 461,
	462, 463, 0, 465, 466, 0, 854, 467, 468, 469,
	471, 472, 470, 474, 955, 475, 0, 901, 476, 477,
	478, 1338, 933, 983, 0, 480, 479, 530, 0, 0,
	0, 175, 481, 482, 531, 483, 484, 485, 851, 176,
	0, 0, 0, 0, 849, 0, 0, 0, 0, 0,
	0, 847, 848, 906, 864, 865, 866, 862, 863, 875,
	1549, 1547, 0, 0, 874, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 957, 880, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 921, 900, 932, 232, 890, 931, 930,
	0, 233, 234, 892, 891, 237, 238, 239, 882, 956,
	240, 993, 994, 493, 0, 241, 963, 0, 944, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 966,
	257, 258, 947, 945, 946, 953, 949, 948, 952, 259,
	260, 261, 262, 935, 264, 928, 927, 853, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 926, 271, 0,
	272, 0, 273, 274, 0, 275, 859, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 984, 985, 871, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 925, 923,
	924, 0, 291, 0, 292, 0, 0, 967, 293, 294,
	0, 295, 991, 0, 881, 296, 0, 297, 298, 299,
	300, 958, 959, 962, 355, 969, 301, 302, 0, 303,
	304, 902, 0, 0, 216, 305, 307, 314, 0, 968,
	308, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 315, 970, 960, 971, 316, 317, 318, 972, 940,
	941, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 992, 973, 329, 330, 974, 0, 331,
	332, 951, 950, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 894, 344, 975, 347,
	348, 351, 352, 350, 976, 349, 850, 217, 977, 353,
	872, 961, 354, 929, 356, 357, 0, 903, 359, 904,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	978, 367, 979, 986, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 987, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 922, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 980, 405, 406, 407, 408, 860, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 181, 426, 427,
	895, 896, 898, 899, 422, 428, 429, 430, 954, 431,
	411, 412, 432, 433, 981, 434, 435, 917, 897, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 965, 443,
	444, 445, 988, 0, 449, 450, 448, 183, 451, 452,
	453, 454, 455, 280, 893, 0, 457, 936, 937, 938,
	939, 0, 464, 0, 458, 459, 989, 460, 990, 870,
	461, 462, 463, 0, 465, 466, 0, 854, 467, 468,
	469, 471, 472, 470, 474, 955, 475, 0, 901, 476,
	477, 478, 1338, 933, 983, 0, 480, 479, 530, 0,
	0, 0, 175, 481, 482, 531, 483, 484, 485, 851,
	176, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 847, 848, 906, 864, 865, 866, 862, 863,
	875, 1549, 2586, 0, 0, 874, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 921, 900, 932, 232, 890, 931,
	930, 0, 233, 234, 892, 891, 237, 238, 239, 882,
	956, 240, 993, 994, 493, 0, 241, 963, 0, 944,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	966, 257, 258, 947, 945, 946, 953, 949, 948, 952,
	259, 260, 261, 262, 935, 264, 928, 927, 853, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 926, 271,
	0, 272, 0, 273, 274, 0, 275, 859, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 984, 985, 871,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 925,
	923, 924, 0, 291, 0, 292, 0, 0, 967, 293,
	294, 0, 295, 991, 0, 881, 296, 0, 297, 298,
	299, 300, 958, 959, 962, 355, 969, 301, 302, 0,
	303, 304, 902, 0, 0, 216, 305, 307, 314, 0,
	968, 308, 914, 905, 916, 918, 919, 920, 915, 0,
	907, 0, 315, 970, 960, 971, 316, 317, 318, 972,
	940, 941, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 992, 973, 329, 330, 974, 0,
	331, 332, 951, 950, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 352, 350, 976, 349, 850, 217, 977,
	353, 872, 961, 354, 929, 356, 357, 0, 903, 359,
	904, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 978, 367, 979, 986, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 987, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 922, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 980, 405, 406, 407, 408, 860, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 181, 426,
	427, 895, 896, 898, 899, 422, 428, 429, 430, 954,
	431, 411, 412, 432, 433, 981, 434, 435, 917, 897,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 965,
	443, 444, 445, 988, 0, 449, 450, 448, 183, 451,
	452, 453, 454, 455, 280, 893, 0, 457, 936, 937,
	938, 939, 0, 464, 0, 458, 459, 989, 460, 990,
	870, 461, 462, 463, 0, 465, 466, 0, 854, 467,
	468, 469, 471, 472, 470, 474, 955, 475, 0, 901,
	476, 477, 478, 1338, 933, 983, 0, 480, 479, 530,
	0, 0, 0, 175, 481, 482, 531, 483, 484, 485,
	851, 176, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 0, 0, 847, 848, 906, 864, 865, 866, 862,
	863, 875, 1549, 1547, 0, 0, 874, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 957, 880, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 921, 900, 932, 232, 890,
	931, 930, 2210, 233, 234, 892, 891, 237, 238, 239,
	882, 956, 240, 993, 994, 493, 0, 241, 963, 0,
	944, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 966, 257, 258, 947, 945, 946, 953, 949, 948,
	952, 259, 260, 261, 262, 935, 264, 928, 927, 853,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 926,
	271, 0, 272, 0, 273, 274, 0, 275, 859, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 984, 985,
	871, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	925, 923, 924, 0, 291, 0, 292, 0, 2215, 967,
	293, 294, 0, 295, 991, 0, 881, 296, 0, 297,
	298, 299, 300, 958, 959, 962, 355, 969, 301, 302,
	0, 303, 304, 902, 0, 0, 216, 305, 307, 314,
	0, 968, 308, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 315, 970, 960, 971, 316, 317, 318,
	972, 940, 941, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 2211, 328, 992, 973, 329, 330, 974,
	0, 331, 332, 951, 950, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 894, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 850, 217,
	977, 353, 872, 961, 354, 929, 356, 357, 0, 903,
	359, 904, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 978, 367, 979, 986, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 987, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 922, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 980, 405, 406, 407, 408, 860, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 895, 896, 898, 899, 422, 428, 429, 430,
	954, 431, 411, 412, 432, 433, 981, 434, 435, 917,
	897, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	965, 443, 444, 445, 988, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 893, 0, 457, 936,
	937, 938, 939, 0, 464, 2212, 458, 459, 989, 460,
	990, 870, 461, 462, 463, 0, 465, 466, 0, 854,
	467, 468, 469, 471, 472, 470, 474, 955, 475, 0,
	901, 476, 477, 478, 527, 933, 983, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 0, 0, 0, 0,
	0, 0, 0, 876, 0, 0, 2169, 874, 906, 864,
	865, 866, 862, 863, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 921, 900,
	932, 232, 890, 931, 930, 0, 233, 234, 892, 891,
	237, 238, 239, 882, 956, 240, 993, 994, 493, 0,
	241, 963, 0, 944, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 966, 257, 258, 947, 945, 946,
	953, 949, 948, 952, 259, 260, 261, 262, 935, 264,
	928, 927, 853, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 926, 271, 0, 272, 0, 273, 274, 0,
	275, 859, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 984, 985, 871, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 925, 923, 924, 0, 291, 0, 292,
	0, 0, 967, 293, 294, 0, 295, 991, 0, 881,
	296, 0, 297, 298, 299, 300, 958, 959, 962, 355,
	969, 301, 302, 0, 303, 304, 902, 0, 0, 216,
	305, 307, 314, 0, 968, 308, 914, 905, 916, 918,
	919, 920, 915, 0, 907, 0, 315, 970, 960, 971,
	316, 317, 318, 972, 940, 941, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 992, 973,
	329, 330, 974, 0, 331, 332, 951, 950, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 352, 350, 976,
	349, 850, 217, 977, 353, 872, 961, 354, 929, 356,
	357, 0, 903, 359, 904, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 978, 367, 979, 986, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 987, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 922, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 980, 405, 406, 407,
	408, 860, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 895, 896, 898, 899, 422,
	428, 429, 430, 954, 431, 411, 412, 432, 433, 981,
	434, 435, 917, 897, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 965, 443, 444, 445, 988, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 893,
	0, 457, 936, 937, 938, 939, 0, 464, 0, 458,
	459, 989, 460, 990, 870, 461, 462, 463, 0, 465,
	466, 0, 854, 467, 468, 469, 471, 472, 470, 474,
	955, 475, 0, 901, 476, 477, 478, 527, 933, 983,
	0, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 851, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 847, 848, 0,
	0, 0, 0, 0, 0, 0, 876, 2167, 0, 2166,
	874, 906, 864, 865, 866, 862, 863, 875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	957, 880, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 921, 900, 932, 232, 890, 931, 930, 0, 233,
	234, 892, 891, 237, 238, 239, 882, 956, 240, 993,
	994, 493, 0, 241, 963, 0, 944, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 966, 257, 258,
	947, 945, 946, 953, 949, 948, 952, 259, 260, 261,
	262, 935, 264, 928, 927, 853, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 926, 271, 0, 272, 0,
	273, 274, 0, 275, 859, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 984, 985, 871, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 925, 923, 924, 0,
	291, 0, 292, 0, 0, 967, 293, 294, 0, 295,
	991, 0, 881, 296, 0, 297, 298, 299, 300, 958,
	959, 962, 355, 969, 301, 302, 0, 303, 304, 902,
	0, 0, 216, 305, 307, 314, 0, 968, 308, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 315,
	970, 960, 971, 316, 317, 318, 972, 940, 941, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 992, 973, 329, 330, 974, 0, 331, 332, 951,
	950, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 894, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 850, 217, 977, 353, 872, 961,
	354, 929, 356, 357, 0, 903, 359, 904, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 978, 367,
	979, 986, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 987, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 922,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 980,
	405, 406, 407, 408, 860, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 895, 896,
	898, 899, 422, 428, 429, 430, 954, 431, 411, 412,
	432, 433, 981, 434, 435, 917, 897, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 965, 443, 444, 445,
	988, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 893, 0, 457, 936, 937, 938, 939, 0,
	464, 0, 458, 459, 989, 460, 990, 870, 461, 462,
	463, 0, 465, 466, 0, 854, 467, 468, 469, 471,
	472, 470, 474, 955, 475, 0, 901, 476, 477, 478,
	527, 933, 983, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 0, 0, 0, 0, 0, 0, 0, 876,
	2164, 0, 2163, 874, 906, 864, 865, 866, 862, 863,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 921, 900, 932, 232, 890, 931,
	930, 0, 233, 234, 892, 891, 237, 238, 239, 882,
	956, 240, 993, 994, 493, 0, 241, 963, 0, 944,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	966, 257, 258, 947, 945, 946, 953, 949, 948, 952,
	259, 260, 261, 262, 935, 264, 928, 927, 853, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 926, 271,
	0, 272, 0, 273, 274, 0, 275, 859, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 984, 985, 871,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 925,
	923, 924, 0, 291, 0, 292, 0, 0, 967, 293,
	294, 0, 295, 991, 0, 881, 296, 0, 297, 298,
	299, 300, 958, 959, 962, 355, 969, 301, 302, 0,
	303, 304, 902, 0, 0, 216, 305, 307, 314, 0,
	968, 308, 914, 905, 916, 918, 919, 920, 915, 0,
	907, 0, 315, 970, 960, 971, 316, 317, 318, 972,
	940, 941, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 992, 973, 329, 330, 974, 0,
	331, 332, 951, 950, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 352, 350, 976, 349, 850, 217, 977,
	353, 872, 961, 354, 929, 356, 357, 0, 903, 359,
	904, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 978, 367, 979, 986, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 987, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 922, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 980, 405, 406, 407, 408, 860, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 895, 896, 898, 899, 422, 428, 429, 430, 954,
	431, 411, 412, 432, 433, 981, 434, 435, 917, 897,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 965,
	443, 444, 445, 988, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 893, 0, 457, 936, 937,
	938, 939, 0, 464, 0, 458, 459, 989, 460, 990,
	870, 461, 462, 463, 0, 465, 466, 0, 854, 467,
	468, 469, 471, 472, 470, 474, 955, 475, 0, 901,
	476, 477, 478, 527, 933, 983, 0, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	851, 0, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 0, 0, 847, 848, 0, 0, 0, 0, 0,
	0, 0, 876, 2161, 0, 2160, 874, 906, 864, 865,
	866, 862, 863, 875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 957, 880, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 921, 900, 932,
	232, 890, 931, 930, 0, 233, 234, 892, 891, 237,
	238, 239, 882, 956, 240, 993, 994, 493, 0, 241,
	963, 0, 944, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 966, 257, 258, 947, 945, 946, 953,
	949, 948, 952, 259, 260, 261, 262, 935, 264, 928,
	927, 853, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 926, 271, 0, 272, 0, 273, 274, 0, 275,
	859, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	984, 985, 871, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 925, 923, 924, 0, 291, 0, 292, 0,
	0, 967, 293, 294, 0, 295, 991, 0, 881, 296,
	0, 297, 298, 299, 300, 958, 959, 962, 355, 969,
	301, 302, 0, 303, 304, 902, 0, 0, 216, 305,
	307, 314, 0, 968, 308, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 315, 970, 960, 971, 316,
	317, 318, 972, 940, 941, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 992, 973, 329,
	330, 974, 0, 331, 332, 951, 950, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	894, 344, 975, 347, 348, 351, 352, 350, 976, 349,
	850, 217, 977, 353, 872, 961, 354, 929, 356, 357,
	0, 903, 359, 904, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 978, 367, 979, 986, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	987, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 922, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 980, 405, 406, 407, 408,
	860, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 895, 896, 898, 899, 422, 428,
	429, 430, 954, 431, 411, 412, 432, 433, 981, 434,
	435, 917, 897, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 965, 443, 444, 445, 988, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 893, 0,
	457, 936, 937, 938, 939, 0, 464, 0, 458, 459,
	989, 460, 990, 870, 461, 462, 463, 0, 465, 466,
	0, 854, 467, 468, 469, 471, 472, 470, 474, 955,
	475, 0, 901, 476, 477, 478, 527, 933, 983, 0,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 0, 0,
	0, 0, 0, 0, 0, 876, 2158, 0, 1408, 874,
	906, 864, 865, 866, 862, 863, 875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	921, 900, 932, 232, 890, 931, 930, 0, 233, 234,
	892, 891, 237, 238, 239, 882, 956, 240, 993, 994,
	493, 0, 241, 963, 0, 944, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 966, 257, 258, 947,
	945, 946, 953, 949, 948, 952, 259, 260, 261, 262,
	935, 264, 928, 927, 853, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 926, 271, 0, 272, 0, 273,
	274, 0, 275, 859, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 984, 985, 871, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 925, 923, 924, 0, 291,
	0, 292, 0, 0, 967, 293, 294, 0, 295, 991,
	0, 881, 296, 0, 297, 298, 299, 300, 958, 959,
	962, 355, 969, 301, 302, 0, 303, 304, 902, 0,
	0, 216, 305, 307, 314, 0, 968, 308, 914, 905,
	916, 918, 919, 920, 915, 0, 907, 0, 315, 970,
	960, 971, 316, 317, 318, 972, 940, 941, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	992, 973, 329, 330, 974, 0, 331, 332, 951, 950,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 352,
	350, 976, 349, 850, 217, 977, 353, 872, 961, 354,
	929, 356, 357, 0, 903, 359, 904, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 978, 367, 979,
	986, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 987, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 922, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 980, 405,
	406, 407, 408, 860, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 895, 896, 898,
	899, 422, 428, 429, 430, 954, 431, 411, 412, 432,
	433, 981, 434, 435, 917, 897, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 965, 443, 444, 445, 988,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 893, 0, 457, 936, 937, 938, 939, 0, 464,
	0, 458, 459, 989, 460, 990, 870, 461, 462, 463,
	0, 465, 466, 0, 854, 467, 468, 469, 471, 472,
	470, 474, 955, 475, 0, 901, 476, 477, 478, 527,
	933, 983, 0, 480, 479, 530, 1407, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 851, 0, 0, 0,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 847,
	848, 0, 0, 0, 0, 0, 0, 0, 876, 0,
	0, 843, 874, 906, 864, 865, 866, 862, 863, 875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 957, 880, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 921, 900, 932, 232, 890, 931, 930,
	0, 233, 234, 892, 891, 237, 238, 239, 882, 956,
	240, 993, 994, 493, 0, 241, 963, 0, 944, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 966,
	257, 258, 947, 945, 946, 953, 949, 948, 952, 259,
	260, 261, 262, 935, 264, 928, 927, 853, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 926, 271, 0,
	272, 0, 273, 274, 0, 275, 859, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 984, 985, 871, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 925, 923,
	924, 0, 291, 0, 292, 0, 0, 967, 293, 294,
	0, 295, 991, 0, 881, 296, 0, 297, 298, 299,
	300, 958, 959, 962, 355, 969, 301, 302, 0, 303,
	304, 902, 0, 0, 216, 305, 307, 314, 0, 968,
	308, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 315, 970, 960, 971, 316, 317, 318, 972, 940,
	941, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 992, 973, 329, 330, 974, 0, 331,
	332, 951, 950, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 894, 344, 975, 347,
	348, 351, 352, 350, 976, 349, 850, 217, 977, 353,
	872, 961, 354, 929, 356, 357, 0, 903, 359, 904,
	855, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	978, 367, 979, 986, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 987, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 922, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 980, 405, 406, 407, 408, 860, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	895, 896, 898, 899, 422, 428, 429, 430, 954, 431,
	411, 412, 432, 433, 981, 434, 435, 917, 897, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 965, 443,
	444, 445, 988, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 893, 0, 457, 936, 937, 938,
	939, 0, 464, 0, 458, 459, 989, 460, 990, 870,
	461, 462, 463, 0, 465, 466, 0, 854, 467, 468,
	469, 471, 472, 470, 474, 955, 475, 0, 901, 476,
	477, 478, 527, 933, 983, 0, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 851,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 847, 848, 906, 864, 865, 866, 862, 863,
	875, 876, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 921, 900, 932, 232, 890, 931,
	930, 0, 233, 234, 892, 891, 237, 238, 239, 882,
	956, 240, 993, 994, 493, 0, 241, 963, 0, 944,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 3613, 255, 0, 256,
	966, 257, 258, 947, 945, 946, 953, 949, 948, 952,
	259, 260, 261, 262, 935, 264, 928, 927, 853, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 926, 271,
	0, 272, 0, 273, 274, 0, 275, 859, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 984, 985, 871,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 925,
	923, 924, 0, 291, 0, 292, 0, 0, 967, 293,
	294, 0, 295, 991, 0, 881, 296, 0, 297, 298,
	299, 300, 958, 959, 962, 355, 969, 301, 302, 0,
	303, 304, 902, 0, 0, 216, 305, 307, 314, 0,
	968, 308, 914, 905, 916, 918, 919, 920, 915, 0,
	907, 0, 315, 970, 960, 971, 316, 317, 318, 972,
	940, 941, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 992, 973, 329, 330, 974, 0,
	331, 332, 951, 950, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 352, 350, 976, 349, 850, 217, 977,
	353, 872, 961, 354, 929, 356, 357, 0, 903, 359,
	904, 855, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 978, 367, 979, 986, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 987, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 922, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 980, 405, 406, 407, 408, 860, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 895, 896, 898, 899, 422, 428, 429, 430, 954,
	431, 411, 412, 432, 433, 981, 434, 435, 917, 897,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 965,
	443, 444, 445, 988, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 893, 0, 457, 936, 937,
	938, 939, 0, 464, 0, 458, 459, 989, 460, 990,
	870, 461, 462, 463, 0, 465, 466, 0, 854, 467,
	468, 469, 471, 472, 470, 474, 955, 475, 0, 901,
	476, 477, 478, 527, 933, 983, 0, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	851, 0, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 0, 0, 847, 848, 906, 864, 865, 866, 862,
	863, 875, 876, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 957, 880, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 921, 900, 932, 232, 890,
	931, 930, 0, 233, 234, 892, 891, 237, 238, 239,
	882, 956, 240, 993, 994, 493, 0, 241, 963, 0,
	944, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 3447, 255, 0,
	256, 966, 257, 258, 947, 945, 946, 953, 949, 948,
	952, 259, 260, 261, 262, 935, 264, 928, 927, 853,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 926,
	271, 0, 272, 0, 273, 274, 0, 275, 859, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 984, 985,
	871, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	925, 923, 924, 0, 291, 0, 292, 0, 0, 967,
	293, 294, 0, 295, 991, 0, 881, 296, 0, 297,
	298, 299, 300, 958, 959, 962, 355, 969, 301, 302,
	0, 303, 304, 902, 0, 0, 216, 305, 307, 314,
	0, 968, 308, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 315, 970, 960, 971, 316, 317, 318,
	972, 940, 941, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 992, 973, 329, 330, 974,
	0, 331, 332, 951, 950, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 894, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 850, 217,
	977, 353, 872, 961, 354, 929, 356, 357, 0, 903,
	359, 904, 855, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 978, 367, 979, 986, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 987, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 922, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 980, 405, 406, 407, 408, 860, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 895, 896, 898, 899, 422, 428, 429, 430,
	954, 431, 411, 412, 432, 433, 981, 434, 435, 917,
	897, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	965, 443, 444, 445, 988, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 893, 0, 457, 936,
	937, 938, 939, 0, 464, 0, 458, 459, 989, 460,
	990, 870, 461, 462, 463, 0, 465, 466, 0, 854,
	467, 468, 469, 471, 472, 470, 474, 955, 475, 0,
	901, 476, 477, 478, 527, 933, 983, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 906, 864, 865, 866,
	862, 863, 875, 876, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 921, 900, 932, 232,
	890, 931, 930, 0, 233, 234, 892, 891, 237, 238,
	239, 882, 956, 240, 993, 994, 493, 0, 241, 963,
	0, 944, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 966, 257, 258, 947, 945, 946, 953, 949,
	948, 952, 259, 260, 261, 262, 935, 264, 928, 927,
	853, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	926, 271, 0, 272, 0, 273, 274, 0, 275, 859,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 984,
	985, 871, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 925, 923, 924, 0, 291, 0, 292, 0, 0,
	967, 293, 294, 0, 295, 991, 0, 881, 296, 0,
	297, 298, 299, 300, 958, 959, 962, 355, 969, 301,
	302, 0, 303, 304, 902, 0, 0, 216, 305, 307,
	314, 0, 968, 308, 914, 905, 916, 918, 919, 920,
	915, 0, 907, 0, 315, 970, 960, 971, 316, 317,
	318, 972, 940, 941, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 992, 973, 329, 330,
	974, 0, 331, 332, 951, 950, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 894,
	344, 975, 347, 348, 351, 352, 350, 976, 349, 850,
	3165, 977, 353, 872, 961, 354, 929, 356, 357, 0,
	903, 359, 904, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 978, 367, 979, 986, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 987,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 922, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 980, 405, 406, 407, 408, 860,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 895, 896, 898, 899, 422, 428, 429,
	430, 954, 431, 411, 412, 432, 433, 981, 434, 435,
	917, 897, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 965, 443, 444, 445, 988, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 893, 0, 457,
	936, 937, 938, 939, 0, 464, 0, 458, 459, 989,
	460, 990, 870, 461, 462, 463, 0, 465, 466, 0,
	854, 467, 468, 469, 471, 472, 470, 474, 955, 475,
	0, 901, 476, 477, 478, 527, 933, 983, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 851, 0, 0, 0, 0, 0, 849, 0,
	0, 0, 0, 0, 0, 847, 848, 1613, 0, 0,
	0, 0, 0, 0, 876, 0, 0, 0, 874, 906,
	864, 865, 866, 862, 863, 875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 957, 880,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 921,
	900, 932, 232, 890, 931, 930, 0, 233, 234, 892,
	891, 237, 238, 239, 882, 956, 240, 993, 994, 493,
	0, 241, 963, 0, 944, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 966, 257, 258, 947, 945,
	946, 953, 949, 948, 952, 259, 260, 261, 262, 935,
	264, 928, 927, 853, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 926, 271, 0, 272, 0, 273, 274,
	0, 275, 859, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 984, 985, 871, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 925, 923, 924, 0, 291, 0,
	292, 0, 0, 967, 293, 294, 0, 295, 991, 0,
	881, 296, 0, 297, 298, 299, 300, 958, 959, 962,
	355, 969, 301, 302, 0, 303, 304, 902, 0, 0,
	216, 305, 307, 314, 0, 968, 308, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 315, 970, 960,
	971, 316, 317, 318, 972, 940, 941, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 992,
	973, 329, 330, 974, 0, 331, 332, 951, 950, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 894, 344, 975, 347, 348, 351, 352, 350,
	976, 349, 850, 217, 977, 353, 872, 961, 354, 929,
	356, 357, 0, 903, 359, 904, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 978, 367, 979, 986,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 987, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 922, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 980, 405, 406,
	407, 408, 860, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 895, 896, 898, 899,
	422, 428, 429, 430, 954, 431, 411, 412, 432, 433,
	981, 434, 435, 917, 897, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 965, 443, 444, 445, 988, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	893, 0, 457, 936, 937, 938, 939, 0, 464, 0,
	458, 459, 989, 460, 990, 870, 461, 462, 463, 0,
	465, 466, 0, 854, 467, 468, 469, 471, 472, 470,
	474, 955, 475, 0, 901, 476, 477, 478, 527, 933,
	983, 2966, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 851, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	906, 864, 865, 866, 862, 863, 875, 876, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	921, 900, 932, 232, 890, 931, 930, 0, 233, 234,
	892, 891, 237, 238, 239, 882, 956, 240, 993, 994,
	493, 0, 241, 963, 0, 944, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 966, 257, 258, 947,
	945, 946, 953, 949, 948, 952, 259, 260, 261, 262,
	935, 264, 928, 927, 853, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 926, 271, 0, 272, 0, 273,
	274, 0, 275, 859, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 984, 985, 871, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 925, 923, 924, 0, 291,
	0, 292, 0, 0, 967, 293, 294, 0, 295, 991,
	0, 881, 296, 0, 297, 298, 299, 300, 958, 959,
	962, 355, 969, 301, 302, 0, 303, 304, 902, 0,
	0, 2030, 305, 307, 314, 0, 968, 308, 914, 905,
	916, 918, 919, 920, 915, 0, 907, 0, 315, 970,
	960, 971, 316, 317, 318, 972, 940, 941, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	992, 973, 329, 330, 974, 0, 331, 332, 951, 950,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 352,
	350, 976, 349, 850, 217, 977, 353, 872, 961, 354,
	929, 356, 357, 0, 903, 359, 904, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 978, 367, 979,
	986, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 987, 378, 516, 379, 380, 2029, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 922, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 980, 405,
	406, 407, 408, 860, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 895, 896, 898,
	899, 422, 428, 429, 430, 954, 431, 411, 412, 432,
	433, 981, 434, 435, 917, 897, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 965, 443, 444, 445, 988,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 893, 0, 457, 936, 937, 938, 939, 0, 464,
	0, 458, 459, 989, 460, 990, 870, 461, 462, 463,
	0, 465, 466, 0, 854, 467, 468, 469, 471, 472,
	470, 474, 955, 475, 0, 901, 476, 477, 478, 527,
	933, 983, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 851, 0, 0, 0,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 847,
	848, 906, 864, 865, 866, 862, 863, 875, 876, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	957, 880, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 921, 900, 932, 232, 890, 931, 930, 0, 233,
	234, 892, 891, 237, 238, 239, 882, 956, 240, 993,
	994, 493, 0, 241, 963, 0, 944, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 966, 257, 258,
	947, 945, 946, 953, 949, 948, 952, 259, 260, 261,
	262, 935, 264, 928, 927, 853, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 926, 271, 0, 272, 0,
	273, 274, 0, 275, 859, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 984, 985, 871, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 925, 923, 924, 0,
	291, 0, 292, 0, 0, 967, 293, 294, 0, 295,
	991, 0, 881, 296, 0, 297, 298, 299, 300, 958,
	959, 962, 355, 969, 301, 302, 0, 303, 304, 902,
	0, 0, 216, 305, 307, 314, 0, 968, 308, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 315,
	970, 960, 971, 316, 317, 318, 972, 940, 941, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 992, 973, 329, 330, 974, 0, 331, 332, 951,
	950, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 894, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 850, 217, 977, 353, 872, 961,
	354, 929, 356, 357, 0, 903, 359, 904, 855, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 978, 367,
	979, 986, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 987, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 922,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 980,
	405, 406, 407, 408, 860, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 895, 896,
	898, 899, 422, 428, 429, 430, 954, 431, 411, 412,
	432, 433, 981, 434, 435, 917, 897, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 965, 443, 444, 445,
	988, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 893, 0, 457, 936, 937, 938, 939, 0,
	464, 0, 458, 459, 989, 460, 990, 870, 461, 462,
	463, 0, 465, 466, 0, 854, 467, 468, 469, 471,
	472, 470, 474, 955, 475, 0, 901, 476, 477, 478,
	527, 933, 983, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 906, 864, 865, 866, 862, 863, 875, 876,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 921, 900, 932, 232, 890, 931, 930, 0,
	233, 234, 892, 891, 237, 238, 239, 882, 956, 240,
	993, 994, 493, 0, 241, 963, 0, 944, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 966, 257,
	258, 947, 945, 946, 953, 949, 948, 952, 259, 260,
	261, 262, 935, 264, 928, 927, 853, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 926, 271, 0, 272,
	0, 273, 274, 0, 275, 859, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 984, 985, 871, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 925, 923, 924,
	0, 291, 0, 292, 0, 0, 967, 293, 294, 0,
	295, 991, 0, 881, 296, 0, 297, 298, 299, 300,
	958, 959, 962, 355, 969, 301, 302, 0, 303, 304,
	902, 0, 0, 216, 305, 307, 314, 0, 968, 308,
	914, 905, 916, 918, 919, 920, 915, 0, 907, 0,
	315, 970, 960, 971, 316, 317, 318, 972, 940, 941,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 992, 973, 329, 330, 974, 0, 331, 332,
	951, 950, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 352, 350, 976, 349, 850, 217, 977, 353, 872,
	961, 354, 929, 356, 357, 0, 903, 359, 904, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 978,
	367, 979, 986, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 987, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	922, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	980, 405, 406, 407, 408, 860, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 895,
	896, 898, 899, 422, 428, 429, 430, 954, 431, 411,
	412, 432, 433, 981, 434, 435, 917, 897, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 965, 443, 444,
	445, 988, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 893, 0, 457, 936, 937, 938, 939,
	0, 464, 0, 458, 459, 989, 460, 990, 870, 461,
	462, 463, 0, 465, 466, 0, 854, 467, 468, 469,
	471, 472, 470, 474, 955, 475, 0, 901, 476, 477,
	478, 527, 933, 983, 0, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 851, 0,
	0, 0, 0, 0, 849, 0, 0, 0, 0, 0,
	0, 847, 848, 1613, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 0, 874, 906, 864, 865, 866, 862,
	863, 875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 957, 880, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 921, 900, 932, 232, 890,
	931, 930, 0, 233, 234, 892, 891, 237, 238, 239,
	882, 956, 240, 993, 994, 493, 0, 241, 963, 0,
	944, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 966, 257, 258, 947, 945, 946, 953, 949, 948,
	952, 259, 260, 261, 262, 935, 264, 928, 927, 853,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 926,
	271, 0, 272, 0, 273, 274, 0, 275, 859, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 984, 985,
	871, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	925, 923, 924, 0, 291, 0, 292, 0, 2215, 967,
	293, 294, 0, 295, 991, 0, 881, 296, 0, 297,
	298, 299, 300, 958, 959, 962, 355, 969, 301, 302,
	0, 303, 304, 902, 0, 0, 216, 305, 307, 314,
	0, 968, 308, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 315, 970, 960, 971, 316, 317, 318,
	972, 940, 941, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 992, 973, 329, 330, 974,
	0, 331, 332, 951, 950, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 894, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 850, 217,
	977, 353, 872, 961, 354, 929, 356, 357, 0, 903,
	359, 904, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 978, 367, 979, 986, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 987, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 922, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 980, 405, 406, 407, 408, 860, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 895, 896, 898, 899, 422, 428, 429, 430,
	954, 431, 411, 412, 432, 433, 981, 434, 435, 917,
	897, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	965, 443, 444, 445, 988, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 893, 0, 457, 936,
	937, 938, 939, 0, 464, 0, 458, 459, 989, 460,
	990, 870, 461, 462, 463, 0, 465, 466, 0, 854,
	467, 468, 469, 471, 472, 470, 474, 955, 475, 0,
	901, 476, 477, 478, 527, 933, 983, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 906, 864, 865, 866,
	862, 863, 875, 876, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 921, 900, 932, 232,
	890, 931, 930, 0, 233, 234, 892, 891, 237, 238,
	239, 882, 956, 240, 993, 994, 493, 0, 241, 963,
	0, 944, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 966, 257, 258, 947, 945, 946, 953, 949,
	948, 952, 259, 260, 261, 262, 935, 264, 928, 927,
	853, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	926, 271, 0, 272, 0, 273, 274, 0, 275, 859,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 984,
	985, 871, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 925, 923, 924, 0, 291, 0, 292, 0, 0,
	967, 293, 294, 0, 295, 991, 0, 881, 296, 0,
	297, 298, 299, 300, 958, 959, 962, 355, 969, 301,
	302, 0, 303, 304, 902, 0, 0, 216, 305, 307,
	314, 0, 968, 308, 914, 905, 916, 918, 919, 920,
	915, 0, 907, 0, 315, 970, 960, 971, 316, 317,
	318, 972, 940, 941, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 992, 973, 329, 330,
	974, 0, 331, 332, 951, 950, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 894,
	344, 975, 347, 348, 351, 352, 350, 976, 349, 850,
	217, 977, 353, 872, 961, 354, 929, 356, 357, 0,
	903, 359, 904, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 978, 367, 979, 986, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 987,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 922, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 980, 405, 406, 407, 408, 860,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 895, 896, 898, 899, 422, 428, 429,
	430, 954, 431, 411, 412, 432, 433, 981, 434, 435,
	917, 897, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 965, 443, 444, 445, 988, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 893, 0, 457,
	936, 937, 938, 939, 0, 464, 0, 458, 459, 989,
	460, 990, 870, 461, 462, 463, 0, 465, 466, 0,
	854, 467, 468, 469, 471, 472, 470, 474, 955, 475,
	0, 901, 476, 477, 478, 527, 933, 983, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 851, 0, 0, 0, 0, 0, 849, 0,
	0, 0, 0, 0, 0, 847, 848, 0, 0, 0,
	0, 0, 0, 0, 876, 1547, 0, 2220, 874, 906,
	864, 865, 866, 862, 863, 875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 957, 880,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 921,
	900, 932, 232, 890, 931, 930, 0, 233, 234, 892,
	891, 237, 238, 239, 882, 956, 240, 993, 994, 493,
	0, 241, 963, 0, 944, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 966, 257, 258, 947, 945,
	946, 953, 949, 948, 952, 259, 260, 261, 262, 935,
	264, 928, 927, 853, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 926, 271, 0, 272, 0, 273, 274,
	0, 275, 859, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 984, 985, 871, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 925, 923, 924, 0, 291, 0,
	292, 0, 0, 967, 293, 294, 0, 295, 991, 0,
	881, 296, 0, 297, 298, 299, 300, 958, 959, 962,
	355, 969, 301, 302, 0, 303, 304, 902, 0, 0,
	216, 305, 307, 314, 0, 968, 308, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 315, 970, 960,
	971, 316, 317, 318, 972, 940, 941, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 992,
	973, 329, 330, 974, 0, 331, 332, 951, 950, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 894, 344, 975, 347, 348, 351, 352, 350,
	976, 349, 850, 217, 977, 353, 872, 961, 354, 929,
	356, 357, 0, 903, 359, 904, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 978, 367, 979, 986,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 987, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 922, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 980, 405, 406,
	407, 408, 860, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 895, 896, 898, 899,
	422, 428, 429, 430, 954, 431, 411, 412, 432, 433,
	981, 434, 435, 917, 897, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 965, 443, 444, 445, 988, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	893, 0, 457, 936, 937, 938, 939, 0, 464, 0,
	458, 459, 989, 460, 990, 870, 461, 462, 463, 0,
	465, 466, 0, 854, 467, 468, 469, 471, 472, 470,
	474, 955, 475, 0, 901, 476, 477, 478, 527, 933,
	983, 0, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 851, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	2218, 874, 906, 864, 865, 866, 862, 863, 875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 921, 900, 932, 232, 890, 931, 930, 0,
	233, 234, 892, 891, 237, 238, 239, 882, 956, 240,
	993, 994, 493, 0, 241, 963, 0, 944, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 966, 257,
	258, 947, 945, 946, 953, 949, 948, 952, 259, 260,
	261, 262, 935, 264, 928, 927, 853, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 926, 271, 0, 272,
	0, 273, 274, 0, 275, 859, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 984, 985, 871, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 925, 923, 924,
	0, 291, 0, 292, 0, 0, 967, 293, 294, 0,
	295, 991, 0, 881, 296, 0, 297, 298, 299, 300,
	958, 959, 962, 355, 969, 301, 302, 0, 303, 304,
	902, 0, 0, 216, 305, 307, 314, 0, 968, 308,
	914, 905, 916, 918, 919, 920, 915, 0, 907, 0,
	315, 970, 960, 971, 316, 317, 318, 972, 940, 941,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 992, 973, 329, 330, 974, 0, 331, 332,
	951, 950, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 352, 350, 976, 349, 850, 217, 977, 353, 872,
	961, 354, 929, 356, 357, 0, 903, 359, 904, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 978,
	367, 979, 986, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 987, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	922, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	980, 405, 406, 407, 408, 860, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 895,
	896, 898, 899, 422, 428, 429, 430, 954, 431, 411,
	412, 432, 433, 981, 434, 435, 917, 897, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 965, 443, 444,
	445, 988, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 893, 0, 457, 936, 937, 938, 939,
	0, 464, 0, 458, 459, 989, 460, 990, 870, 461,
	462, 463, 0, 465, 466, 0, 854, 467, 468, 469,
	471, 472, 470, 474, 955, 475, 0, 901, 476, 477,
	478, 527, 933, 983, 0, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 851, 0,
	0, 0, 0, 0, 849, 0, 0, 0, 0, 0,
	0, 847, 848, 0, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 2206, 874, 906, 864, 865, 866, 862,
	863, 875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 957, 880, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 921, 900, 932, 232, 890,
	931, 930, 0, 233, 234, 892, 891, 237, 238, 239,
	882, 956, 240, 993, 994, 493, 0, 241, 963, 0,
	944, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 966, 257, 258, 947, 945, 946, 953, 949, 948,
	952, 259, 260, 261, 262, 935, 264, 928, 927, 853,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 926,
	271, 0, 272, 0, 273, 274, 0, 275, 859, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 984, 985,
	871, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	925, 923, 924, 0, 291, 0, 292, 0, 0, 967,
	293, 294, 0, 295, 991, 0, 881, 296, 0, 297,
	298, 299, 300, 958, 959, 962, 355, 969, 301, 302,
	0, 303, 304, 902, 0, 0, 216, 305, 307, 314,
	0, 968, 308, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 315, 970, 960, 971, 316, 317, 318,
	972, 940, 941, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 992, 973, 329, 330, 974,
	0, 331, 332, 951, 950, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 894, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 850, 217,
	977, 353, 872, 961, 354, 929, 356, 357, 0, 903,
	359, 904, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 978, 367, 979, 986, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 987, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 922, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 980, 405, 406, 407, 408, 860, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 895, 896, 898, 899, 422, 428, 429, 430,
	954, 431, 411, 412, 432, 433, 981, 434, 435, 917,
	897, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	965, 443, 444, 445, 988, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 893, 0, 457, 936,
	937, 938, 939, 0, 464, 0, 458, 459, 989, 460,
	990, 870, 461, 462, 463, 0, 465, 466, 0, 854,
	467, 468, 469, 471, 472, 470, 474, 955, 475, 0,
	901, 476, 477, 478, 527, 933, 983, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 0, 0, 0, 0,
	0, 0, 0, 876, 0, 0, 2195, 874, 906, 864,
	865, 866, 862, 863, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 921, 900,
	932, 232, 890, 931, 930, 0, 233, 234, 892, 891,
	237, 238, 239, 882, 956, 240, 993, 994, 493, 0,
	241, 963, 0, 944, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 966, 257, 258, 947, 945, 946,
	953, 949, 948, 952, 259, 260, 261, 262, 935, 264,
	928, 927, 853, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 926, 271, 0, 272, 0, 273, 274, 0,
	275, 859, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 984, 985, 871, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 925, 923, 924, 0, 291, 0, 292,
	0, 0, 967, 293, 294, 0, 295, 991, 0, 881,
	296, 0, 297, 298, 299, 300, 958, 959, 962, 355,
	969, 301, 302, 0, 303, 304, 902, 0, 0, 216,
	305, 307, 314, 0, 968, 308, 914, 905, 916, 918,
	919, 920, 915, 0, 907, 0, 315, 970, 960, 971,
	316, 317, 318, 972, 940, 941, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 992, 973,
	329, 330, 974, 0, 331, 332, 951, 950, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 352, 350, 976,
	349, 850, 217, 977, 353, 872, 961, 354, 929, 356,
	357, 0, 903, 359, 904, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 978, 367, 979, 986, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 987, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 922, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 980, 405, 406, 407,
	408, 860, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 895, 896, 898, 899, 422,
	428, 429, 430, 954, 431, 411, 412, 432, 433, 981,
	434, 435, 917, 897, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 965, 443, 444, 445, 988, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 893,
	0, 457, 936, 937, 938, 939, 0, 464, 0, 458,
	459, 989, 460, 990, 870, 461, 462, 463, 0, 465,
	466, 0, 854, 467, 468, 469, 471, 472, 470, 474,
	955, 475, 0, 901, 476, 477, 478, 527, 933, 983,
	0, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 851, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 847, 848, 0,
	0, 0, 0, 0, 0, 0, 876, 0, 0, 2193,
	874, 2184, 2191, 865, 866, 862, 863, 875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	957, 880, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 921, 900, 932, 232, 890, 931, 930, 0, 233,
	234, 892, 891, 237, 238, 239, 882, 956, 240, 993,
	994, 493, 0, 241, 963, 0, 944, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 966, 257, 258,
	947, 945, 946, 953, 949, 948, 952, 259, 260, 261,
	262, 935, 2187, 928, 927, 853, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 926, 271, 0, 272, 0,
	273, 274, 0, 275, 859, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 984, 985, 871, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 925, 923, 924, 0,
	291, 0, 292, 0, 0, 967, 293, 294, 0, 295,
	991, 0, 881, 296, 0, 297, 298, 299, 2188, 958,
	959, 962, 355, 969, 301, 302, 0, 303, 304, 902,
	0, 0, 216, 305, 307, 314, 0, 968, 308, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 315,
	970, 960, 971, 316, 317, 318, 972, 940, 941, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 992, 973, 329, 330, 974, 0, 331, 332, 951,
	950, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 2189, 2186, 345, 894, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 850, 217, 977, 353, 872, 961,
	354, 929, 356, 357, 0, 903, 359, 904, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 978, 367,
	979, 986, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 987, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 922,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 980,
	405, 406, 407, 408, 860, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 2190, 0, 426, 427, 895, 896,
	898, 899, 422, 428, 429, 430, 954, 431, 411, 412,
	432, 433, 981, 434, 435, 917, 897, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 965, 443, 444, 445,
	988, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 893, 0, 457, 936, 937, 938, 939, 0,
	464, 0, 458, 459, 989, 460, 990, 870, 461, 462,
	463, 0, 465, 466, 0, 854, 467, 468, 469, 471,
	472, 470, 474, 955, 475, 0, 901, 476, 477, 478,
	527, 933, 983, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 2185, 485, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 2181, 874, 2184, 2191, 865, 866, 862, 863,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 921, 900, 932, 232, 890, 931,
	930, 0, 233, 234, 892, 891, 237, 238, 239, 882,
	956, 240, 993, 994, 493, 0, 241, 963, 0, 944,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	966, 257, 258, 947, 945, 946, 953, 949, 948, 952,
	259, 260, 261, 262, 935, 2187, 928, 927, 853, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 926, 271,
	0, 272, 0, 273, 274, 0, 275, 859, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 984, 985, 871,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 925,
	923, 924, 0, 291, 0, 292, 0, 0, 967, 293,
	294, 0, 295, 991, 0, 881, 296, 0, 297, 298,
	299, 2188, 958, 959, 962, 355, 969, 301, 302, 0,
	303, 304, 902, 0, 0, 216, 305, 307, 314, 0,
	968, 308, 914, 905, 916, 918, 919, 920, 915, 0,
	907, 0, 315, 970, 960, 971, 316, 317, 318, 972,
	940, 941, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 992, 973, 329, 330, 974, 0,
	331, 332, 951, 950, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 2189, 2186, 345, 894, 344, 975,
	347, 348, 351, 352, 350, 976, 349, 850, 217, 977,
	353, 872, 961, 354, 929, 356, 357, 0, 903, 359,
	904, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 978, 367, 979, 986, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 987, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 922, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 980, 405, 406, 407, 408, 860, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 2190, 0, 426,
	427, 895, 896, 898, 899, 422, 428, 429, 430, 954,
	431, 411, 412, 432, 433, 981, 434, 435, 917, 897,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 965,
	443, 444, 445, 988, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 893, 0, 457, 936, 937,
	938, 939, 0, 464, 0, 458, 459, 989, 460, 990,
	870, 461, 462, 463, 0, 465, 466, 0, 854, 467,
	468, 469, 471, 472, 470, 474, 955, 475, 0, 901,
	476, 477, 478, 527, 933, 983, 0, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 2185, 485,
	851, 0, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 0, 0, 847, 848, 906, 864, 865, 866, 862,
	863, 875, 876, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 957, 880, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 921, 900, 932, 232, 890,
	931, 930, 0, 233, 234, 892, 891, 237, 238, 239,
	882, 956, 240, 993, 994, 493, 0, 241, 963, 0,
	944, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 966, 257, 258, 947, 945, 946, 953, 949, 948,
	952, 259, 260, 261, 262, 935, 264, 928, 927, 853,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 926,
	271, 0, 272, 0, 273, 274, 0, 275, 859, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 984, 985,
	871, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	925, 923, 924, 0, 291, 0, 292, 0, 0, 967,
	293, 294, 0, 295, 991, 0, 881, 296, 0, 297,
	298, 299, 300, 958, 959, 962, 355, 969, 301, 302,
	0, 303, 304, 902, 0, 0, 216, 305, 307, 314,
	0, 968, 308, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 315, 970, 960, 971, 316, 317, 318,
	972, 940, 941, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 992, 973, 329, 330, 974,
	0, 331, 332, 951, 950, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 894, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 850, 217,
	977, 353, 872, 961, 354, 929, 356, 357, 0, 903,
	359, 904, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 978, 367, 979, 986, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 987, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 922, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 980, 405, 406, 407, 408, 860, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 895, 896, 898, 899, 422, 428, 429, 430,
	954, 431, 411, 412, 432, 433, 981, 434, 435, 917,
	897, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	965, 443, 444, 445, 988, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 893, 0, 457, 936,
	937, 938, 939, 0, 464, 0, 458, 459, 989, 460,
	990, 870, 461, 462, 463, 0, 465, 466, 0, 854,
	467, 468, 469, 471, 472, 470, 474, 955, 475, 0,
	901, 476, 477, 478, 527, 933, 983, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 0, 0, 0, 0,
	0, 1555, 0, 876, 0, 0, 0, 874, 906, 864,
	865, 866, 862, 863, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	2009, 223, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 921, 900,
	932, 232, 890, 931, 930, 0, 233, 234, 892, 891,
	237, 238, 239, 882, 956, 240, 993, 994, 493, 0,
	241, 963, 0, 944, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 966, 257, 258, 947, 945, 946,
	953, 949, 948, 952, 259, 260, 261, 262, 935, 264,
	928, 927, 853, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 926, 271, 0, 272, 0, 273, 274, 0,
	275, 859, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 984, 985, 871, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 925, 923, 924, 0, 291, 0, 292,
	0, 0, 967, 293, 294, 0, 295, 991, 0, 881,
	296, 0, 297, 298, 299, 300, 958, 959, 962, 355,
	969, 301, 302, 0, 303, 304, 902, 0, 0, 216,
	305, 307, 314, 0, 968, 308, 914, 905, 916, 918,
	919, 920, 915, 0, 907, 0, 315, 970, 960, 971,
	316, 317, 318, 972, 940, 941, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 992, 973,
	329, 330, 974, 0, 331, 332, 951, 950, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 352, 350, 976,
	349, 850, 217, 977, 353, 872, 961, 354, 929, 356,
	357, 0, 903, 359, 904, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 978, 367, 979, 986, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 987, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 922, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 980, 405, 406, 407,
	408, 860, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 895, 896, 898, 899, 422,
	428, 429, 430, 954, 431, 411, 412, 432, 433, 981,
	434, 435, 917, 897, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 965, 443, 444, 445, 988, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 893,
	0, 457, 936, 937, 938, 939, 0, 464, 0, 458,
	459, 989, 460, 990, 870, 461, 462, 463, 0, 465,
	466, 0, 854, 467, 468, 469, 471, 472, 470, 474,
	955, 475, 0, 901, 476, 477, 478, 527, 933, 983,
	0, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 851, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 847, 848, 0,
	0, 0, 0, 0, 0, 0, 876, 0, 0, 1229,
	874, 906, 864, 865, 866, 862, 863, 875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	957, 880, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 921, 900, 932, 232, 890, 931, 930, 0, 233,
	234, 892, 891, 237, 238, 239, 882, 956, 240, 993,
	994, 493, 0, 241, 963, 0, 944, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 966, 257, 258,
	947, 945, 946, 953, 949, 948, 952, 259, 260, 261,
	262, 935, 264, 928, 927, 853, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 926, 271, 0, 272, 0,
	273, 274, 0, 275, 859, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 984, 985, 871, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 925, 923, 924, 0,
	291, 0, 292, 0, 0, 967, 293, 294, 0, 295,
	991, 0, 881, 296, 0, 297, 298, 299, 300, 1228,
	959, 962, 355, 969, 301, 302, 0, 303, 304, 902,
	0, 0, 216, 305, 307, 314, 0, 968, 308, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 315,
	970, 960, 971, 316, 317, 318, 972, 940, 941, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 992, 973, 329, 330, 974, 0, 331, 332, 951,
	950, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 894, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 850, 217, 977, 353, 872, 961,
	354, 929, 356, 357, 0, 903, 359, 904, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 978, 367,
	979, 986, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 987, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 922,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 980,
	405, 406, 407, 408, 860, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 895, 896,
	898, 899, 422, 428, 429, 430, 954, 431, 411, 412,
	432, 433, 981, 434, 435, 917, 897, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 965, 443, 444, 445,
	988, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 893, 0, 457, 936, 937, 938, 939, 0,
	464, 0, 458, 459, 989, 460, 990, 870, 461, 462,
	463, 0, 465, 466, 0, 854, 467, 468, 469, 471,
	472, 470, 474, 955, 475, 0, 901, 476, 477, 478,
	527, 933, 983, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 1223, 874, 906, 864, 865, 866, 862, 863,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 921, 900, 932, 232, 890, 931,
	930, 0, 233, 234, 892, 891, 237, 238, 239, 882,
	956, 240, 993, 994, 493, 0, 241, 963, 0, 944,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	966, 257, 258, 947, 945, 946, 953, 949, 948, 952,
	259, 260, 261, 262, 935, 264, 928, 927, 853, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 926, 271,
	0, 272, 0, 273, 274, 0, 275, 859, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 984, 985, 871,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 925,
	923, 924, 0, 291, 0, 292, 0, 0, 967, 293,
	294, 0, 295, 991, 0, 881, 296, 0, 297, 298,
	299, 300, 1222, 959, 962, 355, 969, 301, 302, 0,
	303, 304, 902, 0, 0, 216, 305, 307, 314, 0,
	968, 308, 914, 905, 916, 918, 919, 920, 915, 0,
	907, 0, 315, 970, 960, 971, 316, 317, 318, 972,
	940, 941, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 992, 973, 329, 330, 974, 0,
	331, 332, 951, 950, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 352, 350, 976, 349, 850, 217, 977,
	353, 872, 961, 354, 929, 356, 357, 0, 903, 359,
	904, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 978, 367, 979, 986, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 987, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 922, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 980, 405, 406, 407, 408, 860, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 895, 896, 898, 899, 422, 428, 429, 430, 954,
	431, 411, 412, 432, 433, 981, 434, 435, 917, 897,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 965,
	443, 444, 445, 988, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 893, 0, 457, 936, 937,
	938, 939, 0, 464, 0, 458, 459, 989, 460, 990,
	870, 461, 462, 463, 0, 465, 466, 0, 854, 467,
	468, 469, 471, 472, 470, 474, 955, 475, 0, 901,
	476, 477, 478, 527, 933, 983, 0, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	851, 0, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 0, 0, 847, 848, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 1218, 874, 906, 864, 865,
	866, 862, 863, 875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 957, 880, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 921, 900, 932,
	232, 890, 931, 930, 0, 233, 234, 892, 891, 237,
	238, 239, 882, 956, 240, 993, 994, 493, 0, 241,
	963, 0, 944, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 966, 257, 258, 947, 945, 946, 953,
	949, 948, 952, 259, 260, 261, 262, 935, 264, 928,
	927, 853, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 926, 271, 0, 272, 0, 273, 274, 0, 275,
	859, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	984, 985, 871, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 925, 923, 924, 0, 291, 0, 292, 0,
	0, 967, 293, 294, 0, 295, 991, 0, 881, 296,
	0, 297, 298, 299, 300, 958, 959, 962, 355, 969,
	301, 302, 0, 303, 304, 902, 0, 0, 216, 305,
	307, 314, 0, 968, 308, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 315, 970, 960, 971, 316,
	317, 318, 972, 940, 941, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 992, 973, 329,
	330, 974, 0, 331, 332, 951, 950, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	894, 344, 975, 347, 348, 351, 352, 350, 976, 349,
	850, 217, 977, 353, 872, 961, 354, 929, 356, 357,
	0, 903, 359, 904, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 978, 367, 979, 986, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	987, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 922, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 980, 405, 406, 407, 408,
	860, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 895, 896, 898, 899, 422, 428,
	429, 430, 954, 431, 411, 412, 432, 433, 981, 434,
	435, 917, 897, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 965, 443, 444, 445, 988, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 893, 0,
	457, 936, 937, 938, 939, 0, 464, 0, 458, 459,
	989, 460, 990, 870, 461, 462, 463, 0, 465, 466,
	0, 854, 467, 468, 469, 471, 472, 470, 474, 955,
	475, 0, 901, 476, 477, 478, 527, 933, 983, 0,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 906, 864,
	865, 866, 862, 863, 875, 876, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 921, 900,
	932, 232, 890, 931, 930, 0, 233, 234, 892, 891,
	237, 238, 239, 882, 956, 240, 993, 994, 493, 0,
	241, 963, 0, 944, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 966, 257, 258, 947, 945, 946,
	953, 949, 948, 952, 259, 260, 261, 262, 935, 264,
	928, 927, 853, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 926, 271, 0, 272, 0, 273, 274, 0,
	275, 859, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 984, 985, 871, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 925, 923, 924, 0, 291, 0, 292,
	0, 0, 967, 293, 294, 0, 295, 991, 0, 881,
	296, 0, 297, 298, 299, 300, 958, 959, 962, 355,
	969, 301, 302, 0, 303, 304, 902, 0, 0, 216,
	305, 307, 314, 0, 968, 308, 914, 905, 916, 918,
	919, 920, 915, 0, 907, 0, 315, 970, 960, 971,
	316, 317, 318, 972, 940, 941, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 992, 973,
	329, 330, 974, 0, 331, 332, 951, 950, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 352, 350, 976,
	349, 850, 217, 977, 353, 872, 961, 354, 929, 356,
	357, 0, 903, 359, 904, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 978, 367, 979, 986, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 987, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 922, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 980, 405, 406, 407,
	408, 860, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 895, 896, 898, 899, 422,
	428, 429, 430, 954, 431, 411, 412, 432, 433, 981,
	434, 435, 917, 897, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 965, 443, 444, 445, 988, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 893,
	0, 457, 936, 937, 938, 939, 0, 464, 0, 458,
	459, 989, 460, 990, 870, 461, 462, 463, 0, 465,
	466, 0, 854, 467, 468, 469, 471, 472, 470, 474,
	955, 475, 0, 901, 476, 477, 478, 527, 933, 983,
	0, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 851, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 847, 848, 906,
	864, 865, 866, 862, 863, 875, 876, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 957, 880,
	0, 0, 0, 224, 226, 225, 227, 228, 487, 921,
	900, 932, 232, 890, 931, 930, 0, 233, 234, 892,
	891, 237, 238, 239, 882, 956, 240, 993, 994, 493,
	0, 241, 963, 0, 944, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 966, 257, 3645, 947, 945,
	946, 953, 949, 948, 952, 259, 260, 261, 262, 935,
	264, 928, 927, 853, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 926, 271, 0, 272, 0, 273, 274,
	0, 275, 859, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 984, 985, 871, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 925, 923, 924, 0, 291, 0,
	292, 0, 0, 967, 293, 294, 0, 295, 991, 0,
	881, 296, 0, 297, 298, 299, 300, 958, 959, 962,
	355, 969, 301, 302, 0, 303, 304, 902, 0, 0,
	216, 305, 307, 314, 0, 968, 308, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 315, 970, 960,
	971, 316, 317, 318, 972, 940, 941, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 992,
	973, 329, 330, 974, 0, 331, 332, 951, 950, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 894, 344, 975, 347, 348, 351, 352, 350,
	976, 349, 850, 217, 977, 353, 872, 961, 354, 929,
	356, 357, 0, 903, 359, 904, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 978, 367, 979, 986,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 987, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 922, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 980, 405, 406,
	407, 408, 860, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 895, 896, 898, 899,
	422, 428, 429, 430, 954, 431, 411, 412, 432, 433,
	981, 434, 435, 917, 897, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 965, 443, 444, 445, 988, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	893, 0, 457, 936, 937, 938, 939, 0, 464, 0,
	458, 459, 989, 460, 990, 870, 461, 462, 463, 0,
	3644, 466, 0, 854, 467, 468, 469, 471, 472, 470,
	474, 955, 475, 0, 901, 476, 477, 478, 527, 933,
	983, 0, 480, 479, 530, 0, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 851, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	906, 864, 865, 866, 862, 863, 875, 876, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 224, 226, 225, 227, 228, 3643,
	921, 900, 932, 232, 890, 931, 930, 0, 233, 234,
	892, 891, 237, 238, 239, 882, 956, 240, 993, 994,
	493, 0, 241, 963, 0, 944, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 966, 257, 3645, 947,
	945, 946, 953, 949, 948, 952, 259, 260, 261, 262,
	935, 264, 928, 927, 853, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 926, 271, 0, 272, 0, 273,
	274, 0, 275, 859, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 984, 985, 871, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 925, 923, 924, 0, 291,
	0, 292, 0, 0, 967, 293, 294, 0, 295, 991,
	0, 881, 296, 0, 297, 298, 299, 300, 958, 959,
	962, 355, 969, 301, 302, 0, 303, 304, 902, 0,
	0, 216, 305, 307, 314, 0, 968, 308, 914, 905,
	916, 918, 919, 920, 915, 0, 907, 0, 315, 970,
	960, 971, 316, 317, 318, 972, 940, 941, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	992, 973, 329, 330, 974, 0, 331, 332, 951, 950,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 352,
	350, 976, 349, 850, 217, 977, 353, 872, 961, 354,
	929, 356, 357, 0, 903, 359, 904, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 978, 367, 979,
	986, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 987, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 922, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 980, 405,
	406, 407, 408, 860, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 895, 896, 898,
	899, 422, 428, 429, 430, 954, 431, 411, 412, 432,
	433, 981, 434, 435, 917, 897, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 965, 443, 444, 445, 988,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 893, 0, 457, 936, 937, 938, 939, 0, 464,
	0, 458, 459, 989, 460, 990, 870, 461, 462, 463,
	0, 3644, 466, 0, 854, 467, 468, 469, 471, 472,
	470, 474, 955, 475, 0, 901, 476, 477, 478, 527,
	933, 983, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 851, 0, 0, 0,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 847,
	848, 906, 864, 865, 866, 2553, 2554, 875, 876, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	957, 880, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 921, 900, 932, 232, 890, 931, 930, 0, 233,
	234, 892, 891, 237, 238, 239, 882, 956, 240, 993,
	994, 493, 0, 241, 963, 0, 944, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 966, 257, 258,
	947, 945, 946, 953, 949, 948, 952, 259, 260, 261,
	262, 935, 264, 928, 927, 853, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 926, 271, 0, 272, 0,
	273, 274, 0, 275, 859, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 984, 985, 871, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 925, 923, 924, 0,
	291, 0, 292, 0, 0, 967, 293, 294, 0, 295,
	991, 0, 881, 296, 0, 297, 298, 299, 300, 958,
	959, 962, 355, 969, 301, 302, 0, 303, 304, 902,
	0, 0, 216, 305, 307, 314, 0, 968, 308, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 315,
	970, 960, 971, 316, 317, 318, 972, 940, 941, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 992, 973, 329, 330, 974, 0, 331, 332, 951,
	950, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 894, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 850, 217, 977, 353, 872, 961,
	354, 929, 356, 357, 0, 903, 359, 904, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 978, 367,
	979, 986, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 987, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 922,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 980,
	405, 406, 407, 408, 860, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 895, 896,
	898, 899, 422, 428, 429, 430, 954, 431, 411, 412,
	432, 433, 981, 434, 435, 917, 897, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 965, 443, 444, 445,
	988, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 893, 0, 457, 936, 937, 938, 939, 0,
	464, 0, 458, 459, 989, 460, 990, 870, 461, 462,
	463, 0, 465, 466, 0, 854, 467, 468, 469, 471,
	472, 470, 474, 955, 475, 0, 901, 476, 477, 478,
	527, 933, 983, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 906, 864, 865, 866, 2551, 2552, 875, 876,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 921, 900, 932, 232, 890, 931, 930, 0,
	233, 234, 892, 891, 237, 238, 239, 882, 956, 240,
	993, 994, 493, 0, 241, 963, 0, 944, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 966, 257,
	258, 947, 945, 946, 953, 949, 948, 952, 259, 260,
	261, 262, 935, 264, 928, 927, 853, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 926, 271, 0, 272,
	0, 273, 274, 0, 275, 859, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 984, 985, 871, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 925, 923, 924,
	0, 291, 0, 292, 0, 0, 967, 293, 294, 0,
	295, 991, 0, 881, 296, 0, 297, 298, 299, 300,
	958, 959, 962, 355, 969, 301, 302, 0, 303, 304,
	902, 0, 0, 216, 305, 307, 314, 0, 968, 308,
	914, 905, 916, 918, 919, 920, 915, 0, 907, 0,
	315, 970, 960, 971, 316, 317, 318, 972, 940, 941,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 992, 973, 329, 330, 974, 0, 331, 332,
	951, 950, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 352, 350, 976, 349, 850, 217, 977, 353, 872,
	961, 354, 929, 356, 357, 0, 903, 359, 904, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 978,
	367, 979, 986, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 987, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	922, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	980, 405, 406, 407, 408, 860, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 895,
	896, 898, 899, 422, 428, 429, 430, 954, 431, 411,
	412, 432, 433, 981, 434, 435, 917, 897, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 965, 443, 444,
	445, 988, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 893, 0, 457, 936, 937, 938, 939,
	0, 464, 0, 458, 459, 989, 460, 990, 870, 461,
	462, 463, 0, 465, 466, 0, 854, 467, 468, 469,
	471, 472, 470, 474, 955, 475, 0, 901, 476, 477,
	478, 527, 933, 983, 0, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 851, 0,
	0, 0, 0, 0, 849, 0, 0, 0, 0, 0,
	0, 847, 848, 906, 864, 865, 866, 862, 863, 875,
	876, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 957, 880, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 921, 900, 932, 232, 890, 931, 930,
	0, 233, 234, 892, 891, 237, 238, 239, 882, 956,
	240, 993, 994, 493, 0, 241, 963, 0, 944, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 966,
	257, 258, 947, 945, 946, 953, 949, 948, 952, 259,
	260, 261, 262, 935, 264, 928, 927, 853, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 926, 271, 0,
	272, 0, 273, 274, 0, 275, 859, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 984, 985, 871, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 925, 923,
	924, 0, 291, 0, 292, 0, 0, 967, 293, 294,
	0, 295, 991, 0, 881, 296, 0, 297, 298, 299,
	300, 958, 959, 962, 355, 969, 301, 302, 0, 303,
	304, 902, 0, 0, 216, 305, 307, 314, 0, 968,
	308, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 315, 970, 960, 971, 316, 317, 318, 972, 940,
	941, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 992, 973, 329, 330, 974, 0, 331,
	332, 951, 950, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 894, 344, 975, 347,
	348, 351, 352, 350, 976, 349, 850, 217, 977, 353,
	872, 961, 354, 929, 356, 357, 0, 903, 359, 904,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	978, 367, 979, 986, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 987, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 922, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 980, 405, 406, 407, 408, 860, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	895, 896, 898, 899, 422, 428, 429, 430, 954, 431,
	411, 412, 432, 433, 981, 434, 435, 917, 897, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 965, 443,
	444, 445, 988, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 893, 0, 457, 936, 937, 938,
	939, 0, 464, 0, 458, 459, 989, 460, 990, 870,
	461, 462, 463, 0, 465, 466, 0, 854, 467, 468,
	469, 471, 472, 470, 474, 955, 475, 0, 901, 476,
	477, 478, 527, 933, 983, 0, 480, 479, 530, 0,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 851,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 2017, 2018, 906, 864, 865, 866, 862, 863,
	875, 876, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 921, 900, 932, 232, 890, 931,
	930, 0, 233, 234, 892, 891, 237, 238, 239, 882,
	956, 240, 993, 994, 493, 0, 241, 963, 0, 944,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	966, 257, 258, 947, 945, 946, 953, 949, 948, 952,
	259, 260, 261, 262, 935, 264, 928, 927, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 926, 271,
	0, 272, 0, 273, 274, 0, 275, 859, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 984, 985, 871,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 925,
	923, 924, 0, 291, 0, 292, 0, 0, 967, 293,
	294, 0, 295, 991, 0, 881, 296, 0, 297, 298,
	299, 300, 958, 959, 962, 355, 969, 301, 302, 0,
	303, 304, 902, 0, 0, 216, 305, 307, 314, 0,
	968, 308, 914, 905, 916, 918, 919, 920, 915, 0,
	907, 0, 315, 970, 960, 971, 316, 317, 318, 972,
	940, 941, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 992, 973, 329, 330, 974, 0,
	331, 332, 951, 950, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 352, 350, 976, 349, 0, 217, 977,
	353, 872, 961, 354, 929, 356, 357, 0, 903, 359,
	904, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 978, 367, 979, 986, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 987, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 922, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 980, 405, 406, 407, 408, 860, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 895, 896, 898, 899, 422, 428, 429, 430, 954,
	431, 411, 412, 432, 433, 981, 434, 435, 917, 897,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 965,
	443, 444, 445, 988, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 893, 0, 457, 936, 937,
	938, 939, 0, 464, 0, 458, 459, 989, 460, 990,
	870, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 955, 475, 0, 901,
	476, 477, 478, 527, 933, 983, 0, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 0, 0, 0, 2203, 0, 0, 0,
	0, 0, 0, 2201, 2202, 906, 864, 865, 866, 862,
	863, 875, 876, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 957, 880, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 921, 900, 932, 232, 890,
	931, 930, 0, 233, 234, 892, 891, 237, 238, 239,
	882, 956, 240, 993, 994, 493, 0, 241, 963, 0,
	944, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 966, 257, 258, 947, 945, 946, 953, 949, 948,
	952, 259, 260, 261, 262, 935, 264, 928, 927, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 926,
	271, 0, 272, 0, 273, 274, 0, 275, 859, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 984, 985,
	871, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	925, 923, 924, 0, 291, 0, 292, 0, 0, 967,
	293, 294, 0, 295, 991, 0, 881, 296, 0, 297,
	298, 299, 300, 958, 959, 962, 355, 969, 301, 302,
	0, 303, 304, 902, 0, 0, 216, 305, 307, 314,
	0, 968, 308, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 315, 970, 960, 971, 316, 317, 318,
	972, 940, 941, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 992, 973, 329, 330, 974,
	0, 331, 332, 951, 950, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 894, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 0, 217,
	977, 353, 872, 961, 354, 929, 356, 357, 0, 903,
	359, 904, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 978, 367, 979, 986, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 987, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 922, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 980, 405, 406, 407, 408, 2546, 2547,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 895, 896, 898, 899, 422, 428, 429, 430,
	954, 431, 411, 412, 432, 433, 981, 434, 435, 917,
	897, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	965, 443, 444, 445, 988, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 893, 0, 457, 936,
	937, 938, 939, 0, 464, 0, 458, 459, 989, 460,
	990, 870, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 955, 475, 0,
	901, 476, 477, 478, 527, 933, 983, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 906, 864, 865, 866, 862, 863, 875, 0, 0,
	0, 0, 0, 0, 1767, 1768, 0, 0, 218, 219,
	220, 221, 222, 876, 223, 0, 0, 874, 0, 0,
	957, 880, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 921, 900, 932, 232, 890, 931, 930, 0, 233,
	234, 892, 891, 237, 238, 239, 0, 956, 240, 993,
	994, 493, 0, 241, 963, 0, 944, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 966, 257, 258,
	947, 945, 946, 953, 949, 948, 952, 259, 260, 261,
	262, 935, 264, 928, 927, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 926, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 984, 985, 871, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 925, 923, 924, 0,
	291, 0, 292, 0, 0, 967, 293, 294, 0, 295,
	991, 0, 881, 296, 0, 297, 298, 299, 300, 958,
	959, 962, 355, 969, 301, 302, 0, 303, 304, 902,
	0, 0, 216, 305, 307, 314, 0, 968, 308, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 315,
	970, 960, 971, 316, 317, 318, 972, 940, 941, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 992, 973, 329, 330, 974, 0, 331, 332, 951,
	950, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 894, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 0, 217, 977, 353, 872, 961,
	354, 929, 356, 357, 0, 903, 359, 904, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 978, 367,
	979, 986, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 987, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 922,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 980,
	405, 406, 407, 408, 860, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 895, 896,
	898, 899, 422, 428, 429, 430, 954, 431, 411, 412,
	432, 433, 981, 434, 435, 917, 897, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 965, 443, 444, 445,
	988, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 893, 0, 457, 936, 937, 938, 939, 0,
	464, 0, 458, 459, 989, 460, 990, 870, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 955, 475, 0, 901, 476, 477, 478,
	527, 933, 983, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 906, 864, 865,
	866, 862, 863, 875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 876,
	223, 0, 0, 874, 0, 0, 957, 880, 0, 0,
	0, 224, 226, 225, 227, 228, 0, 921, 900, 932,
	232, 890, 931, 930, 0, 233, 234, 892, 891, 237,
	238, 239, 882, 956, 240, 993, 994, 493, 0, 241,
	963, 0, 944, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 966, 257, 3645, 947, 945, 946, 953,
	949, 948, 952, 259, 260, 261, 262, 935, 264, 928,
	927, 853, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 926, 271, 0, 272, 0, 273, 274, 0, 275,
	859, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	984, 985, 871, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 925, 923, 924, 0, 291, 0, 292, 0,
	0, 967, 293, 294, 0, 295, 991, 0, 881, 296,
	0, 297, 298, 299, 300, 958, 959, 962, 355, 0,
	301, 302, 0, 303, 304, 902, 0, 0, 216, 305,
	307, 314, 0, 968, 308, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 315, 0, 960, 0, 316,
	317, 318, 972, 940, 941, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 992, 973, 329,
	330, 0, 0, 331, 332, 951, 950, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	894, 344, 975, 347, 348, 351, 352, 350, 976, 349,
	850, 217, 0, 353, 872, 961, 354, 929, 356, 357,
	0, 903, 359, 904, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 978, 367, 979, 986, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	987, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 922, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 980, 405, 406, 407, 408,
	860, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 895, 896, 898, 899, 422, 428,
	429, 430, 954, 431, 411, 412, 432, 433, 0, 434,
	435, 917, 897, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 965, 443, 444, 445, 988, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 893, 0,
	457, 936, 937, 938, 939, 0, 464, 0, 458, 459,
	989, 460, 990, 870, 461, 462, 463, 0, 3644, 466,
	0, 854, 467, 468, 469, 471, 472, 470, 474, 955,
	475, 0, 901, 476, 477, 478, 527, 933, 983, 0,
	480, 479, 530, 0, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 840, 0, 1031, 0, 0, 847, 848, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 874,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 957, 0, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 956,
	240, 491, 492, 493, 0, 241, 963, 0, 944, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 966,
	257, 258, 947, 945, 946, 953, 949, 948, 952, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 984, 985, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 967, 293, 294,
	0, 295, 991, 0, 502, 296, 0, 297, 298, 299,
	300, 958, 959, 962, 355, 969, 301, 302, 0, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 0, 968,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 970, 960, 971, 316, 317, 318, 972, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 1017, 327,
	326, 0, 328, 992, 973, 329, 330, 974, 0, 331,
	332, 951, 950, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 975, 347,
	348, 351, 352, 350, 976, 349, 0, 217, 977, 353,
	0, 961, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 1023, 362, 363, 364, 0, 0, 365, 366, 513,
	978, 367, 979, 986, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 987, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 980, 405, 406, 407, 408, 518, 1025, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 181, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 954, 431,
	411, 412, 432, 433, 981, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 988, 0, 449, 450, 448, 183, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 989, 460, 990, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 955, 475, 0, 473, 476,
	477, 478, 1338, 528, 529, 0, 480, 479, 530, 1031,
	0, 0, 175, 481, 482, 531, 483, 484, 485, 0,
	176, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 957, 1021,
	0, 1637, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 956, 240, 491, 492, 493,
	0, 241, 963, 0, 944, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 966, 257, 258, 947, 945,
	946, 953, 949, 948, 952, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 984, 985, 0, 215, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 967, 293, 294, 0, 295, 991, 0,
	502, 296, 0, 297, 298, 299, 300, 958, 959, 962,
	355, 969, 301, 302, 0, 303, 304, 306, 0, 0,
	216, 305, 307, 314, 0, 968, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 970, 960,
	971, 316, 317, 318, 972, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 1017, 327, 326, 0, 328, 992,
	973, 329, 330, 974, 0, 331, 332, 951, 950, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 975, 347, 348, 351, 352, 350,
	976, 349, 0, 217, 977, 353, 0, 961, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 1023, 362, 363,
	364, 0, 0, 365, 366, 513, 978, 367, 979, 986,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 987, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 980, 405, 406,
	407, 408, 518, 1025, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 181, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 954, 431, 411, 412, 432, 433,
	981, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 988, 0,
	449, 450, 448, 183, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 989, 460, 990, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 955, 475, 0, 473, 476, 477, 478, 1338, 528,
	529, 0, 480, 479, 530, 2699, 0, 1031, 175, 481,
	482, 531, 483, 484, 485, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 1021, 957, 1637, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 956, 240, 491, 492, 493, 0, 241,
	963, 0, 944, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 966, 257, 258, 947, 945, 946, 953,
	949, 948, 952, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	984, 985, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 967, 293, 294, 0, 295, 991, 0, 502, 296,
	0, 297, 298, 299, 300, 958, 959, 962, 355, 969,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 968, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 970, 960, 971, 316,
	317, 318, 972, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 1017, 327, 326, 0, 328, 992, 973, 329,
	330, 974, 0, 331, 332, 951, 950, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 352, 350, 976, 349,
	0, 217, 977, 353, 0, 961, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 1023, 362, 363, 364, 0,
	0, 365, 366, 513, 978, 367, 979, 986, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	987, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 980, 405, 406, 407, 408,
	518, 1025, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 954, 431, 411, 412, 432, 433, 981, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 988, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	989, 460, 990, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 955,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 1013, 0, 1031, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 1021, 957, 1019, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 956, 240, 491, 492, 493, 0, 241, 963, 0,
	944, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 966, 257, 258, 947, 945, 946, 953, 949, 948,
	952, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 984, 985,
	0, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 967,
	293, 294, 0, 295, 991, 0, 502, 296, 0, 297,
	298, 299, 300, 958, 959, 962, 355, 969, 301, 302,
	0, 303, 304, 306, 0, 0, 216, 305, 307, 314,
	0, 968, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 970, 960, 971, 316, 317, 318,
	972, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	1017, 327, 326, 0, 328, 992, 973, 329, 330, 974,
	0, 331, 332, 951, 950, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 0, 217,
	977, 353, 0, 961, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 1023, 362, 363, 364, 0, 0, 365,
	366, 513, 978, 367, 979, 986, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 987, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 980, 405, 406, 407, 408, 518, 1025,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	954, 431, 411, 412, 432, 433, 981, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 988, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 989, 460,
	990, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 955, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 1031, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	957, 1021, 0, 1019, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 956, 240, 491,
	492, 493, 0, 241, 963, 0, 944, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 966, 257, 258,
	947, 945, 946, 953, 949, 948, 952, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 984, 985, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 967, 293, 294, 0, 295,
	991, 0, 502, 296, 0, 297, 298, 299, 300, 958,
	959, 962, 355, 969, 301, 302, 0, 303, 304, 306,
	0, 0, 216, 305, 307, 314, 0, 968, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	970, 960, 971, 316, 317, 318, 972, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 1017, 327, 326, 0,
	328, 992, 973, 329, 330, 974, 0, 331, 332, 951,
	950, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 0, 217, 977, 353, 0, 961,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 1023,
	362, 363, 364, 0, 0, 365, 366, 513, 978, 367,
	979, 986, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 987, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 980,
	405, 406, 407, 408, 518, 1025, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 954, 431, 411, 412,
	432, 433, 981, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	988, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 989, 460, 990, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 955, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 1031, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 957, 1021, 0, 1019,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 956, 240, 491, 492, 493, 0, 241,
	963, 0, 944, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 966, 257, 258, 947, 945, 946, 953,
	949, 948, 952, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	984, 985, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 967, 293, 294, 0, 295, 991, 0, 502, 296,
	0, 297, 298, 299, 300, 958, 959, 962, 355, 969,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 968, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 970, 960, 971, 316,
	317, 318, 972, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 992, 973, 329,
	330, 974, 0, 331, 332, 951, 950, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 352, 350, 976, 349,
	0, 217, 977, 353, 0, 961, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 978, 367, 979, 986, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	987, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 980, 405, 406, 407, 408,
	518, 1025, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 954, 431, 411, 412, 432, 433, 981, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 988, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	989, 460, 990, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 955,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 840, 0, 1202, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 1538, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	1094, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 966, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 967,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 969, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 968, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 970, 509, 971, 316, 317, 318,
	972, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 973, 329, 330, 974,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 0, 0,
	977, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 978, 367, 979, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 980, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 181,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 981, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 183,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 1338, 528, 529, 0, 480, 479,
	530, 1335, 0, 1202, 175, 481, 482, 531, 483, 484,
	485, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 150, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 1094, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 966,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 967, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 969, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 968,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 970, 509, 971, 316, 317, 318, 972, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 973, 329, 330, 974, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 975, 347,
	348, 351, 352, 350, 976, 349, 0, 0, 977, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	978, 367, 979, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 980, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 181, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 981, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 183, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 1338, 528, 529, 0, 480, 479, 530, 0,
	0, 0, 175, 481, 482, 531, 483, 484, 485, 0,
	176, 0, 0, 0, 0, 1202, 1201, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	1094, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 966, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 967,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 969, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 968, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 970, 509, 971, 316, 317, 318,
	972, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 973, 329, 330, 974,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	975, 347, 348, 351, 352, 350, 976, 349, 0, 0,
	977, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 978, 367, 979, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 980, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 981, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 0, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 1202, 1201, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 2903, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 1094, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 966, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 967, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 969, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 968, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	970, 509, 971, 316, 317, 318, 972, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 973, 329, 330, 974, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 975, 347, 348, 351,
	352, 350, 976, 349, 0, 0, 977, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 978, 367,
	979, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 980,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 981, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 0, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 1202, 1201, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 1208,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 1094, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 966, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 967, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 969,
	301, 302, 0, 303, 304, 306, 0, 0, 0, 305,
	307, 314, 0, 968, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 970, 509, 971, 316,
	317, 318, 972, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 973, 329,
	330, 974, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 352, 350, 976, 349,
	0, 0, 977, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 978, 367, 979, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 980, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 981, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 1031, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 957, 0, 0, 1345, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 956,
	240, 491, 492, 493, 0, 241, 963, 0, 944, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 966,
	257, 258, 947, 945, 946, 953, 949, 948, 952, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 984, 985, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 967, 293, 294,
	0, 295, 991, 0, 502, 296, 0, 297, 298, 299,
	300, 958, 959, 962, 355, 969, 301, 302, 0, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 0, 968,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 970, 960, 971, 316, 317, 318, 972, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 992, 973, 329, 330, 974, 0, 331,
	332, 951, 950, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 975, 347,
	348, 351, 352, 350, 976, 349, 0, 217, 977, 353,
	0, 961, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	978, 367, 979, 986, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 987, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 980, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 954, 431,
	411, 412, 432, 433, 981, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 988, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 989, 460, 990, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 955, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 840,
	0, 212, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 0, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 0, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 181, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 183, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	1338, 528, 529, 0, 480, 479, 530, 212, 0, 0,
	175, 481, 482, 531, 483, 484, 485, 0, 176, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 0, 0, 150,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 217, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 1288, 0, 212, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 1651, 0, 0, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 215, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 216, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 217,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 212, 0, 0, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 218, 219,
	220, 221, 222, 0, 223, 0, 0, 0, 0, 0,
	486, 1292, 0, 0, 0, 224, 226, 225, 227, 228,
	487, 488, 229, 489, 232, 230, 231, 490, 0, 233,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 491,
	492, 493, 0, 241, 494, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 259, 260, 261,
	262, 263, 264, 495, 496, 0, 265, 0, 267, 266,
	0, 268, 0, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 275, 497, 276, 277, 279, 281, 278,
	282, 283, 284, 285, 498, 499, 0, 215, 0, 0,
	0, 0, 0, 286, 287, 288, 500, 289, 290, 0,
	291, 0, 292, 0, 0, 0, 293, 294, 0, 295,
	501, 0, 502, 296, 0, 297, 298, 299, 300, 503,
	504, 505, 355, 0, 301, 302, 0, 303, 304, 306,
	0, 0, 216, 305, 307, 314, 0, 0, 308, 506,
	310, 309, 311, 312, 313, 507, 0, 508, 0, 315,
	0, 509, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 321, 322, 323, 324, 325, 0, 327, 326, 0,
	328, 510, 0, 329, 330, 0, 0, 331, 332, 0,
	0, 333, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	352, 350, 0, 349, 0, 217, 0, 353, 0, 511,
	354, 512, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 513, 0, 367,
	0, 514, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 515, 378, 516, 379, 380, 0,
	381, 0, 382, 383, 384, 385, 386, 387, 388, 517,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 397,
	398, 399, 396, 400, 401, 402, 403, 0, 404, 0,
	405, 406, 407, 408, 518, 409, 0, 410, 414, 415,
	416, 417, 418, 419, 420, 0, 426, 427, 421, 423,
	424, 425, 422, 428, 429, 430, 0, 431, 411, 412,
	432, 433, 0, 434, 435, 519, 436, 437, 0, 438,
	439, 440, 441, 413, 442, 446, 447, 443, 444, 445,
	520, 0, 449, 450, 448, 0, 451, 452, 453, 454,
	455, 280, 456, 0, 457, 521, 522, 523, 524, 0,
	464, 0, 458, 459, 525, 460, 526, 0, 461, 462,
	463, 0, 465, 466, 0, 0, 467, 468, 469, 471,
	472, 470, 474, 0, 475, 0, 473, 476, 477, 478,
	527, 528, 529, 0, 480, 479, 530, 212, 0, 0,
	0, 481, 482, 531, 483, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 218, 219, 220, 221, 222, 0,
	223, 0, 0, 0, 0, 0, 486, 2853, 0, 0,
	0, 224, 226, 225, 227, 228, 487, 488, 229, 489,
	232, 230, 231, 490, 0, 233, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 491, 492, 493, 0, 241,
	494, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 259, 260, 261, 262, 263, 264, 495,
	496, 0, 265, 0, 267, 266, 0, 268, 0, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 275,
	497, 276, 277, 279, 281, 278, 282, 283, 284, 285,
	498, 499, 0, 215, 0, 0, 0, 0, 0, 286,
	287, 288, 500, 289, 290, 0, 291, 0, 292, 0,
	0, 0, 293, 294, 0, 295, 501, 0, 502, 296,
	0, 297, 298, 299, 300, 503, 504, 505, 355, 0,
	301, 302, 0, 303, 304, 306, 0, 0, 216, 305,
	307, 314, 0, 0, 308, 506, 310, 309, 311, 312,
	313, 507, 0, 508, 0, 315, 0, 509, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 321, 322, 323,
	324, 325, 0, 327, 326, 0, 328, 510, 0, 329,
	330, 0, 0, 331, 332, 0, 0, 333, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 352, 350, 0, 349,
	0, 217, 0, 353, 0, 511, 354, 512, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 513, 0, 367, 0, 514, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	515, 378, 516, 379, 380, 0, 381, 0, 382, 383,
	384, 385, 386, 387, 388, 517, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 397, 398, 399, 396, 400,
	401, 402, 403, 0, 404, 0, 405, 406, 407, 408,
	518, 409, 0, 410, 414, 415, 416, 417, 418, 419,
	420, 0, 426, 427, 421, 423, 424, 425, 422, 428,
	429, 430, 0, 431, 411, 412, 432, 433, 0, 434,
	435, 519, 436, 437, 0, 438, 439, 440, 441, 413,
	442, 446, 447, 443, 444, 445, 520, 0, 449, 450,
	448, 0, 451, 452, 453, 454, 455, 280, 456, 0,
	457, 521, 522, 523, 524, 0, 464, 0, 458, 459,
	525, 460, 526, 0, 461, 462, 463, 0, 465, 466,
	0, 0, 467, 468, 469, 471, 472, 470, 474, 0,
	475, 0, 473, 476, 477, 478, 527, 528, 529, 0,
	480, 479, 530, 212, 0, 0, 0, 481, 482, 531,
	483, 484, 485, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 1292, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 261, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 0, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 0, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 0, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 0, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 212,
	0, 0, 0, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 218, 219, 220, 221,
	222, 0, 223, 0, 0, 0, 0, 0, 486, 0,
	0, 2452, 0, 224, 226, 225, 227, 228, 487, 488,
	229, 489, 232, 230, 231, 490, 0, 233, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 491, 492, 493,
	0, 241, 494, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 259, 260, 261, 262, 263,
	264, 495, 496, 0, 265, 0, 267, 266, 0, 268,
	0, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 275, 497, 276, 277, 279, 281, 278, 282, 283,
	284, 285, 498, 499, 0, 0, 0, 0, 0, 0,
	0, 286, 287, 288, 500, 289, 290, 0, 291, 0,
	292, 0, 0, 0, 293, 294, 0, 295, 501, 0,
	502, 296, 0, 297, 298, 299, 300, 503, 504, 505,
	355, 0, 301, 302, 0, 303, 304, 306, 0, 0,
	0, 305, 307, 314, 0, 0, 308, 506, 310, 309,
	311, 312, 313, 507, 0, 508, 0, 315, 0, 509,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 321,
	322, 323, 324, 325, 0, 327, 326, 0, 328, 510,
	0, 329, 330, 0, 0, 331, 332, 0, 0, 333,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 352, 350,
	0, 349, 0, 0, 0, 353, 0, 511, 354, 512,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 513, 0, 367, 0, 514,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 515, 378, 516, 379, 380, 0, 381, 0,
	382, 383, 384, 385, 386, 387, 388, 517, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 397, 398, 399,
	396, 400, 401, 402, 403, 0, 404, 0, 405, 406,
	407, 408, 518, 409, 0, 410, 414, 415, 416, 417,
	418, 419, 420, 0, 426, 427, 421, 423, 424, 425,
	422, 428, 429, 430, 0, 431, 411, 412, 432, 433,
	0, 434, 435, 519, 436, 437, 0, 438, 439, 440,
	441, 413, 442, 446, 447, 443, 444, 445, 520, 0,
	449, 450, 448, 0, 451, 452, 453, 454, 455, 280,
	456, 0, 457, 521, 522, 523, 524, 0, 464, 0,
	458, 459, 525, 460, 526, 0, 461, 462, 463, 0,
	465, 466, 0, 0, 467, 468, 469, 471, 472, 470,
	474, 0, 475, 0, 473, 476, 477, 478, 527, 528,
	529, 0, 480, 479, 530, 212, 0, 0, 0, 481,
	482, 531, 483, 484, 485, 0, 0, 0, 0, 0,
	0, 0, 218, 219, 220, 221, 222, 0, 223, 0,
	0, 0, 0, 0, 486, 0, 0, 2991, 0, 224,
	226, 225, 227, 228, 487, 488, 229, 489, 232, 230,
	231, 490, 0, 233, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 491, 492, 493, 0, 241, 494, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 259, 260, 261, 262, 263, 264, 495, 496, 0,
	265, 0, 267, 266, 0, 268, 0, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 275, 497, 276,
	277, 279, 281, 278, 282, 283, 284, 285, 498, 499,
	0, 0, 0, 0, 0, 0, 0, 286, 287, 288,
	500, 289, 290, 0, 291, 0, 292, 0, 0, 0,
	293, 294, 0, 295, 501, 0, 502, 296, 0, 297,
	298, 299, 300, 503, 504, 505, 355, 0, 301, 302,
	0, 303, 304, 306, 0, 0, 0, 305, 307, 314,
	0, 0, 308, 506, 310, 309, 311, 312, 313, 507,
	0, 508, 0, 315, 0, 509, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 321, 322, 323, 324, 325,
	0, 327, 326, 0, 328, 510, 0, 329, 330, 0,
	0, 331, 332, 0, 0, 333, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 352, 350, 0, 349, 0, 0,
	0, 353, 0, 511, 354, 512, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 513, 0, 367, 0, 514, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 515, 378,
	516, 379, 380, 0, 381, 0, 382, 383, 384, 385,
	386, 387, 388, 517, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 397, 398, 399, 396, 400, 401, 402,
	403, 0, 404, 0, 405, 406, 407, 408, 518, 409,
	0, 410, 414, 415, 416, 417, 418, 419, 420, 0,
	426, 427, 421, 423, 424, 425, 422, 428, 429, 430,
	0, 431, 411, 412, 432, 433, 0, 434, 435, 519,
	436, 437, 0, 438, 439, 440, 441, 413, 442, 446,
	447, 443, 444, 445, 520, 0, 449, 450, 448, 0,
	451, 452, 453, 454, 455, 280, 456, 0, 457, 521,
	522, 523, 524, 0, 464, 0, 458, 459, 525, 460,
	526, 0, 461, 462, 463, 0, 465, 466, 0, 0,
	467, 468, 469, 471, 472, 470, 474, 0, 475, 0,
	473, 476, 477, 478, 527, 528, 529, 0, 480, 479,
	530, 709, 0, 602, 0, 481, 482, 531, 483, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 219, 220, 221, 222, 0, 223, 0, 0, 0,
	0, 0, 486, 1922, 0, 0, 0, 224, 226, 225,
	227, 228, 487, 488, 229, 489, 232, 230, 231, 490,
	0, 233, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 491, 492, 493, 0, 241, 494, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 259,
	260, 608, 262, 263, 264, 495, 496, 0, 265, 0,
	267, 266, 0, 268, 0, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 275, 497, 276, 277, 279,
	281, 278, 282, 283, 284, 285, 498, 499, 0, 215,
	0, 0, 0, 0, 0, 286, 287, 288, 500, 289,
	290, 0, 291, 0, 292, 0, 707, 0, 293, 294,
	0, 295, 501, 0, 502, 296, 0, 297, 298, 299,
	300, 503, 504, 505, 355, 0, 301, 302, 0, 303,
	304, 306, 0, 0, 216, 305, 307, 314, 0, 0,
	308, 506, 310, 309, 311, 312, 313, 507, 0, 508,
	0, 315, 0, 509, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 321, 322, 323, 324, 325, 0, 327,
	326, 0, 328, 510, 0, 329, 330, 0, 0, 331,
	332, 0, 0, 333, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 352, 350, 0, 349, 0, 217, 0, 353,
	0, 511, 354, 512, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 513,
	0, 367, 0, 514, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 515, 378, 516, 379,
	380, 0, 381, 0, 382, 383, 384, 385, 386, 387,
	388, 517, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 397, 398, 399, 396, 400, 401, 402, 403, 0,
	404, 0, 405, 406, 407, 408, 518, 409, 0, 410,
	414, 415, 416, 417, 418, 419, 420, 0, 426, 427,
	421, 423, 424, 425, 422, 428, 429, 430, 0, 431,
	411, 412, 432, 433, 0, 434, 435, 519, 436, 437,
	0, 438, 439, 440, 441, 413, 442, 446, 447, 443,
	444, 445, 520, 0, 449, 450, 448, 607, 451, 452,
	453, 454, 455, 280, 456, 0, 457, 521, 522, 523,
	524, 0, 464, 0, 458, 459, 525, 460, 526, 0,
	461, 462, 463, 0, 465, 466, 0, 0, 467, 468,
	469, 471, 472, 470, 474, 0, 475, 0, 473, 476,
	477, 478, 527, 528, 529, 0, 480, 479, 530, 0,
	601, 0, 602, 481, 482, 531, 483, 484, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 611, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	608, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 217, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 607, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	599, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 1202, 1201,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 1094, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 966, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 967, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	969, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 968, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 970, 509, 971,
	316, 317, 318, 972, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 973,
	329, 330, 974, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 975, 347, 348, 351, 352, 350, 976,
	349, 0, 0, 977, 353, 3128, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 978, 367, 979, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 980, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 981,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 1202, 1201, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 1094,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	966, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 967, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 503, 504, 505, 355, 969, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	968, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 970, 509, 971, 316, 317, 318, 972,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 973, 329, 330, 974, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 975,
	347, 348, 351, 352, 350, 976, 349, 0, 0, 977,
	353, 2833, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 978, 367, 979, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 980, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 981, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 602, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 608, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 216, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	217, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 1956, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	607, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 602, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 611, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	608, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 217, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 607, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 1372, 0,
	1202, 1201, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 1094, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 966, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 215, 0, 0, 0,
	0, 0, 1371, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 967, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 969, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 968, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 970,
	509, 971, 316, 317, 318, 972, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 973, 329, 330, 974, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 975, 347, 348, 351, 352,
	350, 976, 349, 0, 0, 977, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 978, 367, 979,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 1370, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 980, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	1369, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 981, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 1332, 0, 1202, 1201,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 1094, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 966, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 967, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 1331, 504, 505, 355,
	969, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 968, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 970, 509, 971,
	316, 317, 318, 972, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 973,
	329, 330, 974, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 975, 347, 348, 351, 352, 350, 976,
	349, 0, 0, 977, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 978, 367, 979, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 980, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 981,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 1268, 0, 1202, 1201, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 1094, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 966, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	967, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 1267, 504, 505, 355, 969, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 968, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 970, 509, 971, 316, 317,
	318, 972, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 973, 329, 330,
	974, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 975, 347, 348, 351, 352, 350, 976, 349, 0,
	0, 977, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 978, 367, 979, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 980, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 981, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 1197, 0, 1202, 1201, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 1094,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	966, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 967, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 1196, 504, 505, 355, 969, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	968, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 970, 509, 971, 316, 317, 318, 972,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 973, 329, 330, 974, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 975,
	347, 348, 351, 352, 350, 976, 349, 0, 0, 977,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 978, 367, 979, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 980, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 981, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 0, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	1202, 1201, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 1094, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 966, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 967, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 969, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 968, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 970,
	509, 971, 316, 317, 318, 972, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 973, 329, 330, 974, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 975, 347, 348, 351, 352,
	350, 976, 349, 0, 0, 977, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 978, 367, 979,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 980, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 981, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 212, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 217, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 1202, 1201,
	0, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 611, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 1094, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 966, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 1740, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 967, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	969, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 968, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 970, 509, 971,
	316, 317, 318, 972, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 973,
	329, 330, 974, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 975, 347, 348, 351, 352, 350, 976,
	349, 0, 0, 977, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 978, 367, 979, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 980, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 981,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 1202, 1201, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 1094,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	966, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 967, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 503, 504, 505, 355, 969, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	968, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 970, 509, 971, 316, 317, 318, 972,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 973, 329, 330, 974, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 975,
	347, 348, 351, 352, 350, 976, 349, 0, 0, 977,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 978, 367, 979, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 980, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 981, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 1202, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 1094, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 966, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	967, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 969, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 968, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 970, 509, 971, 316, 317,
	318, 972, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 973, 329, 330,
	974, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 975, 347, 348, 351, 352, 350, 976, 349, 0,
	0, 977, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 978, 367, 979, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 980, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 981, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 212, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 2329,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 2326, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 2487, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	2332, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 2484,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 2486, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 2483, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 2331, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 2485, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	212, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 2329, 241, 494, 0, 0, 2323, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 2326, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 2332, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 2322, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 2331, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 2330, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 1429, 0, 212, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 217, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 1432, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 1430, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 1431, 479, 530, 1178, 0, 212, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 1180, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 216, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	217, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 1023, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 1175, 0, 212, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 1177, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 216, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 217, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 1023, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 0, 480, 479, 530,
	1082, 0, 212, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	1084, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 217, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	1023, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 560, 0,
	212, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	559, 222, 549, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 552, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 553, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 554, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 548, 0, 212, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	549, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 552, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 553, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 554, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	212, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 216, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 2815, 349, 0, 217, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 212, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 217, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	1023, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 2425, 0,
	212, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 2424, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 216, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 217, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 1932, 0, 212, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 217, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	212, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 216, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 217, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 1860, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 1865, 0, 212, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 1864, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 217, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 1853, 0, 212, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 1855, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 216, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	217, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 1325, 0, 212, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 1324, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 216, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 217, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 0, 480, 479, 530,
	1322, 0, 212, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	1321, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 217, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 1319, 0,
	212, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 215, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 1318, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 216, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 217, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 1315, 0, 212, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 1314, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 217, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 1189, 0, 212, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 1191, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 216, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	217, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 212, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 215, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 216,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 217, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	212, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 552, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 553, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 554, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 212, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	1963, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 215, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 216, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 217, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 212, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 1961, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	215, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 503, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 216, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 217, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 212, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 1959, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 215, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 216, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	217, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 700, 0, 212, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 503, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 699, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 0, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 698, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 212, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 2487, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	0, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 3326, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 539, 0, 212, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 538, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 503, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 0, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	537, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 0, 480, 479, 530,
	212, 3335, 0, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 212, 2474, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	0, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 212, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 3116, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	212, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 2254, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 212, 2474, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	0, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 2471, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 212, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 218, 219, 220, 221, 222,
	1940, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 1930, 0, 212, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	0, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 580, 0, 212, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 1060,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 1058, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 503, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 581, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 0, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 577, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 1061, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 576, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 0, 480, 479, 530,
	1875, 0, 212, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	1874, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 0, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 580, 0,
	212, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 570, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 581, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 577,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 1344, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 576, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 1329, 0, 212, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 1328, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 1276, 0, 212, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 1275, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	0, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 1261, 0, 212, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 1260, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 0, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 0, 480, 479, 530,
	1256, 0, 212, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 0, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 1183, 0,
	212, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 580, 0, 212, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 1060, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 1058, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 581, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 577, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 1061, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 576, 522, 523, 524, 0, 464, 0, 458,
	1059, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	212, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 218, 219, 220,
	221, 222, 1042, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 0, 480, 479, 530, 580, 0, 212, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	570, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 568, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 503, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 569, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 581, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 571, 409, 0, 410, 414, 415, 577, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 572, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 576, 522, 523, 524, 0, 464, 0, 458,
	574, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	0, 480, 479, 530, 564, 0, 212, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 503, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	0, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 565, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 0, 480,
	479, 530, 562, 0, 212, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 503, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 0, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 0, 480, 479, 530,
	556, 0, 212, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 0, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 534, 0,
	212, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 212, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 0, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 212, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 2791, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 0, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	431, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 212, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 2789, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	0, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 212, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 2776, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	212, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 2435, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 212, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 296, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 0, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 386, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 409, 0, 410, 565,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 212, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 0, 0,
	0, 218, 219, 220, 221, 222, 0, 223, 0, 0,
	0, 0, 0, 486, 0, 1888, 0, 0, 224, 226,
	225, 227, 228, 487, 488, 229, 489, 232, 230, 231,
	490, 0, 233, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 491, 492, 493, 0, 241, 494, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	259, 260, 261, 262, 263, 264, 495, 496, 0, 265,
	0, 267, 266, 0, 268, 0, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 275, 497, 276, 277,
	279, 281, 278, 282, 283, 284, 285, 498, 499, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 500,
	289, 290, 0, 291, 0, 292, 0, 0, 0, 293,
	294, 0, 295, 501, 0, 502, 296, 0, 297, 298,
	299, 300, 503, 504, 505, 355, 0, 301, 302, 0,
	303, 304, 306, 0, 0, 0, 305, 307, 314, 0,
	0, 308, 506, 310, 309, 311, 312, 313, 507, 0,
	508, 0, 315, 0, 509, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 321, 322, 323, 324, 325, 0,
	327, 326, 0, 328, 510, 0, 329, 330, 0, 0,
	331, 332, 0, 0, 333, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 352, 350, 0, 349, 0, 0, 0,
	353, 0, 511, 354, 512, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	513, 0, 367, 0, 514, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 515, 378, 516,
	379, 380, 0, 381, 0, 382, 383, 384, 385, 386,
	387, 388, 517, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 397, 398, 399, 396, 400, 401, 402, 403,
	0, 404, 0, 405, 406, 407, 408, 518, 409, 0,
	410, 414, 415, 416, 417, 418, 419, 420, 0, 426,
	427, 421, 423, 424, 425, 422, 428, 429, 430, 0,
	0, 411, 412, 432, 433, 0, 434, 435, 519, 436,
	437, 0, 438, 439, 440, 441, 413, 442, 446, 447,
	443, 444, 445, 520, 0, 449, 450, 448, 0, 451,
	452, 453, 454, 455, 280, 456, 0, 457, 521, 522,
	523, 524, 0, 464, 0, 458, 459, 525, 460, 526,
	0, 461, 462, 463, 0, 465, 466, 0, 0, 467,
	468, 469, 471, 472, 470, 474, 0, 475, 0, 473,
	476, 477, 478, 527, 528, 529, 212, 480, 479, 530,
	0, 0, 0, 0, 481, 482, 531, 483, 484, 485,
	0, 0, 0, 218, 219, 220, 221, 222, 0, 223,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	224, 226, 225, 227, 228, 487, 488, 229, 489, 232,
	230, 231, 490, 0, 233, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 491, 492, 493, 0, 241, 494,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 259, 260, 261, 262, 263, 264, 495, 496,
	0, 265, 0, 267, 266, 0, 268, 0, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 275, 497,
	276, 277, 279, 281, 278, 282, 283, 284, 285, 498,
	499, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 500, 289, 290, 0, 291, 0, 292, 0, 0,
	0, 293, 294, 0, 295, 501, 0, 502, 296, 0,
	297, 298, 299, 300, 1298, 504, 505, 355, 0, 301,
	302, 0, 303, 304, 306, 0, 0, 0, 305, 307,
	314, 0, 0, 308, 506, 310, 309, 311, 312, 313,
	507, 0, 508, 0, 315, 0, 509, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 321, 322, 323, 324,
	325, 0, 327, 326, 0, 328, 510, 0, 329, 330,
	0, 0, 331, 332, 0, 0, 333, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 352, 350, 0, 349, 0,
	0, 0, 353, 0, 511, 354, 512, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 513, 0, 367, 0, 514, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 515,
	378, 516, 379, 380, 0, 381, 0, 382, 383, 384,
	385, 386, 387, 388, 517, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 397, 398, 399, 396, 400, 401,
	402, 403, 0, 404, 0, 405, 406, 407, 408, 518,
	409, 0, 410, 414, 415, 416, 417, 418, 419, 420,
	0, 426, 427, 421, 423, 424, 425, 422, 428, 429,
	430, 0, 431, 411, 412, 432, 433, 0, 434, 435,
	519, 436, 437, 0, 438, 439, 440, 441, 413, 442,
	446, 447, 443, 444, 445, 520, 0, 449, 450, 448,
	0, 451, 452, 453, 454, 455, 280, 456, 0, 457,
	521, 522, 523, 524, 0, 464, 0, 458, 459, 525,
	460, 526, 0, 461, 462, 463, 0, 465, 466, 0,
	0, 467, 468, 469, 471, 472, 470, 474, 0, 475,
	0, 473, 476, 477, 478, 527, 528, 529, 212, 480,
	479, 530, 0, 0, 0, 0, 481, 482, 531, 483,
	484, 485, 0, 0, 0, 218, 219, 220, 221, 222,
	0, 223, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 224, 226, 225, 227, 228, 487, 488, 229,
	489, 232, 230, 231, 490, 0, 233, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 491, 492, 493, 0,
	241, 494, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 0, 0, 259, 260, 261, 262, 263, 264,
	495, 496, 0, 265, 0, 267, 266, 0, 268, 0,
	0, 269, 270, 271, 0, 272, 0, 273, 274, 0,
	275, 497, 276, 277, 279, 281, 278, 282, 283, 284,
	285, 498, 499, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 500, 289, 290, 0, 291, 0, 292,
	0, 0, 0, 293, 294, 0, 295, 501, 0, 502,
	296, 0, 297, 298, 299, 300, 1238, 504, 505, 355,
	0, 301, 302, 0, 303, 304, 306, 0, 0, 0,
	305, 307, 314, 0, 0, 308, 506, 310, 309, 311,
	312, 313, 507, 0, 508, 0, 315, 0, 509, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 321, 322,
	323, 324, 325, 0, 327, 326, 0, 328, 510, 0,
	329, 330, 0, 0, 331, 332, 0, 0, 333, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 352, 350, 0,
	349, 0, 0, 0, 353, 0, 511, 354, 512, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 513, 0, 367, 0, 514, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 515, 378, 516, 379, 380, 0, 381, 0, 382,
	383, 384, 385, 386, 387, 388, 517, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 397, 398, 399, 396,
	400, 401, 402, 403, 0, 404, 0, 405, 406, 407,
	408, 518, 409, 0, 410, 414, 415, 416, 417, 418,
	419, 420, 0, 426, 427, 421, 423, 424, 425, 422,
	428, 429, 430, 0, 431, 411, 412, 432, 433, 0,
	434, 435, 519, 436, 437, 0, 438, 439, 440, 441,
	413, 442, 446, 447, 443, 444, 445, 520, 0, 449,
	450, 448, 0, 451, 452, 453, 454, 455, 280, 456,
	0, 457, 521, 522, 523, 524, 0, 464, 0, 458,
	459, 525, 460, 526, 0, 461, 462, 463, 0, 465,
	466, 0, 0, 467, 468, 469, 471, 472, 470, 474,
	0, 475, 0, 473, 476, 477, 478, 527, 528, 529,
	212, 480, 479, 530, 0, 0, 0, 0, 481, 482,
	531, 483, 484, 485, 0, 0, 0, 218, 219, 220,
	221, 222, 0, 223, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 224, 226, 225, 227, 228, 487,
	488, 229, 489, 232, 230, 231, 490, 0, 233, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 491, 492,
	493, 0, 241, 494, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 259, 260, 261, 262,
	263, 264, 495, 496, 0, 265, 0, 267, 266, 0,
	268, 0, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 275, 497, 276, 277, 279, 281, 278, 282,
	283, 284, 285, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 500, 289, 290, 0, 291,
	0, 292, 0, 0, 0, 293, 294, 0, 295, 501,
	0, 502, 296, 0, 297, 298, 299, 300, 503, 504,
	505, 355, 0, 301, 302, 0, 303, 304, 306, 0,
	0, 0, 305, 307, 314, 0, 0, 308, 506, 310,
	309, 311, 312, 313, 507, 0, 508, 0, 315, 0,
	509, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	321, 322, 323, 324, 325, 0, 327, 326, 0, 328,
	510, 0, 329, 330, 0, 0, 331, 332, 0, 0,
	333, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 352,
	350, 0, 349, 0, 0, 0, 353, 0, 511, 354,
	512, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 513, 0, 367, 0,
	514, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 515, 378, 516, 379, 380, 0, 381,
	0, 382, 383, 384, 385, 386, 387, 388, 517, 996,
	390, 0, 391, 392, 393, 394, 395, 0, 397, 398,
	399, 396, 400, 401, 402, 403, 0, 404, 0, 405,
	406, 407, 408, 518, 409, 0, 410, 414, 415, 416,
	417, 418, 419, 420, 0, 426, 427, 421, 423, 424,
	425, 422, 428, 429, 430, 0, 431, 411, 412, 432,
	433, 0, 434, 435, 519, 436, 437, 0, 438, 439,
	440, 441, 413, 442, 446, 447, 443, 444, 445, 520,
	0, 449, 450, 448, 0, 451, 452, 453, 454, 455,
	280, 456, 0, 457, 521, 522, 523, 524, 0, 464,
	0, 458, 459, 525, 460, 526, 0, 461, 462, 463,
	0, 465, 466, 0, 0, 467, 468, 469, 471, 472,
	470, 474, 0, 475, 0, 473, 476, 477, 478, 527,
	528, 529, 212, 480, 479, 530, 0, 0, 0, 0,
	481, 482, 531, 483, 484, 485, 0, 0, 0, 218,
	219, 220, 221, 222, 0, 223, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 224, 226, 225, 227,
	228, 487, 488, 229, 489, 232, 230, 231, 490, 0,
	233, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	491, 492, 493, 0, 241, 494, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 259, 260,
	261, 262, 263, 264, 495, 496, 0, 265, 0, 267,
	266, 0, 268, 0, 0, 269, 270, 271, 0, 272,
	0, 273, 274, 0, 275, 497, 276, 277, 279, 281,
	278, 282, 283, 284, 285, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 500, 289, 290,
	0, 291, 0, 292, 0, 0, 0, 293, 294, 0,
	295, 501, 0, 502, 0, 0, 297, 298, 299, 300,
	503, 504, 505, 355, 0, 301, 302, 0, 303, 304,
	306, 0, 0, 0, 305, 307, 314, 0, 0, 308,
	506, 310, 309, 311, 312, 313, 507, 0, 508, 0,
	315, 0, 509, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 321, 322, 323, 324, 325, 0, 327, 326,
	0, 328, 510, 0, 329, 330, 0, 0, 331, 332,
	0, 0, 333, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 352, 350, 0, 349, 0, 0, 0, 353, 0,
	511, 354, 512, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 513, 0,
	367, 0, 514, 368, 361, 369, 370, 0, 372, 373,
	374, 375, 0, 376, 377, 515, 378, 516, 379, 380,
	0, 381, 0, 382, 383, 384, 385, 0, 387, 388,
	517, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	397, 398, 399, 396, 400, 401, 402, 403, 0, 404,
	0, 405, 406, 407, 408, 518, 0, 0, 410, 414,
	415, 416, 417, 418, 419, 420, 0, 426, 427, 421,
	423, 424, 425, 422, 428, 429, 430, 0, 431, 411,
	412, 432, 433, 0, 434, 435, 519, 436, 437, 0,
	438, 439, 440, 441, 413, 442, 446, 447, 443, 444,
	445, 520, 0, 449, 450, 448, 0, 451, 452, 453,
	454, 455, 280, 456, 0, 457, 521, 522, 523, 524,
	0, 464, 0, 458, 459, 525, 460, 526, 0, 461,
	462, 463, 0, 465, 466, 0, 0, 467, 468, 469,
	471, 472, 470, 474, 0, 475, 0, 473, 476, 477,
	478, 527, 528, 529, 0, 480, 479, 530, 0, 0,
	0, 0, 481, 482, 531, 483, 484, 485, 1474, 1475,
	0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 1505, 0,
	0, 0, 0, 0, 0, 1477, 0, 0, 0, 0,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1474, 1475, 0, 1507, 1508, 1509, 1517, 1518, 1519,
	0, 0, 0, 0, 0, 1476, 0, 0, 0, 0,
	1510, 1505, 0, 0, 1496, 0, 0, 0, 1477, 0,
	0, 1493, 0, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1476, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	1500, 1501, 1502, 0, 0, 0, 0, 0, 0, 1482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 1524, 0, 0, 0,
	1504, 1506, 1499, 1500, 1501, 1502, 0, 0, 0, 0,
	0, 0, 1482, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 1521, 0, 0, 0, 0, 0, 0, 1491,
	1492, 0, 0, 0, 0, 0, 1514, 0, 0, 1524,
	0, 0, 0, 1504, 1506, 1512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1497, 0, 0, 0, 0,
	0, 0, 0, 1520, 0, 1521, 0, 0, 0, 0,
	0, 0, 1491, 1492, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 1497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1474, 1475, 0, 1507,
	1508, 1509, 1517, 1518, 1519, 0, 0, 0, 0, 0,
	0, 1503, 1515, 0, 0, 1510, 1505, 0, 0, 0,
	0, 0, 0, 1477, 0, 0, 0, 0, 1523, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1476, 0, 1515, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485, 1486,
	1478, 1479, 1480, 1481, 1483, 1484, 0, 0, 0, 0,
	0, 0, 0, 0, 2642, 0, 0, 1499, 1500, 1501,
	1502, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	1513, 0, 0, 1488, 1489, 1495, 1516, 1494, 1490, 0,
	1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484, 0,
	0, 1514, 0, 0, 1524, 0, 0, 2639, 1504, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	1521, 0, 0, 0, 0, 0, 0, 1491, 1492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 0, 0, 0, 1474, 1475, 0,
	1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 1510, 1505, 0, 0,
	0, 0, 0, 0, 1477, 0, 0, 0, 0, 1523,
	0, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1476, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1474, 1475, 0,
	1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0, 0,
	1515, 0, 0, 0, 0, 0, 1510, 1505, 1499, 1500,
	1501, 1502, 0, 0, 1477, 0, 0, 0, 1482, 1523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 1476, 1524, 0, 0, 0, 1504,
	1506, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 1521, 0, 0, 0, 0, 0, 0, 1491, 1492,
	0, 0, 0, 0, 0, 1513, 0, 0, 1488, 1489,
	1495, 1516, 1494, 1490, 1512, 1487, 1485, 1486, 1478, 1479,
	1480, 1481, 1483, 1484, 1497, 0, 0, 0, 0, 0,
	0, 0, 2638, 0, 0, 0, 0, 0, 1499, 1500,
	1501, 1502, 0, 0, 0, 1522, 0, 0, 1482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 1524, 0, 0, 0, 1504,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 1521, 0, 0, 0, 0, 0, 1503, 1491, 1492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 0, 0, 0, 1474, 1475,
	0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0,
	0, 1515, 0, 0, 0, 1522, 0, 1510, 1505, 0,
	0, 0, 0, 0, 0, 1477, 0, 0, 0, 0,
	1523, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 1513, 0, 0, 1488,
	1489, 1495, 1516, 1494, 1490, 0, 1487, 1485, 1486, 1478,
	1479, 1480, 1481, 1483, 1484, 0, 0, 0, 0, 0,
	0, 1515, 0, 2637, 0, 0, 0, 0, 0, 1499,
	1500, 1501, 1502, 0, 0, 0, 0, 0, 0, 1482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 1524, 0, 0, 0,
	1504, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 1521, 0, 0, 0, 0, 0, 0, 1491,
	1492, 0, 0, 0, 0, 0, 1513, 0, 0, 1488,
	1489, 1495, 1516, 1494, 1490, 1512, 1487, 1485, 1486, 1478,
	1479, 1480, 1481, 1483, 1484, 1497, 0, 0, 0, 0,
	0, 0, 0, 2118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1474, 1475, 0, 1507, 1508, 1509, 1517, 1518, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	1510, 1505, 0, 0, 0, 0, 0, 0, 1477, 0,
	0, 0, 0, 1523, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 1474, 1475, 0, 1507, 1508, 1509,
	1517, 1518, 1519, 0, 0, 0, 0, 0, 1476, 0,
	0, 0, 1515, 1510, 1505, 0, 0, 1496, 0, 0,
	0, 1477, 0, 0, 1493, 0, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1476, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 1500, 1501, 1502, 0, 0, 0, 0,
	0, 0, 1482, 0, 0, 0, 0, 1513, 0, 0,
	1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485, 1486,
	1478, 1479, 1480, 1481, 1483, 1484, 1514, 0, 0, 1524,
	3593, 0, 0, 1504, 1506, 1499, 1500, 1501, 1502, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 0, 1520, 0, 1521, 0, 0, 0, 0,
	0, 0, 1491, 1492, 0, 0, 0, 0, 0, 1514,
	0, 0, 1524, 0, 0, 0, 1504, 1506, 1512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 1521, 0,
	0, 0, 0, 0, 0, 1491, 1492, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1512, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 1474, 1475, 0,
	1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 1515, 1510, 1505, 0, 0,
	0, 0, 0, 0, 1477, 0, 0, 0, 0, 1523,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1476, 0, 0, 0, 1515, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 0, 0, 1488, 1489, 1495, 1516, 1494, 1490, 0,
	1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484, 0,
	0, 0, 0, 3589, 0, 0, 0, 0, 1499, 1500,
	1501, 1502, 0, 0, 0, 0, 0, 0, 1482, 0,
	0, 0, 0, 1513, 0, 0, 1488, 1489, 1495, 1516,
	1494, 1490, 0, 1487, 1485, 1486, 1478, 1479, 1480, 1481,
	1483, 1484, 1514, 0, 0, 1524, 3508, 0, 0, 1504,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 1521, 0, 0, 0, 0, 0, 0, 1491, 1492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 0, 0, 0, 1474, 1475,
	0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 1510, 1505, 0,
	0, 0, 0, 0, 0, 1477, 0, 0, 0, 0,
	1523, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1474, 1475,
	0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 1510, 1505, 1499,
	1500, 1501, 1502, 0, 0, 1477, 0, 0, 0, 1482,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 1476, 1524, 0, 0, 0,
	1504, 1506, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 1521, 0, 0, 0, 0, 0, 0, 1491,
	1492, 0, 0, 0, 0, 0, 1513, 0, 0, 1488,
	1489, 1495, 1516, 1494, 1490, 1512, 1487, 1485, 1486, 1478,
	1479, 1480, 1481, 1483, 1484, 1497, 0, 0, 0, 3507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	1500, 1501, 1502, 0, 0, 0, 1522, 0, 0, 1482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 1524, 0, 0, 0,
	1504, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 1521, 0, 0, 0, 0, 0, 1503, 1491,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1512, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 1497, 0, 0, 0, 1474,
	1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0,
	0, 0, 1515, 0, 0, 0, 1522, 0, 1510, 1505,
	0, 0, 0, 0, 0, 0, 1477, 0, 0, 0,
	0, 1523, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1476, 0, 0, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 1513, 0, 0,
	1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485, 1486,
	1478, 1479, 1480, 1481, 1483, 1484, 0, 0, 0, 0,
	3392, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	1499, 1500, 1501, 1502, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 0, 0, 1524, 0, 0,
	0, 1504, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 1521, 0, 0, 0, 0, 0, 0,
	1491, 1492, 0, 0, 0, 0, 0, 1513, 0, 0,
	1488, 1489, 1495, 1516, 1494, 1490, 1512, 1487, 1485, 1486,
	1478, 1479, 1480, 1481, 1483, 1484, 1497, 0, 0, 0,
	3289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1474, 1475, 0, 1507, 1508, 1509, 1517, 1518,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 1510, 1505, 0, 0, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 1523, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 1474, 1475, 0, 1507, 1508,
	1509, 1517, 1518, 1519, 0, 0, 0, 0, 0, 1476,
	0, 0, 0, 1515, 1510, 1505, 0, 0, 1496, 0,
	0, 0, 1477, 0, 0, 1493, 0, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1476, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 1500, 1501, 1502, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 0, 1513, 0,
	0, 1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485,
	1486, 1478, 1479, 1480, 1481, 1483, 1484, 1514, 0, 0,
	1524, 3242, 0, 0, 1504, 1506, 1499, 1500, 1501, 1502,
	0, 0, 0, 0, 0, 0, 1482, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 1521, 0, 0, 0,
	0, 0, 0, 1491, 1492, 0, 0, 0, 0, 0,
	1514, 0, 0, 1524, 0, 0, 0, 1504, 1506, 1512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 1521,
	0, 0, 0, 0, 0, 0, 1491, 1492, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1498, 0, 0, 0, 0, 0, 0, 0, 1474, 1475,
	0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 1515, 1510, 1505, 0,
	0, 0, 0, 0, 0, 1477, 0, 0, 0, 0,
	1523, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, 0, 0, 1515,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 1488, 1489, 1495, 1516, 1494, 1490,
	0, 1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484,
	0, 0, 0, 0, 3241, 0, 0, 0, 0, 1499,
	1500, 1501, 1502, 0, 0, 0, 0, 0, 0, 1482,
	0, 0, 0, 0, 1513, 0, 0, 1488, 1489, 1495,
	1516, 1494, 1490, 0, 1487, 1485, 1486, 1478, 1479, 1480,
	1481, 1483, 1484, 1514, 0, 0, 1524, 3240, 0, 0,
	1504, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 1521, 0, 0, 0, 0, 0, 0, 1491,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1497, 0, 0, 0, 1474,
	1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 1510, 1505,
	0, 0, 0, 0, 0, 0, 1477, 0, 0, 0,
	0, 1523, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1476, 0, 0, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1474,
	1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 1510, 1505,
	1499, 1500, 1501, 1502, 0, 0, 1477, 0, 0, 0,
	1482, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 0, 1476, 1524, 0, 0,
	0, 1504, 1506, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 1521, 0, 0, 0, 0, 0, 0,
	1491, 1492, 0, 0, 0, 0, 0, 1513, 0, 0,
	1488, 1489, 1495, 1516, 1494, 1490, 1512, 1487, 1485, 1486,
	1478, 1479, 1480, 1481, 1483, 1484, 1497, 0, 0, 0,
	2998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 1500, 1501, 1502, 0, 0, 0, 1522, 0, 0,
	1482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 0, 0, 1524, 0, 0,
	0, 1504, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 1521, 0, 0, 0, 0, 0, 1503,
	1491, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1512, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 0, 0, 0,
	1474, 1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 0,
	0, 0, 0, 1515, 0, 0, 0, 1522, 0, 1510,
	1505, 0, 0, 0, 0, 0, 0, 1477, 0, 0,
	0, 0, 1523, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1476, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 1513, 0,
	0, 1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485,
	1486, 1478, 1479, 1480, 1481, 1483, 1484, 0, 0, 0,
	0, 2635, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 1499, 1500, 1501, 1502, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 1524, 0,
	0, 0, 1504, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 1521, 0, 0, 0, 0, 0,
	0, 1491, 1492, 0, 0, 0, 0, 0, 1513, 0,
	0, 1488, 1489, 1495, 1516, 1494, 1490, 1512, 1487, 1485,
	1486, 1478, 1479, 1480, 1481, 1483, 1484, 1497, 0, 0,
	0, 2634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1474, 1475, 0, 1507, 1508, 1509, 1517,
	1518, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 1510, 1505, 0, 0, 0, 0, 0, 0,
	1477, 0, 0, 0, 0, 1523, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 1474, 1475, 0, 1507,
	1508, 1509, 1517, 1518, 1519, 0, 0, 0, 0, 0,
	1476, 0, 0, 0, 1515, 1510, 1505, 0, 0, 1496,
	0, 0, 0, 1477, 0, 0, 1493, 0, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1476, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 1500, 1501, 1502, 0, 0,
	0, 0, 0, 0, 1482, 0, 0, 0, 0, 1513,
	0, 0, 1488, 1489, 1495, 1516, 1494, 1490, 0, 1487,
	1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484, 1514, 0,
	0, 1524, 2633, 0, 0, 1504, 1506, 1499, 1500, 1501,
	1502, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 1521, 0, 0,
	0, 0, 0, 0, 1491, 1492, 0, 0, 0, 0,
	0, 1514, 0, 0, 1524, 0, 0, 0, 1504, 1506,
	1512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1497, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	1521, 0, 0, 0, 0, 0, 0, 1491, 1492, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 1474,
	1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 1515, 1510, 1505,
	0, 0, 0, 0, 0, 0, 1477, 0, 0, 0,
	0, 1523, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1476, 0, 0, 0,
	1515, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 0, 1488, 1489, 1495, 1516, 1494,
	1490, 0, 1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483,
	1484, 0, 0, 0, 0, 2632, 0, 0, 0, 0,
	1499, 1500, 1501, 1502, 0, 0, 0, 0, 0, 0,
	1482, 3703, 0, 0, 0, 1513, 0, 0, 1488, 1489,
	1495, 1516, 1494, 1490, 0, 1487, 1485, 1486, 1478, 1479,
	1480, 1481, 1483, 1484, 1514, 0, 2590, 1524, 0, 0,
	0, 1504, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 1521, 0, 0, 0, 0, 0, 0,
	1491, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 0, 0, 0,
	1474, 1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 1510,
	1505, 0, 0, 0, 0, 2561, 0, 1477, 0, 0,
	0, 0, 1523, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3702, 1476, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 2562, 0, 0, 0, 0, 0, 0, 0,
	1474, 1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 1510,
	1505, 1499, 1500, 1501, 1502, 0, 0, 1477, 0, 0,
	0, 1482, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 1476, 1524, 0,
	0, 0, 1504, 1506, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 1521, 0, 0, 0, 0, 0,
	0, 1491, 1492, 0, 0, 0, 0, 0, 1513, 0,
	0, 1488, 1489, 1495, 1516, 1494, 1490, 1512, 1487, 1485,
	1486, 1478, 1479, 1480, 1481, 1483, 1484, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 1500, 1501, 1502, 0, 0, 0, 1522, 0,
	0, 1482, 0, 2682, 0, 0, 2681, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 1524, 0,
	0, 0, 1504, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 1521, 0, 0, 0, 0, 0,
	1503, 1491, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1512, 1498, 0,
	0, 0, 0, 0, 2228, 0, 0, 1497, 0, 0,
	0, 1474, 1475, 0, 1507, 1508, 1509, 1517, 1518, 1519,
	0, 0, 0, 0, 1515, 0, 0, 0, 1522, 0,
	1510, 1505, 0, 0, 0, 2227, 0, 0, 1477, 0,
	0, 0, 0, 1523, 0, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1476, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1498, 1513,
	0, 0, 1488, 1489, 1495, 1516, 1494, 1490, 0, 1487,
	1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 0, 1499, 1500, 1501, 1502, 0, 0, 0, 0,
	0, 0, 1482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 1524,
	0, 0, 0, 1504, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1520, 0, 1521, 0, 0, 0, 0,
	0, 0, 1491, 1492, 0, 0, 0, 0, 0, 1513,
	0, 0, 1488, 1489, 1495, 1516, 1494, 1490, 1512, 1487,
	1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484, 1497, 0,
	0, 0, 1474, 1475, 0, 1507, 1508, 1509, 1517, 1518,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 1510, 1505, 0, 0, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 1523, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1476,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1474, 1475, 0, 1507, 1508, 1509, 1517, 1518,
	1519, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 1510, 1505, 1499, 1500, 1501, 1502, 0, 0, 1477,
	0, 0, 0, 1482, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 1476,
	1524, 0, 0, 0, 1504, 1506, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 1521, 0, 0, 0,
	0, 0, 0, 1491, 1492, 0, 0, 0, 0, 0,
	1513, 0, 0, 1488, 1489, 1495, 1516, 1494, 1490, 1512,
	1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 1500, 1501, 1502, 0, 0, 0,
	1522, 0, 0, 1482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 837, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 0,
	1524, 0, 0, 0, 1504, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 1521, 0, 0, 0,
	0, 0, 1503, 1491, 1492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1512,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 0, 0, 1474, 1475, 0, 1507, 1508, 1509, 1517,
	1518, 1519, 0, 0, 0, 0, 1515, 0, 0, 0,
	1522, 0, 1510, 1505, 0, 0, 0, 0, 0, 0,
	1477, 0, 0, 0, 0, 1523, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1476, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1498, 1513, 0, 0, 1488, 1489, 1495, 1516, 1494, 1490,
	0, 1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484,
	0, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 1499, 1500, 1501, 1502, 0, 0,
	0, 0, 0, 0, 1482, 0, 0, 0, 0, 2688,
	0, 0, 0, 0, 0, 0, 0, 2977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 1524, 0, 0, 0, 1504, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 1521, 0, 0,
	0, 0, 0, 0, 1491, 1492, 0, 0, 0, 0,
	0, 1513, 0, 0, 1488, 1489, 1495, 1516, 1494, 1490,
	1512, 1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483, 1484,
	1497, 0, 0, 0, 1474, 1475, 0, 1507, 1508, 1509,
	1517, 1518, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 1510, 1505, 0, 0, 0, 2683, 0,
	0, 1477, 0, 0, 0, 0, 1523, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1476, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1474, 1475, 0, 1507, 1508, 1509,
	1517, 1518, 1519, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 1510, 1505, 1499, 1500, 1501, 1502, 0,
	0, 1477, 0, 0, 0, 1482, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 1476, 1524, 0, 0, 0, 1504, 1506, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 1521, 0,
	0, 0, 0, 0, 0, 1491, 1492, 0, 0, 0,
	0, 0, 1513, 0, 0, 1488, 1489, 1495, 1516, 1494,
	1490, 1512, 1487, 1485, 1486, 1478, 1479, 1480, 1481, 1483,
	1484, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 1500, 1501, 1502, 0,
	0, 0, 1522, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 1524, 0, 0, 0, 1504, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 1521, 0,
	0, 0, 0, 0, 1503, 1491, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1512, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 1497, 0, 0, 0, 1474, 1475, 0, 1507, 1508,
	1509, 1517, 1518, 1519, 0, 0, 0, 0, 1515, 0,
	0, 0, 1522, 0, 1510, 1505, 0, 0, 0, 2636,
	0, 0, 1477, 0, 0, 0, 0, 1523, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2650, 0, 0,
	0, 0, 1476, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 1513, 0, 0, 1488, 1489, 1495, 1516,
	1494, 1490, 0, 1487, 1485, 1486, 1478, 1479, 1480, 1481,
	1483, 1484, 0, 0, 0, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 1499, 1500, 1501, 1502,
	0, 0, 0, 0, 0, 0, 1482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 1524, 0, 0, 0, 1504, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 1521,
	0, 0, 0, 0, 0, 0, 1491, 1492, 0, 0,
	0, 0, 0, 1513, 0, 0, 1488, 1489, 1495, 1516,
	1494, 1490, 1512, 1487, 1485, 1486, 1478, 1479, 1480, 1481,
	1483, 1484, 1497, 0, 0, 0, 1474, 1475, 0, 1507,
	1508, 1509, 1517, 1518, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 1510, 1505, 0, 0, 0,
	0, 0, 0, 1477, 0, 0, 0, 0, 1523, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1476, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1474, 1475, 0, 1507,
	1508, 1509, 1517, 1518, 1519, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 1510, 1505, 1499, 1500, 1501,
	1502, 0, 0, 1477, 0, 0, 0, 1482, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 1476, 1524, 0, 0, 0, 1504, 1506,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	1521, 0, 0, 0, 0, 0, 0, 1491, 1492, 0,
	0, 0, 0, 0, 1513, 0, 0, 1488, 1489, 1495,
	1516, 1494, 1490, 1512, 1487, 1485, 1486, 1478, 1479, 1480,
	1481, 1483, 1484, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 1500, 1501,
	1502, 0, 0, 0, 1522, 0, 0, 1482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 0, 1524, 0, 0, 0, 1504, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1474,
	1475, 0, 1507, 1508, 1509, 1517, 1518, 1519, 1520, 0,
	1521, 0, 0, 0, 0, 0, 1503, 1491, 1492, 1505,
	0, 0, 0, 0, 0, 0, 1477, 0, 0, 0,
	0, 1523, 0, 1512, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1476, 0, 0, 0,
	1515, 0, 0, 0, 1522, 1496, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 0, 0, 0,
	1499, 1500, 1501, 1502, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 1498, 1513, 0, 0, 1488, 1489,
	1495, 1516, 1494, 1490, 0, 1487, 1485, 1486, 1478, 1479,
	1480, 1481, 1483, 1484, 1514, 0, 0, 1524, 0, 0,
	1515, 1504, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 1521, 0, 0, 0, 0, 0, 0,
	1491, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 781, 0, 0, 1512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 764,
	750, 0, 0, 0, 0, 1513, 0, 0, 1488, 1489,
	1495, 1516, 1494, 1490, 0, 1487, 1485, 1486, 1478, 1479,
	1480, 1481, 1483, 1484, 0, 751, 0, 0, 0, 0,
	754, 0, 0, 0, 787, 0, 0, 0, 0, 0,
	0, 761, 762, 0, 0, 0, 0, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 782, 756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 757, 0, 0, 0, 0, 0, 0, 0, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 758, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 765, 0, 0,
	0, 0, 0, 0, 760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 0,
	786, 1488, 1489, 1495, 1516, 1494, 1490, 0, 1487, 1485,
	1486, 1478, 1479, 1480, 1481, 1483, 1484, 783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 753, 0, 0, 0, 778, 779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 0, 0, 0, 0, 0,
	772, 0, 0, 769, 0, 0, 0, 0, 0, 770,
	0, 0, 0, 0, 0, 0, 747, 0, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 785, 0, 0,
	0, 0, 0, 0, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777,
}
var sqlPact = [...]int{

	5299, -1000, -1000, -1000, -1000, -1000, -1000, 235, 231, 229,
	228, 219, 217, 216, 208, -1000, -1000, -1000, 207, -1000,
	-1000, 206, -1000, 205, 204, 203, 197, -1000, 196, 190,
	183, -1000, -1000, -1000, -1000, 180, 177, 169, 60064, 1911,
	72706, 63100, 1704, 54394, 72268, 53956, 71830, 71392, 168, -1000,
	70954, 167, 166, 163, -1000, -1000, 162, 1861, 45168, 151,
	150, 149, 2286, 148, -1000, 147, -1000, 8409, 1396, -1000,
	141, -1000, 7768, 499, 62230, 2313, 139, 136, 44729, 2294,
	2342, -1000, -1000, 1653, -1000, -1000, 135, 130, 128, 127,
	126, 124, 123, 122, 113, -1000, 110, 107, 106, 105,
	103, 102, 101, -1000, 100, 99, 96, 95, 94, 92,
	90, 89, 84, 83, 82, 73, -1000, 84299, 1593, 1468,
	1456, 1446, 1445, 1437, 918, 72, 71, 69, 68, 67,
	62, 61, -1000, 60, 59, 58, 57, 56, -1000, 55,
	54, 174, 46, 36, 35, 30, 29, 2563, -1000, 1303,
	926, 21559, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 77026, 73138, 27, -205, 24,
	-1000, 2645, 855, 37271, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 473, -1000, -1000, -1000, 312, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1539, 717, -1000, -1000, -1000, 70516, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1910, 11, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 716, -1000, 1906, 179, 1828,
	-1000, -1000, -1000, -1000, -1000, 73138, -1000, -1000, 2932, 2930,
	1683, 713, 70084, -1000, 1327, -1000, 869, 24337, -1000, 1109,
	-1000, 24337, 310, -1000, -1000, -1000, -1000, -1000, 53518, 15971,
	53080, 52642, 69646, 15523, 59632, 48720, -1000, -1000, -1000, 39917,
	1136, -1000, -1000, -1000, -1000, -1000, 3, 49598, 73138, -1000,
	309, -1000, -1000, -1000, -1000, -1000, -1000, 30923, 879, 30450,
	735, 29977, 457, -1000, -1000, -1000, 2928, 2926, 1026, 2925,
	2579, 76594, 1497, 2924, 1414, 1095, 952, 2911, 2908, 2907,
	2897, 2895, 2894, 1189, 69208, 2390, 68770, 1382, 48272, 60064,
	60064, 2157, 68332, 1201, 1179, -1000, -1000, -1000, -1000, 2470,
	2334, 2311, 42111, -1000, 2893, 2891, 2890, 2887, 2886, 76162,
	1496, 2885, 2048, 2883, 2880, 2879, 2878, 2877, 2875, 2874,
	2873, 2872, -1000, 59194, 58756, 58318, 57880, 67894, 47824, -1000,
	-1000, -1000, 39019, 7073, 6171, 5555, 67456, 40363, 60064, 60064,
	-1000, -1000, 31384, 112, -1000, -1000, -1000, 39917, 2353, -1000,
	31384, 112, -1000, 73138, -1000, 2388, 1549, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1913, 1406, 2775,
	47376, 1725, 1245, 2621, 2468, 2467, 1324, 2125, 2465, 2460,
	2455, 2450, 2441, 1352, 2093, 732, 21086, 1409, 1385, 2439,
	2433, 2797, 1641, 1836, 52204, 2869, 2868, 2599, 2417, 2414,
	2351, -1000, -1000, -1000, -1000, 1296, -1000, -1000, 55258, -1000,
	-1000, 1101, -1000, -1000, 1101, -1000, -1000, -1000, -1000, -1000,
	1135, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1303,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1914, -1000,
	1611, -1000, -1000, 2061, 2625, 2625, 2625, 2650, 463, 453,
	-1000, 174, -1000, -1000, 83785, -1000, -1000, 31384, 31384, 31384,
	31384, 31384, 1697, -1000, 710, -1000, -1000, 749, -1000, 707,
	595, -1000, -1000, -1000, -1000, -1000, -1000, 704, 2799, -1000,
	-1000, -1000, -1000, -1000, 2778, -1000, 18260, -1000, -1000, -1000,
	451, 702, 31384, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 815, -1000, 300,
	876, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 621, 1574, 620, 620, 620,
	-1000, -1000, 942, -1000, -1000, -1000, 376, 619, 350, 618,
	-1000, -1000, -1000, -1000, 2387, 699, 698, -1000, 697, 695,
	694, 692, 690, -1000, -1000, -1000, 689, 688, 687, 686,
	685, 684, 683, 681, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 940, -1000, 677, 675, 671, 670, 668, 666,
	661, 660, 645, -1000, -1000, 2, 73138, -1000, 473, 2,
	-1000, -1000, 637, -1000, 24798, 24798, 24798, -1000, -1000, 1903,
	31384, -1000, 2053, -1000, 14, 14, 819, 38143, -1000, 36395,
	819, 501, 509, 41673, -1000, 2347, -1000, -1000, 636, 299,
	-1000, -1000, 2343, 73138, 16417, 73138, 60064, 60064, 60064, 2539,
	31384, -1000, -1000, 46928, 73138, 60496, 2726, 10472, 46928, 73138,
	2385, -1000, -1000, -1000, 73138, -1000, 31384, -1000, 2723, 1317,
	50034, 2673, -12, -1000, -1000, -1000, -1000, -1000, -1000, 2015,
	2044, 1027, 1926, 1402, -1000, 24337, 2571, -1000, -1000, -1000,
	297, 16417, -1000, 1972, 2509, 1123, -1000, 1925, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1463, 2508, -1000, 1597,
	2507, 1462, -1000, -1000, 1726, -1000, -1000, 2594, -1000, -1000,
	1803, 2506, 15, -1000, -1000, 899, 2505, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 789, -1000, 49166, 39917,
	49598, -3, -1000, -1000, -39, -1000, 15075, 83785, -1000, -1000,
	-1000, 83785, 808, -1000, -1000, 2504, -1000, 83785, 806, -1000,
	-1000, 2503, -1000, -1000, -1000, 2864, -1000, 2863, 1978, 2862,
	2861, 2860, -1000, 1465, 1546, 2859, -1000, 2858, -1000, -1000,
	-1000, -1000, -1000, -1000, 57442, 1902, -1000, -1000, 56566, -1000,
	1977, -1000, -1000, 57004, 951, -1000, 899, 1976, -1000, 896,
	-1000, 2856, 67018, 2164, 899, 1970, -1000, -1000, -1000, -1000,
	-1000, 42983, -1000, 42983, -1000, 42983, -1000, 1288, -1000, 75730,
	14, 14, 2778, -1000, -1000, -1000, -1000, -1000, 2501, 2855,
	2853, 2852, -1000, 73138, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 187, 2489, -1000, -1000, 187, 2488, -1000,
	187, 2481, -1000, 184, 2479, -1000, -1000, 1880, 2477, -1000,
	-75, 2475, -1000, -1000, -15, -1000, -1000, -1000, 855, -1000,
	38581, -1000, 38581, -1000, 66580, 49166, 882, 667, 44291, 83785,
	-1000, -77, -1000, 39917, 83785, -1000, 49166, 56566, -1000, 66142,
	56134, -1000, -1000, 1186, 2073, -1000, -1000, -1000, 882, 49166,
	49166, 49166, -1000, 65704, -1000, -1000, 1664, 1350, 2596, 1660,
	60064, -1000, 1506, -1000, -1000, -1000, 2611, 2383, -1000, 46492,
	61792, -1000, 61360, -1000, 60928, -1000, 60064, -1000, 60064, -1000,
	2851, 2850, 2848, -1000, 2847, 2605, 83785, 2600, -1000, 2512,
	1455, 1439, 73138, -1000, -1000, 73138, -1000, 73138, -1000, -1000,
	-1000, -1000, -1000, 2014, -1000, -1000, -1000, -1000, 60064, -1000,
	-1000, -1000, -1000, -1000, -1000, 2382, -1000, 1432, -1000, 1476,
	-1000, 1180, -1000, -1000, 191, -1000, -1000, -12, -1000, 75298,
	-1000, 2061, -1000, 73138, -1000, 2042, 2368, 2380, 1274, 1918,
	2116, -1000, 29504, 2090, 33689, 1924, 174, -1000, -1000, 174,
	174, 23876, -1000, -1000, 10472, 10472, 16417, 1148, 31384, 31384,
	31384, 31384, 31384, 31384, 31384, 31384, 31384, 31384, 31384, 31384,
	31384, 31384, 31384, 31384, 31384, 31384, 31384, 31384, 31384, 31384,
	31384, 31384, 31384, 31384, 31384, 31384, 31384, 31384, 31384, 31384,
	31384, 31384, 31384, 1930, 31384, 1134, 31384, 31384, 31384, 31384,
	1584, -1000, -1000, 1617, 508, 1613, -1000, 2768, 2768, 2768,
	84078, 84078, 593, 2845, 749, -1000, 31384, -1000, 112, 31384,
	16865, -1000, -1000, -1000, 453, 9758, 1961, -1000, 452, 17338,
	-1000, -1000, -1000, 18260, 595, 29031, 31384, 927, 83785, 1208,
	2784, 14629, 2398, 2249, -1000, 2790, -1000, -1000, 2784, -1000,
	-1000, -1000, -1000, 2784, 1141, 1105, 2784, -1000, 2784, 2784,
	634, 783, 758, 20613, 20140, 19667, 19194, 755, 31384, 31384,
	31384, 31384, 31384, 31384, 31384, 31384, -1000, 28570, 28097, 27624,
	34150, 27151, 31384, 18721, 26678, 26205, 73138, 2, 2722, 31384,
	171, -1000, 82410, -1000, 171, 171, 631, -16, 83785, 2069,
	2069, 37707, 1898, 1757, 1757, 1757, -1000, 819, 11035, 819,
	64836, 1786, 819, 819, 280, 288, 447, 35959, 2053, 64836,
	729, 630, 23, 22, 21, -1000, -1000, 20, 19, -1000,
	-1000, 60064, 629, 16865, 16417, 1229, -21, 279, 2104, 2103,
	2101, -1000, 2100, 1364, -22, 1132, -38, -1000, 347, -23,
	-1000, 870, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 935, 628, 627, 673, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 621, 1574, 620, 620, 620, -1000,
	-1000, -1000, 376, 619, 350, 618, -1000, -1000, -1000, -1000,
	-1000, -1000, 2340, -39, 60496, 833, -41, 1030, -12, -1000,
	-1000, -1000, 50034, 1101, -1000, 1356, -1000, -1000, -1000, -1000,
	-1000, -1000, 1213, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	815, -1000, -1000, -1000, -1000, -1000, -1000, 2780, 2773, -2,
	-1000, -1000, 16417, -1000, -14, 1484, -1000, 51766, 2086, 2598,
	2590, 1275, -1000, 1230, 2648, 55258, 2680, 2688, 600, -1000,
	2335, -1000, -1000, 868, 1416, 1122, 55258, 1597, -1000, 10472,
	-1000, 2179, 2646, 1226, 1224, 1226, 1226, 1217, -1000, 55258,
	1120, -1000, 1118, -1000, -32, 2679, 2685, 224, -1000, 2333,
	1117, -1000, -1000, 60064, 16417, -1000, 1351, -1000, 49166, 2173,
	-1000, -44, 789, -3, 49598, 73138, 278, -1000, 31384, 112,
	31384, 112, -1000, -1000, 2472, -1000, -1000, -1000, 2843, 1514,
	2033, -1000, -1000, -1000, 617, 1968, 2332, 73138, 2107, -5,
	60064, -1000, 2457, 1597, 1966, -1000, -1000, 55696, -1000, 2453,
	613, 2841, -1000, 1900, 1965, -1000, -1000, -1000, 74866, 1159,
	2451, 993, 803, 2711, -1000, 803, 43419, -1000, 73138, -1000,
	-1000, 73138, -1000, -1000, -1000, 2839, -1000, 60064, -1000, -1000,
	60064, -1000, 60064, -1000, 60064, -1000, 60064, 60064, -1000, 73138,
	49166, 49166, 5555, 50902, -46, -47, 443, -1000, 65272, 73138,
	992, 51334, 73138, 2561, 882, 39917, -77, 882, 882, 789,
	-1000, 789, -1000, 60064, 2372, -1000, 882, 882, 882, -1000,
	-1000, -1000, -1000, 2838, 2837, -1000, -1000, -1000, 895, 60064,
	73138, 60064, -1000, -1000, 73138, -1000, 73138, -1000, 895, 73138,
	895, 73138, 895, 73138, -1000, -1000, -1000, -1000, -1000, -1000,
	112, 31384, 1314, -1000, 2370, -1000, 2369, -1000, 49, -1000,
	-1000, -1000, -1000, 1652, 60064, 60064, 60064, 60064, 73138, 60064,
	-1000, 55258, -1000, 2042, 2368, -1000, -1000, -1000, -1000, -1000,
	-1000, 1264, 1846, -1000, 2075, -1000, 1247, -1000, -1000, -1000,
	83785, 34611, -1000, -1000, 83785, 1418, -1000, 33228, 32767, -1000,
	-1000, 1374, 60064, 2117, -1000, 2117, -4, -1000, 82069, 2072,
	60064, -1000, -1000, -1000, -1000, -1000, 867, 1116, 1116, 1084,
	1084, 1084, 1084, 2710, 301, 3886, 1297, 3931, 3931, 3909,
	3909, 3909, 3909, 3909, 3931, 5364, 1285, 1285, 5364, 5364,
	5364, 5364, 5364, 1285, 1285, 1285, 3931, 3931, 3931, 84078,
	83895, 7838, 31384, 31384, 1111, 1586, 508, 6113, 31384, 7595,
	7595, 7595, 7595, -1000, 1782, -1000, -1000, -1000, -1000, 2323,
	616, 34150, 34150, -1000, -1000, -1000, -1000, 17799, 31384, -1000,
	-1000, -1000, -1000, 25732, -1000, -1000, 81545, -244, 442, -236,
	-8, -1000, 31384, 31384, 31384, 441, -1000, 250, 31384, 73138,
	-1000, 78576, 728, -49, -1000, -52, 1243, -1000, 31384, -1000,
	-1000, 1110, -1000, 1107, 1103, 1096, -1000, 615, 440, -1000,
	239, -1000, 1715, 614, 612, 439, -53, 436, 857, 856,
	433, 432, 430, 31384, -1000, -1000, -1000, -1000, -1000, 81502,
	-1000, -1000, 81209, -1000, -1000, 80978, -1000, -1000, 80868, -1000,
	-1000, -1000, 83554, 78466, 78235, 77940, 9228, 77897, 10247, -54,
	429, -1000, 2322, -236, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 428, -1000, 411, -1000, 83323, -236, 410, 4842,
	-1000, 34150, 34150, 34150, -1000, 409, -1000, 82179, -1000, 83213,
	25271, 25271, 25271, 407, 82982, 31384, -236, -59, -1000, -61,
	-1000, -1000, 609, -62, 911, 24798, 36833, 16417, -1000, 911,
	911, 31384, -1000, 31384, 2088, -1000, -1000, -1000, 2084, 1622,
	2069, 37707, -1000, -1000, -1000, -1000, 64836, -1000, 2778, 2296,
	-1000, 64836, -1000, -1000, 73138, 473, -1000, 64836, 64836, 16417,
	819, -1000, 819, 64836, 708, -1000, -1000, -1000, -1000, -1000,
	406, 40799, -8, 238, 882, -1000, 16417, 2200, 2200, 2200,
	2200, -1000, -1000, 73138, 2740, -1000, 1650, -1000, 10472, -1000,
	748, 1013, 607, -1000, 2784, 2784, -1000, 2784, 73138, 142,
	24337, -1000, 1101, -1000, -1000, 1358, -1000, 1522, -1000, 1068,
	-1000, -1000, -1000, -1000, 24337, -1000, 1748, 73138, 73138, 60064,
	-1000, -1000, 1964, 74434, 1963, 10472, 73138, -1000, -1000, 606,
	605, 2071, 2062, 73138, 73138, 2056, 74002, 73570, 73138, 1805,
	31384, 1878, 1690, 112, 112, -1000, -1000, 112, 602, 1139,
	60064, 60064, 60064, 1424, -1000, -1000, -1000, -1000, -1000, 54826,
	-1000, -1000, 2789, 2786, -1000, 1226, -1000, -1000, -1000, 1226,
	1597, 1420, 60064, 73138, 1592, 112, 112, -1000, -1000, 112,
	599, 16417, 1580, -1000, 1351, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 46060, 998, 899, 882, 2318, -1000, 2173, -1000,
	-1000, 14183, 83785, -1000, 83785, -1000, 73138, -1000, 946, 73138,
	51334, 888, 2449, 42547, -39, 882, 49166, 60064, -5, 73138,
	-1000, 1597, 2446, 473, 1962, -1000, -1000, 49166, 2835, 598,
	2834, -1000, 60064, 2443, 1894, 1960, 2447, 810, 73138, 911,
	37707, 1561, -1000, 41237, 963, 73138, 1389, 129, -1000, -1000,
	-1000, 32, 73138, -1000, 2832, -1000, -1000, 187, 187, 187,
	-1000, 184, 1880, -1000, -75, -1000, -1000, 5555, 5555, 882,
	-6, 597, -1000, 834, 830, 39471, 49166, -74, -1000, -1000,
	-1000, -1000, -1000, 60064, 73138, 691, 2162, 73138, -76, -1000,
	192, 596, -1000, -1000, 882, 2317, -1000, -1000, 905, -1000,
	1098, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13, -39, -39, -1000, 895, -1000, 895, -1000, 895, -1000,
	83785, -1000, 1307, 1301, 73138, -1000, 16417, 73138, 60064, 16417,
	60064, 2364, 2337, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1005, -1000, 1418, 1841, -1000, 595, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2002, -1000, -10, 23876,
	1932, -1000, -1000, 60064, 10, 31384, 31384, 6100, 4980, 31384,
	34150, 34150, -1000, 31384, 4348, -1000, -1000, -1000, -1000, -1000,
	2308, 594, 31384, 10472, 4812, 4248, -1000, 401, 10097, 5364,
	-1000, 31384, -1000, 399, 23415, -1000, 82641, -31, -79, -1000,
	11493, -236, -81, -1000, -1000, 743, -1000, 2515, -1000, 31384,
	82751, 1973, 1646, 1460, 1354, 2784, 2798, 13737, -1000, 43855,
	914, 1789, -1000, -1000, 2784, 850, -1000, -1000, -1000, 850,
	-1000, 80637, -1000, -1000, -1000, -1000, 10472, 10472, 31384, 31384,
	-1000, 31384, 31384, 31384, -1000, -1000, 31384, -1000, -1000, 2306,
	31384, -1000, 10472, 10472, 34150, 34150, 34150, 34150, 34150, 34150,
	34150, 34150, 34150, 34150, 34150, 34150, 34150, 34150, 34150, 34150,
	34150, 34150, 34150, 2017, 34150, 2756, 2756, 2756, -1000, 2276,
	2306, 31384, 31384, 10472, 398, 396, 395, -1000, 31384, -236,
	-1000, -1000, 5555, -1000, 2244, -1000, 31384, -1000, -107, -1000,
	2053, -1000, -1000, 2244, 2244, -82, 83785, 37707, 37707, -1000,
	587, 31384, 2082, -1000, -1000, 727, -242, -1000, 828, -1000,
	-1000, -1000, -1000, -1000, 473, -1000, -1000, -1000, 188, 64836,
	64836, 725, -1000, -84, -1000, -1000, -87, -1000, 2709, 389,
	16417, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -39,
	1806, 2796, -1000, 2785, 742, 724, 2784, 388, 385, 380,
	-39, 73138, -1000, -12, -1000, -1000, -1000, 31384, -1000, -1000,
	2597, 1090, 1088, -1000, 2435, -1000, 1959, -1000, 971, -1000,
	1403, -1000, 31384, 31384, 582, 581, 1544, 2830, 991, 2431,
	1880, 2430, 1880, -1000, -1000, 853, -1000, 83785, 580, 576,
	-1000, -14, 1444, 904, -1000, -1000, 31384, 31384, 64404, -1000,
	384, 2594, 7, -1000, 1085, -1000, -1000, -1000, -1000, 1597,
	1081, -1000, -1000, -1000, 901, -1000, -1000, 31384, -1000, -32,
	1080, -1000, -1000, -1000, 45614, -1000, -1000, 49166, 882, -1000,
	2829, 2828, 2827, 379, -90, -37, 10472, 2707, 1915, 586,
	60064, 851, -1000, 2778, -1000, -1000, -1000, -1000, 60064, 2704,
	2429, 899, -1000, 2826, -1000, 987, 16417, 60064, 2428, 2024,
	810, 50470, -1000, 899, 1789, -134, -1000, 1389, 22942, 2592,
	-92, -1000, -1000, -1000, 911, 43419, 37707, 31384, 2825, -95,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 63972,
	63972, 49166, 49166, 49166, 882, 73138, 73138, 51334, 2822, 570,
	73138, 73138, 569, -1000, 73138, 73138, 2820, 49166, -1000, 112,
	-1000, 1825, 60064, 13291, -1000, -1000, -1000, -1000, -1000, 895,
	-1000, -1000, 1647, 1923, 1647, 1399, 1395, -1000, 1833, -1000,
	-1000, -1000, -1000, 2105, 2612, 16417, 2695, 7595, 31384, 31384,
	3944, 3853, 538, 7595, 31384, 31384, 10472, 5637, -97, 31384,
	31384, -1000, 31384, 723, 83785, 2795, 31384, 378, 377, -1000,
	-1000, -1000, 2783, -1000, -1000, -1000, 83785, 31384, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 366, -1000, 143, -1000, -1000,
	-1000, 77458, -1000, 31384, 364, 362, -1000, -1000, -1000, 359,
	356, 6763, 265, 80344, 80301, 80008, 83785, 2276, 83785, -1000,
	-1000, 978, 978, 1210, 1210, 1210, 1210, 2756, 648, 1064,
	282, 431, 431, 431, 549, 996, 996, 431, 431, 431,
	2285, 2027, 554, 6195, -1000, -1000, 83785, 83785, 343, -1000,
	-1000, -1000, -236, 338, 2214, 2639, 83785, -1000, 37707, 2214,
	2214, -1000, -1000, 1622, 73138, 83785, 37707, -1000, 2296, -1000,
	11949, -1000, 16417, -1000, -1000, -1000, -1000, 2778, -1000, 40799,
	-1000, 553, -1000, 33, -1000, -1000, 722, 2819, 738, 331,
	-1000, -1000, -1000, -39, 83785, 73138, 73138, 73138, 2427, -1000,
	1788, -1000, 79777, -100, -1000, 82069, 31384, 73138, -1000, 1687,
	2155, 1020, -1000, 2614, 73138, -1000, 73138, -1000, -1000, 73138,
	73138, 60064, 2418, -105, 83785, -40, -1000, 824, -1000, 1228,
	-1000, 12845, 60064, 60064, 2415, -106, 16417, -1000, -1000, -75,
	-1000, -1000, -1000, -1000, 2138, -1000, 62662, 1838, 112, -1000,
	63536, 2818, 550, -1000, 1814, -1000, 721, 1597, 112, 60064,
	-1000, -1000, 547, 73138, 1892, 546, 16417, 2026, 810, 50470,
	-1000, 1159, 2116, -1000, -93, -1000, 560, 112, 1789, -1000,
	-134, 83785, -1000, 821, -1000, -111, -1000, -1000, 330, -1000,
	2560, 2559, -1000, -1000, 31384, 524, 523, 73138, 2558, -1000,
	-1000, -112, -1000, 1817, -1000, -1000, -1000, -1000, -1000, 16417,
	1380, -1000, 522, 514, -1000, -1000, -1000, -1000, 2612, 7595,
	7595, 31384, 31384, 31384, 7595, 5637, -113, -1000, 7595, 7595,
	-236, -1000, -1000, 82641, -1000, -1000, -1000, 83785, -1000, 12399,
	1685, -1000, 79667, -1000, -1000, -1000, -1000, 31384, 31384, -1000,
	-1000, -1000, -1000, -1000, 34150, 2283, 512, 10472, -1000, -1000,
	897, 31384, 31384, 2053, 897, 897, -1000, -114, -1000, -1000,
	-1000, 2778, 33, -1000, -1000, 2817, 16417, 731, -1000, 2814,
	-1000, -1000, -1000, -1000, 73138, -1000, 73138, -1000, 16417, 73138,
	2225, 1948, -1000, -1000, 2055, 511, 34150, 60064, 800, 2212,
	1513, 31384, 1932, -119, -120, 1939, -1000, -1000, 1937, 31384,
	-1000, 10472, 510, 1880, 1880, -121, -122, -1000, 31384, 1071,
	73138, 22481, -1000, 2811, 2594, -1000, -1000, 31384, 1069, -1000,
	1592, 2177, -1000, -1000, -1000, -1000, 2054, -1000, -1000, 73138,
	2052, 891, -127, -1000, 816, 814, -1000, 51334, 888, 858,
	-1000, -1000, -1000, 473, 31384, -1000, 60064, 31384, 1873, -1000,
	810, 50470, -1000, 2447, 1389, -1000, 2525, 73138, 2588, -1000,
	2116, 508, -1000, 882, 506, 504, -129, 31384, 31384, -136,
	503, 882, -148, -1000, 786, 780, -1000, -1000, 60064, 60064,
	31384, 31384, -1000, 7595, 7595, 7595, -1000, 326, -1000, -1000,
	1789, 2636, -1000, 79436, 79143, 502, 34150, 10472, -139, -1000,
	73138, 83785, -236, -1000, -1000, -1000, 709, -1000, 2808, -1000,
	-1000, 2064, -1000, -1000, -1000, 73138, 1957, -1000, 989, 31384,
	6195, 500, 31384, -1000, -1000, 2128, 2287, 2138, 489, -1000,
	-1000, -1000, -1000, 974, 1477, -1000, -1000, 83785, 2618, 31384,
	-1000, -1000, 488, 487, 83785, 486, 796, 2281, -1000, -1000,
	-1000, 83785, 482, 888, -1000, 1689, 1838, 481, -1000, -1000,
	1853, 2153, -1000, 63536, 35057, 35057, 323, 2699, 858, -1000,
	2760, -1000, 2694, -142, 987, -147, 60064, 50470, -1000, 2024,
	-1000, 1168, -150, 73138, 1389, -1000, -1000, 49166, 49166, 974,
	-152, -153, -1000, 49166, -1000, 1817, -1000, 73138, -1000, 73138,
	-1000, -1000, -155, -158, -1000, 1869, 31384, -1000, -1000, 502,
	-166, -1000, -177, -1000, 2692, -1000, -1000, -1000, -1000, 2426,
	2195, 79100, 1990, 73138, 78807, 2273, -1000, -1000, 1592, 73138,
	2138, 2190, 60064, 981, 16417, -167, 1647, 1647, 31384, 22020,
	1619, 31384, 1853, 60064, 73138, -1000, 2609, -1000, 2557, -1000,
	-1000, -1000, 2138, 112, -1000, -1000, 112, 974, 479, 1513,
	477, -1000, 2026, 1251, -1000, 911, -1000, -1000, -168, -175,
	1513, 974, -1000, -176, -1000, -185, -186, -1000, -1000, 321,
	32306, 32306, 32306, -236, -1000, 73138, 474, 2406, 894, -1000,
	1855, 1668, 319, 975, -1000, -1000, 2212, -188, -1000, 893,
	473, -1000, 31384, -1000, 974, -210, -1000, 961, -211, -1000,
	959, -212, -1000, 2280, -1000, -213, -1000, 469, -218, -1000,
	-1000, 1856, -1000, 1592, 891, -1000, 1513, 31384, 2138, 31384,
	-1000, 43419, -1000, 882, 882, 2138, 1513, 882, -1000, -1000,
	-1000, 2440, -1000, 35503, 1830, 1384, 81838, 2440, 2440, -1000,
	-1000, 73138, 2662, -1000, 1866, 1863, 1311, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2657, 1990, 83785, 2138, -1000,
	1647, 2176, -1000, 1647, 2275, -1000, 1588, -1000, 73138, -1000,
	73138, 1360, 1336, 2806, 888, 1853, 2138, -219, 1592, -220,
	-203, -1000, -1000, 1592, 2138, -1000, -1000, 1608, 2690, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 774, -1000, 2545,
	-1000, 1003, 1871, 1871, 750, 1855, -1000, -1000, 467, -1000,
	466, -1000, -221, -1000, -1000, 2804, -1000, 1853, -1000, 1592,
	974, 909, 1513, -1000, -1000, 1592, 1379, -1000, -1000, 1773,
	31845, 31384, -1000, 2744, -1000, -1000, 2085, -1000, 31384, 2212,
	31384, 31384, 1875, -1000, -1000, 909, 1513, -1000, 2803, 2138,
	-1000, -1000, -1000, -1000, 83785, -1000, -1000, -1000, 83785, -1000,
	-226, -233, -1000, -1000, -1000, -1000, 2138, -1000, 1592, 1592,
	1065, 1592, 909, -1000, 465, 909, -1000, 31384, -1000, -234,
	1592, -1000,
}
var sqlPgo = [...]int{

	0, 3413, 3412, 3410, 3409, 3408, 3407, 3406, 3405, 3404,
	3403, 3399, 3396, 3393, 3392, 3390, 3389, 3384, 3377, 3376,
	3374, 3373, 3372, 3371, 3370, 3367, 3366, 3365, 3362, 3356,
	3355, 3353, 3350, 3342, 3341, 3340, 3332, 3331, 3328, 3326,
	3325, 3321, 3318, 3317, 3316, 3314, 3313, 32, 3310, 3308,
	3307, 3306, 3305, 3304, 3301, 3298, 3297, 3295, 3293, 3292,
	3287, 3286, 3285, 3278, 3276, 40, 3268, 228, 3266, 3265,
	3264, 3263, 3262, 3261, 3260, 3259, 3256, 227, 3255, 114,
	3254, 3253, 3252, 3251, 3250, 225, 3249, 3248, 3247, 3245,
	3239, 3237, 3236, 3235, 156, 209, 3232, 215, 3229, 3224,
	3218, 3217, 3216, 3212, 3211, 3210, 3209, 3208, 204, 3207,
	223, 3206, 3205, 3203, 3202, 3201, 3198, 3197, 3192, 3191,
	3190, 3186, 3185, 3184, 3183, 3181, 3179, 3177, 3175, 3173,
	3172, 3171, 3169, 3168, 3167, 3166, 3162, 3156, 3146, 231,
	144, 3145, 3143, 222, 220, 3142, 133, 105, 96, 82,
	3140, 93, 53, 3138, 18, 153, 205, 6697, 198, 3131,
	3128, 3126, 197, 159, 3125, 192, 3121, 3120, 3119, 3118,
	74, 66, 143, 138, 134, 132, 151, 3117, 3116, 71,
	57, 34, 29, 3115, 3114, 3113, 2649, 91, 3109, 216,
	196, 131, 3108, 3106, 3104, 1097, 3103, 187, 86, 90,
	43, 78, 3102, 116, 14, 3101, 140, 52, 3100, 127,
	70, 30, 6285, 7067, 3099, 122, 234, 81, 167, 189,
	171, 129, 174, 173, 139, 106, 3097, 211, 3096, 107,
	161, 3095, 3094, 3092, 62, 162, 83, 3091, 11, 15,
	2, 130, 37, 89, 19, 3090, 13, 3089, 3085, 3084,
	3083, 24, 128, 3081, 123, 58, 3080, 99, 3079, 84,
	178, 3078, 186, 97, 3077, 3076, 213, 169, 157, 3075,
	16, 201, 3074, 3073, 3072, 3071, 3070, 98, 21, 103,
	3069, 3068, 113, 195, 152, 3067, 36, 3066, 135, 73,
	111, 226, 104, 190, 80, 182, 145, 194, 3064, 3062,
	3060, 158, 3059, 3058, 180, 137, 3057, 3056, 232, 35,
	60, 184, 61, 155, 125, 3054, 165, 3053, 3052, 3051,
	233, 142, 172, 6, 1, 76, 94, 28, 9, 183,
	121, 208, 92, 3050, 3744, 1673, 1548, 50, 109, 85,
	56, 102, 126, 219, 55, 3049, 3048, 2073, 3046, 3045,
	3044, 3043, 148, 3042, 3041, 3040, 112, 147, 166, 3039,
	124, 68, 20, 87, 207, 221, 88, 170, 275, 203,
	3038, 146, 3037, 38, 149, 3036, 164, 202, 100, 3033,
	636, 117, 3031, 206, 3030, 3029, 3028, 3027, 3025, 3023,
	3022, 314, 3021, 118, 3018, 3017, 218, 154, 3016, 217,
	160, 141, 65, 49, 3015, 64, 115, 3014, 163, 33,
	3011, 3082, 31, 0, 7531, 5472, 6587, 3010, 1570, 3009,
	175, 110, 3007, 3006, 3004, 77, 2996, 63, 2995, 2991,
	54, 2990, 10, 7, 8, 17, 12, 947, 793, 2988,
	2986, 95, 101, 119, 2985, 229, 191, 2983, 2982, 2980,
	67, 2978, 27, 2976, 25, 2974, 2973, 26, 5, 22,
	2972, 2971, 199, 2969, 200, 2966, 2965, 2710, 108, 2964,
	2963, 214, 72, 2960, 212, 2958, 2702, 136, 179, 2957,
	2956, 2955, 2948, 210, 2945, 2943, 23, 4, 2941, 2939,
	168, 3, 2650, 2938, 2937, 69, 2936, 2935, 150,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 8, 8, 8, 35,
	35, 9, 9, 9, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 14, 14, 25, 25, 15,
	15, 27, 27, 16, 16, 28, 28, 471, 471, 19,
	30, 20, 31, 13, 472, 472, 472, 472, 24, 21,
	32, 22, 22, 22, 22, 22, 150, 150, 150, 150,
	18, 18, 26, 26, 173, 173, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 470, 470,
	175, 175, 174, 169, 169, 473, 473, 176, 176, 176,
	178, 178, 36, 36, 36, 93, 93, 93, 94, 94,
	95, 95, 151, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 81, 81, 411, 411, 412, 412, 146, 146,
	147, 147, 147, 147, 148, 148, 149, 149, 149, 50,
	38, 38, 38, 38, 38, 38, 38, 39, 39, 39,
	39, 40, 40, 40, 40, 40, 40, 41, 41, 41,
	41, 41, 41, 48, 48, 48, 48, 140, 140, 51,
	51, 51, 51, 51, 51, 51, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 481, 481, 482, 482,
	483, 483, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 62,
	62, 253, 253, 228, 228, 63, 63, 63, 64, 64,
	65, 65, 52, 52, 464, 464, 267, 267, 375, 375,
	67, 67, 287, 287, 68, 68, 68, 68, 68, 68,
	69, 69, 69, 69, 69, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 75, 75, 75, 76, 76,
	76, 74, 74, 74, 72, 72, 72, 71, 71, 71,
	73, 73, 73, 268, 268, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 377,
	377, 78, 78, 78, 345, 345, 82, 82, 82, 302,
	302, 83, 83, 83, 83, 83, 84, 84, 84, 84,
	96, 96, 96, 96, 467, 467, 260, 260, 189, 189,
	189, 189, 89, 89, 89, 89, 90, 90, 90, 91,
	91, 145, 145, 102, 102, 102, 102, 102, 101, 101,
	101, 101, 101, 101, 42, 42, 42, 43, 43, 44,
	44, 45, 45, 46, 46, 47, 47, 47, 47, 47,
	104, 104, 477, 477, 106, 103, 103, 103, 105, 105,
	105, 105, 107, 108, 108, 108, 108, 108, 108, 108,
	108, 109, 109, 405, 405, 276, 276, 403, 403, 419,
	419, 404, 404, 232, 232, 232, 232, 232, 233, 233,
	233, 410, 410, 410, 410, 410, 410, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 129, 129, 129, 139, 139, 139, 139, 139, 139,
	139, 132, 132, 132, 119, 119, 111, 111, 111, 111,
	111, 115, 115, 115, 115, 115, 115, 115, 115, 112,
	112, 121, 121, 121, 121, 121, 116, 116, 118, 118,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 113,
	113, 113, 113, 123, 123, 123, 123, 308, 308, 308,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	135, 135, 135, 135, 135, 135, 359, 359, 130, 130,
	130, 130, 134, 134, 134, 134, 292, 292, 127, 127,
	127, 128, 128, 128, 133, 133, 131, 131, 136, 136,
	136, 136, 114, 114, 114, 485, 485, 485, 137, 137,
	126, 126, 138, 138, 138, 138, 138, 138, 138, 138,
	125, 125, 125, 124, 124, 124, 124, 117, 465, 465,
	462, 462, 462, 462, 462, 462, 462, 463, 463, 466,
	466, 87, 87, 87, 57, 57, 57, 58, 58, 154,
	154, 154, 154, 238, 238, 238, 238, 152, 152, 153,
	153, 59, 59, 486, 486, 486, 474, 474, 474, 475,
	475, 475, 475, 475, 475, 234, 234, 235, 235, 326,
	326, 326, 326, 326, 239, 239, 177, 177, 177, 242,
	243, 243, 240, 240, 241, 241, 241, 245, 245, 244,
	247, 247, 246, 325, 426, 426, 428, 428, 428, 428,
	428, 428, 428, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 424, 424, 424, 425, 420, 420,
	421, 421, 421, 421, 236, 236, 237, 237, 237, 237,
	422, 423, 258, 258, 362, 427, 427, 429, 429, 431,
	487, 487, 487, 487, 487, 487, 488, 488, 324, 324,
	323, 323, 251, 251, 432, 432, 432, 432, 433, 433,
	433, 433, 433, 436, 435, 434, 434, 434, 434, 434,
	61, 61, 61, 289, 289, 288, 288, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 142, 142, 192, 192, 56, 56, 56, 12,
	12, 12, 476, 476, 476, 60, 60, 60, 60, 191,
	191, 191, 191, 191, 191, 469, 469, 468, 468, 193,
	193, 490, 490, 66, 66, 66, 66, 66, 66, 55,
	55, 55, 55, 55, 491, 491, 309, 309, 307, 307,
	257, 257, 361, 196, 196, 170, 170, 170, 23, 17,
	17, 33, 33, 34, 34, 29, 29, 478, 478, 479,
	479, 88, 88, 92, 92, 92, 100, 100, 141, 141,
	141, 141, 141, 141, 141, 37, 37, 37, 37, 49,
	49, 49, 49, 98, 493, 493, 493, 99, 99, 99,
	492, 492, 190, 190, 320, 320, 321, 321, 494, 494,
	322, 322, 322, 322, 184, 183, 185, 185, 54, 54,
	54, 179, 179, 180, 180, 181, 181, 182, 182, 495,
	495, 85, 85, 85, 144, 144, 227, 227, 227, 316,
	316, 316, 252, 252, 201, 201, 319, 319, 317, 317,
	317, 317, 286, 286, 286, 143, 143, 265, 265, 278,
	278, 279, 279, 372, 372, 280, 97, 97, 157, 157,
	155, 155, 155, 155, 155, 155, 155, 155, 162, 162,
	163, 163, 164, 164, 165, 166, 166, 166, 166, 269,
	269, 167, 167, 167, 156, 156, 156, 158, 158, 158,
	158, 158, 158, 158, 161, 161, 161, 161, 168, 168,
	168, 160, 160, 443, 443, 443, 445, 445, 446, 442,
	442, 444, 444, 489, 489, 291, 291, 291, 249, 250,
	248, 248, 255, 255, 254, 256, 256, 360, 360, 360,
	171, 171, 171, 283, 283, 283, 283, 284, 284, 312,
	312, 310, 310, 310, 310, 311, 311, 313, 313, 313,
	314, 314, 315, 315, 282, 282, 341, 341, 159, 159,
	159, 262, 262, 262, 263, 263, 332, 332, 332, 332,
	332, 332, 333, 333, 331, 331, 331, 331, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 364, 365, 365,
	264, 264, 366, 318, 318, 460, 460, 460, 461, 461,
	358, 358, 367, 367, 367, 367, 367, 367, 356, 356,
	357, 357, 373, 374, 374, 295, 295, 295, 295, 293,
	293, 296, 296, 296, 296, 294, 294, 368, 368, 368,
	368, 285, 285, 369, 369, 369, 369, 370, 327, 328,
	328, 378, 378, 378, 378, 393, 261, 261, 261, 261,
	261, 496, 496, 379, 379, 379, 379, 379, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	383, 383, 383, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 392, 392, 392, 392, 392, 384, 384, 389, 389,
	390, 390, 390, 385, 386, 391, 391, 391, 391, 497,
	497, 395, 395, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 381, 381, 381, 388, 388, 388, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 303, 303, 305, 305, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	336, 336, 336, 336, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 437,
	437, 437, 437, 437, 437, 437, 437, 440, 440, 441,
	441, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	447, 447, 448, 448, 450, 450, 451, 451, 452, 453,
	453, 453, 454, 455, 455, 449, 449, 456, 456, 456,
	456, 457, 457, 458, 458, 458, 458, 458, 459, 459,
	459, 459, 459, 347, 347, 348, 348, 354, 354, 354,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 194, 194, 194, 194,
	194, 274, 274, 272, 272, 272, 275, 275, 273, 273,
	271, 271, 270, 270, 344, 344, 342, 342, 346, 346,
	297, 297, 394, 394, 394, 394, 394, 394, 394, 394,
	298, 298, 298, 306, 299, 299, 300, 300, 300, 300,
	300, 338, 339, 301, 301, 301, 340, 340, 349, 353,
	353, 352, 351, 351, 350, 350, 329, 329, 330, 330,
	281, 281, 498, 498, 277, 277, 371, 371, 371, 371,
	230, 230, 266, 266, 229, 229, 222, 222, 223, 223,
	223, 223, 259, 259, 355, 355, 396, 396, 397, 397,
	398, 398, 399, 399, 400, 401, 402, 343, 343, 211,
	210, 198, 199, 209, 208, 207, 197, 200, 204, 205,
	206, 202, 203, 217, 216, 215, 221, 213, 214, 376,
	224, 224, 225, 225, 225, 226, 226, 226, 226, 195,
	195, 218, 218, 219, 220, 220, 212, 212, 212, 186,
	186, 186, 187, 187, 188, 188, 409, 409, 407, 407,
	407, 408, 408, 408, 408, 406, 406, 406, 406, 406,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 415, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 418, 418,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 3, 1, 1, 3, 4,
	6, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 10, 3, 6, 4, 3, 1, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 6, 7, 2, 5, 6, 2, 1, 3,
	1, 3, 1, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 6,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 6, 6, 6, 6, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 3, 3, 4, 3,
	4, 7, 4, 4, 4, 3, 5, 7, 4, 3,
	3, 4, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 3, 4, 6,
	3, 4, 6, 3, 4, 6, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 2, 2, 5, 3, 3,
	6, 6, 3, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 2,
	6, 4, 7, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 4, 3, 5, 3,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 3, 3, 4, 3,
	3, 3, 3, 4, 3, 1, 1, 1, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 3, 4,
	10, 10, 3, 5, 5, 5, 3, 5, 2, 0,
	1, 1, 1, 1, 3, 2, 2, 2, 1, 2,
	0, 3, 3, 2, 3, 6, 3, 11, 14, 0,
	2, 4, 3, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 1, 3, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 9, 9, 3, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 1, 2, 8, 4, 2,
	5, 5, 5, 2, 9, 10, 6, 5, 3, 1,
	5, 8, 7, 11, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 11, 7, 5, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 6, 7, 6, 5, 3, 4, 15,
	18, 14, 17, 4, 0, 2, 2, 0, 1, 0,
	1, 3, 3, 2, 0, 1, 1, 0, 6, 6,
	8, 6, 8, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 8, 5, 3, 4,
	3, 0, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 6, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 3, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 2, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	2, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 475, -79, -50, -48, -82, -83, -68,
	-84, -78, -96, -100, -88, -102, -141, -3, -36, -38,
	-51, -67, -69, -77, -86, -85, -87, -89, -93, -92,
	-81, -42, -97, -101, -110, -142, -143, -144, 86, 72,
	128, 109, 114, 161, 300, 331, 341, 325, -105, -106,
	360, -37, -49, -99, -98, -4, -12, 27, 41, -39,
	-40, -41, 57, -56, -53, -62, -480, 88, -444, -70,
	-73, -484, 119, 134, 178, 292, -90, -91, 327, 329,
	135, -44, -43, 129, -155, -157, -103, -104, -145, -111,
	-112, -113, -114, -115, -116, -117, -118, -119, -120, -121,
	-122, -123, -124, -125, -126, -131, -127, -128, -129, -130,
	-132, -133, -134, -135, -136, -137, -138, 364, 411, 42,
	374, 73, 122, 335, 21, -5, -6, -7, -8, -9,
	-10, -11, -52, -54, -55, -57, -58, -59, -66, -60,
	-61, -443, -71, -72, -74, -75, -76, 326, -158, -156,
	472, 425, -14, -19, -20, -15, -16, -18, -21, -17,
	-25, -30, -31, -27, -28, -26, -29, -32, -33, -34,
	-35, -23, -24, -13, -22, 443, 451, -161, -159, -160,
	-168, 348, 433, 388, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, -213, -218, -219, -220, -212, -186,
	-415, -418, 4, -413, -416, 140, 185, 258, 21, 22,
	23, 24, 25, 27, 38, 40, 39, 41, 42, 45,
	48, 49, 47, 52, 53, 54, 55, 56, 57, 58,
	61, 66, 71, 72, 73, 74, 75, 76, 81, 78,
	79, 80, 83, 85, 86, 87, 89, 91, 92, 100,
	101, 102, 103, 104, 105, 109, 112, 111, 114, 117,
	118, 119, 121, 123, 124, 126, 128, 129, 132, 130,
	394, 131, 133, 134, 135, 136, 146, 147, 148, 150,
	151, 153, 155, 159, 160, 162, 166, 168, 169, 170,
	171, 177, 178, 180, 181, 186, 182, 187, 191, 194,
	193, 195, 196, 197, 188, 202, 206, 207, 208, 210,
	211, 214, 215, 216, 217, 218, 221, 220, 223, 226,
	227, 230, 231, 234, 235, 236, 237, 239, 240, 243,
	241, 244, 242, 245, 248, 246, 247, 250, 251, 256,
	254, 252, 253, 260, 263, 175, 265, 266, 268, 269,
	270, 286, 273, 274, 275, 278, 279, 282, 285, 287,
	288, 289, 290, 291, 292, 293, 295, 296, 298, 300,
	301, 303, 305, 306, 307, 308, 309, 310, 311, 313,
	314, 316, 317, 318, 319, 320, 325, 322, 323, 324,
	326, 327, 328, 329, 331, 333, 334, 335, 336, 338,
	340, 361, 362, 376, 341, 342, 343, 344, 345, 346,
	347, 351, 355, 352, 353, 354, 349, 350, 356, 357,
	358, 360, 363, 364, 366, 367, 369, 370, 372, 373,
	374, 375, 377, 380, 381, 382, 378, 379, 387, 385,
	386, 389, 390, 391, 392, 393, 395, 397, 405, 406,
	408, 411, 412, 413, 403, 415, 416, 419, 420, 421,
	424, 422, 423, 429, 425, 427, 430, 431, 432, 438,
	437, 444, 445, 447, 448, 449, 33, 43, 44, 46,
	50, 62, 63, 64, 67, 106, 107, 127, 137, 138,
	149, 163, 165, 172, 173, 174, 192, 198, 200, 204,
	224, 262, 264, 280, 284, 297, 299, 312, 337, 368,
	383, 398, 399, 400, 401, 407, 409, 433, 434, 435,
	439, 446, 271, -206, 2, -186, -186, 300, 26, 2,
	26, 296, 350, 390, 392, 2, -467, -260, 2, 26,
	-189, -186, 88, 161, 348, -206, 2, -467, -260, 24,
	2, -186, 2, -190, 2, 341, -186, 475, 83, 231,
	66, 337, 357, -108, 406, -107, 398, 343, -109, -405,
	2, 248, -186, 475, 475, 475, 475, 2, 388, 289,
	437, 349, 102, 309, 185, -476, 333, 164, 426, 402,
	-462, 2, 4, -416, -413, -223, -222, 388, 102, -220,
	-212, 465, -219, 475, 475, 475, 2, 207, 208, 308,
	307, 357, 358, 475, 475, 2, 25, 60, 82, 85,
	108, 136, 156, 159, 276, -481, 240, 286, 306, 356,
	387, 395, 408, -475, 375, 61, 343, -474, -476, 413,
	117, -307, 102, 231, 160, 420, 392, 390, 418, 112,
	191, 423, 422, 475, 25, 60, 69, 85, 117, 136,
	156, 159, -483, 286, 306, 340, 343, 356, 387, 395,
	413, 408, 2, 437, 349, 388, 185, 102, -476, 304,
	-79, 2, 472, 29, 28, 52, 360, -151, 388, 201,
	2, -186, 207, 208, 2, 475, 475, 157, -462, 2,
	207, 208, 2, 201, 2, 61, 345, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 2, -139, 357, 375, 170,
	41, 66, 26, 305, 71, 290, 103, 162, 185, 186,
	215, 82, 83, -308, 40, 208, 207, -359, 389, 344,
	350, 385, 341, 406, 88, 427, 334, 449, 309, 310,
	130, 4, 102, 248, 359, 398, 231, 75, -489, 2,
	388, -492, 2, 406, 406, 2, -492, 2, -492, 2,
	-492, 2, -493, 406, 446, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, -156,
	-158, -157, 475, 475, 475, 475, 475, -139, 357, 2,
	66, 26, -254, -255, 417, 199, 125, 277, -155, -157,
	2, -443, -403, 2, -334, -419, -336, 463, 464, 456,
	257, 450, -347, 108, 418, 271, -418, -337, -349, 127,
	337, -275, 8, 9, 5, 6, 7, -195, -380, -343,
	410, 139, 261, -226, 476, 10, 472, -440, -157, -348,
	34, 165, 59, -407, -225, -382, -390, -386, -387, -496,
	48, 55, 54, 395, 247, 351, 352, 369, 353, 354,
	45, 429, 182, 268, 270, 193, 4, 200, -224, -212,
	-437, -438, -413, -414, 192, 198, 194, 368, 195, 196,
	197, 44, 312, 150, 151, 149, 118, 107, 106, 264,
	50, 49, 46, 434, -391, 104, 398, 399, 400, 401,
	210, 211, -186, -415, 69, 94, 95, 93, 98, 97,
	233, 232, 99, 96, 359, 426, 60, 33, 172, 173,
	204, 262, 174, 67, -439, 379, 90, 158, 190, 176,
	203, 205, 209, 225, 228, 249, 255, 259, 281, 283,
	332, 365, -497, 435, 137, 138, 284, 297, 383, 407,
	409, 163, 224, 62, 63, -445, 313, -446, -206, -445,
	475, 475, 477, 475, -248, -249, -250, 2, 26, 115,
	472, 2, -363, 2, -364, -368, -157, 219, -367, 472,
	-365, 470, -213, 272, -441, 338, -437, -438, -195, -212,
	-225, 4, -251, 472, 474, 102, 388, 70, 185, -302,
	472, -186, 26, 271, 402, 477, -345, 472, 271, 157,
	274, -186, 2, 2, 361, 2, 472, -108, 64, 406,
	39, 357, -321, 2, -322, -183, -184, -185, -373, 206,
	303, 311, 452, 449, -403, -477, 157, 455, 402, -403,
	-276, 474, 2, -368, 172, -213, 2, -210, -406, 4,
	-413, -416, -414, -417, 69, -415, 26, 28, 29, 30,
	32, 34, 35, 36, 37, 51, 59, 60, 65, 68,
	70, 82, 88, 93, 94, 96, 95, 97, 98, 99,
	108, 110, 113, 115, 116, 120, 122, 125, 139, 141,
	154, 156, 157, 161, 164, 167, 179, 189, 199, 201,
	219, 222, 229, 232, 233, 257, 261, 267, 271, 272,
	276, 277, 294, 302, 315, 330, 348, 359, 371, 384,
	388, 396, 402, 404, 410, 417, 418, 426, 428, 436,
	440, 441, 442, 443, -418, 2, -368, 172, 2, -215,
	172, -368, -218, 2, -197, -186, 2, -209, -406, 2,
	-229, 172, -213, -214, -218, -411, 172, 2, -409, 10,
	-408, 5, 4, -413, -416, -414, -94, -411, 472, 402,
	477, -266, -222, -223, -259, -186, 474, -334, 2, -97,
	2, -334, 172, 2, -97, 172, 2, -334, 172, 2,
	-97, 172, 2, 2, 2, 408, 2, 85, 172, -186,
	388, 101, 2, 324, -482, 340, 412, 437, 2, 2,
	2, 2, 2, 2, 388, -202, 2, -186, 154, -221,
	172, 2, -186, 349, -490, 313, -411, 172, 2, -216,
	-218, -216, 185, 202, -197, 172, 2, 392, 390, 392,
	390, 157, 2, 201, 2, 201, 2, -369, 2, -370,
	-364, -213, 470, 2, 2, 2, 2, 2, 172, -186,
	388, 101, 2, 217, 2, 2, 2, 2, 2, 2,
	2, 2, 2, -268, 172, 2, -213, -268, 172, 2,
	-268, 172, 2, -230, 172, 2, -229, -197, 172, 2,
	-412, 172, 2, -411, -377, 2, -376, -408, 433, -79,
	472, -79, 472, -79, 357, 472, -411, -213, -213, -334,
	-97, -95, -94, 157, -334, -97, -151, 154, 2, 102,
	388, -139, 2, 154, 428, 2, 8, 2, -411, 344,
	310, 146, 2, 361, 2, 362, 66, -308, 449, 66,
	157, 2, 157, 2, -292, 2, 443, -465, 2, 271,
	157, 2, 157, 2, 157, 2, 157, 2, 157, 2,
	307, 358, 208, 2, -97, 440, -334, 440, 2, 405,
	216, 131, 157, -292, 2, 157, 2, 157, 2, 5,
	2, 376, 2, 206, 303, 376, 2, -213, -485, 2,
	388, 437, 349, 2, 2, 78, 79, 157, 2, 157,
	2, 157, 449, 2, -285, -368, -320, -321, -320, 402,
	-254, -255, -139, 361, 2, -162, -283, -164, 154, -310,
	-311, -165, 229, 141, 267, -166, -291, 26, 115, -291,
	-291, 53, 473, 473, 11, 12, 68, 38, 463, 464,
	465, 466, 152, 467, 468, 461, 462, 460, 453, 454,
	458, 212, 213, 84, 457, 455, 77, 238, 339, 142,
	143, 144, 145, 321, 183, 31, 184, 14, 15, 16,
	30, 276, 228, 450, 176, 365, 456, 17, 18, 19,
	203, 205, 259, 43, 179, -194, -231, -334, -334, -334,
	-334, -334, 283, 472, -281, -329, 470, -157, 472, 472,
	472, 5, -402, 8, -157, -334, -347, 473, -273, 472,
	-157, -347, -342, 472, 337, 470, 472, -350, -334, 5,
	472, 474, -447, 444, -384, 472, 299, -383, 472, -383,
	-383, 438, -381, 472, 451, 445, 472, -381, 472, 472,
	154, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 438, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 477, -445, -251, 472,
	-277, -371, -334, 465, -277, -277, 271, -270, -334, 90,
	-295, 209, 249, 158, 225, 332, 190, -331, 476, -331,
	-358, 451, -157, -365, -212, -157, -367, 472, -363, -358,
	-80, -402, -67, -77, -85, -97, -110, -143, -144, 465,
	-213, 472, 157, 472, 474, 157, -259, -406, -197, -213,
	-224, -225, -229, 114, -270, -462, -259, -189, 35, -344,
	-378, -379, -380, -389, -385, -388, -392, 48, 55, 54,
	395, 247, 351, 352, 369, 353, 354, 45, 429, 182,
	268, 270, 193, 4, 46, 434, -391, 200, 317, 318,
	316, 320, 319, 192, 198, 194, 368, 195, 196, 197,
	44, 312, 150, 151, 149, 118, 107, 106, 264, 50,
	49, 104, 398, 399, 400, 401, 210, 211, 435, 379,
	62, 63, -462, -259, 154, -405, -270, 35, -321, 2,
	108, -409, 39, -494, 477, 227, -233, 237, 256, 169,
	272, 447, 265, -410, 5, 4, -343, -355, 108, 231,
	200, -396, -398, 8, -397, 9, -399, 463, 464, -404,
	-403, 92, 474, -406, -173, 322, -172, 23, 27, 119,
	431, 132, -241, 187, 289, 127, 372, 421, -471, -472,
	342, 393, 394, 80, 265, 322, 127, -288, -290, 35,
	100, 251, 285, 56, 180, 242, 243, 374, 439, 127,
	322, -472, 322, -472, -175, 372, 421, -471, -472, 342,
	322, -174, -241, 127, 476, -468, -442, 443, 127, -374,
	-373, -412, -94, -266, 477, 477, -406, 465, 127, 127,
	127, 127, 2, 2, 257, 2, 2, 2, 159, -474,
	-483, 2, 2, 2, -213, 172, -253, 271, -464, -267,
	388, -213, 257, -215, 172, 2, -218, 437, -468, 257,
	35, 472, 2, -199, 172, 2, -187, -186, 185, -442,
	257, -369, -227, -213, -364, -227, 360, -206, 35, -331,
	-331, 127, 2, 2, 2, -186, -176, 477, 58, 328,
	127, -176, 127, -176, 127, -176, 477, 127, -176, 127,
	477, 127, 473, 477, -377, -377, -411, -149, 443, 157,
	88, 472, 472, -151, -374, 477, -95, -411, -464, -197,
	2, -213, 2, 388, 210, -149, -411, -411, -411, -405,
	26, 362, 2, 307, 358, 79, 362, 2, -213, 388,
	102, 185, 72, -466, 154, -463, 333, -462, -213, 102,
	-213, 102, -213, 102, -213, -213, 2, 2, 2, 2,
	76, 76, 154, 2, 405, 2, 405, 2, -186, -186,
	-186, 227, -213, 154, 388, 185, 388, 185, 102, 388,
	-176, 477, -190, -162, -283, -405, -284, -283, -163, -162,
	-165, 154, 311, 422, 251, 363, 214, -311, -310, 26,
	-334, -315, 148, 250, -334, -313, -336, 463, 464, -397,
	-399, -269, 265, -156, -156, -156, -256, -360, -334, 302,
	185, -393, -378, -378, -211, -406, 398, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, 228, 176, 365, 43, 179, -334, 402, -334,
	-334, -334, -334, 246, 257, 261, 410, 139, 419, 115,
	265, -498, 384, 37, -340, -157, -274, 472, -354, 32,
	371, 26, -347, 472, 2, -329, -334, -330, -271, -270,
	-270, 473, 436, 26, 115, 465, 2, 473, 477, 35,
	473, -334, -271, -346, -342, -270, -353, -352, 440, -303,
	-304, 448, 245, 105, 171, 244, -305, 347, -400, 8,
	-406, 465, -448, 147, 164, 8, -400, -400, 398, 398,
	-400, -400, -400, 472, 473, 2, 473, 2, 473, -334,
	2, 473, -334, 2, 473, -334, 2, 473, -334, 2,
	473, 2, -334, -334, -334, -334, -334, -334, -334, -270,
	-297, 2, -394, -270, 4, 448, 245, 105, 171, 244,
	347, 5, -297, 2, -298, 2, -334, -270, -299, -335,
	-336, 463, 464, 456, -347, -300, 2, -334, -271, -334,
	51, 222, 404, -301, -334, 157, -270, -270, 2, -270,
	2, -446, 35, -270, -262, 477, 157, 35, 4, -262,
	-262, 472, 473, 477, -296, 168, 241, 236, -296, -363,
	-295, 209, -293, 281, -293, -293, -358, -198, 470, 478,
	-406, -358, -357, -356, 35, -206, 278, -358, -358, 474,
	473, -357, 471, -460, 472, 475, 475, 475, 475, 475,
	-213, 472, -270, -406, 377, 473, 474, 203, 203, 203,
	203, 338, 473, 402, 443, -79, 273, 473, 477, -261,
	34, 470, -395, 438, 472, 472, -304, 472, 157, -260,
	-477, 473, 406, -322, -232, 311, 370, 323, 355, 386,
	8, 9, 8, 9, 477, -406, 477, -478, 82, 402,
	70, -325, 172, 70, -420, -200, 82, -421, -186, 65,
	418, 302, 156, -478, 82, 302, -478, 82, 82, 360,
	375, 53, -368, 38, 38, 26, -97, 223, 157, 449,
	388, 185, 402, -368, -290, -378, 100, 242, 243, 53,
	-401, -396, 463, 464, -401, 53, -401, -401, -401, 443,
	-215, -368, 402, 402, 477, 38, 38, 26, -97, 223,
	157, 402, -229, -198, -469, -191, 89, 252, 235, 253,
	-192, -193, 291, 430, -411, -146, 181, 473, -374, -222,
	-186, 474, -334, -97, -334, -97, 127, 2, -490, 217,
	472, -236, 257, 157, -259, -375, 201, 477, -267, 127,
	-289, -288, 257, -217, 172, 2, -213, 127, 472, 123,
	309, 2, 271, 257, -199, 172, -179, 391, 127, -287,
	428, -316, -97, 472, 108, 35, -316, -278, -279, -372,
	-280, -200, 472, -206, -186, 2, -213, -268, -268, -268,
	-229, -230, -197, -411, -412, -79, -376, 473, 473, 473,
	-148, 275, -147, -186, 5, -151, 428, -235, -326, -325,
	-424, -425, -420, 228, 185, 418, 202, 140, -252, -201,
	-200, 101, -149, -94, -374, -149, -149, -374, -374, -213,
	154, -149, -149, -149, 2, 2, -292, -213, -197, -229,
	-213, -259, -259, -292, -197, -292, -197, -292, -197, -97,
	-334, 357, 154, 154, 474, -292, 309, 102, 388, 289,
	185, -213, -229, -213, -229, -197, -213, -368, -284, -163,
	272, 214, 363, -313, -314, -336, 337, 338, -314, 337,
	338, 8, 9, 8, 9, -167, 367, 260, -268, 477,
	-170, 36, 113, 214, -213, 449, 124, -334, -334, 402,
	-498, 384, -340, 124, -334, 246, 261, 410, 139, 419,
	115, 265, 157, 472, -335, -335, 473, -272, -334, -334,
	471, 480, 473, -255, 477, -254, -334, -270, -270, 473,
	474, -270, -259, 471, 471, 477, 473, -351, -352, 120,
	-334, 402, 402, 402, 402, 472, 473, 474, -453, 282,
	472, 472, 473, 473, 477, 473, 449, 449, 473, 473,
	473, -334, 473, 473, 473, 473, 35, 477, 477, 477,
	473, 477, 477, 477, 473, 473, 157, 473, 473, -306,
	294, 473, 11, 12, 463, 464, 465, 466, 152, 467,
	468, 461, 462, 460, 453, 454, 455, 77, 238, 339,
	14, 15, 16, 203, 179, -335, -335, -335, 473, -338,
	-339, 157, 154, 35, -301, -301, -301, 473, 157, -270,
	473, 473, 472, 473, -328, -327, 441, -371, -263, 2,
	-363, -208, -406, -328, -328, -270, -334, 209, 209, -294,
	428, 271, -296, -363, -357, -402, -333, -332, 155, 36,
	113, 254, 175, -357, -206, -251, -357, -357, -406, -358,
	-358, -356, 473, -461, -402, 473, -264, -366, -441, -255,
	474, -149, -406, -140, 5, 261, -140, -140, -140, -259,
	24, 295, -378, 470, 471, 8, 472, -400, -400, -400,
	-259, 157, -403, -321, 416, 74, 311, 398, -403, -172,
	322, -200, -200, -213, 257, -325, 172, -178, 257, -378,
	-207, -186, 472, 472, 214, 214, -200, -207, 214, 172,
	-200, 172, -207, -207, -470, 311, 266, -334, 230, 309,
	258, -173, 322, -97, -97, -97, 472, -477, 428, 114,
	-213, -229, -213, -217, 322, 255, -224, -401, -401, -288,
	322, -215, -197, -174, -97, -97, -97, 472, -198, -175,
	322, -191, -411, 261, 424, -468, -149, 157, -146, 465,
	-186, 437, -186, -234, -237, -235, -200, -154, 445, 443,
	127, -228, -213, 470, -149, -411, -213, -221, 127, -251,
	257, -411, 2, 472, 2, -213, 127, 271, 257, -180,
	121, -495, 455, -197, -328, -263, -286, -319, 330, 271,
	-252, 433, -206, -286, -265, 477, 157, 455, 474, -252,
	2, -176, -176, -176, -176, -176, -79, -79, -149, 477,
	472, 455, 455, 472, -411, -411, 473, 477, -213, -199,
	185, 185, -205, -187, 473, 477, 474, 472, -149, 157,
	-45, 443, 388, 476, -292, -292, -292, 357, 357, -186,
	-209, -197, -213, -210, -229, 154, 154, 422, -314, 272,
	234, -360, -171, 263, -213, 476, -334, -334, 124, 124,
	-334, -335, -335, -334, 124, 157, 472, -334, -344, 30,
	30, 473, 477, -330, -334, 473, 436, -255, -255, 473,
	465, -406, 476, 473, -342, 122, -334, 396, 245, 171,
	244, -305, 244, -305, -305, -400, 5, -406, 465, -454,
	-203, 472, -186, 441, -254, -400, -381, -381, 473, -393,
	-378, -334, -334, -334, -334, -334, -334, -338, -334, -393,
	-378, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	115, 257, 265, -335, -339, -338, -334, -334, -378, 473,
	473, 473, -270, -79, -282, 164, -334, -374, 477, -282,
	-282, 473, -363, -363, 472, -334, 209, 471, 477, 479,
	455, -251, 474, -356, -357, 471, 473, 477, 473, 477,
	-318, 35, 473, -406, 274, 5, 8, 470, 471, -400,
	473, 473, 473, -259, -334, 402, 402, 127, 257, 430,
	-426, -421, -334, -257, -361, -334, 472, 472, -169, 119,
	360, -479, 2, 428, 127, -176, 127, -176, 447, 472,
	472, 402, 443, -270, -334, -150, 108, -405, -472, 476,
	-472, 476, 402, 402, 443, -270, 402, -411, 261, -412,
	-149, 2, 2, 2, 473, 473, 477, -427, 35, 269,
	472, 269, -213, -63, 443, -373, -402, -215, 35, 127,
	-468, 2, -309, 428, -198, -213, 127, -181, 221, -495,
	-409, -442, -255, -286, -277, 258, 81, 473, -328, -279,
	-263, -334, 2, 473, -147, -148, -411, -411, -411, -149,
	-151, -151, -326, 2, 472, -199, -187, 472, -151, -201,
	2, -412, -97, 275, -213, 465, -292, -243, -242, 289,
	265, -243, 337, 337, 272, 148, 218, -170, -198, -334,
	-334, 124, 30, 30, -334, -334, -344, 473, -334, -334,
	-270, 471, 5, -334, 473, 473, 8, -334, 473, 474,
	-455, -186, -334, 473, 473, 473, 473, 477, 477, 473,
	473, 473, 473, -339, 157, 115, 265, 472, 473, 473,
	-341, 167, 53, -363, -341, -341, -294, -259, -363, -332,
	-198, 470, -406, -402, -366, 472, 474, 471, 2, 470,
	473, -200, -200, -325, 127, -428, 82, -430, 68, 140,
	88, 257, 261, 418, 302, 65, 108, 315, 35, 473,
	473, 477, -170, -257, -259, 257, 381, 108, 257, 108,
	101, 413, 71, -200, -207, -259, -259, -213, 133, 473,
	477, 455, 2, 465, 465, -217, -215, 133, 473, -198,
	-239, 188, -200, -425, -422, -423, 302, -429, -431, 140,
	302, -97, -153, -152, -186, 5, 2, 472, -236, 275,
	471, -289, -97, -217, 472, -186, 271, 472, -198, -182,
	220, -495, -409, -179, -312, -310, -317, 472, 271, -97,
	-255, 455, 473, 473, 101, 101, -257, 472, 472, -259,
	101, 473, -46, -47, 185, 82, 293, -210, 388, 185,
	472, 472, -170, -334, -334, -334, 473, -255, -406, 465,
	-449, 289, 473, -334, -334, -335, 157, 472, -344, -450,
	442, -334, -270, -450, -450, 473, -402, 2, 470, 2,
	-325, -207, -211, -204, -186, 140, 172, 261, 214, 472,
	-335, -213, 472, 2, -487, 110, 189, -324, -488, 87,
	382, -361, -171, 473, 473, 261, 261, -334, -378, 472,
	-176, -176, 473, 473, -334, 402, -405, 86, -403, 2,
	-472, -334, 402, -240, -241, 179, -427, 214, -204, 214,
	-486, 443, 473, 477, 455, 455, -234, -154, -64, -65,
	403, -373, -251, -257, -213, -257, 271, -495, -409, -180,
	-286, 116, -259, 82, -312, -340, -149, 472, 472, 473,
	-257, -257, 473, 472, -149, 477, 26, 472, 26, 472,
	-213, -229, -270, -270, 473, -255, 53, 473, 473, -335,
	-344, 473, -451, -452, -203, 471, 2, -430, -204, 257,
	428, -334, -188, 472, -334, 189, 111, 177, -239, 472,
	-323, 428, 315, -196, 68, -257, 472, 472, 472, 455,
	157, 472, -154, 287, 472, -238, 271, 101, 251, -152,
	-337, -337, 473, 35, -65, 9, 35, 473, -309, 473,
	-213, -409, -181, 422, 258, 473, -207, -286, -412, -412,
	-323, 473, 473, -412, -47, -259, -259, 473, 473, -456,
	309, 338, 166, -270, 473, 477, 35, 127, 168, 473,
	-432, 239, -186, 473, 111, 177, -240, -259, -239, 168,
	-213, -473, 428, -211, 473, -245, -244, -242, -247, -246,
	-242, -270, -403, 86, 287, -270, -238, -213, -258, -362,
	-200, 73, 101, -239, -97, -97, -323, 472, -324, 472,
	-182, 360, -327, 473, 473, -324, -323, 473, 473, 473,
	473, -457, -458, 43, 415, 92, -334, -457, -457, -452,
	-454, 140, 443, -433, -436, -435, 271, 366, 158, 288,
	473, 381, 439, -487, 473, 443, -251, -334, -323, 473,
	477, 433, 473, 477, 433, 473, 157, 473, 472, 473,
	477, 301, 112, 119, -240, -486, -324, -257, -239, -257,
	-278, -149, -149, -239, -324, -149, -459, 126, -458, 298,
	153, 337, 298, 153, -459, -459, -204, 47, -435, 271,
	-436, 271, 422, 112, 47, -432, -239, -244, 179, -246,
	157, 287, -259, -362, 338, 338, 2, -154, -238, -239,
	473, -240, 473, -328, -240, -239, 92, 164, 397, 251,
	30, 455, -434, 251, 328, 58, 360, -434, 455, -433,
	472, 472, 473, 2, -238, -240, -323, -491, 441, -324,
	-240, 337, 279, -458, -334, 22, 261, 108, -334, -487,
	-270, -270, -177, 58, 328, -491, -324, 2, -239, 473,
	473, -239, -240, -240, 402, -240, -491, 472, -491, -270,
	473, -240,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 364, 365, 367,
	368, 369, 371, 372, 374, 376, 378, 380, 381, 383,
	385, 387, 388, 389, 390, 391, 393, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 453, 455,
	0, 958, 960, 962, 964, 25, 26, 0, 0, 190,
	192, 194, 0, 219, 221, 222, 224, -2, 0, 320,
	321, 323, -2, -2, 0, 0, 442, 444, 0, 0,
	0, 464, 465, 0, 1046, -2, 458, 460, 462, 527,
	529, 531, 533, 535, 537, 539, 540, 542, 544, 546,
	548, 550, 552, 554, 555, 557, 559, 561, 563, 565,
	567, 569, 571, 573, 575, 577, 579, -2, -2, -2,
	0, -2, -2, -2, 976, 29, 31, 33, 35, 37,
	39, 41, 272, 273, 275, 277, 279, 281, 284, 285,
	287, 1101, 325, 327, 329, 331, 333, 0, -2, 1113,
	0, 0, 43, 44, 45, 46, 47, 48, 49, 50,
	66, 67, 68, 69, 70, 71, 72, 73, 54, 56,
	57, 61, 62, 64, 52, 0, 0, 1077, 1079, 1081,
	1083, -2, 0, 0, 7, 9, 11, 13, 15, 17,
	19, 21, 366, 370, 373, 375, 377, 379, 382, 384,
	386, 392, 394, 396, 843, 1737, 1751, 1752, 1753, 1756,
	1757, 1758, 1759, 1760, 1761, 2112, 2192, 2193, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 0, 420, 418, 1730, 421, 1941, 423, 425,
	314, 315, 316, 317, 318, 319, 0, 435, 429, 434,
	436, 438, 439, 440, 441, 415, 413, 0, 435, 1783,
	433, 956, 957, 951, 952, 1976, 983, 454, -2, -2,
	-2, 2080, -2, 486, -2, 493, 2083, 1978, 498, 0,
	500, -2, 503, 959, 961, 963, 27, 28, 0, 0,
	0, 0, 0, 0, 0, 0, 892, 893, 894, 0,
	0, 154, -2, -2, -2, -2, 0, 0, 1823, 1698,
	1753, 1701, 1696, 191, 193, 195, 196, 0, 0, 0,
	0, 0, 0, 220, 223, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 754, 746, 747, 928, 0,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 250,
	355, 356, 0, 1102, 1102, 1102, 0, 0, 0, 0,
	171, 162, 0, 0, 723, 443, 445, 0, 0, 157,
	0, 0, 955, 0, 173, 0, 0, 459, 461, 463,
	528, 530, 532, 534, 536, 538, 541, 543, 545, 547,
	549, 551, 553, 556, 558, 560, 562, 564, 566, 568,
	570, 572, 574, 576, 578, 580, 581, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 584, 586, 587, 588, 0, 639, 656, 0, 883,
	1103, 985, 966, 980, 985, 968, 969, 970, 971, 972,
	977, 979, 973, 974, 975, 30, 32, 34, 36, 38,
	40, 42, 274, 276, 278, 280, 282, 286, 288, -2,
	1075, 1076, 326, 328, 330, 332, 334, 446, 0, 448,
	0, 585, -2, 0, 1107, 1107, 1107, 0, 0, 1076,
	1074, 0, 451, 452, 507, 508, 1345, 0, 0, 0,
	0, 0, 1595, 1429, 0, 509, -2, 1460, 1462, 2059,
	2080, 1594, 1464, 1465, 1466, 1467, 1468, 0, 0, 1471,
	1472, 1473, 1474, 1475, 0, 1477, 0, 1482, 1483, 1484,
	0, 2064, 1675, 1749, -2, 1248, 1249, 1250, 1251, 1252,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 2070, 1745, 0,
	1561, 1498, -2, 1770, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1832, -2, -2, -2,
	-2, -2, -2, -2, 1304, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 2094, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 0, 2048, 2065, 2066,
	2071, 2073, 2067, 2056, 1523, -2, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 1305, -2, 2060, 2061, 2076, 2077, 2082, 2087,
	2088, 2063, 2072, -2, -2, 1093, 1951, 1096, 843, 1094,
	1078, 1080, 0, 1082, 0, 0, 0, 1087, 1110, 1108,
	0, 1149, 1091, 1092, 1167, 1167, 1191, 0, 1172, 0,
	1191, 1102, 1217, 0, 1178, 1971, 1499, 1500, 0, 1753,
	1750, -2, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 422, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 982, 456, 457, 0, 481, 0, 485, 2055, -2,
	1788, 1991, -2, 489, 986, 990, 991, 992, 993, 0,
	0, 0, 0, 0, 495, 0, 0, 482, 483, 501,
	504, 0, 51, 0, 2065, 1217, 53, 0, 1720, 1775,
	1776, 1777, 1778, 1779, 2094, 2111, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 55, 0, 2065, 58, 0,
	2065, 0, -2, 63, 0, 1726, 65, 0, 1723, 74,
	0, 2065, 0, 1695, -2, -2, 2065, 891, 174, 175,
	1766, 1767, 1771, 1772, 1773, 1774, 1204, 158, 0, 0,
	0, 715, 1692, 1697, 716, 1702, 0, 197, 198, 199,
	200, 201, 2065, 203, 204, 0, 206, 207, 2065, 209,
	210, 0, 212, 226, 227, 0, 229, 0, 2065, 0,
	0, 0, 235, -2, 251, 0, 248, 0, 239, 240,
	242, 243, 244, 245, 0, 292, 290, 1731, 0, 724,
	2065, 726, 1736, 0, 0, 912, -2, 2065, 888, 917,
	1734, 0, -2, 0, 1100, 2065, 1000, 750, 751, 752,
	753, 0, 311, 0, 1013, 0, 1015, 0, 1036, 1223,
	1167, 1167, 0, 252, 253, 254, 255, 256, 2065, 0,
	0, 0, 261, 0, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 149, 2065, 337, 353, 149, 2065, 340,
	149, 2065, 343, 149, 2065, 346, 1690, 149, 2065, 349,
	350, 2065, 352, 176, 0, -2, 409, 1739, -2, 358,
	0, 359, 0, 362, -2, 0, 188, 0, 0, 721,
	722, 1204, 160, 0, 953, 954, 0, 0, 466, 0,
	0, 582, 583, 0, 0, 593, 594, 595, 188, 1979,
	1949, 1848, 600, 0, 603, 606, -2, 0, 0, 0,
	0, 610, 0, 615, 616, 617, 0, 720, 619, 0,
	0, 621, 0, 625, 0, 628, 0, 630, 0, 632,
	-2, -2, -2, 643, -2, 0, 647, 0, 649, 0,
	0, 0, 0, 664, 665, 0, 670, 0, 673, 674,
	675, 676, 677, 0, 679, 680, 681, 682, 0, 684,
	685, -2, -2, 689, 691, 0, 698, 0, 702, 0,
	706, 0, 589, 590, 149, 1221, 965, -2, 967, 0,
	-2, 0, 447, 0, 450, 1128, 1061, 1058, 0, 1125,
	1126, 1062, 0, 0, 0, 1069, 0, 1105, 1106, 0,
	0, 0, 1048, 1049, 0, 0, 0, 0, 1600, 1601,
	1602, 1603, 1604, 1605, 1608, 1609, 1606, 1607, 1610, 1611,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 1614, 1615,
	0, 0, 1617, 0, 1619, 0, 0, 0, 0, 0,
	0, 1408, 1410, 1683, 0, 0, 1616, 1350, 1351, 1352,
	1387, 1388, 0, 0, 1461, 1680, 1679, 1463, 0, 1631,
	0, 1470, 1476, 1716, -2, 0, 1595, 1626, 0, 0,
	1485, 1486, 1487, 0, 0, 1631, 0, 0, 1674, 1342,
	0, 0, 1563, 0, 1284, 0, 1285, 1286, 0, 1287,
	1288, 1301, 1314, 0, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	1655, -2, 0, 0, 0, 0, 0, 1095, 0, 0,
	1153, 1684, 1688, 1689, 1153, 1153, 0, 0, 1632, 1214,
	1214, 0, 0, 1210, 1210, 1210, 1208, 1191, 0, 1191,
	1201, 0, 1191, 1191, 0, -2, 1172, 0, 0, 1201,
	0, 1185, 397, 399, 401, 403, 404, 405, 407, 1218,
	1219, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 1741, 0, 0, 0, 0, 427, 437, 1102, 0,
	1634, 1240, 1243, 1244, 1245, 1246, 1247, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, -2, 1302, 1304, 1325, 1291, 1292,
	1293, 1294, 1295, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1297, 0, 1272, 1272, 1272, 1289,
	1290, 1313, 1324, 1316, 1324, 1320, 1241, 1242, 1307, 1308,
	1309, 1310, 0, 431, 0, 0, 0, 0, -2, 491,
	496, 497, 0, 0, 988, 0, 994, 518, 519, 520,
	996, 997, 0, 494, 521, 522, 523, 524, 525, 526,
	0, 1704, 1705, 1706, 1707, 1710, 1711, 0, 0, 492,
	511, 499, 0, 505, 75, 948, 114, 0, 948, 948,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 99,
	110, 87, 88, 0, 0, 0, 0, 59, 865, 0,
	868, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 98, 0, 93, 77, 0, 0, 0, 100, 112,
	0, 140, 142, 0, 0, 889, 0, 1099, 0, 179,
	1203, 0, 1204, 714, 0, 0, 1754, 1700, 0, 0,
	0, 0, 228, 230, 0, 232, 233, 234, 0, 911,
	0, 241, 238, 283, 815, 2065, 0, 0, 309, 304,
	0, 306, 0, 864, 2065, 862, 1735, 0, 886, 0,
	0, 0, 918, 0, 2065, 923, 1722, 1762, 1763, 1002,
	0, 313, 0, 1016, 1018, 0, 0, 1224, 0, 1226,
	1227, 0, 258, 259, 260, 0, 335, 0, 147, 148,
	0, 338, 0, 341, 0, 344, 0, 0, 347, 0,
	0, 0, 1102, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 188, 0, 1204, 188, 188, 1204,
	468, 1204, 470, 0, 0, 596, 188, 188, 188, 601,
	602, 604, 605, -2, -2, 699, 607, 608, 667, 0,
	0, 0, 666, 618, 0, 708, 1967, 718, 667, 1823,
	667, 1823, 667, 1823, 629, 631, 634, 659, 642, 646,
	0, 0, 0, 651, 0, 653, 0, 655, 667, 668,
	671, 678, 683, 0, 0, 0, 0, 0, 0, 0,
	882, 0, 978, 1128, 1061, 449, 1052, 1127, 1053, 1060,
	1063, 0, 0, 1065, 0, 1067, 0, 1123, 1124, 1131,
	1132, 0, 1142, 1143, 1135, 0, -2, 0, 0, 1138,
	1139, 1071, 0, 1088, 1089, 1090, 1114, 1115, 937, 0,
	2192, 1346, 1235, 1347, 1348, 1719, 0, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, -2, -2, -2,
	-2, -2, -2, -2, -2, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, -2, -2, -2, 1385,
	1386, -2, 1618, 1620, 0, 1683, 0, -2, 0, -2,
	-2, -2, -2, 1405, 0, 1407, 1412, 1414, 1416, 0,
	0, 0, 0, 1682, 1426, 1666, 1667, 0, 0, 1597,
	1598, 1599, 1411, 0, 1430, 1681, 1678, 0, 0, 1630,
	1113, 1489, 0, 0, 0, 0, 1496, 1481, 1628, 0,
	1627, 0, 0, 0, 1638, 0, 1673, 1669, 0, 1717,
	1341, 1328, 1329, 1330, 1331, 1332, 1333, 1343, 0, 1714,
	1742, 1748, 1571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1524, 1525, 1526, 1527, 1528, 0,
	1530, 1531, 0, 1533, 1534, 0, 1536, 1537, 0, 1539,
	1540, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1543, 0, 1641, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 1545, 0, 1547, 1632, 1652, 0, 0,
	1431, 0, 0, 0, 1595, 0, 1550, 1632, 1660, 0,
	0, 0, 0, 0, 1632, 0, 1665, 0, 1557, 0,
	1559, 1097, 0, 0, 1230, 0, 0, 0, 1687, 1230,
	1230, 0, 1148, 0, 0, 1211, 1212, 1213, 0, 0,
	1214, 0, 1205, 1209, 1206, 1207, 1201, 1164, 0, 0,
	1721, 1201, 1170, 1200, 0, 843, 1190, 1201, 1201, 0,
	-2, 1174, 1191, 0, 0, 398, 400, 402, 406, 408,
	0, 0, 1113, -2, 188, 842, 0, 0, 0, 0,
	0, 417, 419, 0, 0, 411, 0, 414, 0, 1231,
	1234, 0, 0, -2, 0, 0, 1326, 0, 0, 0,
	0, 484, 0, 987, 995, 0, 515, 0, 517, 0,
	1708, 1712, 1709, 1713, 0, 506, 0, 0, 0, 0,
	947, 118, 2065, 0, 151, 0, 0, 809, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 89, 0, 0, 0,
	0, 0, 0, 0, 866, 867, 869, 876, 878, 0,
	872, 1715, 0, 0, 873, 0, 875, 877, 879, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 90, 0,
	0, 0, 0, 1694, 907, 905, 899, 900, 901, 902,
	903, 904, 0, 0, -2, 188, 0, 159, 179, 1693,
	1703, 0, 202, 205, 208, 211, 0, 236, 0, 0,
	756, 729, 0, 0, 291, 188, 0, 0, 305, 0,
	860, 863, 0, 843, 2065, 898, 1733, 0, 0, 0,
	0, 916, 0, 0, 0, 2065, 1004, 1010, 0, 1230,
	0, 1034, 1019, 0, 0, 0, 1034, 1038, 1039, 1041,
	1042, 0, 0, 1225, 0, 262, 354, 149, 149, 149,
	1691, 149, 149, 177, 351, 357, 410, 1102, 1102, 188,
	186, 1926, 184, 181, 183, 0, 0, 0, 757, 759,
	760, 761, 762, 0, 1763, 0, 1877, 1763, 0, 1022,
	1024, 0, 155, 161, 188, 0, 303, 467, 472, 591,
	0, 597, 598, 599, 636, 661, 609, 611, 612, 613,
	0, 719, 717, 620, 667, 623, 667, 626, 667, 645,
	648, 650, 0, 0, 0, 663, 0, 0, 0, 0,
	0, 0, 0, 703, 704, 705, 707, 1222, 1056, 1057,
	1059, 0, 1068, 0, 0, 1137, -2, -2, 1136, 1140,
	1141, -2, -2, -2, -2, 1064, 0, 1073, 1070, 0,
	1122, 935, 936, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1427, 0, -2, 1406, 1409, 1413, 1415, 1417,
	0, 0, 0, 0, 0, 0, 1621, 0, 1623, 1428,
	1676, 1679, 1593, 0, 0, 1112, 1113, 1113, 0, 1495,
	0, 1629, 0, 1636, 1637, 0, 1488, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 0,
	0, 0, 1296, 1270, 0, 1324, 1322, 1323, 1317, 1324,
	1321, 0, 1529, 1532, 1535, 1538, 0, 0, 0, 0,
	1518, 0, 0, 0, 1522, 1542, 0, 1544, 1546, 0,
	0, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1434, 1435, 1436, 1549, 1658,
	1659, 0, 0, 0, 0, 0, 0, 1555, 0, 1664,
	1556, 1558, 1102, 1150, 1145, 1229, 0, 1685, 1204, 1152,
	1154, 1686, 1724, 1145, 1145, 0, 1633, 0, 0, 1195,
	0, 0, 0, 1197, 1168, 0, 0, 1162, 0, 1158,
	1159, 1160, 1161, 1169, 843, 1199, 1171, 1175, 1742, 0,
	1201, 0, 1186, 0, 1188, 1220, 0, 1180, 1183, 0,
	0, 189, 1755, 213, 217, 218, 214, 215, 216, 426,
	0, 0, 1635, 0, 1236, 0, 0, 0, 0, 0,
	430, 0, 480, -2, 513, 514, 516, 0, 512, 115,
	948, 0, 0, 939, 0, 120, 2065, 129, 0, 785,
	0, 1725, 0, 0, 0, 0, 950, 0, 0, 2065,
	149, 2065, 149, 132, 135, 0, 139, 137, 0, 0,
	776, 76, 948, 79, 83, 91, 0, 0, 0, 97,
	0, 0, 0, 941, 0, 870, 871, 874, 880, 60,
	0, 943, 938, 141, 81, 85, 92, 0, 945, 78,
	0, 906, 884, 885, 0, 890, 152, 0, 188, 1699,
	0, 0, 0, 0, 0, 755, 826, 0, 0, 0,
	0, 297, 293, 0, 302, 308, 307, 725, 0, 0,
	0, -2, 913, 0, 915, 927, 0, 0, 0, 1006,
	1010, 0, 1009, 1100, 1113, 312, 1011, 1034, 0, 0,
	0, 1021, 1017, 1014, 1230, 0, 0, 0, 0, 0,
	257, 336, 339, 342, 345, 348, 360, 361, 163, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	1763, 1763, 0, 1729, 0, 0, 0, 0, 156, 0,
	469, 0, 0, 0, 622, 624, 627, 652, 654, 667,
	692, 693, 771, 0, 771, 0, 0, 1066, 0, 1134,
	1072, 1116, 1117, 0, 937, 0, 1349, 1390, 0, 0,
	-2, 0, 0, 1394, 0, 0, 0, -2, 0, 0,
	0, 1622, 1624, 0, 1678, 1490, 0, 0, 0, 1494,
	1478, 1479, 0, 1596, 1639, 1668, 1672, 0, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 0, 1718, 1743, 1747, 1569,
	1570, 1574, 1732, 0, 0, 0, 1315, 1319, 1501, 0,
	0, 0, 0, 0, 0, 0, 1640, 1651, 1653, 1432,
	1433, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, -2, -2, -2, 1450, 1451, 1452, -2, -2, -2,
	0, 0, 0, 1654, 1656, 1657, 1661, 1662, 0, 1552,
	1553, 1554, 1663, 0, 1147, 0, 1228, 1151, 0, 1147,
	1147, 1109, 1193, 0, 0, 1216, 0, 1165, 0, 1166,
	0, 1198, 0, 1173, 1176, 1177, 1187, 0, 1179, 0,
	1182, 0, 1490, -2, 428, 412, 0, 0, 1238, 0,
	1299, 1303, 1327, 432, 1202, 0, 0, 0, 0, 150,
	783, 808, 0, 0, 930, 937, 0, 0, 122, 0,
	0, 0, 130, 0, 0, 127, 0, 134, 138, 0,
	0, 0, 0, 0, 94, 95, 96, 0, 101, 0,
	102, 0, 0, 0, 0, 0, 0, 909, 910, 178,
	153, 231, 897, 237, 765, 814, 0, 816, 0, 730,
	0, 0, 815, 289, 0, 296, 0, 864, 0, 0,
	887, 914, 0, 0, 0, 0, 0, 1008, 1010, 0,
	1001, 1002, 1130, 1012, 1032, -2, 1031, 0, 1113, 1040,
	1037, 1043, 1044, 0, 185, 0, 180, 182, 0, 166,
	0, 0, 758, 763, 0, 0, 0, 0, 0, 1023,
	1025, 0, 172, 0, 592, 614, 662, 694, 770, 0,
	0, 696, 0, 0, 1133, 1120, 1121, 1118, 937, 1392,
	1396, 0, 0, 0, 1398, -2, 0, 1420, -2, -2,
	1625, 1677, 1469, 1113, 1491, 1493, 1480, 1671, 1344, 0,
	1576, 1573, 0, 1560, 1271, 1513, 1514, 0, 0, 1517,
	1519, 1520, 1521, 1650, 0, 0, 0, 0, 1551, 1098,
	1565, 0, 0, 1155, 1565, 1565, 1194, 0, 1196, 1163,
	1156, 0, 1743, 1189, 1181, 0, 0, 1232, 1237, 0,
	1298, 116, 117, 119, 0, 784, 0, 787, 0, 0,
	0, 0, 794, 795, 0, 0, 0, 0, 0, 830,
	839, 0, 1122, 0, 0, 0, 124, 144, 0, 0,
	949, 0, 0, 149, 149, 0, 0, 940, 0, 0,
	0, 0, 104, 0, 0, 942, 944, 0, 0, 946,
	773, 0, 826, 818, 819, 820, 0, 825, 827, 0,
	0, 743, 0, 739, 0, 0, 732, 756, 729, 0,
	294, 861, 895, 843, 0, 926, 0, 0, 0, 998,
	1010, 0, 1003, 1004, 1034, 1129, 0, 0, 0, 1020,
	1130, 0, 187, 188, 0, 0, 0, 0, 0, 0,
	0, 188, 471, 473, 0, 0, 479, 769, 0, 0,
	0, 0, 1119, 1400, -2, -2, 1421, 0, 1744, 1746,
	1113, 0, 1562, 0, 0, -2, 0, 0, 0, 1084,
	0, 1146, 1144, 1085, 1086, 1215, 0, 1184, 0, 1239,
	121, 0, 788, 789, 1728, 791, 0, 793, 796, 0,
	799, 1765, 0, 803, 810, 831, 0, 765, 0, 836,
	837, 931, 932, 841, 0, 123, 125, 143, 934, 0,
	126, 133, 0, 0, 80, 0, 0, 1816, 107, 105,
	103, 82, 0, 729, 772, 0, 817, 0, 828, 829,
	733, 0, 731, 0, 0, 0, 0, 0, 295, 298,
	0, 301, 0, 0, 927, 0, 0, 0, 1005, 1006,
	310, 0, 0, 0, 1034, 1045, 165, 0, 0, 841,
	0, 0, 807, 0, 170, 0, 475, 0, 477, 0,
	695, 697, 0, 0, 1492, 1580, 0, 1515, 1516, -2,
	0, 1458, 1564, 1566, 0, 1157, 1233, 786, 790, 0,
	0, 0, 847, 0, 0, 0, 834, 835, 773, 0,
	765, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 741, 0, 744, 0, 740,
	737, 738, 765, 0, 299, 300, 0, 841, 0, 839,
	0, 1007, 1008, 0, 1027, 1028, 1030, 1035, 0, 0,
	839, 841, 806, 0, 474, 0, 0, 700, 701, 0,
	0, 0, 0, 1575, 1459, 0, 0, 0, 0, 798,
	852, 0, 0, 0, 832, 833, 830, 0, 812, 0,
	843, 128, 0, 933, 841, 0, 777, 0, 0, 780,
	0, 0, 108, 1816, 106, 0, 727, 0, 0, 822,
	824, 0, 745, 773, 743, 896, 839, 0, 765, 0,
	999, 0, 1029, 188, 188, 765, 839, 188, 476, 478,
	1572, 1592, 1581, -2, 2027, 1820, 0, 1592, 1592, 1567,
	1568, 0, 0, 800, 848, 849, 0, 844, 845, 846,
	1764, 801, 802, 811, 838, 0, 847, 145, 765, 774,
	0, 0, 775, 0, 0, 111, 0, 113, 0, 821,
	0, 0, 0, 0, 729, 733, 765, 0, 773, 0,
	1230, 167, 168, 773, 765, 169, 1577, 0, 0, 1583,
	1584, 1585, 1586, 1587, 1578, 1579, 792, 0, 850, 0,
	851, 0, 0, 0, 0, 852, 131, 778, 0, 781,
	0, 109, 0, 823, 734, 0, 736, 733, 742, 773,
	841, 924, 839, 1026, 804, 773, 0, 1589, 1590, 0,
	0, 0, 853, 0, 856, 857, 0, 854, 0, 830,
	0, 0, 768, 735, 728, 924, 839, 921, 0, 765,
	805, 1588, 1591, 1582, 797, 855, 858, 859, 840, 813,
	0, 0, 764, 766, 767, 919, 765, 925, 773, 773,
	0, 773, 924, 779, 0, 924, 922, 0, 920, 0,
	773, 782,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 461, 3, 467, 462, 3,
	472, 473, 465, 463, 477, 464, 474, 466, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 480, 3,
	453, 455, 454, 458, 476, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 470, 3, 471, 468, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 478, 460, 479, 456,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 457, 57796, 459, 57797, 469, 57798, 475, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1120
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1132
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1133
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1134
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1135
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1136
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1140
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1149
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "ALTER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1156
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1157
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1158
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1159
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1265
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1269
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 60:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1273
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1287
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1342
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1346
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1352
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1356
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1362
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1371
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1382
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1386
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1392
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1400
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1410
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1414
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1424
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1435
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1442
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1454
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1461
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1469
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1478
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1489
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1497
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1508
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1518
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1528
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1537
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1548
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1554
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1566
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1580
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1585
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1596
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1606
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1610
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1627
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1632
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1637
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1667
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1705
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 131:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1754
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = nil
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1795
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1857
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1887
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1948
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1957
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1963
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1968
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1973
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1978
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1983
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1987
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2006
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2014
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2026
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = nil
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2084
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2098
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2099
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2100
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2101
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2119
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2124
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2151
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2187
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2208
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2227
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2232
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2247
		{
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2248
		{
			return helpWith(sqllex, "CREATE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2251
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			return unimplemented(sqllex, "create cast")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2255
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create operator")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplemented(sqllex, "create publication")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "create rule")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplemented(sqllex, "create server")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2273
		{
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2274
		{
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2278
		{
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2282
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplemented(sqllex, "drop server")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2311
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2312
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2315
		{
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2316
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2353
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2385
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2396
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2424
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2459
		{

			sqlVAL.union.val = nil
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2483
		{
			return helpWith(sqllex, "DELETE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2487
		{
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2501
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2502
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2511
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2512
		{
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2513
		{
			return helpWith(sqllex, "DROP")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2520
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2535
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2550
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2565
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2588
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2611
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2626
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2630
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2635
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2661
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.ExplainBundle{Statement: sqlDollar[3].union.stmt()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2694
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2697
		{
			return helpWith(sqllex, "DELETE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2699
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2700
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2701
		{
			return helpWith(sqllex, "INSERT")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2702
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2704
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2705
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2706
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2721
		{
			return helpWith(sqllex, "DELETE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			return helpWith(sqllex, "INSERT")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2730
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2756
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2789
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2830
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2861
		{
			return helpWith(sqllex, "GRANT")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2892
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "RESET")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "RESET")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2970
		{
			return helpWith(sqllex, "USE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "USE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3017
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3043
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3097
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3152
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplemented(sqllex, "set from current")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3216
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = tree.Low
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = tree.Normal
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = tree.High
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3346
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "SHOW")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.str = "client_encoding"
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.str = "timezone"
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3416
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3431
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3464
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3473
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3535
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3570
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3602
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = true
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = true
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = false
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3713
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3715
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3719
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = true
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = false
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = true
		}
	case 667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = false
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3831
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3836
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3900
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3908
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3945
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3968
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4124
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4279
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4294
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = nil
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{

			sqlVAL.union.val = nil
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4321
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4336
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4341
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4346
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 741:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4373
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4386
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4400
		{
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = true
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = true
		}
	case 748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = false
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = true
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = true
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 764:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4464
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4480
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4485
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.str = ""
		}
	case 773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 779:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 782:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4674
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4688
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 804:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4785
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4819
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4899
		{
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4900
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5059
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5068
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5076
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5087
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5102
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5105
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5109
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = true
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5180
		{

			sqlVAL.union.val = true
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = false
		}
	case 895:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5195
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5206
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5216
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 908:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = nil
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5270
		{
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5271
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5277
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5279
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5281
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5283
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5287
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5303
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5318
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5334
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5348
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5365
		{
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = false
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = true
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = false
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5414
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.str = ""
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.Descending
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5461
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5467
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5475
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5481
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5489
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5495
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5512
		{
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5513
		{
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5517
		{
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5561
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5567
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5604
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5609
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5618
		{
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5619
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5620
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5637
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5640
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5641
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5682
		{
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5684
		{
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5688
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 998:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.str = ""
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.str = ""
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.str = ""
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.str = ""
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5796
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5797
		{
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5845
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5854
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5920
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5921
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5929
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5967
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6185
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6337
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = nil
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6351
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = true
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = false
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = false
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = true
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6381
		{
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6411
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6432
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6437
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6466
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6499
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6554
		{
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6555
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6558
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6559
		{
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6612
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6614
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6651
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6656
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6661
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6672
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6684
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6703
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6742
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6752
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6798
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6828
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6861
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6863
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = nil
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = true
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = false
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.str = tree.AstFull
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.str = tree.AstRight
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.str = tree.AstInner
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6981
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.str = tree.AstHash
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.str = ""
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7043
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7066
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7072
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7078
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7117
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7130
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7138
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7139
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7157
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7159
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7167
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = types.String
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = types.Name
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7220
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = types.INet
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = types.Oid
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7300
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7308
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = nil
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = types.Int2
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = types.Int2
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = types.Int4
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = types.Int
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = types.Int
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = types.Int
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = types.Float4
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = types.Float4
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = types.Float
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = types.Float
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7375
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7383
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7391
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = types.Bool
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = types.Bool
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = types.RegType
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7432
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = types.Float
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7451
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7457
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7479
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = types.String
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = true
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = false
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = types.Date
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7528
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7536
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7550
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7559
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7567
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7584
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = true
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = false
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = false
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = types.Interval
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7608
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7692
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7707
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = nil
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7737
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7786
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7799
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8043
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8109
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8330
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8356
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8380
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8410
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8421
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8422
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8437
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8448
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8568
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8573
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8582
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8600
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8609
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8614
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8619
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8624
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8629
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8638
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8639
		{
			return unimplemented(sqllex, "treat")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8660
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8670
		{
			return unimplemented(sqllex, "within group")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8671
		{
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.str = ""
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8795
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8808
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8876
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8905
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.Any
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = tree.Some
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = tree.All
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = tree.Div
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = tree.LT
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = tree.GT
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = tree.LE
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = tree.GE
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.NE
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = tree.Like
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9266
		{
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9267
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9339
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9420
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9456
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9473
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9485
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9672
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.str = ""
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
