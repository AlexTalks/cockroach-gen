// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) survive() tree.Survive {
	return u.val.(tree.Survive)
}

//line sql-gen.y:696
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12167

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1388,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	235, 216,
	493, 216,
	-2, 0,
	-1, 82,
	223, 1174,
	237, 1174,
	253, 359,
	378, 359,
	388, 956,
	422, 359,
	434, 956,
	477, 956,
	504, 359,
	530, 956,
	-2, 0,
	-1, 88,
	253, 363,
	-2, 0,
	-1, 89,
	130, 1388,
	230, 1388,
	515, 1388,
	516, 1388,
	-2, 0,
	-1, 105,
	147, 1359,
	166, 1359,
	179, 1359,
	233, 1359,
	266, 1359,
	330, 1359,
	340, 1359,
	510, 1359,
	-2, 1330,
	-1, 142,
	155, 829,
	252, 829,
	381, 798,
	439, 798,
	496, 829,
	498, 798,
	-2, 0,
	-1, 144,
	4, 1390,
	21, 1390,
	22, 1390,
	23, 1390,
	24, 1390,
	25, 1390,
	26, 1390,
	27, 1390,
	29, 1390,
	30, 1390,
	36, 1390,
	41, 1390,
	42, 1390,
	44, 1390,
	45, 1390,
	46, 1390,
	47, 1390,
	48, 1390,
	49, 1390,
	50, 1390,
	51, 1390,
	53, 1390,
	54, 1390,
	55, 1390,
	56, 1390,
	58, 1390,
	59, 1390,
	60, 1390,
	61, 1390,
	62, 1390,
	63, 1390,
	64, 1390,
	68, 1390,
	69, 1390,
	70, 1390,
	71, 1390,
	73, 1390,
	74, 1390,
	75, 1390,
	79, 1390,
	80, 1390,
	81, 1390,
	82, 1390,
	83, 1390,
	84, 1390,
	85, 1390,
	88, 1390,
	89, 1390,
	90, 1390,
	91, 1390,
	92, 1390,
	94, 1390,
	96, 1390,
	97, 1390,
	98, 1390,
	99, 1390,
	100, 1390,
	101, 1390,
	103, 1390,
	104, 1390,
	105, 1390,
	107, 1390,
	108, 1390,
	116, 1390,
	117, 1390,
	118, 1390,
	119, 1390,
	121, 1390,
	122, 1390,
	123, 1390,
	125, 1390,
	126, 1390,
	127, 1390,
	129, 1390,
	130, 1390,
	132, 1390,
	133, 1390,
	134, 1390,
	137, 1390,
	138, 1390,
	139, 1390,
	141, 1390,
	142, 1390,
	144, 1390,
	145, 1390,
	146, 1390,
	148, 1390,
	149, 1390,
	150, 1390,
	151, 1390,
	152, 1390,
	153, 1390,
	154, 1390,
	155, 1390,
	156, 1390,
	157, 1390,
	158, 1390,
	159, 1390,
	160, 1390,
	161, 1390,
	162, 1390,
	163, 1390,
	165, 1390,
	171, 1390,
	172, 1390,
	173, 1390,
	174, 1390,
	178, 1390,
	180, 1390,
	184, 1390,
	185, 1390,
	186, 1390,
	187, 1390,
	188, 1390,
	189, 1390,
	190, 1390,
	191, 1390,
	192, 1390,
	193, 1390,
	194, 1390,
	195, 1390,
	197, 1390,
	198, 1390,
	200, 1390,
	201, 1390,
	203, 1390,
	204, 1390,
	205, 1390,
	206, 1390,
	207, 1390,
	208, 1390,
	209, 1390,
	210, 1390,
	211, 1390,
	213, 1390,
	214, 1390,
	216, 1390,
	217, 1390,
	218, 1390,
	219, 1390,
	223, 1390,
	224, 1390,
	225, 1390,
	226, 1390,
	227, 1390,
	230, 1390,
	231, 1390,
	232, 1390,
	234, 1390,
	236, 1390,
	237, 1390,
	239, 1390,
	241, 1390,
	242, 1390,
	243, 1390,
	245, 1390,
	249, 1390,
	250, 1390,
	251, 1390,
	252, 1390,
	253, 1390,
	254, 1390,
	256, 1390,
	257, 1390,
	258, 1390,
	260, 1390,
	261, 1390,
	263, 1390,
	264, 1390,
	267, 1390,
	271, 1390,
	272, 1390,
	275, 1390,
	276, 1390,
	277, 1390,
	278, 1390,
	280, 1390,
	281, 1390,
	282, 1390,
	283, 1390,
	284, 1390,
	285, 1390,
	286, 1390,
	287, 1390,
	288, 1390,
	289, 1390,
	290, 1390,
	291, 1390,
	292, 1390,
	293, 1390,
	294, 1390,
	295, 1390,
	296, 1390,
	297, 1390,
	298, 1390,
	299, 1390,
	300, 1390,
	301, 1390,
	303, 1390,
	305, 1390,
	306, 1390,
	307, 1390,
	308, 1390,
	309, 1390,
	310, 1390,
	311, 1390,
	312, 1390,
	313, 1390,
	314, 1390,
	315, 1390,
	316, 1390,
	318, 1390,
	320, 1390,
	322, 1390,
	323, 1390,
	325, 1390,
	326, 1390,
	327, 1390,
	328, 1390,
	329, 1390,
	332, 1390,
	335, 1390,
	336, 1390,
	337, 1390,
	338, 1390,
	341, 1390,
	342, 1390,
	343, 1390,
	345, 1390,
	347, 1390,
	348, 1390,
	349, 1390,
	350, 1390,
	351, 1390,
	352, 1390,
	353, 1390,
	354, 1390,
	355, 1390,
	356, 1390,
	357, 1390,
	358, 1390,
	360, 1390,
	361, 1390,
	362, 1390,
	363, 1390,
	364, 1390,
	365, 1390,
	366, 1390,
	367, 1390,
	368, 1390,
	369, 1390,
	370, 1390,
	371, 1390,
	372, 1390,
	373, 1390,
	374, 1390,
	376, 1390,
	377, 1390,
	379, 1390,
	380, 1390,
	381, 1390,
	382, 1390,
	383, 1390,
	384, 1390,
	385, 1390,
	386, 1390,
	387, 1390,
	388, 1390,
	389, 1390,
	390, 1390,
	392, 1390,
	394, 1390,
	395, 1390,
	400, 1390,
	402, 1390,
	403, 1390,
	404, 1390,
	405, 1390,
	406, 1390,
	407, 1390,
	408, 1390,
	409, 1390,
	411, 1390,
	412, 1390,
	413, 1390,
	415, 1390,
	416, 1390,
	417, 1390,
	418, 1390,
	419, 1390,
	420, 1390,
	422, 1390,
	423, 1390,
	424, 1390,
	425, 1390,
	426, 1390,
	427, 1390,
	428, 1390,
	429, 1390,
	430, 1390,
	431, 1390,
	432, 1390,
	434, 1390,
	435, 1390,
	436, 1390,
	437, 1390,
	438, 1390,
	439, 1390,
	441, 1390,
	442, 1390,
	443, 1390,
	444, 1390,
	445, 1390,
	446, 1390,
	448, 1390,
	449, 1390,
	450, 1390,
	451, 1390,
	452, 1390,
	453, 1390,
	454, 1390,
	456, 1390,
	458, 1390,
	459, 1390,
	460, 1390,
	461, 1390,
	462, 1390,
	463, 1390,
	464, 1390,
	465, 1390,
	466, 1390,
	467, 1390,
	468, 1390,
	469, 1390,
	470, 1390,
	471, 1390,
	473, 1390,
	474, 1390,
	476, 1390,
	478, 1390,
	479, 1390,
	480, 1390,
	481, 1390,
	482, 1390,
	483, 1390,
	484, 1390,
	485, 1390,
	486, 1390,
	488, 1390,
	489, 1390,
	490, 1390,
	491, 1390,
	492, 1390,
	494, 1390,
	496, 1390,
	497, 1390,
	498, 1390,
	499, 1390,
	500, 1390,
	501, 1390,
	503, 1390,
	504, 1390,
	505, 1390,
	506, 1390,
	508, 1390,
	509, 1390,
	512, 1390,
	513, 1390,
	514, 1390,
	515, 1390,
	516, 1390,
	517, 1390,
	518, 1390,
	520, 1390,
	523, 1390,
	524, 1390,
	525, 1390,
	526, 1390,
	527, 1390,
	528, 1390,
	530, 1390,
	531, 1390,
	532, 1390,
	533, 1390,
	538, 1390,
	539, 1390,
	540, 1390,
	541, 1390,
	542, 1390,
	543, 1390,
	-2, 0,
	-1, 145,
	1, 1252,
	128, 1252,
	241, 1252,
	319, 1252,
	376, 1252,
	385, 1252,
	547, 1252,
	571, 1252,
	-2, 0,
	-1, 147,
	1, 1252,
	571, 1252,
	-2, 0,
	-1, 148,
	1, 1252,
	571, 1252,
	-2, 0,
	-1, 149,
	1, 1252,
	493, 1252,
	571, 1252,
	-2, 0,
	-1, 178,
	147, 1358,
	166, 1358,
	179, 1358,
	233, 1358,
	266, 1358,
	330, 1358,
	340, 1358,
	510, 1358,
	-2, 1333,
	-1, 219,
	4, 1397,
	5, 1397,
	6, 1397,
	7, 1397,
	8, 1397,
	9, 1397,
	10, 1397,
	21, 1397,
	22, 1397,
	23, 1397,
	24, 1397,
	25, 1397,
	26, 1397,
	27, 1397,
	29, 1397,
	30, 1397,
	36, 1397,
	37, 1397,
	41, 1397,
	42, 1397,
	43, 1397,
	44, 1397,
	45, 1397,
	46, 1397,
	47, 1397,
	48, 1397,
	49, 1397,
	50, 1397,
	51, 1397,
	53, 1397,
	54, 1397,
	55, 1397,
	56, 1397,
	58, 1397,
	59, 1397,
	60, 1397,
	61, 1397,
	62, 1397,
	63, 1397,
	64, 1397,
	65, 1397,
	66, 1397,
	67, 1397,
	68, 1397,
	69, 1397,
	70, 1397,
	71, 1397,
	73, 1397,
	74, 1397,
	75, 1397,
	77, 1397,
	79, 1397,
	80, 1397,
	81, 1397,
	82, 1397,
	83, 1397,
	84, 1397,
	85, 1397,
	88, 1397,
	89, 1397,
	90, 1397,
	91, 1397,
	92, 1397,
	94, 1397,
	96, 1397,
	97, 1397,
	98, 1397,
	99, 1397,
	100, 1397,
	101, 1397,
	103, 1397,
	104, 1397,
	105, 1397,
	106, 1397,
	107, 1397,
	108, 1397,
	109, 1397,
	110, 1397,
	111, 1397,
	112, 1397,
	113, 1397,
	114, 1397,
	115, 1397,
	116, 1397,
	117, 1397,
	118, 1397,
	119, 1397,
	120, 1397,
	121, 1397,
	122, 1397,
	123, 1397,
	124, 1397,
	125, 1397,
	126, 1397,
	127, 1397,
	129, 1397,
	130, 1397,
	132, 1397,
	133, 1397,
	134, 1397,
	137, 1397,
	138, 1397,
	139, 1397,
	141, 1397,
	142, 1397,
	144, 1397,
	145, 1397,
	146, 1397,
	148, 1397,
	149, 1397,
	150, 1397,
	151, 1397,
	152, 1397,
	153, 1397,
	154, 1397,
	155, 1397,
	156, 1397,
	157, 1397,
	158, 1397,
	159, 1397,
	160, 1397,
	161, 1397,
	162, 1397,
	163, 1397,
	164, 1397,
	165, 1397,
	171, 1397,
	172, 1397,
	173, 1397,
	174, 1397,
	178, 1397,
	180, 1397,
	183, 1397,
	184, 1397,
	185, 1397,
	186, 1397,
	187, 1397,
	188, 1397,
	189, 1397,
	190, 1397,
	191, 1397,
	192, 1397,
	193, 1397,
	194, 1397,
	195, 1397,
	197, 1397,
	198, 1397,
	200, 1397,
	201, 1397,
	203, 1397,
	204, 1397,
	205, 1397,
	206, 1397,
	207, 1397,
	208, 1397,
	209, 1397,
	210, 1397,
	211, 1397,
	212, 1397,
	213, 1397,
	214, 1397,
	216, 1397,
	217, 1397,
	218, 1397,
	219, 1397,
	223, 1397,
	224, 1397,
	225, 1397,
	226, 1397,
	227, 1397,
	229, 1397,
	230, 1397,
	231, 1397,
	232, 1397,
	234, 1397,
	236, 1397,
	237, 1397,
	238, 1397,
	239, 1397,
	240, 1397,
	241, 1397,
	242, 1397,
	243, 1397,
	244, 1397,
	245, 1397,
	249, 1397,
	250, 1397,
	251, 1397,
	252, 1397,
	253, 1397,
	254, 1397,
	256, 1397,
	257, 1397,
	258, 1397,
	260, 1397,
	261, 1397,
	262, 1397,
	263, 1397,
	264, 1397,
	265, 1397,
	267, 1397,
	271, 1397,
	272, 1397,
	273, 1397,
	274, 1397,
	275, 1397,
	276, 1397,
	277, 1397,
	278, 1397,
	280, 1397,
	281, 1397,
	282, 1397,
	283, 1397,
	284, 1397,
	285, 1397,
	286, 1397,
	287, 1397,
	288, 1397,
	289, 1397,
	290, 1397,
	291, 1397,
	292, 1397,
	293, 1397,
	294, 1397,
	295, 1397,
	296, 1397,
	297, 1397,
	298, 1397,
	299, 1397,
	300, 1397,
	301, 1397,
	303, 1397,
	304, 1397,
	305, 1397,
	306, 1397,
	307, 1397,
	308, 1397,
	309, 1397,
	310, 1397,
	311, 1397,
	312, 1397,
	313, 1397,
	314, 1397,
	315, 1397,
	316, 1397,
	317, 1397,
	318, 1397,
	319, 1397,
	320, 1397,
	321, 1397,
	322, 1397,
	323, 1397,
	324, 1397,
	325, 1397,
	326, 1397,
	327, 1397,
	328, 1397,
	329, 1397,
	332, 1397,
	336, 1397,
	337, 1397,
	338, 1397,
	341, 1397,
	342, 1397,
	343, 1397,
	344, 1397,
	345, 1397,
	346, 1397,
	347, 1397,
	348, 1397,
	349, 1397,
	350, 1397,
	351, 1397,
	352, 1397,
	353, 1397,
	354, 1397,
	355, 1397,
	356, 1397,
	357, 1397,
	358, 1397,
	360, 1397,
	361, 1397,
	362, 1397,
	363, 1397,
	364, 1397,
	365, 1397,
	366, 1397,
	367, 1397,
	368, 1397,
	369, 1397,
	370, 1397,
	371, 1397,
	372, 1397,
	373, 1397,
	374, 1397,
	376, 1397,
	377, 1397,
	379, 1397,
	380, 1397,
	381, 1397,
	382, 1397,
	383, 1397,
	384, 1397,
	385, 1397,
	386, 1397,
	387, 1397,
	388, 1397,
	389, 1397,
	390, 1397,
	392, 1397,
	394, 1397,
	395, 1397,
	400, 1397,
	402, 1397,
	403, 1397,
	404, 1397,
	405, 1397,
	406, 1397,
	407, 1397,
	408, 1397,
	409, 1397,
	411, 1397,
	412, 1397,
	413, 1397,
	414, 1397,
	415, 1397,
	416, 1397,
	417, 1397,
	418, 1397,
	419, 1397,
	420, 1397,
	422, 1397,
	423, 1397,
	424, 1397,
	425, 1397,
	426, 1397,
	427, 1397,
	428, 1397,
	429, 1397,
	430, 1397,
	431, 1397,
	432, 1397,
	434, 1397,
	435, 1397,
	436, 1397,
	437, 1397,
	438, 1397,
	439, 1397,
	440, 1397,
	441, 1397,
	442, 1397,
	443, 1397,
	444, 1397,
	445, 1397,
	446, 1397,
	447, 1397,
	448, 1397,
	449, 1397,
	450, 1397,
	451, 1397,
	452, 1397,
	453, 1397,
	454, 1397,
	456, 1397,
	458, 1397,
	459, 1397,
	460, 1397,
	461, 1397,
	462, 1397,
	463, 1397,
	464, 1397,
	465, 1397,
	466, 1397,
	467, 1397,
	468, 1397,
	469, 1397,
	470, 1397,
	471, 1397,
	473, 1397,
	474, 1397,
	475, 1397,
	476, 1397,
	478, 1397,
	479, 1397,
	480, 1397,
	481, 1397,
	482, 1397,
	483, 1397,
	484, 1397,
	485, 1397,
	486, 1397,
	488, 1397,
	489, 1397,
	490, 1397,
	491, 1397,
	492, 1397,
	494, 1397,
	496, 1397,
	497, 1397,
	498, 1397,
	499, 1397,
	500, 1397,
	501, 1397,
	502, 1397,
	503, 1397,
	504, 1397,
	505, 1397,
	506, 1397,
	508, 1397,
	509, 1397,
	511, 1397,
	512, 1397,
	513, 1397,
	514, 1397,
	515, 1397,
	516, 1397,
	517, 1397,
	518, 1397,
	519, 1397,
	520, 1397,
	523, 1397,
	524, 1397,
	525, 1397,
	526, 1397,
	527, 1397,
	528, 1397,
	530, 1397,
	531, 1397,
	532, 1397,
	533, 1397,
	538, 1397,
	539, 1397,
	540, 1397,
	541, 1397,
	542, 1397,
	543, 1397,
	544, 1397,
	552, 1397,
	559, 1397,
	560, 1397,
	561, 1397,
	568, 1397,
	572, 1397,
	-2, 0,
	-1, 686,
	182, 2146,
	493, 2146,
	551, 2146,
	570, 2146,
	-2, 0,
	-1, 687,
	182, 2246,
	493, 2246,
	551, 2246,
	570, 2246,
	-2, 0,
	-1, 688,
	182, 2133,
	493, 2133,
	551, 2133,
	570, 2133,
	-2, 0,
	-1, 690,
	182, 2373,
	493, 2373,
	551, 2373,
	570, 2373,
	-2, 0,
	-1, 692,
	182, 2410,
	493, 2410,
	551, 2410,
	570, 2410,
	-2, 0,
	-1, 699,
	182, 2272,
	493, 2272,
	551, 2272,
	570, 2272,
	-2, 637,
	-1, 731,
	570, 2082,
	573, 2082,
	-2, 889,
	-1, 732,
	570, 2084,
	573, 2084,
	-2, 890,
	-1, 733,
	570, 2083,
	573, 2083,
	-2, 891,
	-1, 734,
	573, 2016,
	-2, 892,
	-1, 757,
	179, 230,
	-2, 0,
	-1, 780,
	43, 2086,
	-2, 0,
	-1, 781,
	530, 1151,
	-2, 957,
	-1, 797,
	4, 1525,
	21, 1525,
	22, 1525,
	23, 1525,
	24, 1525,
	25, 1525,
	26, 1525,
	27, 1525,
	29, 1525,
	30, 1525,
	36, 1525,
	41, 1525,
	42, 1525,
	44, 1525,
	45, 1525,
	46, 1525,
	47, 1525,
	48, 1525,
	49, 1525,
	50, 1525,
	51, 1525,
	53, 1525,
	54, 1525,
	55, 1525,
	56, 1525,
	58, 1525,
	59, 1525,
	60, 1525,
	61, 1525,
	62, 1525,
	63, 1525,
	64, 1525,
	68, 1525,
	69, 1525,
	70, 1525,
	71, 1525,
	73, 1525,
	74, 1525,
	75, 1525,
	79, 1525,
	80, 1525,
	81, 1525,
	82, 1525,
	83, 1525,
	84, 1525,
	85, 1525,
	88, 1525,
	89, 1525,
	90, 1525,
	91, 1525,
	92, 1525,
	94, 1525,
	96, 1525,
	97, 1525,
	98, 1525,
	99, 1525,
	100, 1525,
	101, 1525,
	103, 1525,
	104, 1525,
	105, 1525,
	107, 1525,
	108, 1525,
	116, 1525,
	117, 1525,
	118, 1525,
	119, 1525,
	121, 1525,
	122, 1525,
	123, 1525,
	125, 1525,
	126, 1525,
	127, 1525,
	129, 1525,
	130, 1525,
	132, 1525,
	133, 1525,
	134, 1525,
	137, 1525,
	138, 1525,
	139, 1525,
	141, 1525,
	142, 1525,
	144, 1525,
	145, 1525,
	146, 1525,
	148, 1525,
	149, 1525,
	150, 1525,
	151, 1525,
	152, 1525,
	153, 1525,
	154, 1525,
	155, 1525,
	156, 1525,
	157, 1525,
	158, 1525,
	159, 1525,
	160, 1525,
	161, 1525,
	162, 1525,
	163, 1525,
	165, 1525,
	171, 1525,
	172, 1525,
	173, 1525,
	174, 1525,
	178, 1525,
	180, 1525,
	184, 1525,
	185, 1525,
	186, 1525,
	187, 1525,
	188, 1525,
	189, 1525,
	190, 1525,
	191, 1525,
	192, 1525,
	193, 1525,
	194, 1525,
	195, 1525,
	197, 1525,
	198, 1525,
	200, 1525,
	201, 1525,
	203, 1525,
	204, 1525,
	205, 1525,
	206, 1525,
	207, 1525,
	208, 1525,
	209, 1525,
	210, 1525,
	211, 1525,
	213, 1525,
	214, 1525,
	216, 1525,
	217, 1525,
	218, 1525,
	219, 1525,
	223, 1525,
	224, 1525,
	225, 1525,
	226, 1525,
	227, 1525,
	230, 1525,
	231, 1525,
	232, 1525,
	234, 1525,
	236, 1525,
	237, 1525,
	239, 1525,
	241, 1525,
	242, 1525,
	243, 1525,
	245, 1525,
	249, 1525,
	250, 1525,
	251, 1525,
	252, 1525,
	253, 1525,
	254, 1525,
	256, 1525,
	257, 1525,
	258, 1525,
	260, 1525,
	261, 1525,
	263, 1525,
	264, 1525,
	267, 1525,
	271, 1525,
	272, 1525,
	275, 1525,
	276, 1525,
	277, 1525,
	278, 1525,
	280, 1525,
	281, 1525,
	282, 1525,
	283, 1525,
	284, 1525,
	285, 1525,
	286, 1525,
	287, 1525,
	288, 1525,
	289, 1525,
	290, 1525,
	291, 1525,
	292, 1525,
	293, 1525,
	294, 1525,
	295, 1525,
	296, 1525,
	297, 1525,
	298, 1525,
	299, 1525,
	300, 1525,
	301, 1525,
	303, 1525,
	305, 1525,
	306, 1525,
	307, 1525,
	308, 1525,
	309, 1525,
	310, 1525,
	311, 1525,
	312, 1525,
	313, 1525,
	314, 1525,
	315, 1525,
	316, 1525,
	318, 1525,
	320, 1525,
	322, 1525,
	323, 1525,
	325, 1525,
	326, 1525,
	327, 1525,
	328, 1525,
	329, 1525,
	332, 1525,
	336, 1525,
	337, 1525,
	338, 1525,
	341, 1525,
	342, 1525,
	343, 1525,
	345, 1525,
	347, 1525,
	348, 1525,
	349, 1525,
	350, 1525,
	351, 1525,
	352, 1525,
	353, 1525,
	354, 1525,
	355, 1525,
	356, 1525,
	357, 1525,
	358, 1525,
	360, 1525,
	361, 1525,
	362, 1525,
	363, 1525,
	364, 1525,
	365, 1525,
	366, 1525,
	367, 1525,
	368, 1525,
	369, 1525,
	370, 1525,
	371, 1525,
	372, 1525,
	373, 1525,
	374, 1525,
	376, 1525,
	377, 1525,
	379, 1525,
	380, 1525,
	381, 1525,
	382, 1525,
	383, 1525,
	384, 1525,
	385, 1525,
	386, 1525,
	387, 1525,
	388, 1525,
	389, 1525,
	390, 1525,
	392, 1525,
	394, 1525,
	395, 1525,
	400, 1525,
	402, 1525,
	403, 1525,
	404, 1525,
	405, 1525,
	406, 1525,
	407, 1525,
	408, 1525,
	409, 1525,
	411, 1525,
	412, 1525,
	413, 1525,
	415, 1525,
	416, 1525,
	417, 1525,
	418, 1525,
	419, 1525,
	420, 1525,
	422, 1525,
	423, 1525,
	424, 1525,
	425, 1525,
	426, 1525,
	427, 1525,
	428, 1525,
	429, 1525,
	430, 1525,
	431, 1525,
	432, 1525,
	434, 1525,
	435, 1525,
	436, 1525,
	437, 1525,
	438, 1525,
	439, 1525,
	441, 1525,
	442, 1525,
	443, 1525,
	444, 1525,
	445, 1525,
	446, 1525,
	448, 1525,
	449, 1525,
	450, 1525,
	451, 1525,
	452, 1525,
	453, 1525,
	454, 1525,
	456, 1525,
	458, 1525,
	459, 1525,
	460, 1525,
	461, 1525,
	462, 1525,
	463, 1525,
	464, 1525,
	465, 1525,
	466, 1525,
	467, 1525,
	468, 1525,
	469, 1525,
	470, 1525,
	471, 1525,
	473, 1525,
	474, 1525,
	476, 1525,
	478, 1525,
	479, 1525,
	480, 1525,
	481, 1525,
	482, 1525,
	483, 1525,
	484, 1525,
	485, 1525,
	486, 1525,
	488, 1525,
	489, 1525,
	490, 1525,
	491, 1525,
	492, 1525,
	494, 1525,
	496, 1525,
	497, 1525,
	498, 1525,
	499, 1525,
	500, 1525,
	501, 1525,
	503, 1525,
	504, 1525,
	505, 1525,
	506, 1525,
	508, 1525,
	509, 1525,
	512, 1525,
	513, 1525,
	514, 1525,
	515, 1525,
	516, 1525,
	517, 1525,
	518, 1525,
	520, 1525,
	523, 1525,
	524, 1525,
	525, 1525,
	526, 1525,
	527, 1525,
	528, 1525,
	530, 1525,
	531, 1525,
	532, 1525,
	533, 1525,
	538, 1525,
	539, 1525,
	540, 1525,
	541, 1525,
	542, 1525,
	543, 1525,
	-2, 0,
	-1, 822,
	4, 1172,
	21, 1172,
	22, 1172,
	23, 1172,
	24, 1172,
	25, 1172,
	26, 1172,
	27, 1172,
	29, 1172,
	30, 1172,
	36, 1172,
	41, 1172,
	42, 1172,
	44, 1172,
	45, 1172,
	46, 1172,
	47, 1172,
	48, 1172,
	49, 1172,
	50, 1172,
	51, 1172,
	53, 1172,
	54, 1172,
	55, 1172,
	56, 1172,
	58, 1172,
	59, 1172,
	60, 1172,
	61, 1172,
	62, 1172,
	63, 1172,
	64, 1172,
	68, 1172,
	69, 1172,
	70, 1172,
	71, 1172,
	73, 1172,
	74, 1172,
	75, 1172,
	79, 1172,
	80, 1172,
	81, 1172,
	82, 1172,
	83, 1172,
	84, 1172,
	85, 1172,
	88, 1172,
	89, 1172,
	90, 1172,
	91, 1172,
	92, 1172,
	94, 1172,
	96, 1172,
	97, 1172,
	98, 1172,
	99, 1172,
	100, 1172,
	101, 1172,
	103, 1172,
	104, 1172,
	105, 1172,
	107, 1172,
	108, 1172,
	116, 1172,
	117, 1172,
	118, 1172,
	119, 1172,
	121, 1172,
	122, 1172,
	123, 1172,
	125, 1172,
	126, 1172,
	127, 1172,
	129, 1172,
	130, 1172,
	132, 1172,
	133, 1172,
	134, 1172,
	137, 1172,
	138, 1172,
	139, 1172,
	141, 1172,
	142, 1172,
	144, 1172,
	145, 1172,
	146, 1172,
	148, 1172,
	149, 1172,
	150, 1172,
	151, 1172,
	152, 1172,
	153, 1172,
	154, 1172,
	155, 1172,
	156, 1172,
	157, 1172,
	158, 1172,
	159, 1172,
	160, 1172,
	161, 1172,
	162, 1172,
	163, 1172,
	165, 1172,
	171, 1172,
	172, 1172,
	173, 1172,
	174, 1172,
	178, 1172,
	180, 1172,
	184, 1172,
	185, 1172,
	186, 1172,
	187, 1172,
	188, 1172,
	189, 1172,
	190, 1172,
	191, 1172,
	192, 1172,
	193, 1172,
	194, 1172,
	195, 1172,
	197, 1172,
	198, 1172,
	200, 1172,
	201, 1172,
	203, 1172,
	204, 1172,
	205, 1172,
	206, 1172,
	207, 1172,
	208, 1172,
	209, 1172,
	210, 1172,
	211, 1172,
	213, 1172,
	214, 1172,
	216, 1172,
	217, 1172,
	218, 1172,
	219, 1172,
	223, 1172,
	224, 1172,
	225, 1172,
	226, 1172,
	227, 1172,
	230, 1172,
	231, 1172,
	232, 1172,
	234, 1172,
	236, 1172,
	237, 1172,
	239, 1172,
	241, 1172,
	242, 1172,
	243, 1172,
	245, 1172,
	249, 1172,
	250, 1172,
	251, 1172,
	252, 1172,
	253, 1172,
	254, 1172,
	256, 1172,
	257, 1172,
	258, 1172,
	260, 1172,
	261, 1172,
	263, 1172,
	264, 1172,
	267, 1172,
	271, 1172,
	272, 1172,
	275, 1172,
	276, 1172,
	277, 1172,
	278, 1172,
	280, 1172,
	281, 1172,
	282, 1172,
	283, 1172,
	284, 1172,
	285, 1172,
	286, 1172,
	287, 1172,
	288, 1172,
	289, 1172,
	290, 1172,
	291, 1172,
	292, 1172,
	293, 1172,
	294, 1172,
	295, 1172,
	296, 1172,
	297, 1172,
	298, 1172,
	299, 1172,
	300, 1172,
	301, 1172,
	303, 1172,
	305, 1172,
	306, 1172,
	307, 1172,
	308, 1172,
	309, 1172,
	310, 1172,
	311, 1172,
	312, 1172,
	313, 1172,
	314, 1172,
	315, 1172,
	316, 1172,
	318, 1172,
	320, 1172,
	322, 1172,
	323, 1172,
	325, 1172,
	326, 1172,
	327, 1172,
	328, 1172,
	329, 1172,
	332, 1172,
	336, 1172,
	337, 1172,
	338, 1172,
	341, 1172,
	342, 1172,
	343, 1172,
	345, 1172,
	347, 1172,
	348, 1172,
	349, 1172,
	350, 1172,
	351, 1172,
	352, 1172,
	353, 1172,
	354, 1172,
	355, 1172,
	356, 1172,
	357, 1172,
	358, 1172,
	360, 1172,
	361, 1172,
	362, 1172,
	363, 1172,
	364, 1172,
	365, 1172,
	366, 1172,
	367, 1172,
	368, 1172,
	369, 1172,
	370, 1172,
	371, 1172,
	372, 1172,
	373, 1172,
	374, 1172,
	376, 1172,
	377, 1172,
	379, 1172,
	380, 1172,
	381, 1172,
	382, 1172,
	383, 1172,
	384, 1172,
	385, 1172,
	386, 1172,
	387, 1172,
	388, 1172,
	389, 1172,
	390, 1172,
	392, 1172,
	394, 1172,
	395, 1172,
	400, 1172,
	402, 1172,
	403, 1172,
	404, 1172,
	405, 1172,
	406, 1172,
	407, 1172,
	408, 1172,
	409, 1172,
	411, 1172,
	412, 1172,
	413, 1172,
	415, 1172,
	416, 1172,
	417, 1172,
	418, 1172,
	419, 1172,
	420, 1172,
	422, 1172,
	423, 1172,
	424, 1172,
	425, 1172,
	426, 1172,
	427, 1172,
	428, 1172,
	429, 1172,
	430, 1172,
	431, 1172,
	432, 1172,
	434, 1172,
	435, 1172,
	436, 1172,
	437, 1172,
	438, 1172,
	439, 1172,
	441, 1172,
	442, 1172,
	443, 1172,
	444, 1172,
	445, 1172,
	446, 1172,
	448, 1172,
	449, 1172,
	450, 1172,
	451, 1172,
	452, 1172,
	453, 1172,
	454, 1172,
	456, 1172,
	458, 1172,
	459, 1172,
	460, 1172,
	461, 1172,
	462, 1172,
	463, 1172,
	464, 1172,
	465, 1172,
	466, 1172,
	467, 1172,
	468, 1172,
	469, 1172,
	470, 1172,
	471, 1172,
	473, 1172,
	474, 1172,
	476, 1172,
	478, 1172,
	479, 1172,
	480, 1172,
	481, 1172,
	482, 1172,
	483, 1172,
	484, 1172,
	485, 1172,
	486, 1172,
	488, 1172,
	489, 1172,
	490, 1172,
	491, 1172,
	492, 1172,
	494, 1172,
	496, 1172,
	497, 1172,
	498, 1172,
	499, 1172,
	500, 1172,
	501, 1172,
	503, 1172,
	504, 1172,
	505, 1172,
	506, 1172,
	508, 1172,
	509, 1172,
	512, 1172,
	513, 1172,
	514, 1172,
	515, 1172,
	516, 1172,
	517, 1172,
	518, 1172,
	520, 1172,
	523, 1172,
	524, 1172,
	525, 1172,
	526, 1172,
	527, 1172,
	528, 1172,
	530, 1172,
	531, 1172,
	532, 1172,
	533, 1172,
	538, 1172,
	539, 1172,
	540, 1172,
	541, 1172,
	542, 1172,
	543, 1172,
	-2, 0,
	-1, 904,
	381, 799,
	439, 799,
	498, 799,
	-2, 0,
	-1, 905,
	381, 798,
	439, 798,
	498, 798,
	-2, 740,
	-1, 909,
	1, 843,
	567, 843,
	569, 843,
	571, 843,
	-2, 0,
	-1, 910,
	1, 775,
	567, 775,
	569, 775,
	571, 775,
	-2, 0,
	-1, 911,
	1, 777,
	567, 777,
	569, 777,
	571, 777,
	-2, 0,
	-1, 912,
	1, 888,
	179, 888,
	567, 888,
	569, 888,
	571, 888,
	-2, 0,
	-1, 920,
	1, 802,
	567, 802,
	569, 802,
	571, 802,
	-2, 0,
	-1, 926,
	1, 843,
	567, 843,
	569, 843,
	571, 843,
	-2, 0,
	-1, 927,
	1, 845,
	567, 845,
	569, 845,
	571, 845,
	-2, 0,
	-1, 928,
	1, 848,
	567, 848,
	569, 848,
	571, 848,
	-2, 0,
	-1, 934,
	1, 865,
	567, 865,
	569, 865,
	571, 865,
	-2, 0,
	-1, 935,
	1, 867,
	567, 867,
	569, 867,
	571, 867,
	-2, 0,
	-1, 985,
	166, 1401,
	179, 1401,
	266, 1401,
	330, 1401,
	-2, 1337,
	-1, 1000,
	166, 1400,
	179, 1400,
	266, 1400,
	330, 1400,
	-2, 1334,
	-1, 1026,
	570, 2081,
	-2, 645,
	-1, 1054,
	5, 2073,
	568, 2071,
	-2, 2062,
	-1, 1062,
	5, 2094,
	568, 2091,
	-2, 2082,
	-1, 1063,
	5, 2095,
	568, 2092,
	-2, 2083,
	-1, 1071,
	570, 2079,
	-2, 2061,
	-1, 1072,
	568, 2492,
	-2, 2080,
	-1, 1095,
	568, 2491,
	-2, 2096,
	-1, 1096,
	5, 1600,
	-2, 2462,
	-1, 1097,
	5, 1601,
	-2, 2463,
	-1, 1098,
	5, 1602,
	-2, 2477,
	-1, 1099,
	5, 1603,
	-2, 2441,
	-1, 1100,
	5, 1604,
	-2, 2475,
	-1, 1101,
	5, 1612,
	-2, 2454,
	-1, 1102,
	5, 1599,
	-2, 2450,
	-1, 1103,
	5, 1599,
	-2, 2449,
	-1, 1104,
	5, 1599,
	-2, 2468,
	-1, 1105,
	5, 1610,
	-2, 2443,
	-1, 1106,
	5, 1615,
	-2, 2442,
	-1, 1107,
	5, 1617,
	-2, 2487,
	-1, 1110,
	5, 1639,
	-2, 2480,
	-1, 1111,
	5, 1631,
	-2, 2481,
	-1, 1112,
	5, 1639,
	-2, 2482,
	-1, 1113,
	5, 1635,
	-2, 2483,
	-1, 1114,
	5, 1585,
	-2, 2455,
	-1, 1115,
	5, 1586,
	-2, 2456,
	-1, 1116,
	5, 1587,
	-2, 2444,
	-1, 1144,
	5, 1622,
	-2, 2488,
	-1, 1145,
	5, 1623,
	-2, 2478,
	-1, 1146,
	5, 1624,
	531, 1624,
	-2, 2445,
	-1, 1147,
	5, 1625,
	531, 1625,
	-2, 2446,
	-1, 1184,
	568, 2091,
	-2, 2082,
	-1, 1185,
	568, 2092,
	-2, 2083,
	-1, 1218,
	182, 2410,
	493, 2410,
	551, 2410,
	570, 2410,
	-2, 0,
	-1, 1221,
	1, 623,
	571, 623,
	-2, 1260,
	-1, 1350,
	402, 2057,
	441, 2057,
	561, 2057,
	-2, 2054,
	-1, 1362,
	572, 2057,
	-2, 2058,
	-1, 1369,
	1, 1148,
	567, 1148,
	569, 1148,
	571, 1148,
	-2, 1386,
	-1, 1425,
	388, 956,
	530, 956,
	-2, 358,
	-1, 1445,
	43, 2085,
	-2, 2055,
	-1, 1450,
	1, 1148,
	567, 1148,
	569, 1148,
	571, 1148,
	-2, 1386,
	-1, 1457,
	4, 1172,
	21, 1172,
	22, 1172,
	23, 1172,
	24, 1172,
	25, 1172,
	26, 1172,
	27, 1172,
	29, 1172,
	30, 1172,
	36, 1172,
	41, 1172,
	42, 1172,
	44, 1172,
	45, 1172,
	46, 1172,
	47, 1172,
	48, 1172,
	49, 1172,
	50, 1172,
	51, 1172,
	53, 1172,
	54, 1172,
	55, 1172,
	56, 1172,
	58, 1172,
	59, 1172,
	60, 1172,
	61, 1172,
	62, 1172,
	63, 1172,
	64, 1172,
	68, 1172,
	69, 1172,
	70, 1172,
	71, 1172,
	73, 1172,
	74, 1172,
	75, 1172,
	79, 1172,
	80, 1172,
	81, 1172,
	82, 1172,
	83, 1172,
	84, 1172,
	85, 1172,
	88, 1172,
	89, 1172,
	90, 1172,
	91, 1172,
	92, 1172,
	94, 1172,
	96, 1172,
	97, 1172,
	98, 1172,
	99, 1172,
	100, 1172,
	101, 1172,
	103, 1172,
	104, 1172,
	105, 1172,
	107, 1172,
	108, 1172,
	116, 1172,
	117, 1172,
	118, 1172,
	119, 1172,
	121, 1172,
	122, 1172,
	123, 1172,
	125, 1172,
	126, 1172,
	127, 1172,
	129, 1172,
	130, 1172,
	132, 1172,
	133, 1172,
	134, 1172,
	137, 1172,
	138, 1172,
	139, 1172,
	141, 1172,
	142, 1172,
	144, 1172,
	145, 1172,
	146, 1172,
	148, 1172,
	149, 1172,
	150, 1172,
	151, 1172,
	152, 1172,
	153, 1172,
	154, 1172,
	155, 1172,
	156, 1172,
	157, 1172,
	158, 1172,
	159, 1172,
	160, 1172,
	161, 1172,
	162, 1172,
	163, 1172,
	171, 1172,
	172, 1172,
	173, 1172,
	174, 1172,
	178, 1172,
	180, 1172,
	184, 1172,
	185, 1172,
	186, 1172,
	187, 1172,
	188, 1172,
	189, 1172,
	190, 1172,
	191, 1172,
	192, 1172,
	193, 1172,
	194, 1172,
	195, 1172,
	197, 1172,
	198, 1172,
	200, 1172,
	201, 1172,
	203, 1172,
	204, 1172,
	205, 1172,
	206, 1172,
	207, 1172,
	208, 1172,
	209, 1172,
	210, 1172,
	211, 1172,
	213, 1172,
	214, 1172,
	216, 1172,
	217, 1172,
	218, 1172,
	219, 1172,
	224, 1172,
	225, 1172,
	226, 1172,
	227, 1172,
	230, 1172,
	231, 1172,
	232, 1172,
	234, 1172,
	236, 1172,
	237, 1172,
	239, 1172,
	241, 1172,
	242, 1172,
	243, 1172,
	245, 1172,
	249, 1172,
	250, 1172,
	251, 1172,
	252, 1172,
	253, 1172,
	254, 1172,
	256, 1172,
	257, 1172,
	258, 1172,
	260, 1172,
	261, 1172,
	263, 1172,
	264, 1172,
	267, 1172,
	271, 1172,
	272, 1172,
	275, 1172,
	276, 1172,
	277, 1172,
	278, 1172,
	280, 1172,
	281, 1172,
	282, 1172,
	283, 1172,
	284, 1172,
	285, 1172,
	286, 1172,
	287, 1172,
	288, 1172,
	289, 1172,
	290, 1172,
	291, 1172,
	292, 1172,
	293, 1172,
	294, 1172,
	295, 1172,
	296, 1172,
	297, 1172,
	298, 1172,
	299, 1172,
	300, 1172,
	301, 1172,
	303, 1172,
	305, 1172,
	306, 1172,
	307, 1172,
	308, 1172,
	309, 1172,
	310, 1172,
	311, 1172,
	312, 1172,
	313, 1172,
	314, 1172,
	315, 1172,
	316, 1172,
	318, 1172,
	322, 1172,
	323, 1172,
	325, 1172,
	326, 1172,
	327, 1172,
	328, 1172,
	329, 1172,
	332, 1172,
	334, 1172,
	336, 1172,
	337, 1172,
	338, 1172,
	341, 1172,
	342, 1172,
	343, 1172,
	345, 1172,
	347, 1172,
	348, 1172,
	349, 1172,
	350, 1172,
	351, 1172,
	352, 1172,
	353, 1172,
	354, 1172,
	355, 1172,
	356, 1172,
	357, 1172,
	358, 1172,
	360, 1172,
	361, 1172,
	362, 1172,
	363, 1172,
	364, 1172,
	365, 1172,
	366, 1172,
	367, 1172,
	368, 1172,
	369, 1172,
	370, 1172,
	371, 1172,
	372, 1172,
	373, 1172,
	374, 1172,
	376, 1172,
	377, 1172,
	379, 1172,
	380, 1172,
	381, 1172,
	382, 1172,
	383, 1172,
	384, 1172,
	385, 1172,
	386, 1172,
	387, 1172,
	388, 1172,
	389, 1172,
	390, 1172,
	392, 1172,
	394, 1172,
	395, 1172,
	400, 1172,
	402, 1172,
	403, 1172,
	404, 1172,
	405, 1172,
	406, 1172,
	407, 1172,
	408, 1172,
	409, 1172,
	411, 1172,
	412, 1172,
	413, 1172,
	415, 1172,
	416, 1172,
	417, 1172,
	418, 1172,
	419, 1172,
	420, 1172,
	422, 1172,
	423, 1172,
	424, 1172,
	425, 1172,
	426, 1172,
	427, 1172,
	428, 1172,
	429, 1172,
	430, 1172,
	431, 1172,
	432, 1172,
	434, 1172,
	435, 1172,
	436, 1172,
	437, 1172,
	438, 1172,
	439, 1172,
	441, 1172,
	442, 1172,
	443, 1172,
	444, 1172,
	445, 1172,
	446, 1172,
	448, 1172,
	449, 1172,
	450, 1172,
	451, 1172,
	452, 1172,
	453, 1172,
	454, 1172,
	456, 1172,
	458, 1172,
	459, 1172,
	460, 1172,
	461, 1172,
	462, 1172,
	463, 1172,
	464, 1172,
	465, 1172,
	466, 1172,
	467, 1172,
	468, 1172,
	469, 1172,
	470, 1172,
	471, 1172,
	473, 1172,
	474, 1172,
	476, 1172,
	478, 1172,
	479, 1172,
	480, 1172,
	481, 1172,
	482, 1172,
	483, 1172,
	484, 1172,
	485, 1172,
	486, 1172,
	488, 1172,
	489, 1172,
	490, 1172,
	491, 1172,
	492, 1172,
	494, 1172,
	496, 1172,
	497, 1172,
	498, 1172,
	499, 1172,
	500, 1172,
	501, 1172,
	503, 1172,
	504, 1172,
	505, 1172,
	506, 1172,
	508, 1172,
	509, 1172,
	512, 1172,
	513, 1172,
	514, 1172,
	515, 1172,
	516, 1172,
	517, 1172,
	518, 1172,
	520, 1172,
	523, 1172,
	524, 1172,
	525, 1172,
	526, 1172,
	527, 1172,
	528, 1172,
	530, 1172,
	531, 1172,
	532, 1172,
	533, 1172,
	538, 1172,
	539, 1172,
	540, 1172,
	541, 1172,
	542, 1172,
	543, 1172,
	-2, 0,
	-1, 1531,
	1, 496,
	567, 496,
	569, 496,
	571, 496,
	-2, 1357,
	-1, 1534,
	4, 2486,
	11, 2486,
	12, 2486,
	14, 2486,
	15, 2486,
	16, 2486,
	17, 2486,
	18, 2486,
	19, 2486,
	21, 2486,
	22, 2486,
	23, 2486,
	24, 2486,
	25, 2486,
	26, 2486,
	27, 2486,
	29, 2486,
	30, 2486,
	33, 2486,
	34, 2486,
	36, 2486,
	38, 2486,
	41, 2486,
	42, 2486,
	44, 2486,
	45, 2486,
	46, 2486,
	47, 2486,
	48, 2486,
	49, 2486,
	50, 2486,
	51, 2486,
	53, 2486,
	54, 2486,
	55, 2486,
	56, 2486,
	58, 2486,
	59, 2486,
	60, 2486,
	61, 2486,
	62, 2486,
	63, 2486,
	64, 2486,
	68, 2486,
	69, 2486,
	70, 2486,
	71, 2486,
	73, 2486,
	74, 2486,
	75, 2486,
	76, 2486,
	79, 2486,
	80, 2486,
	81, 2486,
	82, 2486,
	83, 2486,
	84, 2486,
	85, 2486,
	86, 2486,
	88, 2486,
	89, 2486,
	90, 2486,
	91, 2486,
	92, 2486,
	94, 2486,
	95, 2486,
	96, 2486,
	97, 2486,
	98, 2486,
	99, 2486,
	100, 2486,
	101, 2486,
	103, 2486,
	104, 2486,
	105, 2486,
	106, 2486,
	107, 2486,
	108, 2486,
	116, 2486,
	117, 2486,
	118, 2486,
	119, 2486,
	121, 2486,
	122, 2486,
	123, 2486,
	125, 2486,
	126, 2486,
	127, 2486,
	129, 2486,
	130, 2486,
	132, 2486,
	133, 2486,
	134, 2486,
	137, 2486,
	138, 2486,
	139, 2486,
	141, 2486,
	142, 2486,
	144, 2486,
	145, 2486,
	146, 2486,
	148, 2486,
	149, 2486,
	150, 2486,
	151, 2486,
	152, 2486,
	153, 2486,
	154, 2486,
	155, 2486,
	156, 2486,
	157, 2486,
	158, 2486,
	159, 2486,
	160, 2486,
	161, 2486,
	162, 2486,
	163, 2486,
	167, 2486,
	168, 2486,
	169, 2486,
	170, 2486,
	171, 2486,
	172, 2486,
	173, 2486,
	174, 2486,
	177, 2486,
	178, 2486,
	180, 2486,
	183, 2486,
	184, 2486,
	185, 2486,
	186, 2486,
	187, 2486,
	188, 2486,
	189, 2486,
	190, 2486,
	191, 2486,
	192, 2486,
	193, 2486,
	194, 2486,
	195, 2486,
	197, 2486,
	198, 2486,
	200, 2486,
	201, 2486,
	203, 2486,
	204, 2486,
	205, 2486,
	206, 2486,
	207, 2486,
	208, 2486,
	209, 2486,
	210, 2486,
	211, 2486,
	212, 2486,
	213, 2486,
	214, 2486,
	215, 2486,
	216, 2486,
	217, 2486,
	218, 2486,
	219, 2486,
	221, 2486,
	222, 2486,
	224, 2486,
	225, 2486,
	226, 2486,
	227, 2486,
	229, 2486,
	230, 2486,
	231, 2486,
	232, 2486,
	234, 2486,
	236, 2486,
	237, 2486,
	238, 2486,
	239, 2486,
	240, 2486,
	241, 2486,
	242, 2486,
	243, 2486,
	244, 2486,
	245, 2486,
	247, 2486,
	248, 2486,
	249, 2486,
	250, 2486,
	251, 2486,
	252, 2486,
	253, 2486,
	254, 2486,
	256, 2486,
	257, 2486,
	258, 2486,
	260, 2486,
	261, 2486,
	262, 2486,
	263, 2486,
	264, 2486,
	265, 2486,
	267, 2486,
	271, 2486,
	272, 2486,
	275, 2486,
	276, 2486,
	277, 2486,
	278, 2486,
	279, 2486,
	280, 2486,
	281, 2486,
	282, 2486,
	283, 2486,
	284, 2486,
	285, 2486,
	286, 2486,
	287, 2486,
	288, 2486,
	289, 2486,
	290, 2486,
	291, 2486,
	292, 2486,
	293, 2486,
	294, 2486,
	295, 2486,
	296, 2486,
	297, 2486,
	298, 2486,
	299, 2486,
	300, 2486,
	301, 2486,
	303, 2486,
	304, 2486,
	305, 2486,
	306, 2486,
	307, 2486,
	308, 2486,
	309, 2486,
	310, 2486,
	311, 2486,
	312, 2486,
	313, 2486,
	314, 2486,
	315, 2486,
	316, 2486,
	318, 2486,
	321, 2486,
	322, 2486,
	323, 2486,
	325, 2486,
	326, 2486,
	327, 2486,
	328, 2486,
	329, 2486,
	332, 2486,
	336, 2486,
	337, 2486,
	338, 2486,
	339, 2486,
	341, 2486,
	342, 2486,
	343, 2486,
	345, 2486,
	347, 2486,
	348, 2486,
	349, 2486,
	350, 2486,
	351, 2486,
	352, 2486,
	353, 2486,
	354, 2486,
	355, 2486,
	356, 2486,
	357, 2486,
	358, 2486,
	360, 2486,
	361, 2486,
	362, 2486,
	363, 2486,
	364, 2486,
	365, 2486,
	366, 2486,
	367, 2486,
	368, 2486,
	369, 2486,
	370, 2486,
	371, 2486,
	372, 2486,
	373, 2486,
	374, 2486,
	376, 2486,
	377, 2486,
	379, 2486,
	380, 2486,
	381, 2486,
	382, 2486,
	383, 2486,
	384, 2486,
	385, 2486,
	386, 2486,
	387, 2486,
	388, 2486,
	389, 2486,
	390, 2486,
	392, 2486,
	394, 2486,
	395, 2486,
	400, 2486,
	401, 2486,
	402, 2486,
	403, 2486,
	404, 2486,
	405, 2486,
	406, 2486,
	407, 2486,
	408, 2486,
	409, 2486,
	411, 2486,
	412, 2486,
	413, 2486,
	414, 2486,
	415, 2486,
	416, 2486,
	417, 2486,
	418, 2486,
	419, 2486,
	420, 2486,
	421, 2486,
	422, 2486,
	423, 2486,
	424, 2486,
	425, 2486,
	426, 2486,
	427, 2486,
	428, 2486,
	429, 2486,
	430, 2486,
	431, 2486,
	432, 2486,
	434, 2486,
	435, 2486,
	436, 2486,
	437, 2486,
	438, 2486,
	439, 2486,
	441, 2486,
	442, 2486,
	443, 2486,
	444, 2486,
	445, 2486,
	446, 2486,
	447, 2486,
	448, 2486,
	449, 2486,
	450, 2486,
	451, 2486,
	452, 2486,
	453, 2486,
	454, 2486,
	456, 2486,
	458, 2486,
	459, 2486,
	460, 2486,
	461, 2486,
	462, 2486,
	463, 2486,
	464, 2486,
	465, 2486,
	466, 2486,
	467, 2486,
	468, 2486,
	469, 2486,
	470, 2486,
	471, 2486,
	473, 2486,
	474, 2486,
	476, 2486,
	478, 2486,
	479, 2486,
	480, 2486,
	481, 2486,
	482, 2486,
	483, 2486,
	484, 2486,
	485, 2486,
	486, 2486,
	488, 2486,
	489, 2486,
	490, 2486,
	491, 2486,
	492, 2486,
	494, 2486,
	496, 2486,
	497, 2486,
	498, 2486,
	499, 2486,
	500, 2486,
	501, 2486,
	503, 2486,
	504, 2486,
	505, 2486,
	506, 2486,
	508, 2486,
	509, 2486,
	512, 2486,
	513, 2486,
	514, 2486,
	515, 2486,
	516, 2486,
	517, 2486,
	518, 2486,
	520, 2486,
	523, 2486,
	524, 2486,
	525, 2486,
	526, 2486,
	527, 2486,
	528, 2486,
	530, 2486,
	531, 2486,
	532, 2486,
	533, 2486,
	538, 2486,
	539, 2486,
	540, 2486,
	541, 2486,
	542, 2486,
	543, 2486,
	544, 2486,
	546, 2486,
	549, 2486,
	550, 2486,
	551, 2486,
	552, 2486,
	553, 2486,
	554, 2486,
	556, 2486,
	557, 2486,
	558, 2486,
	559, 2486,
	560, 2486,
	561, 2486,
	562, 2486,
	563, 2486,
	564, 2486,
	566, 2486,
	569, 2486,
	570, 2486,
	572, 2486,
	573, 2486,
	-2, 0,
	-1, 1539,
	182, 2373,
	493, 2373,
	551, 2373,
	570, 2373,
	-2, 0,
	-1, 1588,
	381, 799,
	439, 799,
	498, 799,
	-2, 0,
	-1, 1614,
	1, 794,
	567, 794,
	569, 794,
	571, 794,
	-2, 0,
	-1, 1615,
	1, 830,
	567, 830,
	569, 830,
	571, 830,
	-2, 0,
	-1, 1616,
	1, 838,
	567, 838,
	569, 838,
	571, 838,
	-2, 0,
	-1, 1617,
	1, 801,
	567, 801,
	569, 801,
	571, 801,
	-2, 0,
	-1, 1619,
	1, 805,
	567, 805,
	569, 805,
	571, 805,
	-2, 0,
	-1, 1625,
	1, 812,
	567, 812,
	569, 812,
	571, 812,
	-2, 0,
	-1, 1653,
	1, 2432,
	567, 2432,
	569, 2432,
	570, 2432,
	571, 2432,
	-2, 863,
	-1, 1654,
	1, 2370,
	567, 2370,
	569, 2370,
	570, 2370,
	571, 2370,
	-2, 864,
	-1, 1670,
	1, 1255,
	571, 1255,
	-2, 1260,
	-1, 1673,
	166, 1400,
	179, 1400,
	266, 1400,
	330, 1400,
	-2, 1338,
	-1, 1767,
	147, 1359,
	166, 1359,
	179, 1359,
	233, 1359,
	266, 1359,
	330, 1359,
	340, 1359,
	510, 1359,
	-2, 1800,
	-1, 1827,
	569, 1950,
	-2, 0,
	-1, 1862,
	147, 1359,
	166, 1359,
	179, 1359,
	233, 1359,
	266, 1359,
	330, 1359,
	340, 1359,
	510, 1359,
	-2, 1487,
	-1, 1911,
	568, 1627,
	-2, 1615,
	-1, 1954,
	1, 625,
	571, 625,
	-2, 1260,
	-1, 2072,
	215, 231,
	-2, 2090,
	-1, 2073,
	215, 232,
	-2, 274,
	-1, 2201,
	1, 796,
	567, 796,
	569, 796,
	571, 796,
	-2, 0,
	-1, 2202,
	1, 832,
	567, 832,
	569, 832,
	571, 832,
	-2, 0,
	-1, 2203,
	1, 840,
	567, 840,
	569, 840,
	571, 840,
	-2, 0,
	-1, 2236,
	1, 814,
	567, 814,
	569, 814,
	571, 814,
	-2, 0,
	-1, 2283,
	419, 1427,
	420, 1427,
	-2, 1660,
	-1, 2314,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1680,
	-1, 2315,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1681,
	-1, 2316,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1682,
	-1, 2317,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1683,
	-1, 2318,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1684,
	-1, 2319,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1685,
	-1, 2320,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1686,
	-1, 2321,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1687,
	-1, 2333,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1699,
	-1, 2334,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1700,
	-1, 2335,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1701,
	-1, 2338,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1706,
	-1, 2344,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1710,
	-1, 2346,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1718,
	-1, 2347,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1719,
	-1, 2348,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1720,
	-1, 2349,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1721,
	-1, 2485,
	5, 2094,
	182, 1961,
	568, 2091,
	-2, 2082,
	-1, 2486,
	182, 1962,
	-2, 2437,
	-1, 2487,
	182, 1963,
	-2, 2271,
	-1, 2488,
	182, 1964,
	-2, 2162,
	-1, 2489,
	182, 1965,
	-2, 2213,
	-1, 2490,
	182, 1966,
	-2, 2256,
	-1, 2491,
	182, 1967,
	-2, 2368,
	-1, 2492,
	182, 1968,
	-2, 1783,
	-1, 2561,
	1, 1488,
	2, 1488,
	106, 1488,
	147, 1488,
	166, 1488,
	179, 1488,
	183, 1488,
	199, 1488,
	202, 1488,
	229, 1488,
	233, 1488,
	244, 1488,
	262, 1488,
	266, 1488,
	304, 1488,
	330, 1488,
	334, 1488,
	340, 1488,
	410, 1488,
	414, 1488,
	510, 1488,
	521, 1488,
	535, 1488,
	536, 1488,
	537, 1488,
	547, 1488,
	567, 1488,
	569, 1488,
	571, 1488,
	573, 1488,
	-2, 1487,
	-1, 2574,
	568, 2063,
	-2, 2077,
	-1, 2576,
	53, 1386,
	132, 1386,
	-2, 290,
	-1, 2601,
	568, 1626,
	-2, 1616,
	-1, 2749,
	1, 1148,
	567, 1148,
	569, 1148,
	571, 1148,
	-2, 1386,
	-1, 2926,
	335, 1430,
	-2, 2476,
	-1, 2927,
	335, 1431,
	-2, 2354,
	-1, 2931,
	419, 2027,
	420, 2027,
	-2, 1781,
	-1, 2932,
	419, 2031,
	420, 2031,
	-2, 1782,
	-1, 2933,
	419, 2028,
	420, 2028,
	-2, 1781,
	-1, 2934,
	419, 2032,
	420, 2032,
	-2, 1782,
	-1, 2947,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1708,
	-1, 2948,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1712,
	-1, 2954,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1714,
	-1, 3184,
	1, 622,
	567, 622,
	569, 622,
	571, 622,
	-2, 1260,
	-1, 3321,
	1, 1148,
	567, 1148,
	569, 1148,
	571, 1148,
	-2, 1386,
	-1, 3431,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1716,
	-1, 3438,
	238, 0,
	240, 0,
	321, 0,
	-2, 1735,
	-1, 3505,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1764,
	-1, 3506,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1765,
	-1, 3507,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1766,
	-1, 3511,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1770,
	-1, 3512,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1771,
	-1, 3513,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1772,
	-1, 3559,
	568, 2064,
	-2, 2078,
	-1, 3596,
	570, 2079,
	-2, 1182,
	-1, 3700,
	570, 2593,
	-2, 1314,
	-1, 3758,
	238, 0,
	240, 0,
	321, 0,
	-2, 1736,
	-1, 3761,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1739,
	-1, 3762,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1741,
	-1, 3978,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1740,
	-1, 3979,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1742,
	-1, 3990,
	238, 0,
	-2, 1773,
	-1, 4148,
	238, 0,
	-2, 1774,
	-1, 4313,
	50, 0,
	212, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 2440,
}

const sqlPrivate = 57344

const sqlLast = 115797

var sqlAct = [...]int{

	254, 2811, 4030, 4176, 2841, 3105, 4295, 4312, 4198, 4027,
	4194, 3305, 3306, 4427, 1389, 4323, 4074, 4268, 4215, 4265,
	4284, 4250, 3592, 4324, 4015, 2069, 4325, 3741, 4081, 2680,
	4101, 3470, 1188, 4152, 4311, 4375, 3333, 3935, 3930, 3902,
	1010, 3884, 3999, 2293, 3967, 3692, 3202, 4090, 1522, 2179,
	3338, 3634, 3845, 3916, 3423, 3828, 4115, 1898, 1518, 3940,
	3331, 3668, 3301, 1554, 1001, 2361, 2301, 3652, 2517, 1682,
	1372, 3291, 733, 1366, 3654, 2009, 1868, 3593, 3995, 2850,
	697, 3386, 2940, 2155, 2639, 2294, 1254, 2115, 2863, 3388,
	2800, 2782, 1899, 2852, 3148, 3562, 1352, 733, 2772, 3120,
	3088, 3128, 1054, 4, 3797, 2177, 2797, 1347, 3740, 3111,
	2843, 2849, 2860, 2812, 3109, 1177, 2170, 836, 2795, 2712,
	2019, 1837, 38, 2641, 2063, 1596, 2554, 3530, 4153, 2064,
	1009, 169, 2403, 2374, 2298, 1775, 3087, 1813, 1355, 2556,
	1443, 2153, 2726, 1553, 248, 2049, 728, 2042, 2783, 2058,
	1061, 1498, 1237, 4195, 104, 2679, 247, 1946, 1058, 1670,
	2859, 1990, 2924, 1993, 2394, 2535, 2358, 2405, 2282, 3155,
	1838, 2265, 1980, 2263, 2805, 1857, 1532, 2586, 3303, 1168,
	1448, 734, 1063, 1509, 1854, 662, 735, 2553, 648, 4216,
	2103, 2630, 670, 830, 2853, 2585, 1223, 1808, 1171, 2397,
	1374, 1847, 2481, 2543, 2525, 1150, 2447, 1683, 1760, 2264,
	1684, 2266, 2375, 1625, 2514, 679, 739, 178, 1065, 730,
	169, 691, 1185, 2102, 809, 1167, 781, 1384, 742, 179,
	1530, 2008, 4296, 2287, 1039, 665, 43, 42, 40, 673,
	31, 739, 29, 1173, 27, 1148, 898, 1689, 2975, 1669,
	918, 1395, 3544, 742, 3545, 831, 2971, 3107, 2144, 1005,
	2144, 2144, 3348, 2144, 3178, 4495, 2144, 1697, 1698, 2534,
	4485, 4472, 4471, 2127, 3367, 2534, 2534, 4462, 1472, 4444,
	3177, 2077, 70, 3844, 834, 833, 1232, 4442, 4354, 4347,
	1728, 3844, 4355, 2534, 4345, 3347, 4342, 1700, 2534, 71,
	4343, 4339, 4334, 4309, 4308, 4340, 2077, 2077, 2077, 4307,
	4302, 3163, 2178, 2163, 2163, 75, 851, 4301, 4293, 4291,
	1005, 2163, 3844, 3844, 1183, 4263, 4240, 2527, 1206, 3844,
	2592, 1165, 1699, 4233, 4232, 1006, 4227, 2534, 2534, 4226,
	3844, 4220, 4190, 3844, 4150, 2077, 3894, 4132, 2592, 3367,
	2077, 3729, 4129, 1151, 1151, 82, 2077, 4126, 4083, 4048,
	4047, 3844, 4084, 2077, 2077, 4039, 4038, 4006, 2939, 2077,
	3844, 2077, 1180, 3980, 3959, 3948, 3879, 2592, 2163, 3367,
	2534, 3867, 3843, 1232, 3760, 2534, 3844, 986, 2592, 3708,
	3702, 2077, 88, 3383, 3383, 3060, 3061, 3666, 3554, 985,
	3552, 3667, 3555, 3537, 3553, 2611, 103, 2534, 2984, 3534,
	150, 89, 100, 3454, 2985, 3450, 1199, 2077, 70, 2534,
	45, 44, 3382, 3374, 995, 3104, 3383, 3375, 1000, 2534,
	3099, 1618, 3098, 1705, 2534, 71, 2534, 3051, 145, 3025,
	3017, 3052, 3015, 3026, 3018, 1108, 2534, 2588, 2986, 2866,
	2839, 75, 2534, 2163, 2166, 2838, 1154, 2614, 1155, 2166,
	1152, 2534, 65, 2534, 1409, 1388, 4241, 90, 2591, 47,
	3075, 147, 2592, 4154, 4145, 2583, 4133, 1727, 1729, 2534,
	2400, 2163, 2577, 2077, 2533, 2610, 2077, 219, 2534, 46,
	2165, 82, 2534, 3534, 2166, 2526, 1200, 3929, 3894, 3868,
	3729, 3375, 1562, 2703, 2013, 2629, 1959, 2143, 2159, 3060,
	3061, 2778, 2076, 2720, 2627, 49, 66, 1833, 1383, 3624,
	3426, 3404, 1855, 50, 2052, 3349, 1598, 2570, 88, 2569,
	2568, 221, 148, 2567, 2566, 1720, 1156, 1153, 219, 994,
	48, 993, 103, 992, 3350, 2791, 991, 89, 100, 990,
	989, 4330, 988, 2974, 984, 983, 982, 981, 980, 2903,
	3813, 3066, 979, 978, 977, 2401, 3060, 3061, 976, 3078,
	3079, 3080, 975, 974, 973, 972, 971, 970, 969, 968,
	220, 70, 221, 1697, 1698, 51, 950, 896, 3756, 895,
	2708, 213, 894, 893, 892, 891, 890, 889, 71, 888,
	214, 887, 2145, 90, 2145, 2145, 886, 2145, 1397, 93,
	2145, 885, 884, 1700, 75, 89, 883, 1403, 882, 881,
	880, 879, 180, 878, 877, 1388, 876, 875, 874, 873,
	872, 220, 871, 870, 869, 868, 867, 866, 865, 864,
	854, 3075, 853, 849, 848, 2402, 842, 2399, 1699, 841,
	2142, 4136, 799, 3347, 82, 1200, 798, 756, 755, 177,
	96, 754, 99, 3076, 753, 745, 744, 743, 712, 3772,
	1408, 2077, 703, 180, 702, 3066, 3942, 1721, 701, 1397,
	685, 242, 241, 240, 239, 238, 219, 237, 236, 235,
	234, 88, 233, 1548, 835, 232, 1063, 231, 230, 142,
	1063, 229, 228, 227, 226, 103, 225, 224, 223, 222,
	89, 100, 3572, 3548, 3384, 4157, 1257, 3151, 2526, 1200,
	1257, 2997, 1396, 3102, 1377, 2980, 2759, 2596, 2575, 2560,
	221, 1816, 3066, 2430, 1858, 2808, 1236, 2416, 1815, 1816,
	1241, 2414, 1227, 1988, 2173, 93, 1815, 1881, 1063, 1705,
	1063, 1786, 1063, 1777, 1391, 1243, 144, 1696, 1377, 1187,
	1819, 3103, 52, 219, 3060, 3061, 90, 2828, 1814, 2143,
	2077, 181, 2159, 4310, 4205, 2258, 55, 3076, 4142, 220,
	1363, 57, 4134, 1377, 2793, 3994, 3949, 3060, 3061, 67,
	213, 2404, 1060, 3081, 56, 177, 96, 4025, 99, 214,
	3928, 3820, 53, 3795, 1358, 3077, 149, 221, 3060, 3061,
	3794, 3788, 3787, 54, 1387, 1701, 1702, 1703, 1704, 1706,
	1707, 832, 219, 1402, 2172, 3378, 3786, 1377, 1063, 3779,
	60, 3778, 3776, 1377, 3076, 142, 3771, 1377, 3768, 3767,
	1519, 1779, 1777, 1454, 1456, 1063, 3665, 1063, 3576, 146,
	3671, 1377, 1221, 3575, 1441, 3574, 220, 1063, 3558, 1063,
	3525, 1566, 219, 3524, 3523, 3446, 221, 213, 3442, 3146,
	1397, 1394, 3095, 1401, 3944, 1407, 214, 3086, 3059, 3056,
	3055, 739, 3053, 3024, 1459, 3023, 3022, 1446, 2590, 3019,
	219, 3016, 144, 742, 1250, 219, 1344, 1349, 180, 1397,
	1778, 2398, 1776, 142, 1377, 2996, 221, 181, 93, 3060,
	3061, 2979, 1216, 2972, 2840, 220, 2561, 2387, 1386, 3077,
	1512, 1696, 1063, 1385, 1784, 1063, 213, 2605, 3060, 3061,
	3066, 1164, 1695, 219, 221, 214, 2084, 1535, 1537, 221,
	3071, 3069, 3070, 3062, 3063, 3064, 3065, 3067, 3068, 1552,
	2082, 1528, 2118, 3066, 4489, 220, 4436, 180, 177, 96,
	3, 99, 4435, 1620, 169, 169, 213, 1529, 1546, 2792,
	1551, 4405, 1503, 1506, 3066, 214, 3077, 221, 1567, 1008,
	1560, 3672, 1565, 220, 4364, 219, 3622, 1006, 220, 4362,
	1189, 2370, 3472, 835, 213, 4197, 4186, 180, 142, 213,
	4183, 1037, 1515, 214, 1227, 4182, 4181, 1227, 214, 4173,
	3100, 4166, 4156, 4155, 1179, 4130, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1475, 4114, 180, 220, 4113, 2364, 221,
	180, 4099, 3076, 1533, 4096, 4044, 4021, 213, 3992, 3975,
	3974, 3956, 3955, 1619, 219, 3919, 214, 1063, 219, 3895,
	1674, 3812, 1634, 1063, 3793, 144, 3070, 3062, 3063, 3064,
	3065, 3067, 3068, 3730, 3724, 3721, 4433, 3612, 180, 3611,
	181, 3598, 3597, 3540, 3528, 3066, 3076, 3437, 220, 3060,
	3061, 1764, 3078, 3079, 3080, 3385, 3672, 3368, 221, 213,
	3324, 3263, 221, 3232, 3066, 3205, 3204, 1547, 214, 3171,
	3169, 3755, 3001, 3000, 3072, 3073, 3074, 2995, 3943, 1561,
	2963, 3071, 3069, 3070, 3062, 3063, 3064, 3065, 3067, 3068,
	180, 1766, 2771, 4158, 219, 3060, 3061, 1822, 3078, 3079,
	3080, 1668, 1821, 1703, 1704, 1706, 1707, 220, 1820, 1817,
	3922, 220, 1809, 1807, 2603, 2602, 1572, 3441, 213, 2572,
	2565, 2532, 213, 219, 3075, 2665, 1589, 214, 1063, 1063,
	1063, 214, 2412, 1880, 1063, 1836, 1831, 1830, 221, 1829,
	3205, 1185, 1621, 1185, 3077, 1828, 1827, 3076, 1826, 2807,
	1825, 1824, 1823, 180, 1835, 1473, 3143, 1804, 1257, 1803,
	1802, 4137, 1801, 1800, 1799, 1798, 1063, 221, 1797, 733,
	3075, 1006, 1796, 1795, 1884, 1916, 733, 1671, 1794, 1377,
	2174, 1679, 1793, 1678, 1895, 1792, 1063, 220, 3077, 1791,
	1377, 1942, 1790, 1181, 1779, 1765, 1763, 986, 213, 1758,
	1215, 1204, 1844, 1195, 1673, 3816, 3764, 214, 1063, 985,
	3571, 3551, 3543, 1675, 1257, 3066, 220, 2983, 2563, 2594,
	1818, 1692, 1693, 1697, 1698, 1478, 4010, 213, 3818, 180,
	3060, 3061, 3570, 1778, 1891, 1977, 214, 3167, 1227, 1697,
	1698, 1761, 3353, 1183, 1876, 1183, 3870, 1889, 1986, 1947,
	1841, 1842, 1865, 1700, 1952, 4426, 1238, 1885, 180, 1151,
	1957, 3066, 219, 1979, 1951, 1888, 3334, 1872, 4184, 1700,
	2429, 1810, 1811, 1979, 2415, 169, 3081, 1979, 2413, 3071,
	3069, 3070, 3062, 3063, 3064, 3065, 3067, 3068, 1699, 3077,
	4086, 1180, 4135, 1180, 4085, 3947, 1240, 1006, 219, 3897,
	3896, 1233, 3869, 3815, 1699, 3733, 221, 3064, 3065, 3067,
	3068, 3732, 3731, 739, 3546, 2684, 1232, 3076, 4091, 1866,
	739, 1887, 3081, 1856, 1799, 742, 3062, 3063, 3064, 3065,
	3067, 3068, 742, 4024, 3370, 1971, 1970, 3369, 1799, 1979,
	1981, 1863, 221, 1858, 1816, 3424, 3675, 3258, 1954, 3021,
	219, 1815, 1377, 1377, 1239, 220, 1232, 1666, 3020, 2945,
	2667, 1235, 1257, 3076, 1950, 1834, 213, 1965, 219, 3235,
	966, 1232, 1588, 3610, 2001, 214, 3308, 1635, 3307, 1788,
	219, 1875, 1874, 1873, 1860, 1871, 2013, 1870, 1892, 1869,
	1597, 220, 4306, 1910, 221, 1939, 2171, 180, 2037, 4082,
	2193, 2041, 213, 4350, 2046, 1705, 1896, 4335, 4322, 3292,
	3996, 214, 221, 967, 1229, 2070, 2074, 2864, 1598, 2065,
	3631, 4331, 3629, 3615, 221, 3069, 3070, 3062, 3063, 3064,
	3065, 3067, 3068, 180, 3401, 3182, 3107, 3474, 2395, 1982,
	1972, 2601, 2989, 220, 1832, 1812, 3062, 3063, 3064, 3065,
	3067, 3068, 2119, 3299, 213, 1974, 1477, 1785, 2112, 3077,
	1502, 220, 1453, 214, 1380, 4344, 2018, 1163, 1210, 4341,
	1056, 2717, 213, 220, 3343, 3587, 1576, 4177, 3931, 2714,
	4262, 214, 2050, 4163, 213, 180, 4332, 3208, 1478, 3605,
	2847, 2804, 1234, 214, 3285, 4391, 3418, 4392, 739, 3644,
	4065, 3186, 3858, 180, 1427, 3077, 2201, 1377, 1419, 1377,
	742, 1377, 1632, 2615, 2633, 180, 964, 794, 4484, 1381,
	4058, 4417, 4050, 962, 3892, 2108, 2633, 1377, 1377, 2631,
	2067, 3188, 1614, 1004, 960, 1386, 2242, 958, 1377, 955,
	1385, 2631, 2643, 3640, 3639, 2113, 3840, 3633, 3628, 1230,
	1377, 2240, 1377, 1377, 1377, 2036, 3626, 1633, 1231, 2124,
	2045, 3584, 3583, 3643, 2202, 1976, 3288, 1240, 3162, 2994,
	946, 2993, 2992, 1966, 733, 2180, 2991, 2443, 2949, 2724,
	3836, 2075, 2723, 2719, 2132, 2710, 1428, 3072, 3073, 3074,
	1615, 2699, 2698, 2693, 3071, 3069, 3070, 3062, 3063, 3064,
	3065, 3067, 3068, 1975, 2692, 2671, 2658, 2584, 2345, 1631,
	1672, 2121, 2442, 2303, 1465, 952, 1464, 795, 3590, 1003,
	1913, 2095, 2094, 2203, 2147, 1239, 1463, 3402, 1462, 3168,
	2134, 2176, 3837, 3072, 3073, 3074, 2197, 2185, 2093, 2801,
	3071, 3069, 3070, 3062, 3063, 3064, 3065, 3067, 3068, 1616,
	2622, 2646, 2013, 1574, 2256, 2189, 1063, 3973, 1063, 2040,
	1436, 1006, 1475, 1006, 2129, 1063, 2129, 2192, 1916, 1916,
	1257, 2181, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 1533, 1063, 1533,
	1063, 1063, 1063, 1063, 2130, 2126, 4418, 4421, 739, 1477,
	1232, 2010, 2171, 2275, 1955, 2576, 1005, 2262, 1240, 710,
	742, 1216, 1063, 2360, 2669, 1063, 1063, 2167, 2251, 2168,
	2657, 2254, 1488, 1063, 1423, 2360, 2246, 1063, 2595, 1063,
	1063, 1569, 2922, 2400, 2006, 1648, 3234, 1257, 1644, 4446,
	2299, 2300, 2184, 1063, 1063, 1063, 1063, 2209, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1707, 1382, 3854, 2206,
	2011, 2012, 3650, 3068, 2937, 2656, 1239, 1701, 1702, 1703,
	1704, 1706, 1707, 2218, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 2376, 2377, 3871, 2688, 1063, 4422, 2200,
	2007, 2236, 1586, 2368, 2681, 2682, 2273, 2376, 2392, 1185,
	2366, 3649, 1222, 2131, 2681, 2682, 1257, 3832, 2681, 2682,
	2286, 4032, 3833, 3409, 708, 1185, 2395, 1846, 2401, 2342,
	3408, 1590, 2900, 2438, 1677, 2645, 2253, 2404, 1697, 1698,
	1233, 1063, 1257, 1630, 2261, 1214, 2260, 1876, 2259, 3891,
	2274, 2267, 2484, 2484, 2498, 1627, 2376, 1570, 3627, 2518,
	2520, 1728, 2210, 3625, 2271, 2524, 941, 986, 1700, 2587,
	986, 986, 4391, 3835, 2391, 4430, 1910, 1910, 1006, 2290,
	1983, 1984, 2291, 2292, 1449, 2273, 1002, 1006, 1665, 3838,
	999, 1006, 797, 796, 3060, 3061, 4328, 3078, 3079, 3080,
	2936, 3972, 1598, 1699, 1850, 2004, 4424, 3601, 2402, 2573,
	2399, 1183, 2716, 3614, 862, 1598, 2608, 3185, 2540, 3613,
	3287, 3249, 1192, 1179, 792, 1179, 791, 1183, 2372, 4402,
	1447, 2632, 4178, 1151, 1865, 2548, 4034, 2440, 1233, 3463,
	3255, 2718, 2441, 2271, 2715, 2444, 3460, 2445, 2446, 1257,
	1853, 2389, 2713, 1229, 2048, 4408, 2691, 855, 3242, 1180,
	3248, 2589, 1190, 3852, 2670, 1848, 2634, 4407, 1227, 3075,
	2582, 2644, 4449, 2539, 4380, 1180, 3341, 2047, 2668, 1006,
	942, 1916, 2250, 1851, 1645, 1575, 3746, 2493, 169, 2480,
	2547, 2340, 2552, 3745, 2343, 2558, 2559, 3241, 2612, 2522,
	2509, 956, 2272, 2356, 1705, 2500, 2530, 2531, 956, 3834,
	2043, 2541, 3340, 1257, 2562, 2545, 2546, 1697, 1698, 956,
	2241, 2269, 957, 1863, 956, 1849, 3461, 1377, 1818, 709,
	2597, 1234, 2354, 660, 2635, 2239, 2011, 2012, 2081, 2080,
	1728, 4192, 1063, 1063, 2339, 1063, 3841, 1700, 1727, 1729,
	1425, 1229, 3340, 2906, 2404, 3122, 2929, 2930, 2062, 655,
	3066, 2751, 2032, 2016, 2613, 4329, 2044, 1193, 1377, 4475,
	1449, 2144, 2270, 2674, 2604, 711, 2775, 3187, 707, 1642,
	953, 2272, 1699, 1810, 1811, 2404, 829, 4423, 1230, 2609,
	2252, 2664, 1487, 1202, 1422, 2711, 2607, 1231, 2689, 2673,
	2750, 2031, 2015, 1913, 1913, 997, 1720, 941, 2789, 2695,
	2696, 2061, 3853, 3911, 2149, 2616, 2208, 2151, 4428, 1646,
	1573, 3081, 941, 2156, 1377, 1377, 2158, 1377, 2707, 1234,
	2161, 999, 1181, 2004, 1181, 1852, 2754, 2833, 1947, 1377,
	2756, 2683, 2685, 2686, 2687, 2660, 999, 2648, 2651, 2638,
	2960, 2270, 2701, 4237, 1377, 2951, 1805, 2672, 2909, 843,
	2785, 4327, 3076, 2760, 2398, 943, 2763, 2359, 2765, 2350,
	2690, 4124, 2404, 2835, 2034, 4379, 2815, 998, 2831, 2958,
	3165, 739, 3266, 1705, 2694, 2697, 1230, 2351, 2887, 4033,
	2888, 2889, 2352, 742, 1063, 1231, 2357, 856, 857, 1910,
	2004, 3220, 2865, 3969, 3742, 1647, 3985, 2053, 1643, 3602,
	2806, 2205, 2060, 2806, 2830, 2633, 1571, 1994, 1386, 4429,
	2861, 942, 1995, 2757, 4116, 2781, 2341, 1727, 1729, 2836,
	2649, 2702, 2367, 2817, 678, 2769, 942, 4117, 4401, 1063,
	2013, 2199, 3121, 1585, 1587, 1063, 1063, 2867, 1721, 2038,
	2846, 2871, 4431, 2872, 2885, 2779, 169, 3219, 2822, 1232,
	2869, 2870, 2825, 4282, 2826, 2810, 2884, 2799, 4118, 4273,
	3877, 2876, 2877, 2878, 1757, 1676, 863, 2892, 2257, 2894,
	2818, 2896, 2999, 2544, 1850, 1720, 1213, 4450, 2908, 2035,
	2557, 2386, 3747, 2882, 1005, 2911, 3476, 2913, 2832, 3657,
	1063, 1063, 944, 2837, 3077, 2891, 1063, 2893, 3655, 2895,
	3840, 2914, 2915, 2848, 4437, 2897, 2955, 3921, 2905, 1063,
	1063, 1191, 2059, 3912, 3736, 1063, 1063, 1533, 4120, 2904,
	1853, 1063, 1996, 3968, 3670, 4235, 3567, 1207, 4357, 2956,
	1063, 1063, 1063, 2961, 3836, 2542, 1063, 4358, 3829, 2000,
	4119, 945, 1846, 2618, 3420, 2890, 1063, 1232, 2920, 3223,
	4199, 2982, 1602, 1851, 4326, 3827, 4390, 4121, 4378, 2952,
	2353, 2620, 4236, 1063, 3831, 4388, 4214, 4098, 3690, 3327,
	2355, 858, 859, 1710, 1708, 1709, 1701, 1702, 1703, 1704,
	1706, 1707, 656, 2919, 2918, 2101, 3837, 1843, 2917, 844,
	845, 2938, 2973, 1022, 2621, 2928, 943, 2923, 3225, 2977,
	2978, 2286, 2907, 4476, 2981, 2145, 1205, 3658, 1997, 2002,
	1198, 943, 1687, 647, 2619, 1686, 1913, 1721, 3743, 1850,
	2289, 4455, 3072, 3073, 3074, 4041, 2014, 3830, 1681, 3071,
	3069, 3070, 3062, 3063, 3064, 3065, 3067, 3068, 1014, 1967,
	3791, 1686, 4040, 3514, 3156, 4019, 4107, 4162, 3691, 3637,
	3586, 746, 4200, 1063, 1063, 1063, 657, 3328, 3970, 2950,
	3320, 3224, 1063, 1063, 1063, 1853, 3396, 1063, 3200, 1006,
	3196, 2790, 2784, 2773, 2125, 3389, 2114, 1063, 1185, 1257,
	1848, 2106, 2087, 1063, 3580, 1063, 3114, 3115, 3459, 2033,
	1998, 2700, 1964, 1185, 3653, 3657, 2279, 1479, 1851, 1416,
	684, 658, 2650, 659, 3655, 1852, 3857, 2957, 2988, 3529,
	4251, 1257, 3421, 3856, 4217, 1685, 3396, 2959, 2247, 246,
	1686, 1960, 2056, 1185, 2536, 3389, 1257, 3693, 3936, 3748,
	2770, 996, 2003, 944, 1490, 3097, 2004, 2190, 4080, 3136,
	1849, 1685, 2039, 1916, 2675, 4078, 3542, 1257, 944, 3161,
	4020, 3116, 3211, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 1377, 1377, 3207, 1063, 3206, 1962, 2943, 3656, 3391,
	3119, 3175, 4356, 846, 847, 2054, 3126, 2921, 1063, 1687,
	1183, 3832, 945, 3118, 3390, 3227, 3833, 1617, 3150, 1757,
	1916, 1179, 3145, 2581, 4122, 1183, 2580, 945, 2538, 4123,
	3662, 2579, 3124, 2537, 3183, 1687, 1963, 1179, 1063, 1377,
	3749, 2040, 1994, 3658, 2055, 1227, 2578, 1995, 3189, 3391,
	1685, 4454, 1471, 2777, 3228, 1183, 1457, 3515, 1180, 2280,
	1003, 1947, 1947, 3792, 3390, 3166, 3516, 3835, 3149, 1469,
	1458, 3142, 4201, 1180, 1377, 3135, 3210, 3108, 861, 3215,
	1852, 4028, 3217, 3838, 4169, 1904, 3154, 3123, 3195, 3253,
	4075, 1257, 3254, 3903, 3379, 3192, 3193, 3197, 2654, 2123,
	1377, 3387, 3295, 1180, 3581, 1377, 3092, 3093, 3094, 1947,
	4398, 4196, 3201, 3209, 1603, 3125, 3213, 3140, 2868, 3141,
	3134, 747, 748, 2755, 3239, 2753, 3137, 3138, 1377, 3158,
	3159, 3160, 1579, 3237, 1377, 4254, 1377, 1999, 3855, 3240,
	1257, 2676, 2677, 4259, 1947, 3250, 4248, 733, 3179, 3180,
	3172, 3173, 4017, 3174, 3953, 3184, 3267, 1996, 1377, 3798,
	3531, 1888, 2411, 2001, 3229, 3230, 4277, 4170, 3231, 1377,
	1947, 4400, 3273, 3190, 2000, 1947, 3256, 3280, 2823, 3269,
	3251, 4029, 3272, 1662, 2827, 1185, 3277, 3279, 1660, 3336,
	4346, 1910, 4185, 3157, 2001, 4018, 3222, 3290, 3319, 3293,
	3233, 1639, 3226, 3834, 3656, 3130, 1637, 3260, 3261, 683,
	3264, 3262, 3991, 3392, 3393, 3394, 3395, 3244, 3247, 4255,
	3245, 3790, 3952, 1613, 3246, 3661, 1611, 1377, 1377, 3259,
	1181, 3252, 1609, 1607, 3316, 1605, 3304, 2050, 1910, 3265,
	3841, 3345, 3089, 1997, 2002, 2050, 1181, 1595, 3282, 1377,
	3275, 4171, 1593, 3436, 3286, 3399, 3176, 3274, 1467, 3054,
	750, 749, 3281, 3392, 3393, 3394, 3395, 1446, 2962, 2774,
	2709, 2666, 2861, 3313, 2606, 1883, 1879, 1664, 1663, 3335,
	1557, 2861, 3090, 3417, 2673, 1470, 1257, 1183, 3416, 1257,
	2238, 739, 3359, 3297, 1681, 2902, 2901, 3131, 3329, 3337,
	2874, 3317, 1468, 742, 2268, 2249, 1626, 2213, 2086, 1943,
	1789, 860, 3289, 1568, 1440, 2410, 3630, 751, 752, 4321,
	1063, 3257, 3364, 3365, 3878, 1998, 1063, 1063, 3866, 3344,
	1063, 1063, 1063, 4247, 1063, 1180, 3397, 3366, 3934, 3883,
	3825, 954, 1006, 1063, 1916, 3381, 3129, 3689, 3342, 169,
	169, 3360, 1063, 3681, 3377, 1063, 3356, 3351, 3642, 3268,
	3608, 1257, 3606, 1661, 3585, 3323, 3318, 2003, 1659, 3309,
	1063, 2004, 3403, 3415, 4368, 3414, 2829, 3133, 1257, 2824,
	3332, 1638, 2802, 3412, 2788, 2780, 1636, 2767, 1916, 1916,
	1063, 1063, 3398, 1063, 1063, 1063, 2752, 2164, 3405, 2162,
	3406, 3439, 3407, 1612, 2160, 3422, 1610, 2157, 2152, 2150,
	1697, 1698, 1608, 1606, 2146, 1604, 2137, 2085, 1913, 2083,
	3191, 3448, 3449, 2066, 3411, 2051, 2030, 1594, 2017, 2005,
	4376, 1690, 1592, 1728, 3456, 1063, 3488, 1890, 1466, 1063,
	1700, 1916, 1916, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 3489, 1063, 2941, 1913, 3419, 2237, 3276, 4392,
	1063, 1063, 1916, 2060, 1968, 1699, 2255, 1063, 4287, 3958,
	2299, 3479, 3132, 1160, 3564, 3444, 3951, 3950, 1063, 959,
	961, 963, 3890, 3821, 2862, 1987, 1421, 2633, 4109, 1185,
	1185, 3455, 2633, 1063, 2655, 3462, 3464, 3465, 3471, 1161,
	4102, 3701, 2631, 2741, 723, 2122, 2013, 2652, 1657, 1658,
	1511, 2204, 3478, 2233, 2232, 1510, 2211, 4286, 3859, 1697,
	1698, 3885, 1257, 2299, 3494, 1591, 4144, 3486, 1691, 3560,
	3799, 3487, 1999, 3466, 3777, 3526, 2733, 2731, 3547, 2678,
	1697, 1698, 2659, 2735, 2737, 2727, 2942, 3565, 3566, 1700,
	1694, 1208, 1910, 3563, 3522, 4394, 3485, 4386, 3518, 1063,
	661, 3577, 3578, 3579, 3491, 3493, 1705, 3636, 1904, 1904,
	4351, 2766, 1071, 2059, 3527, 1063, 1185, 2235, 3678, 2107,
	1219, 2714, 243, 2704, 1699, 3533, 2722, 782, 2721, 3635,
	1511, 1183, 1183, 826, 2706, 3519, 1910, 1910, 3538, 3539,
	1511, 169, 2663, 1063, 1063, 1699, 1162, 2705, 2661, 4242,
	1727, 1729, 3535, 3536, 672, 2662, 4209, 250, 250, 250,
	4206, 650, 651, 4168, 666, 650, 666, 676, 644, 682,
	4094, 4073, 3680, 700, 1063, 3669, 3557, 3549, 706, 1180,
	1180, 3322, 2809, 2523, 250, 1953, 1897, 4425, 4279, 1910,
	1910, 4026, 3164, 4280, 4453, 4208, 1377, 1350, 3060, 3061,
	1362, 1365, 1388, 840, 1697, 1698, 3769, 4279, 1720, 250,
	4095, 3616, 4280, 4404, 2406, 1916, 2625, 2626, 1183, 3569,
	1910, 2625, 3621, 3623, 2623, 3620, 2623, 2624, 1578, 2439,
	1179, 3594, 4059, 3886, 1577, 2020, 3589, 1641, 3638, 3550,
	1640, 3882, 3632, 3881, 1377, 1179, 3765, 3687, 3568, 3573,
	1555, 1063, 3467, 3270, 1783, 1782, 2729, 4439, 2024, 1185,
	1063, 4409, 3703, 4246, 1365, 1365, 1180, 2743, 4245, 4244,
	3676, 3647, 4159, 4076, 4054, 1179, 3660, 4011, 2673, 3694,
	1377, 1377, 1377, 3712, 4008, 3914, 3648, 3817, 2742, 2734,
	2732, 2736, 2738, 2728, 2730, 2744, 1377, 3663, 3727, 3677,
	3698, 3707, 2740, 3664, 1365, 3604, 3651, 3201, 3599, 3659,
	3354, 3697, 3326, 2021, 3695, 1257, 3325, 3216, 3050, 1913,
	3049, 3684, 3048, 3047, 3046, 3045, 650, 650, 3044, 3043,
	3042, 3041, 3040, 3039, 250, 2747, 3679, 1257, 3038, 3037,
	1063, 1063, 2815, 3036, 3728, 3035, 1063, 1063, 1916, 3034,
	1721, 1063, 1063, 3033, 1063, 3683, 3682, 3032, 1063, 3031,
	3030, 1183, 3029, 1913, 1913, 3028, 3027, 2899, 2881, 1063,
	2880, 3704, 3699, 3705, 2879, 3696, 2820, 2794, 2861, 2768,
	2653, 2599, 2598, 3355, 2371, 1063, 3357, 3358, 3711, 2234,
	2231, 3361, 2230, 3362, 3363, 2229, 3723, 3719, 2228, 3716,
	1769, 3717, 3718, 2227, 1774, 3759, 3726, 3722, 2140, 1180,
	3725, 2139, 2138, 2136, 3734, 2025, 1913, 1913, 3750, 2120,
	2096, 2092, 3763, 2091, 2090, 2089, 2088, 1656, 1655, 1600,
	1599, 1904, 3735, 1910, 3744, 1497, 1496, 1495, 1494, 1181,
	1493, 1492, 1491, 1489, 1484, 1185, 3739, 1913, 1483, 1482,
	1481, 1480, 1435, 1185, 1181, 1434, 3751, 1257, 1433, 1257,
	1432, 1431, 1430, 1429, 1424, 3804, 1185, 1420, 1418, 1417,
	1248, 1247, 1246, 1245, 1244, 1212, 1211, 1143, 1958, 965,
	2026, 2027, 951, 1257, 1181, 4031, 3839, 1709, 1701, 1702,
	1703, 1704, 1706, 1707, 1650, 87, 1426, 769, 81, 2057,
	3603, 923, 3789, 2748, 2022, 4276, 1063, 1179, 1185, 1410,
	4191, 777, 2739, 4261, 3218, 2725, 2212, 1601, 2214, 3144,
	2564, 4234, 3773, 3851, 2998, 4151, 3984, 2409, 1787, 3101,
	3850, 83, 1047, 1093, 3910, 1257, 3862, 3863, 3909, 3826,
	3810, 3588, 3796, 2851, 1257, 2023, 3907, 1183, 3906, 3803,
	3801, 3802, 1901, 1903, 3800, 1183, 3806, 1013, 1260, 3849,
	3811, 1969, 3805, 1944, 1053, 3861, 1910, 3814, 1183, 169,
	1985, 1978, 1377, 1377, 2600, 3824, 3807, 2483, 3822, 3823,
	1070, 3149, 1067, 1905, 1907, 1069, 1068, 1906, 1806, 1377,
	1066, 1900, 3686, 3685, 2776, 1180, 2813, 3352, 3865, 1476,
	1257, 3860, 1474, 1180, 925, 1377, 3901, 2551, 1973, 3873,
	1183, 3875, 3889, 2365, 2393, 2987, 1180, 1780, 1028, 1049,
	3899, 2390, 1203, 3594, 3874, 1038, 1027, 3927, 3127, 3106,
	3339, 3556, 1185, 3893, 2278, 3887, 3900, 3888, 786, 3057,
	3937, 3898, 1377, 1377, 1377, 2396, 3876, 1194, 2506, 3957,
	2499, 2495, 3181, 1257, 3954, 2803, 1667, 2028, 1180, 1947,
	1913, 3998, 3904, 3880, 1759, 1063, 1063, 1063, 2814, 1242,
	1031, 3905, 2363, 1362, 1771, 3938, 2967, 3941, 3946, 3926,
	2288, 3924, 3920, 1257, 3346, 3147, 2593, 4283, 1063, 3475,
	2100, 1063, 1063, 1159, 1158, 1201, 1157, 3939, 4267, 4264,
	3720, 1063, 3913, 3302, 1916, 1961, 3963, 2617, 1749, 1063,
	1063, 3310, 1043, 3925, 1361, 3112, 1181, 3380, 1437, 3932,
	705, 3846, 3961, 1055, 1257, 1748, 1377, 2746, 2745, 3960,
	2029, 4165, 1228, 3965, 1183, 3945, 1226, 1225, 1224, 3971,
	1257, 3981, 3199, 4474, 3976, 3600, 3923, 3594, 1063, 218,
	2935, 1688, 1680, 215, 217, 1185, 216, 3915, 3561, 3153,
	4349, 3993, 3618, 3294, 22, 1196, 21, 1063, 20, 1916,
	108, 41, 19, 3987, 3607, 123, 3609, 1063, 141, 140,
	1063, 116, 1180, 139, 4013, 138, 137, 136, 143, 1063,
	4004, 4005, 135, 1913, 1209, 4007, 1257, 134, 129, 133,
	132, 131, 130, 700, 128, 127, 4014, 1377, 1377, 126,
	125, 124, 122, 121, 120, 4012, 119, 118, 117, 115,
	4053, 1179, 1179, 114, 113, 112, 111, 250, 110, 250,
	250, 1353, 4035, 250, 250, 1368, 109, 696, 3641, 4036,
	693, 4064, 4088, 59, 58, 1257, 4079, 107, 1377, 250,
	106, 1390, 18, 39, 14, 63, 64, 1183, 4055, 4051,
	17, 4043, 4061, 13, 34, 86, 1185, 1185, 4108, 4093,
	3594, 4071, 1414, 4069, 98, 4066, 4077, 97, 35, 4068,
	95, 4092, 4072, 4103, 4056, 1063, 1063, 94, 4127, 4128,
	4067, 1439, 4087, 1445, 33, 16, 15, 250, 250, 92,
	1353, 4106, 1063, 1916, 91, 1180, 32, 30, 1179, 11,
	4105, 9, 8, 36, 3304, 1867, 4110, 3709, 4104, 1486,
	4125, 3710, 1910, 4111, 12, 5, 3941, 2111, 174, 173,
	176, 250, 1063, 250, 250, 1063, 1353, 250, 1390, 172,
	175, 85, 171, 170, 84, 28, 10, 166, 700, 4089,
	250, 250, 4161, 4140, 4141, 1185, 3674, 4172, 78, 4143,
	4149, 168, 167, 165, 4100, 164, 163, 4139, 1183, 1183,
	79, 76, 162, 840, 1369, 80, 4112, 4180, 161, 4160,
	77, 3594, 3594, 160, 26, 6, 4131, 1910, 62, 1362,
	7, 3966, 3400, 101, 102, 4179, 1063, 1063, 37, 74,
	4175, 4174, 73, 1904, 72, 25, 61, 1185, 1412, 24,
	1185, 203, 202, 201, 1377, 200, 1180, 1180, 199, 198,
	193, 4187, 192, 197, 1377, 1377, 195, 194, 196, 4211,
	1181, 1181, 4213, 1450, 4189, 191, 4203, 4204, 206, 205,
	4225, 1377, 210, 209, 208, 207, 250, 4207, 4202, 4092,
	1904, 1179, 204, 212, 190, 1063, 1063, 1183, 188, 184,
	4230, 4219, 4231, 183, 250, 1063, 4221, 187, 189, 186,
	3594, 4222, 4223, 4224, 185, 182, 211, 1525, 158, 159,
	69, 157, 156, 155, 4218, 154, 2283, 1541, 4229, 4228,
	153, 152, 151, 4256, 1063, 1063, 68, 1063, 4257, 4239,
	23, 2, 1, 4258, 0, 1180, 4193, 4243, 0, 1183,
	0, 2369, 1183, 0, 0, 0, 4281, 1181, 0, 4266,
	4269, 1910, 3594, 4238, 0, 3594, 1769, 4210, 4278, 0,
	0, 0, 0, 0, 0, 4271, 4300, 0, 4303, 0,
	4304, 4275, 0, 0, 0, 0, 1063, 1063, 1063, 1913,
	4305, 0, 0, 0, 1580, 4288, 0, 1180, 0, 0,
	1180, 4292, 4270, 4297, 4298, 4274, 1175, 4299, 0, 0,
	0, 0, 0, 1063, 0, 0, 4333, 4338, 0, 0,
	2505, 4317, 4318, 0, 4320, 4319, 0, 0, 0, 0,
	0, 0, 4285, 0, 0, 0, 0, 0, 0, 0,
	4352, 0, 0, 4336, 0, 4361, 4363, 0, 0, 0,
	0, 245, 245, 646, 1913, 4359, 0, 4372, 0, 0,
	0, 4373, 4365, 0, 1063, 2501, 0, 0, 4360, 0,
	4371, 4377, 0, 0, 0, 0, 1994, 1179, 4366, 4289,
	4367, 1995, 4290, 0, 0, 1179, 0, 0, 0, 4393,
	0, 0, 0, 0, 0, 0, 4385, 0, 1179, 4389,
	1181, 4387, 650, 4383, 4384, 4396, 0, 0, 4395, 0,
	4397, 4399, 0, 1185, 4412, 1185, 0, 0, 4266, 4411,
	4410, 4269, 0, 250, 0, 250, 4406, 4403, 0, 250,
	4414, 0, 4419, 0, 0, 4413, 4416, 4415, 0, 4420,
	1179, 0, 1390, 1353, 250, 0, 250, 0, 0, 0,
	0, 250, 1390, 666, 2964, 2965, 4432, 0, 250, 1390,
	0, 4434, 0, 1255, 0, 0, 700, 1356, 4369, 4370,
	4438, 0, 4440, 4445, 4374, 4443, 1063, 1063, 0, 4441,
	0, 4448, 4447, 4451, 1063, 0, 1063, 1063, 1913, 0,
	4285, 1996, 4460, 0, 4457, 0, 4465, 4467, 4468, 4463,
	0, 0, 4464, 4469, 0, 0, 4466, 0, 2000, 0,
	0, 4470, 0, 1365, 1904, 1183, 4473, 1183, 4478, 0,
	0, 0, 4479, 0, 4481, 0, 4482, 4477, 3594, 0,
	3594, 0, 4483, 4486, 4480, 0, 0, 0, 0, 0,
	1063, 4488, 0, 0, 0, 4487, 0, 4494, 4490, 4496,
	0, 4491, 0, 4493, 4458, 4459, 4497, 0, 1904, 1904,
	1365, 4045, 4046, 1180, 1179, 1180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1997, 2002, 0,
	0, 2815, 0, 0, 0, 4060, 1181, 0, 4062, 4063,
	0, 0, 0, 0, 1181, 0, 0, 0, 3083, 3084,
	3085, 70, 0, 0, 0, 0, 0, 1181, 4492, 0,
	0, 1904, 1904, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 75, 0, 250, 0, 0, 0,
	0, 0, 1904, 0, 0, 0, 0, 0, 0, 1181,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	1698, 1362, 0, 0, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1698, 0, 1179, 0, 250,
	0, 0, 1728, 250, 0, 0, 0, 0, 0, 1700,
	250, 2003, 0, 0, 0, 2004, 250, 1728, 0, 0,
	0, 88, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 250, 0, 250, 0, 103, 0, 650, 0, 250,
	89, 100, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 2141, 1719, 0, 0, 0, 0, 1699,
	0, 0, 0, 1716, 1991, 250, 0, 0, 0, 1719,
	0, 0, 250, 0, 0, 4188, 0, 0, 1716, 713,
	0, 0, 2505, 1181, 0, 0, 0, 0, 0, 1365,
	1365, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	0, 0, 700, 1992, 0, 0, 840, 0, 1179, 1179,
	0, 0, 0, 0, 3754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2925, 0, 3435,
	0, 250, 0, 1353, 250, 1722, 1723, 1724, 1725, 0,
	1362, 0, 0, 0, 0, 1705, 0, 1365, 700, 0,
	1722, 1723, 1724, 1725, 0, 250, 0, 0, 0, 0,
	1705, 0, 2505, 2505, 0, 1904, 250, 250, 0, 250,
	0, 250, 0, 250, 0, 250, 0, 0, 0, 0,
	0, 1362, 0, 1362, 0, 0, 1999, 0, 0, 1727,
	1729, 0, 0, 0, 0, 718, 2243, 1179, 0, 2244,
	0, 2245, 0, 0, 1727, 1729, 1181, 2501, 2501, 0,
	0, 0, 0, 250, 0, 1714, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 1715, 0, 0, 0, 682, 0, 0, 93, 700,
	0, 2169, 0, 0, 0, 1882, 0, 1720, 0, 1179,
	0, 0, 1179, 0, 0, 0, 0, 1525, 2182, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 0, 0,
	2191, 0, 2194, 2195, 2196, 0, 4348, 0, 177, 96,
	0, 99, 0, 0, 0, 0, 0, 0, 1904, 0,
	720, 1989, 0, 0, 0, 0, 2505, 2505, 2505, 0,
	0, 0, 0, 0, 0, 219, 0, 1181, 1181, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 142, 0,
	0, 1252, 0, 0, 0, 0, 0, 1360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2501, 2501, 2501, 0, 0, 3432, 3433, 724, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 144, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 650, 0, 0, 0,
	181, 0, 0, 0, 1721, 0, 1181, 0, 220, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 213,
	650, 0, 0, 0, 0, 0, 0, 250, 214, 650,
	715, 0, 0, 0, 0, 1501, 0, 1501, 1501, 3060,
	3061, 250, 3078, 3079, 3080, 0, 0, 0, 0, 2078,
	180, 0, 0, 0, 1542, 1543, 250, 1390, 1181, 0,
	719, 1181, 0, 0, 0, 0, 0, 0, 3495, 3496,
	3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3506,
	3507, 3508, 3509, 3510, 3511, 3512, 3513, 0, 3517, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 1390, 722, 666, 0, 0, 0,
	0, 717, 0, 250, 3075, 1179, 0, 1179, 0, 0,
	0, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 0, 0, 0, 1717, 1713, 0, 1710,
	1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0,
	1649, 0, 0, 0, 714, 0, 0, 2642, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	250, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 0, 250, 0, 0, 727, 0, 0, 1362,
	0, 0, 0, 0, 0, 3066, 0, 716, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 70, 0, 0,
	0, 0, 2111, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 0, 0, 71, 0, 0, 0, 0, 250,
	2758, 0, 0, 3082, 0, 0, 0, 0, 0, 0,
	75, 0, 0, 0, 1904, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 3081, 250, 88, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 103, 0, 2798, 0, 0, 89, 100, 0,
	82, 0, 0, 0, 2642, 0, 650, 0, 0, 0,
	2819, 0, 0, 0, 0, 0, 250, 3076, 0, 250,
	0, 0, 0, 250, 0, 250, 0, 0, 0, 1904,
	1353, 0, 250, 250, 1181, 1390, 1181, 88, 0, 0,
	0, 0, 0, 0, 2844, 840, 0, 2642, 2642, 0,
	0, 103, 0, 90, 0, 0, 89, 100, 0, 0,
	0, 0, 250, 0, 2505, 2505, 0, 2302, 1362, 1362,
	0, 0, 0, 0, 0, 0, 0, 2749, 0, 0,
	0, 250, 1353, 250, 0, 0, 1390, 0, 1390, 1390,
	250, 0, 0, 1353, 0, 1353, 0, 1353, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 0, 0, 2501,
	2501, 0, 90, 0, 0, 0, 0, 0, 1886, 0,
	1360, 0, 0, 250, 250, 250, 250, 1353, 1353, 250,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 1362,
	0, 0, 0, 0, 2407, 0, 0, 0, 0, 3077,
	0, 0, 250, 1904, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 2834, 1525, 2505, 2505, 2505, 2505,
	2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505,
	2505, 2505, 2505, 2505, 2505, 93, 2505, 0, 0, 0,
	0, 0, 3060, 3061, 2875, 3078, 3079, 3080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501,
	2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501,
	0, 2501, 0, 0, 0, 177, 96, 0, 99, 2574,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 1390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 3075, 0, 0,
	835, 0, 0, 0, 0, 142, 0, 3072, 3073, 3074,
	0, 0, 0, 0, 3071, 3069, 3070, 3062, 3063, 3064,
	3065, 3067, 3068, 0, 177, 96, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 835,
	0, 0, 144, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2628, 181, 0, 0,
	0, 0, 0, 2098, 0, 220, 0, 2105, 3066, 0,
	0, 0, 0, 0, 0, 221, 213, 0, 0, 0,
	2117, 0, 0, 0, 0, 214, 3060, 3061, 0, 3078,
	3079, 3080, 0, 0, 0, 2128, 0, 2128, 0, 0,
	250, 144, 0, 2135, 0, 0, 0, 1538, 3440, 0,
	0, 0, 0, 0, 0, 250, 181, 0, 0, 0,
	650, 0, 0, 0, 220, 650, 0, 0, 650, 1501,
	0, 650, 650, 0, 0, 213, 1360, 650, 0, 0,
	0, 0, 0, 0, 214, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1390, 0, 0,
	0, 3075, 0, 0, 0, 0, 1536, 0, 0, 0,
	3076, 0, 0, 0, 0, 0, 0, 0, 0, 1390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 2187, 0,
	0, 0, 0, 2642, 2642, 250, 3990, 1368, 0, 1365,
	2642, 0, 0, 3203, 0, 0, 0, 0, 0, 2207,
	0, 2642, 3203, 0, 2642, 3203, 0, 0, 3203, 0,
	0, 2219, 0, 2221, 0, 2223, 0, 2225, 0, 2226,
	0, 250, 250, 1368, 250, 0, 0, 0, 0, 0,
	0, 0, 3066, 4022, 0, 0, 0, 0, 2111, 0,
	0, 0, 0, 0, 1368, 250, 0, 1390, 0, 0,
	1390, 0, 1353, 0, 0, 0, 0, 2248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2642, 0, 3271,
	2642, 1368, 0, 0, 2642, 2642, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3077, 3081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 250,
	3298, 0, 0, 3300, 2642, 0, 0, 250, 0, 0,
	0, 250, 0, 1445, 3076, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 2798, 0, 0, 1353, 0, 250, 0, 0,
	2642, 1341, 650, 0, 0, 1341, 0, 0, 0, 2642,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 250, 250, 0, 0, 0, 0, 4148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 2798, 0,
	0, 2798, 0, 0, 0, 0, 0, 0, 0, 0,
	3072, 3073, 3074, 0, 0, 0, 0, 3071, 3069, 3070,
	3062, 3063, 3064, 3065, 3067, 3068, 0, 0, 3283, 0,
	0, 1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 0, 0, 0, 0, 3410, 0, 0, 1353,
	250, 0, 250, 1733, 1728, 0, 0, 0, 3314, 0,
	0, 1700, 0, 0, 0, 0, 3077, 0, 0, 3321,
	1746, 0, 0, 0, 0, 2571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 1012, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3372, 3373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2111, 0,
	0, 0, 3473, 0, 0, 0, 0, 2117, 0, 0,
	0, 0, 0, 1365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3113, 0, 0, 0,
	0, 0, 0, 0, 2505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 1723, 1724,
	1725, 0, 0, 0, 3072, 3073, 3074, 1705, 3139, 0,
	0, 3071, 3069, 3070, 3062, 3063, 3064, 3065, 3067, 3068,
	0, 0, 0, 3152, 0, 0, 0, 0, 0, 2501,
	0, 2505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 3170, 1747, 0, 0, 0, 0,
	0, 1727, 1729, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 1697, 1698, 0, 0, 0, 0, 1743, 0,
	1744, 250, 250, 0, 0, 0, 2501, 1714, 1715, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 0, 0,
	0, 0, 1700, 650, 650, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 2105, 0, 0, 0, 1390, 1390, 0, 0, 2117,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 1390,
	1390, 1390, 0, 0, 0, 0, 0, 1719, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	2821, 1745, 0, 1501, 0, 0, 0, 1501, 3596, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2505, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 2873, 3430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3152, 0, 0,
	0, 0, 0, 0, 0, 2883, 0, 2886, 1722, 1723,
	1724, 1725, 250, 0, 0, 0, 0, 0, 1705, 0,
	2501, 1726, 0, 1341, 0, 0, 0, 0, 0, 0,
	1368, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 250, 0, 0, 0, 0, 2910, 1360, 2912,
	1360, 0, 250, 2916, 0, 0, 0, 0, 0, 0,
	0, 250, 1727, 1729, 0, 0, 250, 1738, 0, 0,
	250, 0, 0, 1026, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 1362, 0, 0, 1501, 0, 1714, 1715,
	2642, 250, 0, 0, 2944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2844, 2844, 0, 0, 0, 0, 840, 840, 2642, 0,
	1720, 2798, 2798, 0, 0, 840, 2642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1095,
	0, 0, 0, 1356, 0, 250, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 3645, 0, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 1365, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 0, 0, 0, 0, 3782,
	0, 0, 0, 3781, 0, 0, 0, 0, 0, 0,
	0, 1012, 0, 0, 0, 1012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3774, 0, 0, 3452, 0,
	0, 0, 0, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 3468, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	3713, 3714, 3715, 1392, 0, 1398, 0, 1404, 0, 0,
	0, 0, 1721, 0, 0, 0, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 1390, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2642, 2642, 2642, 0,
	0, 0, 0, 1526, 0, 0, 0, 3847, 0, 3847,
	3596, 1390, 0, 0, 0, 0, 0, 0, 0, 2642,
	1544, 3203, 1549, 0, 1390, 1390, 250, 1368, 0, 0,
	0, 1186, 1558, 0, 1563, 0, 0, 0, 1368, 250,
	1368, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2642, 0, 2642, 250, 0, 0, 3559,
	0, 0, 0, 0, 1717, 1713, 0, 1710, 1708, 1709,
	1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0, 0,
	2642, 0, 0, 0, 0, 3917, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 1622, 0, 3194,
	1628, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3596, 3236, 3238, 1390, 2117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 0, 0,
	0, 0, 0, 0, 0, 1341, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 0, 0, 1697, 1698, 0, 2642, 0,
	3203, 3311, 0, 4016, 0, 3315, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 3596, 1728, 0,
	0, 0, 0, 1697, 1698, 1700, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 0, 0, 0, 1697, 1698,
	0, 700, 3962, 0, 3964, 1733, 1728, 0, 0, 0,
	1353, 1501, 1341, 1700, 0, 1360, 1360, 0, 0, 0,
	1699, 1728, 1746, 0, 1368, 250, 0, 0, 1700, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3376, 0, 0, 4016, 0, 0, 0, 1699, 0,
	0, 0, 2642, 1839, 1839, 1839, 0, 0, 1719, 0,
	0, 0, 0, 1699, 4097, 0, 0, 1716, 0, 0,
	0, 0, 0, 1719, 0, 0, 1390, 0, 0, 0,
	0, 1341, 1716, 0, 0, 0, 4009, 0, 3596, 3596,
	0, 0, 0, 0, 3413, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 250, 1341, 0, 0,
	0, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 3473,
	3425, 0, 0, 1012, 0, 0, 0, 0, 0, 1722,
	1723, 1724, 1725, 0, 0, 0, 0, 0, 0, 1705,
	4016, 0, 0, 0, 1722, 1723, 1724, 1725, 0, 0,
	0, 0, 0, 0, 1705, 1727, 1729, 4070, 0, 0,
	3847, 0, 0, 0, 0, 0, 3809, 3596, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 1747, 0, 0,
	0, 0, 0, 1727, 1729, 0, 0, 0, 250, 0,
	3819, 0, 0, 0, 0, 0, 0, 0, 1727, 1729,
	1743, 0, 1744, 0, 1341, 0, 0, 3917, 0, 1714,
	1715, 0, 0, 1720, 0, 0, 0, 0, 0, 3596,
	0, 250, 3596, 0, 1714, 1715, 0, 1735, 0, 0,
	0, 0, 3203, 0, 0, 1186, 0, 0, 0, 1186,
	0, 1720, 0, 1186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 0, 1390, 0,
	1390, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 4252,
	0, 0, 0, 0, 0, 0, 1390, 0, 0, 0,
	0, 250, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 1186, 0, 0, 1721, 1186, 0, 0, 0,
	1255, 0, 0, 1726, 3473, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 1525, 1525, 0, 0, 1726, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	3982, 1525, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1390, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	0, 3982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4016, 0, 0, 2302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2117, 0, 2642, 0,
	0, 0, 0, 0, 0, 3596, 3673, 3596, 0, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	2117, 0, 0, 2302, 3688, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 1390, 0,
	1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704,
	1706, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2844, 0, 0, 0, 0, 0, 0, 0, 0, 2642,
	0, 2277, 0, 2281, 0, 0, 0, 0, 0, 3737,
	2295, 0, 0, 0, 2844, 0, 0, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 0, 2344, 0, 2346, 2347, 2348, 2349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 2388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2418, 2421,
	2424, 2427, 0, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	1186, 0, 1186, 0, 0, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 0, 1186, 0, 0,
	0, 2497, 0, 2508, 2510, 2515, 0, 1733, 1728, 0,
	0, 0, 0, 0, 1917, 1700, 0, 0, 1186, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 1186,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 1341, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3864, 1341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2117, 0, 0, 0, 0, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 2476, 2477, 2478, 2479, 2472, 2473, 2474, 2475,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	0, 1722, 1723, 1724, 1725, 0, 0, 0, 2117, 0,
	0, 1705, 0, 0, 0, 0, 0, 3933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 1747,
	0, 1186, 1186, 0, 0, 1727, 1729, 0, 0, 0,
	0, 1186, 2452, 2453, 2454, 2455, 0, 0, 0, 0,
	0, 0, 1743, 0, 1744, 0, 1341, 0, 0, 0,
	0, 1714, 1715, 0, 2464, 2465, 2466, 2467, 2460, 2461,
	2462, 2463, 2468, 2469, 2470, 2471, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 2761, 2762, 0,
	2764, 0, 0, 0, 0, 1341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 2448, 2449, 2450,
	2451, 2456, 2457, 2458, 2459, 4023, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 1698, 0, 0, 0, 0, 1186, 0, 1186, 0,
	1186, 0, 0, 0, 0, 0, 0, 0, 0, 2117,
	0, 0, 0, 1728, 0, 0, 1186, 1186, 0, 0,
	1700, 0, 0, 0, 0, 1726, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1186,
	0, 1186, 1186, 1186, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 2898,
	0, 1341, 0, 0, 1341, 1719, 0, 0, 0, 0,
	0, 1738, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4138,
	1360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3429, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 1723, 1724, 1725,
	0, 0, 0, 1341, 0, 0, 1705, 1917, 1917, 1186,
	0, 0, 0, 0, 0, 2947, 2948, 0, 1736, 0,
	0, 2954, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	2968, 2969, 0, 3011, 0, 0, 2388, 3012, 0, 0,
	1727, 1729, 0, 0, 0, 2976, 1697, 1698, 0, 1730,
	1731, 1732, 1740, 1741, 1742, 4212, 0, 0, 0, 0,
	0, 2990, 0, 0, 0, 0, 1714, 1715, 1733, 1728,
	0, 0, 0, 0, 0, 0, 1700, 0, 3002, 0,
	0, 0, 0, 0, 0, 1746, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 4260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1341, 1186, 0,
	1697, 1698, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 4294, 0, 1728, 0, 0, 0, 2515, 2515, 2515,
	1700, 1186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	3117, 0, 1722, 1723, 1724, 1725, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 1699, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 1719, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 4353,
	1721, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	1747, 0, 0, 0, 0, 0, 1727, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 1744, 0, 0, 0, 1012,
	0, 0, 1714, 1715, 0, 2953, 0, 0, 1186, 0,
	0, 0, 0, 1012, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 1722, 1723, 1724, 1725,
	0, 0, 0, 0, 1720, 0, 1705, 0, 0, 0,
	1917, 0, 0, 3221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 1745, 0, 0, 0,
	1727, 1729, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 1717, 1713, 1734, 1710, 1708, 1709, 1701, 1702,
	1703, 1704, 1706, 1707, 0, 0, 1714, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 0, 0, 0, 1059, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 1048, 105, 0, 0, 0, 249,
	249, 249, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 1186, 1186, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 740, 0, 1186, 0,
	0, 0, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	1726, 0, 1341, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713,
	0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707,
	0, 0, 0, 0, 2384, 2295, 0, 0, 2385, 0,
	0, 3427, 3428, 0, 987, 3431, 0, 0, 0, 3434,
	1341, 0, 0, 0, 0, 1007, 1182, 0, 3438, 1341,
	0, 0, 0, 0, 0, 0, 0, 3445, 0, 0,
	3117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1169, 0, 0, 0,
	0, 0, 0, 0, 0, 3480, 3481, 0, 3482, 3483,
	3484, 0, 0, 0, 0, 1341, 0, 0, 0, 0,
	0, 0, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702,
	1703, 1704, 1706, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3490, 0, 0, 0, 3492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3520, 3521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 3532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1341, 0, 1186, 1186, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	0, 0, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 1728, 0, 3582, 0, 0, 0, 0, 1700,
	1186, 0, 0, 0, 0, 1026, 0, 0, 1746, 0,
	3591, 0, 1186, 0, 0, 1186, 0, 0, 0, 0,
	0, 1341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1917, 0, 1699, 0, 1186, 0, 0, 3617,
	0, 0, 0, 0, 1719, 0, 0, 0, 0, 0,
	1186, 1186, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 1917,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 1723, 1724, 1725, 0,
	0, 0, 0, 1186, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	1186, 0, 0, 0, 0, 3706, 0, 0, 0, 1186,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	1737, 0, 0, 1747, 0, 0, 0, 0, 0, 1727,
	1729, 0, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 1186, 0, 1186, 1743, 0, 1744, 1186,
	0, 0, 0, 0, 0, 1714, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 1026, 1026, 1735, 0, 0, 0, 0, 1186, 0,
	0, 0, 0, 0, 0, 3752, 3753, 1720, 0, 0,
	0, 3757, 3758, 0, 1186, 0, 3761, 3762, 0, 0,
	0, 0, 0, 3766, 0, 0, 0, 0, 0, 249,
	0, 249, 249, 0, 3770, 249, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	3775, 740, 0, 0, 0, 0, 1186, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	249, 0, 0, 105, 0, 105, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 1186, 0, 0, 1186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 249, 0, 249, 249, 0, 0, 249,
	1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 1721,
	0, 0, 249, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 1728, 0, 0, 0, 0, 0, 0,
	1700, 3848, 0, 1917, 0, 1738, 0, 0, 0, 1746,
	0, 0, 0, 105, 0, 0, 0, 1007, 105, 105,
	1186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 105, 0, 0, 1699, 0, 1186, 0, 0,
	0, 0, 105, 0, 105, 1719, 0, 1917, 1917, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	1917, 1917, 1736, 0, 0, 105, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 0, 0, 2970, 1722, 1723, 1724, 1725,
	0, 1917, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 758, 0, 0, 0, 0, 0, 1186, 1186,
	3977, 3978, 3979, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 760, 0, 1747, 0, 0, 761, 0, 0,
	1727, 1729, 0, 2295, 0, 0, 3988, 3989, 0, 0,
	0, 1186, 0, 0, 987, 0, 0, 1743, 0, 1744,
	0, 0, 0, 0, 3997, 4000, 1714, 1715, 0, 0,
	0, 0, 0, 0, 1762, 0, 762, 0, 779, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 1773, 0, 0, 1720, 0,
	0, 0, 0, 763, 0, 1186, 0, 0, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4042, 0, 0, 0, 0, 0, 787, 0,
	0, 0, 4049, 0, 765, 1012, 0, 0, 0, 0,
	1745, 0, 0, 0, 4057, 0, 0, 785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 0, 1861, 0, 1182, 0, 0,
	0, 249, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 766, 0, 0, 767, 0, 249, 1861, 249, 0,
	0, 0, 0, 740, 1917, 789, 0, 0, 0, 726,
	740, 0, 0, 0, 0, 1859, 0, 1862, 0, 105,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 1186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 1186,
	1186, 1186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 788, 0, 0, 1186, 0, 4164, 0, 0,
	4167, 783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 768,
	0, 1012, 1012, 0, 0, 0, 0, 0, 0, 0,
	770, 0, 0, 1736, 0, 0, 0, 0, 1711, 1712,
	1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702,
	1703, 1704, 1706, 1707, 0, 249, 0, 0, 740, 0,
	771, 0, 3780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2295, 0, 0, 0, 0, 0, 0, 0, 0,
	4000, 0, 0, 0, 0, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 757, 0, 780, 0,
	0, 249, 1186, 0, 0, 249, 1186, 772, 1186, 0,
	1012, 0, 249, 0, 0, 1186, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 778, 1186, 249, 0, 249, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 773, 0, 0, 774,
	792, 0, 791, 0, 0, 0, 775, 1186, 0, 0,
	0, 4316, 4316, 4316, 0, 0, 0, 249, 0, 0,
	776, 0, 1697, 1698, 249, 784, 0, 0, 0, 0,
	0, 793, 0, 790, 1186, 0, 0, 0, 4337, 727,
	0, 0, 0, 1186, 0, 1728, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1186, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 249, 1699, 1186, 4316,
	0, 1007, 0, 1007, 0, 0, 0, 1719, 0, 1186,
	0, 0, 0, 0, 1186, 0, 1716, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 740, 249,
	0, 249, 0, 249, 0, 249, 0, 249, 0, 0,
	0, 1186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1186, 1186, 1186, 0, 0, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 0, 2946, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	817, 0, 0, 0, 0, 0, 0, 0, 1722, 1723,
	1724, 1725, 1186, 0, 0, 0, 0, 0, 1705, 0,
	800, 0, 0, 0, 0, 801, 0, 0, 0, 0,
	0, 4316, 4452, 1917, 0, 0, 0, 0, 0, 4456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1186, 0, 1186, 0, 0, 0, 0,
	0, 0, 1727, 1729, 802, 0, 0, 0, 0, 1186,
	0, 0, 0, 0, 987, 803, 0, 987, 987, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 1714, 1715,
	0, 0, 0, 0, 0, 0, 804, 0, 1917, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 823, 0, 1072, 0,
	1720, 0, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 2362, 0, 0, 805, 1186, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1007, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 806, 0,
	0, 1767, 0, 251, 251, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 1186, 0, 807,
	0, 0, 808, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 1182, 0, 1186, 1186, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 822, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 1917, 1169, 0, 0, 0, 0, 249, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 819,
	0, 0, 105, 0, 1186, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 1186,
	0, 0, 0, 1186, 0, 0, 0, 0, 810, 0,
	249, 0, 0, 1186, 1186, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 249, 829, 0, 811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 1717, 1713, 249, 1710, 1708, 1709,
	1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 0,
	812, 740, 0, 0, 827, 828, 825, 0, 0, 0,
	105, 0, 820, 0, 0, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 1697, 1698, 249, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 105, 0, 0, 105, 0,
	105, 0, 0, 0, 814, 821, 0, 1733, 1728, 0,
	0, 0, 0, 0, 815, 1700, 0, 0, 249, 0,
	0, 249, 0, 0, 1746, 249, 0, 249, 816, 0,
	0, 0, 0, 824, 249, 249, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 105, 0, 727, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 818, 0,
	1719, 0, 0, 0, 249, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 249, 0, 249, 0, 0, 255, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 249, 249, 249, 0,
	0, 249, 1186, 249, 1186, 0, 0, 0, 0, 0,
	0, 1722, 1723, 1724, 1725, 0, 0, 105, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 1737, 0, 0, 1747,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 2362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 1261, 251, 251, 0, 1261, 251,
	251, 0, 1261, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 1182, 0, 0, 0, 1261, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 1182, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 1733,
	1728, 1261, 0, 251, 251, 0, 0, 1700, 0, 0,
	0, 0, 1169, 0, 0, 0, 1746, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 251,
	251, 0, 1699, 251, 0, 1261, 0, 0, 0, 0,
	0, 1261, 1719, 0, 0, 1261, 251, 251, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 1064, 1261,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 0, 249, 249, 0, 249, 3443, 0, 0,
	0, 0, 1261, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 1723, 1724, 1725, 249, 0, 0,
	0, 0, 0, 1705, 0, 0, 105, 105, 0, 0,
	105, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 1747, 0, 0, 0, 0, 0, 1727, 1729, 105,
	105, 0, 0, 105, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 1743, 0, 1744, 0, 0, 0,
	0, 740, 0, 1714, 1715, 0, 0, 0, 0, 249,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 249, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 1169,
	0, 0, 1007, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 1258, 0, 0, 0, 1258, 0,
	0, 0, 1378, 0, 0, 0, 0, 1721, 249, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 0, 0,
	251, 251, 251, 1738, 0, 0, 1378, 251, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 0,
	0, 1378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1378, 0, 0, 0, 0,
	0, 1378, 0, 0, 0, 1378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 3014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1378, 1182, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	1261, 1261, 251, 1169, 1169, 0, 0, 0, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 0, 0, 0, 0, 251, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 251,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 1261, 0, 1261, 0, 1261,
	0, 0, 0, 249, 0, 0, 0, 0, 249, 0,
	0, 0, 249, 0, 0, 1261, 1261, 0, 0, 0,
	0, 0, 0, 0, 1259, 0, 1261, 251, 1259, 0,
	251, 0, 1379, 1182, 0, 0, 0, 0, 1261, 0,
	1261, 1261, 1261, 0, 0, 0, 0, 105, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 251, 0, 251, 1379, 251, 0, 251,
	0, 251, 0, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1258, 249, 0, 0,
	0, 1379, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 1378, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 1378, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1379, 0, 0, 0, 0,
	0, 1379, 1258, 0, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1379, 0, 0, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 0, 0, 0, 0, 1261, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 0, 0, 0, 1169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1378, 1378, 1861, 0, 0, 0, 0, 0, 0, 0,
	1258, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 249, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 105, 1861, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 1378, 0, 1378, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 1378, 1378, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 1378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 1378, 0,
	1378, 1378, 1378, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 1259, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	251, 1261, 0, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 0, 249, 0, 1261, 0, 0, 1379, 1861,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 1261, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	0, 0, 251, 0, 0, 251, 0, 0, 0, 251,
	0, 251, 0, 0, 0, 0, 0, 0, 251, 251,
	0, 0, 1261, 1261, 0, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1261, 0, 0,
	1861, 1861, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 1261, 0, 0, 0, 0, 249, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 251,
	0, 0, 2362, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 1258, 0, 0, 0, 0,
	1379, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	1259, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	251, 251, 251, 0, 0, 251, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	249, 0, 0, 0, 1258, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1258, 1861, 0, 249, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1379, 0, 1379, 0, 1379,
	0, 0, 0, 897, 0, 941, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 1379, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1379, 0, 0, 905,
	0, 0, 0, 0, 0, 0, 0, 1258, 1379, 0,
	1379, 1379, 1379, 0, 0, 919, 0, 903, 902, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	907, 105, 0, 0, 105, 949, 0, 0, 0, 0,
	0, 0, 0, 0, 916, 917, 0, 0, 0, 0,
	0, 1258, 0, 933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1378, 0, 249, 0, 942,
	909, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 910, 0, 0, 0,
	0, 0, 0, 0, 0, 940, 1378, 0, 1259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 912, 1861,
	0, 0, 0, 0, 0, 1261, 901, 0, 0, 0,
	0, 0, 1378, 1378, 0, 1378, 0, 0, 0, 1261,
	1261, 0, 0, 0, 913, 914, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 1378, 921, 920, 1259, 0, 0, 0, 0,
	0, 915, 0, 0, 0, 930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1261, 0, 0,
	0, 0, 0, 946, 0, 0, 0, 251, 251, 0,
	251, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 1261, 0, 943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1259, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 0,
	0, 0, 0, 1261, 0, 0, 0, 0, 0, 0,
	1259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 908, 1261, 0, 948, 0,
	0, 251, 1261, 0, 1261, 0, 0, 0, 1261, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	906, 0, 0, 251, 937, 938, 1261, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 939, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 935, 0, 0,
	0, 0, 0, 0, 947, 931, 0, 924, 922, 0,
	927, 0, 0, 251, 0, 0, 928, 251, 251, 899,
	0, 944, 0, 0, 0, 0, 0, 1259, 0, 0,
	0, 0, 0, 0, 0, 1261, 1261, 0, 0, 0,
	0, 0, 900, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 1261, 0, 926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	945, 0, 0, 0, 0, 0, 0, 0, 932, 0,
	0, 0, 0, 0, 0, 0, 0, 911, 0, 0,
	0, 1259, 0, 0, 1261, 0, 251, 1261, 251, 0,
	0, 934, 0, 0, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 936, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 1733, 1728, 0,
	0, 0, 0, 0, 0, 1700, 1379, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 1261, 0, 0, 1258,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 1379, 1379, 1258, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 0, 0, 0, 1258, 0, 0, 0, 0,
	0, 0, 1379, 0, 0, 0, 0, 0, 0, 1378,
	1378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 1747,
	0, 0, 1378, 0, 0, 1727, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1258,
	1261, 0, 1743, 0, 1744, 0, 0, 0, 1378, 0,
	0, 1714, 1715, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 1378, 0, 0, 0,
	0, 0, 1378, 1720, 1378, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1261, 1378, 1378, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 251, 0,
	0, 0, 0, 0, 0, 1726, 0, 251, 0, 0,
	0, 0, 251, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 1261, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 1258, 0, 0, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 1698, 0, 0,
	0, 1738, 1740, 1741, 1742, 0, 0, 0, 1261, 1261,
	1261, 0, 0, 0, 0, 0, 0, 1259, 0, 1728,
	0, 0, 0, 0, 1261, 0, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 251, 0, 1261, 0, 0, 0, 0, 0, 1259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1258,
	0, 1699, 0, 0, 1259, 1261, 0, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 1258, 0, 0, 0,
	1716, 0, 0, 0, 0, 1259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 1379,
	1379, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 3013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 1722, 1723, 1724, 1725, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1379, 0, 0, 1261, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 1259,
	1747, 0, 0, 0, 0, 0, 1727, 1729, 1379, 0,
	0, 1261, 0, 1379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1258, 0, 1714, 1715, 0, 0, 1379, 0, 0, 0,
	0, 0, 1379, 0, 1379, 0, 0, 0, 1259, 0,
	1735, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 1720, 251, 1379, 251, 0, 0,
	0, 0, 1261, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1261, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 1261, 251,
	0, 0, 0, 1261, 0, 1379, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 0, 0, 1378, 0, 0, 0, 0, 0,
	1261, 1261, 1261, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 1259, 1697, 1698, 1259, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 1721, 0, 0, 0,
	0, 1261, 1378, 0, 0, 0, 0, 1733, 1728, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	0, 0, 1738, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1378, 1378,
	1378, 0, 1261, 0, 1261, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1378, 0, 0, 0, 1261, 1259,
	1719, 0, 0, 0, 0, 0, 0, 251, 0, 1716,
	0, 0, 0, 1258, 0, 0, 1259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1261, 0, 0, 0, 0, 1736,
	0, 251, 0, 0, 0, 1261, 1261, 1739, 1717, 1713,
	0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707,
	0, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 1747,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 0,
	0, 251, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 1744, 1258, 0, 1258, 0, 0,
	0, 1714, 1715, 0, 0, 0, 0, 0, 0, 0,
	1259, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 1258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1258, 251, 1745, 0, 0, 0, 0,
	0, 0, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	1378, 1378, 1261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 1261, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1258, 1261,
	0, 0, 0, 1378, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 1698, 0, 1730,
	1731, 1732, 1740, 1741, 1742, 1721, 0, 0, 0, 0,
	1378, 1378, 1378, 0, 0, 0, 0, 251, 1733, 1728,
	0, 1258, 1379, 0, 0, 0, 1700, 0, 0, 0,
	0, 1738, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1258, 0, 251, 0, 0, 0, 0, 1379, 1379,
	1379, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 1379, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1258, 1259, 1378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 1259, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 1722, 1723, 1724, 1725, 0, 3010, 0, 0,
	0, 0, 1705, 0, 1258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1378, 1378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	1747, 0, 0, 0, 0, 0, 1727, 1729, 0, 0,
	0, 0, 0, 1258, 0, 0, 1378, 0, 0, 0,
	0, 0, 0, 1743, 0, 1744, 0, 0, 0, 0,
	0, 0, 1714, 1715, 0, 1259, 0, 1259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1259, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 1259, 0, 0, 0, 0, 0, 0,
	0, 0, 1259, 0, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1379, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1259, 0,
	0, 0, 1378, 1379, 0, 0, 1726, 0, 0, 0,
	0, 0, 1378, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1379, 1379, 1379, 0, 0, 0, 0, 0, 0, 0,
	0, 1259, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1259, 0, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713,
	0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 3009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1379, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1259, 0, 0, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1256,
	0, 0, 1379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1379, 1379, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 1262, 266, 267, 1263, 1264, 1265, 1379,
	1266, 592, 1267, 1268, 1269, 1270, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 1271, 597, 278, 279, 280, 281, 282, 283,
	1272, 1273, 0, 284, 598, 599, 600, 1274, 285, 286,
	601, 1275, 1342, 1276, 287, 288, 289, 290, 291, 292,
	293, 0, 1277, 295, 296, 297, 294, 298, 1278, 299,
	0, 300, 301, 302, 303, 304, 305, 1279, 306, 307,
	308, 1127, 309, 310, 1280, 1281, 1283, 1282, 1284, 1285,
	1286, 311, 312, 313, 314, 0, 315, 602, 603, 1287,
	319, 316, 317, 1288, 320, 318, 1289, 321, 322, 323,
	1290, 1291, 324, 325, 326, 1292, 327, 328, 1293, 329,
	330, 331, 1294, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 1295,
	256, 1296, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 1297, 350, 1298, 1299, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 1300, 361, 610, 1301, 611, 362, 1302, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 1130, 368, 369,
	1303, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 1304, 1129, 377, 615, 616, 1305, 617,
	1306, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	1307, 391, 393, 392, 1308, 394, 619, 1134, 395, 396,
	1135, 1309, 397, 0, 0, 0, 398, 399, 1310, 1311,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1312, 258, 1138, 440, 441, 1313,
	620, 442, 621, 444, 445, 1314, 0, 446, 0, 1315,
	1316, 448, 449, 450, 1317, 1318, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 1319, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	1320, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 1321, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 1322, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 1323, 523,
	524, 522, 525, 526, 527, 1324, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 1325, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 1326, 551, 552,
	0, 549, 1327, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 1328, 561, 633, 634, 635, 636, 1329, 570,
	1330, 562, 563, 564, 637, 565, 638, 1331, 566, 567,
	568, 569, 0, 571, 572, 1332, 1333, 573, 574, 575,
	577, 578, 576, 579, 1334, 580, 1335, 0, 581, 582,
	583, 639, 640, 641, 1336, 585, 584, 586, 642, 1337,
	1338, 1339, 1340, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1256, 0, 0, 0, 0, 0, 0,
	0, 2549, 0, 0, 0, 0, 0, 0, 0, 2550,
	259, 261, 260, 262, 263, 264, 265, 1262, 266, 267,
	1263, 1264, 1265, 0, 1266, 592, 1267, 1268, 1269, 1270,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 1271, 597, 278, 279,
	280, 281, 282, 283, 1272, 1273, 0, 284, 598, 599,
	600, 1274, 285, 286, 601, 1275, 1342, 1276, 287, 288,
	289, 290, 291, 292, 293, 0, 1277, 295, 296, 297,
	294, 298, 1278, 299, 0, 300, 301, 302, 303, 304,
	305, 1279, 306, 307, 308, 1127, 309, 310, 1280, 1281,
	1283, 1282, 1284, 1285, 1286, 311, 312, 313, 314, 0,
	315, 602, 603, 1287, 319, 316, 317, 1288, 320, 318,
	1289, 321, 322, 323, 1290, 1291, 324, 325, 326, 1292,
	327, 328, 1293, 329, 330, 331, 1294, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 1295, 256, 1296, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 1297, 350,
	1298, 1299, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 1300, 361, 610, 1301, 611,
	362, 1302, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 1130, 368, 369, 1303, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 1304, 1129, 377,
	615, 616, 1305, 617, 1306, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 1307, 391, 393, 392, 1308, 394,
	619, 1134, 395, 396, 1135, 1309, 397, 0, 0, 0,
	398, 399, 1310, 1311, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1312, 258,
	1138, 440, 441, 1313, 620, 442, 621, 444, 445, 1314,
	0, 446, 0, 1315, 1316, 448, 449, 450, 1317, 1318,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 1319, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 1320, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	1321, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 1322,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 1323, 523, 524, 522, 525, 526, 527, 1324,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 1325, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 1326, 551, 552, 0, 549, 1327, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 1328, 561, 633, 634,
	635, 636, 1329, 570, 1330, 562, 563, 564, 637, 565,
	638, 1331, 566, 567, 568, 569, 0, 571, 572, 1332,
	1333, 573, 574, 575, 577, 578, 576, 579, 1334, 580,
	1335, 0, 581, 582, 583, 639, 640, 641, 1336, 585,
	584, 586, 642, 1337, 1338, 1339, 1340, 587, 588, 643,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1256, 0, 0, 0, 0,
	3451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3453, 259, 261, 260, 262, 263, 264, 265, 1262,
	266, 267, 1263, 1264, 1265, 0, 1266, 592, 1267, 1268,
	1269, 1270, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 1271, 597,
	278, 279, 280, 281, 282, 283, 1272, 1273, 0, 284,
	598, 599, 600, 1274, 285, 286, 601, 1275, 1342, 1276,
	287, 288, 289, 290, 291, 292, 293, 0, 1277, 295,
	296, 297, 294, 298, 1278, 299, 0, 300, 301, 302,
	303, 304, 305, 1279, 306, 307, 308, 1127, 309, 310,
	1280, 1281, 1283, 1282, 1284, 1285, 1286, 311, 312, 313,
	314, 0, 315, 602, 603, 1287, 319, 316, 317, 1288,
	320, 318, 1289, 321, 322, 323, 1290, 1291, 324, 325,
	326, 1292, 327, 328, 1293, 329, 330, 331, 1294, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 1295, 256, 1296, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	1297, 350, 1298, 1299, 1128, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 1300, 361, 610,
	1301, 611, 362, 1302, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 1130, 368, 369, 1303, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 1304,
	1129, 377, 615, 616, 1305, 617, 1306, 379, 380, 1131,
	618, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 1307, 391, 393, 392,
	1308, 394, 619, 1134, 395, 396, 1135, 1309, 397, 0,
	0, 0, 398, 399, 1310, 1311, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1312, 258, 1138, 440, 441, 1313, 620, 442, 621, 444,
	445, 1314, 0, 446, 0, 1315, 1316, 448, 449, 450,
	1317, 1318, 451, 452, 622, 1139, 453, 1140, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	1319, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 1320, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 1321, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 1322, 500, 501, 502, 1141, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 1323, 523, 524, 522, 525, 526,
	527, 1324, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 1325, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 1326, 551, 552, 0, 549, 1327, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 1328, 561,
	633, 634, 635, 636, 1329, 570, 1330, 562, 563, 564,
	637, 565, 638, 1331, 566, 567, 568, 569, 0, 571,
	572, 1332, 1333, 573, 574, 575, 577, 578, 576, 579,
	1334, 580, 1335, 0, 581, 582, 583, 639, 640, 641,
	1336, 585, 584, 586, 642, 1337, 1338, 1339, 1340, 587,
	588, 643, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 1256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3808, 259, 261,
	260, 262, 263, 264, 265, 1262, 266, 267, 1263, 1264,
	1265, 0, 1266, 592, 1267, 1268, 1269, 1270, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 1271, 597, 278, 279, 280, 281,
	282, 283, 1272, 1273, 0, 284, 598, 599, 600, 1274,
	285, 286, 601, 1275, 1342, 1276, 287, 288, 289, 290,
	291, 292, 293, 0, 1277, 295, 296, 297, 294, 298,
	1278, 299, 0, 300, 301, 302, 303, 304, 305, 1279,
	306, 307, 308, 1127, 309, 310, 1280, 1281, 1283, 1282,
	1284, 1285, 1286, 311, 312, 313, 314, 0, 315, 602,
	603, 1287, 319, 316, 317, 1288, 320, 318, 1289, 321,
	322, 323, 1290, 1291, 324, 325, 326, 1292, 327, 328,
	1293, 329, 330, 331, 1294, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 1295, 256, 1296, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 1297, 350, 1298, 1299,
	1128, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 1300, 361, 610, 1301, 611, 362, 1302,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 1130,
	368, 369, 1303, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 1304, 1129, 377, 615, 616,
	1305, 617, 1306, 379, 380, 1131, 618, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 1307, 391, 393, 392, 1308, 394, 619, 1134,
	395, 396, 1135, 1309, 397, 0, 0, 0, 398, 399,
	1310, 1311, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1312, 258, 1138, 440,
	441, 1313, 620, 442, 621, 444, 445, 1314, 0, 446,
	0, 1315, 1316, 448, 449, 450, 1317, 1318, 451, 452,
	622, 1139, 453, 1140, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 1319, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 1320, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 1321, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 1322, 500, 501,
	502, 1141, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	1323, 523, 524, 522, 525, 526, 527, 1324, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 1325, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 1326,
	551, 552, 0, 549, 1327, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 1328, 561, 633, 634, 635, 636,
	1329, 570, 1330, 562, 563, 564, 637, 565, 638, 1331,
	566, 567, 568, 569, 0, 571, 572, 1332, 1333, 573,
	574, 575, 577, 578, 576, 579, 1334, 580, 1335, 0,
	581, 582, 583, 639, 640, 641, 1336, 585, 584, 586,
	642, 1337, 1338, 1339, 1340, 587, 588, 643, 589, 590,
	591, 0, 1256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3983, 259,
	261, 260, 262, 263, 264, 265, 1262, 266, 267, 1263,
	1264, 1265, 0, 1266, 592, 1267, 1268, 1269, 1270, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 1271, 597, 278, 279, 280,
	281, 282, 283, 1272, 1273, 0, 284, 598, 599, 600,
	1274, 285, 286, 601, 1275, 1342, 1276, 287, 288, 289,
	290, 291, 292, 293, 0, 1277, 295, 296, 297, 294,
	298, 1278, 299, 0, 300, 301, 302, 303, 304, 305,
	1279, 306, 307, 308, 1127, 309, 310, 1280, 1281, 1283,
	1282, 1284, 1285, 1286, 311, 312, 313, 314, 0, 315,
	602, 603, 1287, 319, 316, 317, 1288, 320, 318, 1289,
	321, 322, 323, 1290, 1291, 324, 325, 326, 1292, 327,
	328, 1293, 329, 330, 331, 1294, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 1295, 256, 1296, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 1297, 350, 1298,
	1299, 1128, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 1300, 361, 610, 1301, 611, 362,
	1302, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	1130, 368, 369, 1303, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 1304, 1129, 377, 615,
	616, 1305, 617, 1306, 379, 380, 1131, 618, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 1307, 391, 393, 392, 1308, 394, 619,
	1134, 395, 396, 1135, 1309, 397, 0, 0, 0, 398,
	399, 1310, 1311, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1312, 258, 1138,
	440, 441, 1313, 620, 442, 621, 444, 445, 1314, 0,
	446, 0, 1315, 1316, 448, 449, 450, 1317, 1318, 451,
	452, 622, 1139, 453, 1140, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 1319, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 1320, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 1321,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 1322, 500,
	501, 502, 1141, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 1323, 523, 524, 522, 525, 526, 527, 1324, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 1325, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	1326, 551, 552, 0, 549, 1327, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 1328, 561, 633, 634, 635,
	636, 1329, 570, 1330, 562, 563, 564, 637, 565, 638,
	1331, 566, 567, 568, 569, 0, 571, 572, 1332, 1333,
	573, 574, 575, 577, 578, 576, 579, 1334, 580, 1335,
	0, 581, 582, 583, 639, 640, 641, 1336, 585, 584,
	586, 642, 1337, 1338, 1339, 1340, 587, 588, 643, 589,
	590, 591, 0, 1256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3872,
	259, 261, 260, 262, 263, 264, 265, 1262, 266, 267,
	1263, 1264, 1265, 0, 1266, 592, 1267, 1268, 1269, 1270,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 1271, 597, 278, 279,
	280, 281, 282, 283, 1272, 1273, 0, 284, 598, 599,
	600, 1274, 285, 286, 601, 1275, 1342, 1276, 287, 288,
	289, 290, 291, 292, 293, 0, 1277, 295, 296, 297,
	294, 298, 1278, 299, 0, 300, 301, 302, 303, 304,
	305, 1279, 306, 307, 308, 1127, 309, 310, 1280, 1281,
	1283, 1282, 1284, 1285, 1286, 311, 312, 313, 314, 0,
	315, 602, 603, 1287, 319, 316, 317, 1288, 320, 318,
	1289, 321, 322, 323, 1290, 1291, 324, 325, 326, 1292,
	327, 328, 1293, 329, 330, 331, 1294, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 1295, 256, 1296, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 1297, 350,
	1298, 1299, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 1300, 361, 610, 1301, 611,
	362, 1302, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 1130, 368, 369, 1303, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 1304, 1129, 377,
	615, 616, 1305, 617, 1306, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 1307, 391, 393, 392, 1308, 394,
	619, 1134, 395, 396, 1135, 1309, 397, 0, 0, 0,
	398, 399, 1310, 1311, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1312, 258,
	1138, 440, 441, 1313, 620, 442, 621, 444, 445, 1314,
	0, 446, 0, 1315, 1316, 448, 449, 450, 1317, 1318,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 1319, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 1320, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	1321, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 1322,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 1323, 523, 524, 522, 525, 526, 527, 1324,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 1325, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 1326, 551, 552, 0, 549, 1327, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 1328, 561, 633, 634,
	635, 636, 1329, 570, 1330, 562, 563, 564, 637, 565,
	638, 1331, 566, 567, 568, 569, 0, 571, 572, 1332,
	1333, 573, 574, 575, 577, 578, 576, 579, 1334, 580,
	1335, 0, 581, 582, 583, 639, 640, 641, 1336, 585,
	584, 586, 642, 1337, 1338, 1339, 1340, 587, 588, 643,
	589, 590, 591, 0, 1256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3738, 259, 261, 260, 262, 263, 264, 265, 1262, 266,
	267, 1263, 1264, 1265, 0, 1266, 592, 1267, 1268, 1269,
	1270, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 1271, 597, 278,
	279, 280, 281, 282, 283, 1272, 1273, 0, 284, 598,
	599, 600, 1274, 285, 286, 601, 1275, 1342, 1276, 287,
	288, 289, 290, 291, 292, 293, 0, 1277, 295, 296,
	297, 294, 298, 1278, 299, 0, 300, 301, 302, 303,
	304, 305, 1279, 306, 307, 308, 1127, 309, 310, 1280,
	1281, 1283, 1282, 1284, 1285, 1286, 311, 312, 313, 314,
	0, 315, 602, 603, 1287, 319, 316, 317, 1288, 320,
	318, 1289, 321, 322, 323, 1290, 1291, 324, 325, 326,
	1292, 327, 328, 1293, 329, 330, 331, 1294, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 1295, 256, 1296, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 1297,
	350, 1298, 1299, 1128, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 1300, 361, 610, 1301,
	611, 362, 1302, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 1130, 368, 369, 1303, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 1304, 1129,
	377, 615, 616, 1305, 617, 1306, 379, 380, 1131, 618,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 1307, 391, 393, 392, 1308,
	394, 619, 1134, 395, 396, 1135, 1309, 397, 0, 0,
	0, 398, 399, 1310, 1311, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 1312,
	258, 1138, 440, 441, 1313, 620, 442, 621, 444, 445,
	1314, 0, 446, 0, 1315, 1316, 448, 449, 450, 1317,
	1318, 451, 452, 622, 1139, 453, 1140, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 1319,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 1320, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 1321, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	1322, 500, 501, 502, 1141, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 1323, 523, 524, 522, 525, 526, 527,
	1324, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 1325, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 1326, 551, 552, 0, 549, 1327, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 1328, 561, 633,
	634, 635, 636, 1329, 570, 1330, 562, 563, 564, 637,
	565, 638, 1331, 566, 567, 568, 569, 0, 571, 572,
	1332, 1333, 573, 574, 575, 577, 578, 576, 579, 1334,
	580, 1335, 0, 581, 582, 583, 639, 640, 641, 1336,
	585, 584, 586, 642, 1337, 1338, 1339, 1340, 587, 588,
	643, 589, 590, 591, 0, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3469, 259, 261, 260, 262, 263, 264, 265, 1262,
	266, 267, 1263, 1264, 1265, 0, 1266, 592, 1267, 1268,
	1269, 1270, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 1271, 597,
	278, 279, 280, 281, 282, 283, 1272, 1273, 0, 284,
	598, 599, 600, 1274, 285, 286, 601, 1275, 1342, 1276,
	287, 288, 289, 290, 291, 292, 293, 0, 1277, 295,
	296, 297, 294, 298, 1278, 299, 0, 300, 301, 302,
	303, 304, 305, 1279, 306, 307, 308, 1127, 309, 310,
	1280, 1281, 1283, 1282, 1284, 1285, 1286, 311, 312, 313,
	314, 0, 315, 602, 603, 1287, 319, 316, 317, 1288,
	320, 318, 1289, 321, 322, 323, 1290, 1291, 324, 325,
	326, 1292, 327, 328, 1293, 329, 330, 331, 1294, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 1295, 256, 1296, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	1297, 350, 1298, 1299, 1128, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 1300, 361, 610,
	1301, 611, 362, 1302, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 1130, 368, 369, 1303, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 1304,
	1129, 377, 615, 616, 1305, 617, 1306, 379, 380, 1131,
	618, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 1307, 391, 393, 392,
	1308, 394, 619, 1134, 395, 396, 1135, 1309, 397, 0,
	0, 0, 398, 399, 1310, 1311, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1312, 258, 1138, 440, 441, 1313, 620, 442, 621, 444,
	445, 1314, 0, 446, 0, 1315, 1316, 448, 449, 450,
	1317, 1318, 451, 452, 622, 1139, 453, 1140, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	1319, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 1320, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 1321, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 1322, 500, 501, 502, 1141, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 1323, 523, 524, 522, 525, 526,
	527, 1324, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 1325, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 1326, 551, 552, 0, 549, 1327, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 1328, 561,
	633, 634, 635, 636, 1329, 570, 1330, 562, 563, 564,
	637, 565, 638, 1331, 566, 567, 568, 569, 0, 571,
	572, 1332, 1333, 573, 574, 575, 577, 578, 576, 579,
	1334, 580, 1335, 0, 581, 582, 583, 639, 640, 641,
	1336, 585, 584, 586, 642, 1337, 1338, 1339, 1340, 587,
	588, 643, 589, 590, 591, 0, 1256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3296, 259, 261, 260, 262, 263, 264, 265,
	1262, 266, 267, 1263, 1264, 1265, 0, 1266, 592, 1267,
	1268, 1269, 1270, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 1271,
	597, 278, 279, 280, 281, 282, 283, 1272, 1273, 0,
	284, 598, 599, 600, 1274, 285, 286, 601, 1275, 1342,
	1276, 287, 288, 289, 290, 291, 292, 293, 0, 1277,
	295, 296, 297, 294, 298, 1278, 299, 0, 300, 301,
	302, 303, 304, 305, 1279, 306, 307, 308, 1127, 309,
	310, 1280, 1281, 1283, 1282, 1284, 1285, 1286, 311, 312,
	313, 314, 0, 315, 602, 603, 1287, 319, 316, 317,
	1288, 320, 318, 1289, 321, 322, 323, 1290, 1291, 324,
	325, 326, 1292, 327, 328, 1293, 329, 330, 331, 1294,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 1295, 256, 1296, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 1297, 350, 1298, 1299, 1128, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 1300, 361,
	610, 1301, 611, 362, 1302, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 1130, 368, 369, 1303, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	1304, 1129, 377, 615, 616, 1305, 617, 1306, 379, 380,
	1131, 618, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 1307, 391, 393,
	392, 1308, 394, 619, 1134, 395, 396, 1135, 1309, 397,
	0, 0, 0, 398, 399, 1310, 1311, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1312, 258, 1138, 440, 441, 1313, 620, 442, 621,
	444, 445, 1314, 0, 446, 0, 1315, 1316, 448, 449,
	450, 1317, 1318, 451, 452, 622, 1139, 453, 1140, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 1319, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 1320, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 1321, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 1322, 500, 501, 502, 1141, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 1323, 523, 524, 522, 525,
	526, 527, 1324, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 1325,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 1326, 551, 552, 0, 549, 1327,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 1328,
	561, 633, 634, 635, 636, 1329, 570, 1330, 562, 563,
	564, 637, 565, 638, 1331, 566, 567, 568, 569, 0,
	571, 572, 1332, 1333, 573, 574, 575, 577, 578, 576,
	579, 1334, 580, 1335, 0, 581, 582, 583, 639, 640,
	641, 1336, 585, 584, 586, 642, 1337, 1338, 1339, 1340,
	587, 588, 643, 589, 590, 591, 0, 1256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2408, 259, 261, 260, 262, 263, 264,
	265, 1262, 266, 267, 1263, 1264, 1265, 0, 1266, 592,
	1267, 1268, 1269, 1270, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	1271, 597, 278, 279, 280, 281, 282, 283, 1272, 1273,
	0, 284, 598, 599, 600, 1274, 285, 286, 601, 1275,
	1342, 1276, 287, 288, 289, 290, 291, 292, 293, 0,
	1277, 295, 296, 297, 294, 298, 1278, 299, 0, 300,
	301, 302, 303, 304, 305, 1279, 306, 307, 308, 1127,
	309, 310, 1280, 1281, 1283, 1282, 1284, 1285, 1286, 311,
	312, 313, 314, 0, 315, 602, 603, 1287, 319, 316,
	317, 1288, 320, 318, 1289, 321, 322, 323, 1290, 1291,
	324, 325, 326, 1292, 327, 328, 1293, 329, 330, 331,
	1294, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 1295, 256, 1296,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 1297, 350, 1298, 1299, 1128, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 1300,
	361, 610, 1301, 611, 362, 1302, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 1130, 368, 369, 1303, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 1304, 1129, 377, 615, 616, 1305, 617, 1306, 379,
	380, 1131, 618, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 1307, 391,
	393, 392, 1308, 394, 619, 1134, 395, 396, 1135, 1309,
	397, 0, 0, 0, 398, 399, 1310, 1311, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1312, 258, 1138, 440, 441, 1313, 620, 442,
	621, 444, 445, 1314, 0, 446, 0, 1315, 1316, 448,
	449, 450, 1317, 1318, 451, 452, 622, 1139, 453, 1140,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 1319, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 1320, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 1321, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 1322, 500, 501, 502, 1141, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 1323, 523, 524, 522,
	525, 526, 527, 1324, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	1325, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 1326, 551, 552, 0, 549,
	1327, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	1328, 561, 633, 634, 635, 636, 1329, 570, 1330, 562,
	563, 564, 637, 565, 638, 1331, 566, 567, 568, 569,
	0, 571, 572, 1332, 1333, 573, 574, 575, 577, 578,
	576, 579, 1334, 580, 1335, 0, 581, 582, 583, 639,
	640, 641, 1336, 585, 584, 586, 642, 1337, 1338, 1339,
	1340, 587, 588, 643, 589, 590, 591, 1354, 0, 1256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 259, 261, 260, 262,
	263, 264, 265, 1262, 266, 267, 1263, 1264, 1265, 0,
	1266, 592, 1267, 1268, 1269, 1270, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 1271, 597, 278, 279, 280, 281, 282, 283,
	1272, 1273, 0, 284, 598, 599, 600, 1274, 285, 286,
	601, 1275, 1342, 1276, 287, 288, 289, 290, 291, 292,
	293, 0, 1277, 295, 296, 297, 294, 298, 1278, 299,
	0, 300, 301, 302, 303, 304, 305, 1279, 306, 307,
	308, 1127, 309, 310, 1280, 1281, 1283, 1282, 1284, 1285,
	1286, 311, 312, 313, 314, 0, 315, 602, 603, 1287,
	319, 316, 317, 1288, 320, 318, 1289, 321, 322, 323,
	1290, 1291, 324, 325, 326, 1292, 327, 328, 1293, 329,
	330, 331, 1294, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 1295,
	256, 1296, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 1297, 350, 1298, 1299, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 1300, 361, 610, 1301, 611, 362, 1302, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 1130, 368, 369,
	1303, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 1304, 1129, 377, 615, 616, 1305, 617,
	1306, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	1307, 391, 393, 392, 1308, 394, 619, 1134, 395, 396,
	1135, 1309, 397, 0, 0, 0, 398, 399, 1310, 1311,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1312, 258, 1138, 440, 441, 1313,
	620, 442, 621, 444, 445, 1314, 0, 446, 0, 1315,
	1316, 448, 449, 450, 1317, 1318, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 1319, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	1320, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 1321, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 1322, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 1323, 523,
	524, 522, 525, 526, 527, 1324, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 1325, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 1326, 551, 552,
	0, 549, 1327, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 1328, 561, 633, 634, 635, 636, 1329, 570,
	1330, 562, 563, 564, 637, 565, 638, 1331, 566, 567,
	568, 569, 0, 571, 572, 1332, 1333, 573, 574, 575,
	577, 578, 576, 579, 1334, 580, 1335, 0, 581, 582,
	583, 639, 640, 641, 1336, 585, 584, 586, 642, 1337,
	1338, 1339, 1340, 587, 588, 643, 589, 590, 591, 1253,
	0, 1256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 1262, 266, 267, 1263, 1264,
	1265, 0, 1266, 592, 1267, 1268, 1269, 1270, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 1271, 597, 278, 279, 280, 281,
	282, 283, 1272, 1273, 0, 284, 598, 599, 600, 1274,
	285, 286, 601, 1275, 1342, 1276, 287, 288, 289, 290,
	291, 292, 293, 0, 1277, 295, 296, 297, 294, 298,
	1278, 299, 0, 300, 301, 302, 303, 304, 305, 1279,
	306, 307, 308, 1127, 309, 310, 1280, 1281, 1283, 1282,
	1284, 1285, 1286, 311, 312, 313, 314, 0, 315, 602,
	603, 1287, 319, 316, 317, 1288, 320, 318, 1289, 321,
	322, 323, 1290, 1291, 324, 325, 326, 1292, 327, 328,
	1293, 329, 330, 331, 1294, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 1295, 256, 1296, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 1297, 350, 1298, 1299,
	1128, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 1300, 361, 610, 1301, 611, 362, 1302,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 1130,
	368, 369, 1303, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 1304, 1129, 377, 615, 616,
	1305, 617, 1306, 379, 380, 1131, 618, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 1307, 391, 393, 392, 1308, 394, 619, 1134,
	395, 396, 1135, 1309, 397, 0, 0, 0, 398, 399,
	1310, 1311, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1312, 258, 1138, 440,
	441, 1313, 620, 442, 621, 444, 445, 1314, 0, 446,
	0, 1315, 1316, 448, 449, 450, 1317, 1318, 451, 452,
	622, 1139, 453, 1140, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 1319, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 1320, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 1321, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 1322, 500, 501,
	502, 1141, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	1323, 523, 524, 522, 525, 526, 527, 1324, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 1325, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 1326,
	551, 552, 0, 549, 1327, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 1328, 561, 633, 634, 635, 636,
	1329, 570, 1330, 562, 563, 564, 637, 565, 638, 1331,
	566, 567, 568, 569, 0, 571, 572, 1332, 1333, 573,
	574, 575, 577, 578, 576, 579, 1334, 580, 1335, 0,
	581, 582, 583, 639, 640, 641, 1336, 585, 584, 586,
	642, 1337, 1338, 1339, 1340, 587, 588, 643, 589, 590,
	591, 1256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 1262, 266, 267, 1263, 1264,
	1265, 0, 1266, 592, 1267, 1268, 1269, 1270, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 1271, 597, 278, 279, 280, 281,
	282, 283, 1272, 1273, 0, 284, 598, 599, 600, 1274,
	285, 286, 601, 1275, 1342, 1276, 287, 288, 289, 290,
	291, 292, 293, 0, 1277, 295, 296, 297, 294, 298,
	1278, 299, 0, 300, 301, 302, 303, 304, 305, 1279,
	306, 307, 308, 1127, 309, 310, 1280, 1281, 1283, 1282,
	1284, 1285, 1286, 311, 312, 313, 314, 0, 315, 602,
	603, 1287, 319, 316, 317, 1288, 320, 318, 1289, 321,
	322, 323, 1290, 1291, 324, 325, 326, 1292, 327, 328,
	1293, 329, 330, 331, 1294, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 1295, 256, 1296, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 1297, 350, 1298, 1299,
	1128, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 1300, 361, 610, 1301, 611, 362, 1302,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 1130,
	368, 369, 1303, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 1304, 1129, 377, 615, 616,
	1305, 617, 1306, 379, 380, 1131, 618, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 1307, 391, 393, 392, 1308, 394, 619, 1134,
	395, 396, 1135, 1309, 397, 0, 0, 0, 398, 399,
	1310, 1311, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1312, 258, 1138, 440,
	441, 1313, 620, 442, 621, 444, 445, 1314, 0, 446,
	0, 1315, 1316, 448, 449, 450, 1317, 1318, 451, 452,
	622, 1139, 453, 1140, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 1319, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 1320, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 1321, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 1322, 500, 501,
	502, 1141, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	1323, 523, 524, 522, 525, 526, 527, 1324, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 1325, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 1326,
	551, 552, 0, 549, 1327, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 1328, 561, 633, 634, 635, 636,
	1329, 570, 1330, 562, 563, 564, 637, 565, 638, 1331,
	566, 567, 568, 569, 0, 571, 572, 1332, 1333, 573,
	574, 575, 577, 578, 576, 579, 1334, 580, 1335, 0,
	581, 582, 583, 639, 640, 641, 1336, 585, 584, 586,
	642, 1337, 1338, 1339, 1340, 587, 588, 643, 589, 590,
	591, 2383, 0, 1062, 1034, 1035, 1036, 1032, 1033, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 2380, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 0, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	315, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 2381, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 1051,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 571, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 639, 1107, 1144, 2379, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1021, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	2382, 0, 0, 0, 0, 0, 0, 1046, 2378, 0,
	1008, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 219, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 221, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 1534, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 213, 587, 588, 643, 589,
	590, 591, 1021, 0, 214, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 1062,
	1034, 1035, 1036, 1032, 1033, 1045, 1772, 1770, 0, 0,
	1044, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 1086, 1050, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 1099, 0, 276, 1106,
	277, 1105, 0, 1116, 278, 279, 280, 281, 282, 283,
	1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285, 286,
	1092, 0, 1073, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077,
	1081, 311, 312, 313, 314, 1109, 315, 1103, 1102, 1023,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 1094, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 1029, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 1117, 1118, 345, 1041,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 1101,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 1114, 1115, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 1124, 0, 1051, 362, 0, 363, 364,
	365, 366, 367, 1087, 1088, 1091, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 1129, 377, 1096, 1097, 0, 1057,
	0, 379, 380, 1131, 1089, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 1125, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 1080, 1079,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1020, 258, 1138, 440, 441, 1042,
	1090, 442, 1104, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 1119, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 1120, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 1100, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 1030, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 219, 523,
	524, 522, 525, 526, 527, 1083, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 1098,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	1145, 544, 545, 546, 547, 1121, 550, 0, 551, 552,
	1018, 549, 221, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 1110, 1111, 1112, 1113, 0, 570,
	0, 562, 563, 564, 1122, 565, 1123, 1040, 566, 567,
	568, 569, 0, 571, 572, 0, 1024, 573, 574, 575,
	577, 578, 576, 579, 1084, 580, 0, 0, 581, 582,
	583, 1534, 1107, 1144, 0, 585, 584, 586, 642, 0,
	0, 0, 213, 587, 588, 643, 589, 590, 591, 1021,
	0, 214, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 1015, 1016, 1062, 1034, 1035, 1036,
	1032, 1033, 1045, 1772, 2966, 0, 0, 1044, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 1050,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 1099, 0, 276, 1106, 277, 1105, 0,
	1116, 278, 279, 280, 281, 282, 283, 1052, 1085, 1019,
	284, 1146, 1147, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 1109, 315, 1103, 1102, 1023, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	1094, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 1029, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 1041, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 1101, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 1114, 1115,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 1051, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 1096, 1097, 0, 1057, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 1100, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 1030, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 219, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 1098, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 1145, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 1018, 549, 221,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 1110, 1111, 1112, 1113, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 1040, 566, 567, 568, 569, 0,
	571, 572, 0, 1024, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 1534, 1107,
	1144, 0, 585, 584, 586, 642, 0, 0, 0, 213,
	587, 588, 643, 589, 590, 591, 1021, 0, 214, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033, 1045,
	1772, 1770, 0, 0, 1044, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 2511, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	315, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 2516, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 1051,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 2512, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 2513, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 571, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 639, 1107, 1144, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1021, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	2428, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 0,
	0, 0, 0, 0, 0, 0, 1046, 2426, 0, 2425,
	1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1021, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 1015, 1016, 0, 0,
	0, 0, 0, 0, 0, 1046, 2423, 0, 2422, 1044,
	1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 1086, 1050, 0, 0, 0, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 593, 1099, 0, 276,
	1106, 277, 1105, 0, 1116, 278, 279, 280, 281, 282,
	283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285,
	286, 1092, 0, 1073, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078,
	1077, 1081, 311, 312, 313, 314, 1109, 315, 1103, 1102,
	1023, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 1094, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 1029, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 1117, 1118, 345,
	1041, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	1101, 0, 0, 0, 349, 0, 350, 0, 0, 1128,
	351, 352, 1114, 1115, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 1124, 0, 1051, 362, 0, 363,
	364, 365, 366, 367, 1087, 1088, 1091, 443, 1130, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 1129, 377, 1096, 1097, 0,
	1057, 0, 379, 380, 1131, 1089, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 1125, 1134, 395,
	396, 1135, 0, 397, 0, 0, 0, 398, 399, 1080,
	1079, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 1020, 258, 1138, 440, 441,
	1042, 1090, 442, 1104, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	1139, 453, 1140, 1119, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 1120, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 1100, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	1141, 503, 504, 505, 506, 1030, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 1083, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	1098, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 1145, 544, 545, 546, 547, 1121, 550, 0, 551,
	552, 1018, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 1110, 1111, 1112, 1113, 0,
	570, 0, 562, 563, 564, 1122, 565, 1123, 1040, 566,
	567, 568, 569, 0, 571, 572, 0, 1024, 573, 574,
	575, 577, 578, 576, 579, 1084, 580, 0, 0, 581,
	582, 583, 639, 1107, 1144, 0, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	1021, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 1015, 1016, 0, 0, 0,
	0, 0, 0, 0, 1046, 2420, 0, 2419, 1044, 1062,
	1034, 1035, 1036, 1032, 1033, 1045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 1086, 1050, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 1099, 0, 276, 1106,
	277, 1105, 0, 1116, 278, 279, 280, 281, 282, 283,
	1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285, 286,
	1092, 0, 1073, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077,
	1081, 311, 312, 313, 314, 1109, 315, 1103, 1102, 1023,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 1094, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 1029, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 1117, 1118, 345, 1041,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 1101,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 1114, 1115, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 1124, 0, 1051, 362, 0, 363, 364,
	365, 366, 367, 1087, 1088, 1091, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 1129, 377, 1096, 1097, 0, 1057,
	0, 379, 380, 1131, 1089, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 1125, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 1080, 1079,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1020, 258, 1138, 440, 441, 1042,
	1090, 442, 1104, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 1119, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 1120, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 1100, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 1030, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 1083, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 1098,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	1145, 544, 545, 546, 547, 1121, 550, 0, 551, 552,
	1018, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 1110, 1111, 1112, 1113, 0, 570,
	0, 562, 563, 564, 1122, 565, 1123, 1040, 566, 567,
	568, 569, 0, 571, 572, 0, 1024, 573, 574, 575,
	577, 578, 576, 579, 1084, 580, 0, 0, 581, 582,
	583, 639, 1107, 1144, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 1021,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 1015, 1016, 0, 0, 0, 0,
	0, 0, 0, 1046, 2417, 0, 1624, 1044, 1062, 1034,
	1035, 1036, 1032, 1033, 1045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	1086, 1050, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 1099, 0, 276, 1106, 277,
	1105, 0, 1116, 278, 279, 280, 281, 282, 283, 1052,
	1085, 1019, 284, 1146, 1147, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 1109, 315, 1103, 1102, 1023, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 1029, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 1041, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 1101, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1114, 1115, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 1051, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 1096, 1097, 0, 1057, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090,
	442, 1104, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1100, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 1030, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1098, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1145,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 1018,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1110, 1111, 1112, 1113, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 1040, 566, 567, 568,
	569, 0, 571, 572, 0, 1024, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 1107, 1144, 0, 585, 584, 586, 642, 1623, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1021, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 1015, 1016, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 1011, 1044, 1062, 1034, 1035,
	1036, 1032, 1033, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	1050, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 1099, 0, 276, 1106, 277, 1105,
	0, 1116, 278, 279, 280, 281, 282, 283, 1052, 1085,
	1019, 284, 1146, 1147, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 1109, 315, 1103, 1102, 1023, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 1094, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 1029, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 1041, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 1101, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 1114,
	1115, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 1051, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 1096, 1097, 0, 1057, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090, 442,
	1104, 444, 445, 0, 0, 446, 0, 1025, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 1100,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 1030, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 1098, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 1145, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 1018, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 1110, 1111, 1112, 1113, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 1040, 566, 567, 568, 569,
	0, 571, 572, 0, 1024, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	1107, 1144, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1021, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033,
	1045, 1046, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 1086, 1050, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 1099, 0, 276, 1106, 277, 1105, 0, 1116, 278,
	279, 280, 281, 282, 283, 1052, 1085, 1019, 284, 1146,
	1147, 600, 0, 285, 286, 1092, 0, 1073, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	4272, 305, 0, 306, 307, 308, 1127, 309, 310, 1076,
	1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314,
	1109, 315, 1103, 1102, 1023, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 1094, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	1029, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 1117, 1118, 345, 1041, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 1101, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 1114, 1115, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 1124, 0,
	1051, 362, 0, 363, 364, 365, 366, 367, 1087, 1088,
	1091, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 1129,
	377, 1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 1125, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 1080, 1079, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 1020,
	258, 1138, 440, 441, 1042, 1090, 442, 1104, 444, 445,
	0, 0, 446, 0, 1025, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 1119, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	1120, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 1100, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 1030,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	1083, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 1098, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 1145, 544, 545, 546, 547,
	1121, 550, 0, 551, 552, 1018, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 1110,
	1111, 1112, 1113, 0, 570, 0, 562, 563, 564, 1122,
	565, 1123, 1040, 566, 567, 568, 569, 0, 571, 572,
	0, 1024, 573, 574, 575, 577, 578, 576, 579, 1084,
	580, 0, 0, 581, 582, 583, 639, 1107, 1144, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1021, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 1015,
	1016, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 1046, 0,
	0, 0, 1044, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	2297, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 2296, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1021, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 1015, 1016, 1062, 1034,
	1035, 1036, 1032, 1033, 1045, 1046, 0, 0, 0, 1044,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	1086, 1050, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 1099, 0, 276, 1106, 277,
	1105, 0, 1116, 278, 279, 280, 281, 282, 283, 1052,
	1085, 1019, 284, 1146, 1147, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 1109, 315, 1103, 1102, 1023, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 1029, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 1041, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 1101, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1114, 1115, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 1051, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 1096, 1097, 0, 1057, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090,
	442, 1104, 444, 445, 0, 0, 446, 0, 1025, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1100, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 1030, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1098, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1145,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 1018,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1110, 1111, 1112, 1113, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 1040, 566, 567, 568,
	569, 0, 571, 572, 0, 1024, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 1107, 1144, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1021, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 1015, 1016, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 1046, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 1019, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 4052, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 1023, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 1025, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 1018, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 1024, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1021, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 0,
	1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 1046,
	0, 0, 0, 1044, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 3700, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 1840,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 0,
	1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 3447, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1021, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 1015, 1016, 1062, 1034,
	1035, 1036, 1032, 1033, 1045, 1046, 0, 0, 0, 1044,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	1086, 1050, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 1099, 0, 276, 1106, 277,
	1105, 0, 1116, 278, 279, 280, 281, 282, 283, 1052,
	1085, 1019, 284, 1146, 1147, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 1109, 315, 1103, 1102, 1023, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 1029, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 1041, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 1101, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1114, 1115, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 1051, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 1096, 1097, 0, 1057, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090,
	442, 1104, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1100, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 1030, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1098, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1145,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 1018,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1110, 1111, 1112, 1113, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 1040, 566, 567, 568,
	569, 0, 571, 572, 0, 1024, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 1107, 1144, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1021, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 1015, 1016, 1840, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 1044, 1062, 1034, 1035,
	1036, 1032, 1033, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	1050, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 1099, 0, 276, 1106, 277, 1105,
	0, 1116, 278, 279, 280, 281, 282, 283, 1052, 1085,
	1019, 284, 1146, 1147, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 1109, 315, 1103, 1102, 1023, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 1094, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 1029, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 1041, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 1101, 0, 0,
	0, 349, 0, 350, 0, 2516, 1128, 351, 352, 1114,
	1115, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 1051, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 1096, 1097, 0, 1057, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090, 442,
	1104, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 1100,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 1030, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 1098, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 1145, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 1018, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 1110, 1111, 1112, 1113, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 1040, 566, 567, 568, 569,
	0, 571, 572, 0, 1024, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	1107, 1144, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1021, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033,
	1045, 1046, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 1086, 1050, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 1099, 0, 276, 1106, 277, 1105, 0, 1116, 278,
	279, 280, 281, 282, 283, 1052, 1085, 1019, 284, 1146,
	1147, 600, 0, 285, 286, 1092, 0, 1073, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 1076,
	1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314,
	1109, 315, 1103, 1102, 1023, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 1094, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	1029, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 1117, 1118, 345, 1041, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 1101, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 1114, 1115, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 1124, 0,
	1051, 362, 0, 363, 364, 365, 366, 367, 1087, 1088,
	1091, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 1129,
	377, 1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 1125, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 1080, 1079, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 1020,
	258, 1138, 440, 441, 1042, 1090, 442, 1104, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 1119, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	1120, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 1100, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 1030,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	1083, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 1098, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 1145, 544, 545, 546, 547,
	1121, 550, 0, 551, 552, 1018, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 1110,
	1111, 1112, 1113, 0, 570, 0, 562, 563, 564, 1122,
	565, 1123, 1040, 566, 567, 568, 569, 0, 571, 572,
	0, 1024, 573, 574, 575, 577, 578, 576, 579, 1084,
	580, 0, 0, 581, 582, 583, 639, 1107, 1144, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1021, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 1015,
	1016, 0, 0, 0, 0, 0, 0, 0, 1046, 1770,
	0, 2521, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 0, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	315, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 1051,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 571, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 639, 1107, 1144, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1021, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	2519, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 2507,
	1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1021, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 1015, 1016, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 2496, 1044,
	1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 1086, 1050, 0, 0, 0, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 593, 1099, 0, 276,
	1106, 277, 1105, 0, 1116, 278, 279, 280, 281, 282,
	283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285,
	286, 1092, 0, 1073, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078,
	1077, 1081, 311, 312, 313, 314, 1109, 315, 1103, 1102,
	1023, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 1094, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 1029, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 1117, 1118, 345,
	1041, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	1101, 0, 0, 0, 349, 0, 350, 0, 0, 1128,
	351, 352, 1114, 1115, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 1124, 0, 1051, 362, 0, 363,
	364, 365, 366, 367, 1087, 1088, 1091, 443, 1130, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 1129, 377, 1096, 1097, 0,
	1057, 0, 379, 380, 1131, 1089, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 1125, 1134, 395,
	396, 1135, 0, 397, 0, 0, 0, 398, 399, 1080,
	1079, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 1020, 258, 1138, 440, 441,
	1042, 1090, 442, 1104, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	1139, 453, 1140, 1119, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 1120, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 1100, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	1141, 503, 504, 505, 506, 1030, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 1083, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	1098, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 1145, 544, 545, 546, 547, 1121, 550, 0, 551,
	552, 1018, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 1110, 1111, 1112, 1113, 0,
	570, 0, 562, 563, 564, 1122, 565, 1123, 1040, 566,
	567, 568, 569, 0, 571, 572, 0, 1024, 573, 574,
	575, 577, 578, 576, 579, 1084, 580, 0, 0, 581,
	582, 583, 639, 1107, 1144, 0, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	1021, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 1015, 1016, 0, 0, 0,
	0, 0, 0, 0, 1046, 0, 0, 2494, 1044, 2485,
	2492, 1035, 1036, 1032, 1033, 1045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 1086, 1050, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 1099, 0, 276, 1106,
	277, 1105, 0, 1116, 278, 279, 280, 281, 282, 283,
	1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285, 286,
	1092, 0, 1073, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077,
	1081, 311, 312, 313, 314, 1109, 2488, 1103, 1102, 1023,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 1094, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 1029, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 1117, 1118, 345, 1041,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 1101,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 1114, 1115, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 1124, 0, 1051, 362, 0, 363, 364,
	365, 2489, 367, 1087, 1088, 1091, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 1129, 377, 1096, 1097, 0, 1057,
	0, 379, 380, 1131, 1089, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 1125, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 1080, 1079,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 2490, 411, 2487, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1020, 258, 1138, 440, 441, 1042,
	1090, 442, 1104, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 1119, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 1120, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 1100, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 1030, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 2491, 0, 523,
	524, 522, 525, 526, 527, 1083, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 1098,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	1145, 544, 545, 546, 547, 1121, 550, 0, 551, 552,
	1018, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 1110, 1111, 1112, 1113, 0, 570,
	0, 562, 563, 564, 1122, 565, 1123, 1040, 566, 567,
	568, 569, 0, 571, 572, 0, 1024, 573, 574, 575,
	577, 578, 576, 579, 1084, 580, 0, 0, 581, 582,
	583, 639, 1107, 1144, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 2486, 591, 1021,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 1015, 1016, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 2482, 1044, 2485, 2492,
	1035, 1036, 1032, 1033, 1045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	1086, 1050, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 1099, 0, 276, 1106, 277,
	1105, 0, 1116, 278, 279, 280, 281, 282, 283, 1052,
	1085, 1019, 284, 1146, 1147, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 1109, 2488, 1103, 1102, 1023, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 1029, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 1041, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 1101, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1114, 1115, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 1051, 362, 0, 363, 364, 365,
	2489, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 1096, 1097, 0, 1057, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	2490, 411, 2487, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090,
	442, 1104, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1100, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 1030, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 2491, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1098, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1145,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 1018,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1110, 1111, 1112, 1113, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 1040, 566, 567, 568,
	569, 0, 571, 572, 0, 1024, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 1107, 1144, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 2486, 591, 1021, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 1015, 1016, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 1046, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 1019, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 1023, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 1018, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 1024, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1021, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 0,
	1015, 1016, 0, 0, 0, 0, 0, 1778, 0, 1046,
	0, 0, 0, 1044, 1062, 1034, 1035, 1036, 1032, 1033,
	1045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 2276, 266,
	267, 0, 0, 0, 0, 0, 1086, 1050, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 1099, 0, 276, 1106, 277, 1105, 0, 1116, 278,
	279, 280, 281, 282, 283, 1052, 1085, 1019, 284, 1146,
	1147, 600, 0, 285, 286, 1092, 0, 1073, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 1076,
	1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314,
	1109, 315, 1103, 1102, 1023, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 1094, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	1029, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 1117, 1118, 345, 1041, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 1101, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 1114, 1115, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 1124, 0,
	1051, 362, 0, 363, 364, 365, 366, 367, 1087, 1088,
	1091, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 1129,
	377, 1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 1125, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 1080, 1079, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 1020,
	258, 1138, 440, 441, 1042, 1090, 442, 1104, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 1119, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	1120, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 1100, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 1030,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	1083, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 1098, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 1145, 544, 545, 546, 547,
	1121, 550, 0, 551, 552, 1018, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 1110,
	1111, 1112, 1113, 0, 570, 0, 562, 563, 564, 1122,
	565, 1123, 1040, 566, 567, 568, 569, 0, 571, 572,
	0, 1024, 573, 574, 575, 577, 578, 576, 579, 1084,
	580, 0, 0, 581, 582, 583, 639, 1107, 1144, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1021, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 1015,
	1016, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	0, 1629, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 0, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	315, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 1051,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 571, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 639, 1107, 1144, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1021, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	1564, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 1559,
	1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1021, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 1015, 1016, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 1550, 1044,
	1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 1086, 1050, 0, 0, 0, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 593, 1099, 0, 276,
	1106, 277, 1105, 0, 1116, 278, 279, 280, 281, 282,
	283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285,
	286, 1092, 0, 1073, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078,
	1077, 1081, 311, 312, 313, 314, 1109, 315, 1103, 1102,
	1023, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 1094, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 1029, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 1117, 1118, 345,
	1041, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	1101, 0, 0, 0, 349, 0, 350, 0, 0, 1128,
	351, 352, 1114, 1115, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 1124, 0, 1051, 362, 0, 363,
	364, 365, 366, 367, 1087, 1088, 1091, 443, 1130, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 1129, 377, 1096, 1097, 0,
	1057, 0, 379, 380, 1131, 1089, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 1125, 1134, 395,
	396, 1135, 0, 397, 0, 0, 0, 398, 399, 1080,
	1079, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 1020, 258, 1138, 440, 441,
	1042, 1090, 442, 1104, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	1139, 453, 1140, 1119, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 1120, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 1100, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	1141, 503, 504, 505, 506, 1030, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 1083, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	1098, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 1145, 544, 545, 546, 547, 1121, 550, 0, 551,
	552, 1018, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 1110, 1111, 1112, 1113, 0,
	570, 0, 562, 563, 564, 1122, 565, 1123, 1040, 566,
	567, 568, 569, 0, 571, 572, 0, 1024, 573, 574,
	575, 577, 578, 576, 579, 1084, 580, 0, 0, 581,
	582, 583, 639, 1107, 1144, 0, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	1021, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 1015, 1016, 0, 0, 0,
	0, 0, 0, 0, 1046, 0, 0, 1545, 1044, 1062,
	1034, 1035, 1036, 1032, 1033, 1045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 1086, 1050, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 1099, 0, 276, 1106,
	277, 1105, 0, 1116, 278, 279, 280, 281, 282, 283,
	1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285, 286,
	1092, 0, 1073, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077,
	1081, 311, 312, 313, 314, 1109, 315, 1103, 1102, 1023,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 1094, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 1029, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 1117, 1118, 345, 1041,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 1101,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 1114, 1115, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 1124, 0, 1051, 362, 0, 363, 364,
	365, 366, 367, 1087, 1088, 1091, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 1129, 377, 1096, 1097, 0, 1057,
	0, 379, 380, 1131, 1089, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 1125, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 1080, 1079,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1020, 258, 1138, 440, 441, 1042,
	1090, 442, 1104, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 1119, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 1120, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 1100, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 1030, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 1083, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 1098,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	1145, 544, 545, 546, 547, 1121, 550, 0, 551, 552,
	1018, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 1110, 1111, 1112, 1113, 0, 570,
	0, 562, 563, 564, 1122, 565, 1123, 1040, 566, 567,
	568, 569, 0, 571, 572, 0, 1024, 573, 574, 575,
	577, 578, 576, 579, 1084, 580, 0, 0, 581, 582,
	583, 639, 1107, 1144, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 1021,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 1015, 1016, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 1527, 1044, 1062, 1034,
	1035, 1036, 1032, 1033, 1045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	1086, 1050, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 1099, 0, 276, 1106, 277,
	1105, 0, 1116, 278, 279, 280, 281, 282, 283, 1052,
	1085, 1019, 284, 1146, 1147, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 1109, 315, 1103, 1102, 1023, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 1029, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 1041, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 1101, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1114, 1115, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 1051, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 1096, 1097, 0, 1057, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090,
	442, 1104, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1100, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 1030, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1098, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1145,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 1018,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1110, 1111, 1112, 1113, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 1040, 566, 567, 568,
	569, 0, 571, 572, 0, 1024, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 1107, 1144, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1021, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 1015, 1016, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 1406, 1044, 1062, 1034, 1035,
	1036, 1032, 1033, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	1050, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 1099, 0, 276, 1106, 277, 1105,
	0, 1116, 278, 279, 280, 281, 282, 283, 1052, 1085,
	1019, 284, 1146, 1147, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 1109, 315, 1103, 1102, 1023, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 1094, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 1029, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 1041, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 1101, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 1114,
	1115, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 1051, 362, 0, 363, 364, 365, 366,
	367, 1405, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 1096, 1097, 0, 1057, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090, 442,
	1104, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 1100,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 1030, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 1098, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 1145, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 1018, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 1110, 1111, 1112, 1113, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 1040, 566, 567, 568, 569,
	0, 571, 572, 0, 1024, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	1107, 1144, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1021, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 1015, 1016, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 1400, 1044, 1062, 1034, 1035, 1036,
	1032, 1033, 1045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 1050,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 1099, 0, 276, 1106, 277, 1105, 0,
	1116, 278, 279, 280, 281, 282, 283, 1052, 1085, 1019,
	284, 1146, 1147, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 1109, 315, 1103, 1102, 1023, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	1094, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 1029, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 1041, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 1101, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 1114, 1115,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 1051, 362, 0, 363, 364, 365, 366, 367,
	1399, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 1096, 1097, 0, 1057, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 1100, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 1030, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 1098, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 1145, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 1018, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 1110, 1111, 1112, 1113, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 1040, 566, 567, 568, 569, 0,
	571, 572, 0, 1024, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 639, 1107,
	1144, 0, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 1021, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 1015, 1016, 0, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 1393, 1044, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 1019, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 1023, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 1018, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 1024, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1021, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 0,
	1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 1046,
	0, 0, 0, 1044, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 1062,
	1034, 1035, 1036, 1032, 1033, 1045, 1046, 0, 0, 0,
	1044, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 1086, 1050, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 1099, 0, 276, 1106,
	277, 1105, 0, 1116, 278, 279, 280, 281, 282, 283,
	1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285, 286,
	1092, 0, 1073, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 4315, 1076, 1074, 1075, 1082, 1078, 1077,
	1081, 311, 312, 313, 314, 1109, 315, 1103, 1102, 1023,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 1094, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 1029, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 1117, 1118, 345, 1041,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 1101,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 1114, 1115, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 1124, 0, 1051, 362, 0, 363, 364,
	365, 366, 367, 1087, 1088, 1091, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 1129, 377, 1096, 1097, 0, 1057,
	0, 379, 380, 1131, 1089, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 1125, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 1080, 1079,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1020, 258, 1138, 440, 441, 1042,
	1090, 442, 1104, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 1119, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 1120, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 1100, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 1030, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 1083, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 1098,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	1145, 544, 545, 546, 547, 1121, 550, 0, 551, 552,
	1018, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 1110, 1111, 1112, 1113, 0, 570,
	0, 562, 563, 564, 1122, 565, 1123, 1040, 566, 567,
	568, 569, 0, 4314, 572, 0, 1024, 573, 574, 575,
	577, 578, 576, 579, 1084, 580, 0, 0, 581, 582,
	583, 639, 1107, 1144, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 1021,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 1015, 1016, 1062, 1034, 1035, 1036,
	1032, 1033, 1045, 1046, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 1050,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 4313, 1099, 0, 276, 1106, 277, 1105, 0,
	1116, 278, 279, 280, 281, 282, 283, 1052, 1085, 1019,
	284, 1146, 1147, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	4315, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 1109, 315, 1103, 1102, 1023, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	1094, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 1029, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 1041, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 1101, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 1114, 1115,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 1051, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 1096, 1097, 0, 1057, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 1100, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 1030, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 1098, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 1145, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 1018, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 1110, 1111, 1112, 1113, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 1040, 566, 567, 568, 569, 0,
	4314, 572, 0, 1024, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 639, 1107,
	1144, 0, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 1021, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033, 1045,
	1046, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 0, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 4002, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	315, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 4003,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 4001, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 571, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 639, 1107, 1144, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1021, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	1062, 1034, 1035, 1036, 2933, 2934, 1045, 1046, 0, 0,
	0, 1044, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 1086, 1050, 0, 0, 0, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 593, 1099, 0, 276,
	1106, 277, 1105, 0, 1116, 278, 279, 280, 281, 282,
	283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285,
	286, 1092, 0, 1073, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078,
	1077, 1081, 311, 312, 313, 314, 1109, 315, 1103, 1102,
	1023, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 1094, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 1029, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 1117, 1118, 345,
	1041, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	1101, 0, 0, 0, 349, 0, 350, 0, 0, 1128,
	351, 352, 1114, 1115, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 1124, 0, 1051, 362, 0, 363,
	364, 365, 366, 367, 1087, 1088, 1091, 443, 1130, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 1129, 377, 1096, 1097, 0,
	1057, 0, 379, 380, 1131, 1089, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 1125, 1134, 395,
	396, 1135, 0, 397, 0, 0, 0, 398, 399, 1080,
	1079, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 1020, 258, 1138, 440, 441,
	1042, 1090, 442, 1104, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	1139, 453, 1140, 1119, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 1120, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 1100, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	1141, 503, 504, 505, 506, 1030, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 1083, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	1098, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 1145, 544, 545, 546, 547, 1121, 550, 0, 551,
	552, 1018, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 1110, 1111, 1112, 1113, 0,
	570, 0, 562, 563, 564, 1122, 565, 1123, 1040, 566,
	567, 568, 569, 0, 571, 572, 0, 1024, 573, 574,
	575, 577, 578, 576, 579, 1084, 580, 0, 0, 581,
	582, 583, 639, 1107, 1144, 0, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	1021, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 1015, 1016, 1062, 1034, 1035,
	1036, 2931, 2932, 1045, 1046, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	1050, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 1099, 0, 276, 1106, 277, 1105,
	0, 1116, 278, 279, 280, 281, 282, 283, 1052, 1085,
	1019, 284, 1146, 1147, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 1109, 315, 1103, 1102, 1023, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 1094, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 1029, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 1041, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 1101, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 1114,
	1115, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 1051, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 1096, 1097, 0, 1057, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090, 442,
	1104, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 1100,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 1030, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 1098, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 1145, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 1018, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 1110, 1111, 1112, 1113, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 1040, 566, 567, 568, 569,
	0, 571, 572, 0, 1024, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	1107, 1144, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1021, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033,
	1045, 1046, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 1086, 1050, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 1099, 0, 276, 1106, 277, 1105, 0, 1116, 278,
	279, 280, 281, 282, 283, 1052, 1085, 1019, 284, 1146,
	1147, 600, 0, 285, 286, 1092, 0, 1073, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 1076,
	1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314,
	1109, 315, 1103, 1102, 1023, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 1094, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	1029, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 1117, 1118, 345, 1041, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 1101, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 1114, 1115, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 1124, 0,
	1051, 362, 0, 363, 364, 365, 366, 367, 1087, 1088,
	1091, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 1129,
	377, 1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 1125, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 1080, 1079, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 1020,
	258, 1138, 440, 441, 1042, 1090, 442, 1104, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 1119, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	1120, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 1100, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 1030,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	1083, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 1098, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 1145, 544, 545, 546, 547,
	1121, 550, 0, 551, 552, 1018, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 1110,
	1111, 1112, 1113, 0, 570, 0, 562, 563, 564, 1122,
	565, 1123, 1040, 566, 567, 568, 569, 0, 571, 572,
	0, 1024, 573, 574, 575, 577, 578, 576, 579, 1084,
	580, 0, 0, 581, 582, 583, 639, 1107, 1144, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1021, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 2284,
	2285, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 1046, 0,
	0, 0, 1044, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 0, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 0, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 2504,
	0, 0, 0, 0, 0, 0, 2502, 2503, 259, 261,
	260, 262, 263, 264, 265, 1046, 266, 267, 0, 1044,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 0, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 0, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 2926, 2927, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 1984, 259, 261,
	260, 262, 263, 264, 265, 1046, 266, 267, 0, 1044,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 0, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 4315, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 0, 1089, 0, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 0, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 4314, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1008, 0, 1184, 0, 0, 1015, 1016, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 1044,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 1085, 0, 284, 598, 599,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	615, 616, 0, 617, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 1170, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 0, 258,
	1138, 440, 441, 0, 1090, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 1176, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 1178,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 219, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 0, 549, 221, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 1534, 640, 641, 0, 585,
	584, 586, 642, 0, 1184, 0, 213, 587, 588, 643,
	589, 590, 591, 0, 0, 214, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 1174, 1086, 1864, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 1085, 0, 284, 598,
	599, 600, 0, 285, 286, 1092, 0, 1073, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 1076,
	1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 1117, 1118, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 1124, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 1087, 1088,
	1091, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 1129,
	377, 615, 616, 0, 617, 0, 379, 380, 1131, 1089,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 1170, 391, 393, 392, 0,
	394, 1125, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 1080, 1079, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 0,
	258, 1138, 440, 441, 0, 1090, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 1176, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 1119, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	1120, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 629,
	1178, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 219, 523, 524, 522, 525, 526, 527,
	1083, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	1121, 550, 0, 551, 552, 0, 549, 221, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 1122,
	565, 1123, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 1084,
	580, 0, 0, 581, 582, 583, 1534, 640, 641, 0,
	585, 584, 586, 642, 0, 0, 0, 213, 587, 588,
	643, 589, 590, 591, 0, 0, 214, 0, 0, 0,
	3110, 0, 1184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 1864, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 1085, 0, 284, 598, 599, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 615,
	616, 0, 617, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 1170, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 0, 258, 1138,
	440, 441, 0, 1090, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 1176, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 629, 1178, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 0, 1166, 0, 1184, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 1174, 0, 1172, 1086, 0, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 1085, 0, 284,
	598, 599, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 0, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 615, 616, 0, 617, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 1170, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	0, 258, 1138, 440, 441, 0, 1090, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 1176, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	629, 1178, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	0, 585, 584, 586, 642, 0, 1184, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 1174, 1086, 1172,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 1085, 0,
	284, 598, 599, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 615, 616, 0, 617, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 1170, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 0, 258, 1138, 440, 441, 0, 1090, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 1176, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 629, 1178, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 0, 1184, 0, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 1174, 1086,
	1172, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 1085,
	0, 284, 598, 599, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 615, 616, 0, 617, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 0, 258, 1138, 440, 441, 0, 1090, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 0, 585, 584, 586, 642, 1184, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	0, 3595, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 1085,
	0, 284, 598, 599, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 615, 616, 0, 617, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 0, 258, 1138, 440, 441, 0, 1090, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 629, 1178, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 0, 585, 584, 586, 642, 0, 1008, 0,
	1376, 587, 588, 643, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 1763, 592, 0, 0, 0, 0, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 1342, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 1127, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 1128,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 1130, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 1129, 377, 615, 616, 0,
	617, 0, 379, 380, 1131, 618, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 1134, 395,
	396, 1135, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 0, 0, 1138, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	1139, 453, 1140, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	1141, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 219,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 221, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 1534, 640, 641, 0, 585, 584, 586, 642,
	0, 0, 0, 213, 587, 588, 643, 589, 590, 591,
	0, 0, 214, 0, 0, 0, 1531, 0, 1376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 219, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 221, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	1534, 640, 641, 0, 585, 584, 586, 642, 0, 0,
	0, 213, 587, 588, 643, 589, 590, 591, 1376, 1375,
	214, 0, 0, 0, 1373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 180, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1376, 1375,
	0, 0, 0, 0, 1373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 1556, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1376, 2072,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 3371, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	2071, 393, 392, 0, 394, 619, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1376, 1375,
	0, 0, 0, 0, 1373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 1556, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1184, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	1086, 0, 1540, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	1085, 0, 284, 598, 599, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 258, 1138, 440, 441, 0, 1090,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1008, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 219,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 221, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 1534, 640, 641, 0, 585, 584, 586, 642,
	253, 0, 0, 213, 587, 588, 643, 589, 590, 591,
	0, 0, 214, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 180, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	253, 2845, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 1878, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 4461, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 258, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	0, 585, 584, 586, 642, 0, 253, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 3312, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 0, 253, 0, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 1477, 592,
	0, 0, 0, 0, 268, 269, 0, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 0, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 0, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 253, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 2816, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 0, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 253, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 3472, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 0, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 0, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 0, 585, 584, 586, 642, 0, 852, 0,
	731, 587, 588, 643, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 2175, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 738, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 850, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 736, 553, 554, 555, 556, 557, 737,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	0, 729, 0, 731, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 741, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 0, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 0, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 0, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 738, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 0, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 0, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 0, 377,
	615, 616, 0, 617, 0, 379, 380, 0, 618, 0,
	381, 382, 383, 0, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 0, 395, 396, 0, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 0, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 0, 430, 0, 258,
	0, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 0, 453, 0, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 0, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 0, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 736, 553, 554, 555,
	556, 557, 737, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 1915, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 0, 1921, 0, 276, 1911, 277,
	1927, 0, 1934, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 1937, 1938, 0, 0, 285, 286, 0,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 1109, 315, 1925, 1924, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 1923, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1932, 1933, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 0, 0, 0, 362, 0, 363, 364, 365,
	366, 367, 0, 0, 0, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 1918, 1919, 0, 1914, 0,
	379, 380, 1131, 0, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 0, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 0, 0,
	442, 1926, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 0, 1139, 453,
	1140, 0, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 1908, 466, 467, 468,
	1909, 469, 470, 471, 0, 472, 0, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1922, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 0, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1920, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1936,
	544, 545, 546, 547, 0, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1928, 1929, 1930, 1931, 0, 570, 0,
	562, 563, 564, 0, 565, 0, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	0, 1912, 1935, 0, 585, 584, 586, 731, 0, 0,
	0, 0, 587, 588, 0, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 1902, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 738, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 258, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	736, 553, 554, 555, 556, 557, 737, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 0, 585, 584, 586, 642, 731, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 741, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 0, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 738, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 258, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 2215, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 2216, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	736, 553, 554, 555, 556, 557, 737, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 2217, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1945, 0, 1376,
	1375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 741, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 1342, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 0, 0, 0, 0, 0, 0,
	1948, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 1129, 377, 615, 616, 0, 617,
	0, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 0, 0, 1138, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 1949, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 731, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 738, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 1941, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 736, 553, 554,
	555, 556, 557, 737, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 1940, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 731, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 741, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 738, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 1894, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 736, 553, 554,
	555, 556, 557, 737, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 1893, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 1376, 1375, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 741, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 1342, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 0,
	0, 0, 0, 0, 0, 1948, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 1129,
	377, 615, 616, 0, 617, 0, 379, 380, 1131, 618,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 0,
	0, 1138, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	1949, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1376, 1375, 0, 0, 0, 0,
	1373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 1342, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 1129,
	377, 615, 616, 0, 617, 0, 379, 380, 1131, 618,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 0,
	0, 1138, 440, 441, 3646, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1376, 1375, 0, 0, 0, 0,
	1373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 1342, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 1129,
	377, 615, 616, 0, 617, 0, 379, 380, 1131, 618,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 0,
	0, 1138, 440, 441, 3284, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 258, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 1584,
	0, 1376, 1375, 0, 0, 0, 0, 1373, 0, 0,
	0, 0, 0, 0, 0, 0, 741, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 1342, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 1583, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	0, 374, 375, 376, 378, 0, 1129, 377, 615, 616,
	0, 617, 0, 379, 380, 1131, 618, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 0, 0, 1138, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 1582, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 1581, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1524, 0, 1376, 1375, 0, 0, 0, 0, 1373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 1342, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 1523, 613, 614,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 0, 374, 375, 376, 378, 0, 1129, 377,
	615, 616, 0, 617, 0, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 0, 0,
	1138, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1452, 0, 1376, 1375, 0, 0, 0,
	0, 1373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 1342, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 1451,
	613, 614, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	1129, 377, 615, 616, 0, 617, 0, 379, 380, 1131,
	618, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	0, 0, 1138, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1411, 0, 1376, 1375, 0,
	0, 0, 0, 1373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	1342, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 0, 374, 375, 376,
	378, 0, 1129, 377, 615, 616, 0, 617, 0, 379,
	380, 1131, 618, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 0, 0, 1138, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1371, 0, 1376,
	1375, 0, 0, 0, 0, 1373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 1342, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 1370, 613, 614, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 1129, 377, 615, 616, 0, 617,
	0, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 0, 0, 1138, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 1376,
	1375, 0, 0, 0, 0, 1373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 1342, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 1129, 377, 615, 616, 0, 617,
	0, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 0, 0, 1138, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 1376,
	1375, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 1342, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 1956,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 1129, 377, 615, 616, 0, 617,
	0, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 0, 0, 1138, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 1376,
	1375, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 1342, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 1129, 377, 615, 616, 0, 617,
	0, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 0, 0, 1138, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 1376, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 1342, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 1129,
	377, 615, 616, 0, 617, 0, 379, 380, 1131, 618,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 0,
	0, 1138, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 2643, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 2640, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 2647, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	2858, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 2646, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 2855, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 2857, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	2854, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	2645, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 2856, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 2643, 285, 286, 601, 0, 0, 2637, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 2640, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 2647, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 2646, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 2636, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 2645, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 2644, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 1651, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 1654, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 1652,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 1653, 584, 586, 642, 1346, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 1348, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 258, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 1176,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1343, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 1345, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 1176, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	1249, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 1251, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 1176, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 675, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 674, 264, 265, 664, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 667, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 668, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 669, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 663, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	664, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 667, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 668, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 0, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 0, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 669, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 253, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	0, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 258, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 1176, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 253, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 3243,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 2787, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 2786, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 258, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 2188, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 258, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 2104, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	0, 585, 584, 586, 642, 2110, 0, 253, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 0, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 2109, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 258, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 0, 585, 584, 586, 642, 2097, 0, 253,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 2099, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 258, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 2068, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 1176, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 1517, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	1516, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 1508, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 1507, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 258, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1505, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 1504, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	1500, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 1499, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 1455, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 1364, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 1357, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 1359, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 258, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 645, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	244, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 253, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 0, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 258, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 253, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	667, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 668, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 0, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 669, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 253, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 0, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 2224, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 258, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 253, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 2222, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 253, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 0, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 2220, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 258, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 253, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 2154, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 253, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 0, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 2148, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 258, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 253, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 2116, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 839, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 838, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 837, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	2858, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	3908, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 698,
	0, 253, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	1219, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 1217, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	0, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	699, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 0, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 695, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 1220, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 694, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 0, 585, 584, 586,
	642, 698, 0, 253, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 1219, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	1217, 0, 285, 286, 601, 0, 0, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 0, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 0, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 0, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 0, 374, 375, 376, 378, 0, 0, 377,
	615, 616, 0, 617, 0, 379, 380, 0, 618, 0,
	381, 382, 383, 0, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 0, 395, 396, 0, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 699, 0, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 0, 430, 0, 0,
	0, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 0, 453, 0, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 0, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 695, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 1220, 527, 0,
	528, 529, 512, 513, 530, 531, 0, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 694, 634,
	635, 636, 0, 570, 0, 562, 1218, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 0, 585,
	584, 586, 642, 654, 0, 253, 0, 587, 588, 643,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 653,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 652, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	0, 585, 584, 586, 642, 253, 2845, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	0, 585, 584, 586, 642, 253, 3918, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	3619, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 2555,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	0, 585, 584, 586, 642, 253, 2845, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 2842,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 2198, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	2186, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 0, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 698, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 688, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 699, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 695, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 1539, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 694,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 1521, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	1520, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 0, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 0, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 1514, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 1513, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 0, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1461, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 1460, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	1444, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 1442, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 0, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 1438, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 1415, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	1413, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 0, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 0, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 1367, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 0, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1351, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 1197,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 704, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	698, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 688, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 686, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	687, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 699, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 0, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 689, 507, 0,
	508, 509, 515, 516, 510, 511, 695, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 690, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 694, 634, 635,
	636, 0, 570, 0, 562, 692, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 680, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 681, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 677, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 0, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 0, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 671, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 0, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 649, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 3330, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 3278,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 3214, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 3212,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 3198, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 2796,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	681, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 2133,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 0, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 1485, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 1149,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 0, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 0,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 0,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 0, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 1728, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 0, 0, 0, 1697, 1698, 1746,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	1728, 0, 0, 0, 0, 1699, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 1719, 1746, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 1697, 1698, 0, 1730,
	1731, 1732, 1740, 1741, 1742, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 1733, 1728,
	0, 0, 1719, 0, 0, 0, 1700, 0, 0, 0,
	0, 1716, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 1722, 1723, 1724, 1725,
	0, 1719, 0, 0, 0, 0, 1705, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 1723, 1724, 1725, 0, 0, 0,
	0, 1737, 0, 1705, 1747, 0, 0, 0, 0, 0,
	1727, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 1744,
	0, 0, 0, 0, 0, 0, 1714, 1715, 1737, 0,
	0, 1747, 1722, 1723, 1724, 1725, 0, 1727, 1729, 0,
	0, 0, 1705, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 0, 1744, 0, 1720, 0,
	0, 0, 0, 1714, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	1747, 1735, 0, 0, 0, 0, 1727, 1729, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	1745, 0, 0, 1743, 0, 1744, 0, 0, 0, 0,
	0, 0, 1714, 1715, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 1698, 1721, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 1728, 0,
	0, 0, 0, 1738, 0, 1700, 1726, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 1738, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 1736, 0, 0, 0, 0, 1711, 1712,
	1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702,
	1703, 1704, 1706, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 3008, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 2385,
	0, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713,
	0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707,
	0, 0, 0, 0, 4253, 0, 1737, 0, 0, 1747,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 0,
	0, 1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 1743, 0, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 1733, 1728, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 0, 0, 0, 1735,
	1746, 1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 0, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1733, 1728, 0, 1699, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 1719, 0, 0, 0,
	1746, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 1723, 1724,
	1725, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 1722, 1723, 1724,
	1725, 0, 1737, 0, 0, 1747, 0, 1705, 0, 0,
	0, 1727, 1729, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 1743, 0,
	1744, 0, 0, 0, 0, 0, 0, 1714, 1715, 0,
	0, 0, 1737, 0, 0, 1747, 0, 0, 0, 0,
	0, 1727, 1729, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 1720,
	1744, 0, 0, 0, 0, 0, 0, 1714, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 1745, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 1734,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 0, 4249, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 1728, 0, 0, 0, 0, 0, 0, 1700,
	0, 1726, 0, 0, 0, 0, 0, 1738, 1746, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 1728, 0, 1699, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 1719, 0, 0, 1738, 1746, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 1722, 1723, 1724, 1725, 4147,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 1722, 1723, 1724, 1725, 4146,
	1737, 0, 0, 1747, 0, 1705, 0, 0, 0, 1727,
	1729, 0, 0, 0, 0, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 1743, 0, 1744, 0,
	0, 0, 0, 0, 0, 1714, 1715, 1733, 1728, 0,
	1737, 0, 0, 1747, 0, 1700, 0, 0, 0, 1727,
	1729, 0, 0, 1735, 1746, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 1743, 1720, 1744, 0,
	0, 0, 0, 0, 0, 1714, 1715, 1733, 1728, 0,
	1699, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	1719, 0, 0, 1735, 1746, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 1722, 1723, 1724, 1725, 0, 1737, 0, 0, 1747,
	0, 1705, 0, 0, 0, 1727, 1729, 0, 0, 1726,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 1743, 0, 1744, 0, 0, 0, 0, 1721,
	0, 1714, 1715, 0, 0, 0, 1737, 0, 0, 1747,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 1735,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 1743, 1720, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 1745, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 1734, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 0, 0, 0, 0, 4037, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 1734, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 0, 0, 0, 0, 3986, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 1728, 0, 0, 0,
	0, 0, 0, 1700, 0, 1726, 0, 0, 0, 0,
	0, 1738, 1746, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 1728, 0, 1699, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 1719, 0,
	0, 1738, 1746, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722,
	1723, 1724, 1725, 3842, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722,
	1723, 1724, 1725, 3785, 1737, 0, 0, 1747, 0, 1705,
	0, 0, 0, 1727, 1729, 0, 0, 0, 0, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	1743, 0, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 1733, 1728, 0, 1737, 0, 0, 1747, 0, 1700,
	0, 0, 0, 1727, 1729, 0, 0, 1735, 1746, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	1743, 1720, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 1733, 1728, 0, 1699, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 1719, 0, 0, 1735, 1746, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 0, 1722, 1723, 1724, 1725, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 1722, 1723, 1724, 1725, 0,
	1737, 0, 0, 1747, 0, 1705, 0, 0, 0, 1727,
	1729, 0, 0, 1726, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 1743, 0, 1744, 0,
	0, 0, 0, 1721, 0, 1714, 1715, 0, 0, 0,
	1737, 0, 0, 1747, 0, 0, 0, 0, 0, 1727,
	1729, 0, 0, 1735, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 1743, 1720, 1744, 0,
	0, 0, 0, 0, 0, 1714, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 1745,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 1734, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	0, 3784, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 1734, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	0, 3783, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	1728, 0, 0, 0, 0, 0, 0, 1700, 0, 1726,
	0, 0, 0, 0, 0, 1738, 1746, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	1728, 0, 1699, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 1719, 0, 0, 1738, 1746, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 1722, 1723, 1724, 1725, 3477, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 1722, 1723, 1724, 1725, 3006, 1737, 0,
	0, 1747, 0, 1705, 0, 0, 0, 1727, 1729, 0,
	0, 0, 0, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 1743, 0, 1744, 0, 0, 0,
	0, 0, 0, 1714, 1715, 1733, 1728, 0, 1737, 0,
	0, 1747, 0, 1700, 0, 0, 0, 1727, 1729, 0,
	0, 1735, 1746, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 1743, 1720, 1744, 0, 0, 0,
	0, 0, 0, 1714, 1715, 1733, 1728, 0, 1699, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 1719, 0,
	0, 1735, 1746, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 1722,
	1723, 1724, 1725, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 1722,
	1723, 1724, 1725, 0, 1737, 0, 0, 1747, 0, 1705,
	4382, 0, 0, 1727, 1729, 0, 0, 1726, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	1743, 0, 1744, 0, 0, 0, 0, 1721, 0, 1714,
	1715, 0, 0, 0, 1737, 0, 0, 1747, 0, 0,
	0, 0, 0, 1727, 1729, 0, 0, 1735, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	1743, 1720, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 1745, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 1734, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 0, 0, 0, 0, 3005, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 1734, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 0, 0, 0, 0, 3004, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 4381, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1733, 1728, 0, 0, 0, 0, 0,
	0, 1700, 0, 1726, 0, 0, 0, 0, 0, 1738,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 1738,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722, 1723, 1724,
	1725, 3003, 0, 0, 0, 0, 0, 1705, 0, 3090,
	0, 0, 3089, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	0, 0, 1737, 0, 0, 1747, 0, 0, 0, 0,
	0, 1727, 1729, 0, 0, 0, 0, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 1743, 0,
	1744, 0, 0, 0, 0, 0, 0, 1714, 1715, 1733,
	1728, 0, 0, 0, 0, 2941, 0, 1700, 0, 0,
	2529, 0, 0, 0, 0, 1735, 1746, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	1728, 0, 1699, 0, 2528, 0, 0, 1700, 0, 0,
	0, 0, 1719, 0, 0, 0, 1746, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 1719, 0, 0, 0, 0, 2942, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 1723, 1724, 1725, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 1722, 1723, 1724, 1725, 0, 1737, 0,
	0, 1747, 0, 1705, 0, 0, 0, 1727, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 1743, 0, 1744, 0, 0, 0,
	0, 0, 0, 1714, 1715, 0, 0, 0, 1737, 0,
	0, 1747, 0, 0, 0, 0, 0, 1727, 1729, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 1720, 1744, 0, 0, 0,
	0, 0, 0, 1714, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 1745, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 1734, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 1728, 0,
	0, 0, 0, 0, 0, 1700, 0, 1726, 0, 0,
	0, 0, 0, 1738, 1746, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 1728, 0,
	1699, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	1719, 0, 0, 1738, 1746, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 1722, 1723, 1724, 1725, 0, 1737, 0, 0, 1747,
	0, 1705, 0, 0, 0, 1727, 1729, 0, 0, 0,
	0, 1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 1743, 0, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 1733, 1728, 0, 1737, 0, 0, 1747,
	0, 1700, 0, 0, 0, 1727, 1729, 0, 0, 1735,
	1746, 1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 1743, 1720, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 1733, 1728, 0, 1699, 0, 3091, 0,
	0, 1700, 0, 0, 0, 0, 1719, 0, 0, 1735,
	1746, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 1734, 1005, 0, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 1722, 1723, 1724,
	1725, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 3096, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 1722, 1723, 1724,
	1725, 0, 1737, 0, 0, 1747, 0, 1705, 0, 0,
	0, 1727, 1729, 0, 0, 1726, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 1743, 0,
	1744, 0, 0, 0, 0, 1721, 0, 1714, 1715, 0,
	0, 0, 1737, 0, 0, 1747, 0, 0, 0, 0,
	0, 1727, 1729, 0, 0, 1735, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 1743, 1720,
	1744, 0, 0, 0, 0, 0, 0, 1714, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 3458, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 1745, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 1734,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 1734,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 1728, 0, 0, 0, 0, 0, 0, 1700,
	0, 1726, 0, 0, 0, 0, 0, 1738, 1746, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 1728, 0, 1699, 0, 3007, 0, 0, 1700,
	0, 0, 0, 0, 1719, 0, 0, 1738, 1746, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 1722, 1723, 1724, 1725, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 1722, 1723, 1724, 1725, 0,
	1737, 0, 0, 1747, 0, 1705, 0, 0, 0, 1727,
	1729, 0, 0, 0, 0, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 1743, 0, 1744, 0,
	0, 0, 0, 0, 0, 1714, 1715, 1733, 1728, 0,
	1737, 0, 0, 1747, 0, 1700, 0, 0, 0, 1727,
	1729, 0, 0, 1735, 1746, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 1743, 1720, 1744, 0,
	0, 0, 0, 0, 0, 1714, 1715, 0, 1728, 0,
	1699, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	1719, 0, 0, 1735, 1746, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 3058, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 1722, 1723, 1724, 1725, 0, 1737, 0, 0, 1747,
	0, 1705, 0, 0, 0, 1727, 1729, 0, 0, 1726,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 1743, 0, 1744, 0, 0, 0, 0, 1721,
	0, 1714, 1715, 0, 0, 0, 1737, 0, 0, 1747,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 1735,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 1743, 1720, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 1745, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 1734, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1728, 0, 0, 0,
	0, 0, 0, 1700, 0, 1726, 0, 0, 0, 0,
	0, 1738, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 1738, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722,
	1723, 1724, 1725, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 0, 0, 1737, 0, 0, 1747, 0, 0,
	0, 0, 0, 1727, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707,
}
var sqlPact = [...]int{

	389, -1000, -1000, -1000, -1000, 138, -1000, -1000, 137, 136,
	135, 133, 132, 131, 130, 127, 126, 124, -1000, -1000,
	-1000, -1000, -1000, -1000, 121, -1000, -1000, 119, -1000, 118,
	117, 116, -1000, -1000, 114, -1000, 113, -1000, -1000, -1000,
	-1000, 112, 111, 110, 84608, 84076, 85133, 2129, 103656, 91461,
	2071, 75592, 103124, 75060, 102592, 1926, 102060, 2548, 109, -1000,
	101528, 107, 103, 101, -1000, 100996, -1000, 1641, -1000, 97,
	4717, 61199, 96, 95, 94, 2499, 93, -1000, 90, 87,
	86, -1000, 9710, 1417, -1000, 85, 81, -1000, 10358, 253,
	89340, 78, 75, 2197, 73, 72, 60666, 71, 69, 1995,
	2696, -1000, -1000, 1886, -1000, -1000, 68, 67, 66, 65,
	64, 63, 62, 61, 59, 58, 57, -1000, 56, 55,
	53, 52, 50, 49, 48, 47, -1000, 45, 41, 40,
	35, 30, 28, 26, 25, 24, 23, 22, 21, 18,
	16, -1000, 12871, 15, 1643, 1567, 1565, 1562, 1551, 1544,
	903, 8, 7, 6, 5, 4, 3, 2, 1, -3,
	-1000, -7, -8, -9, -13, -14, -15, -16, -17, 105,
	-19, -21, -22, -25, -28, -30, -32, 2143, -1000, 1416,
	977, 28143, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 109431, 104181, -34, -115, -35, -1000, 3101,
	929, 50541, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 189,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 422, 1884, 665, -1000,
	-1000, -1000, 100471, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2126, -77, -1000, 1756, -1000, -1000, -1000, -1000, -1000,
	663, -1000, 2122, 146, 2040, -1000, -1000, -1000, 3121, -1000,
	-1000, 104181, -1000, 968, -1000, -1000, 3564, 3563, 1883, 662,
	90929, -1000, 1850, -1000, 848, 29814, -1000, 1104, -1000, 29814,
	185, -1000, -1000, -1000, -1000, -1000, -1000, 3562, 3561, 3560,
	3559, 3558, -1000, -1000, 74528, 21407, 73996, 73464, 99946, 20865,
	83544, 83012, 99414, 69225, 964, -1000, -1000, -1000, 1314, -1000,
	-1000, -1000, -1000, -1000, -1000, -55, 66515, 3284, 104181, -1000,
	184, -1000, -1000, -1000, -1000, -1000, -1000, 42841, 720, 42272,
	615, 41703, 462, -1000, -1000, -1000, -1000, 68683, -1000, 98882,
	2264, 3557, 3556, 1038, 3555, 3018, 1657, 3552, 1686, 1112,
	3551, 3550, 3549, 3548, 3546, 3543, 3540, 1213, 98350, 2755,
	97818, 1536, 68141, 962, 82480, 85133, 2453, 97286, 1176, 1164,
	-1000, -1000, -1000, -1000, 2876, 2687, 2670, 1183, -1000, -1000,
	2262, 3539, 3538, 3537, 3536, 3532, 108906, 1655, 3531, 2331,
	3530, 3529, 3528, 3526, 3525, 3524, 3523, -1000, 81948, 960,
	81416, 80884, 3143, 96754, 80352, 96222, 67599, 41134, 965, -1000,
	-1000, -1000, 53214, 5228, 5169, 95690, 55374, 85133, 85133, -1000,
	-1000, -1000, -1000, -1000, 40565, 691, 39996, 947, -1000, -1000,
	53754, 2718, -1000, -1000, -1000, -1000, 39427, 500, 38858, 859,
	104181, -1000, 2754, 1779, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2158,
	1504, 3316, 2537, 67057, 1840, 1328, 3081, 2870, 2865, 1418,
	3518, 3517, 2400, 2853, 2851, 2850, 2844, 2841, 1181, 2394,
	429, 27574, 2747, 1468, 38289, 1387, 1405, 2824, 2819, 3325,
	1737, 1786, 1783, 72932, 3516, 3515, 3050, 2806, 2801, 2716,
	2715, -1000, -1000, -1000, -1000, 1385, -1000, -1000, -1000, -1000,
	-1000, 76117, -1000, -1000, 1203, -1000, -1000, 1203, -1000, -1000,
	-1000, -1000, -1000, 1147, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1416, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1902, -1000, 1872, -1000,
	-1000, 2299, 3023, 3023, 3023, 3120, 363, 352, -1000, 105,
	-1000, -1000, 114834, -1000, -1000, 43398, 43398, 43398, 43398, 43398,
	43398, 43398, 1968, -1000, 661, -1000, -1000, 705, -1000, 658,
	513, -1000, -1000, -1000, -1000, -1000, -1000, 657, -1000, -1000,
	-1000, -1000, -1000, -1000, 3284, -1000, 24172, -1000, -1000, -1000,
	334, 656, 43398, -1000, -1000, 3340, 3339, 919, -1000, 181,
	871, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2751, 654, 651, -1000, 647, 644, 640,
	635, 634, -1000, -1000, -1000, 630, 627, 626, 625, 624,
	622, 621, 619, -1000, 1824, -1000, -1000, -1000, -1000, -1000,
	-1000, 575, 574, 574, 574, -1000, 944, -1000, -1000, -1000,
	200, 571, 192, 570, 564, 559, -1000, 614, 613, 612,
	610, 608, 607, 601, 599, 598, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 943, -1000, -1000, -1000, -1000, -56, 104181,
	-1000, 422, -56, -1000, -1000, 597, -1000, 32054, 32054, 32054,
	-1000, -1000, 2103, 43398, -1000, 2286, -1000, -50, -50, 827,
	52133, -1000, 49460, 827, 457, 713, 56966, -1000, 2714, -1000,
	-1000, 595, 177, -1000, -1000, -1000, -1000, 21947, 2713, 104181,
	104181, 85133, 85133, 85133, 2923, 43398, -1000, -1000, 64380, 104181,
	85658, -1000, -1000, 3238, 61724, 63850, 104181, 2750, 63325, -1000,
	3053, -1000, -1000, 104181, -1000, 43398, -1000, 3237, 1752, 70295,
	3167, -67, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2307,
	2338, 1062, 2161, -1000, 2966, 1361, -1000, 29814, 3007, -1000,
	-1000, -1000, 173, 21947, -1000, -1000, -1000, -1000, -1000, -1000,
	4302, 2899, 1326, -1000, 2148, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1701, 2898, -1000, 3287, 2896, 1700,
	-1000, -1000, 2190, -1000, -1000, 3046, -1000, -1000, 1592, 2895,
	-48, -1000, -1000, 2223, -1000, -1000, 1749, -1000, -1000, 912,
	2893, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	79820, 54834, 53754, 66515, -61, -1000, -1000, -1000, -1000, -223,
	-1000, 20323, 114834, -1000, -1000, -1000, -1000, 1652, 114834, 800,
	-1000, -1000, 2889, -1000, 114834, 786, -1000, -1000, 2887, -1000,
	2749, -1000, -1000, 2213, -1000, -1000, 3514, -1000, -1000, 3513,
	-1000, 3512, 3511, 3509, -1000, 1484, 1748, 3508, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 79295, 2101, -1000, -1000,
	78231, -1000, 2212, 3166, -1000, -1000, -1000, 78763, 958, -1000,
	912, 2207, -1000, 88808, 914, -1000, 3507, 3133, 2496, 912,
	2205, -1000, -1000, -1000, -1000, -1000, 920, -1000, 58552, -1000,
	58552, -1000, 1412, -1000, 108381, -50, 85133, 3284, -1000, 3501,
	-1000, -1000, -1000, -1000, -1000, 2886, 3500, 3499, 3496, -1000,
	104181, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 196, 2884,
	-1000, -1000, 88283, 196, 2879, -1000, 196, 2878, -1000, 87758,
	-1000, -1000, 2047, 2877, -1000, 199, 2874, -1000, -1000, 197,
	2869, -1000, -92, 2867, -1000, -1000, 114834, -1000, -1000, -1000,
	-79, -1000, -1000, -1000, 929, -1000, 52666, -1000, 52666, 90397,
	69765, 889, 642, 60133, 114834, -1000, -1000, -1000, -1000, 114834,
	-1000, -1000, -1000, -261, -1000, -1000, 69765, 53754, 114834, -1000,
	-1000, -1000, -1000, 114834, -1000, -1000, -1000, 69765, 78231, -1000,
	95158, 77706, -1000, -1000, 1208, 2342, -1000, -1000, -1000, 69765,
	1215, 69765, 69765, 69765, -1000, 94626, -1000, -1000, 1837, 1155,
	3052, 1807, 85133, -1000, 1679, -1000, -1000, -1000, 3066, -1000,
	-1000, 2748, -1000, 62783, 87233, -1000, 86708, -1000, 86183, -1000,
	85133, -1000, 85133, -1000, 3491, 3486, 3483, 3480, -1000, 3478,
	3059, -1000, 114834, 3058, -1000, 3477, 3161, 2747, 114834, -1000,
	2908, 1579, 1564, 104181, -1000, -1000, 104181, -1000, 104181, -1000,
	-1000, -1000, 1315, -1000, -1000, 2304, -1000, -1000, -1000, -1000,
	85133, -1000, -1000, -1000, -1000, -1000, -1000, 2746, -1000, 1545,
	-1000, 1653, -1000, 2978, 1207, -1000, -1000, 202, -1000, -1000,
	-67, -1000, 107856, -1000, 2299, -1000, 104181, -1000, 2325, 2735,
	2745, 1676, 2132, 2404, -1000, 37720, 2373, 46740, 2142, 105,
	-1000, -1000, 105, 105, 29257, -1000, -1000, 61724, 61724, 21947,
	1154, 43398, 43398, 43398, 43398, 43398, 43398, 43398, 43398, 43398,
	43398, 43398, 43398, 43398, 43398, 43398, 43398, 43398, 43398, 43398,
	43398, 43398, 43398, 43398, 43398, 43398, 43398, 43398, 43398, 43398,
	43398, 43398, 43398, 43398, 43398, 43398, 1819, 43398, 1145, 43398,
	43398, 43398, 43398, 1908, -1000, -1000, 1735, 460, 1815, -1000,
	3283, 3283, 3283, 1258, 1258, 114874, 114874, 423, 3472, 705,
	-1000, 43398, -1000, 54, 43398, 22489, -1000, 352, 8335, 2293,
	-1000, 348, 23058, -1000, -1000, -1000, 24172, 513, 37151, 43398,
	934, 114834, -1000, -1000, 1662, 3296, 19782, 2763, 2583, 594,
	739, 735, 27005, 26436, 25867, 25298, 731, 43398, 43398, 43398,
	43398, 43398, 43398, 43398, 43398, -1000, -1000, 3311, -1000, 3296,
	-1000, -1000, -1000, -1000, 3296, 1153, 1118, 3296, -1000, 3296,
	3296, 7725, 7725, 36594, 36025, 35456, 47297, 34887, 43398, 24729,
	34318, 33749, -1000, 104181, -56, 3235, 43398, 145, -1000, 113646,
	-1000, 145, 145, 583, -85, 114834, 2371, 2371, 51072, 2141,
	1979, 1979, 1979, -1000, 827, 15425, 827, 93571, 1989, 827,
	827, 159, 188, 347, 48929, 2286, 93571, 681, 582, -37,
	-38, -41, -1000, -1000, -42, -44, -1000, -1000, 85133, 581,
	22489, 21947, 158, 1292, -87, 2428, 2413, 2408, -1000, 2405,
	1590, -94, 1144, 85133, 104181, -90, -1000, 552, -101, -1000,
	1212, 157, 3296, -1000, -1000, -1000, -1000, -1000, 3470, 3469,
	-1000, 940, 577, 576, 359, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 575, 574, 574, 574, -1000, 200, 571,
	192, 570, 564, 559, -1000, -1000, -1000, -1000, -1000, 2712,
	85133, 104181, -223, 85658, -88, -1000, -1000, -1000, -1000, -1000,
	85133, 833, -112, 1046, -67, -1000, -1000, -1000, 1203, -1000,
	2008, -1000, -1000, -1000, -1000, -1000, -1000, 1206, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 919, -1000, -1000, -1000,
	-1000, -1000, -1000, 3308, 3298, -59, -1000, -1000, 21947, -1000,
	-68, 1478, 1578, -1000, 72400, 2177, 3044, 3468, 2493, 3031,
	1374, -1000, 1309, 1143, 3112, 76117, 3197, 3204, 895, -1000,
	2709, -1000, -1000, 847, 1541, 1576, 1142, 76117, 3287, -1000,
	61724, -1000, 2478, 3109, 1295, 1285, 1295, 1295, 1299, -1000,
	76117, 1568, 1141, 1130, 1755, 1755, -1000, -1000, 1129, 1128,
	2147, -1000, -70, 3172, 3196, 330, -1000, 2708, 1122, -1000,
	-1000, 85133, 21947, 1467, 1459, 1553, 1120, -60, -1000, 3176,
	3174, 1119, 1116, -1000, 3070, -1000, 69765, 1699, 2866, 2530,
	799, 2528, -1000, -1000, 799, -61, 66515, 104181, 156, -1000,
	54, 43398, 43398, 54, 43398, 54, 3155, 2857, -1000, -1000,
	-1000, -1000, -1000, 3467, 1722, 2327, -1000, -1000, 554, 2204,
	2707, 104181, 2438, -62, 85133, -1000, 2855, 64910, 3287, 2203,
	-1000, -1000, 77174, -1000, 2854, 422, 2202, -1000, 401, 3465,
	-1000, 107331, -1000, 3053, 1188, 2852, 1000, 611, 3234, -1000,
	611, 59083, -1000, 104181, -1000, -50, -1000, 104181, -1000, -1000,
	-1000, 3464, -1000, 85133, -1000, -1000, 85133, 196, 2849, -1000,
	85133, -1000, 85133, 194, 2846, -1000, -1000, 104181, -1000, 85133,
	85133, -1000, 104181, 69765, 69765, 4522, 71350, -114, -119, 345,
	-1000, 94101, 104181, 999, 71875, 104181, 2997, 910, 53754, -1000,
	-120, -261, 2523, 889, 889, 799, -1000, 799, -1000, 85133,
	2741, -1000, -1000, 69765, 889, 889, 889, -1000, -1000, -1000,
	-1000, 3462, 3458, 3456, -1000, -1000, -1000, 911, 85133, 104181,
	85133, -1000, -1000, 104181, -1000, 104181, 104181, 85133, -1000, 911,
	104181, 911, 104181, 911, 104181, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 54, 43398, -1000, -1000, 3455, 1434, -1000, 2737,
	-1000, 2736, -1000, -11, -1000, -1000, -1000, -1000, -1000, 1975,
	85133, 85133, 85133, 85133, 104181, 104181, 85133, -1000, 76117, -1000,
	2325, 2735, -1000, -1000, -1000, -1000, -1000, -1000, 1597, 2063,
	-1000, 2378, -1000, 1337, -1000, -1000, -1000, 114834, 47837, -1000,
	-1000, 114834, 1677, -1000, 46183, 45626, -1000, -1000, 1491, 85133,
	2447, -1000, 2447, -205, -1000, 113606, 2368, 85133, -1000, -1000,
	-1000, -1000, -1000, 846, 572, 572, 1242, 1242, 1242, 1242,
	3138, 3019, 256, 2046, 13825, 13825, 7014, 7014, 7014, 7014,
	7014, 13825, 1867, 1258, 1258, 1867, 1867, 1867, 1867, 1867,
	1258, 1258, 1258, 13825, 13825, 13825, 114874, 7042, 10201, 43398,
	43398, 1115, 1723, 460, 8439, 43398, 7057, 7057, 7057, 7057,
	-1000, 2055, -1000, -1000, -1000, -1000, 2706, 542, 47297, 47297,
	-1000, -1000, -1000, -1000, 23615, 43398, -1000, -1000, -1000, -1000,
	33180, -1000, -1000, 9118, -320, 344, -110, -20, -1000, 43398,
	43398, 43398, 342, -1000, 155, 43398, 104181, -1000, 110526, 680,
	-159, -1000, -121, 1332, -1000, 43398, -1000, -1000, 1113, -1000,
	1109, 1108, 1106, -1000, 539, 336, -1000, 151, -1000, 1977,
	535, 534, 43398, -1000, -1000, -1000, -1000, -1000, 112992, -1000,
	-1000, 112816, -1000, -1000, 112776, -1000, -1000, 112418, -1000, -1000,
	-1000, 114658, 110489, 14625, 14224, 7764, 13394, 11226, -127, 322,
	-129, 320, 845, 836, 317, 316, 314, -130, -1000, 3454,
	3453, 3450, -1000, 3448, 3447, 3445, -1000, 3441, 3437, 3433,
	-1000, 3431, 3427, 3426, -1000, 3421, 3420, 3419, -1000, 3418,
	3417, 3416, -1000, 3413, 3412, 3411, -1000, 3410, 3408, 3406,
	-132, 313, -1000, 2697, -110, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 311, -1000, 310, -1000, 114618, -110, 309,
	5068, -1000, 47297, 47297, 47297, -1000, 308, -1000, 113390, -1000,
	114260, 32623, 32623, 32623, 303, 114220, 43398, -110, -137, -1000,
	-139, -1000, -1000, 442, -144, 931, 32054, 50008, 21947, -1000,
	931, 931, 43398, -1000, 43398, 2389, -1000, -1000, -1000, 2376,
	1761, 2371, 51072, -1000, -1000, -1000, -1000, 93571, -1000, 3284,
	2786, -1000, 93571, -1000, -1000, 104181, 422, -1000, 93571, 93571,
	21947, 827, -1000, 827, 93571, 617, -1000, -1000, -1000, -1000,
	-1000, 300, 55904, -20, 147, 21947, 912, -1000, 2489, 2489,
	2489, 2489, -1000, -1000, 104181, 1105, -65, -182, 3257, -1000,
	1860, -1000, 61724, -1000, 701, 1092, 21947, -1000, -1000, -1000,
	531, -1000, 3296, 3296, -1000, 3296, 104181, 2694, 98, 82,
	64910, 64910, 928, 29814, -1000, 1203, -1000, -1000, 1448, -1000,
	1732, -1000, 1072, -1000, -1000, -1000, -1000, 29814, -1000, 2638,
	104181, 104181, 85133, -1000, 104181, -1000, 2201, 106806, 2199, 61724,
	104181, -1000, -1000, 528, 527, 2366, 2364, 996, 104181, 104181,
	2353, 106281, 105756, -1000, 3405, 104181, 1912, 43398, 64910, 2128,
	2233, 54, 54, -1000, -1000, 54, 525, 1265, 85133, 85133,
	104181, 85133, 1596, -1000, -1000, -1000, -1000, -1000, 76642, -1000,
	-1000, 3306, 3303, -1000, 1295, -1000, -1000, -1000, 1295, 3287,
	1559, 104181, 85133, 64910, 104181, -1000, -1000, 104181, 1552, 104181,
	2778, 834, -1000, 1887, 54, 54, -1000, -1000, 54, 523,
	21947, 1820, -1000, 2771, 104181, 3338, 104181, 104181, 104181, 64910,
	3064, 105231, 104181, 104181, 64910, 3070, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 65990, 1007, 912,
	1532, 1103, 76117, 53754, 902, 53754, 2503, -1000, -1000, 19241,
	-1000, 114834, 114834, -1000, 114834, -1000, 62253, 104181, -1000, 953,
	104181, 71875, 869, 2839, 58021, -223, 889, 69765, 85133, -62,
	104181, -1000, -1000, 3287, 2836, 422, 2191, -1000, 69765, 3233,
	2835, 522, 3404, 3400, -1000, 2085, 2188, -1000, -1000, 104706,
	2859, 745, 104181, 931, 51072, 1682, -1000, 56436, 978, 104181,
	1642, 80, -1000, -1000, -1000, -26, 104181, -1000, 711, 3398,
	-1000, -1000, 196, -1000, 85133, 196, 196, -1000, 85133, 85133,
	2047, -1000, 199, 197, -1000, -92, -1000, -1000, 4522, 4522,
	889, -224, 519, -1000, 816, 813, 54294, 69765, -146, -1000,
	-1000, -1000, -1000, -1000, 85133, 104181, 602, 2491, 104181, -147,
	-1000, 144, 517, -1000, 2383, -1000, -1000, 910, 53754, 2693,
	-1000, -1000, 927, -1000, 1180, 889, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -51, -223, -223, -223,
	-65, -1000, 911, -1000, 911, -1000, 911, -1000, 114834, -1000,
	-1000, 1432, 1425, 104181, -1000, 21947, 104181, 85133, 21947, 85133,
	2729, 2724, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1011, -1000, 1677, 2059, -1000, 513, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2287, -1000, -66, 29257,
	830, -1000, -1000, 85133, -52, 43398, 43398, 8119, 6301, 43398,
	47297, 47297, -1000, 43398, 4623, -1000, -1000, -1000, -1000, -1000,
	2691, 509, 43398, 61724, 5705, 1114, -1000, 299, 10804, 1867,
	-1000, 43398, -1000, 296, 31497, -1000, 114004, -81, -154, -1000,
	15979, -110, -156, -1000, -1000, 697, -1000, 2911, -1000, 43398,
	114044, 2250, 1780, 1693, 1445, 3296, 3337, 18700, -1000, 59608,
	932, 1996, 112378, -1000, -1000, -1000, -1000, 61724, 61724, 43398,
	43398, -1000, 43398, 43398, 43398, -1000, -1000, -1000, 3296, 835,
	-1000, -1000, -1000, 835, -1000, -1000, 1295, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1295, -1000, 43398, -1000, -1000, 2680, 43398, -1000,
	61724, 61724, 47297, 47297, 47297, 47297, 47297, 47297, 47297, 47297,
	47297, 47297, 47297, 47297, 47297, 47297, 47297, 47297, 47297, 47297,
	47297, 2358, 47297, 3277, 3277, 3277, -1000, 2723, 2680, 43398,
	43398, 61724, 295, 294, 291, -1000, 43398, -110, -1000, -1000,
	4522, 506, -1000, 2278, -1000, 2581, -1000, 43398, -1000, -164,
	-1000, 2286, -1000, -1000, 2581, 2581, -166, 114834, 51072, 51072,
	-1000, 505, 43398, 2352, -1000, -1000, 675, -321, -1000, 793,
	-1000, -1000, -1000, -1000, -1000, 422, -1000, -1000, -1000, 143,
	93571, 93571, 674, -1000, -169, -1000, -1000, -171, -1000, 3228,
	289, 21947, -1000, 931, 3051, -1000, -1000, -1000, -1000, -1000,
	-1000, -223, 104181, 104181, 2039, 3333, -1000, 3301, 696, 673,
	142, 3296, 286, 284, 279, -223, 104181, 104181, 104181, -1000,
	-1000, -1000, 2417, -1000, -67, -1000, -1000, -1000, 43398, -1000,
	-1000, 3039, 1099, 1098, -1000, -1000, 2834, -1000, 2181, -1000,
	982, -1000, 1500, -1000, 43398, 51603, 504, 503, 3396, 1808,
	3393, 998, 2832, 2047, 2830, 2047, -1000, -1000, -1000, 862,
	-1000, 114834, -1000, 501, 499, -1000, -68, 1466, 1525, 916,
	-1000, -1000, 43398, 43398, 93046, -1000, 414, 3046, -53, -1000,
	-1000, 1475, 1093, -1000, -1000, -1000, -1000, 3287, 1470, 1085,
	-1000, -1000, -1000, -223, -223, 915, -1000, -1000, 2773, -1000,
	913, -1000, -1000, 43398, -1000, -70, 1084, 3171, 2180, 85133,
	1081, -1000, 1080, -1000, -1000, -1000, 3169, 2047, 2828, 1088,
	-1000, -1000, -1000, -1000, -1000, 65450, -1000, 104181, 85133, 1410,
	799, -1000, 2206, 799, 902, 2663, -1000, 2415, -1000, 85133,
	3391, 277, -172, -72, 61724, 3227, -1000, 2042, 518, 85133,
	839, -1000, 3284, -1000, -1000, -1000, -1000, 3165, 85133, 3224,
	2823, 912, 54, 85133, 3332, -1000, -1000, 85133, 2817, 2084,
	2179, 2319, 745, 70825, -1000, 912, 1994, -80, -1000, 1642,
	30928, 3040, -179, -1000, -1000, -1000, 931, 59083, 51072, 43398,
	3389, -180, -1000, -1000, -1000, -1000, 196, -1000, -1000, -1000,
	194, -1000, -1000, -1000, -1000, -1000, -1000, 91991, 91991, 69765,
	69765, 69765, 889, 104181, 104181, 71875, -1000, 497, 104181, 104181,
	496, -1000, 104181, 104181, 3386, 69765, -73, 495, -1000, 791,
	790, 784, -1000, -1000, -1000, -1000, -1000, -1000, -261, 54,
	-1000, 2026, 85133, -1000, 18159, -1000, -1000, -1000, -1000, -1000,
	911, -1000, -1000, 1891, 2140, 1891, 1614, 1607, -1000, 1997,
	-1000, -1000, -1000, -1000, 2406, 3045, 21947, 3159, 7057, 43398,
	43398, 4608, 1068, 555, 7057, 43398, 43398, 61724, 115232, -185,
	43398, 43398, -1000, 43398, 669, 114834, 3331, 43398, 270, 269,
	-1000, -1000, -1000, 3288, -1000, -1000, -1000, 114834, 43398, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 267, -1000, 99, -1000,
	-1000, -1000, 109956, -1000, 43398, 263, 3104, -1000, 262, 260,
	9519, 6080, 112202, 112162, 111804, 257, -1000, -1000, 243, 242,
	114834, 2723, 114834, -1000, -1000, 776, 776, 1249, 1249, 1249,
	1249, 3277, 498, 797, 898, 384, 384, 384, 753, 917,
	917, 384, 384, 384, 2659, 2355, 486, 1923, -1000, -1000,
	114834, 114834, 241, -1000, -1000, -1000, -110, 234, 4522, -1000,
	2577, 3100, 114834, -1000, 51072, 2577, 2577, -1000, -1000, 1761,
	104181, 114834, 51072, -1000, 2786, -1000, 16531, -1000, 21947, -1000,
	-1000, -1000, -1000, 3284, -1000, 55904, -1000, 483, -1000, -10,
	-1000, 3051, -1000, 782, -1000, -223, -223, -1000, -1000, 668,
	3375, 692, 21947, 232, -1000, -1000, -1000, -223, -223, -223,
	-1000, 2996, 114834, 104181, 104181, 104181, 2810, -1000, 2312, -1000,
	996, 111764, -187, -1000, 104181, 43398, 104181, 51603, 104181, -1000,
	-1000, 1684, 2439, 1027, -1000, 3069, 104181, -1000, 104181, -1000,
	-1000, 104181, 104181, 85133, 104181, 2791, -188, 114834, -74, -1000,
	781, -1000, 1274, -1000, 17618, 104181, 85133, 104181, 85133, 1959,
	-1000, 2787, -193, 21947, -1000, 3328, 3326, 2809, 3075, 3318,
	104181, -1000, 104181, 85133, 2995, -1000, -1000, -1000, -1000, 1461,
	1061, 902, -75, 481, -1000, 779, -1000, -1000, 778, 902,
	-1000, 69765, 53754, 422, -1000, 2488, -1000, 89865, 1988, 54,
	-1000, 3373, 92521, 477, -1000, 2019, -1000, 573, 64910, 3287,
	54, 85133, -1000, -1000, 422, 231, -76, -1000, 987, 21947,
	85133, 2808, 2321, 745, 70825, -1000, 1188, 2404, -1000, -78,
	-1000, 540, 54, 1994, -1000, -80, 114834, -1000, 774, -1000,
	-1000, -1000, -194, -1000, -1000, 217, -1000, 2990, 2989, -1000,
	2625, 51603, 474, 473, 104181, 2982, -1000, -1000, -195, 2433,
	2433, 69765, 53754, 69765, 910, -1000, 2150, -1000, -1000, -1000,
	-1000, -1000, 21947, 1464, -1000, 472, 471, -1000, -1000, -1000,
	-1000, 3045, 7057, 7057, 43398, 43398, 43398, 7057, 115232, -196,
	-1000, 7057, 7057, -110, -1000, -1000, 114004, -1000, -1000, -1000,
	114834, -1000, 17077, 1893, -1000, 111588, -1000, 29257, -1000, -1000,
	43398, 43398, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47297, 2650, 470, 61724, -1000, -1000, 216, 904, 43398, 45069,
	2286, 904, 904, -1000, -202, -1000, -1000, -1000, 3284, -10,
	-1000, -1000, 3372, 21947, -1000, 69765, 690, -1000, 3365, -1000,
	-1000, -1000, -1000, -1000, -1000, 104181, -1000, 104181, -1000, 21947,
	104181, 2607, 2171, -1000, -1000, 2351, 468, 47297, 85133, 795,
	-1000, 3251, 2573, 1760, 51603, -1000, 3045, -1000, 111548, -1000,
	-203, -204, 2168, -1000, -1000, 2151, 43398, -1000, 61724, 467,
	2047, 2047, -209, -210, -1000, -1000, 43398, 1059, 104181, 30371,
	-1000, 3362, 3046, -1000, -1000, -1000, -1000, 104181, 43398, 1057,
	-1000, -1000, -1000, 3317, 2047, 21947, -1000, 2047, 2047, 3075,
	1025, 104181, 85133, -1000, 2412, 2412, 69765, 53754, -1000, -92,
	902, 3223, 2483, 3361, -1000, -1000, -1000, -1000, 2346, -1000,
	-1000, 104181, 2339, 892, -1000, -211, -1000, 773, 769, 71875,
	869, 854, -1000, -1000, -1000, -1000, 422, 3222, -1000, 3295,
	466, 104181, 2083, 463, 21947, 3038, 745, 70825, -1000, 2859,
	1642, -1000, 2176, 104181, 3025, -1000, 2404, 460, -1000, 889,
	459, 456, 2183, 2183, -212, 51603, 51603, -217, 447, 889,
	-1000, -222, -1000, -1000, -1000, -1000, -97, -1000, 754, 623,
	-1000, -1000, 85133, 85133, 43398, 43398, -1000, 7057, 7057, 7057,
	-1000, 209, -1000, -1000, 1994, 3096, -1000, -99, 111190, 111150,
	5521, 47297, 61724, -225, -1000, -1000, 104181, 114834, -100, -1000,
	114834, 445, 444, 273, -1000, -1000, -1000, 556, -1000, -1000,
	3360, -1000, -1000, 1538, -1000, -1000, -1000, 104181, 2178, -1000,
	992, 43398, 1923, 443, 43398, -1000, 3215, -1000, 2476, 2658,
	2483, 441, -1000, -1000, -1000, -1000, 830, 104181, 986, 1581,
	-1000, -1000, 114834, 3075, 51603, -1000, -1000, 438, 437, 114834,
	432, 747, 2630, -1000, -1000, -1000, -1000, 114834, 428, 3171,
	-1000, -1000, -1000, -1000, 2047, 85133, -1000, -1000, -1000, -227,
	-1000, -1000, 1692, 54, 1887, 2516, -1000, 1988, 427, -1000,
	-1000, 2066, 2385, -1000, 92521, 29814, 29814, 205, 3212, 854,
	-1000, 3276, -1000, 3208, 54, -1000, 51603, -1000, 85133, 51603,
	2082, 1755, 2298, 70825, -1000, 2319, -1000, -1000, -228, 104181,
	1642, -1000, -1000, 69765, 69765, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 986, -230, -233, -1000,
	69765, -1000, -1000, 2150, -1000, 104181, -1000, 104181, -1000, -1000,
	-235, -236, -1000, 1992, 43398, 29257, -1000, -1000, 5521, -243,
	-1000, -107, -1000, 3201, 45069, 3357, 3356, 3351, -1000, -1000,
	-1000, -1000, 2803, 2563, 110934, 2280, 104181, 110575, -1000, 2626,
	-1000, -1000, 1887, 104181, -1000, -1000, 2483, 2560, 85133, 989,
	-244, 1891, 1891, 43398, 28700, 1958, 43398, -1000, -1000, 3075,
	-1000, 2603, 3292, -1000, 869, -1000, 1952, 104181, -1000, 3065,
	-1000, 2981, -1000, -1000, -1000, 2488, 54, -1000, -1000, 54,
	-1000, -250, 987, -251, 85133, 1218, 745, 745, -1000, 2321,
	931, -1000, -1000, -252, -259, 1760, 986, 885, -260, -1000,
	-265, -266, -1000, -1000, 204, 44512, 44512, 44512, -110, -205,
	-1000, 104181, 424, -1000, -1000, -1000, -1000, 2774, 901, -1000,
	2070, 1753, -18, 983, -1000, -1000, 2573, -267, -1000, 900,
	422, -1000, 43398, 986, -268, -1000, 973, -273, -1000, 969,
	-275, -1000, 2628, -1000, -280, 2047, 896, 3154, -1000, -1000,
	-1000, 2066, 85133, -281, -1000, -1000, 2248, -1000, 2483, 892,
	-1000, 986, 421, 1760, 416, -1000, -1000, 104181, 1295, 3038,
	2858, 889, 889, 2483, 1760, 931, 413, 889, -1000, -1000,
	-1000, 2902, -1000, 48377, 2037, 1595, 113032, 2902, 2902, -1000,
	-1000, 104181, 3132, -1000, 2081, 2072, 1397, -1000, -1000, -1000,
	-1000, -1000, -1000, 931, -1000, 3130, 2280, 114834, 2483, -1000,
	1891, 2515, -1000, 1891, 2609, -1000, 1927, -1000, -1000, -1000,
	1543, 3273, -1000, 403, -1000, 104181, 1587, 1575, 3349, 1887,
	2066, 1760, 51603, 2483, 51603, -223, -1000, 1755, 1231, -1000,
	-1000, 1887, 2483, -1000, -1000, -1000, 1639, 3244, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 734, -1000, 2959, -1000,
	1010, 1851, 1851, -1000, 515, 2070, -1000, -1000, 394, -1000,
	388, -1000, 2016, -1000, -1000, 104181, -1000, -1000, 3345, -1000,
	869, -1000, 2483, -282, 1887, -290, 1218, -1000, 1348, 885,
	1887, 1593, -1000, -1000, 1985, 43955, 43398, -1000, 3261, -1000,
	-1000, 2347, -1000, 43398, 2573, 43398, 43398, 57496, -292, -1000,
	2066, 1887, 986, 885, 1760, -1000, 59083, 931, 885, -1000,
	-1000, -1000, 114834, -1000, -1000, -1000, 114834, -1000, -297, -298,
	-224, 91991, 2045, -1000, 885, 1760, 931, 2483, -278, -1000,
	931, 1887, 1055, -299, -1000, -1000, -1000, 931, 2483, -1000,
	1887, -1000, -1000, -1000, 386, -1000, -1000, 1887, 885, 43398,
	885, 931, -304, 931, -1000, 1887, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4192, 4191, 4190, 4186, 4182, 4181, 4180, 4175, 4173,
	4172, 4171, 4170, 4169, 4168, 4166, 4165, 4164, 4159, 4158,
	4157, 4153, 4149, 4148, 4144, 4143, 4142, 4135, 4134, 4133,
	4132, 4129, 4128, 4125, 4118, 4117, 4116, 4113, 4112, 4110,
	4109, 4108, 4105, 4103, 4102, 4101, 4099, 4096, 4095, 4094,
	4092, 4089, 4088, 4084, 4083, 4082, 4081, 44, 4080, 4078,
	4075, 4074, 4073, 4070, 4068, 4065, 4062, 4061, 4060, 4056,
	4055, 4053, 4052, 4051, 4048, 4046, 4039, 47, 4037, 244,
	4036, 4035, 4034, 4033, 4032, 4031, 4030, 4029, 4020, 4019,
	4018, 4015, 242, 4014, 103, 4005, 4003, 4002, 4001, 3999,
	240, 3997, 3996, 3994, 3989, 251, 3986, 3985, 3984, 3977,
	3970, 3968, 3967, 3964, 3955, 3954, 63, 143, 3953, 3950,
	122, 3946, 3945, 3944, 3943, 3942, 3940, 3937, 3934, 3933,
	3930, 221, 3927, 238, 3926, 3918, 3916, 3915, 3914, 3913,
	3909, 3908, 3907, 3906, 3904, 3903, 3902, 3901, 3900, 3899,
	3895, 3894, 3892, 3891, 3890, 3889, 3888, 3887, 3882, 3878,
	3877, 3876, 3875, 3873, 3871, 3869, 3868, 3865, 246, 169,
	3862, 3861, 237, 236, 3860, 3858, 3856, 3854, 3853, 110,
	4, 116, 3852, 3850, 71, 74, 67, 88, 89, 81,
	3849, 95, 3848, 117, 53, 3847, 11, 12, 154, 229,
	8744, 217, 3846, 3844, 3843, 211, 171, 3842, 210, 3841,
	3840, 3839, 3835, 82, 54, 163, 161, 145, 147, 650,
	3833, 3832, 90, 60, 45, 37, 18, 232, 6, 30,
	3828, 3827, 3826, 3822, 3202, 106, 3821, 235, 215, 142,
	3818, 3817, 3815, 1001, 3813, 3811, 41, 3810, 96, 119,
	118, 84, 112, 3808, 128, 24, 3807, 139, 46, 3805,
	138, 86, 66, 8704, 4256, 3804, 107, 58, 87, 2569,
	156, 144, 177, 73, 140, 186, 181, 158, 102, 3802,
	273, 3801, 3212, 83, 141, 3798, 3797, 3795, 62, 178,
	98, 3793, 3790, 56, 8, 16, 10, 153, 27, 108,
	39, 19, 3789, 17, 3788, 3786, 3785, 3784, 3783, 32,
	160, 3780, 248, 3779, 64, 43, 22, 3777, 14, 185,
	3776, 204, 114, 3775, 3774, 227, 190, 151, 3770, 68,
	212, 3766, 3764, 3762, 3760, 3759, 121, 1, 113, 3758,
	3754, 127, 3751, 42, 209, 173, 3746, 50, 3745, 3742,
	148, 91, 120, 247, 125, 203, 99, 201, 165, 202,
	3741, 3740, 3738, 214, 3737, 3735, 199, 132, 3729, 3728,
	183, 250, 38, 69, 207, 59, 168, 162, 3724, 174,
	3721, 3720, 249, 159, 196, 3, 2, 79, 111, 3719,
	5, 208, 133, 184, 101, 3718, 5965, 2045, 2488, 3716,
	3715, 136, 100, 65, 104, 135, 234, 57, 3712, 3711,
	2443, 3709, 3708, 3707, 3705, 164, 3704, 3703, 3698, 126,
	187, 175, 3694, 85, 77, 52, 20, 109, 225, 243,
	94, 198, 179, 278, 3692, 3689, 3687, 170, 3686, 49,
	105, 3684, 176, 230, 3683, 3682, 92, 3681, 134, 1500,
	51, 137, 3680, 197, 3678, 3677, 3676, 3675, 3674, 3673,
	3672, 445, 206, 3670, 3667, 3664, 29, 172, 3661, 233,
	167, 155, 76, 40, 3660, 80, 3697, 3654, 218, 200,
	70, 157, 3653, 3651, 3340, 48, 189, 0, 11328, 6599,
	10478, 10918, 3648, 5295, 3647, 3643, 3642, 194, 123, 3638,
	3636, 3633, 93, 3631, 61, 3629, 3628, 55, 3624, 21,
	15, 13, 26, 23, 792, 150, 3623, 3622, 115, 129,
	130, 3621, 245, 205, 3619, 3618, 3617, 3616, 78, 3615,
	33, 3614, 31, 3612, 3611, 34, 7, 35, 3610, 3609,
	219, 3608, 195, 223, 3607, 146, 3606, 3190, 124, 3605,
	3604, 231, 75, 3603, 226, 3601, 3134, 3600, 3599, 25,
	3595, 3591, 213, 152, 191, 3590, 3589, 149, 3588, 3587,
	3586, 224, 3585, 3584, 28, 3576, 9, 3575, 3572, 180,
	2961, 3569, 3568, 36, 3567, 166,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 44, 44, 9, 9, 9,
	9, 9, 9, 9, 9, 32, 28, 29, 30, 486,
	486, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 33, 33, 17, 17, 35, 35,
	18, 18, 36, 36, 551, 551, 21, 38, 22, 39,
	15, 552, 552, 552, 552, 31, 23, 40, 25, 25,
	25, 25, 25, 182, 182, 182, 182, 20, 20, 34,
	34, 216, 216, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 550, 550,
	218, 218, 217, 212, 212, 553, 553, 219, 219, 219,
	221, 221, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 450, 450, 450, 482, 482, 481, 481, 481, 566,
	566, 567, 567, 567, 567, 567, 119, 119, 349, 349,
	349, 46, 46, 46, 46, 46, 545, 545, 184, 184,
	184, 186, 186, 185, 185, 185, 185, 68, 68, 558,
	558, 559, 559, 557, 560, 560, 560, 183, 183, 183,
	115, 115, 115, 115, 116, 116, 117, 117, 187, 187,
	187, 189, 189, 188, 188, 188, 188, 188, 188, 188,
	188, 193, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 96, 96, 484, 484, 485, 485, 178, 178, 179,
	179, 179, 179, 180, 180, 181, 181, 181, 60, 190,
	190, 192, 192, 191, 191, 48, 48, 48, 48, 48,
	48, 48, 49, 49, 49, 49, 49, 50, 50, 50,
	50, 50, 50, 51, 51, 51, 51, 51, 51, 58,
	58, 58, 58, 169, 169, 61, 61, 61, 61, 61,
	61, 61, 61, 61, 61, 61, 65, 65, 65, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 569, 569,
	570, 570, 571, 571, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 74, 74, 311, 311, 281, 281, 75, 75, 75,
	76, 76, 77, 77, 62, 62, 543, 543, 326, 326,
	441, 441, 79, 79, 348, 348, 80, 80, 80, 80,
	80, 80, 81, 81, 81, 81, 81, 81, 81, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 89, 89, 89, 89, 89, 90, 90,
	90, 87, 87, 87, 84, 84, 84, 83, 83, 83,
	88, 88, 88, 542, 272, 272, 86, 86, 86, 85,
	85, 85, 327, 327, 91, 91, 91, 91, 282, 92,
	92, 92, 92, 92, 92, 92, 92, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	443, 443, 93, 93, 93, 408, 408, 97, 97, 97,
	364, 364, 98, 98, 98, 98, 98, 99, 99, 99,
	99, 99, 99, 118, 118, 118, 118, 118, 118, 547,
	547, 319, 319, 237, 237, 237, 237, 108, 108, 108,
	108, 109, 109, 109, 110, 110, 174, 174, 125, 125,
	125, 125, 125, 124, 124, 124, 124, 124, 124, 52,
	52, 52, 53, 53, 54, 54, 55, 55, 56, 56,
	57, 57, 57, 57, 57, 127, 127, 563, 563, 129,
	126, 126, 126, 128, 128, 128, 128, 130, 131, 131,
	131, 131, 131, 131, 131, 131, 132, 132, 475, 475,
	335, 335, 473, 473, 494, 494, 474, 474, 286, 286,
	286, 286, 286, 287, 287, 287, 483, 483, 483, 483,
	483, 483, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 175, 175,
	176, 177, 177, 177, 177, 177, 154, 154, 154, 168,
	168, 168, 168, 168, 168, 168, 157, 157, 157, 143,
	143, 134, 134, 134, 134, 134, 134, 134, 138, 138,
	138, 138, 138, 138, 138, 138, 135, 135, 145, 145,
	145, 145, 145, 139, 139, 140, 140, 164, 164, 142,
	142, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	136, 136, 136, 136, 147, 147, 147, 147, 371, 371,
	371, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 167, 167, 167, 167, 167, 167, 561, 561,
	562, 562, 161, 161, 161, 161, 161, 161, 422, 422,
	155, 155, 155, 155, 160, 160, 160, 160, 163, 163,
	163, 163, 354, 354, 152, 152, 152, 153, 153, 153,
	158, 158, 159, 156, 156, 162, 162, 162, 162, 137,
	137, 137, 573, 573, 573, 165, 165, 151, 151, 166,
	166, 166, 166, 166, 166, 166, 166, 149, 149, 149,
	148, 148, 148, 148, 150, 150, 141, 544, 544, 540,
	540, 540, 540, 540, 540, 540, 540, 541, 541, 541,
	541, 546, 546, 102, 102, 102, 102, 102, 111, 111,
	111, 111, 111, 103, 103, 103, 103, 103, 105, 105,
	104, 104, 104, 104, 69, 69, 69, 69, 69, 14,
	14, 14, 70, 70, 196, 196, 196, 300, 300, 197,
	197, 294, 294, 294, 294, 194, 194, 195, 195, 71,
	71, 574, 574, 574, 554, 554, 554, 555, 555, 555,
	555, 555, 555, 288, 288, 289, 289, 388, 388, 388,
	388, 388, 292, 292, 292, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 295, 295, 220, 220, 220, 298,
	299, 299, 296, 296, 297, 297, 297, 302, 302, 301,
	304, 304, 303, 387, 503, 503, 505, 505, 505, 505,
	505, 505, 505, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 575, 575, 501, 501, 501, 502,
	497, 497, 498, 498, 498, 498, 498, 290, 290, 291,
	291, 291, 291, 499, 500, 317, 317, 426, 504, 504,
	506, 506, 508, 576, 576, 576, 576, 576, 576, 577,
	577, 577, 386, 386, 385, 385, 309, 309, 509, 509,
	509, 509, 510, 510, 510, 510, 510, 513, 512, 511,
	511, 511, 511, 511, 73, 73, 73, 351, 351, 350,
	350, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 171, 171, 240, 240,
	67, 67, 67, 12, 12, 12, 556, 556, 556, 72,
	72, 72, 72, 72, 72, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 549, 549, 548, 548, 241,
	241, 579, 579, 78, 78, 78, 78, 78, 78, 78,
	444, 444, 445, 445, 66, 66, 66, 66, 66, 372,
	372, 370, 370, 369, 369, 316, 316, 424, 424, 424,
	425, 245, 245, 246, 246, 213, 213, 213, 27, 26,
	19, 19, 24, 24, 42, 42, 42, 42, 45, 45,
	41, 41, 41, 41, 43, 43, 37, 37, 564, 564,
	565, 565, 107, 107, 112, 112, 112, 112, 112, 113,
	113, 113, 113, 114, 114, 114, 114, 123, 123, 170,
	170, 170, 170, 170, 170, 170, 47, 47, 47, 47,
	59, 59, 59, 59, 121, 581, 581, 581, 122, 122,
	122, 580, 580, 238, 238, 382, 382, 383, 383, 582,
	582, 384, 384, 384, 384, 384, 231, 230, 232, 232,
	233, 233, 64, 64, 64, 226, 226, 227, 227, 227,
	228, 228, 222, 222, 223, 223, 224, 224, 225, 225,
	229, 229, 583, 583, 100, 100, 100, 173, 173, 280,
	280, 280, 379, 379, 379, 310, 310, 252, 252, 381,
	381, 381, 381, 347, 347, 347, 172, 172, 324, 324,
	337, 337, 338, 338, 438, 438, 339, 106, 106, 120,
	120, 200, 200, 198, 198, 198, 198, 198, 198, 198,
	198, 205, 205, 206, 206, 207, 207, 208, 209, 209,
	209, 209, 328, 328, 210, 210, 210, 199, 199, 199,
	201, 201, 201, 201, 201, 201, 201, 204, 204, 204,
	204, 211, 211, 211, 203, 203, 520, 520, 520, 522,
	522, 524, 524, 523, 523, 519, 519, 521, 521, 578,
	578, 353, 353, 353, 307, 308, 305, 305, 306, 306,
	314, 314, 312, 313, 313, 315, 315, 423, 423, 423,
	214, 214, 214, 344, 344, 344, 344, 345, 345, 375,
	375, 373, 373, 373, 373, 374, 374, 376, 376, 376,
	377, 377, 378, 378, 341, 341, 342, 342, 343, 343,
	343, 343, 404, 404, 202, 202, 202, 321, 321, 321,
	322, 322, 394, 394, 394, 394, 394, 394, 395, 395,
	393, 393, 393, 393, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 428, 429, 429, 323, 323, 430, 380,
	380, 538, 538, 538, 539, 539, 421, 421, 431, 431,
	431, 431, 431, 431, 419, 419, 420, 420, 439, 440,
	440, 357, 357, 357, 357, 355, 355, 358, 358, 358,
	358, 356, 356, 432, 432, 432, 432, 346, 346, 433,
	433, 433, 433, 434, 435, 435, 436, 436, 389, 390,
	390, 446, 446, 446, 446, 448, 320, 320, 320, 320,
	320, 496, 495, 495, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 463, 463, 463, 463, 463,
	463, 463, 449, 449, 449, 449, 449, 453, 453, 453,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 454, 454, 459, 459, 460, 460, 460, 455, 456,
	461, 461, 461, 461, 584, 584, 465, 465, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 451, 451, 451,
	458, 458, 458, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 365, 365, 367, 367,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 398, 398, 398,
	398, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 514, 514, 514, 514,
	514, 514, 514, 514, 400, 400, 517, 517, 518, 518,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 525,
	525, 526, 526, 528, 528, 529, 529, 530, 531, 531,
	531, 532, 533, 533, 527, 527, 534, 534, 534, 534,
	535, 535, 536, 536, 536, 536, 536, 537, 537, 537,
	537, 537, 410, 410, 411, 411, 417, 417, 417, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 242, 242, 242, 242, 242,
	333, 333, 331, 331, 331, 334, 334, 332, 332, 330,
	330, 329, 329, 407, 407, 405, 405, 409, 409, 359,
	359, 464, 464, 464, 464, 464, 464, 464, 464, 360,
	360, 360, 368, 361, 361, 362, 362, 362, 362, 362,
	401, 402, 363, 363, 363, 403, 403, 412, 416, 416,
	415, 414, 414, 413, 413, 391, 391, 392, 392, 340,
	340, 585, 585, 336, 336, 437, 437, 437, 437, 284,
	284, 325, 325, 283, 283, 275, 275, 276, 276, 276,
	276, 318, 318, 418, 418, 466, 466, 467, 467, 468,
	468, 469, 469, 470, 471, 472, 406, 406, 262, 261,
	249, 250, 260, 259, 258, 248, 251, 255, 256, 257,
	253, 254, 268, 267, 266, 273, 274, 264, 265, 442,
	247, 277, 277, 278, 278, 278, 279, 279, 279, 279,
	243, 243, 244, 244, 269, 269, 270, 271, 271, 263,
	263, 263, 234, 234, 234, 235, 235, 236, 236, 480,
	480, 477, 477, 477, 478, 478, 478, 479, 479, 479,
	479, 476, 476, 476, 476, 476, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 488, 488, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 490, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 493, 493,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 3, 6, 6, 6, 4, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 6, 3, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 2, 6, 4, 7, 7, 7, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	4, 3, 4, 3, 3, 4, 4, 5, 0, 1,
	1, 3, 2, 4, 3, 3, 5, 3, 4, 3,
	5, 3, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 3, 4, 10, 10, 3,
	5, 5, 5, 3, 2, 5, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	1, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 9, 9, 3, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 1, 2, 8, 4, 2,
	5, 5, 5, 2, 1, 3, 11, 12, 8, 5,
	3, 1, 5, 9, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 11, 14, 3, 3, 0, 3, 4, 2,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 571, -94, -91, -60, -58, -97, -98,
	-80, -99, -93, -118, -123, -106, -107, -119, -125, -170,
	-175, -176, -177, -3, -46, -48, -61, -79, -81, -92,
	-101, -100, -102, -108, -115, -111, -96, -52, -120, -124,
	-133, -171, -172, -173, 32, 31, 100, 80, 151, 126,
	134, 196, 373, 413, 424, 387, 405, 392, -128, -129,
	441, -47, -59, -122, -121, 73, 127, 400, -4, -12,
	29, 46, -49, -50, -51, 62, -67, -63, -74, -68,
	-65, -568, 102, -521, -82, -85, -114, -572, 139, 158,
	214, -103, -104, 356, -109, -110, 407, -112, -113, 409,
	159, -54, -53, 153, -198, -200, -126, -127, -174, -134,
	-135, -136, -137, -138, -139, -140, -164, -141, -142, -143,
	-144, -145, -146, -167, -147, -148, -149, -150, -151, -156,
	-152, -153, -154, -155, -157, -158, -160, -161, -162, -163,
	-165, -166, 446, -159, 503, 49, 460, 82, 143, 417,
	21, -5, -6, -7, -8, -9, -10, -11, -14, -13,
	-62, -64, -66, -69, -70, -71, -78, -72, -73, -520,
	-83, -84, -87, -89, -90, -86, -88, 406, -201, -199,
	568, 518, -16, -21, -22, -17, -18, -20, -23, -19,
	-24, -33, -38, -39, -35, -36, -34, -37, -40, -41,
	-42, -43, -44, -45, -26, -31, -32, -27, -28, -29,
	-30, -15, -25, 537, 546, -204, -202, -203, -211, 433,
	526, 477, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, -282, 2, -264, -269, -270, -271, -263,
	-234, -490, -493, 4, -487, -491, 165, 223, 320, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 116, 117, 118, 119, 121, 126, 127, 130, 125,
	129, 132, 133, 134, 137, 138, 139, 141, 142, 144,
	145, 146, 148, 149, 151, 152, 153, 156, 154, 485,
	155, 157, 158, 159, 160, 163, 171, 172, 173, 178,
	180, 184, 185, 188, 189, 190, 191, 192, 193, 194,
	195, 197, 201, 203, 204, 205, 206, 207, 213, 214,
	216, 217, 218, 219, 224, 225, 226, 230, 227, 236,
	237, 241, 242, 243, 245, 249, 250, 251, 252, 253,
	254, 256, 258, 257, 260, 263, 264, 267, 271, 272,
	275, 276, 277, 278, 280, 281, 284, 282, 285, 286,
	283, 287, 289, 290, 291, 292, 293, 294, 295, 296,
	297, 298, 299, 300, 288, 303, 301, 305, 306, 307,
	318, 316, 311, 312, 308, 313, 309, 310, 314, 315,
	322, 323, 326, 211, 328, 329, 332, 350, 336, 337,
	338, 341, 342, 345, 348, 349, 351, 352, 353, 354,
	355, 356, 357, 358, 360, 361, 363, 364, 365, 367,
	368, 369, 371, 373, 374, 376, 377, 379, 380, 381,
	382, 383, 384, 385, 387, 389, 388, 390, 392, 394,
	395, 400, 405, 402, 403, 404, 406, 407, 408, 409,
	411, 412, 413, 415, 416, 417, 418, 420, 422, 423,
	426, 427, 443, 444, 462, 424, 425, 428, 429, 430,
	431, 432, 436, 434, 435, 437, 438, 439, 441, 442,
	445, 446, 448, 449, 450, 451, 452, 453, 456, 458,
	459, 460, 461, 463, 466, 467, 468, 469, 464, 476,
	471, 473, 474, 478, 479, 480, 481, 482, 483, 484,
	486, 488, 496, 497, 498, 500, 503, 504, 505, 506,
	494, 508, 509, 512, 513, 514, 517, 515, 516, 518,
	520, 523, 524, 525, 531, 530, 532, 538, 539, 541,
	542, 543, 36, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 122, 123, 150, 161, 162, 174, 186, 187,
	198, 200, 208, 209, 210, 231, 232, 234, 239, 261,
	325, 327, 343, 347, 362, 366, 370, 372, 386, 419,
	454, 465, 470, 489, 490, 491, 492, 499, 501, 526,
	527, 528, 533, 540, -282, 2, -264, 334, -257, 2,
	-234, -234, 373, 28, 2, 28, 361, 435, 480, 482,
	2, -547, -319, 2, 28, -237, -234, 102, 196, 433,
	-257, 2, -547, -319, 25, 2, -234, 2, 348, -238,
	2, 424, -234, 281, 2, 571, 94, 272, 74, 419,
	438, -131, 497, -130, 489, 428, -132, -475, 2, 303,
	-234, 571, 571, 571, 28, -247, -234, 477, 223, 428,
	118, 474, 571, 2, 477, 353, 530, 434, 118, 383,
	223, 505, 428, -556, 281, 415, 199, 519, -545, 2,
	-540, 4, -491, -487, -276, -275, 477, 483, 118, -271,
	-263, 561, -270, 571, 571, 571, 2, 242, 243, 382,
	381, 438, 439, 571, 571, 571, 571, 426, 2, 160,
	22, 27, 66, 93, 98, 124, 181, 184, 339, -569,
	350, 380, 437, 476, 479, 486, 500, -555, 461, 68,
	428, -554, -556, 281, 505, 137, -369, 118, 272, 195,
	513, 482, 480, 511, 130, 230, 516, 515, 571, 571,
	22, 27, 66, 77, 98, 137, 160, 181, 184, -571,
	350, 380, 422, 437, 476, 486, 500, 2, 530, 281,
	434, 477, 223, 118, 505, 428, -556, 426, 427, 378,
	-94, 2, 568, 32, 31, 441, -193, 477, 235, 2,
	-234, 571, 571, 2, 242, 243, 426, 427, 571, 571,
	182, -540, 2, 571, 571, 2, 242, 243, 426, 427,
	235, 2, 68, 430, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 2, -168, 438,
	461, 205, 47, 46, 74, 28, 379, 79, 354, 119,
	145, 506, 197, 223, 224, 250, 93, 94, -371, 44,
	243, 242, 427, -561, 426, -422, 478, 429, 435, 473,
	254, 424, 497, 102, 520, 416, 543, 383, 384, 395,
	154, 4, 118, 303, 440, 489, 272, 423, 357, 84,
	571, -578, 2, 477, -580, 2, 497, 497, 2, -580,
	2, -580, 2, -580, 2, -581, 497, 540, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, -199, -201, -200, 571, 571,
	571, 571, 571, 571, 571, -168, 438, 2, 74, 28,
	-312, -314, 510, 233, 147, 340, -198, -200, 2, -520,
	-473, 2, -396, -494, -398, 559, 560, 552, 475, 67,
	319, 544, -410, 124, 511, 334, -493, -399, -412, 150,
	419, -334, 8, 9, 5, 6, 7, -243, -400, -406,
	502, 164, 324, -279, 572, 10, 568, -517, -200, -411,
	37, 200, 65, -477, -278, -244, -449, 234, -277, -263,
	-514, -515, 4, -487, -488, -478, -452, -460, -456, -457,
	-463, -234, -490, 77, 110, 111, 109, 114, 113, 274,
	273, 115, 112, 440, 519, 66, 36, 208, 209, 239,
	325, 210, 75, -516, 138, -489, 231, 232, 454, 51,
	386, 174, 123, 122, 327, 56, 54, 527, -461, 120,
	489, 490, 491, 492, 186, 187, 58, 161, 162, 347,
	370, 470, 499, 501, 198, 261, 43, 106, 183, 229,
	212, 238, 240, 244, 262, 265, 304, 317, 321, 344,
	346, 414, 447, -584, 528, 465, 69, 70, -522, 388,
	-523, -257, -522, 571, 571, 573, 571, -305, -307, -308,
	2, 28, 135, 568, 2, -427, 2, -428, -432, -200,
	255, -431, 568, -429, 566, -264, 335, -518, 420, -514,
	-515, -243, -263, -278, 4, -487, -489, 570, -309, 568,
	118, 477, 78, 223, -364, 568, -234, 28, 334, 493,
	573, -306, 377, -408, 568, 334, 182, 337, 60, -234,
	530, 2, 2, 443, 2, 568, -131, 71, 497, 43,
	438, -383, 2, -384, -230, -231, -232, -439, -233, 241,
	376, 385, 547, 128, 319, 543, -473, -563, 182, 551,
	493, -473, -335, 570, 2, 2, 2, 2, 2, 2,
	-432, 208, -264, 2, -261, -476, 4, -487, -491, -488,
	-492, -490, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 57, 65, 66, 72, 76, 78, 87, 93, 102,
	109, 110, 112, 111, 113, 114, 115, 124, 128, 131,
	135, 136, 140, 143, 147, 164, 166, 179, 181, 182,
	196, 199, 202, 215, 228, 233, 235, 255, 259, 266,
	273, 274, 319, 324, 330, 334, 335, 339, 340, 359,
	375, 391, 410, 433, 440, 457, 472, 477, 487, 493,
	495, 502, 510, 511, 519, 521, 529, 534, 535, 536,
	537, -493, 77, 2, -432, 208, 2, -266, 208, -432,
	-269, 2, -248, -234, 2, -260, -476, 2, -283, 208,
	-264, -265, -269, -267, 2, -269, -273, 2, -234, -484,
	208, 2, -480, 10, -479, 5, 4, -487, -491, -488,
	530, 235, 493, 573, -325, -275, -276, -472, 8, -318,
	-234, 570, -396, 2, -120, -105, 2, 179, -396, 208,
	2, -120, 208, 2, -396, 208, 2, -120, 208, 2,
	-558, 2, -484, 208, -234, 2, 285, 2, 2, 500,
	2, 98, 477, 117, 2, 404, -570, 422, 504, 2,
	2, 2, 2, 2, 2, 2, 477, -253, 2, -234,
	179, -273, 208, -274, 2, -234, -235, 434, -579, 388,
	-484, 208, 2, 530, -267, 2, -267, 223, 237, -248,
	208, 2, 482, 480, 482, 480, 182, 2, 235, 2,
	235, 2, -433, 2, -434, -428, -435, 566, 335, 285,
	2, 2, 2, 2, 2, 208, -234, 477, 117, 2,
	253, 2, 2, 2, 2, 2, 2, 2, -327, 208,
	2, -264, 530, -327, 208, 2, -327, 208, 2, -370,
	2, 87, -248, 208, 2, -272, 208, 2, -267, -318,
	208, 2, -485, 208, 2, -484, -396, 2, -120, 2,
	-443, 2, -442, -479, 526, -94, 568, -94, 568, 438,
	568, -484, -264, -264, -396, 2, -120, -105, 2, -396,
	2, -120, 2, -117, -116, -484, 568, 182, -396, 2,
	-120, -105, 2, -396, 2, -120, 2, -193, 179, 2,
	118, 477, -168, 2, 179, 521, 2, 8, 2, 215,
	-484, 429, 384, 171, 2, 443, 2, 444, 74, -371,
	543, 74, 182, 2, 182, 2, -354, 2, 537, 2,
	2, -544, 2, 334, 182, 2, 182, 2, 182, 2,
	182, 2, 182, 2, 381, 439, 498, 243, 2, -120,
	534, -105, -396, 534, 2, -562, 179, 427, -396, 2,
	496, 252, 155, 182, -354, 2, 182, 2, 182, 2,
	5, 2, 382, 462, 2, 241, 376, 462, 2, -264,
	-573, 2, 477, 530, 434, 2, 2, 88, 89, 182,
	2, 182, 2, 182, 182, 543, 2, -346, -432, -382,
	-383, -382, 493, -312, -314, -168, 443, 2, -205, -344,
	-207, 179, -373, -374, -208, 266, 166, 330, -209, -353,
	28, 135, -353, -353, 60, 569, 569, 11, 12, 76,
	41, 559, 560, 561, 562, 177, 563, 564, 557, 558,
	556, 549, 550, 554, 247, 248, 95, 553, 551, 86,
	279, 421, 167, 168, 169, 170, 401, 221, 34, 222,
	14, 15, 16, 33, 339, 265, 544, 212, 447, 552,
	17, 18, 19, 238, 240, 321, 50, 215, -242, -285,
	-396, -396, -396, -396, -396, -396, -396, 346, 568, -340,
	-391, 566, -200, 568, 568, 568, -472, -200, -396, -410,
	569, -332, 568, -200, -410, -405, 568, 419, 566, 568,
	-413, -396, 5, 5, 5, 568, 570, -525, 538, 179,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 372, -454, 568, -453, 568,
	-453, -453, 531, -451, 568, 546, 539, 568, -451, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 531, 573, -522, -309, 568, -336, -437, -396,
	561, -336, -336, 334, -329, -396, 106, -357, 244, 304,
	183, 262, 414, 229, -393, 572, -393, -421, 546, -200,
	-429, -263, -200, -431, 568, -427, -421, -95, -472, -79,
	-92, -100, -120, -133, -172, -173, 561, -264, 568, 182,
	568, 570, -476, 182, -318, -248, -264, -277, -278, -283,
	134, -329, -540, 505, 428, -318, -237, 38, -407, -446,
	-447, -496, 572, -495, -449, -459, -455, -458, 362, 366,
	-478, 54, 527, -461, 234, 4, -487, -489, 231, 232,
	454, 51, 386, 174, 123, 122, 327, 56, 489, 490,
	491, 492, 186, 187, 58, 528, 465, 69, 70, -540,
	505, 428, -318, 179, -482, 2, -481, -480, 115, 440,
	-370, -475, -329, 38, -383, 2, 124, -480, -582, 573,
	264, -287, 278, 318, 204, 335, 541, 328, 128, -483,
	5, 4, -406, -418, 124, 272, 234, -466, -468, 8,
	-467, 9, -469, 559, 560, -474, -473, 108, 570, -476,
	-216, 402, 441, -215, 24, 29, 139, 225, 307, 524,
	156, -297, 226, 349, 353, 150, 458, 514, -551, -552,
	425, 484, 485, 90, 328, 441, 402, 150, -350, -352,
	38, 116, 307, 348, 61, 218, 283, 284, 460, 533,
	150, 441, 402, 349, 24, 139, -227, -552, 99, 402,
	471, -552, -218, 458, 514, -551, -552, 425, 402, -217,
	-297, 150, 572, 24, 402, 441, 349, -566, -567, 139,
	29, 402, 349, -548, -519, 537, 150, -432, 208, -559,
	-116, 256, 5, 10, -116, -325, 573, 573, -476, 561,
	427, 426, 150, 150, 150, 150, 179, 319, 2, 2,
	2, 2, 2, 184, -554, -571, 2, 2, -264, 208,
	-311, 334, -543, -326, 477, -264, 319, 43, -266, 208,
	2, -269, 530, -548, 319, -268, 208, -264, 38, 568,
	2, -370, 2, 223, -519, 319, -433, -280, -264, -428,
	-280, 441, -257, 38, -393, -264, 2, 150, 2, 2,
	2, -234, -219, 573, 64, 408, 150, -327, 208, -219,
	150, -219, 150, -284, 208, -283, -219, 150, -219, 573,
	150, -219, 150, 573, 150, 569, 573, -443, -443, -484,
	-181, 537, 182, 102, 568, 568, -193, -440, 573, -439,
	-485, -117, -484, -484, -543, -248, 2, -264, 2, 477,
	245, -484, -181, 215, -484, -484, -484, -475, 28, 444,
	2, 381, 439, 498, 89, 444, 2, -264, 477, 118,
	223, 80, -546, 179, -541, 415, 428, 505, -540, -264,
	118, -264, 118, -264, 118, -264, -264, 2, 2, 2,
	2, 2, 85, 85, 2, 46, -562, 179, 2, 496,
	2, 496, 2, -234, -234, -234, 461, 264, -264, 179,
	477, 223, 477, 223, 118, 118, 477, -219, 573, -238,
	-205, -344, -475, -345, -344, -206, -205, -208, 179, 385,
	515, 307, 445, 249, -374, -373, 28, -396, -378, 173,
	306, -396, -376, -398, 559, 560, -467, -469, -328, 328,
	-199, -199, -199, -315, -423, -396, 375, 223, -448, -446,
	-446, -262, -476, 489, -396, -396, -396, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -396, -396, 265,
	212, 447, 50, 215, -396, 493, -396, -396, -396, -396,
	301, 319, 324, 502, 164, 512, 135, 328, -585, 472,
	40, -403, -200, -333, 568, -417, 35, 457, 28, -410,
	568, 2, -391, -396, -392, -330, -329, -329, 569, 529,
	28, 135, 561, 2, 569, 573, 38, 569, -396, -330,
	-409, -405, -329, -416, -415, 534, -365, -366, 542, 288,
	121, 206, 286, -367, 432, -470, 8, -476, 561, -526,
	172, 199, 568, 569, 2, 569, 2, 569, -396, 2,
	569, -396, 2, 569, -396, 2, 569, -396, 2, 569,
	2, -396, -396, -396, -396, -396, -396, -396, -329, 8,
	-470, -470, 489, 489, -470, -470, -470, -462, 362, 363,
	364, 365, 267, 268, 269, 270, 366, 367, 368, 369,
	293, 294, 295, 296, 289, 290, 291, 292, 297, 298,
	299, 300, 191, 192, 193, 194, 187, 188, 189, 190,
	-462, -359, 2, -464, -329, 4, 542, 288, 121, 206,
	286, 432, 5, -359, 2, -360, 2, -396, -329, -361,
	-397, -398, 559, 560, 552, -410, -362, 2, -396, -330,
	-396, 57, 259, 495, -363, -396, 182, -329, -329, 2,
	-329, 2, -523, 38, -329, -321, 573, 182, 38, 4,
	-321, -321, 568, 569, 573, -358, 203, 282, 277, -358,
	-427, -357, 244, -355, 344, -355, -355, -421, -249, 566,
	574, -476, -421, -420, -419, 38, -257, 341, -421, -421,
	570, 569, -420, 567, -538, 568, 571, 571, 571, 571,
	571, -264, 568, -329, -476, 570, 463, 569, 238, 238,
	238, 238, 420, 569, 493, -542, -272, -318, 537, -94,
	336, 569, 573, -320, 37, 566, 570, -470, 2, 2,
	-465, 531, 568, 568, -366, 568, 182, -542, -318, -319,
	573, 493, -268, -563, 569, 497, -384, -286, 385, 456,
	403, 436, 474, 8, 9, 8, 9, 573, -476, 573,
	-564, 93, 493, 78, 428, -387, 208, 78, -497, -251,
	93, -498, -234, 72, 511, 375, 181, 148, -564, 93,
	375, -564, 93, 2, 225, 93, 441, 461, 493, 60,
	-432, 41, 41, 28, -120, 260, 182, 543, 477, 223,
	428, 493, -432, -352, -446, 116, 283, 284, 60, -471,
	-466, 559, 560, -471, 60, -471, -471, -471, 537, -266,
	-432, 428, 493, 493, -486, 394, 395, -486, 493, 493,
	394, 45, 124, 573, 41, 41, 28, -120, 260, 182,
	493, -283, -249, 525, 42, 525, 493, 42, 428, 493,
	573, 42, 42, 493, 493, -549, -239, 105, 313, 276,
	314, 97, 310, 96, 309, 103, 311, 104, 312, 532,
	322, 63, 308, 287, 315, -240, -241, 355, 523, -484,
	441, 402, 150, 215, -440, 215, -440, -275, -234, 570,
	-120, -396, -396, -120, -396, -120, 46, 150, 2, -579,
	253, 568, -290, 319, 182, -318, -441, 235, 573, -326,
	150, -481, -351, -350, 319, -268, 208, 2, 150, -309,
	319, 144, 568, 383, 2, -250, 208, -235, -234, -370,
	-222, 481, 150, -348, 521, -379, -120, 568, 124, 38,
	-379, -337, -338, -438, -339, -251, 568, -257, -393, -234,
	2, -264, -327, -219, 150, -327, -327, -219, 573, 150,
	-248, -267, -272, -318, -484, -485, -94, -442, 569, 569,
	569, -180, 338, -179, -234, 5, -193, 521, -289, -388,
	-387, -501, -502, -497, 265, 223, 511, 237, 165, -310,
	-252, -251, 117, -187, 537, -116, 569, -440, 215, -181,
	-181, -440, -440, -264, 179, -484, -181, -181, -181, 2,
	2, 2, -354, -264, -248, -283, -264, -318, -318, -318,
	-272, -354, -248, -354, -248, -354, -248, -120, -396, 2,
	438, 179, 179, 570, -354, 383, 118, 477, 353, 223,
	-264, -283, -264, -283, -248, -248, -264, -432, -345, -206,
	335, 249, 445, -376, -377, -398, 419, 420, -377, 419,
	420, 8, 9, 8, 9, -210, 449, 323, -327, 573,
	-213, 39, 131, 249, -264, 543, 146, -396, -396, 493,
	-585, 472, -403, 146, -396, 301, 324, 502, 164, 512,
	135, 328, 182, 568, -397, -397, 569, -331, -396, -396,
	567, 576, 569, -314, 573, -312, -396, -329, -329, 569,
	570, -329, -318, 567, 567, 573, 569, -414, -415, 140,
	-396, 493, 493, 493, 493, 568, 569, 570, -531, 345,
	568, 568, -396, 569, 569, 569, 569, 38, 573, 573,
	573, 569, 573, 573, 573, 569, 569, 569, 573, 569,
	543, 543, 569, 569, 569, 569, 573, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 569, 573, 569, 182, 569, 569, -368, 359, 569,
	11, 12, 559, 560, 561, 562, 177, 563, 564, 557,
	558, 556, 549, 550, 551, 86, 279, 421, 14, 15,
	16, 238, 215, -397, -397, -397, 569, -401, -402, 182,
	179, 38, -363, -363, -363, 569, 182, -329, 569, 569,
	568, -524, 281, 319, 569, -390, -389, 535, -437, -322,
	2, -427, -259, -476, -390, -390, -329, -396, 244, 244,
	-356, 521, 334, -358, -427, -420, -472, -395, -394, 180,
	39, 131, 316, 211, -420, -257, -309, -420, -420, -476,
	-421, -421, -419, 569, -539, -472, 569, -323, -430, -518,
	-314, 570, -476, -190, -519, -169, 5, 324, -169, -169,
	-169, -318, 493, 493, 25, 360, -446, 566, 567, 8,
	-476, 568, -470, -470, -470, -318, 182, 182, 182, -481,
	-481, -349, 537, -473, -383, 509, 83, 385, 489, -473,
	-215, 402, -251, -251, -264, -273, 319, -387, 208, -221,
	319, -446, -258, -234, 568, 568, 249, 249, 521, -251,
	-258, 249, 208, -251, 208, -258, 2, -258, -550, 385,
	329, -396, -481, 271, 383, 320, -216, 402, 441, -120,
	-120, -120, 568, -563, 521, 134, -264, -283, -264, -273,
	-268, 441, 402, 317, -277, -471, -471, -350, 441, 402,
	-273, -266, -481, -318, -318, 428, -248, 163, 543, -217,
	-120, -120, -120, 568, -249, -218, 402, 5, 208, -251,
	5, -234, -251, -273, -481, -567, 24, -251, 208, -251,
	-273, -481, -239, -484, 324, 517, -548, 428, 493, -432,
	-116, -184, 537, -116, -178, 219, 561, -545, -234, 530,
	-234, -288, -291, -289, -251, -196, -197, 539, 537, 150,
	-281, -264, 566, -181, -484, -264, -273, -274, 150, -309,
	319, -484, 38, 150, 568, 2, 2, 334, 319, -250,
	208, -223, 141, -583, 551, -248, -390, -322, -347, -381,
	410, 334, -310, 526, -257, -347, -324, 573, 182, 551,
	570, -310, -436, 561, 2, -219, -327, -219, -219, -283,
	-284, -219, -219, -219, -94, -94, -181, 573, 568, 551,
	551, 568, -484, -484, 569, 573, -264, -250, 223, 223,
	-256, -235, 569, 573, 570, 568, -189, 338, -188, 142,
	251, 236, 450, 451, 452, 453, 133, -187, -117, 182,
	-55, 537, 477, -181, 572, -354, -354, -354, 438, 438,
	-234, -260, -248, -264, -261, -283, 179, 179, 515, -377,
	335, 275, -423, -214, 545, -264, 572, -396, -396, 146,
	146, -396, -397, -397, -396, 146, 182, 568, -396, -407,
	33, 33, 569, 573, -392, -396, 569, 529, -314, -314,
	569, 561, -476, 572, 569, -405, 143, -396, 487, 288,
	206, 286, -367, 286, -367, -367, -470, 5, -476, 561,
	-532, -254, 568, -234, 535, -313, 340, 569, -448, -446,
	-396, -396, -396, -396, -396, -470, -451, -451, -466, -466,
	-396, -401, -396, -448, -446, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, 135, 319, 328, -397, -402, -401,
	-396, -396, -446, 569, 569, 569, -329, -94, 568, 281,
	-341, 199, -396, -440, 573, -341, -341, 569, -427, -427,
	568, -396, 244, 567, 573, 575, 551, -309, 570, -419,
	-420, 567, 569, 573, 569, 573, -380, 38, 569, -476,
	-390, -192, -191, 132, 53, -318, -318, 337, 5, 8,
	566, 567, 570, -470, 569, 569, 569, -318, -318, -318,
	117, 307, -396, 493, 493, 150, 319, 523, -503, -498,
	148, -396, -316, -424, -518, 568, -234, 568, 568, 2,
	-212, 139, 441, -565, 2, 521, 150, -219, 150, -219,
	541, 568, 568, 493, 428, 537, -329, -396, -182, 124,
	-475, -552, 572, -552, 572, 428, 493, 428, 493, 537,
	163, 537, -329, 493, -450, 48, 26, 319, -267, 493,
	493, -219, 150, 505, 441, -484, 324, -273, -268, 441,
	402, -440, -186, 338, -185, 142, 412, 133, 251, -440,
	-184, 182, 235, -268, 2, 569, 569, 573, -504, 38,
	332, 332, 568, -264, -75, 537, -439, -472, 43, -266,
	38, 150, -548, -120, -268, -444, -445, 5, -264, 150,
	334, 319, -224, 258, -583, -480, -519, -314, -347, -336,
	320, 91, 569, -390, -338, -322, -396, 2, 569, -219,
	-219, -179, -180, -484, -484, -484, -181, -193, -193, -388,
	-292, 568, -250, -235, 568, -193, -252, 2, -485, 573,
	568, 551, 551, 551, -440, -120, 338, -264, 561, -354,
	-299, -298, 353, 328, -299, 419, 419, 335, 173, 254,
	-213, -249, -396, -396, 146, 33, 33, -396, -396, -407,
	569, -396, -396, -329, 567, 5, -396, 569, 569, 8,
	-396, 569, 570, -533, -234, -396, 569, 60, 569, 569,
	573, 573, 569, 569, 569, 569, 569, 569, 569, -402,
	182, 135, 328, 568, 569, 569, -94, -404, 202, 60,
	-427, -404, -404, -356, -318, -427, -394, -249, 566, -476,
	-472, -430, 568, 570, -191, 551, 567, 2, 566, -476,
	569, 117, -251, -251, -387, 150, -505, 93, -507, 76,
	165, 102, 319, 324, 511, 375, 72, 124, 391, -575,
	38, 548, 569, 569, 573, -425, -245, -234, -396, -425,
	-316, -318, 319, 468, 124, 319, 124, 117, 505, 79,
	-251, -258, -318, -318, -264, -273, 157, 569, 573, 551,
	2, 561, 561, -273, -268, -273, -266, 351, 157, 569,
	-249, 5, 5, 150, -246, 76, 5, -251, -251, -267,
	117, 428, 493, -184, 573, 568, 551, 551, -184, -485,
	-116, -309, -300, 225, -251, -502, -499, -500, 375, -506,
	-508, 165, 375, -120, 2, -195, -194, -234, 5, 568,
	-290, 338, 567, -481, -351, -120, -268, -309, 569, 573,
	-372, 521, -249, -264, 150, -225, 257, -583, -480, -222,
	-375, -373, 136, 568, 334, -120, -314, 551, 569, 569,
	117, 117, 217, 149, -316, 568, 568, -318, 117, 569,
	-188, -189, -484, -116, -484, -187, -56, -57, 223, 93,
	358, -261, 477, 223, 568, 568, -213, -396, -396, -396,
	569, -314, -476, 561, -527, 353, 569, -423, -396, -396,
	-397, 182, 568, -407, 569, -528, 536, -396, -342, -343,
	-396, 418, 107, 200, -528, -528, 569, -472, 2, -484,
	566, 2, -387, -258, -262, -255, -234, 165, 208, 324,
	249, 568, -397, -264, 568, 2, 30, -576, 128, 228,
	-386, -577, 101, 469, 216, -424, -213, 569, 569, 569,
	324, 324, -396, -446, 568, -219, -219, 569, 569, -396,
	493, -475, 100, -473, 2, -552, -248, -396, 493, 5,
	-219, -262, -219, -219, -246, 505, -273, -268, -185, -186,
	-484, -116, -184, 38, -295, 227, 2, -504, 249, -255,
	249, -574, 537, 569, 573, 551, 551, -288, -196, -76,
	-77, 494, -439, -309, 38, 5, 568, -234, 334, 568,
	-249, -229, 92, -583, -480, -223, -347, 320, -318, 93,
	-375, -403, -181, 568, 568, -293, 81, 94, 125, 207,
	185, 224, 461, 466, 28, -293, 569, -316, -316, 569,
	568, -181, 569, 573, 28, 568, 28, 568, -264, -283,
	-329, -329, 569, -314, 60, 573, 569, 569, -397, -407,
	569, -529, -530, -254, 573, 568, 568, 442, 567, 2,
	-507, -255, 319, 521, -396, -236, 568, -396, 38, 228,
	129, 213, -295, 568, -214, -425, -385, 521, 391, -246,
	-316, 568, 568, 568, 551, 182, 568, -450, -219, -267,
	569, -557, 389, -120, -296, -297, 215, 568, -294, 334,
	117, 307, -194, -473, -473, 569, 38, -77, 9, 38,
	-120, -316, -264, -316, 334, -226, -486, 266, -480, -224,
	569, -258, -347, -485, -485, -385, 569, 569, -485, -57,
	-318, -318, 569, 569, -534, 383, 420, 201, -329, -315,
	569, 573, 38, -343, 2, 2, 2, 150, 203, 569,
	-509, 280, -234, 569, 129, 213, -296, -318, -295, 203,
	-264, -553, 521, 569, -302, -301, -298, -304, -303, -298,
	-329, -473, 100, 351, -329, -246, -560, 183, -559, 5,
	10, -196, 351, -317, -426, -251, 82, 117, -300, -120,
	-120, 569, -372, 569, -264, -228, -227, -583, -583, -225,
	-390, 569, 569, -386, -385, -197, 537, 569, 569, 569,
	569, -535, -536, 50, 508, 108, -396, -535, -535, -530,
	-532, 165, 537, -510, -513, -512, 334, 448, 183, 352,
	569, 468, 533, -576, 569, 537, -309, -396, -385, 569,
	573, 526, 569, 573, 526, 569, 182, 569, -219, -183,
	537, 46, -294, -264, 569, 573, 374, 130, 139, -295,
	-574, -385, 568, -386, 568, -318, -466, -229, 136, -181,
	-181, -295, -386, -390, -181, -537, 148, -536, 371, 178,
	419, 371, 178, -537, -537, -255, 55, -512, 334, -513,
	334, 515, 130, -390, 55, -509, -295, -301, 215, -303,
	182, 351, 426, -559, 30, 568, -426, 420, 420, 2,
	-296, -294, -386, -316, -295, -316, -226, 320, 515, -296,
	-295, 108, 199, 488, 307, 33, 551, -511, 307, 408,
	64, 441, -511, 551, -510, 568, 568, 338, -318, 2,
	-196, -295, 569, -296, 569, -228, 441, -197, -296, 419,
	342, -536, -396, 23, 324, 124, -396, -576, -329, -329,
	-180, 568, 569, -294, -296, -385, -197, -386, -337, -390,
	-197, 569, 569, -180, -220, 64, 408, -197, -386, -390,
	-295, -390, -390, -296, 493, 569, -390, -295, -296, 568,
	-296, -197, -329, -197, -390, 569, -390, -296,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 497, 498, 500, 501, 502, 504, 505,
	507, 509, 511, 512, 513, 515, 516, 518, 519, 520,
	521, 522, 524, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 590,
	0, 1229, 1231, 1233, 1235, 0, 730, 0, 34, 35,
	0, -2, 295, 297, 299, 0, 325, 327, 328, 330,
	332, 334, -2, 0, 432, 433, 435, 437, -2, -2,
	0, 903, 905, 0, 577, 579, 0, 908, 910, 0,
	0, 599, 600, 0, 1329, -2, 593, 595, 597, 662,
	664, 666, 668, 670, 672, 674, 676, 678, 679, 681,
	683, 685, 687, 689, 691, 693, 695, 696, 698, 700,
	702, 704, 706, 708, 710, 712, 714, 716, 718, 720,
	722, 724, -2, 726, -2, -2, 0, -2, -2, -2,
	1247, 38, 40, 42, 44, 46, 48, 50, 52, 54,
	383, 384, 386, 388, 390, 392, 395, 397, 399, 1387,
	439, 441, 443, 445, 447, 449, 451, 0, -2, 1401,
	0, 0, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 93, 94, 95, 96, 97, 98, 99, 100, 68,
	69, 71, 72, 73, 77, 78, 79, 80, 81, 82,
	83, 91, 66, 0, 0, 1360, 1362, 1364, 1366, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 499, 503, 506, 508, 510, 514, 517,
	523, 525, 527, 484, 485, 488, 2057, 2074, 2075, 2076,
	2079, 2080, 2081, 2082, 2083, 2084, 2511, 2592, 2593, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 486, 487, 1067, 0, 551, 549,
	2049, 552, 2320, 554, 556, 426, 427, 428, 429, 430,
	431, 0, 570, 562, 1399, 571, 573, 574, 575, 576,
	546, 544, 0, 570, 2110, 568, 1227, 1228, 0, 1212,
	1213, 2362, 1254, 0, 207, 589, -2, -2, -2, 2476,
	-2, 621, -2, 628, 2480, 2364, 633, 0, 635, -2,
	638, 1230, 1232, 1234, 728, 729, 2060, 0, 0, 0,
	0, 0, 36, 37, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1116, 1117, 1118, 0, 215,
	217, -2, -2, -2, -2, 0, 0, 2405, 2160, 2017,
	2076, 2020, 2015, 296, 298, 300, 301, 0, 0, 0,
	0, 0, 0, 326, 329, 331, 333, -2, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	962, 954, 955, 1173, 0, 0, 0, -2, 434, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 362,
	489, 490, 0, 1388, 1388, 0, 0, 0, 0, 270,
	261, 904, 906, 907, 0, 0, 0, 0, 578, 580,
	0, 0, 243, 909, 911, 912, 0, 0, 0, 0,
	0, 272, 0, 0, 594, 596, 598, 663, 665, 667,
	669, 671, 673, 675, 677, 680, 682, 684, 686, 688,
	690, 692, 694, 697, 699, 701, 703, 705, 707, 709,
	711, 713, 715, 717, 719, 721, 723, 725, 736, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 820, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 884,
	0, 739, 741, 742, 743, 0, 800, 818, 819, 828,
	727, 0, 1107, 1389, 1256, 1237, 1251, 1256, 1239, 1240,
	1241, 1242, 1243, 1248, 1250, 1244, 1245, 1246, 39, 41,
	43, 45, 47, 49, 51, 53, 55, 385, 387, 389,
	391, 393, 396, 398, 400, -2, 1358, 1359, 440, 442,
	444, 446, 448, 450, 452, 581, 0, 583, 0, 740,
	-2, 0, 1393, 1393, 1393, 0, 0, 1359, 1357, 0,
	586, 587, 642, 643, 1660, 0, 0, 0, 0, 0,
	0, 0, 1914, 1746, 0, 644, -2, 1777, 1779, 2451,
	2476, 1913, 1781, 1782, 1783, 1784, 1785, 0, 1787, 1788,
	1789, 1790, 1791, 1792, 0, 1794, 0, 1799, 1800, 1801,
	0, 2458, 1994, 2070, -2, 0, 0, 2464, 2066, 0,
	1880, 1817, -2, -2, 2093, 2072, 1592, 1593, 1594, 1595,
	1596, -2, -2, 2494, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 0, 2439, 2459, 2460, 2465,
	2467, 2461, 2448, 1842, 2172, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1619, 1628,
	-2, -2, -2, -2, -2, -2, -2, 2452, 2453, 2470,
	2473, 2479, 2484, 2485, 2457, 2466, 2493, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 1620, -2, -2, -2, -2, 1376, 2333,
	1379, 1067, 1377, 1361, 1363, 0, 1365, 0, 0, 0,
	1370, 1396, 1394, 0, 1445, 1374, 1375, 1463, 1463, 1487,
	0, 1468, 0, 1487, 1388, 1513, 0, 1474, 2354, 1818,
	1819, 0, 2076, 2071, -2, -2, 2491, 0, 0, 0,
	0, 0, 0, 0, 547, 0, 553, 555, 0, 0,
	0, 569, 1398, 0, 0, 0, 0, 0, 0, 1253,
	1172, 591, 592, 0, 616, 0, 620, 2447, -2, 0,
	2373, -2, 624, 1257, 1261, 1262, 1263, 1264, 1265, 0,
	0, 0, 0, 1270, 0, 0, 630, 0, 0, 617,
	618, 636, 639, 0, 731, 732, 733, 734, 735, 65,
	0, 2459, 1513, 67, 0, 2039, 2101, 2102, 2103, 2104,
	2105, 2492, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2494, 70, 0, 2459, 74, 0, 2459, 0,
	-2, 84, 0, 2045, 92, 0, 2042, 101, 0, 2459,
	0, 2014, -2, 0, 190, 2053, 0, 931, 2055, -2,
	2459, 1115, 273, 274, 2089, 2090, 2097, 2098, 2099, 2100,
	0, 0, 0, 0, 894, 2011, 2016, 895, 2035, 896,
	2021, 0, 302, 303, 304, 305, 306, 0, 307, 2459,
	309, 310, 0, 312, 313, 2459, 315, 316, 0, 318,
	0, 228, 229, 2459, 337, 338, 0, 340, 341, 0,
	343, 0, 0, 0, 347, -2, 363, 0, 360, 350,
	351, 353, 354, 355, 356, 357, 0, 404, 402, 2050,
	0, 924, 2459, 0, 928, -2, 2056, 0, 0, 1152,
	-2, 2459, 1112, 0, 1158, 1154, 0, -2, 0, 1386,
	2459, 1274, 958, 959, 960, 961, 1525, 423, 0, 1296,
	0, 1298, 0, 1317, 1519, 1463, 0, 0, 1524, 0,
	365, 366, 367, 368, 369, 2459, 0, 0, 0, 374,
	0, 376, 377, 378, 379, 380, 381, 382, 179, 2459,
	457, 482, 0, 179, 2459, 460, 179, 2459, 463, 0,
	466, 1171, 179, 2459, 469, 179, 2459, 472, 474, 179,
	2459, 478, 479, 2459, 481, 275, 1223, 1224, 1225, 1226,
	0, -2, 540, 2059, -2, 492, 0, 493, 0, -2,
	0, 287, 0, 0, 913, 914, 915, 916, 917, 920,
	921, 922, 923, 1500, 246, 244, 0, 0, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 0, 0, 601,
	0, 0, 737, 738, 0, 0, 748, 749, 750, 0,
	287, 2365, 2329, 2193, 757, 0, 760, 763, -2, 0,
	0, 0, 0, 767, 0, 772, 773, 774, 0, 776,
	778, 902, 780, 0, 0, 782, 0, 786, 0, 789,
	0, 791, 0, 793, -2, -2, -2, -2, 804, -2,
	0, 807, 809, 0, 811, -2, 0, 820, 816, 817,
	0, 0, 0, 0, 836, 837, 0, 846, 0, 849,
	850, 851, 0, 853, 854, 0, 856, 857, 858, 859,
	0, 861, 862, -2, -2, 866, 868, 0, 875, 0,
	879, 0, 883, 0, 0, 744, 745, 179, 1517, 1236,
	-2, 1238, 0, -2, 0, 582, 0, 585, 1418, 1344,
	1341, 0, 1415, 1416, 1345, 0, 0, 0, 1352, 0,
	1391, 1392, 0, 0, 0, 1331, 1332, 0, 0, 0,
	0, 1919, 1920, 1921, 1922, 1923, 1924, 1927, 1928, 1925,
	1926, 1929, 1930, 0, 0, 0, 0, 0, 1931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 1933, 1934, 0, 0, 1936, 0, 1938, 0, 0,
	0, 0, 0, 0, 1725, 1727, 2002, 0, 0, 1935,
	1665, 1666, 1667, 1668, 1669, 1704, 1705, 0, 0, 1778,
	1999, 1998, 1780, 0, 1950, 0, 1793, -2, 0, 1914,
	1945, 0, 0, 1802, 1803, 1804, 0, 0, 1950, 0,
	0, 1993, 1814, 1815, 1657, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1606, 1605, 0, 1607, 0,
	1608, 1609, 1616, 1629, 0, 0, 0, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 1974, -2, 0, 0,
	0, 0, 1621, 0, 1378, 0, 0, 1449, 2003, 2007,
	2008, 1449, 1449, 0, 0, 1951, 1510, 1510, 0, 0,
	1506, 1506, 1506, 1504, 1487, 0, 1487, 1497, 0, 1487,
	1487, 0, -2, 1468, 0, 0, 1497, 0, 1481, 528,
	530, 532, 534, 535, 536, 538, 1514, 1515, 0, 0,
	0, 0, 2077, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 2415, 2364, 558, 572, 1388, 0, 1953,
	1540, 1544, 0, 1546, 1547, 1548, 1549, 1550, 0, 0,
	1541, -2, 1617, 1619, 1640, 2094, 2095, 2096, 1600, 1601,
	1602, 1603, 1604, 1612, 1599, 1599, 1599, 1610, 1639, 1631,
	1639, 1635, 1585, 1586, 1587, 1622, 1623, 1624, 1625, 0,
	2415, 2364, 564, 0, 0, 1328, 194, 196, 197, 198,
	0, 0, 0, 0, -2, 626, 631, 632, 0, 1259,
	0, 1266, 653, 654, 655, 1268, 1269, 0, 1271, 629,
	656, 657, 658, 659, 660, 661, 0, 2023, 2024, 2025,
	2026, 2029, 2030, 0, 0, 627, 646, 634, 0, 640,
	102, 1209, 0, 141, 0, 1209, 1209, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 126,
	137, 114, 115, 0, 0, 0, 0, 0, 75, 1089,
	0, 1092, 0, 0, 0, 0, 0, 0, 0, 1105,
	0, 0, 0, 0, 0, 0, 88, 125, 0, 0,
	0, 120, 104, 0, 0, 0, 127, 139, 0, 170,
	172, 0, 0, 0, 0, 0, 0, 189, 199, 0,
	0, 0, 0, 1113, 0, 1385, 0, 0, 2459, 0,
	1500, 2238, -2, -2, 1500, 893, 0, 0, 2077, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 342,
	344, 345, 346, 0, 1151, 0, 352, 394, 1038, 2459,
	0, 0, 421, 416, 0, 418, 0, 0, 1088, 2459,
	1086, 2054, 0, 1110, 0, 1067, 2459, 2052, 0, 0,
	1159, 2086, 1168, 1172, 1283, 0, 425, 0, 1299, 1301,
	0, 0, 1520, 0, 1522, 1463, 364, 0, 371, 372,
	373, 0, 453, 0, 177, 178, 0, 179, 2459, 458,
	0, 461, 0, 179, 2459, 2009, 467, 0, 470, 0,
	0, 476, 0, 0, 0, 1388, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 250, 0, 1499,
	0, 1500, 244, 287, 287, 1500, 603, 1500, 605, 0,
	0, 751, 752, 0, 287, 287, 287, 758, 759, 761,
	762, -2, -2, -2, 876, 764, 765, 843, 0, 0,
	0, 842, 779, 0, 887, 2350, 2364, 2415, 900, 843,
	2160, 843, 2160, 843, 2160, 790, 792, 795, 831, 839,
	803, 808, 0, 0, 813, 821, -2, 0, 823, 0,
	825, 0, 827, 843, 844, 847, 852, 855, 860, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 1249,
	1418, 1344, 584, 1335, 1417, 1336, 1343, 1346, 0, 0,
	1348, 0, 1350, 0, 1413, 1414, 1421, 1422, 0, 1432,
	1433, 1425, 0, -2, 0, 0, 1428, 1429, 1354, 0,
	1371, 1372, 1373, 1402, 1405, 1187, 0, 2592, 1661, 1535,
	1662, 1663, 2038, 0, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, -2, -2, -2, -2, -2, -2,
	-2, -2, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, -2, -2, -2, 1702, 1703, -2, 1937,
	1939, 0, 2002, 0, -2, 0, -2, -2, -2, -2,
	1722, 0, 1724, 1729, 1731, 1733, 0, 0, 0, 0,
	2001, 1743, 1985, 1986, 0, 0, 1916, 1917, 1918, 1728,
	0, 1747, 2000, 1997, 0, 0, 1949, 1401, 1806, 0,
	0, 0, 0, 1813, 1798, 1947, 0, 1946, 0, 0,
	0, 1957, 0, 1992, 1988, 0, 2036, 1656, 1643, 1644,
	1645, 1646, 1647, 1648, 1658, 0, 2033, 2063, 2069, 1890,
	0, 0, 0, 1843, 1844, 1845, 1846, 1847, 0, 1849,
	1850, 0, 1852, 1853, 0, 1855, 1856, 0, 1858, 1859,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 0,
	0, 0, 1557, 0, 0, 0, 1561, 0, 0, 0,
	1565, 0, 0, 0, 1569, 0, 0, 0, 1573, 0,
	0, 0, 1577, 0, 0, 0, 1581, 0, 0, 0,
	0, 0, 1862, 0, 1960, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1864, 0, 1866, 1951, 1971, 0,
	0, 1748, 0, 0, 0, 1914, 0, 1869, 1951, 1979,
	0, 0, 0, 0, 0, 1951, 0, 1984, 0, 1876,
	0, 1878, 1380, 0, 0, 1530, 0, 0, 0, 2006,
	1530, 1530, 0, 1444, 0, 0, 1507, 1508, 1509, 0,
	0, 1510, 0, 1501, 1505, 1502, 1503, 1497, 1460, 0,
	0, 2040, 1497, 1466, 1496, 0, 1067, 1486, 1497, 1497,
	0, -2, 1470, 1487, 0, 0, 529, 531, 533, 537,
	539, 0, 0, 1401, -2, 0, -2, 1066, 0, 0,
	0, 0, 548, 550, 0, 0, 473, 0, 0, 542,
	0, 545, 0, 1531, 1534, 0, 0, 1545, 1551, 1552,
	0, -2, 0, 0, 1641, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 619, 0, 1258, 1267, 0, 650,
	0, 652, 0, 2027, 2031, 2028, 2032, 0, 641, 0,
	0, 0, 0, 1208, 0, 145, 2459, 0, 181, 0,
	0, 1031, 2046, 0, 0, 0, 0, 2179, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 1091, 1093, 1100, 1102, 0, 1096,
	2034, 0, 0, 1097, 0, 1099, 1101, 1103, 0, 0,
	0, 0, 0, 0, 0, 89, 90, 0, 0, 0,
	0, 0, 1279, 0, 0, 0, 113, 117, 0, 0,
	0, 0, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1147, 1145, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 0, 0, -2,
	0, 0, 0, 0, 220, 0, 278, 2012, 2022, 0,
	918, 919, 308, 311, 314, 317, 216, 0, 348, 0,
	0, 964, 939, 0, 0, 403, 287, 0, 0, 417,
	2086, 926, 1084, 1087, 0, 1067, 2459, 1124, 0, 0,
	0, 0, 0, 0, 1157, 0, 2459, 2041, 2085, 2086,
	1285, 1293, 0, 1530, 0, 1315, 1302, 0, 0, 0,
	1315, 1319, 1320, 1322, 1323, 0, 0, 1521, 1527, 0,
	375, 483, 179, 455, 0, 179, 179, 464, 0, 0,
	179, 475, 179, 179, 276, 480, 491, 541, 1388, 1388,
	287, 285, 2297, 283, 280, 282, 0, 0, 0, 965,
	967, 968, 969, 970, 0, 2086, 0, 2227, 2086, 0,
	1305, 1307, 0, 240, 0, 247, 245, 250, 0, 0,
	415, 602, 607, 746, 0, 287, 754, 755, 756, 797,
	833, 841, 766, 768, 769, 770, 0, 901, 897, 898,
	899, 781, 843, 784, 843, 787, 843, 806, 810, 815,
	822, 0, 0, 0, 835, 0, 0, 0, 0, 0,
	0, 0, 880, 881, 882, 885, 886, 1518, 1339, 1340,
	1342, 0, 1351, 0, 0, 1427, -2, -2, 1426, 1430,
	1431, -2, -2, -2, -2, 1347, 0, 1356, 1353, 0,
	1412, 1185, 1186, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1744, 0, -2, 1723, 1726, 1730, 1732, 1734,
	0, 0, 0, 0, 0, 0, 1940, 0, 1942, 1745,
	1995, 1998, 1912, 0, 0, 1400, 1401, 1401, 0, 1812,
	0, 1948, 0, 1955, 1956, 0, 1805, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 1848, 1851, 1854, 1857, 0, 0, 0,
	0, 1837, 0, 0, 0, 1841, 1611, 1597, 0, 1639,
	1637, 1638, 1632, 1639, 1636, 1589, 0, 1554, 1555, 1556,
	1558, 1559, 1560, 1562, 1563, 1564, 1566, 1567, 1568, 1570,
	1571, 1572, 1574, 1575, 1576, 1578, 1579, 1580, 1582, 1583,
	1584, 1588, 0, 1861, 0, 1863, 1865, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 1752, 1753, 1868, 1977, 1978, 0,
	0, 0, 0, 0, 0, 1874, 0, 1983, 1875, 1877,
	1388, 0, 1381, 0, 1446, 1435, 1529, 0, 2004, 1500,
	1448, 1450, 2005, 2043, 1435, 1435, 0, 1952, 0, 0,
	1491, 0, 0, 0, 1493, 1464, 0, 0, 1458, 0,
	1454, 1455, 1456, 1457, 1465, 1067, 1495, 1467, 1471, 2063,
	0, 1497, 0, 1482, 0, 1484, 1516, 0, 1476, 1479,
	0, 0, 2078, 1530, 0, 319, 323, 324, 320, 321,
	322, 557, 0, 0, 0, 0, 1954, 0, 1536, 0,
	1542, 0, 0, 0, 0, 563, 0, 0, 0, 195,
	1327, 206, 0, 615, -2, 648, 649, 651, 0, 647,
	142, 1209, 0, 0, 1190, 1192, 0, 147, 2459, 156,
	0, 1005, 0, 2044, 0, 0, 0, 0, 0, 1211,
	0, 0, 2459, 179, 2459, 179, 159, 161, 164, 0,
	169, 166, 167, 0, 0, 996, 103, 1209, 0, 106,
	110, 118, 0, 0, 0, 124, 0, 0, 0, 1194,
	1200, 0, 0, 1094, 1095, 1098, 1104, 76, 0, 0,
	1198, 1204, 85, 86, 87, 0, 1189, 1277, 0, 171,
	108, 112, 119, 0, 1206, 105, 0, 193, 0, 0,
	0, 185, 0, 186, 187, 200, 0, 179, 2459, 0,
	929, 930, 1146, 1108, 1109, 0, 1114, 0, 0, 0,
	1500, 212, 0, 1500, 220, 0, 2018, 0, 336, 0,
	0, 0, 0, 963, 1049, 0, 934, 0, 0, 0,
	409, 405, 0, 414, 420, 419, 925, 0, 0, 0,
	0, -2, 0, 0, 1161, 1155, 1156, 0, 0, 0,
	2459, 1287, 1293, 0, 1292, 1386, 1401, 424, 1294, 1315,
	0, 0, 0, 1304, 1300, 1297, 1530, 0, 0, 0,
	0, 0, 1523, 1526, 370, 454, 179, 459, 462, 2010,
	179, 468, 471, 477, 494, 495, 262, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 974, 0, 2086, 2086,
	0, 2048, 0, 0, 0, 0, 248, 0, 251, 0,
	0, 0, 256, 257, 258, 259, 260, 241, 1500, 0,
	604, 0, 0, 753, 0, 783, 785, 788, 824, 826,
	843, 869, 870, 991, 0, 991, 0, 0, 1349, 0,
	1424, 1355, 1406, 1407, 0, 1187, 0, 1664, 1707, 0,
	0, -2, 0, 0, 1711, 0, 0, 0, -2, 0,
	0, 0, 1941, 1943, 0, 1997, 1807, 0, 0, 0,
	1811, 1795, 1796, 0, 1915, 1958, 1987, 1991, 0, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 0, 2037, 2064, 2068,
	1888, 1889, 1893, 2051, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 1634, 0, 0,
	1959, 1970, 1972, 1749, 1750, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, -2, -2, -2, 1767, 1768,
	1769, -2, -2, -2, 0, 0, 0, 1973, 1975, 1976,
	1980, 1981, 0, 1871, 1872, 1873, 1982, 0, 1388, 1382,
	1443, 0, 1528, 1447, 0, 1443, 1443, 1395, 1489, 0,
	0, 1512, 0, 1461, 0, 1462, 0, 1494, 0, 1469,
	1472, 1473, 1483, 0, 1475, 0, 1478, 0, 1807, -2,
	288, 289, 291, 0, 294, 560, 561, 559, 543, 0,
	0, 1538, 0, 0, 1614, 1618, 1642, 566, 567, 565,
	208, 0, 1498, 0, 0, 0, 0, 180, 1003, 1030,
	0, 0, 0, 1175, 1182, 0, -2, 0, 0, 1036,
	149, 0, 0, 0, 157, 0, 0, 154, 0, 163,
	168, 0, 0, 0, 0, 0, 0, 121, 122, 123,
	0, 128, 0, 129, 0, 0, 0, 0, 0, 0,
	1278, 0, 0, 0, 182, 0, 0, 0, 1184, 0,
	0, 202, 0, 0, 0, 1149, 1150, 1195, 1201, 0,
	0, 220, 218, 0, 221, 0, 224, 225, 0, 220,
	214, 0, 0, 1067, 349, 937, 1037, 0, 1039, 0,
	935, 0, 0, 1038, 401, 0, 408, 0, 0, 1088,
	0, 0, 1111, 1122, 1067, 0, 1160, 1162, 1170, 0,
	0, 0, 1289, 1293, 0, 1282, 1283, 1420, 1295, 1313,
	-2, 0, 0, 1401, 1321, 1318, 1324, 1325, 0, 456,
	465, 284, 0, 279, 281, 0, 265, 0, 0, 966,
	971, 0, 0, 0, 0, 0, 1306, 1308, 0, 0,
	0, 0, 0, 0, 250, 271, 0, 747, 771, 834,
	871, 990, 0, 0, 873, 0, 0, 1423, 1410, 1411,
	1408, 1187, 1709, 1713, 0, 0, 0, 1715, -2, 0,
	1737, -2, -2, 1944, 1996, 1786, 1401, 1808, 1810, 1797,
	1990, 1659, 0, 1895, 1892, 0, 1879, 0, 1832, 1833,
	0, 0, 1836, 1838, 1839, 1840, 1598, 1591, 1590, 1969,
	0, 0, 0, 0, 1870, 1383, 0, 1884, 0, 0,
	1451, 1884, 1884, 1490, 0, 1492, 1459, 1452, 0, 2064,
	1485, 1477, 0, 0, 292, 0, 1532, 1537, 0, 1543,
	1613, 209, 143, 144, 146, 0, 1004, 0, 1007, 0,
	0, 0, 0, 1014, 1015, 0, 0, 0, 0, 0,
	1024, 0, 1053, 1063, 0, 1177, 1187, 1181, 0, 1179,
	0, 0, 0, 151, 174, 0, 0, 1210, 0, 0,
	179, 179, 0, 0, 1191, 1193, 0, 0, 0, 0,
	131, 0, 0, 1196, 1202, 1199, 1205, 0, 0, 0,
	1207, 191, 192, 0, 179, 0, 184, 179, 179, 1184,
	0, 0, 0, 211, 0, 0, 0, 0, 213, 277,
	220, 0, 985, 0, 1049, 1041, 1042, 1043, 0, 1048,
	1050, 0, 0, 951, 936, 0, 947, 0, 0, 964,
	939, 0, 406, 927, 1085, 1119, 1067, 0, 1153, 0,
	0, 0, 0, 0, 0, 1291, 1293, 0, 1284, 1285,
	1315, 1419, 0, 0, 0, 1303, 1420, 0, 286, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	252, 0, 253, 254, 255, 242, 606, 608, 0, 0,
	614, 989, 0, 0, 0, 0, 1409, 1717, -2, -2,
	1738, 0, 2065, 2067, 1401, 0, 1881, 1403, 0, 0,
	-2, 0, 0, 0, 1384, 1367, 0, 1442, 1434, 1436,
	1438, 2353, 2156, 2458, 1368, 1369, 1511, 0, 1480, 293,
	0, 1539, 148, 0, 1008, 1009, 2047, 1011, 0, 1013,
	1016, 0, 1019, 2088, 0, 1023, 0, 1032, 1054, 0,
	985, 0, 1059, 1060, 1061, 1176, 1412, 1182, 1065, 0,
	150, 152, 173, 1184, 0, 153, 162, 0, 0, 107,
	0, 0, 2151, 134, 132, 130, 1188, 109, 0, 193,
	201, 1183, 188, 203, 179, 0, 1197, 1203, 222, 0,
	223, 226, 0, 0, 993, 0, 938, 1040, 0, 1051,
	1052, 941, 0, 940, 0, 0, 0, 0, 0, 407,
	410, 0, 413, 0, 0, 1163, 0, 1169, 0, 0,
	0, 1276, 0, 0, 1286, 1287, 422, 1309, 0, 0,
	1315, 1326, 264, 0, 0, 972, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 973, 1065, 0, 0, 1029,
	0, 269, 249, 0, 610, 0, 612, 0, 872, 874,
	0, 0, 1809, 1899, 0, 0, 1834, 1835, -2, 0,
	1775, 1883, 1885, 0, 0, 0, 0, 0, 1453, 1533,
	1006, 1010, 0, 0, 0, 1071, 0, 0, 1025, 0,
	1057, 1058, 993, 0, 1180, 1178, 985, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 183, 204, 1184,
	219, 236, 0, 1120, 939, 992, 0, 0, 949, 0,
	952, 0, 948, 945, 946, 937, 0, 411, 412, 0,
	1123, 0, 1170, 0, 0, 1281, 1293, 1293, 1288, 1289,
	1530, 1312, 1316, 0, 0, 1063, 1065, 939, 0, 609,
	0, 0, 877, 878, 0, 0, 0, 0, 1894, 1404,
	1776, 0, 0, 1437, 1439, 1440, 1441, 0, 0, 1018,
	1076, 0, 0, 0, 1055, 1056, 1053, 0, 1034, 0,
	1067, 155, 0, 1065, 0, 997, 0, 0, 1000, 0,
	0, 135, 2151, 133, 0, 179, 239, 0, 233, 231,
	232, 941, 0, 0, 1045, 1047, 0, 953, 985, 951,
	1121, 1065, 0, 1063, 0, 1272, 1280, 0, 0, 1291,
	0, 287, 287, 985, 1063, 1530, 0, 287, 611, 613,
	1891, 1911, 1900, -2, 2418, 2157, 0, 1911, 1911, 1886,
	1887, 0, 0, 1020, 1072, 1073, 0, 1068, 1069, 1070,
	2087, 1021, 1022, 1530, 1062, 0, 1071, 175, 985, 994,
	0, 0, 995, 0, 0, 138, 0, 140, 205, 227,
	0, 0, 932, 0, 1044, 0, 0, 0, 0, 993,
	941, 1063, 0, 985, 0, 1275, 1290, 1276, 0, 266,
	267, 993, 985, 1028, 268, 1896, 0, 0, 1902, 1903,
	1904, 1905, 1906, 1897, 1898, 1012, 0, 1074, 0, 1075,
	0, 0, 0, 1033, 0, 1076, 160, 998, 0, 1001,
	0, 136, 0, 234, 235, 0, 1046, 942, 0, 944,
	939, 950, 985, 0, 993, 0, 1281, 1310, 0, 939,
	993, 0, 1908, 1909, 0, 0, 0, 1077, 0, 1080,
	1081, 0, 1078, 0, 1053, 0, 0, 0, 0, 943,
	941, 993, 1065, 939, 1063, 1273, 0, 1530, 939, 1907,
	1910, 1901, 1017, 1079, 1082, 1083, 1064, 1035, 0, 0,
	237, 0, 988, 933, 939, 1063, 1530, 985, 1530, 1026,
	1530, 993, 0, 0, 984, 986, 987, 1530, 985, 1166,
	993, 1311, 1027, 999, 0, 238, 1164, 993, 939, 0,
	939, 1530, 0, 1530, 1167, 993, 1165, 1002,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 557, 3, 563, 558, 3,
	568, 569, 561, 559, 573, 560, 570, 562, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 576, 3,
	549, 551, 550, 554, 572, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 566, 3, 567, 564, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 574, 556, 575, 552,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 553, 57892, 555, 57893, 565, 57894, 571,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1251
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1261
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1263
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1264
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1265
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1266
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1267
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1268
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1277
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1287
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1290
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1354
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1380
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1393
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1414
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1418
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1442
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1446
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: tree.Name(sqlDollar[6].str)}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1452
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:    tree.Name(sqlDollar[3].str),
				Regions: sqlDollar[6].union.nameList(),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1461
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:    tree.Name(sqlDollar[3].str),
				Regions: sqlDollar[6].union.nameList(),
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1470
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvive{
				Name:    tree.Name(sqlDollar[3].str),
				Survive: sqlDollar[4].union.survive(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1534
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1538
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1544
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1548
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1554
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1563
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1578
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1584
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1592
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1602
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1606
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1616
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1627
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1634
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1646
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1653
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1661
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1670
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1681
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1689
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1700
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1710
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1720
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1729
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1740
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1746
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1772
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1777
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1788
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1897
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1900
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1906
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1958
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1966
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: tree.Name(sqlDollar[3].str),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1988
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = nil
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = nil
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2119
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2123
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2126
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2186
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2269
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2415
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = nil
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2432
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = nil
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2530
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2574
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2654
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2663
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2669
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2674
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2679
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2684
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2689
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2693
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2720
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = nil
		}
	case 288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2796
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2826
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2846
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2847
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2848
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2849
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2960
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2979
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CREATE")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3018
		{
			return unimplemented(sqllex, "create access method")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			return unimplemented(sqllex, "create cast")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3021
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3023
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3024
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3025
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3027
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3028
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3029
		{
			return unimplemented(sqllex, "create operator")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3030
		{
			return unimplemented(sqllex, "create publication")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3031
		{
			return unimplemented(sqllex, "create rule")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3032
		{
			return unimplemented(sqllex, "create server")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
		}
	case 359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3040
		{
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
		}
	case 361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3044
		{
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3047
		{
		}
	case 363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3048
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3051
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3052
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3055
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3056
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3057
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3058
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3059
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3060
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3062
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3063
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3064
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3066
		{
			return unimplemented(sqllex, "drop server")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3067
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3073
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3079
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3080
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3081
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3082
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3189
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3224
		{

			sqlVAL.union.val = nil
		}
	case 422:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			return helpWith(sqllex, "DELETE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3252
		{
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3264
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3265
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3266
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3267
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "DROP")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.nameList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.nameList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3478
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3543
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3567
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3575
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3590
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			return helpWith(sqllex, "DELETE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "INSERT")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3610
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3611
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3612
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			return helpWith(sqllex, "DELETE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "INSERT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3625
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3626
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3652
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3685
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "GRANT")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3829
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "RESET")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "RESET")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3884
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "USE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3903
		{
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3905
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "USE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3979
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4132
		{
			return unimplemented(sqllex, "set from current")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4146
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4213
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = tree.Low
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = tree.Normal
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = tree.High
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4281
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4283
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4287
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4289
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4290
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4293
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4298
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4300
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4301
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "SHOW")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4316
		{
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4317
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4329
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4334
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.str = "client_encoding"
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.str = "timezone"
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4389
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4452
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4461
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4578
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = true
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = true
		}
	case 800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = false
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4691
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4725
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4733
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4780
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = true
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = false
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = true
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = false
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4889
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4900
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4947
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4951
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4978
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4990
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4998
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5035
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5058
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5063
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.ShowRegions{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowRegions{
				Database: tree.Name(sqlDollar[5].str),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5091
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5098
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5231
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "RESUME")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5413
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: tree.Name(sqlDollar[3].str),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   tree.Name(sqlDollar[3].str),
				AuthRole: sqlDollar[5].str,
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5448
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5515
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5530
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{

			sqlVAL.union.val = nil
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.str = ""
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5564
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = nil
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5575
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5586
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5591
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5596
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 949:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5623
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5637
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5652
		{
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5737
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5740
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5743
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5744
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5750
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5766
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5771
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.str = ""
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 994:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 999:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5960
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5974
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5985
		{
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6084
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6095
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6122
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6202
		{
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6203
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6204
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6205
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6363
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6372
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6380
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6391
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6406
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6409
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6411
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6416
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6419
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6421
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6434
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6459
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6474
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = true
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6484
		{

			sqlVAL.union.val = true
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = false
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6499
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6513
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6525
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6537
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6547
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6557
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = nil
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6667
		{
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6668
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6684
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6686
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6688
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6690
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6692
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6694
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6732
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6750
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6769
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6786
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6803
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = false
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = true
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = false
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = false
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6861
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6867
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6881
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.str = ""
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.str = ""
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6940
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6946
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7016
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7022
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7034
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7040
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7054
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7060
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7077
		{
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7078
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7082
		{
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7120
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7170
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7178
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7189
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7193
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7194
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7195
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7214
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7232
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7237
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7246
		{
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7248
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7265
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7268
		{
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7269
		{
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7297
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7310
		{
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7312
		{
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7316
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				Regions:         sqlDollar[10].union.nameList(),
				Survive:         sqlDollar[11].union.survive(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				Regions:         sqlDollar[13].union.nameList(),
				Survive:         sqlDollar[14].union.survive(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7401
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = tree.SurviveRegionFailure
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.SurviveAvailabilityZoneFailure
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.str = ""
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.str = ""
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.str = ""
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.str = ""
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7476
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7489
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7490
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7519
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7537
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7550
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7599
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7626
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7630
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7668
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7700
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7720
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7899
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7900
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8006
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8022
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = true
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = false
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8075
		{
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8076
		{
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = nil
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8089
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8090
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = true
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = false
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = false
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = true
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8119
		{
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8120
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8123
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8124
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8186
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8191
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8220
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8253
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8308
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8309
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8348
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8349
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8381
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8396
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8418
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8470
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8509
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8519
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8595
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8628
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8630
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = nil
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = true
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = false
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.str = tree.AstFull
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.str = tree.AstRight
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.str = tree.AstInner
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8747
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8748
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.str = tree.AstHash
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.str = ""
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8810
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8833
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8839
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8845
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8855
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = true
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = false
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = true
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = false
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8904
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8917
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8925
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8926
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8944
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8954
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8967
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8974
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9023
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9036
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9041
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9042
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9044
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9045
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9046
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9048
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9050
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9053
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9054
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9056
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9062
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9064
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9065
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9068
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9069
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = types.Geography
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9085
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9093
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9119
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9127
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = nil
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = types.Int2
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = types.Int
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = types.Float4
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = types.Float
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9170
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = types.Bool
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = types.Float
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9219
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9225
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9247
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = types.String
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = true
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = false
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = types.Date
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9304
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9318
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9335
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9352
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = true
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = false
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = false
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = types.Interval
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9376
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = nil
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9505
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9565
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9883
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9905
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10104
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10130
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10154
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10184
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10195
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10196
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10220
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10286
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10416
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10434
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10443
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10452
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10457
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10467
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10481
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10482
		{
			return unimplemented(sqllex, "treat")
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10508
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10555
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.str = ""
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10657
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10754
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = tree.Any
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = tree.Some
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = tree.All
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = tree.Div
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = tree.LT
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = tree.GT
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = tree.LE
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = tree.GE
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = tree.NE
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = tree.Like
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11115
		{
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11116
		{
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11188
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11196
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11285
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11294
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11305
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11314
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11322
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11334
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11514
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11527
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11534
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.str = ""
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
