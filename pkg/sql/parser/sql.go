// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:881
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13861

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1608,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 418,
	-2, 0,
	-1, 74,
	245, 248,
	521, 248,
	-2, 0,
	-1, 88,
	234, 1343,
	247, 1343,
	263, 414,
	395, 414,
	406, 1096,
	446, 414,
	459, 1096,
	506, 1096,
	532, 414,
	558, 1096,
	-2, 0,
	-1, 94,
	133, 1608,
	240, 1608,
	543, 1608,
	544, 1608,
	-2, 0,
	-1, 112,
	152, 1579,
	172, 1579,
	185, 1579,
	243, 1579,
	276, 1579,
	346, 1579,
	356, 1579,
	538, 1579,
	-2, 1550,
	-1, 153,
	160, 935,
	262, 935,
	398, 896,
	464, 896,
	505, 896,
	524, 935,
	526, 896,
	-2, 0,
	-1, 157,
	4, 1610,
	21, 1610,
	22, 1610,
	23, 1610,
	24, 1610,
	25, 1610,
	26, 1610,
	27, 1610,
	29, 1610,
	30, 1610,
	36, 1610,
	41, 1610,
	42, 1610,
	44, 1610,
	45, 1610,
	46, 1610,
	47, 1610,
	48, 1610,
	49, 1610,
	50, 1610,
	51, 1610,
	53, 1610,
	54, 1610,
	55, 1610,
	56, 1610,
	58, 1610,
	59, 1610,
	60, 1610,
	61, 1610,
	62, 1610,
	63, 1610,
	64, 1610,
	68, 1610,
	69, 1610,
	70, 1610,
	71, 1610,
	73, 1610,
	74, 1610,
	75, 1610,
	79, 1610,
	80, 1610,
	81, 1610,
	82, 1610,
	83, 1610,
	84, 1610,
	85, 1610,
	88, 1610,
	89, 1610,
	90, 1610,
	91, 1610,
	92, 1610,
	94, 1610,
	96, 1610,
	97, 1610,
	98, 1610,
	99, 1610,
	100, 1610,
	101, 1610,
	103, 1610,
	104, 1610,
	105, 1610,
	107, 1610,
	108, 1610,
	109, 1610,
	117, 1610,
	118, 1610,
	119, 1610,
	120, 1610,
	121, 1610,
	123, 1610,
	124, 1610,
	125, 1610,
	126, 1610,
	128, 1610,
	129, 1610,
	130, 1610,
	132, 1610,
	133, 1610,
	134, 1610,
	136, 1610,
	137, 1610,
	138, 1610,
	141, 1610,
	142, 1610,
	143, 1610,
	145, 1610,
	146, 1610,
	147, 1610,
	149, 1610,
	150, 1610,
	151, 1610,
	153, 1610,
	154, 1610,
	155, 1610,
	156, 1610,
	157, 1610,
	158, 1610,
	159, 1610,
	160, 1610,
	161, 1610,
	162, 1610,
	163, 1610,
	164, 1610,
	165, 1610,
	166, 1610,
	167, 1610,
	168, 1610,
	169, 1610,
	171, 1610,
	177, 1610,
	178, 1610,
	179, 1610,
	180, 1610,
	184, 1610,
	186, 1610,
	187, 1610,
	188, 1610,
	192, 1610,
	193, 1610,
	194, 1610,
	195, 1610,
	196, 1610,
	197, 1610,
	198, 1610,
	199, 1610,
	200, 1610,
	201, 1610,
	202, 1610,
	203, 1610,
	204, 1610,
	205, 1610,
	207, 1610,
	208, 1610,
	210, 1610,
	211, 1610,
	213, 1610,
	214, 1610,
	215, 1610,
	216, 1610,
	217, 1610,
	218, 1610,
	219, 1610,
	220, 1610,
	221, 1610,
	223, 1610,
	224, 1610,
	226, 1610,
	227, 1610,
	228, 1610,
	229, 1610,
	230, 1610,
	234, 1610,
	235, 1610,
	236, 1610,
	237, 1610,
	240, 1610,
	241, 1610,
	242, 1610,
	244, 1610,
	246, 1610,
	247, 1610,
	249, 1610,
	251, 1610,
	252, 1610,
	253, 1610,
	255, 1610,
	259, 1610,
	260, 1610,
	261, 1610,
	262, 1610,
	263, 1610,
	264, 1610,
	266, 1610,
	267, 1610,
	268, 1610,
	270, 1610,
	271, 1610,
	273, 1610,
	274, 1610,
	277, 1610,
	278, 1610,
	279, 1610,
	280, 1610,
	281, 1610,
	282, 1610,
	283, 1610,
	286, 1610,
	287, 1610,
	288, 1610,
	289, 1610,
	291, 1610,
	292, 1610,
	293, 1610,
	294, 1610,
	295, 1610,
	296, 1610,
	297, 1610,
	298, 1610,
	299, 1610,
	300, 1610,
	301, 1610,
	302, 1610,
	303, 1610,
	304, 1610,
	305, 1610,
	306, 1610,
	307, 1610,
	308, 1610,
	309, 1610,
	310, 1610,
	311, 1610,
	312, 1610,
	314, 1610,
	316, 1610,
	317, 1610,
	318, 1610,
	319, 1610,
	320, 1610,
	321, 1610,
	322, 1610,
	323, 1610,
	324, 1610,
	325, 1610,
	326, 1610,
	327, 1610,
	328, 1610,
	329, 1610,
	330, 1610,
	332, 1610,
	333, 1610,
	335, 1610,
	337, 1610,
	338, 1610,
	339, 1610,
	341, 1610,
	342, 1610,
	343, 1610,
	344, 1610,
	345, 1610,
	348, 1610,
	351, 1610,
	352, 1610,
	353, 1610,
	354, 1610,
	357, 1610,
	358, 1610,
	359, 1610,
	361, 1610,
	363, 1610,
	364, 1610,
	365, 1610,
	366, 1610,
	367, 1610,
	368, 1610,
	369, 1610,
	370, 1610,
	371, 1610,
	372, 1610,
	373, 1610,
	374, 1610,
	375, 1610,
	377, 1610,
	378, 1610,
	379, 1610,
	380, 1610,
	381, 1610,
	382, 1610,
	383, 1610,
	384, 1610,
	385, 1610,
	386, 1610,
	387, 1610,
	388, 1610,
	389, 1610,
	390, 1610,
	391, 1610,
	393, 1610,
	394, 1610,
	396, 1610,
	397, 1610,
	398, 1610,
	399, 1610,
	400, 1610,
	401, 1610,
	402, 1610,
	403, 1610,
	404, 1610,
	405, 1610,
	406, 1610,
	407, 1610,
	408, 1610,
	410, 1610,
	412, 1610,
	413, 1610,
	414, 1610,
	420, 1610,
	421, 1610,
	423, 1610,
	424, 1610,
	425, 1610,
	426, 1610,
	427, 1610,
	428, 1610,
	429, 1610,
	430, 1610,
	431, 1610,
	432, 1610,
	434, 1610,
	435, 1610,
	436, 1610,
	438, 1610,
	439, 1610,
	440, 1610,
	441, 1610,
	442, 1610,
	443, 1610,
	444, 1610,
	446, 1610,
	447, 1610,
	448, 1610,
	449, 1610,
	450, 1610,
	451, 1610,
	452, 1610,
	453, 1610,
	454, 1610,
	455, 1610,
	456, 1610,
	457, 1610,
	459, 1610,
	460, 1610,
	461, 1610,
	462, 1610,
	463, 1610,
	464, 1610,
	466, 1610,
	467, 1610,
	468, 1610,
	469, 1610,
	470, 1610,
	471, 1610,
	473, 1610,
	474, 1610,
	475, 1610,
	476, 1610,
	477, 1610,
	478, 1610,
	479, 1610,
	480, 1610,
	482, 1610,
	484, 1610,
	485, 1610,
	486, 1610,
	487, 1610,
	488, 1610,
	489, 1610,
	490, 1610,
	491, 1610,
	492, 1610,
	493, 1610,
	494, 1610,
	495, 1610,
	496, 1610,
	497, 1610,
	498, 1610,
	499, 1610,
	501, 1610,
	502, 1610,
	504, 1610,
	505, 1610,
	507, 1610,
	508, 1610,
	509, 1610,
	510, 1610,
	511, 1610,
	512, 1610,
	513, 1610,
	514, 1610,
	516, 1610,
	517, 1610,
	518, 1610,
	519, 1610,
	520, 1610,
	522, 1610,
	524, 1610,
	525, 1610,
	526, 1610,
	527, 1610,
	528, 1610,
	529, 1610,
	531, 1610,
	532, 1610,
	533, 1610,
	534, 1610,
	536, 1610,
	537, 1610,
	540, 1610,
	541, 1610,
	542, 1610,
	543, 1610,
	544, 1610,
	545, 1610,
	546, 1610,
	548, 1610,
	551, 1610,
	552, 1610,
	553, 1610,
	554, 1610,
	555, 1610,
	556, 1610,
	558, 1610,
	559, 1610,
	560, 1610,
	561, 1610,
	562, 1610,
	563, 1610,
	564, 1610,
	569, 1610,
	570, 1610,
	571, 1610,
	572, 1610,
	573, 1610,
	574, 1610,
	-2, 0,
	-1, 158,
	1, 1460,
	131, 1460,
	251, 1460,
	334, 1460,
	393, 1460,
	402, 1460,
	578, 1460,
	608, 1460,
	-2, 0,
	-1, 160,
	1, 1460,
	608, 1460,
	-2, 0,
	-1, 161,
	1, 1460,
	608, 1460,
	-2, 0,
	-1, 162,
	1, 1460,
	521, 1460,
	608, 1460,
	-2, 0,
	-1, 191,
	152, 1578,
	172, 1578,
	185, 1578,
	243, 1578,
	276, 1578,
	346, 1578,
	356, 1578,
	538, 1578,
	-2, 1553,
	-1, 238,
	4, 1617,
	5, 1617,
	6, 1617,
	7, 1617,
	8, 1617,
	9, 1617,
	10, 1617,
	21, 1617,
	22, 1617,
	23, 1617,
	24, 1617,
	25, 1617,
	26, 1617,
	27, 1617,
	29, 1617,
	30, 1617,
	36, 1617,
	37, 1617,
	41, 1617,
	42, 1617,
	43, 1617,
	44, 1617,
	45, 1617,
	46, 1617,
	47, 1617,
	48, 1617,
	49, 1617,
	50, 1617,
	51, 1617,
	53, 1617,
	54, 1617,
	55, 1617,
	56, 1617,
	58, 1617,
	59, 1617,
	60, 1617,
	61, 1617,
	62, 1617,
	63, 1617,
	64, 1617,
	65, 1617,
	66, 1617,
	67, 1617,
	68, 1617,
	69, 1617,
	70, 1617,
	71, 1617,
	73, 1617,
	74, 1617,
	75, 1617,
	77, 1617,
	79, 1617,
	80, 1617,
	81, 1617,
	82, 1617,
	83, 1617,
	84, 1617,
	85, 1617,
	88, 1617,
	89, 1617,
	90, 1617,
	91, 1617,
	92, 1617,
	94, 1617,
	96, 1617,
	97, 1617,
	98, 1617,
	99, 1617,
	100, 1617,
	101, 1617,
	103, 1617,
	104, 1617,
	105, 1617,
	106, 1617,
	107, 1617,
	108, 1617,
	109, 1617,
	110, 1617,
	111, 1617,
	112, 1617,
	113, 1617,
	114, 1617,
	115, 1617,
	116, 1617,
	117, 1617,
	118, 1617,
	119, 1617,
	120, 1617,
	121, 1617,
	122, 1617,
	123, 1617,
	124, 1617,
	125, 1617,
	126, 1617,
	127, 1617,
	128, 1617,
	129, 1617,
	130, 1617,
	132, 1617,
	133, 1617,
	134, 1617,
	136, 1617,
	137, 1617,
	138, 1617,
	141, 1617,
	142, 1617,
	143, 1617,
	145, 1617,
	146, 1617,
	147, 1617,
	149, 1617,
	150, 1617,
	151, 1617,
	153, 1617,
	154, 1617,
	155, 1617,
	156, 1617,
	157, 1617,
	158, 1617,
	159, 1617,
	160, 1617,
	161, 1617,
	162, 1617,
	163, 1617,
	164, 1617,
	165, 1617,
	166, 1617,
	167, 1617,
	168, 1617,
	169, 1617,
	170, 1617,
	171, 1617,
	177, 1617,
	178, 1617,
	179, 1617,
	180, 1617,
	184, 1617,
	186, 1617,
	187, 1617,
	188, 1617,
	191, 1617,
	192, 1617,
	193, 1617,
	194, 1617,
	195, 1617,
	196, 1617,
	197, 1617,
	198, 1617,
	199, 1617,
	200, 1617,
	201, 1617,
	202, 1617,
	203, 1617,
	204, 1617,
	205, 1617,
	207, 1617,
	208, 1617,
	210, 1617,
	211, 1617,
	213, 1617,
	214, 1617,
	215, 1617,
	216, 1617,
	217, 1617,
	218, 1617,
	219, 1617,
	220, 1617,
	221, 1617,
	222, 1617,
	223, 1617,
	224, 1617,
	226, 1617,
	227, 1617,
	228, 1617,
	229, 1617,
	230, 1617,
	234, 1617,
	235, 1617,
	236, 1617,
	237, 1617,
	239, 1617,
	240, 1617,
	241, 1617,
	242, 1617,
	244, 1617,
	246, 1617,
	247, 1617,
	248, 1617,
	249, 1617,
	250, 1617,
	251, 1617,
	252, 1617,
	253, 1617,
	254, 1617,
	255, 1617,
	259, 1617,
	260, 1617,
	261, 1617,
	262, 1617,
	263, 1617,
	264, 1617,
	266, 1617,
	267, 1617,
	268, 1617,
	270, 1617,
	271, 1617,
	272, 1617,
	273, 1617,
	274, 1617,
	275, 1617,
	277, 1617,
	278, 1617,
	279, 1617,
	280, 1617,
	281, 1617,
	282, 1617,
	283, 1617,
	284, 1617,
	285, 1617,
	286, 1617,
	287, 1617,
	288, 1617,
	289, 1617,
	291, 1617,
	292, 1617,
	293, 1617,
	294, 1617,
	295, 1617,
	296, 1617,
	297, 1617,
	298, 1617,
	299, 1617,
	300, 1617,
	301, 1617,
	302, 1617,
	303, 1617,
	304, 1617,
	305, 1617,
	306, 1617,
	307, 1617,
	308, 1617,
	309, 1617,
	310, 1617,
	311, 1617,
	312, 1617,
	314, 1617,
	315, 1617,
	316, 1617,
	317, 1617,
	318, 1617,
	319, 1617,
	320, 1617,
	321, 1617,
	322, 1617,
	323, 1617,
	324, 1617,
	325, 1617,
	326, 1617,
	327, 1617,
	328, 1617,
	329, 1617,
	330, 1617,
	331, 1617,
	332, 1617,
	333, 1617,
	334, 1617,
	335, 1617,
	336, 1617,
	337, 1617,
	338, 1617,
	339, 1617,
	340, 1617,
	341, 1617,
	342, 1617,
	343, 1617,
	344, 1617,
	345, 1617,
	348, 1617,
	352, 1617,
	353, 1617,
	354, 1617,
	357, 1617,
	358, 1617,
	359, 1617,
	360, 1617,
	361, 1617,
	362, 1617,
	363, 1617,
	364, 1617,
	365, 1617,
	366, 1617,
	367, 1617,
	368, 1617,
	369, 1617,
	370, 1617,
	371, 1617,
	372, 1617,
	373, 1617,
	374, 1617,
	375, 1617,
	377, 1617,
	378, 1617,
	379, 1617,
	380, 1617,
	381, 1617,
	382, 1617,
	383, 1617,
	384, 1617,
	385, 1617,
	386, 1617,
	387, 1617,
	388, 1617,
	389, 1617,
	390, 1617,
	391, 1617,
	393, 1617,
	394, 1617,
	396, 1617,
	397, 1617,
	398, 1617,
	399, 1617,
	400, 1617,
	401, 1617,
	402, 1617,
	403, 1617,
	404, 1617,
	405, 1617,
	406, 1617,
	407, 1617,
	408, 1617,
	410, 1617,
	412, 1617,
	413, 1617,
	414, 1617,
	420, 1617,
	421, 1617,
	423, 1617,
	424, 1617,
	425, 1617,
	426, 1617,
	427, 1617,
	428, 1617,
	429, 1617,
	430, 1617,
	431, 1617,
	432, 1617,
	434, 1617,
	435, 1617,
	436, 1617,
	437, 1617,
	438, 1617,
	439, 1617,
	440, 1617,
	441, 1617,
	442, 1617,
	443, 1617,
	444, 1617,
	446, 1617,
	447, 1617,
	448, 1617,
	449, 1617,
	450, 1617,
	451, 1617,
	452, 1617,
	453, 1617,
	454, 1617,
	455, 1617,
	456, 1617,
	457, 1617,
	459, 1617,
	460, 1617,
	461, 1617,
	462, 1617,
	463, 1617,
	464, 1617,
	465, 1617,
	466, 1617,
	467, 1617,
	468, 1617,
	469, 1617,
	470, 1617,
	471, 1617,
	472, 1617,
	473, 1617,
	474, 1617,
	475, 1617,
	476, 1617,
	477, 1617,
	478, 1617,
	479, 1617,
	480, 1617,
	482, 1617,
	484, 1617,
	485, 1617,
	486, 1617,
	487, 1617,
	488, 1617,
	489, 1617,
	490, 1617,
	491, 1617,
	492, 1617,
	493, 1617,
	494, 1617,
	495, 1617,
	496, 1617,
	497, 1617,
	498, 1617,
	499, 1617,
	501, 1617,
	502, 1617,
	503, 1617,
	504, 1617,
	505, 1617,
	507, 1617,
	508, 1617,
	509, 1617,
	510, 1617,
	511, 1617,
	512, 1617,
	513, 1617,
	514, 1617,
	516, 1617,
	517, 1617,
	518, 1617,
	519, 1617,
	520, 1617,
	522, 1617,
	524, 1617,
	525, 1617,
	526, 1617,
	527, 1617,
	528, 1617,
	529, 1617,
	530, 1617,
	531, 1617,
	532, 1617,
	533, 1617,
	534, 1617,
	536, 1617,
	537, 1617,
	539, 1617,
	540, 1617,
	541, 1617,
	542, 1617,
	543, 1617,
	544, 1617,
	545, 1617,
	546, 1617,
	547, 1617,
	548, 1617,
	551, 1617,
	552, 1617,
	553, 1617,
	554, 1617,
	555, 1617,
	556, 1617,
	558, 1617,
	559, 1617,
	560, 1617,
	561, 1617,
	562, 1617,
	563, 1617,
	564, 1617,
	569, 1617,
	570, 1617,
	571, 1617,
	572, 1617,
	573, 1617,
	574, 1617,
	575, 1617,
	588, 1617,
	595, 1617,
	596, 1617,
	597, 1617,
	605, 1617,
	609, 1617,
	-2, 0,
	-1, 755,
	4, 1341,
	21, 1341,
	22, 1341,
	23, 1341,
	24, 1341,
	25, 1341,
	26, 1341,
	27, 1341,
	29, 1341,
	30, 1341,
	36, 1341,
	41, 1341,
	42, 1341,
	44, 1341,
	45, 1341,
	46, 1341,
	47, 1341,
	48, 1341,
	49, 1341,
	50, 1341,
	51, 1341,
	53, 1341,
	54, 1341,
	55, 1341,
	56, 1341,
	58, 1341,
	59, 1341,
	60, 1341,
	61, 1341,
	62, 1341,
	63, 1341,
	64, 1341,
	68, 1341,
	69, 1341,
	70, 1341,
	71, 1341,
	73, 1341,
	74, 1341,
	75, 1341,
	79, 1341,
	80, 1341,
	81, 1341,
	82, 1341,
	83, 1341,
	84, 1341,
	85, 1341,
	88, 1341,
	89, 1341,
	90, 1341,
	91, 1341,
	92, 1341,
	94, 1341,
	96, 1341,
	97, 1341,
	98, 1341,
	99, 1341,
	100, 1341,
	101, 1341,
	103, 1341,
	104, 1341,
	105, 1341,
	107, 1341,
	108, 1341,
	109, 1341,
	117, 1341,
	118, 1341,
	119, 1341,
	120, 1341,
	121, 1341,
	123, 1341,
	124, 1341,
	125, 1341,
	126, 1341,
	128, 1341,
	129, 1341,
	130, 1341,
	132, 1341,
	133, 1341,
	134, 1341,
	136, 1341,
	137, 1341,
	138, 1341,
	141, 1341,
	142, 1341,
	143, 1341,
	145, 1341,
	146, 1341,
	147, 1341,
	149, 1341,
	150, 1341,
	151, 1341,
	153, 1341,
	154, 1341,
	155, 1341,
	156, 1341,
	157, 1341,
	158, 1341,
	159, 1341,
	160, 1341,
	161, 1341,
	162, 1341,
	163, 1341,
	164, 1341,
	165, 1341,
	166, 1341,
	167, 1341,
	168, 1341,
	169, 1341,
	171, 1341,
	177, 1341,
	178, 1341,
	179, 1341,
	180, 1341,
	184, 1341,
	186, 1341,
	187, 1341,
	188, 1341,
	192, 1341,
	193, 1341,
	194, 1341,
	195, 1341,
	196, 1341,
	197, 1341,
	198, 1341,
	199, 1341,
	200, 1341,
	201, 1341,
	202, 1341,
	203, 1341,
	204, 1341,
	205, 1341,
	207, 1341,
	208, 1341,
	210, 1341,
	211, 1341,
	213, 1341,
	214, 1341,
	215, 1341,
	216, 1341,
	217, 1341,
	218, 1341,
	219, 1341,
	220, 1341,
	221, 1341,
	223, 1341,
	224, 1341,
	226, 1341,
	227, 1341,
	228, 1341,
	229, 1341,
	230, 1341,
	234, 1341,
	235, 1341,
	236, 1341,
	237, 1341,
	240, 1341,
	241, 1341,
	242, 1341,
	244, 1341,
	246, 1341,
	247, 1341,
	249, 1341,
	251, 1341,
	252, 1341,
	253, 1341,
	255, 1341,
	259, 1341,
	260, 1341,
	261, 1341,
	262, 1341,
	263, 1341,
	264, 1341,
	266, 1341,
	267, 1341,
	268, 1341,
	270, 1341,
	271, 1341,
	273, 1341,
	274, 1341,
	277, 1341,
	278, 1341,
	279, 1341,
	280, 1341,
	281, 1341,
	282, 1341,
	283, 1341,
	286, 1341,
	287, 1341,
	288, 1341,
	289, 1341,
	291, 1341,
	292, 1341,
	293, 1341,
	294, 1341,
	295, 1341,
	296, 1341,
	297, 1341,
	298, 1341,
	299, 1341,
	300, 1341,
	301, 1341,
	302, 1341,
	303, 1341,
	304, 1341,
	305, 1341,
	306, 1341,
	307, 1341,
	308, 1341,
	309, 1341,
	310, 1341,
	311, 1341,
	312, 1341,
	314, 1341,
	316, 1341,
	317, 1341,
	318, 1341,
	319, 1341,
	320, 1341,
	321, 1341,
	322, 1341,
	323, 1341,
	324, 1341,
	325, 1341,
	326, 1341,
	327, 1341,
	328, 1341,
	329, 1341,
	330, 1341,
	332, 1341,
	333, 1341,
	335, 1341,
	337, 1341,
	338, 1341,
	339, 1341,
	341, 1341,
	342, 1341,
	343, 1341,
	344, 1341,
	345, 1341,
	348, 1341,
	352, 1341,
	353, 1341,
	354, 1341,
	357, 1341,
	358, 1341,
	359, 1341,
	361, 1341,
	363, 1341,
	364, 1341,
	365, 1341,
	366, 1341,
	367, 1341,
	368, 1341,
	369, 1341,
	370, 1341,
	371, 1341,
	372, 1341,
	373, 1341,
	374, 1341,
	375, 1341,
	377, 1341,
	378, 1341,
	379, 1341,
	380, 1341,
	381, 1341,
	382, 1341,
	383, 1341,
	384, 1341,
	385, 1341,
	386, 1341,
	387, 1341,
	388, 1341,
	389, 1341,
	390, 1341,
	391, 1341,
	393, 1341,
	394, 1341,
	396, 1341,
	397, 1341,
	398, 1341,
	399, 1341,
	400, 1341,
	401, 1341,
	402, 1341,
	403, 1341,
	404, 1341,
	405, 1341,
	406, 1341,
	407, 1341,
	408, 1341,
	410, 1341,
	412, 1341,
	413, 1341,
	414, 1341,
	420, 1341,
	421, 1341,
	423, 1341,
	424, 1341,
	425, 1341,
	426, 1341,
	427, 1341,
	428, 1341,
	429, 1341,
	430, 1341,
	431, 1341,
	432, 1341,
	434, 1341,
	435, 1341,
	436, 1341,
	438, 1341,
	439, 1341,
	440, 1341,
	441, 1341,
	442, 1341,
	443, 1341,
	444, 1341,
	446, 1341,
	447, 1341,
	448, 1341,
	449, 1341,
	450, 1341,
	451, 1341,
	452, 1341,
	453, 1341,
	454, 1341,
	455, 1341,
	456, 1341,
	457, 1341,
	459, 1341,
	460, 1341,
	461, 1341,
	462, 1341,
	463, 1341,
	464, 1341,
	466, 1341,
	467, 1341,
	468, 1341,
	469, 1341,
	470, 1341,
	471, 1341,
	473, 1341,
	474, 1341,
	475, 1341,
	476, 1341,
	477, 1341,
	478, 1341,
	479, 1341,
	480, 1341,
	482, 1341,
	484, 1341,
	485, 1341,
	486, 1341,
	487, 1341,
	488, 1341,
	489, 1341,
	490, 1341,
	491, 1341,
	492, 1341,
	493, 1341,
	494, 1341,
	495, 1341,
	496, 1341,
	497, 1341,
	498, 1341,
	499, 1341,
	501, 1341,
	502, 1341,
	504, 1341,
	505, 1341,
	507, 1341,
	508, 1341,
	509, 1341,
	510, 1341,
	511, 1341,
	512, 1341,
	513, 1341,
	514, 1341,
	516, 1341,
	517, 1341,
	518, 1341,
	519, 1341,
	520, 1341,
	522, 1341,
	524, 1341,
	525, 1341,
	526, 1341,
	527, 1341,
	528, 1341,
	529, 1341,
	531, 1341,
	532, 1341,
	533, 1341,
	534, 1341,
	536, 1341,
	537, 1341,
	540, 1341,
	541, 1341,
	542, 1341,
	543, 1341,
	544, 1341,
	545, 1341,
	546, 1341,
	548, 1341,
	551, 1341,
	552, 1341,
	553, 1341,
	554, 1341,
	555, 1341,
	556, 1341,
	558, 1341,
	559, 1341,
	560, 1341,
	561, 1341,
	562, 1341,
	563, 1341,
	564, 1341,
	569, 1341,
	570, 1341,
	571, 1341,
	572, 1341,
	573, 1341,
	574, 1341,
	-2, 0,
	-1, 774,
	190, 2409,
	521, 2409,
	587, 2409,
	607, 2409,
	-2, 0,
	-1, 775,
	190, 2396,
	521, 2396,
	587, 2396,
	607, 2396,
	-2, 0,
	-1, 777,
	190, 2662,
	521, 2662,
	587, 2662,
	607, 2662,
	-2, 0,
	-1, 780,
	190, 2521,
	521, 2521,
	587, 2521,
	607, 2521,
	-2, 0,
	-1, 781,
	190, 2703,
	521, 2703,
	587, 2703,
	607, 2703,
	-2, 0,
	-1, 789,
	190, 2548,
	521, 2548,
	587, 2548,
	607, 2548,
	-2, 717,
	-1, 824,
	607, 2345,
	610, 2345,
	-2, 1017,
	-1, 825,
	607, 2347,
	610, 2347,
	-2, 1018,
	-1, 826,
	607, 2346,
	610, 2346,
	-2, 1019,
	-1, 827,
	610, 2271,
	-2, 1020,
	-1, 852,
	185, 267,
	-2, 0,
	-1, 876,
	43, 2318,
	-2, 0,
	-1, 877,
	558, 1319,
	-2, 1097,
	-1, 893,
	4, 1751,
	21, 1751,
	22, 1751,
	23, 1751,
	24, 1751,
	25, 1751,
	26, 1751,
	27, 1751,
	29, 1751,
	30, 1751,
	36, 1751,
	41, 1751,
	42, 1751,
	44, 1751,
	45, 1751,
	46, 1751,
	47, 1751,
	48, 1751,
	49, 1751,
	50, 1751,
	51, 1751,
	53, 1751,
	54, 1751,
	55, 1751,
	56, 1751,
	58, 1751,
	59, 1751,
	60, 1751,
	61, 1751,
	62, 1751,
	63, 1751,
	64, 1751,
	68, 1751,
	69, 1751,
	70, 1751,
	71, 1751,
	73, 1751,
	74, 1751,
	75, 1751,
	79, 1751,
	80, 1751,
	81, 1751,
	82, 1751,
	83, 1751,
	84, 1751,
	85, 1751,
	88, 1751,
	89, 1751,
	90, 1751,
	91, 1751,
	92, 1751,
	94, 1751,
	96, 1751,
	97, 1751,
	98, 1751,
	99, 1751,
	100, 1751,
	101, 1751,
	103, 1751,
	104, 1751,
	105, 1751,
	107, 1751,
	108, 1751,
	109, 1751,
	117, 1751,
	118, 1751,
	119, 1751,
	120, 1751,
	121, 1751,
	123, 1751,
	124, 1751,
	125, 1751,
	126, 1751,
	128, 1751,
	129, 1751,
	130, 1751,
	132, 1751,
	133, 1751,
	134, 1751,
	136, 1751,
	137, 1751,
	138, 1751,
	141, 1751,
	142, 1751,
	143, 1751,
	145, 1751,
	146, 1751,
	147, 1751,
	149, 1751,
	150, 1751,
	151, 1751,
	153, 1751,
	154, 1751,
	155, 1751,
	156, 1751,
	157, 1751,
	158, 1751,
	159, 1751,
	160, 1751,
	161, 1751,
	162, 1751,
	163, 1751,
	164, 1751,
	165, 1751,
	166, 1751,
	167, 1751,
	168, 1751,
	169, 1751,
	171, 1751,
	177, 1751,
	178, 1751,
	179, 1751,
	180, 1751,
	184, 1751,
	186, 1751,
	187, 1751,
	188, 1751,
	192, 1751,
	193, 1751,
	194, 1751,
	195, 1751,
	196, 1751,
	197, 1751,
	198, 1751,
	199, 1751,
	200, 1751,
	201, 1751,
	202, 1751,
	203, 1751,
	204, 1751,
	205, 1751,
	207, 1751,
	208, 1751,
	210, 1751,
	211, 1751,
	213, 1751,
	214, 1751,
	215, 1751,
	216, 1751,
	217, 1751,
	218, 1751,
	219, 1751,
	220, 1751,
	221, 1751,
	223, 1751,
	224, 1751,
	226, 1751,
	227, 1751,
	228, 1751,
	229, 1751,
	230, 1751,
	234, 1751,
	235, 1751,
	236, 1751,
	237, 1751,
	240, 1751,
	241, 1751,
	242, 1751,
	244, 1751,
	246, 1751,
	247, 1751,
	249, 1751,
	251, 1751,
	252, 1751,
	253, 1751,
	255, 1751,
	259, 1751,
	260, 1751,
	261, 1751,
	262, 1751,
	263, 1751,
	264, 1751,
	266, 1751,
	267, 1751,
	268, 1751,
	270, 1751,
	271, 1751,
	273, 1751,
	274, 1751,
	277, 1751,
	278, 1751,
	279, 1751,
	280, 1751,
	281, 1751,
	282, 1751,
	283, 1751,
	286, 1751,
	287, 1751,
	288, 1751,
	289, 1751,
	291, 1751,
	292, 1751,
	293, 1751,
	294, 1751,
	295, 1751,
	296, 1751,
	297, 1751,
	298, 1751,
	299, 1751,
	300, 1751,
	301, 1751,
	302, 1751,
	303, 1751,
	304, 1751,
	305, 1751,
	306, 1751,
	307, 1751,
	308, 1751,
	309, 1751,
	310, 1751,
	311, 1751,
	312, 1751,
	314, 1751,
	316, 1751,
	317, 1751,
	318, 1751,
	319, 1751,
	320, 1751,
	321, 1751,
	322, 1751,
	323, 1751,
	324, 1751,
	325, 1751,
	326, 1751,
	327, 1751,
	328, 1751,
	329, 1751,
	330, 1751,
	332, 1751,
	333, 1751,
	335, 1751,
	337, 1751,
	338, 1751,
	339, 1751,
	341, 1751,
	342, 1751,
	343, 1751,
	344, 1751,
	345, 1751,
	348, 1751,
	352, 1751,
	353, 1751,
	354, 1751,
	357, 1751,
	358, 1751,
	359, 1751,
	361, 1751,
	363, 1751,
	364, 1751,
	365, 1751,
	366, 1751,
	367, 1751,
	368, 1751,
	369, 1751,
	370, 1751,
	371, 1751,
	372, 1751,
	373, 1751,
	374, 1751,
	375, 1751,
	377, 1751,
	378, 1751,
	379, 1751,
	380, 1751,
	381, 1751,
	382, 1751,
	383, 1751,
	384, 1751,
	385, 1751,
	386, 1751,
	387, 1751,
	388, 1751,
	389, 1751,
	390, 1751,
	391, 1751,
	393, 1751,
	394, 1751,
	396, 1751,
	397, 1751,
	398, 1751,
	399, 1751,
	400, 1751,
	401, 1751,
	402, 1751,
	403, 1751,
	404, 1751,
	405, 1751,
	406, 1751,
	407, 1751,
	408, 1751,
	410, 1751,
	412, 1751,
	413, 1751,
	414, 1751,
	420, 1751,
	421, 1751,
	423, 1751,
	424, 1751,
	425, 1751,
	426, 1751,
	427, 1751,
	428, 1751,
	429, 1751,
	430, 1751,
	431, 1751,
	432, 1751,
	434, 1751,
	435, 1751,
	436, 1751,
	438, 1751,
	439, 1751,
	440, 1751,
	441, 1751,
	442, 1751,
	443, 1751,
	444, 1751,
	446, 1751,
	447, 1751,
	448, 1751,
	449, 1751,
	450, 1751,
	451, 1751,
	452, 1751,
	453, 1751,
	454, 1751,
	455, 1751,
	456, 1751,
	457, 1751,
	459, 1751,
	460, 1751,
	461, 1751,
	462, 1751,
	463, 1751,
	464, 1751,
	466, 1751,
	467, 1751,
	468, 1751,
	469, 1751,
	470, 1751,
	471, 1751,
	473, 1751,
	474, 1751,
	475, 1751,
	476, 1751,
	477, 1751,
	478, 1751,
	479, 1751,
	480, 1751,
	482, 1751,
	484, 1751,
	485, 1751,
	486, 1751,
	487, 1751,
	488, 1751,
	489, 1751,
	490, 1751,
	491, 1751,
	492, 1751,
	493, 1751,
	494, 1751,
	495, 1751,
	496, 1751,
	497, 1751,
	498, 1751,
	499, 1751,
	501, 1751,
	502, 1751,
	504, 1751,
	505, 1751,
	507, 1751,
	508, 1751,
	509, 1751,
	510, 1751,
	511, 1751,
	512, 1751,
	513, 1751,
	514, 1751,
	516, 1751,
	517, 1751,
	518, 1751,
	519, 1751,
	520, 1751,
	522, 1751,
	524, 1751,
	525, 1751,
	526, 1751,
	527, 1751,
	528, 1751,
	529, 1751,
	531, 1751,
	532, 1751,
	533, 1751,
	534, 1751,
	536, 1751,
	537, 1751,
	540, 1751,
	541, 1751,
	542, 1751,
	543, 1751,
	544, 1751,
	545, 1751,
	546, 1751,
	548, 1751,
	551, 1751,
	552, 1751,
	553, 1751,
	554, 1751,
	555, 1751,
	556, 1751,
	558, 1751,
	559, 1751,
	560, 1751,
	561, 1751,
	562, 1751,
	563, 1751,
	564, 1751,
	569, 1751,
	570, 1751,
	571, 1751,
	572, 1751,
	573, 1751,
	574, 1751,
	-2, 0,
	-1, 903,
	263, 418,
	-2, 0,
	-1, 980,
	398, 897,
	464, 897,
	505, 897,
	526, 897,
	-2, 0,
	-1, 981,
	398, 896,
	464, 896,
	505, 896,
	526, 896,
	-2, 828,
	-1, 985,
	1, 949,
	604, 949,
	606, 949,
	608, 949,
	-2, 0,
	-1, 987,
	1, 871,
	604, 871,
	606, 871,
	608, 871,
	-2, 0,
	-1, 988,
	1, 875,
	604, 875,
	606, 875,
	608, 875,
	-2, 0,
	-1, 989,
	1, 1016,
	185, 1016,
	604, 1016,
	606, 1016,
	608, 1016,
	-2, 0,
	-1, 997,
	1, 902,
	604, 902,
	606, 902,
	608, 902,
	-2, 0,
	-1, 1004,
	1, 949,
	604, 949,
	606, 949,
	608, 949,
	-2, 0,
	-1, 1005,
	1, 951,
	604, 951,
	606, 951,
	608, 951,
	-2, 0,
	-1, 1006,
	1, 954,
	604, 954,
	606, 954,
	608, 954,
	-2, 0,
	-1, 1012,
	1, 980,
	604, 980,
	606, 980,
	608, 980,
	-2, 0,
	-1, 1013,
	1, 982,
	604, 982,
	606, 982,
	608, 982,
	-2, 0,
	-1, 1018,
	1, 1010,
	604, 1010,
	606, 1010,
	608, 1010,
	-2, 0,
	-1, 1070,
	172, 1621,
	185, 1621,
	276, 1621,
	346, 1621,
	-2, 1557,
	-1, 1085,
	172, 1620,
	185, 1620,
	276, 1620,
	346, 1620,
	-2, 1554,
	-1, 1112,
	607, 2344,
	-2, 725,
	-1, 1141,
	5, 2336,
	605, 2334,
	-2, 2325,
	-1, 1149,
	5, 2357,
	605, 2354,
	-2, 2345,
	-1, 1150,
	5, 2358,
	605, 2355,
	-2, 2346,
	-1, 1158,
	607, 2342,
	-2, 2324,
	-1, 1159,
	605, 2788,
	-2, 2343,
	-1, 1182,
	605, 2787,
	-2, 2359,
	-1, 1183,
	5, 1826,
	-2, 2758,
	-1, 1184,
	5, 1827,
	-2, 2759,
	-1, 1185,
	5, 1828,
	-2, 2773,
	-1, 1186,
	5, 1829,
	-2, 2737,
	-1, 1187,
	5, 1830,
	-2, 2771,
	-1, 1188,
	5, 1838,
	-2, 2750,
	-1, 1189,
	5, 1825,
	-2, 2746,
	-1, 1190,
	5, 1825,
	-2, 2745,
	-1, 1191,
	5, 1825,
	-2, 2764,
	-1, 1192,
	5, 1836,
	-2, 2739,
	-1, 1193,
	5, 1841,
	-2, 2738,
	-1, 1194,
	5, 1843,
	-2, 2783,
	-1, 1197,
	5, 1865,
	-2, 2776,
	-1, 1198,
	5, 1857,
	-2, 2777,
	-1, 1199,
	5, 1865,
	-2, 2778,
	-1, 1200,
	5, 1861,
	-2, 2779,
	-1, 1201,
	5, 1811,
	-2, 2751,
	-1, 1202,
	5, 1812,
	-2, 2752,
	-1, 1203,
	5, 1813,
	-2, 2740,
	-1, 1231,
	5, 1848,
	-2, 2784,
	-1, 1232,
	5, 1849,
	-2, 2774,
	-1, 1233,
	5, 1850,
	559, 1850,
	-2, 2741,
	-1, 1234,
	5, 1851,
	559, 1851,
	-2, 2742,
	-1, 1271,
	605, 2354,
	-2, 2345,
	-1, 1272,
	605, 2355,
	-2, 2346,
	-1, 1369,
	190, 2703,
	521, 2703,
	587, 2703,
	607, 2703,
	-2, 0,
	-1, 1374,
	1, 701,
	608, 701,
	-2, 1468,
	-1, 1504,
	365, 2319,
	423, 2319,
	466, 2319,
	597, 2319,
	-2, 2309,
	-1, 1510,
	190, 129,
	270, 129,
	332, 129,
	564, 129,
	-2, 2699,
	-1, 1511,
	190, 130,
	270, 130,
	332, 130,
	564, 130,
	-2, 2454,
	-1, 1512,
	190, 131,
	270, 131,
	332, 131,
	564, 131,
	-2, 2624,
	-1, 1518,
	609, 2319,
	-2, 2321,
	-1, 1526,
	1, 1316,
	428, 1275,
	466, 1275,
	581, 1275,
	604, 1316,
	606, 1316,
	608, 1316,
	-2, 1606,
	-1, 1532,
	206, 1413,
	225, 1413,
	436, 1413,
	-2, 0,
	-1, 1588,
	406, 1096,
	558, 1096,
	-2, 413,
	-1, 1605,
	43, 2317,
	-2, 1062,
	-1, 1612,
	1, 1316,
	604, 1316,
	606, 1316,
	608, 1316,
	-2, 1606,
	-1, 1620,
	4, 1341,
	21, 1341,
	22, 1341,
	23, 1341,
	24, 1341,
	25, 1341,
	26, 1341,
	27, 1341,
	29, 1341,
	30, 1341,
	36, 1341,
	41, 1341,
	42, 1341,
	44, 1341,
	45, 1341,
	46, 1341,
	47, 1341,
	48, 1341,
	49, 1341,
	50, 1341,
	51, 1341,
	53, 1341,
	54, 1341,
	55, 1341,
	56, 1341,
	58, 1341,
	59, 1341,
	60, 1341,
	61, 1341,
	62, 1341,
	63, 1341,
	64, 1341,
	68, 1341,
	69, 1341,
	70, 1341,
	71, 1341,
	73, 1341,
	74, 1341,
	75, 1341,
	79, 1341,
	80, 1341,
	81, 1341,
	82, 1341,
	83, 1341,
	84, 1341,
	85, 1341,
	88, 1341,
	89, 1341,
	90, 1341,
	91, 1341,
	92, 1341,
	94, 1341,
	96, 1341,
	97, 1341,
	98, 1341,
	99, 1341,
	100, 1341,
	101, 1341,
	103, 1341,
	104, 1341,
	105, 1341,
	107, 1341,
	108, 1341,
	109, 1341,
	117, 1341,
	118, 1341,
	119, 1341,
	120, 1341,
	121, 1341,
	123, 1341,
	124, 1341,
	125, 1341,
	126, 1341,
	128, 1341,
	129, 1341,
	130, 1341,
	132, 1341,
	133, 1341,
	134, 1341,
	136, 1341,
	137, 1341,
	138, 1341,
	141, 1341,
	142, 1341,
	143, 1341,
	145, 1341,
	146, 1341,
	147, 1341,
	149, 1341,
	150, 1341,
	151, 1341,
	153, 1341,
	154, 1341,
	155, 1341,
	156, 1341,
	157, 1341,
	158, 1341,
	159, 1341,
	160, 1341,
	161, 1341,
	162, 1341,
	163, 1341,
	164, 1341,
	165, 1341,
	166, 1341,
	167, 1341,
	168, 1341,
	169, 1341,
	177, 1341,
	178, 1341,
	179, 1341,
	180, 1341,
	184, 1341,
	186, 1341,
	187, 1341,
	188, 1341,
	192, 1341,
	193, 1341,
	194, 1341,
	195, 1341,
	196, 1341,
	197, 1341,
	198, 1341,
	199, 1341,
	200, 1341,
	201, 1341,
	202, 1341,
	203, 1341,
	204, 1341,
	205, 1341,
	207, 1341,
	208, 1341,
	210, 1341,
	211, 1341,
	213, 1341,
	214, 1341,
	215, 1341,
	216, 1341,
	217, 1341,
	218, 1341,
	219, 1341,
	220, 1341,
	221, 1341,
	223, 1341,
	224, 1341,
	226, 1341,
	227, 1341,
	228, 1341,
	229, 1341,
	230, 1341,
	235, 1341,
	236, 1341,
	237, 1341,
	240, 1341,
	241, 1341,
	242, 1341,
	244, 1341,
	246, 1341,
	247, 1341,
	249, 1341,
	251, 1341,
	252, 1341,
	253, 1341,
	255, 1341,
	259, 1341,
	260, 1341,
	261, 1341,
	262, 1341,
	263, 1341,
	264, 1341,
	266, 1341,
	267, 1341,
	268, 1341,
	270, 1341,
	271, 1341,
	273, 1341,
	274, 1341,
	277, 1341,
	278, 1341,
	279, 1341,
	280, 1341,
	281, 1341,
	282, 1341,
	283, 1341,
	286, 1341,
	287, 1341,
	288, 1341,
	289, 1341,
	291, 1341,
	292, 1341,
	293, 1341,
	294, 1341,
	295, 1341,
	296, 1341,
	297, 1341,
	298, 1341,
	299, 1341,
	300, 1341,
	301, 1341,
	302, 1341,
	303, 1341,
	304, 1341,
	305, 1341,
	306, 1341,
	307, 1341,
	308, 1341,
	309, 1341,
	310, 1341,
	311, 1341,
	312, 1341,
	314, 1341,
	316, 1341,
	317, 1341,
	318, 1341,
	319, 1341,
	320, 1341,
	321, 1341,
	322, 1341,
	323, 1341,
	324, 1341,
	325, 1341,
	326, 1341,
	327, 1341,
	328, 1341,
	329, 1341,
	330, 1341,
	332, 1341,
	333, 1341,
	337, 1341,
	338, 1341,
	339, 1341,
	341, 1341,
	342, 1341,
	343, 1341,
	344, 1341,
	345, 1341,
	348, 1341,
	350, 1341,
	352, 1341,
	353, 1341,
	354, 1341,
	357, 1341,
	358, 1341,
	359, 1341,
	361, 1341,
	363, 1341,
	364, 1341,
	365, 1341,
	366, 1341,
	367, 1341,
	368, 1341,
	369, 1341,
	370, 1341,
	371, 1341,
	372, 1341,
	373, 1341,
	374, 1341,
	375, 1341,
	377, 1341,
	378, 1341,
	379, 1341,
	380, 1341,
	381, 1341,
	382, 1341,
	383, 1341,
	384, 1341,
	385, 1341,
	386, 1341,
	387, 1341,
	388, 1341,
	389, 1341,
	390, 1341,
	391, 1341,
	393, 1341,
	394, 1341,
	396, 1341,
	397, 1341,
	398, 1341,
	399, 1341,
	400, 1341,
	401, 1341,
	402, 1341,
	403, 1341,
	404, 1341,
	405, 1341,
	406, 1341,
	407, 1341,
	408, 1341,
	410, 1341,
	412, 1341,
	413, 1341,
	414, 1341,
	420, 1341,
	421, 1341,
	423, 1341,
	424, 1341,
	425, 1341,
	426, 1341,
	427, 1341,
	428, 1341,
	429, 1341,
	430, 1341,
	431, 1341,
	432, 1341,
	434, 1341,
	435, 1341,
	436, 1341,
	438, 1341,
	439, 1341,
	440, 1341,
	441, 1341,
	442, 1341,
	443, 1341,
	444, 1341,
	446, 1341,
	447, 1341,
	448, 1341,
	449, 1341,
	450, 1341,
	451, 1341,
	452, 1341,
	453, 1341,
	454, 1341,
	455, 1341,
	456, 1341,
	457, 1341,
	459, 1341,
	460, 1341,
	461, 1341,
	462, 1341,
	463, 1341,
	464, 1341,
	466, 1341,
	467, 1341,
	468, 1341,
	469, 1341,
	470, 1341,
	471, 1341,
	473, 1341,
	474, 1341,
	475, 1341,
	476, 1341,
	477, 1341,
	478, 1341,
	479, 1341,
	480, 1341,
	482, 1341,
	484, 1341,
	485, 1341,
	486, 1341,
	487, 1341,
	488, 1341,
	489, 1341,
	490, 1341,
	491, 1341,
	492, 1341,
	493, 1341,
	494, 1341,
	495, 1341,
	496, 1341,
	497, 1341,
	498, 1341,
	499, 1341,
	501, 1341,
	502, 1341,
	504, 1341,
	505, 1341,
	507, 1341,
	508, 1341,
	509, 1341,
	510, 1341,
	511, 1341,
	512, 1341,
	513, 1341,
	514, 1341,
	516, 1341,
	517, 1341,
	518, 1341,
	519, 1341,
	520, 1341,
	522, 1341,
	524, 1341,
	525, 1341,
	526, 1341,
	527, 1341,
	528, 1341,
	529, 1341,
	531, 1341,
	532, 1341,
	533, 1341,
	534, 1341,
	536, 1341,
	537, 1341,
	540, 1341,
	541, 1341,
	542, 1341,
	543, 1341,
	544, 1341,
	545, 1341,
	546, 1341,
	548, 1341,
	551, 1341,
	552, 1341,
	553, 1341,
	554, 1341,
	555, 1341,
	556, 1341,
	558, 1341,
	559, 1341,
	560, 1341,
	561, 1341,
	562, 1341,
	563, 1341,
	564, 1341,
	569, 1341,
	570, 1341,
	571, 1341,
	572, 1341,
	573, 1341,
	574, 1341,
	-2, 0,
	-1, 1643,
	1, 558,
	604, 558,
	606, 558,
	608, 558,
	-2, 1577,
	-1, 1646,
	4, 2782,
	11, 2782,
	12, 2782,
	14, 2782,
	15, 2782,
	16, 2782,
	17, 2782,
	18, 2782,
	19, 2782,
	21, 2782,
	22, 2782,
	23, 2782,
	24, 2782,
	25, 2782,
	26, 2782,
	27, 2782,
	29, 2782,
	30, 2782,
	33, 2782,
	34, 2782,
	36, 2782,
	38, 2782,
	41, 2782,
	42, 2782,
	44, 2782,
	45, 2782,
	46, 2782,
	47, 2782,
	48, 2782,
	49, 2782,
	50, 2782,
	51, 2782,
	53, 2782,
	54, 2782,
	55, 2782,
	56, 2782,
	58, 2782,
	59, 2782,
	60, 2782,
	61, 2782,
	62, 2782,
	63, 2782,
	64, 2782,
	67, 2782,
	68, 2782,
	69, 2782,
	70, 2782,
	71, 2782,
	73, 2782,
	74, 2782,
	75, 2782,
	76, 2782,
	79, 2782,
	80, 2782,
	81, 2782,
	82, 2782,
	83, 2782,
	84, 2782,
	85, 2782,
	86, 2782,
	88, 2782,
	89, 2782,
	90, 2782,
	91, 2782,
	92, 2782,
	94, 2782,
	95, 2782,
	96, 2782,
	97, 2782,
	98, 2782,
	99, 2782,
	100, 2782,
	101, 2782,
	103, 2782,
	104, 2782,
	105, 2782,
	106, 2782,
	107, 2782,
	108, 2782,
	109, 2782,
	117, 2782,
	118, 2782,
	119, 2782,
	120, 2782,
	121, 2782,
	123, 2782,
	124, 2782,
	125, 2782,
	126, 2782,
	128, 2782,
	129, 2782,
	130, 2782,
	132, 2782,
	133, 2782,
	134, 2782,
	136, 2782,
	137, 2782,
	138, 2782,
	141, 2782,
	142, 2782,
	143, 2782,
	145, 2782,
	146, 2782,
	147, 2782,
	149, 2782,
	150, 2782,
	151, 2782,
	153, 2782,
	154, 2782,
	155, 2782,
	156, 2782,
	157, 2782,
	158, 2782,
	159, 2782,
	160, 2782,
	161, 2782,
	162, 2782,
	163, 2782,
	164, 2782,
	165, 2782,
	166, 2782,
	167, 2782,
	168, 2782,
	169, 2782,
	173, 2782,
	174, 2782,
	175, 2782,
	176, 2782,
	177, 2782,
	178, 2782,
	179, 2782,
	180, 2782,
	183, 2782,
	184, 2782,
	186, 2782,
	187, 2782,
	188, 2782,
	191, 2782,
	192, 2782,
	193, 2782,
	194, 2782,
	195, 2782,
	196, 2782,
	197, 2782,
	198, 2782,
	199, 2782,
	200, 2782,
	201, 2782,
	202, 2782,
	203, 2782,
	204, 2782,
	205, 2782,
	207, 2782,
	208, 2782,
	210, 2782,
	211, 2782,
	213, 2782,
	214, 2782,
	215, 2782,
	216, 2782,
	217, 2782,
	218, 2782,
	219, 2782,
	220, 2782,
	221, 2782,
	222, 2782,
	223, 2782,
	224, 2782,
	225, 2782,
	226, 2782,
	227, 2782,
	228, 2782,
	229, 2782,
	230, 2782,
	232, 2782,
	233, 2782,
	235, 2782,
	236, 2782,
	237, 2782,
	239, 2782,
	240, 2782,
	241, 2782,
	242, 2782,
	244, 2782,
	246, 2782,
	247, 2782,
	248, 2782,
	249, 2782,
	250, 2782,
	251, 2782,
	252, 2782,
	253, 2782,
	254, 2782,
	255, 2782,
	257, 2782,
	258, 2782,
	259, 2782,
	260, 2782,
	261, 2782,
	262, 2782,
	263, 2782,
	264, 2782,
	266, 2782,
	267, 2782,
	268, 2782,
	270, 2782,
	271, 2782,
	272, 2782,
	273, 2782,
	274, 2782,
	275, 2782,
	277, 2782,
	278, 2782,
	279, 2782,
	280, 2782,
	281, 2782,
	282, 2782,
	283, 2782,
	286, 2782,
	287, 2782,
	288, 2782,
	289, 2782,
	290, 2782,
	291, 2782,
	292, 2782,
	293, 2782,
	294, 2782,
	295, 2782,
	296, 2782,
	297, 2782,
	298, 2782,
	299, 2782,
	300, 2782,
	301, 2782,
	302, 2782,
	303, 2782,
	304, 2782,
	305, 2782,
	306, 2782,
	307, 2782,
	308, 2782,
	309, 2782,
	310, 2782,
	311, 2782,
	312, 2782,
	314, 2782,
	315, 2782,
	316, 2782,
	317, 2782,
	318, 2782,
	319, 2782,
	320, 2782,
	321, 2782,
	322, 2782,
	323, 2782,
	324, 2782,
	325, 2782,
	326, 2782,
	327, 2782,
	328, 2782,
	329, 2782,
	330, 2782,
	332, 2782,
	333, 2782,
	336, 2782,
	337, 2782,
	338, 2782,
	339, 2782,
	341, 2782,
	342, 2782,
	343, 2782,
	344, 2782,
	345, 2782,
	348, 2782,
	352, 2782,
	353, 2782,
	354, 2782,
	355, 2782,
	357, 2782,
	358, 2782,
	359, 2782,
	361, 2782,
	363, 2782,
	364, 2782,
	365, 2782,
	366, 2782,
	367, 2782,
	368, 2782,
	369, 2782,
	370, 2782,
	371, 2782,
	372, 2782,
	373, 2782,
	374, 2782,
	375, 2782,
	377, 2782,
	378, 2782,
	379, 2782,
	380, 2782,
	381, 2782,
	382, 2782,
	383, 2782,
	384, 2782,
	385, 2782,
	386, 2782,
	387, 2782,
	388, 2782,
	389, 2782,
	390, 2782,
	391, 2782,
	393, 2782,
	394, 2782,
	396, 2782,
	397, 2782,
	398, 2782,
	399, 2782,
	400, 2782,
	401, 2782,
	402, 2782,
	403, 2782,
	404, 2782,
	405, 2782,
	406, 2782,
	407, 2782,
	408, 2782,
	410, 2782,
	412, 2782,
	413, 2782,
	414, 2782,
	420, 2782,
	421, 2782,
	422, 2782,
	423, 2782,
	424, 2782,
	425, 2782,
	426, 2782,
	427, 2782,
	428, 2782,
	429, 2782,
	430, 2782,
	431, 2782,
	432, 2782,
	434, 2782,
	435, 2782,
	436, 2782,
	437, 2782,
	438, 2782,
	439, 2782,
	440, 2782,
	441, 2782,
	442, 2782,
	443, 2782,
	444, 2782,
	445, 2782,
	446, 2782,
	447, 2782,
	448, 2782,
	449, 2782,
	450, 2782,
	451, 2782,
	452, 2782,
	453, 2782,
	454, 2782,
	455, 2782,
	456, 2782,
	457, 2782,
	459, 2782,
	460, 2782,
	461, 2782,
	462, 2782,
	463, 2782,
	464, 2782,
	466, 2782,
	467, 2782,
	468, 2782,
	469, 2782,
	470, 2782,
	471, 2782,
	472, 2782,
	473, 2782,
	474, 2782,
	475, 2782,
	476, 2782,
	477, 2782,
	478, 2782,
	479, 2782,
	480, 2782,
	482, 2782,
	484, 2782,
	485, 2782,
	486, 2782,
	487, 2782,
	488, 2782,
	489, 2782,
	490, 2782,
	491, 2782,
	492, 2782,
	493, 2782,
	494, 2782,
	495, 2782,
	496, 2782,
	497, 2782,
	498, 2782,
	499, 2782,
	501, 2782,
	502, 2782,
	503, 2782,
	504, 2782,
	505, 2782,
	507, 2782,
	508, 2782,
	509, 2782,
	510, 2782,
	511, 2782,
	512, 2782,
	513, 2782,
	514, 2782,
	516, 2782,
	517, 2782,
	518, 2782,
	519, 2782,
	520, 2782,
	522, 2782,
	524, 2782,
	525, 2782,
	526, 2782,
	527, 2782,
	528, 2782,
	529, 2782,
	531, 2782,
	532, 2782,
	533, 2782,
	534, 2782,
	536, 2782,
	537, 2782,
	540, 2782,
	541, 2782,
	542, 2782,
	543, 2782,
	544, 2782,
	545, 2782,
	546, 2782,
	548, 2782,
	551, 2782,
	552, 2782,
	553, 2782,
	554, 2782,
	555, 2782,
	556, 2782,
	558, 2782,
	559, 2782,
	560, 2782,
	561, 2782,
	562, 2782,
	563, 2782,
	564, 2782,
	569, 2782,
	570, 2782,
	571, 2782,
	572, 2782,
	573, 2782,
	574, 2782,
	575, 2782,
	577, 2782,
	585, 2782,
	586, 2782,
	587, 2782,
	588, 2782,
	589, 2782,
	590, 2782,
	592, 2782,
	593, 2782,
	594, 2782,
	595, 2782,
	596, 2782,
	597, 2782,
	598, 2782,
	599, 2782,
	600, 2782,
	603, 2782,
	606, 2782,
	607, 2782,
	609, 2782,
	610, 2782,
	-2, 0,
	-1, 1651,
	190, 2662,
	521, 2662,
	587, 2662,
	607, 2662,
	-2, 0,
	-1, 1704,
	398, 897,
	464, 897,
	505, 897,
	526, 897,
	-2, 0,
	-1, 1715,
	1, 1413,
	604, 1413,
	606, 1413,
	608, 1413,
	-2, 0,
	-1, 1732,
	1, 892,
	604, 892,
	606, 892,
	608, 892,
	-2, 0,
	-1, 1733,
	1, 936,
	604, 936,
	606, 936,
	608, 936,
	-2, 0,
	-1, 1734,
	1, 944,
	604, 944,
	606, 944,
	608, 944,
	-2, 0,
	-1, 1737,
	1, 901,
	604, 901,
	606, 901,
	608, 901,
	-2, 0,
	-1, 1739,
	1, 907,
	604, 907,
	606, 907,
	608, 907,
	-2, 0,
	-1, 1742,
	1, 903,
	604, 903,
	606, 903,
	608, 903,
	-2, 0,
	-1, 1747,
	1, 917,
	604, 917,
	606, 917,
	608, 917,
	-2, 0,
	-1, 1778,
	1, 2645,
	604, 2645,
	606, 2645,
	607, 2645,
	608, 2645,
	-2, 0,
	-1, 1782,
	1, 991,
	604, 991,
	606, 991,
	608, 991,
	-2, 0,
	-1, 1799,
	1, 1463,
	608, 1463,
	-2, 1468,
	-1, 1802,
	172, 1620,
	185, 1620,
	276, 1620,
	346, 1620,
	-2, 1558,
	-1, 1902,
	152, 1579,
	172, 1579,
	185, 1579,
	243, 1579,
	276, 1579,
	346, 1579,
	356, 1579,
	538, 1579,
	-2, 2030,
	-1, 1963,
	606, 2205,
	-2, 0,
	-1, 1998,
	152, 1579,
	172, 1579,
	185, 1579,
	243, 1579,
	276, 1579,
	346, 1579,
	356, 1579,
	538, 1579,
	-2, 1712,
	-1, 2037,
	521, 2659,
	607, 2659,
	610, 2659,
	-2, 0,
	-1, 2054,
	605, 1853,
	-2, 1841,
	-1, 2086,
	190, 2659,
	607, 2659,
	610, 2659,
	-2, 0,
	-1, 2129,
	1, 703,
	608, 703,
	-2, 1468,
	-1, 2274,
	225, 262,
	-2, 2353,
	-1, 2275,
	225, 263,
	-2, 315,
	-1, 2384,
	1, 894,
	604, 894,
	606, 894,
	608, 894,
	-2, 0,
	-1, 2385,
	1, 938,
	604, 938,
	606, 938,
	608, 938,
	-2, 0,
	-1, 2386,
	1, 946,
	604, 946,
	606, 946,
	608, 946,
	-2, 0,
	-1, 2387,
	1, 993,
	604, 993,
	606, 993,
	608, 993,
	-2, 0,
	-1, 2428,
	1, 919,
	604, 919,
	606, 919,
	608, 919,
	-2, 0,
	-1, 2448,
	1, 976,
	604, 976,
	606, 976,
	608, 976,
	-2, 0,
	-1, 2495,
	443, 1647,
	444, 1647,
	-2, 1886,
	-1, 2526,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1906,
	-1, 2527,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1907,
	-1, 2528,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1908,
	-1, 2529,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1909,
	-1, 2530,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1910,
	-1, 2531,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1911,
	-1, 2532,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1912,
	-1, 2533,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1913,
	-1, 2545,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1925,
	-1, 2546,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1926,
	-1, 2547,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1927,
	-1, 2551,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1934,
	-1, 2557,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1938,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1946,
	-1, 2560,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1947,
	-1, 2561,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1948,
	-1, 2562,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1949,
	-1, 2736,
	5, 2357,
	190, 2216,
	605, 2354,
	-2, 2345,
	-1, 2737,
	190, 2217,
	-2, 2733,
	-1, 2738,
	190, 2218,
	-2, 2547,
	-1, 2739,
	190, 2219,
	-2, 2427,
	-1, 2740,
	190, 2220,
	-2, 2485,
	-1, 2741,
	190, 2221,
	-2, 2532,
	-1, 2742,
	190, 2222,
	-2, 2657,
	-1, 2743,
	190, 2223,
	-2, 2013,
	-1, 2814,
	1, 1713,
	2, 1713,
	106, 1713,
	152, 1713,
	172, 1713,
	185, 1713,
	191, 1713,
	209, 1713,
	212, 1713,
	239, 1713,
	243, 1713,
	254, 1713,
	272, 1713,
	276, 1713,
	315, 1713,
	346, 1713,
	350, 1713,
	356, 1713,
	433, 1713,
	437, 1713,
	538, 1713,
	549, 1713,
	566, 1713,
	567, 1713,
	568, 1713,
	578, 1713,
	604, 1713,
	606, 1713,
	608, 1713,
	610, 1713,
	-2, 1712,
	-1, 2827,
	605, 2326,
	-2, 2340,
	-1, 2829,
	1, 332,
	566, 332,
	-2, 1606,
	-1, 2859,
	605, 1852,
	-2, 1842,
	-1, 3050,
	1, 1316,
	428, 1275,
	466, 1275,
	581, 1275,
	604, 1316,
	606, 1316,
	608, 1316,
	-2, 1606,
	-1, 3225,
	351, 1650,
	-2, 2772,
	-1, 3226,
	351, 1651,
	-2, 2642,
	-1, 3230,
	443, 2282,
	444, 2282,
	-2, 2011,
	-1, 3231,
	443, 2286,
	444, 2286,
	-2, 2012,
	-1, 3232,
	443, 2283,
	444, 2283,
	-2, 2011,
	-1, 3233,
	443, 2287,
	444, 2287,
	-2, 2012,
	-1, 3246,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1936,
	-1, 3247,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1940,
	-1, 3253,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1942,
	-1, 3480,
	1, 698,
	604, 698,
	606, 698,
	608, 698,
	-2, 1468,
	-1, 3657,
	43, 2317,
	-2, 1063,
	-1, 3662,
	1, 1316,
	604, 1316,
	606, 1316,
	608, 1316,
	-2, 1606,
	-1, 3767,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1944,
	-1, 3774,
	248, 0,
	250, 0,
	336, 0,
	-2, 1963,
	-1, 3842,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1992,
	-1, 3843,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1993,
	-1, 3844,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1994,
	-1, 3848,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1998,
	-1, 3849,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1999,
	-1, 3850,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 2000,
	-1, 3898,
	605, 2327,
	-2, 2341,
	-1, 4092,
	607, 2889,
	-2, 1532,
	-1, 4147,
	248, 0,
	250, 0,
	336, 0,
	-2, 1964,
	-1, 4150,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1967,
	-1, 4151,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1969,
	-1, 4260,
	607, 2342,
	-2, 1351,
	-1, 4420,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1968,
	-1, 4421,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1970,
	-1, 4432,
	248, 0,
	-2, 2003,
	-1, 4620,
	248, 0,
	-2, 2004,
	-1, 4837,
	50, 0,
	222, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 2736,
}

const sqlPrivate = 57344

const sqlLast = 137078

var sqlAct = [...]int{
	274, 3646, 4774, 5024, 4773, 3384, 4898, 4953, 3122, 4882,
	4823, 4658, 3135, 4488, 4666, 4836, 4708, 2924, 4967, 4848,
	3645, 1141, 4730, 4805, 4130, 2098, 2271, 4849, 4590, 1541,
	4764, 4787, 4784, 4564, 4850, 4551, 2966, 4535, 2991, 3807,
	4381, 2348, 4470, 1264, 4907, 3908, 1275, 2178, 4624, 4376,
	4334, 4835, 4308, 4370, 3092, 4493, 1342, 3759, 3498, 2505,
	4441, 4409, 3679, 4084, 1568, 4076, 4361, 2360, 4363, 714,
	4354, 4693, 3501, 1095, 4573, 826, 1340, 4237, 3239, 2111,
	3559, 4257, 2925, 2358, 2574, 4004, 1347, 4386, 3630, 3673,
	3006, 1811, 4050, 4437, 4031, 2769, 2513, 2041, 4033, 3635,
	786, 1086, 1408, 826, 3147, 2356, 4256, 3712, 3710, 3504,
	3111, 2022, 3619, 2186, 3081, 3634, 2042, 3108, 3612, 3106,
	3611, 2841, 1152, 2506, 725, 3901, 3637, 3430, 3407, 901,
	4, 3399, 4129, 1501, 3367, 1669, 3137, 905, 4186, 2321,
	3437, 2004, 3142, 3123, 2198, 1973, 2214, 3057, 3388, 4883,
	1094, 182, 2258, 268, 2260, 3523, 3868, 3366, 3390, 2510,
	2807, 3223, 2652, 896, 3085, 1949, 4625, 1880, 2587, 1607,
	3141, 823, 1910, 821, 2259, 1345, 2254, 2235, 782, 1255,
	2242, 3093, 1389, 2809, 3023, 2965, 2166, 2806, 2109, 1145,
	1319, 2170, 1974, 1799, 2787, 1150, 2643, 267, 2156, 2766,
	2494, 2477, 2571, 2475, 2842, 1333, 1644, 3116, 1667, 759,
	2308, 1610, 827, 2948, 2949, 828, 4731, 974, 1376, 2646,
	2870, 2911, 1944, 2777, 3638, 1570, 1983, 1258, 832, 1993,
	1894, 191, 2732, 701, 1237, 2796, 2698, 723, 1990, 1812,
	2476, 1272, 2624, 2478, 767, 182, 111, 1747, 192, 1732,
	1195, 1813, 2334, 2268, 1642, 778, 832, 2654, 1635, 1536,
	2307, 1330, 1270, 4899, 4954, 2499, 1509, 1126, 718, 44,
	43, 41, 835, 715, 922, 727, 32, 30, 28, 1254,
	1818, 1235, 1798, 816, 1260, 3276, 1547, 995, 742, 3882,
	877, 3883, 5035, 3270, 2100, 2100, 2786, 2100, 878, 5027,
	835, 2100, 3386, 3698, 5016, 3909, 4845, 5015, 2786, 1826,
	1827, 2786, 4987, 4985, 2100, 4927, 4492, 4492, 1143, 2280,
	2100, 4884, 4461, 4455, 4874, 4885, 163, 1712, 2786, 4872,
	4458, 4869, 1857, 2786, 73, 4870, 46, 45, 4866, 1829,
	4833, 4832, 4867, 1090, 2280, 2280, 3688, 2121, 4831, 4821,
	3689, 74, 3152, 4492, 158, 4819, 4814, 4809, 4808, 4492,
	4576, 4492, 4492, 3465, 1090, 1882, 4782, 79, 1738, 3698,
	4492, 4750, 1148, 1678, 1828, 2850, 4743, 4742, 67, 4735,
	2786, 2786, 4707, 2280, 4704, 48, 2280, 160, 4492, 4687,
	4622, 4604, 4566, 4324, 2850, 4113, 4567, 4511, 4510, 1252,
	4499, 2280, 2280, 4213, 2280, 47, 4498, 88, 1080, 4491,
	4492, 4448, 2118, 4492, 1071, 2280, 1238, 1238, 1385, 4422,
	4397, 4394, 897, 2850, 3152, 3698, 4303, 3447, 4283, 4149,
	2786, 1070, 2786, 2850, 50, 68, 2872, 4100, 4094, 1385,
	1091, 3705, 3705, 51, 3462, 2121, 2280, 2779, 57, 73,
	2357, 900, 899, 161, 4047, 3893, 3891, 1289, 4048, 3894,
	3892, 49, 2121, 110, 3875, 1660, 74, 1297, 2786, 94,
	107, 3872, 3791, 3787, 3238, 2846, 2280, 2786, 1085, 1147,
	3704, 1834, 79, 3383, 3705, 3378, 3377, 2786, 3328, 2786,
	2786, 3326, 3329, 3318, 3316, 3327, 2786, 3319, 2786, 3337,
	3338, 3287, 3355, 3356, 3357, 2786, 3285, 4751, 4626, 3151,
	3133, 52, 3286, 3152, 2344, 1239, 2118, 2121, 4617, 3132,
	2895, 4145, 88, 2344, 2786, 2121, 4605, 238, 2849, 95,
	1856, 1858, 2850, 2839, 2831, 2785, 2343, 2786, 2280, 2786,
	2344, 1241, 4576, 1242, 3152, 1548, 1290, 3872, 2778, 4374,
	4324, 1549, 2118, 4284, 4113, 4049, 1549, 2998, 2191, 2910,
	2135, 2099, 2115, 903, 3087, 1290, 2279, 3016, 2908, 1969,
	1535, 3983, 3762, 3735, 3352, 240, 49, 1991, 110, 2247,
	1714, 3690, 2823, 2822, 94, 107, 2821, 2820, 1849, 2819,
	1243, 238, 1240, 1079, 1078, 3337, 3338, 2786, 3355, 3356,
	3357, 3691, 3694, 1077, 1076, 1075, 1074, 1073, 1069, 1124,
	1068, 1067, 1066, 1267, 1065, 1064, 4204, 4144, 3275, 3196,
	1540, 1063, 1062, 239, 1061, 2600, 2601, 2602, 2619, 2620,
	2621, 1060, 1059, 1058, 1057, 1826, 1827, 232, 1056, 240,
	1055, 1054, 1826, 1827, 95, 2622, 233, 1053, 1549, 1052,
	1034, 972, 971, 970, 969, 968, 967, 966, 1857, 965,
	2101, 2101, 964, 2101, 1879, 1829, 963, 2101, 962, 961,
	3352, 3343, 1829, 960, 193, 959, 958, 99, 1882, 957,
	2101, 956, 955, 954, 953, 952, 2101, 239, 1561, 951,
	950, 1882, 949, 948, 947, 53, 946, 2612, 945, 944,
	1828, 943, 942, 941, 940, 939, 2608, 1828, 938, 2649,
	56, 937, 926, 925, 924, 59, 920, 919, 912, 911,
	1266, 910, 895, 894, 4161, 69, 2118, 851, 1549, 850,
	849, 848, 58, 190, 102, 839, 3359, 106, 193, 838,
	4859, 54, 2118, 1850, 837, 162, 836, 802, 2681, 793,
	2118, 792, 791, 55, 773, 262, 261, 260, 259, 258,
	1352, 1150, 257, 238, 256, 255, 254, 3343, 4388, 253,
	3688, 62, 252, 251, 250, 249, 153, 248, 3353, 247,
	246, 3101, 245, 1290, 2613, 2614, 2615, 2616, 1150, 1150,
	1150, 159, 99, 244, 2607, 243, 242, 241, 3918, 3887,
	3706, 1881, 2650, 3433, 3298, 3281, 1411, 1834, 3272, 3176,
	1150, 240, 1555, 3381, 1834, 3067, 3119, 1352, 2854, 2828,
	2813, 2467, 2164, 1952, 238, 2679, 2665, 2663, 2120, 238,
	1951, 2017, 3359, 1921, 1912, 1793, 157, 1919, 4060, 1543,
	2121, 2882, 1150, 2099, 1150, 1397, 1150, 2118, 190, 102,
	1268, 194, 106, 1573, 1879, 3382, 1856, 1858, 1955, 239,
	2115, 1393, 1394, 1395, 2118, 1380, 2470, 2778, 2617, 2618,
	1274, 4858, 240, 232, 3353, 4855, 1994, 240, 238, 1352,
	4834, 1540, 233, 2651, 4818, 2648, 904, 1290, 1519, 4715,
	1514, 153, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 1573,
	1952, 2610, 2420, 4629, 1560, 1825, 1573, 1951, 4614, 4436,
	193, 5030, 4608, 3, 1849, 1150, 4395, 1150, 4606, 4373,
	239, 238, 1573, 4219, 4184, 239, 240, 4483, 4183, 4177,
	1150, 1740, 1150, 3354, 232, 1950, 1912, 3337, 3338, 232,
	4176, 4175, 4168, 233, 1324, 1327, 4167, 4165, 233, 4160,
	1879, 157, 4157, 4156, 4046, 3922, 3921, 1616, 1619, 1372,
	3920, 3897, 1337, 3337, 3338, 3863, 194, 3337, 3338, 240,
	3862, 193, 1539, 3861, 239, 1374, 193, 4061, 4390, 3783,
	1573, 3778, 3428, 832, 1404, 3374, 1498, 1503, 232, 3365,
	1879, 1524, 1826, 1827, 1913, 3336, 1911, 233, 3333, 3332,
	1150, 238, 3330, 1150, 3325, 3324, 3323, 3320, 3317, 3297,
	3280, 3273, 3271, 3134, 1506, 1857, 2814, 239, 3337, 3338,
	2636, 1825, 1829, 1251, 2324, 898, 2287, 835, 1554, 3354,
	2285, 232, 3103, 1366, 1824, 4976, 4975, 94, 4897, 4895,
	233, 1914, 1538, 2653, 1276, 1537, 3809, 4775, 1882, 240,
	182, 182, 1605, 4692, 3337, 3338, 2611, 1828, 4678, 4674,
	4673, 4672, 4652, 1647, 1649, 4651, 4649, 1848, 193, 1850,
	4628, 1683, 4627, 3349, 3350, 3351, 1845, 3981, 3337, 3338,
	3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344, 3345, 1622,
	4602, 2577, 4588, 1826, 1827, 4061, 4585, 239, 2583, 4584,
	4577, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 3343,
	4562, 232, 4561, 4507, 1881, 4478, 1857, 4434, 4417, 4416,
	233, 4357, 1380, 1829, 1645, 1380, 3379, 1881, 4350, 3352,
	4347, 4325, 4143, 4203, 1150, 3343, 4182, 4114, 3969, 3343,
	1150, 3968, 1682, 3951, 238, 1091, 3950, 238, 193, 1882,
	3948, 3878, 3866, 3773, 1851, 1852, 1853, 1854, 1828, 2647,
	1899, 3707, 3699, 3665, 1834, 3578, 3534, 3503, 3456, 3349,
	3350, 3351, 1803, 1638, 3302, 3301, 3348, 3346, 3347, 3339,
	3340, 3341, 3342, 3344, 3345, 3296, 3454, 3262, 1664, 1358,
	3343, 2863, 240, 1688, 3080, 240, 2597, 2598, 2599, 2623,
	2609, 2603, 1659, 2605, 2606, 2604, 2591, 2592, 2593, 2594,
	2595, 2596, 1958, 1856, 1858, 1797, 3353, 1677, 3425, 1830,
	1831, 1832, 1833, 1835, 1836, 1957, 3343, 1956, 1832, 1833,
	1835, 1836, 1953, 4389, 1945, 1943, 4456, 3102, 1843, 1844,
	239, 2861, 3353, 239, 2860, 1150, 1150, 1150, 2825, 2818,
	3343, 1150, 2784, 2661, 232, 1898, 2016, 232, 1272, 1972,
	1272, 1967, 1966, 233, 1965, 1834, 233, 1964, 238, 1705,
	1963, 1849, 1962, 1901, 1961, 1411, 1960, 1959, 1940, 1270,
	1939, 1270, 1938, 1937, 1741, 1971, 1150, 1936, 1935, 826,
	1352, 193, 1879, 1934, 3118, 2059, 826, 3353, 1352, 1804,
	1352, 1933, 2026, 1932, 1931, 1930, 2020, 1929, 1928, 1927,
	1926, 1925, 1914, 1900, 1856, 1858, 240, 1897, 1879, 1892,
	1365, 1294, 1285, 4631, 1800, 4630, 1071, 1808, 4360, 4215,
	1807, 238, 1756, 3353, 4153, 3917, 3890, 3881, 3284, 2816,
	1641, 4217, 39, 1070, 153, 3916, 1980, 1879, 1913, 2012,
	2105, 2852, 2680, 2107, 3452, 2028, 1802, 3353, 238, 2112,
	1352, 2027, 1895, 2114, 239, 1954, 1150, 3537, 2117, 1821,
	1822, 3354, 1849, 1879, 4973, 4286, 2038, 1392, 232, 240,
	1091, 2032, 4966, 1636, 2088, 2992, 2090, 233, 3337, 3338,
	1150, 1977, 1978, 4675, 1826, 1827, 4578, 3354, 1411, 2155,
	1390, 4569, 4568, 1855, 1826, 1827, 240, 2180, 4393, 1879,
	4851, 2155, 182, 1946, 1947, 193, 4328, 2053, 2001, 4574,
	1238, 4327, 4326, 4285, 1829, 2153, 1850, 239, 4206, 2678,
	2664, 2662, 4120, 1879, 1829, 4119, 4118, 1920, 1093, 3337,
	3338, 232, 832, 1391, 4117, 4116, 2123, 2155, 1879, 832,
	233, 4115, 3354, 1380, 239, 3885, 3884, 3709, 4923, 1828,
	2033, 2127, 3760, 2162, 2126, 3708, 3701, 2082, 232, 1828,
	2025, 4921, 3700, 1385, 2649, 1385, 1935, 233, 193, 1994,
	1935, 4064, 3995, 2021, 1881, 1952, 835, 1999, 3354, 4609,
	2002, 1385, 1951, 835, 1992, 4607, 2147, 2146, 3322, 2970,
	2155, 2157, 3321, 1795, 3244, 193, 1091, 2952, 1704, 1388,
	3966, 3505, 3354, 2141, 2103, 1050, 1923, 2244, 1970, 3346,
	3347, 3339, 3340, 3341, 3342, 3344, 3345, 1850, 1713, 4943,
	4482, 2011, 2010, 2009, 1573, 1573, 2349, 4565, 2007, 2006,
	2005, 1757, 1996, 3568, 1411, 2056, 3347, 3339, 3340, 3341,
	3342, 3344, 3345, 3341, 3342, 3344, 3345, 2130, 4438, 2039,
	3648, 1051, 3647, 2129, 4880, 4862, 1834, 2650, 4847, 4371,
	1846, 1842, 2225, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 4054, 2261, 2376, 1881, 3620, 3148, 1714, 3386,
	2262, 2325, 1640, 4068, 4043, 4001, 3992, 3974, 238, 3348,
	3346, 3347, 3339, 3340, 3341, 3342, 3344, 3345, 3732, 3478,
	3021, 3343, 2354, 2047, 3811, 2644, 3290, 2859, 4856, 2150,
	2221, 1968, 2229, 2125, 1948, 3010, 1250, 3628, 2239, 2318,
	1267, 1615, 1267, 1531, 1361, 3348, 3346, 3347, 3339, 3340,
	3341, 3342, 3344, 3345, 238, 238, 240, 1323, 2651, 1573,
	2648, 1573, 4871, 1573, 2158, 4868, 2148, 2950, 2994, 2231,
	3684, 4502, 3339, 3340, 3341, 3342, 3344, 3345, 4474, 2272,
	2277, 1573, 1573, 2185, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 2197, 1573, 4857, 1386, 3942, 3013, 832,
	4667, 4377, 240, 240, 239, 4781, 1573, 4645, 1573, 1573,
	1573, 3508, 1692, 3961, 2264, 2265, 3008, 3115, 232, 3603,
	4925, 2266, 4924, 4958, 2191, 4505, 1030, 233, 3175, 2234,
	2234, 2234, 826, 2219, 2232, 2224, 4501, 4480, 3754, 1755,
	3482, 1392, 1641, 835, 2142, 4531, 2152, 1266, 2375, 1266,
	239, 239, 3059, 2314, 1150, 193, 4904, 2485, 1538, 1879,
	1392, 1537, 4014, 4273, 232, 232, 1582, 1048, 1046, 2896,
	5026, 4682, 1533, 233, 233, 2319, 1044, 1042, 4524, 4513,
	2218, 2215, 1039, 4317, 2151, 2230, 2434, 2331, 3536, 1150,
	2432, 2238, 3453, 4316, 2914, 4012, 2189, 4011, 4271, 4003,
	2914, 193, 193, 2352, 1879, 2278, 4268, 1391, 3989, 2912,
	1754, 1590, 2380, 3988, 3986, 2912, 1382, 2483, 2653, 3985,
	3973, 3937, 3936, 3609, 3608, 1150, 1391, 1150, 3570, 4013,
	3446, 2339, 2469, 3295, 1150, 890, 3294, 2059, 2059, 1411,
	3293, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1268, 1150, 1268,
	1150, 1150, 1150, 1150, 1645, 832, 1645, 2341, 2300, 2299,
	2362, 3292, 2328, 1375, 4503, 1690, 2337, 1591, 2333, 1387,
	2481, 4475, 2368, 2405, 238, 1091, 1150, 1091, 1089, 765,
	1150, 1150, 1753, 2345, 2487, 2346, 2474, 1366, 1150, 1638,
	3566, 2336, 1150, 2336, 1150, 1150, 2569, 2853, 3505, 835,
	3248, 4959, 1411, 765, 2647, 3019, 2262, 2349, 1150, 1150,
	1150, 1150, 891, 3018, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 240, 2511, 2512, 2367, 3015, 2567, 1383, 2053,
	2053, 2233, 2233, 2233, 4905, 2384, 3004, 1384, 2484, 2974,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 2395,
	4287, 2996, 2485, 1150, 2986, 2985, 2980, 3345, 1830, 1831,
	1832, 1833, 1835, 1836, 1640, 1272, 2967, 2968, 2927, 1088,
	239, 2979, 1411, 1836, 2978, 2625, 2626, 2428, 2967, 2968,
	2957, 1272, 2956, 4267, 232, 2918, 1270, 1386, 1706, 2625,
	2641, 2840, 1386, 233, 2558, 2498, 1801, 1150, 1411, 4269,
	3484, 2694, 1270, 3339, 3340, 3341, 3342, 3344, 3345, 2693,
	2515, 2482, 2483, 2276, 2967, 2968, 2689, 2644, 1534, 3112,
	1736, 193, 2298, 4415, 2473, 2190, 2471, 2472, 2460, 4224,
	1071, 2486, 4229, 1071, 1071, 2735, 2735, 2749, 2448, 2625,
	2445, 2479, 2770, 2772, 2867, 2844, 2589, 2502, 2776, 3945,
	2503, 2504, 3567, 1036, 2187, 1794, 1685, 2056, 2056, 1628,
	2954, 1627, 2801, 4540, 1586, 3733, 2640, 2159, 2160, 2563,
	713, 1626, 2843, 1625, 1714, 1309, 3337, 3338, 2457, 3355,
	3356, 3357, 1090, 2465, 1357, 2930, 2385, 1714, 2183, 2372,
	1791, 2564, 2826, 2446, 1599, 4228, 708, 2565, 3777, 4961,
	4924, 2570, 1352, 1352, 2585, 2903, 2392, 1382, 764, 2877,
	2227, 4265, 1382, 1385, 4660, 2881, 3009, 2188, 3155, 800,
	2447, 2866, 1604, 2793, 1091, 2047, 2047, 1735, 2573, 2892,
	1766, 2573, 764, 1238, 1091, 3191, 2638, 2869, 1091, 2001,
	2941, 1770, 2459, 2216, 1752, 1411, 2184, 3012, 2386, 2438,
	2847, 3352, 2830, 4252, 1350, 2199, 2888, 2426, 2792, 2581,
	3221, 4989, 1702, 2484, 3481, 1546, 2579, 1553, 3236, 1559,
	2815, 182, 2885, 2744, 1686, 2731, 2389, 1736, 2203, 3011,
	2059, 2782, 2783, 2691, 2774, 2865, 2761, 4245, 2692, 2891,
	1387, 2695, 2794, 2696, 2697, 1387, 3958, 3007, 1380, 4962,
	2800, 2012, 2805, 2798, 2799, 2811, 2812, 3970, 1999, 2191,
	1806, 3742, 4270, 2913, 2383, 893, 892, 766, 2222, 1954,
	2393, 3259, 1364, 3741, 3193, 4960, 4853, 1091, 1411, 1691,
	2940, 2338, 1982, 798, 2899, 2200, 2482, 2653, 1658, 4662,
	1663, 766, 4246, 1733, 1352, 2893, 3800, 3202, 3343, 1383,
	4023, 2919, 3257, 1676, 1383, 1681, 2901, 2862, 1384, 2917,
	1040, 1040, 2217, 1384, 1087, 1150, 1150, 4637, 1150, 1040,
	1041, 1946, 1947, 2876, 2887, 1040, 4315, 2879, 2433, 2880,
	2917, 935, 2431, 2855, 1735, 3797, 3553, 2566, 2929, 2894,
	2871, 3987, 826, 2902, 1352, 4414, 2960, 2568, 2916, 2884,
	3984, 2886, 2053, 3235, 3925, 1734, 3005, 4970, 4024, 4964,
	3912, 2555, 4541, 3359, 2900, 3956, 3084, 1986, 4263, 3615,
	1739, 3607, 2959, 2975, 4539, 1573, 3545, 3054, 3564, 3014,
	4537, 2977, 2953, 2897, 4266, 2955, 3126, 1267, 1573, 888,
	1573, 887, 2944, 1611, 3554, 2204, 1749, 2191, 3099, 3143,
	2456, 4022, 4936, 1267, 2466, 3353, 2958, 1573, 3062, 4945,
	2211, 3205, 4944, 3064, 2838, 1989, 3798, 2284, 2283, 2976,
	2969, 2971, 2972, 2973, 2932, 2935, 2922, 4536, 4991, 2984,
	1984, 1352, 1280, 1352, 3546, 3055, 3020, 3552, 3156, 3157,
	1767, 3051, 3052, 4912, 3254, 4135, 1609, 1282, 1987, 3163,
	3164, 3165, 4134, 4854, 4538, 1150, 2653, 3228, 3229, 3736,
	3616, 2205, 2206, 832, 2458, 4747, 840, 2983, 2212, 2189,
	3682, 3681, 3255, 2988, 1277, 2995, 3260, 3544, 3053, 3971,
	2056, 1879, 3002, 3199, 1385, 2928, 2201, 2100, 3095, 1385,
	3179, 1985, 847, 2990, 1266, 832, 709, 1588, 3153, 4241,
	2915, 1585, 799, 3173, 3158, 4242, 3159, 835, 2245, 3060,
	1266, 2210, 1308, 3089, 2194, 4247, 3613, 3177, 3140, 3178,
	1283, 1150, 1538, 3149, 182, 3065, 3401, 1150, 1150, 4264,
	4668, 2202, 3492, 2553, 2213, 2751, 2556, 3130, 2257, 835,
	4759, 3078, 2391, 4825, 2226, 4826, 3204, 4465, 2047, 2993,
	3088, 801, 2982, 3681, 3128, 797, 4963, 4244, 4852, 4661,
	3354, 2228, 3581, 2981, 4689, 1611, 3146, 3207, 3145, 3209,
	4036, 1764, 2195, 3520, 4248, 3121, 2653, 3201, 710, 763,
	4034, 3131, 1768, 1150, 1150, 3483, 2552, 1715, 1281, 1150,
	2914, 927, 2223, 1532, 4890, 1292, 2256, 2225, 3150, 2228,
	1645, 3524, 1150, 1150, 4891, 2933, 4344, 1037, 1150, 1150,
	1687, 3129, 4968, 1988, 1150, 2193, 2171, 928, 1082, 1941,
	1022, 2172, 3110, 913, 1268, 3450, 4911, 711, 3172, 712,
	3519, 2226, 4411, 2245, 2008, 2220, 3060, 3600, 3250, 3180,
	1268, 2572, 4131, 3182, 1084, 3184, 2427, 3186, 2181, 918,
	4427, 4934, 4792, 2207, 4745, 3526, 4297, 1982, 4036, 1150,
	1150, 1150, 3256, 4038, 2580, 1150, 1765, 2227, 4034, 732,
	1891, 3251, 3258, 3300, 2797, 1150, 2245, 1769, 1701, 1703,
	3216, 4992, 2810, 3203, 4978, 1090, 3227, 3813, 3957, 2829,
	1083, 1986, 1150, 2388, 4037, 3283, 3210, 4359, 4746, 3212,
	3349, 3350, 3351, 1108, 4243, 3218, 3217, 3348, 3346, 3347,
	3339, 3340, 3341, 3342, 3344, 3345, 841, 842, 936, 2498,
	3525, 3222, 3237, 4969, 2635, 3400, 1805, 2248, 2190, 2208,
	2241, 2382, 2255, 4125, 4453, 2173, 1023, 4320, 1363, 1989,
	3913, 3493, 1986, 1298, 4253, 4254, 3614, 1296, 3170, 4136,
	2224, 4038, 3756, 2177, 2795, 3278, 3279, 2240, 3274, 4971,
	3282, 3219, 1720, 4709, 3181, 4797, 3183, 4729, 3185, 4587,
	3187, 3188, 1987, 4410, 4319, 4318, 4082, 3669, 3464, 4702,
	4364, 2837, 4037, 2554, 1150, 1150, 1150, 1150, 3249, 2306,
	1989, 2236, 4059, 3197, 1150, 1150, 1150, 2989, 1979, 1150,
	4365, 1295, 1288, 700, 1816, 1984, 4132, 1278, 1815, 1150,
	1272, 1411, 2501, 2192, 2143, 1150, 4500, 1150, 3393, 3394,
	2188, 1810, 1815, 1987, 4997, 4596, 1272, 4345, 2174, 2179,
	4910, 1270, 4694, 3438, 3903, 1689, 3499, 1022, 4644, 3852,
	4180, 929, 930, 2140, 1411, 4695, 2249, 1270, 1022, 2237,
	4083, 3409, 4889, 2101, 1091, 4710, 1272, 4007, 3990, 1411,
	1279, 1084, 844, 843, 3943, 3941, 1985, 3670, 4035, 3289,
	3661, 1352, 1084, 914, 915, 4032, 3495, 1270, 3100, 4696,
	3094, 2059, 3082, 1028, 1027, 1411, 3418, 2332, 3904, 2326,
	2320, 2312, 2292, 2291, 3376, 1352, 4581, 3796, 1579, 3431,
	1300, 772, 3867, 1352, 2934, 4765, 3757, 3933, 2491, 2961,
	3395, 2175, 1814, 4412, 2917, 3905, 1566, 3902, 2138, 4732,
	1815, 2439, 2136, 4085, 4382, 1150, 1814, 845, 846, 3079,
	1024, 1311, 3468, 4557, 4555, 3470, 3471, 1988, 4477, 1150,
	3474, 4137, 3475, 2180, 3476, 4698, 3511, 3410, 3507, 1352,
	3506, 3242, 3220, 1023, 2373, 2059, 4035, 3445, 3432, 3488,
	3489, 2181, 2139, 2804, 1023, 3880, 3398, 3397, 4697, 1653,
	1743, 1742, 1150, 2365, 3405, 2355, 2289, 2180, 1099, 1737,
	3509, 3460, 1816, 3513, 3403, 1668, 4699, 1352, 1988, 3907,
	3427, 2836, 3472, 3371, 3372, 3373, 1816, 3451, 3479, 3408,
	3415, 3387, 2835, 2053, 3440, 3441, 3442, 3443, 3424, 1352,
	1380, 1352, 3485, 2834, 3436, 3487, 2026, 4362, 3404, 3402,
	2833, 1526, 3417, 3416, 1814, 4042, 4138, 1150, 1150, 3419,
	3420, 2244, 2832, 3414, 3853, 1411, 3510, 4996, 2244, 3515,
	931, 932, 3517, 1696, 3854, 4181, 1352, 2492, 1891, 3086,
	1352, 3496, 1634, 1620, 1025, 4711, 3584, 3491, 3586, 1088,
	1632, 3590, 3569, 4489, 3539, 3596, 1621, 934, 2252, 4655,
	4335, 3502, 916, 917, 3422, 2938, 3423, 2053, 1573, 1081,
	4055, 1026, 3949, 1612, 2788, 2962, 2963, 2330, 3623, 4559,
	4931, 1352, 1573, 3562, 1573, 4463, 4580, 3541, 1411, 3469,
	1028, 1027, 3473, 4462, 3058, 826, 1573, 3934, 3463, 3938,
	1721, 1028, 1027, 3448, 3154, 2421, 3063, 1573, 2791, 3555,
	3480, 3906, 3061, 2359, 4771, 3579, 2250, 3543, 3633, 1352,
	2261, 2056, 3486, 1029, 1695, 4656, 4485, 4484, 3582, 4778,
	3411, 3412, 3413, 3557, 2176, 4472, 1272, 1024, 3457, 3458,
	3677, 3459, 4762, 4187, 3869, 2660, 3591, 3653, 1024, 2790,
	3597, 3527, 4558, 4454, 2789, 3535, 3143, 1270, 3439, 2251,
	4490, 1573, 3660, 4210, 1787, 3143, 2452, 3617, 4799, 4935,
	4933, 3675, 1267, 1573, 3548, 1573, 3549, 3551, 4873, 4685,
	3550, 771, 4473, 4543, 4676, 4460, 4433, 4221, 1267, 2047,
	4179, 4041, 3368, 3772, 3730, 2056, 3697, 3729, 3571, 3574,
	1789, 3461, 3668, 3580, 3686, 4772, 1786, 1784, 3331, 1761,
	1759, 3261, 3565, 3593, 1731, 1729, 4657, 3618, 1267, 3621,
	2984, 3083, 1411, 3605, 3734, 1411, 1727, 3599, 4700, 1725,
	2430, 3003, 1723, 1717, 4701, 1711, 1709, 2997, 1630, 2951,
	2864, 2461, 2350, 2019, 2015, 3606, 1790, 1671, 832, 3744,
	3671, 2397, 2270, 3369, 3752, 3751, 3610, 1810, 2959, 1150,
	3195, 1025, 3194, 2047, 3939, 1150, 1150, 3161, 3625, 1150,
	1150, 1150, 1025, 1150, 3656, 3604, 3725, 266, 3727, 1266,
	3658, 2480, 1150, 2059, 3678, 1633, 3657, 1748, 1026, 2400,
	2311, 1150, 835, 1631, 2290, 1266, 1150, 2089, 2087, 1026,
	933, 1924, 1411, 182, 182, 3750, 1684, 1603, 2659, 3683,
	4846, 1150, 4298, 3994, 3993, 4302, 3695, 3696, 3692, 1411,
	4282, 4761, 4380, 4307, 3685, 1266, 4295, 3749, 4234, 2059,
	2059, 1150, 1150, 1038, 1150, 1150, 1150, 4233, 4081, 3676,
	1029, 3583, 4072, 4010, 3991, 3964, 3962, 3940, 3664, 2454,
	3659, 1029, 1150, 2031, 2453, 3649, 1150, 4210, 2059, 2059,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	3775, 1150, 3758, 3728, 3825, 1091, 3826, 3113, 1788, 1150,
	1150, 2059, 3105, 3098, 1785, 1783, 1150, 1760, 1758, 3785,
	3786, 3090, 1730, 1728, 3755, 2053, 3076, 1150, 3075, 1268,
	3056, 2883, 2878, 2429, 1726, 2288, 2286, 1724, 1272, 1272,
	1722, 1716, 1150, 1710, 1708, 1268, 1629, 2263, 3747, 2246,
	2209, 2196, 2182, 2122, 2396, 2269, 2119, 3753, 2116, 1270,
	1270, 2113, 2108, 2106, 2102, 2511, 3816, 272, 2093, 4908,
	4375, 2053, 2053, 3793, 1411, 1268, 3674, 4903, 4830, 3780,
	3782, 3899, 1819, 1247, 3594, 4925, 3240, 1352, 1352, 2255,
	4364, 2144, 2132, 2133, 2511, 3831, 3799, 3801, 3802, 3792,
	2053, 2053, 1352, 1352, 3886, 826, 1352, 3808, 3815, 1248,
	4365, 3864, 4654, 2464, 1043, 1045, 1047, 3213, 3211, 3049,
	4811, 4723, 4396, 4314, 4225, 1150, 3823, 3860, 1267, 3144,
	3824, 2163, 3828, 2053, 3871, 3931, 1584, 3830, 4598, 3932,
	2914, 3856, 2914, 2939, 1150, 4591, 4093, 2191, 2387, 3865,
	3738, 2329, 3739, 2056, 3740, 2912, 1332, 2936, 1331, 2462,
	1781, 1782, 2424, 2419, 4810, 3857, 2394, 4309, 4274, 1707,
	182, 4616, 2942, 3910, 3911, 1150, 1150, 1826, 1827, 3963,
	4487, 3965, 3241, 1826, 1827, 4188, 4166, 3522, 3923, 3924,
	3873, 3874, 3930, 1820, 3803, 2943, 3876, 3877, 2964, 2056,
	2056, 1823, 1359, 3595, 2943, 2463, 1299, 1829, 4928, 4919,
	263, 1150, 1150, 4881, 3074, 2131, 4006, 3822, 4069, 1150,
	1249, 2047, 2313, 3888, 3944, 1370, 3010, 3008, 2056, 2056,
	3017, 4770, 1158, 3001, 2947, 1266, 1332, 2999, 4005, 2945,
	4752, 1573, 1828, 1332, 1573, 4722, 3000, 2946, 1828, 1352,
	4716, 3889, 4009, 4653, 4582, 4550, 4464, 697, 832, 4079,
	4071, 2056, 1112, 4058, 3896, 3663, 3068, 2047, 2047, 3071,
	3975, 3073, 3120, 2775, 2059, 2128, 3926, 3979, 270, 270,
	270, 2040, 703, 704, 4965, 719, 703, 719, 730, 4486,
	3996, 770, 3980, 3982, 2987, 790, 2047, 2047, 1530, 1529,
	796, 4008, 835, 3449, 4995, 3337, 3338, 270, 1826, 1827,
	4801, 4718, 4028, 4078, 4002, 4802, 1573, 3117, 3967, 3972,
	3117, 1694, 1150, 4025, 4026, 1540, 2347, 1693, 909, 2047,
	1272, 1150, 4158, 4095, 2655, 270, 2959, 4051, 2906, 2907,
	3915, 1573, 1573, 1573, 2361, 2363, 3126, 2906, 1573, 1573,
	1573, 1270, 4102, 4086, 3919, 2904, 4801, 2366, 2690, 4019,
	4583, 4802, 4525, 3143, 4030, 1268, 4311, 4039, 4306, 2374,
	1573, 2377, 2378, 2379, 4065, 4040, 1411, 2904, 2905, 1409,
	4087, 4938, 4305, 4090, 1763, 4106, 4154, 1762, 3914, 4021,
	3502, 3804, 3588, 4018, 3585, 1918, 2053, 1917, 3215, 2468,
	4053, 4057, 3189, 1411, 4029, 4982, 1150, 1150, 4044, 4946,
	1267, 1267, 1150, 1150, 2059, 4110, 4816, 1150, 1150, 4089,
	1150, 4756, 4755, 4754, 4684, 1150, 4683, 4633, 1230, 4553,
	4517, 4457, 4451, 4070, 4066, 4352, 1150, 4332, 4272, 4216,
	4109, 4099, 4045, 3960, 4075, 3952, 3667, 1904, 3666, 3516,
	3467, 1909, 1150, 3200, 3192, 4073, 3169, 3168, 3167, 3166,
	3104, 3077, 2937, 2874, 2868, 703, 703, 4091, 2857, 2856,
	4121, 4088, 4096, 270, 4122, 4101, 2845, 2584, 4097, 2455,
	4139, 2425, 4107, 2418, 2417, 2416, 2415, 2414, 4108, 2327,
	2301, 2297, 2296, 4140, 2295, 2294, 2293, 2096, 2095, 2094,
	2092, 2030, 1780, 1779, 1718, 4123, 1598, 1597, 1596, 1595,
	1594, 4148, 1593, 1272, 1592, 4152, 1587, 1266, 1266, 1583,
	1581, 1272, 1580, 4133, 2056, 1411, 1411, 1523, 1411, 1522,
	1521, 1402, 1401, 1400, 1270, 1272, 2053, 1399, 1398, 1362,
	1318, 1317, 1270, 1316, 1315, 1314, 1573, 1573, 4193, 1313,
	3722, 1312, 1310, 1305, 1304, 1303, 1270, 1302, 1301, 1411,
	902, 8, 2134, 3720, 1049, 1035, 4659, 4251, 4250, 4249,
	2451, 93, 1589, 3713, 864, 87, 2253, 3959, 3431, 1001,
	4798, 4688, 1564, 872, 4780, 4067, 3518, 3022, 2399, 1272,
	1719, 1272, 2047, 2401, 4226, 4227, 4211, 4212, 3426, 2817,
	4744, 4162, 3299, 4178, 4623, 4426, 2658, 1922, 3380, 4214,
	1270, 89, 1270, 1134, 1352, 4196, 4198, 1180, 4343, 4342,
	4275, 4262, 4220, 4235, 1411, 4223, 1352, 3946, 3636, 1352,
	4339, 4338, 4258, 2044, 4258, 2046, 4185, 1098, 4277, 4278,
	1414, 1150, 4824, 2145, 1411, 1140, 2161, 1268, 1268, 4192,
	2154, 4195, 4190, 4191, 2858, 1341, 3724, 182, 2734, 1157,
	4230, 1154, 4202, 2048, 2056, 2050, 4205, 1156, 4310, 1155,
	4312, 4189, 3715, 2049, 4201, 1942, 1153, 4276, 2043, 4194,
	4232, 4077, 1573, 1573, 3124, 3693, 1639, 3714, 4209, 4222,
	1637, 1003, 2149, 2578, 2642, 3288, 1915, 4261, 1114, 1136,
	2639, 1293, 1267, 1125, 1113, 1504, 4336, 3406, 1518, 1341,
	1352, 4128, 4296, 3385, 3680, 3895, 2490, 882, 3334, 2645,
	1284, 2758, 1411, 4280, 2750, 2746, 3477, 1573, 3114, 1796,
	4313, 4333, 2047, 4440, 4304, 1893, 4289, 3125, 1792, 4292,
	1396, 1118, 2576, 3723, 1906, 3266, 2500, 3687, 3429, 4330,
	2851, 4804, 3812, 3198, 2305, 1246, 1573, 1573, 1573, 1573,
	1573, 1573, 4372, 4294, 4383, 4367, 4291, 1245, 1291, 1244,
	4786, 4783, 1411, 2243, 4346, 3631, 3632, 2137, 1341, 1341,
	3711, 2898, 2588, 4323, 1150, 1150, 1150, 3650, 4322, 1130,
	4321, 4384, 4329, 1517, 2443, 3745, 3391, 4056, 1600, 795,
	4494, 1142, 1411, 1878, 3045, 4341, 3044, 1150, 4648, 1266,
	1150, 1150, 4378, 4349, 4348, 4337, 1381, 4358, 4331, 1379,
	1150, 4387, 1378, 2059, 1377, 4955, 3955, 3954, 1150, 1150,
	3953, 237, 3234, 1817, 1809, 234, 236, 4392, 235, 4385,
	4353, 3900, 3435, 4879, 3977, 1411, 3622, 1573, 2018, 23,
	22, 21, 4369, 116, 42, 1112, 1112, 1112, 20, 4418,
	155, 4398, 1352, 4399, 133, 152, 151, 4406, 125, 4407,
	150, 149, 148, 1495, 4413, 147, 154, 146, 145, 1411,
	140, 144, 143, 142, 141, 1267, 139, 1150, 137, 138,
	132, 136, 4401, 1267, 135, 134, 4405, 4423, 131, 130,
	1150, 3721, 3716, 3717, 3718, 3719, 129, 1267, 128, 1150,
	127, 126, 124, 156, 2059, 123, 122, 121, 120, 119,
	4435, 118, 117, 1150, 4446, 4447, 1150, 783, 3531, 3532,
	4429, 3533, 784, 61, 60, 115, 2890, 113, 1286, 1268,
	1150, 4508, 4509, 1150, 114, 2053, 19, 4467, 4459, 4468,
	1411, 40, 14, 65, 66, 18, 4497, 1352, 13, 35,
	92, 1267, 105, 1267, 104, 103, 36, 1573, 1573, 1573,
	101, 2165, 1307, 4466, 4526, 4469, 4528, 2180, 4529, 4449,
	100, 4450, 3575, 3576, 270, 3577, 270, 270, 1272, 1336,
	270, 1346, 1266, 4476, 34, 17, 16, 4542, 15, 4516,
	1266, 98, 1360, 97, 96, 33, 4530, 31, 11, 1270,
	790, 9, 37, 790, 1266, 3633, 4519, 2003, 12, 4571,
	4563, 1411, 4552, 5, 1573, 4514, 187, 4556, 186, 189,
	4506, 4258, 185, 188, 91, 184, 2053, 270, 183, 270,
	270, 1336, 4518, 270, 270, 90, 4527, 29, 1346, 10,
	3162, 179, 4572, 4063, 82, 181, 4579, 1150, 1150, 4597,
	4545, 4592, 270, 4544, 1542, 180, 178, 4532, 1266, 4554,
	1266, 177, 176, 2056, 1150, 2059, 83, 4601, 3050, 4603,
	1562, 80, 175, 4575, 4549, 86, 4570, 1577, 4593, 4595,
	174, 81, 85, 84, 4560, 27, 1352, 4534, 6, 1352,
	64, 1352, 1352, 4547, 4548, 7, 1602, 4408, 3731, 1346,
	108, 4589, 109, 270, 270, 4594, 1336, 2281, 4600, 1150,
	4599, 1150, 1268, 1150, 4387, 38, 78, 77, 3091, 76,
	1268, 75, 26, 1272, 63, 4611, 25, 790, 173, 270,
	270, 2047, 218, 4520, 1268, 217, 1150, 216, 1272, 215,
	214, 1665, 4612, 4613, 1270, 4643, 213, 212, 211, 206,
	210, 1672, 208, 207, 2056, 209, 909, 205, 4615, 1270,
	228, 227, 4621, 221, 220, 226, 4258, 225, 224, 1518,
	223, 222, 4632, 219, 4638, 4634, 4642, 4635, 4636, 231,
	4641, 4258, 204, 203, 202, 200, 4680, 2053, 1268, 4670,
	1268, 196, 1272, 1272, 199, 2582, 201, 198, 197, 1150,
	1150, 195, 4691, 4664, 4663, 230, 229, 72, 171, 1150,
	172, 1904, 71, 1270, 1270, 170, 1272, 169, 1518, 1272,
	168, 167, 2047, 1573, 166, 165, 164, 70, 24, 2,
	1, 0, 0, 1573, 270, 4258, 4258, 1270, 4681, 0,
	1270, 4679, 0, 4686, 4671, 0, 0, 1150, 1150, 0,
	0, 0, 0, 0, 0, 0, 4252, 1150, 270, 4258,
	0, 4703, 4258, 0, 0, 0, 2757, 4740, 4712, 4741,
	0, 0, 4713, 4714, 4720, 4719, 0, 4717, 0, 0,
	4725, 0, 0, 0, 0, 0, 4575, 4733, 4734, 0,
	4245, 0, 4737, 0, 4238, 0, 0, 4739, 4705, 4706,
	4738, 4736, 0, 0, 0, 1150, 1150, 4749, 4757, 1150,
	0, 4236, 0, 1352, 0, 2056, 1352, 4753, 0, 0,
	4240, 0, 4726, 0, 4758, 4728, 0, 4785, 4788, 0,
	4760, 0, 1495, 0, 0, 0, 4768, 4769, 4803, 0,
	4806, 0, 4748, 0, 0, 4246, 4800, 0, 0, 4807,
	1267, 4777, 4776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4794, 0, 0, 0, 0, 0,
	0, 4829, 0, 0, 0, 0, 1150, 1150, 1150, 4790,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 4239,
	0, 0, 2514, 0, 0, 2495, 4812, 0, 0, 4795,
	4789, 4827, 4796, 0, 4793, 4828, 0, 4820, 4817, 0,
	0, 0, 1150, 0, 0, 0, 0, 4860, 0, 0,
	0, 0, 4844, 0, 0, 0, 0, 4865, 4841, 4842,
	4843, 0, 0, 0, 0, 4861, 0, 0, 0, 0,
	0, 0, 0, 0, 4888, 2180, 0, 1112, 0, 4886,
	4875, 0, 4877, 4887, 0, 1495, 4863, 1266, 0, 703,
	0, 0, 0, 4896, 4894, 4878, 0, 0, 1150, 0,
	0, 4876, 0, 0, 0, 0, 1352, 4893, 4892, 0,
	270, 0, 270, 4909, 0, 2656, 270, 4902, 0, 0,
	4552, 0, 0, 4900, 4901, 1267, 4926, 2317, 0, 1542,
	1336, 2023, 270, 4906, 270, 2029, 0, 0, 4922, 0,
	1267, 270, 0, 719, 4920, 0, 4915, 4916, 270, 4918,
	4942, 4940, 4785, 0, 4929, 4788, 1272, 0, 1272, 4941,
	4930, 4951, 4932, 4806, 2097, 0, 4949, 0, 4937, 4939,
	4948, 2752, 0, 4947, 0, 0, 270, 1270, 0, 1270,
	0, 0, 4241, 270, 0, 4957, 0, 0, 4242, 0,
	4956, 0, 4917, 0, 1267, 1267, 1352, 0, 4247, 4258,
	0, 4258, 4979, 0, 4972, 0, 4980, 0, 4981, 4974,
	0, 2827, 0, 4986, 4984, 0, 790, 1268, 1267, 0,
	0, 1267, 0, 0, 4983, 0, 1150, 1150, 4988, 4990,
	0, 1495, 1266, 0, 1150, 0, 1150, 1150, 3126, 0,
	4244, 4993, 5006, 0, 0, 5005, 5008, 1266, 4999, 0,
	0, 5003, 5010, 5007, 0, 5012, 5014, 4248, 5013, 5011,
	5009, 0, 4950, 5002, 4952, 0, 4074, 3126, 0, 0,
	0, 0, 5018, 0, 5019, 0, 5021, 5017, 5025, 5023,
	5022, 5020, 4977, 5029, 0, 5028, 0, 0, 0, 0,
	5031, 1150, 0, 2444, 0, 5032, 0, 5034, 5025, 5036,
	0, 1266, 1266, 0, 0, 0, 0, 3466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1266, 0, 0, 1266, 0,
	0, 5000, 5001, 4124, 73, 0, 0, 3263, 3264, 0,
	0, 3601, 0, 3337, 3338, 0, 3355, 3356, 3357, 0,
	0, 74, 0, 3494, 0, 0, 0, 0, 2909, 0,
	0, 0, 1268, 0, 0, 3776, 0, 79, 0, 3626,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	3654, 0, 0, 0, 270, 0, 5033, 4243, 270, 0,
	0, 3542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 3556, 0, 3558, 0, 0, 3352, 0,
	0, 0, 0, 0, 2757, 0, 0, 4253, 4254, 0,
	0, 1268, 1268, 0, 3703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3726, 0, 903, 0,
	3592, 0, 270, 0, 3598, 1268, 270, 0, 1268, 0,
	0, 49, 270, 110, 0, 0, 3722, 0, 270, 94,
	107, 3337, 3338, 0, 3355, 3356, 3357, 0, 0, 3720,
	0, 0, 0, 0, 270, 0, 270, 0, 0, 3713,
	703, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2171, 0, 790, 2757, 2757, 2172, 909, 3337,
	3338, 0, 3355, 3356, 3357, 3343, 1495, 0, 0, 3361,
	3362, 3363, 3364, 0, 0, 0, 0, 0, 1267, 95,
	1267, 0, 0, 3662, 0, 0, 0, 270, 0, 1336,
	270, 0, 0, 0, 0, 0, 3352, 0, 0, 0,
	0, 0, 1341, 0, 790, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 2398,
	0, 0, 3724, 0, 270, 270, 0, 270, 0, 270,
	3359, 270, 0, 270, 3352, 0, 0, 0, 3715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1341, 4300, 3714, 0, 0, 0, 0, 2435, 1495,
	0, 2436, 0, 2437, 0, 0, 0, 0, 0, 0,
	0, 2173, 3353, 0, 0, 270, 270, 270, 270, 0,
	0, 0, 0, 1341, 1341, 1266, 0, 1266, 0, 2177,
	0, 0, 0, 3343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 0, 0, 790, 3723,
	0, 4351, 0, 0, 0, 0, 3337, 3338, 0, 3355,
	3356, 3357, 0, 0, 4368, 0, 0, 99, 0, 1495,
	0, 3343, 0, 0, 0, 3360, 0, 2757, 2757, 2757,
	2757, 0, 0, 0, 0, 0, 0, 4391, 1879, 3224,
	0, 0, 0, 0, 0, 1495, 0, 0, 3359, 0,
	0, 0, 0, 0, 2174, 2179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 190, 102, 0, 0, 106, 0, 0,
	0, 3352, 0, 0, 0, 0, 3359, 0, 0, 0,
	3353, 2590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 1518, 1268, 0, 1268, 0, 0,
	0, 904, 0, 0, 0, 0, 153, 3354, 0, 0,
	2752, 2752, 0, 0, 0, 0, 0, 0, 3353, 0,
	0, 0, 0, 0, 0, 0, 0, 2175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 3721, 3716, 3717,
	3718, 3719, 703, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 270, 3343, 0,
	0, 0, 0, 3530, 0, 0, 703, 2181, 0, 0,
	0, 194, 1495, 270, 0, 703, 0, 0, 0, 239,
	0, 0, 0, 0, 1879, 0, 0, 270, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 270, 1346, 0,
	0, 0, 0, 0, 4015, 0, 0, 4016, 0, 0,
	0, 3528, 0, 0, 0, 3354, 0, 0, 0, 0,
	193, 1518, 0, 0, 0, 0, 0, 3349, 3350, 3351,
	0, 0, 1341, 0, 3348, 3346, 3347, 3339, 3340, 3341,
	3342, 3344, 3345, 0, 0, 1495, 270, 1346, 0, 0,
	719, 0, 719, 3354, 3529, 3353, 2873, 0, 0, 0,
	0, 0, 270, 0, 0, 270, 0, 0, 0, 270,
	0, 270, 2752, 2752, 2752, 2752, 1336, 0, 270, 270,
	0, 1346, 1346, 2889, 3392, 1518, 0, 1518, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4103, 4104, 4105, 0, 0, 0,
	0, 2361, 4111, 4112, 0, 0, 0, 3421, 2171, 0,
	0, 0, 0, 2172, 0, 3768, 3769, 0, 0, 0,
	0, 1879, 3434, 0, 2926, 0, 0, 0, 0, 0,
	2176, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 4020, 0, 3349, 3350, 3351, 3455, 270,
	0, 0, 3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344,
	3345, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3349, 3350, 3351, 0, 0, 0, 0,
	3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344, 3345, 270,
	3354, 0, 0, 0, 0, 3832, 3833, 3834, 3835, 3836,
	3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845, 3846,
	3847, 3848, 3849, 3850, 3851, 4677, 3855, 2173, 0, 0,
	0, 0, 270, 3066, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2177, 0, 0, 0, 0,
	0, 0, 0, 4690, 0, 0, 0, 0, 0, 1542,
	0, 0, 270, 0, 270, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3109, 0, 2757, 2757, 4724, 0, 0, 0, 0,
	0, 2926, 0, 703, 0, 0, 0, 0, 0, 4207,
	4208, 0, 3138, 909, 2926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2174, 2179, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3349, 3350, 3351, 1105, 270, 1336, 270, 3348, 3346, 3347,
	3339, 3340, 3341, 3342, 3344, 3345, 1346, 270, 0, 0,
	1336, 3434, 1336, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 0, 2757, 0, 0, 0, 0, 1826,
	1827, 0, 0, 2175, 0, 0, 0, 0, 0, 270,
	270, 270, 270, 1336, 0, 0, 1336, 0, 270, 4813,
	0, 0, 1857, 270, 0, 4815, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 2361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2169,
	0, 0, 0, 2181, 270, 1882, 0, 0, 0, 0,
	0, 0, 270, 0, 1828, 0, 1826, 1827, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 3746, 1829, 0, 1409, 0,
	1518, 1518, 0, 0, 0, 0, 0, 2167, 4281, 4400,
	0, 4402, 4403, 4404, 1826, 1827, 0, 0, 0, 0,
	4290, 0, 1882, 4293, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 1857, 0, 3771,
	0, 1848, 0, 0, 1829, 0, 0, 0, 0, 0,
	2168, 0, 0, 0, 0, 0, 0, 0, 2752, 2752,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 1495, 0,
	1882, 1834, 1518, 0, 0, 3789, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 1542, 0,
	0, 0, 3805, 0, 0, 0, 0, 2317, 0, 0,
	4452, 1495, 0, 0, 4366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 2176, 0, 1834, 0,
	0, 0, 1495, 0, 0, 1843, 1844, 0, 2752, 2752,
	2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752,
	2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 0, 2752,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 1112, 0, 0, 0, 1834, 1856, 1858, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4546, 0, 0, 1341, 0, 0, 0, 3898, 0, 0,
	0, 0, 270, 0, 0, 1856, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 270, 0,
	0, 0, 0, 703, 1879, 0, 0, 0, 703, 0,
	0, 703, 0, 0, 703, 703, 0, 0, 0, 0,
	703, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 1495, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 1850, 0, 270, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4533, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 2926, 2926, 270, 0, 2023, 1879,
	0, 0, 0, 0, 2926, 0, 2029, 1855, 0, 0,
	0, 0, 0, 0, 0, 2926, 2029, 0, 2926, 2029,
	0, 1881, 2029, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 270, 270, 2023, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 270, 0, 3561, 3561, 0, 0, 0, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 2926, 0, 2926, 0, 3589, 2926, 2023, 0, 0,
	2926, 2023, 0, 0, 790, 0, 0, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 1495,
	0, 0, 1495, 0, 0, 0, 2361, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 1881, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 3627,
	0, 0, 3629, 2926, 0, 0, 270, 0, 0, 0,
	270, 0, 0, 1346, 0, 4432, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 270, 0,
	0, 0, 0, 3109, 0, 0, 1336, 0, 270, 1495,
	0, 2926, 0, 703, 0, 0, 0, 0, 0, 803,
	2926, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 814, 0, 0, 0, 0, 1826,
	1827, 0, 4479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 3737,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 3743,
	0, 0, 1542, 0, 0, 1336, 270, 0, 270, 0,
	0, 79, 0, 0, 1336, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 4200, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 270, 0, 808, 0, 0,
	0, 88, 1341, 0, 820, 0, 0, 0, 0, 0,
	0, 0, 4218, 2757, 0, 0, 0, 0, 813, 0,
	0, 1495, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 903, 0, 1863, 1857, 0, 0, 0, 3766,
	0, 0, 1829, 3810, 0, 0, 0, 110, 0, 0,
	0, 1876, 0, 94, 107, 0, 0, 0, 0, 812,
	0, 1851, 1852, 1853, 1854, 0, 0, 2317, 1882, 0,
	2757, 1834, 0, 0, 0, 0, 765, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 4620,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4647, 0, 0, 0,
	270, 270, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 819,
	0, 4669, 0, 0, 0, 703, 703, 0, 0, 0,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 1849, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 1877, 0, 0, 0,
	0, 1862, 0, 1856, 1858, 0, 805, 0, 0, 0,
	0, 2848, 0, 0, 0, 4424, 0, 0, 0, 1873,
	0, 1874, 0, 0, 1879, 0, 0, 2757, 1843, 1844,
	0, 99, 0, 0, 0, 0, 3040, 809, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 2752, 790,
	0, 0, 0, 0, 0, 0, 0, 0, 4424, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 3030,
	3028, 0, 0, 0, 2757, 764, 3032, 3034, 3024, 0,
	1855, 0, 3561, 1495, 0, 0, 0, 190, 102, 0,
	815, 106, 2514, 0, 0, 0, 807, 270, 0, 2757,
	0, 0, 0, 1850, 0, 1341, 0, 1875, 0, 0,
	1495, 0, 0, 0, 0, 2752, 0, 238, 0, 3046,
	2023, 1097, 270, 0, 0, 904, 719, 719, 1346, 0,
	153, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 270, 0, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 3109, 0, 0, 3109, 2029, 0, 0,
	0, 1881, 270, 2514, 0, 240, 0, 2317, 0, 0,
	811, 0, 270, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 270, 0, 766, 0, 0, 0, 0, 0,
	157, 1341, 0, 1855, 0, 806, 0, 0, 0, 0,
	0, 2926, 270, 0, 0, 194, 0, 0, 0, 0,
	0, 3138, 3138, 239, 0, 0, 1850, 909, 2926, 817,
	818, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 1495, 1495, 0, 1495, 233, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 270, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 1862,
	3026, 0, 0, 0, 193, 0, 1495, 0, 0, 0,
	0, 3042, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3041, 3031, 3029, 3033, 3035, 3025, 3027,
	3043, 0, 2752, 0, 0, 0, 0, 0, 0, 0,
	3037, 3039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4163, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3047, 0, 1866, 0, 0, 2752,
	0, 1495, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 2752, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 270, 0, 0, 0, 0,
	0, 1542, 0, 270, 0, 0, 0, 0, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 1862, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	270, 1346, 0, 0, 0, 0, 0, 0, 1862, 2926,
	2926, 0, 3561, 2926, 1862, 88, 0, 0, 0, 0,
	1862, 4260, 0, 4260, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2926, 0, 2029, 0, 1495,
	0, 1542, 1542, 270, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 903, 2023, 0, 270,
	2023, 0, 270, 0, 3561, 0, 0, 0, 0, 1495,
	0, 110, 0, 0, 0, 0, 0, 94, 107, 0,
	0, 0, 0, 2926, 3048, 2926, 270, 0, 0, 0,
	0, 0, 0, 3036, 3038, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 74, 0, 0, 1826, 1827, 0,
	1862, 2926, 2926, 0, 0, 1862, 0, 3109, 3109, 0,
	79, 0, 0, 0, 4355, 0, 0, 95, 1862, 0,
	1857, 0, 0, 1862, 0, 270, 1495, 1829, 0, 0,
	0, 0, 0, 1518, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 1112, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 903, 0, 0, 1862, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 49, 0, 110, 0, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 1097, 1097, 1097, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 99, 0, 0, 1495, 1834,
	0, 0, 95, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2926, 2029, 0, 2029,
	0, 0, 4471, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 1544, 0,
	1550, 4495, 1556, 4495, 0, 0, 0, 0, 1856, 1858,
	0, 190, 102, 0, 0, 106, 0, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 0, 0, 790, 0, 0,
	0, 0, 0, 1843, 1844, 0, 0, 1862, 3561, 0,
	1336, 238, 0, 0, 0, 0, 0, 0, 73, 904,
	1862, 0, 0, 0, 153, 0, 0, 0, 2023, 0,
	270, 0, 0, 0, 0, 74, 1849, 0, 0, 0,
	0, 1656, 0, 1661, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 1674, 4471, 1679, 240,
	4260, 0, 0, 1542, 0, 0, 2756, 0, 0, 0,
	2926, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	99, 0, 0, 0, 157, 1862, 0, 0, 0, 0,
	4586, 88, 0, 0, 0, 0, 0, 0, 0, 194,
	0, 0, 1542, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 1879, 0, 0, 0, 1112, 1112, 0, 0,
	0, 232, 0, 0, 0, 0, 1744, 270, 270, 1750,
	233, 0, 903, 0, 0, 0, 190, 102, 0, 0,
	106, 0, 0, 0, 0, 49, 0, 110, 0, 0,
	0, 3810, 0, 94, 107, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 1855, 0,
	0, 0, 0, 0, 904, 0, 3561, 4640, 0, 153,
	0, 0, 0, 0, 0, 4471, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4260, 0, 0, 0, 0,
	0, 0, 0, 95, 240, 0, 0, 0, 0, 0,
	4260, 0, 0, 1112, 0, 0, 0, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 194, 0, 719, 0, 0, 0,
	1903, 0, 239, 0, 0, 0, 1916, 0, 0, 0,
	0, 0, 0, 0, 4260, 4260, 232, 0, 0, 0,
	4355, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4260, 0,
	270, 4260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 1650, 0, 0, 0, 0, 0, 0,
	1542, 0, 1542, 0, 0, 0, 0, 0, 1826, 1827,
	0, 0, 0, 0, 0, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	1346, 1857, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 99, 4766, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 1975, 1975, 0, 0, 0, 0, 4495, 0,
	0, 270, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 2926, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 190, 102, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	153, 0, 0, 0, 3810, 0, 0, 0, 3252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1542, 0,
	1851, 1852, 1853, 1854, 0, 240, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 1856,
	1858, 0, 0, 1862, 0, 0, 0, 232, 0, 4471,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 1648, 0, 0, 1862, 2926, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 4260, 0,
	4260, 1862, 0, 1542, 0, 0, 0, 0, 0, 0,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 0, 0, 0, 0,
	0, 1862, 0, 1862, 1862, 1862, 1862, 0, 0, 0,
	0, 0, 0, 2926, 0, 2756, 2756, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	1862, 3138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 1862, 0, 0, 1862, 0, 0,
	1862, 0, 0, 0, 0, 0, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1146, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 3358, 0, 2756, 2756, 2756,
	2756, 0, 0, 0, 1862, 0, 1862, 0, 0, 0,
	2422, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2449, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2489, 0, 2493, 0, 0, 0, 0, 833, 0,
	2507, 0, 0, 0, 0, 0, 0, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 0, 2557, 0, 2559, 2560, 2561, 2562,
	2727, 2728, 2729, 2730, 2723, 2724, 2725, 2726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1903, 0, 0, 0, 2637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2667, 2670, 2673, 2676, 0, 0,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2703, 2704, 2705, 2706, 0, 1269, 0, 2748, 0,
	2760, 2762, 2767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2715, 2716, 2717, 2718, 2711, 2712,
	2713, 2714, 2719, 2720, 2721, 2722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 1862, 0, 1862, 0, 0, 0,
	0, 0, 0, 2699, 2700, 2701, 2702, 2707, 2708, 2709,
	2710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1827, 0, 0, 0, 0, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 1862, 0, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	1862, 1862, 0, 2756, 2756, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3358, 3358, 0,
	0, 1862, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 3069, 3070, 0, 3072, 0, 0, 0, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2756, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 0, 2756, 3358, 3358, 3358, 3358, 0,
	1867, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 1843, 1844, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 1857, 0, 0, 269, 0, 269,
	269, 1829, 0, 269, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 1884, 1862, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 1826, 1827, 0, 0, 0, 1848, 0, 0, 0,
	269, 0, 269, 269, 0, 1845, 269, 269, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	1855, 1829, 0, 0, 0, 833, 1862, 1862, 0, 3246,
	3247, 0, 0, 0, 0, 3253, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 3267, 3268, 1828, 0, 0, 0,
	2637, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	1868, 0, 0, 0, 0, 1845, 269, 269, 0, 0,
	0, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	1273, 1881, 269, 269, 0, 3277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3245, 1867, 0, 0, 1877, 0, 0, 3303, 0,
	0, 0, 1856, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 1852, 1853, 1854, 0, 1873, 0,
	1874, 0, 0, 1834, 0, 0, 0, 1843, 1844, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	1849, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 1856, 1858, 0, 0, 0, 1862, 1862, 0,
	0, 1862, 3358, 3358, 1862, 0, 0, 0, 1862, 0,
	0, 269, 0, 0, 0, 1862, 0, 1843, 1844, 0,
	2767, 2767, 2767, 0, 0, 0, 1875, 0, 1862, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 3396, 0, 1864, 0, 0, 0, 0,
	1849, 1862, 1862, 1862, 1862, 1862, 1879, 0, 0, 0,
	0, 1862, 0, 1862, 0, 0, 3358, 3358, 3358, 3358,
	3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358,
	3358, 3358, 3358, 3358, 3358, 3358, 0, 0, 0, 3358,
	0, 0, 1862, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 1855, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 1097, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 3521, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 1862, 1997, 0, 1269, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3572, 3573, 269, 1997, 269, 0, 0,
	0, 0, 0, 1881, 833, 1866, 0, 0, 0, 0,
	0, 833, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 0, 4171, 0, 0, 269,
	4170, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 1862, 0, 0, 0,
	1862, 1862, 0, 0, 1862, 1862, 0, 0, 0, 1862,
	0, 0, 0, 1862, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 2507, 0, 0, 0, 0,
	0, 3763, 3764, 0, 0, 3767, 0, 269, 0, 3770,
	0, 833, 0, 0, 0, 0, 0, 0, 3774, 0,
	0, 0, 0, 0, 0, 0, 0, 3781, 0, 0,
	0, 0, 3396, 0, 0, 1862, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 1273, 0, 3794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 3817, 3818, 0,
	3819, 3820, 3821, 0, 0, 269, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 269, 0, 0, 3827, 0,
	0, 269, 3829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 269,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 3858, 3859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 1862, 1862, 0, 0, 3879, 0,
	269, 0, 0, 269, 1862, 1862, 3358, 2756, 0, 0,
	0, 0, 0, 1862, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 833, 269, 0,
	269, 0, 269, 0, 269, 0, 269, 0, 0, 0,
	0, 0, 0, 3358, 2756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 1862, 2756,
	0, 3935, 0, 0, 0, 0, 1862, 0, 269, 269,
	269, 269, 0, 0, 0, 1862, 0, 1862, 0, 0,
	3947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3997, 3998, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	1862, 3358, 0, 0, 1862, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 1273, 0, 1273,
	0, 0, 0, 3358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 2060, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 1863, 1857, 4098, 0, 0,
	0, 0, 0, 1829, 0, 1862, 0, 0, 0, 0,
	1269, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1854, 1269, 0, 0, 1882,
	0, 0, 1834, 0, 0, 0, 0, 0, 1828, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4141, 4142, 0, 0, 0, 0, 4146, 4147,
	0, 1856, 1858, 4150, 4151, 0, 0, 1273, 0, 0,
	0, 4155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4159, 0, 0, 0, 1843, 1844, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 4164, 0,
	0, 0, 0, 0, 1862, 269, 0, 0, 269, 0,
	0, 0, 269, 0, 269, 1851, 1852, 1853, 1854, 1849,
	0, 269, 269, 0, 0, 1834, 0, 0, 1862, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 1856, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	1873, 0, 1874, 0, 0, 1879, 0, 0, 0, 1843,
	1844, 0, 269, 1273, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 269, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 269, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 833, 0, 4301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 269, 0, 833, 1273, 0,
	1273, 0, 1273, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	1273, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 1273, 0, 1273, 1273, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 1868, 0, 0, 0, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	4419, 4420, 4421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 2507, 0, 0, 4430, 4431, 0, 0,
	0, 0, 269, 269, 269, 269, 0, 0, 0, 0,
	0, 269, 0, 0, 4439, 4442, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 2060, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 4496, 0, 3312, 0,
	0, 0, 3313, 0, 0, 4504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4512,
	0, 0, 1097, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 0, 0, 0, 0, 4521, 0, 0, 4523,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 0, 0, 265, 265, 699,
	0, 0, 0, 1863, 1857, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 1882, 0, 0,
	1273, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 1273, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4646, 0, 0, 0, 4650,
	0, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 0, 0, 1834, 0, 1269, 0, 750, 271, 271,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 0, 734, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 1867, 0, 0, 1877, 0, 0, 0, 0,
	0, 1997, 1856, 1858, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 271, 0, 0, 1873, 0,
	1874, 735, 0, 0, 0, 1097, 1097, 1843, 1844, 0,
	0, 0, 736, 0, 0, 4721, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 737, 269, 0, 0, 0, 269, 269,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2507, 756, 0, 0, 0, 0,
	0, 0, 750, 4442, 0, 0, 0, 1273, 0, 269,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 1875, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 1864, 0, 0, 0, 269,
	269, 0, 1097, 269, 0, 0, 1879, 0, 0, 0,
	1997, 0, 0, 0, 740, 0, 735, 741, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 736, 0, 0,
	0, 0, 0, 0, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 755,
	0, 0, 1855, 0, 0, 0, 0, 1273, 0, 1273,
	756, 0, 4840, 4840, 4840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 1273, 0, 0, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 4864, 0,
	0, 0, 1868, 0, 0, 0, 739, 752, 0, 0,
	833, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 740,
	0, 0, 741, 1881, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 765,
	0, 1269, 0, 0, 4840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 755, 0, 0, 0, 0, 762,
	0, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	763, 0, 744, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 752, 0, 0, 0, 2633, 0, 0, 269,
	2634, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 760, 761, 758, 0,
	0, 0, 0, 0, 753, 0, 0, 746, 269, 0,
	0, 0, 4840, 4994, 0, 0, 0, 0, 0, 0,
	4998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 754, 0, 0, 0, 0, 0, 0, 0, 748,
	0, 0, 0, 0, 0, 763, 0, 744, 0, 0,
	0, 0, 0, 749, 0, 0, 0, 0, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 766, 1322, 0, 1322, 1322, 0, 0, 0,
	0, 0, 0, 751, 0, 0, 0, 0, 764, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 760, 761, 758, 0, 0, 0, 0, 0, 753,
	0, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 747, 0, 754, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 749, 0,
	0, 0, 0, 757, 0, 0, 0, 0, 0, 1273,
	1273, 0, 0, 0, 0, 0, 0, 766, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 751, 0,
	833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 1654, 1655,
	0, 0, 0, 0, 271, 1273, 271, 271, 1273, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 1415, 271,
	271, 0, 0, 271, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1135, 112,
	269, 0, 0, 1771, 2060, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 271, 271, 855, 0, 0, 0, 0,
	856, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 269, 0, 0, 1415, 271,
	271, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 269, 0, 0, 0, 857,
	269, 874, 0, 0, 1273, 269, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 858, 0, 0, 0,
	0, 859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 0,
	0, 0, 1415, 883, 0, 0, 0, 0, 0, 0,
	860, 1273, 0, 1273, 0, 0, 0, 1273, 0, 269,
	0, 0, 0, 0, 881, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 854,
	0, 1072, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 1092, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 861, 0, 0, 862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 885, 0, 0,
	1273, 0, 765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 1273, 0, 0, 0, 0, 1256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 1273, 0, 0, 0, 1269, 0,
	0, 0, 0, 0, 0, 884, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 879, 0, 0, 0, 0,
	1997, 0, 0, 0, 0, 1322, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 1997, 0, 1997, 0, 863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 865,
	0, 0, 0, 0, 0, 0, 269, 0, 2060, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 269, 0, 0, 0, 0,
	866, 0, 0, 0, 0, 0, 271, 2060, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 269,
	0, 0, 271, 271, 271, 0, 0, 0, 0, 875,
	0, 271, 0, 0, 0, 0, 0, 0, 271, 0,
	2060, 764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 852, 0, 876, 0, 0, 0,
	0, 0, 0, 0, 0, 867, 271, 1273, 1273, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 868, 0, 0,
	0, 869, 888, 0, 887, 0, 0, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 0, 0, 880, 0, 0, 0,
	1415, 0, 889, 0, 886, 0, 0, 0, 0, 0,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2303, 0, 0, 0, 2310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2335, 0, 2335, 0, 0, 0, 0,
	0, 2342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2310, 0, 0, 2370,
	1273, 0, 0, 1273, 271, 0, 1415, 1415, 271, 0,
	0, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	2390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 2406, 0, 2408, 0, 2410, 0,
	2412, 0, 2413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 1273, 271, 0, 0, 0,
	112, 0, 271, 1997, 2440, 2441, 2442, 0, 271, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 1273, 1273, 0, 271, 0, 271, 1273, 1273, 1273,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 1415, 0, 1415, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 1415, 1415, 0, 0, 0, 0, 0,
	269, 269, 0, 0, 0, 0, 1415, 271, 0, 0,
	271, 112, 1273, 112, 0, 112, 0, 0, 1415, 0,
	1415, 1415, 1415, 2060, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 271, 0, 271, 0, 271,
	0, 271, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1092, 112, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 1997, 0,
	0, 0, 0, 0, 112, 0, 112, 0, 0, 0,
	0, 0, 0, 1997, 0, 271, 271, 271, 271, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 0, 1273, 1273, 0, 1273, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 1997, 1997, 0,
	0, 1415, 0, 0, 0, 1273, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 1273, 0,
	0, 1997, 0, 269, 1997, 0, 2824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	1273, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 269, 0, 0, 0, 0, 0,
	0, 2875, 0, 1072, 1322, 0, 0, 0, 1322, 0,
	1322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 0, 1896, 0, 0, 2323, 0, 0,
	0, 1273, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1902, 0, 0, 0, 1908, 0, 825, 0,
	0, 0, 0, 0, 1415, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 1273, 271, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 1273, 1273, 1273, 1273, 1273,
	1273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 1516, 0,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 271, 1995, 0, 1998, 271,
	112, 271, 2060, 0, 0, 0, 0, 0, 271, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 1273, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2310, 0, 0, 0, 0, 0, 0, 0, 0,
	2323, 1997, 0, 1997, 0, 0, 0, 1415, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 3160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3171, 0, 3174, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 1151, 271,
	1415, 0, 0, 0, 0, 0, 1273, 1273, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3206, 1516,
	3208, 1516, 0, 0, 0, 0, 0, 3214, 0, 0,
	1273, 0, 271, 1273, 271, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1322, 0, 0, 0, 1415, 0, 0,
	0, 3243, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 1415, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 1857, 0, 0, 0, 0, 1273, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	271, 271, 271, 0, 0, 1882, 0, 0, 271, 0,
	0, 0, 0, 271, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 1273, 1273, 1845, 0, 0, 0, 1092, 0, 1092,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 1273, 0, 0, 1273, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 1874, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1072, 0, 0,
	1072, 1072, 0, 1865, 0, 0, 0, 0, 0, 3444,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 0, 0, 0, 1516, 1516, 2575, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 1092, 0, 0, 0,
	0, 0, 0, 1864, 0, 3490, 1902, 0, 0, 0,
	1902, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 1574, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 0, 3538, 3540, 0, 0, 2323,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	1855, 0, 0, 0, 0, 1273, 0, 1273, 0, 0,
	0, 1415, 0, 1256, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1850, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 271, 271, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 3651, 0, 0, 0, 3655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 271, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 4169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3748, 0, 1516, 0, 0,
	1415, 0, 0, 0, 1413, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 1415, 0, 1415, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 271, 1415, 0,
	0, 0, 0, 0, 3761, 0, 271, 0, 0, 1415,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1575, 0, 0, 0, 0, 0, 0, 271, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 1857, 0, 112, 0, 112, 0, 0,
	1829, 0, 0, 1415, 0, 0, 0, 1575, 0, 1876,
	0, 0, 0, 0, 1575, 1415, 0, 1415, 0, 0,
	1412, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	1575, 0, 0, 0, 825, 1828, 0, 0, 0, 0,
	0, 825, 0, 112, 0, 1848, 112, 0, 0, 0,
	0, 0, 112, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 0, 271, 1415, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 0, 1834, 1412, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 0, 0, 0, 0, 0, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	1574, 0, 0, 0, 0, 0, 1902, 0, 0, 1412,
	0, 0, 0, 0, 0, 1875, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 271, 0, 0,
	2323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2323, 0, 0, 0,
	0, 4080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 0, 1574, 0, 1574, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 1868, 0, 0, 0, 4126, 0, 0, 0, 0,
	0, 1574, 0, 1574, 1574, 1574, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 1415, 0, 0, 1415, 825, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1256, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 1256, 0, 1413, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 271, 0, 1866, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 1415, 1415, 1415, 0, 0, 0, 0,
	1415, 1415, 1415, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 271, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 1575, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 112, 112, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 4279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 1415, 0,
	1415, 0, 0, 0, 0, 0, 0, 1575, 0, 1575,
	0, 1575, 0, 1412, 0, 0, 0, 0, 1415, 1415,
	0, 0, 0, 0, 2323, 0, 0, 0, 0, 1575,
	1575, 1415, 0, 0, 4379, 0, 0, 0, 0, 0,
	271, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 0, 1575, 1575, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1256, 0, 0, 1092, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 112, 112, 0, 0, 0, 1415, 0, 0, 271,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 1415, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 1413, 0, 0,
	0, 0, 0, 0, 1415, 271, 0, 0, 0, 1415,
	4481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 1415,
	1415, 1415, 1415, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2323,
	0, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 1827,
	0, 1859, 1860, 1861, 1870, 1871, 1872, 825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 1415,
	1863, 1857, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 112, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 1415, 0, 1574, 1882, 1574, 1256, 1256, 0, 0,
	0, 271, 0, 1828, 0, 0, 4610, 1516, 0, 0,
	0, 0, 1574, 1848, 0, 0, 1413, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	1415, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 1856,
	1858, 0, 0, 1413, 0, 0, 0, 271, 271, 0,
	0, 0, 0, 0, 0, 1873, 0, 1874, 0, 4727,
	0, 0, 0, 0, 1843, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 1413, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	4779, 0, 112, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 1864, 0, 271, 1828, 0, 0, 1256, 0,
	0, 0, 0, 1879, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4822, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1575, 0, 1415, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 1415, 1575, 0, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 1575, 0, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 0, 0, 0, 1412, 112, 1843, 1844, 0, 0,
	0, 1256, 0, 0, 0, 0, 0, 0, 0, 1256,
	0, 0, 271, 0, 1865, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3779, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 1574, 1826, 1827, 0, 1859, 1860, 1861,
	1870, 1871, 1872, 112, 0, 0, 0, 1574, 0, 1574,
	0, 0, 0, 1412, 0, 0, 1863, 1857, 0, 0,
	825, 1574, 1881, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 1574, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 1413,
	0, 0, 0, 0, 1866, 0, 0, 0, 1574, 0,
	1574, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 3315,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	1412, 0, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 0, 1413, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 1877, 0,
	0, 0, 1863, 1857, 0, 1856, 1858, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 1412, 0, 1876,
	0, 1873, 0, 1874, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 0, 1412, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 1849, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 1851, 1852, 1853, 1854, 1575, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	1575, 0, 1575, 0, 0, 0, 1413, 0, 0, 1412,
	0, 0, 0, 0, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 0, 0, 0, 0,
	0, 1867, 0, 0, 1877, 1855, 0, 0, 0, 0,
	825, 1856, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 1850, 1874,
	0, 112, 0, 0, 0, 0, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	0, 0, 0, 0, 1865, 1868, 0, 0, 0, 112,
	0, 1575, 0, 1575, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 1413, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 1574, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 3314, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 1850, 112, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 1574, 1574, 0,
	0, 1868, 0, 1574, 1574, 1574, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 0, 1863,
	1857, 1412, 1881, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	1412, 1412, 0, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 1867, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 0, 0, 0,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 1575,
	0, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 1575, 0, 0, 1574, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 1575,
	1575, 1575, 1879, 0, 0, 0, 1575, 1575, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 1575, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 1574, 1574, 1574, 1574, 1574, 0, 1855, 0,
	0, 1413, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1863,
	1857, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 1826, 1827, 1876, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 0, 0, 0, 0, 0, 1881,
	1412, 0, 1574, 1882, 0, 0, 1863, 1857, 0, 0,
	0, 0, 1828, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 1848, 1876, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 1412, 0, 0, 0, 0, 0,
	1882, 0, 0, 1413, 1413, 0, 1413, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 1575, 1575, 0, 0, 1845, 0,
	0, 1866, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 3310, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 1574, 1574, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 0, 0, 0, 0, 1834, 0, 1867, 0,
	0, 1877, 1413, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 1574,
	0, 0, 0, 0, 1873, 0, 1874, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1867, 0, 0, 1877, 0,
	1575, 1575, 0, 0, 0, 1856, 1858, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 1874, 0, 0, 1849, 0, 0, 0,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 1575, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 1575, 1575, 1575, 1575, 1575, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 1413, 0, 1575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 1855, 0, 1413, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1575, 1575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 1413,
	0, 0, 1575, 0, 0, 0, 3309, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 2634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 1416, 286, 287, 1417,
	1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 1425, 650, 298, 299, 300,
	301, 302, 303, 1426, 1427, 0, 304, 651, 652, 653,
	1428, 305, 306, 654, 1429, 1496, 1430, 307, 308, 309,
	310, 311, 312, 313, 0, 1431, 315, 316, 317, 314,
	318, 1432, 319, 0, 320, 321, 322, 323, 324, 325,
	1433, 326, 327, 328, 1214, 329, 330, 331, 1434, 1435,
	1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 1441, 342, 338, 340, 1442,
	343, 341, 344, 1443, 345, 346, 347, 1444, 1445, 348,
	349, 350, 1446, 351, 352, 353, 1447, 354, 355, 356,
	1448, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 1449, 276,
	1450, 1575, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 1575, 374, 1451, 375, 376, 377, 1452, 1453, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1454, 390, 663, 1455, 664, 391,
	1456, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 1457, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1458, 1216, 407, 668,
	669, 1459, 670, 1460, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1461, 420, 422, 421, 1462, 423, 672,
	1221, 424, 425, 1222, 1463, 426, 427, 428, 429, 430,
	431, 434, 1464, 1465, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1466, 278, 1225, 477, 478, 479, 1467, 673,
	480, 674, 482, 483, 1468, 0, 484, 0, 1469, 1470,
	486, 487, 488, 1471, 1472, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1473, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	1474, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 1475, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 1476, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 1477, 569, 570, 568,
	571, 572, 573, 1478, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 1479, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 1480, 601,
	602, 0, 598, 589, 1481, 603, 604, 605, 606, 607,
	608, 609, 610, 1482, 611, 686, 687, 688, 689, 1483,
	620, 1484, 612, 613, 614, 690, 615, 691, 1485, 616,
	617, 618, 619, 0, 621, 622, 1486, 1487, 623, 624,
	625, 627, 628, 626, 629, 1488, 630, 1489, 0, 631,
	632, 633, 692, 693, 694, 1490, 635, 634, 636, 637,
	695, 638, 639, 1491, 1492, 1493, 1494, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 2802, 0, 0, 0, 0, 0, 0, 0, 2803,
	279, 281, 280, 282, 283, 284, 285, 1416, 286, 287,
	1417, 1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 1425, 650, 298, 299,
	300, 301, 302, 303, 1426, 1427, 0, 304, 651, 652,
	653, 1428, 305, 306, 654, 1429, 1496, 1430, 307, 308,
	309, 310, 311, 312, 313, 0, 1431, 315, 316, 317,
	314, 318, 1432, 319, 0, 320, 321, 322, 323, 324,
	325, 1433, 326, 327, 328, 1214, 329, 330, 331, 1434,
	1435, 1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 1441, 342, 338, 340,
	1442, 343, 341, 344, 1443, 345, 346, 347, 1444, 1445,
	348, 349, 350, 1446, 351, 352, 353, 1447, 354, 355,
	356, 1448, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 1449,
	276, 1450, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 1451, 375, 376, 377, 1452, 1453,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1454, 390, 663, 1455, 664,
	391, 1456, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 1217, 397, 398, 1457, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1458, 1216, 407,
	668, 669, 1459, 670, 1460, 408, 409, 1218, 671, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1461, 420, 422, 421, 1462, 423,
	672, 1221, 424, 425, 1222, 1463, 426, 427, 428, 429,
	430, 431, 434, 1464, 1465, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1466, 278, 1225, 477, 478, 479, 1467,
	673, 480, 674, 482, 483, 1468, 0, 484, 0, 1469,
	1470, 486, 487, 488, 1471, 1472, 489, 490, 675, 1226,
	491, 1227, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1473, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 1474, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 1475, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 1476, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 1477, 569, 570,
	568, 571, 572, 573, 1478, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 1479, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 1480,
	601, 602, 0, 598, 589, 1481, 603, 604, 605, 606,
	607, 608, 609, 610, 1482, 611, 686, 687, 688, 689,
	1483, 620, 1484, 612, 613, 614, 690, 615, 691, 1485,
	616, 617, 618, 619, 0, 621, 622, 1486, 1487, 623,
	624, 625, 627, 628, 626, 629, 1488, 630, 1489, 0,
	631, 632, 633, 692, 693, 694, 1490, 635, 634, 636,
	637, 695, 638, 639, 1491, 1492, 1493, 1494, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 3788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3790, 279,
	281, 280, 282, 283, 284, 285, 1416, 286, 287, 1417,
	1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 1425, 650, 298, 299, 300,
	301, 302, 303, 1426, 1427, 0, 304, 651, 652, 653,
	1428, 305, 306, 654, 1429, 1496, 1430, 307, 308, 309,
	310, 311, 312, 313, 0, 1431, 315, 316, 317, 314,
	318, 1432, 319, 0, 320, 321, 322, 323, 324, 325,
	1433, 326, 327, 328, 1214, 329, 330, 331, 1434, 1435,
	1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 1441, 342, 338, 340, 1442,
	343, 341, 344, 1443, 345, 346, 347, 1444, 1445, 348,
	349, 350, 1446, 351, 352, 353, 1447, 354, 355, 356,
	1448, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 1449, 276,
	1450, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 1451, 375, 376, 377, 1452, 1453, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1454, 390, 663, 1455, 664, 391,
	1456, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 1457, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1458, 1216, 407, 668,
	669, 1459, 670, 1460, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1461, 420, 422, 421, 1462, 423, 672,
	1221, 424, 425, 1222, 1463, 426, 427, 428, 429, 430,
	431, 434, 1464, 1465, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1466, 278, 1225, 477, 478, 479, 1467, 673,
	480, 674, 482, 483, 1468, 0, 484, 0, 1469, 1470,
	486, 487, 488, 1471, 1472, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1473, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	1474, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 1475, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 1476, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 1477, 569, 570, 568,
	571, 572, 573, 1478, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 1479, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 1480, 601,
	602, 0, 598, 589, 1481, 603, 604, 605, 606, 607,
	608, 609, 610, 1482, 611, 686, 687, 688, 689, 1483,
	620, 1484, 612, 613, 614, 690, 615, 691, 1485, 616,
	617, 618, 619, 0, 621, 622, 1486, 1487, 623, 624,
	625, 627, 628, 626, 629, 1488, 630, 1489, 0, 631,
	632, 633, 692, 693, 694, 1490, 635, 634, 636, 637,
	695, 638, 639, 1491, 1492, 1493, 1494, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4199, 279, 281, 280, 282, 283, 284, 285, 1416,
	286, 287, 1417, 1418, 1419, 0, 1420, 645, 1421, 1422,
	1423, 1424, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 1425, 650,
	298, 299, 300, 301, 302, 303, 1426, 1427, 0, 304,
	651, 652, 653, 1428, 305, 306, 654, 1429, 1496, 1430,
	307, 308, 309, 310, 311, 312, 313, 0, 1431, 315,
	316, 317, 314, 318, 1432, 319, 0, 320, 321, 322,
	323, 324, 325, 1433, 326, 327, 328, 1214, 329, 330,
	331, 1434, 1435, 1437, 1436, 1438, 1439, 1440, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 1441, 342,
	338, 340, 1442, 343, 341, 344, 1443, 345, 346, 347,
	1444, 1445, 348, 349, 350, 1446, 351, 352, 353, 1447,
	354, 355, 356, 1448, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 1449, 276, 1450, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 1451, 375, 376, 377,
	1452, 1453, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1454, 390, 663,
	1455, 664, 391, 1456, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 1457, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1458,
	1216, 407, 668, 669, 1459, 670, 1460, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1461, 420, 422, 421,
	1462, 423, 672, 1221, 424, 425, 1222, 1463, 426, 427,
	428, 429, 430, 431, 434, 1464, 1465, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1466, 278, 1225, 477, 478,
	479, 1467, 673, 480, 674, 482, 483, 1468, 0, 484,
	0, 1469, 1470, 486, 487, 488, 1471, 1472, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1473, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 1474, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	1475, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 1476, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 1477,
	569, 570, 568, 571, 572, 573, 1478, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 1479, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 1480, 601, 602, 0, 598, 589, 1481, 603, 604,
	605, 606, 607, 608, 609, 610, 1482, 611, 686, 687,
	688, 689, 1483, 620, 1484, 612, 613, 614, 690, 615,
	691, 1485, 616, 617, 618, 619, 0, 621, 622, 1486,
	1487, 623, 624, 625, 627, 628, 626, 629, 1488, 630,
	1489, 0, 631, 632, 633, 692, 693, 694, 1490, 635,
	634, 636, 637, 695, 638, 639, 1491, 1492, 1493, 1494,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4197, 279, 281, 280, 282, 283,
	284, 285, 1416, 286, 287, 1417, 1418, 1419, 0, 1420,
	645, 1421, 1422, 1423, 1424, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 1425, 650, 298, 299, 300, 301, 302, 303, 1426,
	1427, 0, 304, 651, 652, 653, 1428, 305, 306, 654,
	1429, 1496, 1430, 307, 308, 309, 310, 311, 312, 313,
	0, 1431, 315, 316, 317, 314, 318, 1432, 319, 0,
	320, 321, 322, 323, 324, 325, 1433, 326, 327, 328,
	1214, 329, 330, 331, 1434, 1435, 1437, 1436, 1438, 1439,
	1440, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 1441, 342, 338, 340, 1442, 343, 341, 344, 1443,
	345, 346, 347, 1444, 1445, 348, 349, 350, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 1449, 276, 1450, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 1451,
	375, 376, 377, 1452, 1453, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1454, 390, 663, 1455, 664, 391, 1456, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 1217, 397, 398, 1457,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1458, 1216, 407, 668, 669, 1459, 670, 1460,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1461,
	420, 422, 421, 1462, 423, 672, 1221, 424, 425, 1222,
	1463, 426, 427, 428, 429, 430, 431, 434, 1464, 1465,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1466, 278,
	1225, 477, 478, 479, 1467, 673, 480, 674, 482, 483,
	1468, 0, 484, 0, 1469, 1470, 486, 487, 488, 1471,
	1472, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1473, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 1474, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 1475, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 1476, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 1477, 569, 570, 568, 571, 572, 573, 1478,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 1479, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 1480, 601, 602, 0, 598, 589,
	1481, 603, 604, 605, 606, 607, 608, 609, 610, 1482,
	611, 686, 687, 688, 689, 1483, 620, 1484, 612, 613,
	614, 690, 615, 691, 1485, 616, 617, 618, 619, 0,
	621, 622, 1486, 1487, 623, 624, 625, 627, 628, 626,
	629, 1488, 630, 1489, 0, 631, 632, 633, 692, 693,
	694, 1490, 635, 634, 636, 637, 695, 638, 639, 1491,
	1492, 1493, 1494, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4425, 279, 281, 280, 282, 283, 284, 285, 1416,
	286, 287, 1417, 1418, 1419, 0, 1420, 645, 1421, 1422,
	1423, 1424, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 1425, 650,
	298, 299, 300, 301, 302, 303, 1426, 1427, 0, 304,
	651, 652, 653, 1428, 305, 306, 654, 1429, 1496, 1430,
	307, 308, 309, 310, 311, 312, 313, 0, 1431, 315,
	316, 317, 314, 318, 1432, 319, 0, 320, 321, 322,
	323, 324, 325, 1433, 326, 327, 328, 1214, 329, 330,
	331, 1434, 1435, 1437, 1436, 1438, 1439, 1440, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 1441, 342,
	338, 340, 1442, 343, 341, 344, 1443, 345, 346, 347,
	1444, 1445, 348, 349, 350, 1446, 351, 352, 353, 1447,
	354, 355, 356, 1448, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 1449, 276, 1450, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 1451, 375, 376, 377,
	1452, 1453, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1454, 390, 663,
	1455, 664, 391, 1456, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 1457, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1458,
	1216, 407, 668, 669, 1459, 670, 1460, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1461, 420, 422, 421,
	1462, 423, 672, 1221, 424, 425, 1222, 1463, 426, 427,
	428, 429, 430, 431, 434, 1464, 1465, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1466, 278, 1225, 477, 478,
	479, 1467, 673, 480, 674, 482, 483, 1468, 0, 484,
	0, 1469, 1470, 486, 487, 488, 1471, 1472, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1473, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 1474, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	1475, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 1476, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 1477,
	569, 570, 568, 571, 572, 573, 1478, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 1479, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 1480, 601, 602, 0, 598, 589, 1481, 603, 604,
	605, 606, 607, 608, 609, 610, 1482, 611, 686, 687,
	688, 689, 1483, 620, 1484, 612, 613, 614, 690, 615,
	691, 1485, 616, 617, 618, 619, 0, 621, 622, 1486,
	1487, 623, 624, 625, 627, 628, 626, 629, 1488, 630,
	1489, 0, 631, 632, 633, 692, 693, 694, 1490, 635,
	634, 636, 637, 695, 638, 639, 1491, 1492, 1493, 1494,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4288, 279,
	281, 280, 282, 283, 284, 285, 1416, 286, 287, 1417,
	1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 1425, 650, 298, 299, 300,
	301, 302, 303, 1426, 1427, 0, 304, 651, 652, 653,
	1428, 305, 306, 654, 1429, 1496, 1430, 307, 308, 309,
	310, 311, 312, 313, 0, 1431, 315, 316, 317, 314,
	318, 1432, 319, 0, 320, 321, 322, 323, 324, 325,
	1433, 326, 327, 328, 1214, 329, 330, 331, 1434, 1435,
	1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 1441, 342, 338, 340, 1442,
	343, 341, 344, 1443, 345, 346, 347, 1444, 1445, 348,
	349, 350, 1446, 351, 352, 353, 1447, 354, 355, 356,
	1448, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 1449, 276,
	1450, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 1451, 375, 376, 377, 1452, 1453, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1454, 390, 663, 1455, 664, 391,
	1456, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 1457, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1458, 1216, 407, 668,
	669, 1459, 670, 1460, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1461, 420, 422, 421, 1462, 423, 672,
	1221, 424, 425, 1222, 1463, 426, 427, 428, 429, 430,
	431, 434, 1464, 1465, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1466, 278, 1225, 477, 478, 479, 1467, 673,
	480, 674, 482, 483, 1468, 0, 484, 0, 1469, 1470,
	486, 487, 488, 1471, 1472, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1473, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	1474, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 1475, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 1476, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 1477, 569, 570, 568,
	571, 572, 573, 1478, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 1479, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 1480, 601,
	602, 0, 598, 589, 1481, 603, 604, 605, 606, 607,
	608, 609, 610, 1482, 611, 686, 687, 688, 689, 1483,
	620, 1484, 612, 613, 614, 690, 615, 691, 1485, 616,
	617, 618, 619, 0, 621, 622, 1486, 1487, 623, 624,
	625, 627, 628, 626, 629, 1488, 630, 1489, 0, 631,
	632, 633, 692, 693, 694, 1490, 635, 634, 636, 637,
	695, 638, 639, 1491, 1492, 1493, 1494, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4127, 279, 281, 280, 282,
	283, 284, 285, 1416, 286, 287, 1417, 1418, 1419, 0,
	1420, 645, 1421, 1422, 1423, 1424, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 1425, 650, 298, 299, 300, 301, 302, 303,
	1426, 1427, 0, 304, 651, 652, 653, 1428, 305, 306,
	654, 1429, 1496, 1430, 307, 308, 309, 310, 311, 312,
	313, 0, 1431, 315, 316, 317, 314, 318, 1432, 319,
	0, 320, 321, 322, 323, 324, 325, 1433, 326, 327,
	328, 1214, 329, 330, 331, 1434, 1435, 1437, 1436, 1438,
	1439, 1440, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 1441, 342, 338, 340, 1442, 343, 341, 344,
	1443, 345, 346, 347, 1444, 1445, 348, 349, 350, 1446,
	351, 352, 353, 1447, 354, 355, 356, 1448, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 1449, 276, 1450, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	1451, 375, 376, 377, 1452, 1453, 1215, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1454, 390, 663, 1455, 664, 391, 1456, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 1217, 397, 398,
	1457, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1458, 1216, 407, 668, 669, 1459, 670,
	1460, 408, 409, 1218, 671, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1461, 420, 422, 421, 1462, 423, 672, 1221, 424, 425,
	1222, 1463, 426, 427, 428, 429, 430, 431, 434, 1464,
	1465, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1466,
	278, 1225, 477, 478, 479, 1467, 673, 480, 674, 482,
	483, 1468, 0, 484, 0, 1469, 1470, 486, 487, 488,
	1471, 1472, 489, 490, 675, 1226, 491, 1227, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1473, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 1474, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 1475, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 1476, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 1477, 569, 570, 568, 571, 572, 573,
	1478, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 1479, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 1480, 601, 602, 0, 598,
	589, 1481, 603, 604, 605, 606, 607, 608, 609, 610,
	1482, 611, 686, 687, 688, 689, 1483, 620, 1484, 612,
	613, 614, 690, 615, 691, 1485, 616, 617, 618, 619,
	0, 621, 622, 1486, 1487, 623, 624, 625, 627, 628,
	626, 629, 1488, 630, 1489, 0, 631, 632, 633, 692,
	693, 694, 1490, 635, 634, 636, 637, 695, 638, 639,
	1491, 1492, 1493, 1494, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3806, 279, 281, 280, 282, 283, 284, 285,
	1416, 286, 287, 1417, 1418, 1419, 0, 1420, 645, 1421,
	1422, 1423, 1424, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 1425,
	650, 298, 299, 300, 301, 302, 303, 1426, 1427, 0,
	304, 651, 652, 653, 1428, 305, 306, 654, 1429, 1496,
	1430, 307, 308, 309, 310, 311, 312, 313, 0, 1431,
	315, 316, 317, 314, 318, 1432, 319, 0, 320, 321,
	322, 323, 324, 325, 1433, 326, 327, 328, 1214, 329,
	330, 331, 1434, 1435, 1437, 1436, 1438, 1439, 1440, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 1441,
	342, 338, 340, 1442, 343, 341, 344, 1443, 345, 346,
	347, 1444, 1445, 348, 349, 350, 1446, 351, 352, 353,
	1447, 354, 355, 356, 1448, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 1449, 276, 1450, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 1451, 375, 376,
	377, 1452, 1453, 1215, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1454, 390,
	663, 1455, 664, 391, 1456, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 1217, 397, 398, 1457, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	1458, 1216, 407, 668, 669, 1459, 670, 1460, 408, 409,
	1218, 671, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1461, 420, 422,
	421, 1462, 423, 672, 1221, 424, 425, 1222, 1463, 426,
	427, 428, 429, 430, 431, 434, 1464, 1465, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1466, 278, 1225, 477,
	478, 479, 1467, 673, 480, 674, 482, 483, 1468, 0,
	484, 0, 1469, 1470, 486, 487, 488, 1471, 1472, 489,
	490, 675, 1226, 491, 1227, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 1473, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 1474, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 1475, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 1476, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	1477, 569, 570, 568, 571, 572, 573, 1478, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 1479, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 1480, 601, 602, 0, 598, 589, 1481, 603,
	604, 605, 606, 607, 608, 609, 610, 1482, 611, 686,
	687, 688, 689, 1483, 620, 1484, 612, 613, 614, 690,
	615, 691, 1485, 616, 617, 618, 619, 0, 621, 622,
	1486, 1487, 623, 624, 625, 627, 628, 626, 629, 1488,
	630, 1489, 0, 631, 632, 633, 692, 693, 694, 1490,
	635, 634, 636, 637, 695, 638, 639, 1491, 1492, 1493,
	1494, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3624,
	279, 281, 280, 282, 283, 284, 285, 1416, 286, 287,
	1417, 1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 1425, 650, 298, 299,
	300, 301, 302, 303, 1426, 1427, 0, 304, 651, 652,
	653, 1428, 305, 306, 654, 1429, 1496, 1430, 307, 308,
	309, 310, 311, 312, 313, 0, 1431, 315, 316, 317,
	314, 318, 1432, 319, 0, 320, 321, 322, 323, 324,
	325, 1433, 326, 327, 328, 1214, 329, 330, 331, 1434,
	1435, 1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 1441, 342, 338, 340,
	1442, 343, 341, 344, 1443, 345, 346, 347, 1444, 1445,
	348, 349, 350, 1446, 351, 352, 353, 1447, 354, 355,
	356, 1448, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 1449,
	276, 1450, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 1451, 375, 376, 377, 1452, 1453,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1454, 390, 663, 1455, 664,
	391, 1456, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 1217, 397, 398, 1457, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1458, 1216, 407,
	668, 669, 1459, 670, 1460, 408, 409, 1218, 671, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1461, 420, 422, 421, 1462, 423,
	672, 1221, 424, 425, 1222, 1463, 426, 427, 428, 429,
	430, 431, 434, 1464, 1465, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1466, 278, 1225, 477, 478, 479, 1467,
	673, 480, 674, 482, 483, 1468, 0, 484, 0, 1469,
	1470, 486, 487, 488, 1471, 1472, 489, 490, 675, 1226,
	491, 1227, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1473, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 1474, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 1475, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 1476, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 1477, 569, 570,
	568, 571, 572, 573, 1478, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 1479, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 1480,
	601, 602, 0, 598, 589, 1481, 603, 604, 605, 606,
	607, 608, 609, 610, 1482, 611, 686, 687, 688, 689,
	1483, 620, 1484, 612, 613, 614, 690, 615, 691, 1485,
	616, 617, 618, 619, 0, 621, 622, 1486, 1487, 623,
	624, 625, 627, 628, 626, 629, 1488, 630, 1489, 0,
	631, 632, 633, 692, 693, 694, 1490, 635, 634, 636,
	637, 695, 638, 639, 1491, 1492, 1493, 1494, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2657, 279, 281, 280,
	282, 283, 284, 285, 1416, 286, 287, 1417, 1418, 1419,
	0, 1420, 645, 1421, 1422, 1423, 1424, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 1425, 650, 298, 299, 300, 301, 302,
	303, 1426, 1427, 0, 304, 651, 652, 653, 1428, 305,
	306, 654, 1429, 1496, 1430, 307, 308, 309, 310, 311,
	312, 313, 0, 1431, 315, 316, 317, 314, 318, 1432,
	319, 0, 320, 321, 322, 323, 324, 325, 1433, 326,
	327, 328, 1214, 329, 330, 331, 1434, 1435, 1437, 1436,
	1438, 1439, 1440, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 1441, 342, 338, 340, 1442, 343, 341,
	344, 1443, 345, 346, 347, 1444, 1445, 348, 349, 350,
	1446, 351, 352, 353, 1447, 354, 355, 356, 1448, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 1449, 276, 1450, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 1451, 375, 376, 377, 1452, 1453, 1215, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1454, 390, 663, 1455, 664, 391, 1456, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 1217, 397,
	398, 1457, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1458, 1216, 407, 668, 669, 1459,
	670, 1460, 408, 409, 1218, 671, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1461, 420, 422, 421, 1462, 423, 672, 1221, 424,
	425, 1222, 1463, 426, 427, 428, 429, 430, 431, 434,
	1464, 1465, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1466, 278, 1225, 477, 478, 479, 1467, 673, 480, 674,
	482, 483, 1468, 0, 484, 0, 1469, 1470, 486, 487,
	488, 1471, 1472, 489, 490, 675, 1226, 491, 1227, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1473, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 1474, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 1475, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 1476,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 1477, 569, 570, 568, 571, 572,
	573, 1478, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 1479,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 1480, 601, 602, 0,
	598, 589, 1481, 603, 604, 605, 606, 607, 608, 609,
	610, 1482, 611, 686, 687, 688, 689, 1483, 620, 1484,
	612, 613, 614, 690, 615, 691, 1485, 616, 617, 618,
	619, 0, 621, 622, 1486, 1487, 623, 624, 625, 627,
	628, 626, 629, 1488, 630, 1489, 0, 631, 632, 633,
	692, 693, 694, 1490, 635, 634, 636, 637, 695, 638,
	639, 1491, 1492, 1493, 1494, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 1407, 0, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2282, 279, 281, 280, 282, 283, 284,
	285, 1416, 286, 287, 1417, 1418, 1419, 0, 1420, 645,
	1421, 1422, 1423, 1424, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	1425, 650, 298, 299, 300, 301, 302, 303, 1426, 1427,
	0, 304, 651, 652, 653, 1428, 305, 306, 654, 1429,
	1496, 1430, 307, 308, 309, 310, 311, 312, 313, 0,
	1431, 315, 316, 317, 314, 318, 1432, 319, 0, 320,
	321, 322, 323, 324, 325, 1433, 326, 327, 328, 1214,
	329, 330, 331, 1434, 1435, 1437, 1436, 1438, 1439, 1440,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	1441, 342, 338, 340, 1442, 343, 341, 344, 1443, 345,
	346, 347, 1444, 1445, 348, 349, 350, 1446, 351, 352,
	353, 1447, 354, 355, 356, 1448, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 1449, 276, 1450, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 1451, 375,
	376, 377, 1452, 1453, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1454,
	390, 663, 1455, 664, 391, 1456, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 1217, 397, 398, 1457, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1458, 1216, 407, 668, 669, 1459, 670, 1460, 408,
	409, 1218, 671, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1461, 420,
	422, 421, 1462, 423, 672, 1221, 424, 425, 1222, 1463,
	426, 427, 428, 429, 430, 431, 434, 1464, 1465, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1466, 278, 1225,
	477, 478, 479, 1467, 673, 480, 674, 482, 483, 1468,
	0, 484, 0, 1469, 1470, 486, 487, 488, 1471, 1472,
	489, 490, 675, 1226, 491, 1227, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1473,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 1474, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 1475, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 1476, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 1477, 569, 570, 568, 571, 572, 573, 1478, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 1479, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 1480, 601, 602, 0, 598, 589, 1481,
	603, 604, 605, 606, 607, 608, 609, 610, 1482, 611,
	686, 687, 688, 689, 1483, 620, 1484, 612, 613, 614,
	690, 615, 691, 1485, 616, 617, 618, 619, 0, 621,
	622, 1486, 1487, 623, 624, 625, 627, 628, 626, 629,
	1488, 630, 1489, 0, 631, 632, 633, 692, 693, 694,
	1490, 635, 634, 636, 637, 695, 638, 639, 1491, 1492,
	1493, 1494, 640, 641, 696, 642, 643, 644, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 1416, 286, 287, 1417, 1418, 1419, 0, 1420,
	645, 1421, 1422, 1423, 1424, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 1425, 650, 298, 299, 300, 301, 302, 303, 1426,
	1427, 0, 304, 651, 652, 653, 1428, 305, 306, 654,
	1429, 1496, 1430, 307, 308, 309, 310, 311, 312, 313,
	0, 1431, 315, 316, 317, 314, 318, 1432, 319, 0,
	320, 321, 322, 323, 324, 325, 1433, 326, 327, 328,
	1214, 329, 330, 331, 1434, 1435, 1437, 1436, 1438, 1439,
	1440, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 1441, 342, 338, 340, 1442, 343, 341, 344, 1443,
	345, 346, 347, 1444, 1445, 348, 349, 350, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 1449, 276, 1450, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 1451,
	375, 376, 377, 1452, 1453, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1454, 390, 663, 1455, 664, 391, 1456, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 1217, 397, 398, 1457,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1458, 1216, 407, 668, 669, 1459, 670, 1460,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1461,
	420, 422, 421, 1462, 423, 672, 1221, 424, 425, 1222,
	1463, 426, 427, 428, 429, 430, 431, 434, 1464, 1465,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1466, 278,
	1225, 477, 478, 479, 1467, 673, 480, 674, 482, 483,
	1468, 0, 484, 0, 1469, 1470, 486, 487, 488, 1471,
	1472, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1473, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 1474, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 1475, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 1476, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 1477, 569, 570, 568, 571, 572, 573, 1478,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 1479, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 1480, 601, 602, 0, 598, 589,
	1481, 603, 604, 605, 606, 607, 608, 609, 610, 1482,
	611, 686, 687, 688, 689, 1483, 620, 1484, 612, 613,
	614, 690, 615, 691, 1485, 616, 617, 618, 619, 0,
	621, 622, 1486, 1487, 623, 624, 625, 627, 628, 626,
	629, 1488, 630, 1489, 0, 631, 632, 633, 692, 693,
	694, 1490, 635, 634, 636, 637, 695, 638, 639, 1491,
	1492, 1493, 1494, 640, 641, 696, 642, 643, 644, 2632,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 2629, 286, 287, 0, 0,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 2630, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 2628, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 2631, 0, 0, 0, 0, 0,
	0, 0, 1133, 2627, 0, 1093, 1131, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 238, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 240,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 1646, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 232, 640, 641, 696, 642, 643, 644, 1107, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 1907, 1905,
	0, 0, 1131, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 238, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 240, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	1646, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 232, 640, 641, 696, 642, 643,
	644, 1107, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 1907, 3265, 0, 0, 1131, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 238, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 240, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 1646, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 232, 640, 641,
	696, 642, 643, 644, 1107, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 0, 1907, 1905, 0, 0, 1131, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 2763,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 2768, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 2764, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 2765, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 2677, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 1133, 2675, 0, 2674, 1131, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	1133, 2672, 0, 2671, 1131, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 1133, 2669, 0, 2668,
	1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 1133, 2666, 0, 1746, 1131, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 1745, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 1096, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	1111, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 0,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 4791, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 1111, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 0, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 2509, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 2508, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 1111, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 4515, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 1111, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 0, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	4092, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 0, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 1976, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 3784,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 0, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 1976, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 2768, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 1133, 1905,
	0, 2773, 1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 2771, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 2759, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 2747, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 2745,
	0, 2736, 2743, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	2739, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 2740, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 2741, 444, 2738, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 2742, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	2737, 644, 1107, 0, 0, 0, 2733, 0, 2736, 2743,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 2739, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	2740, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 2741, 444, 2738, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 2742, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 2737, 644, 1107,
	0, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 0,
	0, 0, 0, 0, 1913, 0, 1133, 0, 0, 0,
	1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 2488, 286, 287, 0, 0,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 2450, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 2423, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	1751, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 1680, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 1675, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 1662, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 1657, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 1558, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1557, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 1552, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1551, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 1545,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 1507, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 1511, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 1512, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 1510, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 1356, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 0, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 4839, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 4838, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 0, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 4837, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 4839, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 4838, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 4444, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 4445,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	4443, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 0, 0,
	1149, 1121, 1122, 1123, 3232, 3233, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 3230, 3231, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 0,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 2496, 2497, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 0, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 0, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 2755, 0, 0, 0, 0,
	0, 0, 2753, 2754, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 0, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 3225, 3226, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 0, 0, 0, 0, 0, 0, 2159,
	2160, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 0, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	4839, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 0,
	1176, 0, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 0, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 4838, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	1093, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 0, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 1172, 0, 304, 651, 652, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 668,
	669, 0, 670, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1257, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 0, 278, 1225, 477, 478, 479, 0, 1177,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 1263,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 1265, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 238, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 0, 598, 589, 240, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 1646, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 232, 640, 641, 696,
	642, 643, 644, 1271, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 1261, 0, 2000, 0, 1173, 0, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 1172, 0, 304, 651, 652,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	668, 669, 0, 670, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1257, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 0, 278, 1225, 477, 478, 479, 0,
	1177, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	1263, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 1265, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 238, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 0, 598, 589, 240, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 1646, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 232, 640, 641,
	696, 642, 643, 644, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3389, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 0, 2000, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1173, 0, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	1172, 0, 304, 651, 652, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 668, 669, 0, 670, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1257,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 278,
	1225, 477, 478, 479, 0, 1177, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 1263, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 1265, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1253, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1261, 0, 1259,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1173, 0, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 1172, 0, 304, 651, 652,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	668, 669, 0, 670, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1257, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 0, 278, 1225, 477, 478, 479, 0,
	1177, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	1263, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 1265, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 1261, 0, 1259, 0, 1173, 0, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 1172, 0, 304, 651,
	652, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 668, 669, 0, 670, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1257, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 0, 278, 1225, 477, 478, 479,
	0, 1177, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 1263, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 1265, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 1261, 0, 1259, 0, 1173, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 1172, 0, 304,
	651, 652, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 278, 1225, 477, 478,
	479, 0, 1177, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 4259, 0, 1173, 0,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 1172, 0,
	304, 651, 652, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 668, 669, 0, 670, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 0, 278, 1225, 477,
	478, 479, 0, 1177, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 682, 1265, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 273, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 2600, 2601,
	2602, 2619, 2620, 2621, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 2622, 0,
	645, 0, 0, 0, 0, 288, 289, 1897, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 1882, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	2612, 0, 315, 316, 317, 314, 318, 0, 319, 2608,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 2613, 2614, 2615,
	2616, 371, 372, 373, 660, 0, 0, 2607, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 2617, 2618, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 2610, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 2611,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 1881, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 1572, 2597,
	2598, 2599, 2623, 2609, 2603, 0, 2605, 2606, 2604, 2591,
	2592, 2593, 2594, 2595, 2596, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 1496, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1216, 407, 668, 669, 0, 670, 0,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 0,
	1225, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 238, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	240, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 1646, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 232, 640, 641, 696, 642, 643, 644, 0,
	1643, 233, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 193,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 1496, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1216, 407, 668,
	669, 0, 670, 0, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 0, 0, 1225, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 238, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 240, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 1646, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 232, 640, 641, 696,
	642, 643, 644, 1572, 1571, 233, 0, 0, 0, 1569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 193, 0, 645, 0, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 1496, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1216, 407,
	668, 669, 0, 670, 0, 408, 409, 1218, 671, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 0, 0, 1225, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1572, 1571, 0, 0, 0, 0,
	1569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 1670, 0, 645, 0, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 1496, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1216,
	407, 668, 669, 0, 670, 0, 408, 409, 1218, 671,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 0, 0, 1225, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1572, 1571, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 3702, 0, 645, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 1496, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 0, 1225, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 2364, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1572, 2274, 0, 0,
	0, 0, 2275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 1670, 0, 645, 0,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 1496,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1216, 407, 668, 669, 0, 670, 0, 408, 409,
	1218, 671, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 2273, 422,
	421, 0, 423, 672, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 0, 0, 1225, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1572, 1571, 0,
	0, 0, 0, 1569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 1670, 0, 645,
	0, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	1496, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1216, 407, 668, 669, 0, 670, 0, 408,
	409, 1218, 671, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 0, 0, 1225,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1093, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 1652, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 238, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 240, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	1646, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 273, 0, 232, 640, 641, 696, 642, 643,
	644, 0, 0, 233, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 193, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 273, 3139, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 2014, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 5004, 0, 1173, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 1172, 0, 304,
	651, 652, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 278, 1225, 477, 478,
	479, 0, 1177, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 3652, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 1640, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 273, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 3127, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 273, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 3809, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 923, 0, 824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 2351, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 831, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 921, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 829, 603, 604, 605, 606, 607, 830, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	2058, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 834, 0, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 0, 2064, 0, 296,
	2054, 297, 2070, 0, 2077, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 2080, 2081, 0, 0, 305,
	306, 0, 0, 1496, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 1196, 337,
	339, 2068, 2067, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 2066, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 2075, 2076, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1216, 407, 2061, 2062, 0,
	2057, 0, 408, 409, 1218, 0, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	0, 0, 1225, 477, 478, 479, 0, 0, 480, 2069,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 1226, 491, 1227, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 2051, 505, 506, 507, 2052,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 2065,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 2063, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 2079, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 2071, 2072, 2073, 2074, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 2055, 2078, 0, 635, 634, 636, 637, 0, 638,
	639, 0, 0, 0, 0, 640, 641, 0, 642, 643,
	644, 824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 3929, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 2045, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 831, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	3928, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 829, 603, 604, 605, 606, 607, 830,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	3927, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 824, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 2085, 286, 287,
	0, 0, 0, 0, 834, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 831,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 2084, 564, 565, 566, 567, 0, 2086, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 829, 603, 604, 605, 606,
	607, 830, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 2083, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 824, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 2036,
	286, 287, 0, 0, 0, 0, 834, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 831, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 2035, 564, 565, 566, 567, 0,
	2037, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 829, 603, 604,
	605, 606, 607, 830, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 2034, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 822, 0, 824, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 834, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 831, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	829, 603, 604, 605, 606, 607, 830, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	824, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 834, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 831, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 829, 603, 604, 605, 606, 607, 830, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 824, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 834, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 831, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 2402, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 2403, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 829, 603, 604, 605, 606, 607,
	830, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 2404, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 273, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 834, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 1572, 1571, 0, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 1496, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1216, 407, 668, 669,
	0, 670, 0, 408, 409, 1218, 671, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 0, 0, 1225, 477, 478, 479, 4017, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1572, 1571, 0, 0, 0, 0, 1569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 1496, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1216, 407, 668,
	669, 0, 670, 0, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 0, 0, 1225, 477, 478, 479, 3602, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1700, 0, 1572, 1571, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 1496, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 1699, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 0, 1225, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 1698, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 1697, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1565, 0, 1572, 1571,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 1496, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 1567, 666, 667, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1216, 407, 668, 669, 0, 670, 0,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 0,
	1225, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1572,
	1571, 0, 0, 0, 0, 1569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 1496, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1216, 407, 668, 669, 0, 670,
	0, 408, 409, 1218, 671, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 0,
	0, 1225, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1572, 1571, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 1496, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1216, 407, 668, 669, 0,
	670, 0, 408, 409, 1218, 671, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	0, 0, 1225, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1572, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 1496, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1216, 407, 668, 669,
	0, 670, 0, 408, 409, 1218, 671, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 0, 0, 1225, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	2927, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 3644, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 2931, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 3643,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 2930, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 3640, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 3642, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 3639, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	2929, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 3641, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 2927, 305, 306, 654, 0, 0, 2921, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 2923, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 2931, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 2930, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 2920, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 2929, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 2928, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1777, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	1776, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 1775, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 1778, 556, 563, 564, 565, 566, 567,
	0, 1774, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 1772, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	1773, 634, 636, 637, 695, 638, 639, 1500, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 1502, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 1263, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1497, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 1499, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 1263,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1403, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1405,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 1263, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 729, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 728,
	284, 285, 717, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 720, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	726, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 722, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 716,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 717, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 720,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 721, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 722, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 717, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	720, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 721, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 722, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 717, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 720, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 4027, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 722, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 1263, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 3547, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 3097, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 3096, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 2371,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 2309, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 2316, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 2315,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 2302, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 2304, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 2267, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 1263, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1618, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 1617, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1520, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 1513, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 1515, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1339,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 1338, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1329, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 1328, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 1326, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 1325, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1321, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 1320, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 698, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 264, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 273, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 720, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	721, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 722, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 2411, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 2409, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 2407, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 2322, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 2110, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 2104, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 908, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 907, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 906,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 3643, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 4340, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1367,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	1370, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 1368, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 789, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 788, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	787, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	1371, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 785, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1367, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 1370, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 1368, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 789, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 788, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 787, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 1371, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 785, 687, 688,
	689, 0, 620, 0, 612, 1369, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 707, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 706, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 705, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 3139,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	4356, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 4639, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 4231,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 3978, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 2808, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 3139, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 3136, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 2228, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 788,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 787, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 785, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	2381, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 2369, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1673, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1666, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 779, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 775, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 780, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 789, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 788, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 787, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 1651, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 785, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1624,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 1623, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1608, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 1606, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 1601, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1578, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 1576, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1563, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1525, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 1505, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1373, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 788, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 787, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 785, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1344, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1343,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 1335, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 1334, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 1287, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 794, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 779, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 775, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 774, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 780, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 789, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 788, 548, 549,
	550, 551, 776, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 787, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 777, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 785, 687, 688, 689,
	0, 620, 0, 612, 781, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 768, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	769, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 731, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	724, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 702, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 273, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 3672, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 788, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 787, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 785, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 3587, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 3563, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 3560, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 3514, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 3512, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 3500, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 3497,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	3107, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 273, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 769, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 2340, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	0, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 1306, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 1236, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 0, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 0, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 0, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 0, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1614, 0, 1351, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 0, 297, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 0,
	0, 0, 0, 305, 306, 0, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 1353, 332, 333, 334,
	335, 336, 0, 337, 339, 0, 0, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 1613, 0,
	0, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 0, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 0, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 0, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 0,
	0, 491, 0, 0, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 0, 508, 509, 510, 0, 511, 0,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 0, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 0, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1354, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	0, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 0, 592, 593, 594, 595, 0, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 0, 0, 0,
	0, 0, 620, 0, 612, 613, 614, 0, 615, 0,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 0, 0, 0, 0, 635, 634,
	636, 637, 0, 638, 639, 1528, 0, 1351, 0, 640,
	641, 0, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 0, 297, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 0, 0, 0, 0, 305, 306, 0, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 1353,
	332, 333, 334, 335, 336, 0, 337, 339, 0, 0,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 0, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 0, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 0, 0, 0, 391, 0, 392, 393, 394, 395,
	396, 1527, 0, 0, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 0, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 0, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 0, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 0, 0, 491, 0, 0, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 0, 508, 509, 510,
	0, 511, 0, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 0, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 0, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1354, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 0, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 0, 592, 593, 594, 595,
	0, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	0, 0, 0, 0, 0, 620, 0, 612, 613, 614,
	0, 615, 0, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 0, 0, 0,
	0, 635, 634, 636, 637, 0, 638, 639, 1349, 0,
	1351, 0, 640, 641, 0, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1353, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1348, 0, 0, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1354, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 0, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 0, 0, 0, 0, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 0, 0, 0, 635, 634, 636, 637, 0, 638,
	639, 2124, 0, 1351, 0, 640, 641, 0, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 0, 297, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 0, 0,
	0, 0, 305, 306, 0, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 1353, 332, 333, 334, 335,
	336, 0, 337, 339, 0, 0, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 0,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 0, 0, 0,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	0, 0, 0, 0, 0, 408, 409, 0, 0, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	0, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 0, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 0, 0,
	491, 0, 0, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 0, 508, 509, 510, 0, 511, 0, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 0, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 0, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1354, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 0,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 0, 592, 593, 594, 595, 0, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 0, 0, 0, 0,
	0, 620, 0, 612, 613, 614, 0, 615, 0, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 0, 0, 0, 0, 635, 634, 636,
	637, 0, 638, 639, 2091, 0, 1351, 0, 640, 641,
	0, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 0, 297, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 1353, 332,
	333, 334, 335, 336, 0, 337, 339, 0, 0, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 0, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 0, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 0, 0, 491, 0, 0, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 0, 508, 509, 510, 0,
	511, 0, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 0, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 0, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1354, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 0, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 0, 592, 593, 594, 595, 0,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 0,
	0, 0, 0, 0, 620, 0, 612, 613, 614, 0,
	615, 0, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 0, 0, 0, 0,
	635, 634, 636, 637, 1351, 638, 639, 0, 0, 0,
	0, 640, 641, 0, 642, 643, 644, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 0, 297, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 0,
	0, 0, 0, 305, 306, 0, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 1353, 332, 333, 334,
	335, 336, 0, 337, 339, 0, 0, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 0, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 0, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 0, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 0,
	0, 491, 0, 0, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 0, 508, 509, 510, 0, 511, 0,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 0, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 0, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1354, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	0, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 0, 592, 593, 594, 595, 0, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 0, 0, 0,
	0, 0, 620, 0, 612, 613, 614, 0, 615, 0,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 0, 0, 0, 0, 635, 634,
	636, 637, 0, 638, 639, 0, 0, 0, 0, 640,
	641, 0, 642, 643, 644, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 1857, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 1826, 1827, 1876, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 1863, 1857, 0, 0, 0, 0,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	1848, 1876, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 1867, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1867, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 1856, 1858, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 0, 1849, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 1868, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 1850, 1826, 1827, 1876,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 1881, 0, 1863,
	1857, 0, 0, 1868, 0, 1828, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 1848, 1876, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1881, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 0,
	4767, 0, 1851, 1852, 1853, 1854, 1866, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 0, 4763, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1867, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 0, 0, 1849,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 1857, 0,
	0, 1868, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 1850, 1826, 1827, 1876, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 1881, 0, 1863, 1857, 0, 0, 1868, 0,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	1848, 1876, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 1881,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 4665, 0, 1851, 1852, 1853,
	1854, 1866, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 4619, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 1867, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1867, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 1856, 1858, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 0, 1849, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 1868, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 1850, 1826, 1827, 1876,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 1881, 0, 1863,
	1857, 0, 0, 1868, 0, 1828, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 1848, 1876, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1881, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 0,
	4618, 0, 1851, 1852, 1853, 1854, 1866, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 0, 4428, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1867, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 0, 0, 1849,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 1857, 0,
	0, 1868, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 1850, 1826, 1827, 1876, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 1881, 0, 1863, 1857, 0, 0, 1868, 0,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	1848, 1876, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 1881,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 4255, 0, 1851, 1852, 1853,
	1854, 1866, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 4174, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 1867, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1867, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 1856, 1858, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 0, 1849, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 1868, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 1850, 1826, 1827, 1876,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 1881, 0, 1863,
	1857, 0, 0, 1868, 0, 1828, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 1848, 1876, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1881, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 0,
	4173, 0, 1851, 1852, 1853, 1854, 1866, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 0, 4172, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1867, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 0, 0, 1849,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 1857, 0,
	0, 1868, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 1850, 1826, 1827, 1876, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 1881, 0, 1863, 1857, 0, 0, 1868, 0,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	1848, 1876, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 1881,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 3814, 0, 1851, 1852, 1853,
	1854, 1866, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 3307, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 1867, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1867, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 1856, 1858, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 0, 1849, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 1868, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 1850, 1826, 1827, 1876,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 1881, 0, 1863,
	1857, 0, 0, 1868, 0, 1828, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 1848, 1876, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1881, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 0,
	3306, 0, 1851, 1852, 1853, 1854, 1866, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 0, 3305, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 1867, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1867, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 0, 0, 1849,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 1868, 1863,
	1857, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 2191, 0, 0, 0,
	0, 1845, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 3304, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 2189, 0,
	3269, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 1857, 0, 0, 1867, 0,
	0, 1877, 1829, 0, 0, 0, 0, 0, 1856, 1858,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 0, 1882, 0,
	0, 0, 0, 1843, 1844, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 1865, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 1879, 0, 1834, 4914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 1877, 0, 1863, 1857,
	0, 0, 0, 1856, 1858, 0, 1829, 2190, 1855, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 1873,
	0, 1874, 0, 0, 0, 0, 0, 0, 1843, 1844,
	0, 1850, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 1868, 0,
	1845, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2188,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 0, 0, 1834, 0,
	3369, 0, 0, 0, 0, 3368, 0, 0, 0, 4913,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 1867, 0, 0,
	1877, 0, 0, 1855, 0, 0, 0, 1856, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 1874, 1850, 0, 0, 0,
	0, 0, 1843, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 1849, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 1863, 1857, 0, 0, 0,
	0, 3240, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 1879, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 0, 3241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 2781, 0, 0, 0, 0, 1868, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 1857, 0, 1867, 0, 2780, 1877, 1881, 1829,
	0, 0, 0, 0, 1856, 1858, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 1874, 0, 0, 1882, 0, 0, 0, 1843,
	1844, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 1865, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 1879, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 1877, 0, 1863, 1857, 0, 0, 0,
	1856, 1858, 0, 1829, 1855, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 1873, 0, 1874, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 1868, 0, 0, 1845, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 4522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 1867, 0, 0, 1877, 0, 0,
	1855, 0, 0, 0, 1856, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 1874, 1850, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 1826, 1827,
	1868, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	1863, 1857, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 1881, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 1875, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 1864, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 1850, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1857, 0, 0, 1867,
	0, 0, 1877, 1829, 0, 0, 0, 0, 0, 1856,
	1858, 0, 1876, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 1874, 0, 1882,
	0, 0, 0, 0, 1843, 1844, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 1865, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 1090, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 1879, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 1877, 0, 1863,
	1857, 0, 0, 0, 1856, 1858, 0, 1829, 0, 1855,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	1873, 0, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 1850, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 1868,
	0, 1845, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 1867, 0,
	0, 1877, 0, 0, 1855, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 1850, 0, 0,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 1826, 1827, 1868, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 1863, 1857, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 1881, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4299, 0, 0, 0, 0, 1882, 0,
	0, 0, 1875, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 1864, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 1850, 0, 0, 1834, 0, 3999, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	1857, 0, 0, 1867, 0, 0, 1877, 1829, 0, 0,
	0, 0, 0, 1856, 1858, 0, 1876, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 1882, 0, 0, 0, 4000, 1843, 1844,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 1865, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 1879, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 1877, 0, 1863, 1857, 0, 0, 0, 1856, 1858,
	0, 1829, 0, 1855, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 1873, 0, 1874, 0, 0, 0,
	0, 0, 0, 1843, 1844, 0, 1850, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 1868, 0, 1845, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	3375, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 1867, 0, 0, 1877, 0, 0, 1855, 0,
	0, 0, 1856, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	1874, 1850, 0, 0, 0, 0, 0, 1843, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1826, 1827, 1868, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 0, 3370, 0, 0, 1829, 0, 0, 1881,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 3795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 1875, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 1864, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 1850, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 1857, 0, 0, 1867, 0, 0,
	1877, 1829, 0, 0, 0, 0, 0, 1856, 1858, 0,
	1876, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 1874, 0, 1882, 0, 0,
	0, 0, 1843, 1844, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	1865, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 1879, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 1856, 1858, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	1874, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 1868, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 0, 3308, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 1875, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 1864, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 1850, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 1857, 0, 0, 1867, 0, 0,
	1877, 1829, 0, 0, 0, 0, 0, 1856, 1858, 0,
	1876, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 1874, 0, 1882, 0, 0,
	0, 0, 1843, 1844, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	1865, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 1879, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 1877, 0, 1863, 1857, 0,
	0, 0, 1856, 1858, 0, 1829, 0, 1855, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 1873, 0,
	1874, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	1850, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 1868, 0, 1845,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 1867, 0, 0, 1877,
	0, 0, 1855, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 1850, 0, 0, 0, 0,
	0, 1843, 1844, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 1865,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 1849, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 973, 0, 1022, 2353, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 981, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 0, 0, 996, 0, 979,
	978, 0, 0, 0, 0, 0, 1855, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 998, 0, 0, 0, 0, 0, 980, 0, 1850,
	0, 0, 983, 0, 0, 0, 0, 1033, 0, 0,
	0, 0, 0, 0, 0, 0, 993, 994, 0, 0,
	0, 0, 0, 0, 0, 1011, 1868, 1867, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 1856, 1858, 0,
	0, 0, 0, 1023, 985, 0, 0, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 1843, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 987, 0, 0, 0, 0, 0, 0,
	1865, 0, 1020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	989, 0, 0, 0, 0, 0, 0, 0, 977, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 990, 991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 999, 997, 0, 0, 0,
	0, 0, 0, 992, 0, 0, 0, 1008, 0, 0,
	1028, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1030, 1019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 0, 0, 1032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 982,
	0, 0, 0, 1015, 1016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1018, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1025, 1013, 0, 0, 0, 0, 0, 0, 0,
	1031, 1009, 0, 0, 1002, 1000, 0, 1005, 0, 0,
	1866, 0, 0, 1006, 0, 0, 975, 0, 1026, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	976, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 1007, 0, 0, 0, 0, 0,
	1004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1029, 0, 0, 0, 0, 0, 0, 0, 1010, 0,
	0, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1014,
}

var sqlPact = [...]int{
	305, -1000, -1000, -1000, -1000, 189, -1000, -1000, 188, 187,
	185, 174, 172, 171, 169, 167, 166, 165, 164, -1000,
	-1000, -1000, -1000, -1000, -1000, 161, -1000, -1000, 158, -1000,
	157, 156, 154, -1000, -1000, 151, -1000, 150, -1000, -1000,
	-1000, -1000, 149, 148, 147, 92112, 91549, 92673, 2423, 116281,
	99413, 2088, 81427, 115718, 80864, 115155, 2275, 11505, 114592, 2869,
	146, -1000, 114029, 144, 143, 141, -1000, 113466, -1000, 2019,
	-1000, 139, -1000, 6717, 71254, 138, 136, 131, 127, 2434,
	123, -1000, 122, 121, -1000, -1000, 119, -1000, 12323, 1692,
	-1000, 115, 114, -1000, 420, 97163, 113, 111, 110, 2591,
	109, 108, 68435, 106, 105, 104, 2559, 3035, -1000, -1000,
	2233, -1000, -1000, 103, 100, 97, 96, 95, 94, 93,
	91, 90, 88, 86, 85, 84, -1000, 82, 81, 77,
	76, 75, -1000, 74, 73, 71, -1000, 68, -1000, 67,
	65, 61, 60, 58, 54, 51, 49, 48, 47, 46,
	45, 44, 43, 136503, -1000, -1000, 42, 2071, 1770, 1765,
	1764, 1756, 1755, 990, 41, 39, 33, 32, 30, 26,
	25, 24, 23, 16, 14, 13, 7, 6, 4, 3,
	2, 0, 133, -1, -2, -3, -4, -5, -14, -15,
	2586, -1000, 1746, 1436, 31620, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 124696, 116842, -16, -67, -18, -1000, 3441, 1021,
	56499, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 263,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 439,
	2324, 717, -1000, -1000, -1000, 112905, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2422, -64, -1000, 2171, -1000, -1000,
	-1000, -1000, -1000, 716, -1000, 2421, 2364, 277, 2360, -1000,
	-1000, -1000, 3506, 2574, 3916, 3915, 3913, 3912, 3911, 124135,
	1976, 3910, 2638, 3909, 3907, 3903, 3902, 3901, 3899, 3898,
	-1000, 90986, 1089, 90423, 89860, 3516, 112344, 89297, 111781, 126946,
	48411, 1187, 3502, -1000, -1000, -1000, -1000, -1000, -1000, 116842,
	-1000, 1076, -1000, -1000, 3897, 2240, 715, 98850, -1000, -1000,
	111218, 1881, -1000, -1000, -1000, 935, 1210, 33351, 33351, 33351,
	238, -1000, -1000, -1000, -1000, -1000, -1000, 3896, 3895, 3891,
	3890, 3889, -1000, -1000, 80301, 24513, 79738, 79175, 110655, 47834,
	88734, 88171, 3888, 3887, 3885, 110092, 126383, 3631, 3630, 1075,
	2169, 1517, -1000, -1000, -1000, -1000, -1000, -1000, -40, 72940,
	3677, 116842, -1000, 232, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 47257, 543, 46680, 810, 46103, 686, 109529, -1000, -1000,
	-1000, -1000, 75234, -1000, 108966, 2572, 3880, 3878, 1228, 3877,
	3398, 1965, 3874, 2042, 1355, 3872, 3870, 3868, 3867, 3866,
	3865, 3864, 1608, 108403, 3102, 1652, 107840, 1957, 125820, 1073,
	87608, 92673, 2789, 107277, 1582, 1570, -1000, -1000, -1000, -1000,
	3216, 3028, 3020, 1381, -1000, -1000, -1000, -1000, 59928, 7869,
	7588, -1000, -1000, 11630, 106714, 62783, 92673, 92673, -1000, -1000,
	-1000, -1000, -1000, -1000, 45526, 463, 44949, 1186, 106151, -1000,
	-1000, 60499, 3037, -1000, -1000, -1000, -1000, -1000, 105588, 44372,
	371, 43795, 1140, 116842, -1000, 3101, 2074, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2803, 1700, 3679, 2879, 74661,
	2180, 1434, 3455, 3214, 3213, 1526, 2163, 3211, 3862, 2730,
	3210, 3207, 3204, 3193, 3192, 1799, 2696, 366, 2688, 31043,
	3082, 1914, 43218, 1640, 1539, 3188, 3187, 3742, 2142, 2148,
	2159, 78612, 3861, 3860, 3432, 3185, 3184, 2939, 3178, -1000,
	3036, 1604, 228, -1000, -1000, -1000, -1000, -1000, -1000, 1501,
	-1000, -1000, -1000, -1000, -1000, 83110, -1000, -1000, 1876, -1000,
	-1000, 1876, -1000, -1000, -1000, -1000, -1000, 1495, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1746, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2814, -1000, 2228, -1000, -1000, 2606, 3414, 3414, 3414,
	3501, 428, 415, -1000, 133, -1000, -1000, 136134, -1000, -1000,
	48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988, 2278, -1000,
	714, -1000, -1000, 759, -1000, 712, 650, 555, -1000, -1000,
	-1000, -1000, -1000, -1000, 708, -1000, -1000, -1000, -1000, -1000,
	-1000, 3677, -1000, 27449, -1000, -1000, -1000, 391, 707, 48988,
	-1000, -1000, 3752, 3750, 832, -1000, 226, 947, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3096, 706, 705, -1000, 704, 703, 702, 700, 699, -1000,
	698, -1000, 696, 688, 683, 682, 678, 677, 675, 673,
	-1000, 2200, -1000, -1000, -1000, -1000, -1000, -1000, 630, 629,
	629, 629, -1000, 1065, -1000, -1000, -1000, 330, 627, 253,
	622, 620, 607, -1000, 672, 671, 669, 667, 665, 662,
	659, 657, 656, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1062, -1000, -1000, -1000, -1000, -41, 116842, -1000, 439, -41,
	-1000, -1000, 654, -1000, 35659, 35659, 35659, -1000, -1000, 2418,
	48988, -1000, 2521, -1000, -32, -32, 902, 58212, -1000, 55329,
	902, 873, 752, 63918, -1000, 3034, -1000, -1000, 651, 224,
	-1000, -1000, -1000, -1000, 25084, 3033, 116842, 116842, 116842, 92673,
	92673, 92673, 116842, 3859, 3195, 48988, -1000, -1000, 70691, 128630,
	93234, -1000, -1000, 3603, 68996, 70129, 3093, 128630, 3092, 128072,
	3858, -1000, -1000, -1000, -1000, -1000, 3273, 3857, 3856, 3855,
	-1000, 116842, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 233,
	3269, -1000, -1000, 96600, 233, 3268, -1000, 233, 3267, -1000,
	96039, -1000, -1000, 2393, 3266, -1000, -1000, 250, 3263, -1000,
	-1000, -1000, 237, 3261, -1000, -1000, 221, -148, 3258, -1000,
	-1000, -1000, -1000, -1000, -1000, 136134, -1000, -1000, -1000, 127509,
	-1000, 3429, -1000, 116842, -1000, 48988, -1000, -1000, 3597, 1555,
	3448, 3542, -1000, -1000, -50, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2618, 2599, 1162, 2440, -1000, 3320, 1492, 33351,
	3382, -1000, -1000, -1000, -1000, -1000, 215, 25084, -1000, -1000,
	-1000, -1000, -1000, -1000, 5724, 3257, 1624, -1000, 2439, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2119, 3256,
	-1000, 2137, 3255, 2015, -1000, -1000, 2139, -1000, 132716, 1389,
	-1000, -1000, -1000, -1000, 2277, 3254, -30, -1000, -1000, 2673,
	-1000, -1000, -1000, -1000, 2143, -1000, 1358, 3252, -1000, 2875,
	2875, 87045, 3230, 62212, 60499, 72940, -44, -1000, -1000, -1000,
	-1000, -164, -1000, 23936, 136134, -1000, -1000, -1000, -1000, 1936,
	136134, 875, -1000, -1000, 3241, -1000, 136134, 871, -1000, -1000,
	3240, -1000, 2693, -1000, 3089, -1000, -1000, 2529, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2528, -1000, -1000, 3854,
	-1000, -1000, 3853, -1000, 3852, 3850, 3849, -1000, 1850, 2154,
	3848, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 86484,
	2409, -1000, -1000, 85358, 3085, -1000, 2527, 3539, -1000, 85921,
	1071, -1000, 1022, 2526, -1000, 95478, 986, 2525, -1000, 3847,
	3509, 2823, 1022, 2523, -1000, -1000, -1000, -1000, -1000, 989,
	-1000, 66175, -1000, 66175, -1000, 1785, -1000, 123574, -32, 92673,
	3677, -1000, -70, -1000, -1000, -1000, 1021, -1000, 59354, -1000,
	59354, 98287, 75805, 968, 3032, 67862, 135940, -1000, 1044, -1000,
	-1000, 136134, -1000, -1000, -1000, 2692, -1000, -160, 2868, -1000,
	75805, 61641, 2690, -1000, 136134, -1000, -1000, -1000, -1000, 136134,
	-1000, -1000, -1000, 75805, 85358, -1000, 105025, 84797, -1000, -1000,
	1603, 2669, -1000, -1000, -1000, 75805, 1359, 75805, 75805, 75805,
	-1000, 104462, -1000, -1000, 2232, 1642, 3419, 2194, 92673, -1000,
	2006, -1000, -1000, -1000, 3446, 3229, 116842, -1000, -1000, 3084,
	-1000, 72378, 94917, -1000, 94356, -1000, 93795, -1000, 92673, -1000,
	92673, -1000, 3845, 3844, 3843, -1000, -1000, 3842, -1000, 3841,
	3438, -1000, 900, 42641, 136134, 3437, -1000, 3839, 2131, 3082,
	136134, -1000, 3208, 1778, 1774, 116842, -1000, -1000, 116842, -1000,
	116842, -1000, -1000, -1000, 1682, -1000, -1000, 2617, -1000, -1000,
	-1000, -1000, 92673, 92673, 92673, 92673, 1606, -1000, 42064, -1000,
	-1000, 3144, 3837, 1864, -1000, 1928, -1000, 3031, 3445, -1000,
	1597, 1925, 214, 3755, -1000, -1000, 256, -1000, -1000, -50,
	-1000, 123013, -1000, 2606, -1000, 116842, -1000, 2620, 3052, 3076,
	1488, 2428, 2718, -1000, 41487, 2699, 52450, 2438, 133, -1000,
	-1000, 133, 133, 32774, -1000, -1000, 68996, 68996, 25084, 1513,
	48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988,
	48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988,
	48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988, 48988,
	48988, 48988, 48988, 48988, 48988, 48988, 2281, 48988, 1493, 48988,
	48988, 48988, 48988, 1777, -1000, -1000, 2111, 486, 2151, 650,
	-1000, -1000, -1000, 3657, 3657, 3657, 1383, 1383, 1383, 14559,
	14559, 493, 3835, 759, -1000, 48988, -1000, 69, 58774, 48988,
	25657, -1000, 415, 11320, 2656, -1000, 414, 26263, -1000, -1000,
	-1000, 27449, 555, 40881, 48988, 1050, 136134, -1000, -1000, 1351,
	3686, 23359, 3110, 2916, 648, 825, 824, 30437, 29831, 29225,
	28619, 823, 746, 48988, 48988, 48988, 48988, 48988, 48988, 48988,
	48988, -1000, -1000, 3710, -1000, 3686, -1000, -1000, -1000, -1000,
	3686, 1512, 1504, 3686, -1000, 3686, 3686, 8684, 8684, 40304,
	39727, 39150, 53027, 38573, 48988, 28042, 37996, 37419, -1000, 116842,
	-41, 3595, 48988, 257, -1000, 133558, -1000, 257, 257, 647,
	-71, 136134, 2841, 2841, 57070, 2470, 2284, 2284, 2284, -1000,
	902, 18128, 902, 102779, 2295, 902, 902, 213, 299, 410,
	54758, 2521, 102779, 735, 644, -19, -21, -22, -1000, -1000,
	-25, -26, -1000, -1000, 92673, 643, 25657, 25084, 212, 2170,
	-72, 2754, 2742, -1000, 2735, 2724, -1000, 2713, 2401, -1000,
	-1000, 1940, -73, 1490, 92673, 116842, 1558, 3834, -93, -1000,
	6739, -78, -1000, 1314, 211, 3686, -1000, -1000, -1000, -1000,
	-1000, 3827, 3826, -1000, 1058, 639, 636, 586, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 630, 629, 629, 629,
	-1000, 330, 627, 253, 622, 620, 607, -1000, -1000, -1000,
	-1000, -1000, 3030, 92673, 116842, 1557, 3822, 81988, -148, 93234,
	-85, -1000, -1000, 116842, -1000, -1000, -1000, 3821, -1000, 92673,
	-1000, -1000, 92673, 233, 3237, -1000, 92673, -1000, 92673, 231,
	3236, -1000, -1000, 116842, -1000, 92673, 92673, -1000, 116842, 116842,
	116842, 128630, 128630, 230, -1000, 92673, 856, -86, 1234, -50,
	-1000, -1000, -1000, -1000, 1876, -1000, 1852, -1000, -1000, -1000,
	-1000, -1000, -1000, 1623, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 832, -1000, -1000, -1000, -1000, -1000, -1000, 3729,
	3690, -42, -1000, -1000, 25084, -1000, -51, 1712, 2017, 1484,
	-1000, 78049, 2482, 3424, 3820, 2809, 3410, 1784, -1000, 1673,
	-1000, 3504, 83110, 3558, 3566, 1387, -1000, 3029, -1000, -1000,
	-1000, 933, 1846, 1902, 1481, 1479, 83110, 2137, -1000, 68996,
	-1000, 2761, 3498, 1403, 1439, 1403, 1403, 1391, -1000, 83110,
	1898, 1473, 1470, 1455, -1000, -1000, 2121, 2110, -1000, -1000,
	103901, -1000, 1454, 1453, 3626, 2814, 2336, 798, 2107, -1000,
	1388, 1450, 3027, -1000, -1000, -53, 3556, 3565, 1387, -1000,
	3021, 1435, -1000, -1000, -1000, 3495, 92673, 25084, 1664, 1583,
	1646, 1896, 1425, -43, -1000, 3548, 1412, 1404, -1000, 1144,
	7053, 3359, -1000, 128630, 1144, 1144, 1982, 3235, 2849, 1714,
	-1000, 2867, 895, 2861, -1000, -1000, -1000, 895, -44, 72940,
	116842, 208, -1000, 69, 48988, 48988, 69, 48988, 69, -1000,
	3528, 3233, 3231, -1000, -1000, -1000, -1000, -1000, 3819, 2129,
	2636, -1000, -1000, 589, 2518, 3011, 116842, 2774, -46, 92673,
	-1000, 71816, 3226, 128630, 2137, 2516, -1000, -1000, 84234, -1000,
	3218, 439, 2514, -1000, 632, 3818, 3217, -1000, 122452, -1000,
	3429, 1529, 3212, 1158, 689, 3594, -1000, 689, 66738, -1000,
	116842, -1000, -32, 5045, 76927, -87, -96, 407, -1000, 103340,
	116842, 116842, 3370, 2134, 2132, -1000, 1019, 60499, -1000, 60499,
	-97, -1000, -160, 2859, 1648, -1000, 968, 968, 895, -1000,
	895, -1000, 92673, 3062, -1000, -1000, 75805, 968, 968, 968,
	-1000, -1000, -1000, -1000, 3817, 3816, 3815, 3814, -1000, -1000,
	1020, 92673, 116842, 92673, -1000, -1000, 1690, -1000, 202, -1000,
	128630, -1000, 128630, 116842, 92673, -1000, 1020, 116842, 1020, 116842,
	1020, 116842, 1020, 1020, -1000, -1000, -1000, -1000, -1000, 69,
	-1000, -1000, 136134, -1000, 48988, -1000, -1000, 1668, 3812, 1781,
	-1000, 3057, -1000, 3055, -1000, 12, -1000, -1000, 2020, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3811, 136134,
	-1000, 2147, -1000, -1000, -1000, -1000, 92673, 92673, 92673, 92673,
	116842, 3358, -1000, 116842, 3356, 92673, -1000, 3754, -1000, -1000,
	83110, -1000, 2620, 3052, -1000, -1000, -1000, -1000, -1000, -1000,
	1713, 2380, -1000, 2663, -1000, 1710, -1000, -1000, -1000, 136134,
	53604, -1000, -1000, 136134, 1984, -1000, 51873, 51296, -1000, -1000,
	1849, 92673, 2786, -1000, 2786, -136, -1000, 133372, 2662, 92673,
	-1000, -1000, -1000, -1000, -1000, 930, 631, 631, 1393, 1393,
	1393, 1393, 3526, 298, 624, 6143, 9128, 9128, 6095, 6095,
	6095, 6095, 6095, 9128, 1082, 1383, 1383, 1082, 1082, 1082,
	1082, 1082, 1383, 1383, 1383, 9128, 9128, 9128, 1383, 14559,
	6851, 9510, 48988, 48988, 1399, 2108, 486, 8197, 48988, 10549,
	10549, 10549, 10549, -1000, 2102, -1000, -1000, -1000, -1000, 3001,
	582, 53027, 53027, -1000, -1000, -1000, -1000, 26856, 48988, -1000,
	-1000, -1000, -1000, 36813, -1000, -1000, 132276, -320, 406, -1000,
	201, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 405, -114, 8, -1000, 48988, 48988,
	48988, 404, -1000, 198, 48988, 116842, -1000, 17523, 734, -98,
	-1000, -105, 1472, -1000, 48988, -1000, -1000, 1360, -1000, 1309,
	1305, 1302, -1000, 580, 403, -1000, 197, -1000, 2282, 570,
	569, 48988, -1000, -1000, -1000, -1000, -1000, 132239, -1000, -1000,
	131841, -1000, -1000, 131804, -1000, -1000, 131406, -1000, -1000, -1000,
	-1000, -1000, 135755, 17486, 17046, 16579, 10662, 16383, 15919, -112,
	402, -113, 401, 928, 924, 400, 399, 398, -115, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -118, 396, -1000, 2998, -114, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 393, -1000, 392, -1000, 135490, -114,
	389, 5200, -1000, 53027, 53027, 53027, 53027, -1000, 383, -1000,
	133095, -1000, 135305, 36236, 36236, 36236, 379, 135040, 48988, -114,
	-120, -1000, -121, -1000, -1000, 521, -123, 1023, 35659, 55914,
	25084, -1000, 1023, 1023, 48988, -1000, 48988, 2683, -1000, -1000,
	-1000, -1000, 2682, 2146, 2841, 57070, -1000, -1000, -1000, -1000,
	102779, -1000, 3677, 2782, -1000, 102779, -1000, -1000, 116842, 439,
	-1000, 102779, 102779, 25084, 902, -1000, 902, 102779, 612, -1000,
	-1000, -1000, -1000, -1000, 376, 65051, 8, 196, 25084, 1022,
	-1000, -1000, 2798, 2798, 2798, 2798, 2798, 92673, -1000, -1000,
	128630, 1299, -48, -94, 2858, -1000, 3638, -1000, 2218, -1000,
	68996, -1000, 751, 1178, 25084, -1000, -1000, -1000, 563, -1000,
	3686, 3686, -1000, 3686, 128630, 2991, 254, 2853, -1000, 2398,
	-45, 173, 128630, 3808, -1000, -1000, 233, -1000, 92673, 233,
	233, -1000, 92673, 92673, 2393, -1000, 250, -1000, 237, -1000,
	-1000, -148, -1000, 1041, 33351, -1000, 1876, -1000, -1000, 1647,
	-1000, 2153, -1000, 1503, -1000, -1000, -1000, -1000, 33351, -1000,
	2562, 116842, 116842, 92673, -1000, 116842, -1000, 2298, 128630, -1000,
	2512, 121891, 2472, 121330, 68996, -1000, -1000, 562, 941, 2661,
	2659, 1152, 116842, 116842, 2657, 120769, 120208, -1000, 3807, 116842,
	2198, 48988, 3487, 2290, 5218, 69, 69, -1000, 69, -1000,
	-1000, 561, 1229, 92673, 92673, 116842, 128630, 92673, 1981, -1000,
	-1000, -1000, -1000, -1000, 83671, -1000, -1000, 3707, 3699, -1000,
	1403, -1000, -1000, -1000, 1403, 2137, 1941, 116842, 128630, 92673,
	128630, 119647, 119086, -1000, -1000, 1895, 116842, -1000, -1000, -1000,
	-1000, 1498, -1000, 798, 1297, 2988, 48988, 48988, 2234, 69,
	69, -1000, 69, 560, 25084, 2109, -1000, 3103, 116842, 3749,
	118525, 3747, 116842, 116842, 116842, 128630, 3420, 116842, 116842, 128630,
	-1000, 117964, 7053, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2236, 74088, 1164, 116842,
	1358, -1000, -1000, 1888, 1293, 1292, 83110, 2280, 1886, 1991,
	128630, 60499, 1018, 60499, 2829, -1000, -1000, 22782, -1000, 136134,
	136134, -1000, 136134, -1000, 71816, 75805, 116842, -1000, 1069, 116842,
	77488, 992, 3180, 65612, -164, 968, 75805, 92673, -46, 2774,
	116842, -1000, -1000, 2137, 3175, 439, 2506, -1000, 128630, 3587,
	3173, 558, 3806, 3804, -1000, 92673, 2397, 2503, -1000, -1000,
	117403, 3291, 798, 116842, 1023, 57070, 2090, -1000, 63356, 1106,
	116842, 2008, 160, -1000, -1000, -1000, -6, 116842, -1000, 5,
	-1000, -1000, 5045, 5045, 968, -241, 557, -1000, 885, 879,
	61070, -126, -1000, 193, 556, 878, 870, -1000, 3786, -1000,
	-160, -1000, 75805, 1019, 60499, 2987, 2984, -1000, -1000, 1040,
	-1000, 1579, 968, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -36, 1990, 116842, -148, -148, -58,
	-48, -1000, 1020, -1000, 1020, -1000, 1020, -1000, -1000, -1000,
	136134, -1000, -1000, -1000, 1780, 1768, 116842, -1000, -1000, 116842,
	-1000, 25084, 116842, 92673, 25084, 92673, 3050, 3049, -1000, -1000,
	-1000, 116842, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1185, -1000, 1984, 2371, -1000, 555, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2590, -1000, -49, 32774, 886,
	-1000, -1000, 92673, -37, 48988, 48988, 7626, 6738, 48988, 53027,
	53027, -1000, 48988, 6028, -1000, -1000, -1000, -1000, -1000, 2983,
	548, 48988, 68996, 5072, 2085, -1000, 375, 15637, 1082, -1000,
	48988, -1000, 611, -1000, 373, 35082, -1000, 134017, -13, -133,
	-1000, 18719, -114, -134, -1000, -1000, 745, -1000, 3285, -1000,
	48988, 134846, 2568, 2089, 1969, 1800, 3686, 3746, 22205, -1000,
	67300, 1048, 2301, 131369, -1000, -1000, -1000, -1000, 68996, 68996,
	48988, 48988, -1000, 48988, 48988, 48988, -1000, -1000, -1000, 3686,
	915, -1000, -1000, -1000, 915, -1000, -1000, 1403, -1000, 1403,
	-1000, 48988, -1000, -1000, 2982, 48988, -1000, 68996, 68996, 53027,
	53027, 53027, 53027, 53027, 53027, 53027, 53027, 53027, 53027, 53027,
	53027, 53027, 53027, 53027, 53027, 53027, 53027, 53027, 53027, 2670,
	53027, 3654, 3654, 3654, 1428, -1000, 3048, 2982, 48988, 48988,
	68996, 367, 364, 359, -1000, 48988, -114, -1000, -1000, 7433,
	547, -1000, 2580, -1000, 2915, -1000, 48988, -1000, -139, -1000,
	2521, -1000, -1000, 2915, 2915, -142, 136134, 57070, 57070, -1000,
	546, 48988, 2681, -1000, -1000, 733, -321, -1000, 869, -1000,
	-1000, -1000, -1000, -1000, -1000, 868, -1000, 439, -1000, -1000,
	-1000, 192, 102779, 102779, 732, -1000, -150, -1000, -1000, -151,
	-1000, 3586, 355, 25084, -1000, 1023, 2751, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2711, -263, 128630, 128630, 1877, 2357,
	3743, -1000, 3692, 742, 731, 191, 3686, 354, 350, 349,
	-148, 128630, 128630, 1871, 69567, 128630, -1000, -1000, -1000, 233,
	-1000, -1000, -1000, 231, -1000, -1000, -1000, -1000, 2758, -1000,
	-50, -1000, -1000, -1000, 48988, -1000, -1000, 3422, 1291, 1290,
	-1000, -1000, -1000, 3019, -1000, 3172, -1000, 2501, -1000, 1136,
	2500, 1916, -1000, 48988, 545, 2818, 541, 538, 3803, 2192,
	3801, 1154, 3171, 2393, 3170, 2393, -1000, -1000, -1000, 938,
	-1000, 136134, 2290, -1000, 536, 533, -1000, -51, 1706, 1996,
	1289, 1029, -1000, -1000, 48988, 48988, 102218, -1000, 468, 3417,
	-38, -1000, -1000, -1000, 1867, 1288, 1283, -1000, -1000, -1000,
	-1000, 2137, 1858, 1282, 1277, -1000, -1000, -1000, -1000, -1000,
	2494, -1000, -1000, 3169, 1028, -1000, 3125, 3124, 908, 116842,
	48988, 48988, 134661, 134396, -1000, 1027, -1000, -1000, 48988, -1000,
	-53, 1268, 3550, 2493, 92673, -1000, 2393, 3168, 1266, -1000,
	1264, -1000, -1000, -1000, 3545, 3544, 1286, -1000, -1000, -1000,
	75805, -1000, -1000, 73517, -1000, -1000, 1144, 116842, 128630, 92673,
	1905, -1000, -1000, 81988, 82549, 116842, 2849, -148, 895, -1000,
	2491, 895, 1018, 2981, -1000, 2750, -1000, 1026, 92673, 3800,
	348, -152, -55, 68996, -1000, -1000, -1000, -1000, 2472, 92673,
	116842, 1348, 2816, 116842, 116842, 3585, -1000, 2414, 490, 92673,
	913, -1000, 3677, -1000, -1000, -1000, 1025, -1000, 3535, 92673,
	3582, 3167, 1022, 69, 92673, 3668, -1000, -1000, 3581, 92673,
	3163, 2396, 2486, 2625, 798, 76366, 1022, 2299, -63, -1000,
	2008, 34505, 3415, -168, -1000, -1000, -1000, 1023, 66738, 57070,
	48988, 3799, -169, -1000, -1000, -1000, -1000, -1000, 99974, 99974,
	75805, 75805, 75805, 968, 116842, 116842, 3798, 75805, 75805, 75805,
	-56, 532, -1000, 864, 858, 857, -1000, -1000, -1000, -1000,
	-1000, -1000, 849, 848, 845, 1019, -1000, -1000, -160, 60499,
	69, -1000, 2349, 92673, -1000, 21628, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1020, -164, -1000, -1000, -1000, 2243, 2432,
	2243, 1979, 1972, -1000, -1000, 2368, -1000, -1000, -1000, -1000,
	2732, 3407, 25084, 3532, 10549, 48988, 48988, 981, 584, 488,
	10549, 48988, 48988, 68996, 136385, -177, 48988, 48988, -1000, 48988,
	730, 136134, -1000, 3741, 48988, 347, 346, -1000, -1000, -1000,
	3684, -1000, -1000, -1000, 136134, 48988, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 343, -1000, 117, -1000, -1000, -1000, 125257,
	-1000, 48988, 341, 3486, -1000, 340, 336, 13858, 9440, 130971,
	130934, 130536, 335, -1000, -1000, 334, 323, 136134, 3048, 136134,
	-1000, -1000, 956, 956, 1377, 1377, 1377, 1377, 3654, 952,
	1067, 926, 1043, 1043, 1043, 1007, 1428, 1428, 1043, 1043,
	1043, 1428, 2980, 2671, 531, 5238, -1000, -1000, 136134, 136134,
	322, -1000, -1000, -1000, -114, 318, 7433, -1000, 2911, 3485,
	136134, -1000, 57070, 2911, 2911, -1000, -1000, 2146, 116842, 136134,
	57070, -1000, 2782, -1000, 19891, 19308, -1000, 25084, -1000, -1000,
	-1000, -1000, 3677, -1000, 65051, -1000, 528, -1000, 9, -1000,
	2751, -1000, 841, -1000, -1000, 75805, 75805, 2798, -1000, 2937,
	-263, -165, 116842, -1000, -1000, 725, 3797, 738, 25084, 317,
	-1000, -1000, -1000, -148, -148, 116842, 2977, 92673, 116842, 1542,
	-148, -1000, -1000, -1000, 3365, 136134, 116842, 116842, 1609, 101657,
	116842, 3162, -1000, 3153, -1000, 1152, 4588, 130499, 57641, -1000,
	57641, 116842, -1000, -1000, -1000, -1000, 2004, 1669, 3796, 1220,
	-1000, 3449, 116842, -1000, 116842, -1000, -1000, -1000, 116842, 116842,
	92673, 116842, -1000, 128630, 3137, -178, 136134, -57, -1000, 836,
	-1000, 1373, -1000, 21051, 116842, 128630, 92673, 116842, 128630, 92673,
	3151, 116842, 2259, -1000, -1000, 3123, -1000, 136134, 134202, 69,
	48988, 3132, -180, 25084, -1000, 3737, 3723, 3148, 3451, -1000,
	116842, 3721, 116842, 92673, 3364, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1843, 1262, 1252, 2395, 2394, 2354, -58, 2280,
	1018, -60, 526, -1000, 835, -1000, -1000, 834, 829, 1018,
	-1000, 75805, 60499, 3795, 439, -1000, 2804, -1000, 97724, 77488,
	2405, -1000, -1000, 525, 116842, 116842, 523, -1000, 69, -1000,
	3793, 100535, 516, -1000, 2313, -1000, 724, -1000, 2633, 128630,
	2137, 69, 92673, -1000, 1001, 439, 313, -61, -1000, 3281,
	1142, 25084, 92673, 3147, 2627, 798, 76366, -1000, 1529, 2718,
	-1000, -62, -1000, 628, 69, 2299, -1000, -63, 136134, -1000,
	821, -1000, -185, -1000, -1000, 310, -1000, 3363, -1000, -1000,
	-186, -1000, -1000, 5082, 5082, 75805, 60499, 75805, 75805, 75805,
	60499, -1000, 1019, 895, -1000, 2509, -1000, -1000, -1000, -1000,
	-1000, 25084, 1809, -1000, 514, 513, -1000, -1000, -1000, -1000,
	3407, 10549, 10549, 48988, 48988, 48988, 10549, 136385, -187, -1000,
	10549, 10549, -114, -1000, -1000, 134017, -1000, -1000, -1000, 136134,
	-1000, 20474, 2251, -1000, 130101, -1000, 32774, -1000, -1000, 48988,
	48988, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53027,
	2976, 512, 68996, -1000, -1000, 303, 991, 48988, 50719, 2521,
	991, 991, -1000, -195, -1000, -1000, -1000, 3677, -1000, 3677,
	9, -1000, -1000, 3790, 25084, -1000, 75805, -1000, -1000, -1000,
	2351, -1000, -1000, 3131, -198, 633, -1000, 3789, -1000, -1000,
	140, 128630, 2975, 132, 2848, -1000, -1000, -1000, 2840, 3578,
	-1000, 2105, -1000, 116842, 116842, -1000, 116842, -1000, 25084, 116842,
	2944, 1328, -1000, 941, 2649, 510, 53027, 1184, 92673, 925,
	2890, 2889, -1000, 3619, 3480, 2902, -197, -1000, 116842, 48988,
	116842, -200, -206, 2446, -1000, -1000, 1183, 1321, 48988, 1172,
	-1000, -1000, -1000, 68996, 508, 2393, 2393, -208, -209, -1000,
	-1000, -1000, 48988, 1248, 116842, 33928, -1000, 3788, 3417, -1000,
	-1000, -1000, -1000, -1000, -1000, 116842, -1000, 116842, -1000, 48988,
	-1000, 133752, 48988, 1247, -1000, -1000, -1000, 3717, 2393, 25084,
	2393, -1000, 2393, 3451, 1202, 116842, 128630, 92673, 1890, 1890,
	2978, -1000, -1000, -1000, 2403, 2403, 75805, 60499, 60499, -1000,
	-66, 1018, -1000, 3577, 2249, 3787, -1000, -1000, -1000, -1000,
	2645, -1000, -1000, -1000, 116842, 2644, 2905, 57641, 507, 505,
	116842, 969, -1000, -214, -1000, 815, 814, 77488, 992, 897,
	-1000, -68, 495, -1000, 809, -1000, -1000, -1000, -1000, 439,
	-1000, 2747, 3576, -1000, 3715, 494, 491, 116842, 2389, 487,
	25084, 3413, 798, 76366, -1000, 3291, 2008, -1000, 2460, 116842,
	3405, -1000, 2718, 486, -1000, 968, 485, 968, -1000, -215,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -84, -1000,
	890, 884, -1000, -1000, 92673, 92673, 48988, 48988, -1000, 10549,
	10549, 10549, -1000, 302, -1000, -1000, 2299, 3471, -1000, -92,
	130064, 129666, 5395, 53027, 68996, -216, -1000, -1000, 116842, 136134,
	-102, -1000, 136134, 467, 465, 436, -1000, -1000, -1000, 721,
	719, -1000, -1000, -1000, -1000, 128630, 3785, -1000, 128630, -148,
	128630, 128630, 1834, 101096, 116842, -1000, -1000, 1916, 2135, -1000,
	-1000, -1000, 116842, 2474, -1000, -1000, -1000, 1148, 48988, 5238,
	53027, 461, 48988, -1000, 460, 457, 3575, 3345, -1000, 2801,
	2973, 2033, 57641, -1000, 3407, -1000, 129629, -1000, 1141, 2091,
	-1000, -1000, -1000, -1000, 136134, 53027, 3451, 57641, -1000, -1000,
	456, 455, 136134, 454, 806, 2974, -1000, -1000, -1000, -1000,
	-1000, 136134, 69, 136134, 453, 3550, -1000, -1000, -1000, -1000,
	2393, 92673, -1000, -1000, -1000, 1240, -1000, -1000, -1000, -1000,
	3784, 3782, 2969, 81988, -1000, -217, -1000, -1000, -1000, 2127,
	69, 992, -1000, -1000, 2405, 448, -1000, -1000, 2721, 2721,
	-222, 57641, 57641, -224, 2383, 2706, -1000, 100535, 33351, 33351,
	283, 3572, 897, -1000, 3662, -1000, 3333, 3333, 48988, 3567,
	3362, -1000, 69, -1000, 3668, 57641, -1000, 92673, 57641, 2387,
	2177, 2613, 76366, -1000, 2625, -1000, -1000, -227, 116842, 2008,
	-1000, -1000, 75805, -1000, -1000, 2509, -1000, 116842, -1000, 116842,
	-1000, -1000, -229, -230, -1000, 2224, 48988, 32774, -1000, -1000,
	5395, -235, -1000, -103, -1000, 3562, 50719, 3781, 3780, 3779,
	-1000, -1000, -263, -1000, -148, -148, -148, 116842, -1000, 2098,
	-1000, 2472, -1000, -1000, 3146, 2909, 129231, 5238, 2584, 116842,
	129194, 2137, 2137, -1000, 3553, 2962, -1000, -1000, 2234, 442,
	-1000, -1000, -1000, -1000, 886, 116842, -1000, 2896, 92673, 5238,
	1146, -240, 2243, 2243, 48988, 32197, 2255, -1000, 48988, -1000,
	-1000, 3451, 128630, -1000, -1000, 128630, 2385, -1000, 2957, 3665,
	-1000, 2383, 116842, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1141, -248, -249, -1000, -1000, 3442,
	-1000, 3361, -1000, -1000, -1000, 2804, 69, -1000, -1000, -1000,
	-250, 136134, 69, 3774, 1001, 278, -251, 1142, -257, 92673,
	2101, -1000, 798, -1000, 2627, 1023, 3298, -1000, -258, -1000,
	-265, -266, -1000, -1000, 274, 50142, 50142, 50142, -114, -136,
	-1000, 116842, 441, -1000, -1000, -1000, -1000, -1000, 116, -1000,
	-1000, 3119, 1000, -1000, 826, 2055, 269, 1123, 265, 134,
	-1000, -1000, -1000, 2902, -1000, 116842, -1000, -1000, 997, 439,
	-1000, 48988, 1141, -268, -1000, 1101, -275, -1000, 1098, -277,
	-1000, 2968, -1000, -282, 2393, -263, 230, 1890, 996, 3527,
	-1000, -1000, -1000, 2601, -285, -1000, -1000, 2033, 1141, 2234,
	2431, -1000, 2249, 969, -1000, -1000, -1000, -1000, -1000, 1141,
	434, 2033, 433, 1632, 798, -1000, -1000, 1403, 3413, 3297,
	1411, 968, -1000, -1000, -1000, 3276, -1000, 54181, 2412, 1970,
	132901, 3276, 3276, -1000, -1000, 128630, 116842, 3514, -1000, 887,
	874, 1577, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1023, -291, 3513, 2584, 136134, -1000, -1000, 2243, 2835, -1000,
	2243, 2960, -1000, 2254, -1000, -1000, -1000, -1000, 2959, -1000,
	1921, 3711, -1000, -1000, -1000, 116842, 2234, 2033, 961, 1938,
	1935, 3767, 992, 2383, 2033, 57641, 2234, 57641, 2226, -1000,
	116842, -1000, 2177, 1378, -1000, 1779, -1000, -1000, 2010, 3611,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -148, -1000, 795,
	-1000, 3312, -1000, 1169, 2263, 2263, -1000, -1000, 787, 826,
	-1000, 431, -1000, 430, -1000, 128630, 2300, -1000, -1000, -1000,
	961, 2234, 1023, 372, -1000, 3763, -1000, 2383, -1000, 2234,
	-293, 961, -294, -1000, -1000, -1000, -164, 2101, -1000, 1715,
	66738, 1955, -1000, -1000, 2293, 49565, 48988, -1000, 3641, -1000,
	-1000, 2667, -1000, 48988, 2902, 48988, 48988, 230, 64480, 1023,
	961, -1000, -1000, 2601, 961, 1141, 1023, 2033, 1632, 66738,
	-264, -1000, -1000, -1000, 136134, -1000, -1000, -1000, 136134, -1000,
	-299, -302, -1000, -241, 99974, -1000, 1023, -1000, 1023, 2033,
	-1000, 2234, 2226, -264, -1000, 2234, 1239, -307, -1000, -1000,
	2234, 961, -1000, -1000, -1000, -1000, 306, -1000, 961, 1023,
	48988, 1023, -1000, -314, -1000, 2234, -1000,
}

var sqlPgo = [...]int{
	0, 4600, 4599, 4598, 4597, 4596, 4595, 4594, 4591, 4590,
	4587, 4585, 4582, 146, 4580, 4578, 4577, 4576, 4575, 4571,
	4568, 4567, 4566, 4564, 4561, 4555, 4554, 4553, 4552, 4549,
	4543, 4541, 4540, 4538, 4537, 4535, 4534, 4533, 4531, 4530,
	4527, 4525, 4523, 4522, 4520, 4519, 4518, 4517, 4516, 4510,
	4509, 4507, 4505, 4502, 4498, 4496, 4494, 4492, 4491, 4489,
	4487, 4486, 4485, 4472, 4470, 4468, 4467, 61, 4465, 4460,
	4458, 4455, 4453, 4452, 4451, 4450, 4445, 4442, 4441, 4436,
	4432, 4431, 4426, 4425, 4415, 4414, 4413, 4412, 74, 4411,
	278, 4409, 4407, 4405, 4398, 4395, 4394, 4393, 4392, 4389,
	4388, 4386, 4383, 277, 4378, 129, 163, 4377, 4372, 3920,
	4371, 4368, 276, 4367, 4365, 4364, 4363, 4361, 286, 4358,
	4356, 4355, 4354, 4340, 4330, 4326, 4325, 4324, 4322, 4320,
	4319, 135, 208, 4318, 4315, 1342, 4314, 4313, 4312, 4311,
	4306, 4304, 4297, 4295, 4294, 4293, 4292, 255, 178, 4287,
	271, 4282, 4281, 4279, 4278, 4277, 4276, 4275, 4273, 4272,
	4271, 4270, 4268, 4266, 4259, 4258, 4255, 4254, 4251, 4250,
	4249, 4248, 4246, 4244, 4243, 4242, 4241, 4240, 4238, 4237,
	4236, 4235, 4232, 4231, 4230, 4228, 4226, 4225, 4224, 4220,
	249, 217, 140, 4218, 4214, 270, 269, 4213, 4211, 4210,
	4209, 4206, 136, 12, 41, 4204, 4203, 112, 98, 94,
	104, 107, 108, 4202, 125, 4201, 137, 70, 4200, 20,
	1, 246, 248, 12308, 231, 4198, 4196, 4195, 243, 201,
	4194, 251, 4193, 4192, 4191, 4190, 4187, 4186, 78, 57,
	191, 186, 180, 177, 25, 58, 110, 89, 63, 40,
	10, 80, 216, 22, 7, 264, 4185, 263, 6, 149,
	9, 28, 4184, 4182, 4179, 4176, 3592, 117, 4168, 268,
	244, 184, 4166, 4164, 4163, 609, 4161, 4160, 52, 4159,
	205, 90, 119, 17, 142, 4158, 166, 174, 42, 4157,
	183, 72, 4156, 4155, 102, 96, 8725, 11301, 4154, 4153,
	133, 76, 139, 3257, 197, 153, 204, 111, 175, 169,
	56, 215, 212, 189, 21, 4149, 252, 4147, 3570, 79,
	188, 167, 5983, 4142, 4141, 4137, 88, 4136, 114, 4135,
	4134, 71, 16, 3, 2, 155, 35, 47, 4, 4133,
	24, 132, 50, 32, 4131, 31, 4130, 4129, 4128, 4127,
	53, 4115, 46, 170, 4114, 4113, 285, 4112, 101, 59,
	106, 4111, 29, 220, 4110, 223, 148, 4108, 4107, 259,
	210, 190, 4106, 95, 242, 4105, 4104, 4102, 4101, 4100,
	4098, 145, 8, 143, 4097, 4095, 156, 4093, 60, 240,
	203, 4089, 62, 4088, 4086, 181, 54, 144, 280, 327,
	235, 131, 226, 194, 232, 4085, 4084, 4081, 199, 4080,
	4079, 219, 162, 4078, 4077, 261, 287, 109, 49, 91,
	239, 87, 200, 161, 4076, 207, 4075, 4074, 282, 193,
	218, 14, 11, 99, 115, 4073, 5, 230, 168, 238,
	128, 4067, 7006, 2505, 2948, 4064, 4063, 157, 134, 84,
	138, 172, 267, 97, 4061, 4060, 2673, 4059, 4058, 4056,
	4055, 196, 4054, 4053, 4052, 160, 187, 229, 4051, 123,
	81, 55, 23, 158, 279, 284, 127, 227, 179, 258,
	4050, 4046, 4045, 192, 4044, 83, 105, 164, 206, 254,
	65, 4041, 116, 4038, 159, 318, 85, 165, 4036, 222,
	4035, 4033, 4029, 4027, 4025, 4023, 4021, 250, 236, 4019,
	4018, 4014, 36, 198, 4010, 265, 257, 185, 141, 73,
	4006, 100, 2933, 4005, 122, 225, 64, 2174, 86, 4003,
	2033, 67, 4002, 0, 13708, 9389, 11462, 13345, 4000, 3427,
	3997, 3995, 3993, 224, 82, 3991, 3990, 3988, 126, 3987,
	92, 3983, 3979, 77, 3978, 30, 19, 18, 34, 27,
	479, 372, 3977, 3973, 43, 154, 150, 3971, 281, 234,
	3968, 3967, 3966, 3965, 93, 3964, 48, 3962, 39, 3961,
	3960, 51, 15, 44, 3959, 3958, 171, 3953, 121, 260,
	3950, 173, 3948, 69, 152, 3947, 3946, 3945, 68, 66,
	266, 213, 214, 113, 3944, 290, 3943, 209, 3942, 3941,
	26, 3940, 3939, 247, 120, 118, 45, 253, 147, 37,
	182, 221, 3937, 3936, 176, 3935, 3934, 3932, 288, 3931,
	3930, 33, 3929, 3928, 3927, 13, 3926, 3925, 211, 3313,
	3924, 3922, 38, 3788, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 600,
	600, 600, 601, 601, 602, 602, 602, 24, 45, 17,
	18, 18, 18, 18, 603, 603, 603, 603, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 596, 596, 243, 243, 242, 235,
	235, 236, 236, 237, 237, 604, 604, 244, 244, 244,
	245, 245, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 496, 496, 496, 527, 527, 527, 527, 528,
	528, 623, 623, 624, 624, 624, 624, 624, 134, 134,
	394, 394, 394, 55, 55, 55, 55, 55, 591, 591,
	207, 207, 207, 209, 209, 208, 208, 208, 208, 208,
	79, 79, 610, 610, 609, 608, 608, 608, 611, 611,
	611, 206, 206, 206, 130, 130, 130, 130, 130, 130,
	131, 131, 132, 132, 210, 210, 210, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 216, 16, 16, 16, 113, 113, 113, 113, 113,
	113, 113, 108, 108, 530, 530, 531, 531, 201, 201,
	202, 202, 202, 202, 203, 203, 204, 204, 204, 70,
	70, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 59,
	60, 60, 60, 60, 60, 60, 61, 61, 68, 68,
	68, 68, 68, 68, 68, 192, 192, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	76, 76, 76, 76, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 626, 626, 627, 627, 628, 628, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 85, 85, 354, 354, 317,
	317, 86, 86, 86, 87, 87, 88, 88, 72, 72,
	589, 589, 370, 370, 487, 487, 73, 597, 597, 597,
	599, 599, 598, 598, 90, 90, 393, 393, 91, 91,
	91, 91, 91, 91, 92, 92, 92, 92, 92, 92,
	92, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 100, 100, 100, 100, 100,
	101, 101, 101, 98, 98, 98, 95, 95, 95, 94,
	94, 94, 99, 99, 99, 588, 306, 306, 97, 97,
	97, 96, 96, 96, 371, 371, 102, 102, 102, 102,
	318, 103, 103, 103, 103, 103, 103, 103, 103, 106,
	106, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 489, 489, 104, 104, 104, 454,
	454, 109, 109, 109, 409, 409, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 593, 593, 363, 363, 269, 269, 269, 269,
	122, 122, 122, 122, 123, 123, 123, 124, 124, 197,
	197, 140, 140, 140, 140, 139, 139, 139, 139, 139,
	139, 139, 139, 62, 62, 62, 63, 63, 64, 64,
	65, 65, 66, 66, 67, 67, 67, 67, 67, 143,
	143, 620, 620, 145, 142, 142, 142, 142, 142, 141,
	141, 144, 144, 144, 144, 146, 148, 148, 148, 148,
	148, 147, 147, 147, 147, 147, 149, 149, 521, 521,
	379, 379, 519, 519, 540, 540, 520, 520, 324, 324,
	324, 324, 324, 325, 325, 325, 529, 529, 529, 529,
	529, 529, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 198, 198, 199, 200, 200,
	200, 200, 200, 175, 175, 175, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 380, 380, 178,
	178, 178, 162, 162, 151, 151, 151, 151, 151, 151,
	151, 156, 156, 156, 156, 156, 156, 156, 156, 152,
	152, 164, 164, 164, 164, 164, 157, 157, 158, 158,
	158, 159, 159, 159, 159, 185, 185, 161, 161, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 153, 153,
	153, 153, 166, 166, 166, 166, 416, 416, 416, 190,
	190, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 188, 188, 188,
	188, 188, 188, 612, 612, 613, 613, 613, 182, 182,
	182, 182, 182, 182, 468, 468, 176, 176, 176, 176,
	181, 181, 181, 181, 184, 184, 184, 184, 399, 399,
	173, 173, 173, 174, 174, 174, 179, 179, 180, 355,
	355, 177, 177, 183, 183, 183, 183, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 155, 155, 155, 155,
	186, 186, 172, 172, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 630, 630, 168, 168, 168,
	167, 167, 167, 167, 170, 170, 171, 171, 171, 171,
	171, 171, 169, 160, 189, 590, 590, 586, 586, 586,
	586, 586, 586, 586, 586, 587, 587, 587, 587, 592,
	592, 114, 114, 114, 114, 114, 114, 114, 125, 125,
	125, 125, 125, 125, 125, 128, 128, 115, 115, 115,
	115, 115, 115, 115, 118, 118, 116, 116, 116, 116,
	117, 117, 80, 80, 80, 80, 80, 15, 15, 15,
	81, 81, 260, 260, 219, 219, 219, 342, 342, 220,
	220, 332, 332, 332, 332, 217, 217, 218, 218, 82,
	82, 631, 631, 631, 605, 605, 605, 606, 606, 606,
	606, 606, 606, 326, 326, 327, 327, 434, 434, 434,
	434, 434, 330, 330, 330, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 340, 341, 341, 333, 333, 339,
	338, 338, 337, 337, 336, 336, 334, 335, 335, 335,
	344, 344, 343, 346, 346, 345, 433, 549, 549, 551,
	551, 551, 551, 551, 551, 551, 553, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 553, 417, 417, 632, 632, 633, 634, 547,
	547, 547, 548, 543, 543, 544, 544, 544, 544, 544,
	328, 328, 329, 329, 329, 329, 545, 546, 361, 361,
	472, 550, 550, 552, 552, 554, 635, 635, 635, 635,
	635, 635, 636, 636, 636, 432, 432, 431, 431, 352,
	352, 555, 555, 555, 555, 556, 556, 556, 556, 556,
	559, 558, 557, 557, 557, 557, 557, 84, 84, 84,
	396, 396, 395, 395, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 194,
	194, 272, 272, 272, 78, 78, 78, 12, 12, 12,
	12, 12, 12, 12, 287, 287, 13, 13, 13, 607,
	607, 607, 83, 83, 83, 83, 83, 83, 350, 350,
	350, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 595, 595, 594, 594, 273, 273, 638,
	638, 89, 89, 89, 89, 89, 89, 89, 89, 490,
	490, 491, 491, 77, 77, 77, 77, 77, 418, 418,
	415, 415, 414, 414, 360, 360, 470, 470, 470, 471,
	277, 277, 278, 278, 238, 238, 238, 31, 30, 22,
	22, 26, 26, 27, 27, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 28, 28, 48, 48, 48, 48,
	49, 49, 49, 49, 52, 52, 53, 53, 47, 47,
	47, 47, 50, 50, 44, 44, 54, 54, 54, 54,
	54, 614, 616, 616, 615, 615, 619, 619, 619, 619,
	619, 619, 617, 617, 618, 618, 621, 621, 622, 622,
	121, 121, 126, 126, 126, 126, 126, 127, 127, 127,
	127, 129, 129, 129, 129, 138, 138, 193, 193, 193,
	193, 193, 193, 193, 56, 56, 56, 56, 69, 69,
	69, 69, 136, 640, 640, 640, 137, 137, 137, 639,
	639, 270, 270, 428, 428, 429, 429, 641, 641, 430,
	430, 430, 430, 430, 263, 262, 264, 264, 265, 265,
	75, 75, 75, 253, 253, 252, 254, 254, 255, 255,
	250, 250, 532, 532, 257, 257, 257, 258, 258, 246,
	246, 247, 247, 248, 248, 249, 249, 261, 261, 642,
	642, 112, 112, 112, 196, 196, 316, 316, 316, 425,
	425, 425, 353, 353, 284, 284, 427, 427, 427, 427,
	427, 392, 392, 392, 195, 195, 368, 368, 382, 382,
	383, 383, 484, 484, 384, 119, 119, 120, 120, 135,
	135, 223, 223, 221, 221, 221, 221, 221, 221, 221,
	221, 228, 228, 229, 229, 230, 230, 231, 232, 232,
	232, 232, 372, 372, 233, 233, 233, 222, 222, 222,
	224, 224, 224, 224, 224, 224, 224, 227, 227, 227,
	227, 234, 234, 234, 226, 226, 566, 566, 566, 568,
	568, 570, 570, 569, 569, 565, 565, 567, 567, 637,
	637, 398, 398, 398, 349, 351, 347, 347, 348, 348,
	358, 358, 356, 357, 357, 359, 359, 469, 469, 469,
	239, 239, 239, 389, 389, 389, 389, 390, 390, 421,
	421, 419, 419, 419, 419, 420, 420, 422, 422, 422,
	423, 423, 424, 424, 386, 386, 387, 387, 388, 388,
	388, 388, 450, 450, 225, 225, 225, 365, 365, 365,
	366, 366, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 441, 441, 439, 439, 439, 439, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 474, 475,
	475, 367, 367, 476, 426, 426, 584, 584, 584, 585,
	585, 467, 467, 477, 477, 477, 477, 477, 477, 465,
	465, 466, 466, 485, 486, 486, 402, 402, 402, 402,
	400, 400, 403, 403, 403, 403, 403, 401, 401, 478,
	478, 478, 478, 391, 391, 479, 479, 479, 479, 480,
	481, 481, 482, 482, 435, 436, 436, 492, 492, 492,
	492, 494, 364, 364, 364, 364, 364, 542, 541, 541,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 509, 509, 509, 509, 509, 509, 509, 495, 495,
	495, 495, 495, 499, 499, 499, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 500, 500, 505,
	505, 506, 506, 506, 501, 502, 507, 507, 507, 507,
	643, 643, 511, 511, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 497, 497, 497, 504, 504, 504, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 410, 410, 412, 412, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 444, 444, 444,
	444, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 560, 560, 560, 560,
	560, 560, 560, 560, 446, 446, 563, 563, 564, 564,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 571, 571, 572, 572, 574, 574, 575, 575, 576,
	577, 577, 577, 578, 579, 579, 573, 573, 580, 580,
	580, 580, 581, 581, 582, 582, 582, 582, 582, 583,
	583, 583, 583, 583, 456, 456, 457, 457, 463, 463,
	463, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 323, 323, 322, 274,
	274, 274, 274, 274, 274, 377, 377, 375, 375, 375,
	378, 378, 376, 376, 374, 374, 373, 373, 453, 453,
	451, 451, 455, 455, 404, 404, 510, 510, 510, 510,
	510, 510, 510, 510, 405, 405, 405, 413, 406, 406,
	407, 407, 407, 407, 407, 447, 448, 408, 408, 408,
	449, 449, 458, 462, 462, 461, 460, 460, 459, 459,
	437, 437, 438, 438, 385, 385, 644, 644, 381, 381,
	483, 483, 483, 483, 320, 320, 369, 369, 319, 319,
	311, 311, 312, 312, 312, 312, 362, 362, 464, 464,
	512, 512, 513, 513, 514, 514, 515, 515, 516, 517,
	518, 452, 452, 295, 294, 281, 282, 293, 292, 291,
	280, 283, 288, 289, 290, 285, 286, 302, 301, 300,
	251, 256, 307, 308, 308, 310, 310, 309, 309, 297,
	298, 299, 488, 279, 313, 313, 314, 314, 314, 315,
	315, 315, 315, 275, 275, 276, 276, 303, 303, 304,
	305, 305, 296, 296, 296, 266, 266, 266, 267, 267,
	268, 268, 526, 526, 523, 523, 523, 524, 524, 524,
	525, 525, 525, 525, 522, 522, 522, 522, 522, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 534, 534, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 536, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 539, 539,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	6, 3, 8, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 7, 2, 5, 0,
	1, 3, 3, 1, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 5, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 13,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 3, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 6, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 8, 11, 5, 4, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 16, 19, 15, 18, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	13, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 7,
	10, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 608, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 390, 436, 448, 405, 143, 427, 410,
	-144, -145, 466, -56, -69, -137, -136, 73, 130, 420,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -625, 102, -567,
	-93, -96, -129, -629, 164, 224, -115, -116, -117, 372,
	-123, -124, 429, -126, -127, -128, 432, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 471, -180, -189, -158, 531, 49, 486,
	82, 148, 440, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -566, -94, -95, -98, -100, -101, -97, -99,
	428, -224, -222, 605, 546, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 568, 577, -227, -225, -226, -234, 458, 554,
	506, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, -318, 2, -297, -303, -304, -305, -296,
	-266, -536, -539, 4, -533, -537, 171, 234, 335, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 333, 328, 329, 330, 323, 324,
	320, 325, 321, 322, 326, 327, 332, 337, 338, 339,
	342, 221, 344, 345, 348, 366, 352, 353, 354, 357,
	358, 361, 364, 365, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 377, 378, 380, 381, 382, 384, 385,
	386, 388, 390, 391, 393, 394, 396, 397, 398, 399,
	400, 401, 402, 404, 405, 407, 406, 408, 410, 412,
	413, 414, 420, 427, 421, 423, 424, 425, 426, 428,
	429, 430, 431, 432, 434, 435, 436, 438, 439, 440,
	441, 442, 444, 446, 447, 451, 452, 468, 469, 488,
	448, 449, 450, 453, 454, 455, 456, 457, 461, 459,
	460, 462, 463, 464, 466, 467, 470, 471, 473, 474,
	475, 476, 477, 478, 479, 482, 484, 485, 486, 505,
	487, 489, 493, 494, 495, 496, 490, 491, 504, 498,
	499, 501, 502, 507, 508, 509, 510, 511, 512, 513,
	514, 516, 524, 525, 526, 528, 531, 532, 533, 534,
	522, 536, 537, 540, 541, 542, 545, 543, 544, 546,
	548, 551, 552, 553, 559, 558, 560, 561, 563, 564,
	569, 570, 572, 573, 574, 36, 50, 51, 54, 56,
	58, 69, 70, 71, 75, 125, 126, 155, 167, 168,
	180, 195, 196, 208, 210, 218, 219, 220, 241, 242,
	244, 249, 271, 341, 343, 359, 363, 379, 383, 387,
	389, 403, 443, 480, 492, 497, 517, 518, 519, 520,
	527, 529, 554, 555, 556, 562, 571, -318, 2, -297,
	350, -290, 2, -266, -266, 390, 28, 2, 28, 378,
	460, 509, 511, 2, -593, -363, 2, 28, -269, -266,
	102, 206, 458, -290, 2, -593, 206, -363, 25, 2,
	-266, 2, 364, 22, 27, 66, 77, 98, 141, 166,
	189, 192, -628, 366, 397, 446, 462, 504, 514, 528,
	2, 558, 292, 459, 506, 234, 120, 533, 453, -607,
	451, 452, 364, 395, 438, 209, 547, -270, 2, 448,
	-266, 292, 2, 608, 94, 74, 443, 463, -147, 2,
	282, 525, -148, -149, -146, 517, -521, 453, 438, 314,
	-266, 608, 608, 608, 28, -279, -266, 506, 234, 453,
	120, 502, 608, 2, 506, 369, 558, 459, 120, 400,
	234, 533, 192, 141, 27, 453, -607, 582, 583, 292,
	127, -591, 2, -586, 4, -537, -533, -312, -311, 506,
	512, 120, -305, -296, 597, -304, 608, 608, 608, 608,
	2, 252, 253, 399, 398, 463, 464, 28, 608, 608,
	608, 608, 451, 2, 166, 22, 27, 66, 93, 98,
	127, 189, 192, 355, -626, 366, 397, 462, 504, 508,
	514, 528, -606, 487, 68, 426, 453, -605, -607, 292,
	533, 141, -414, 120, 282, 204, 541, 511, 509, 539,
	133, 240, 544, 543, 608, 608, -106, 2, 605, 32,
	31, -105, -109, 143, 466, -216, 506, 245, 2, -266,
	608, 608, 608, 2, 252, 253, 451, 452, 28, 608,
	608, 190, -586, 2, 608, 608, 608, 2, 28, 252,
	253, 451, 452, 245, 2, 68, 455, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 2, -191, 463, 487, 215, 47, 46,
	74, 28, 396, 79, 370, 121, 127, 150, 534, 207,
	234, 235, 260, 93, 94, -416, 44, 253, 68, 252,
	452, -612, 451, -468, 507, 454, 460, 501, 264, 448,
	525, 102, 548, 439, 574, 400, 401, 499, 414, 283,
	159, 191, 4, 120, 314, 438, 465, 268, 267, 517,
	282, 447, 373, 84, 608, -637, 2, 506, -639, 2,
	525, 525, 2, -639, 2, -639, 2, -639, 2, -640,
	525, 571, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	-222, -224, -223, 608, 608, 608, 608, 608, 608, 608,
	-191, 463, 2, 74, 28, -356, -358, 538, 243, 152,
	356, -221, -223, 2, -566, -519, 2, -442, -540, -444,
	595, 596, 588, 503, 67, -322, 334, 575, -456, 127,
	539, 350, -539, -445, -458, 155, 366, 443, -378, 8,
	9, 5, 6, 7, -275, -446, -452, 530, 170, 340,
	-315, 609, 10, 605, -563, -223, -457, 37, 210, 65,
	-523, -314, -276, -495, 244, -313, -296, -560, -561, 4,
	-533, -534, -524, -498, -506, -502, -503, -509, -266, -536,
	77, 111, 112, 110, 115, 114, 285, 284, 116, 113,
	465, 547, 66, 36, 218, 219, 249, 341, 220, 75,
	-562, 142, -535, 241, 242, 480, 51, 403, 180, 126,
	125, 343, 56, 54, 555, -507, 122, 517, 518, 519,
	520, 195, 196, 58, 167, 168, 363, 387, 497, 527,
	529, 208, 271, 43, 106, 191, 239, 222, 248, 250,
	254, 272, 275, 315, 331, 336, 360, 362, 437, 472,
	-643, 556, 492, 69, 70, -568, 406, -569, -290, -568,
	608, 608, 610, 608, -347, -349, -351, 2, 28, 139,
	605, 2, -473, 2, -474, -478, -223, 265, -477, 605,
	-475, 603, -297, 351, -564, 444, -560, -561, -275, -296,
	-314, 4, -533, -535, 607, -352, 605, 120, 453, 506,
	78, 234, 93, 166, -409, 605, -266, 28, 350, 521,
	610, -348, 394, -454, 605, 350, 353, 190, 353, 60,
	296, 2, 2, 2, 2, 2, 218, -266, 506, 119,
	2, 263, 2, 2, 2, 2, 2, 2, 2, -371,
	218, 2, -297, 558, -371, 218, 2, -371, 218, 2,
	-415, 2, 87, -280, 218, 2, -266, -306, 218, 2,
	-301, -303, -310, 218, 2, -308, -266, -528, 218, 2,
	-527, 4, -533, 116, 465, -442, 2, -135, 2, 60,
	-266, 558, 2, 468, 2, 605, -147, 2, 71, 525,
	43, 463, -148, 2, -429, 2, -430, -262, -263, -264,
	-485, -265, 251, 393, 402, 578, 131, 334, 574, -620,
	190, 587, 521, -519, -519, -519, -379, 607, 2, 2,
	2, 2, 2, 2, -478, 218, -297, 2, -294, -522,
	4, -533, -537, -534, -538, -536, 28, 31, 32, 33,
	35, 37, 38, 39, 40, 57, 65, 66, 72, 76,
	78, 87, 93, 102, 110, 111, 113, 112, 114, 115,
	116, 127, 131, 135, 139, 140, 144, 148, 152, 170,
	172, 185, 189, 190, 206, 209, 212, 225, 238, 243,
	245, 265, 269, 276, 284, 285, 334, 340, 346, 350,
	351, 355, 356, 376, 392, 409, 433, 458, 465, 483,
	500, 506, 515, 521, 523, 530, 538, 539, 547, 549,
	557, 565, 566, 567, 568, -539, 77, 2, -478, 218,
	2, -300, 218, -478, -303, 2, -280, 2, -442, -600,
	513, 162, 421, 2, -319, 218, -297, -299, -303, -301,
	2, 2, 2, 2, -308, 2, -527, 218, 2, 28,
	28, 558, 394, 245, 521, 610, -369, -311, -312, -518,
	8, -362, -266, 607, -442, 2, -135, -118, 2, 185,
	-442, 218, 2, -135, 218, 2, -442, 218, 2, -135,
	218, 2, -266, 2, -608, 2, -530, 218, -526, 10,
	-525, 5, 4, -533, -537, -534, 218, -266, 2, 296,
	2, 2, 528, 2, 98, 506, 119, 2, 425, -627,
	446, 532, 2, 2, 2, 2, 2, 2, 2, 506,
	-285, 2, -266, 185, 490, -308, 218, -309, 2, 459,
	-638, 406, -527, 218, 2, 558, -301, 218, 2, -301,
	234, 247, -280, 218, 2, 511, 509, 511, 509, 190,
	2, 245, 2, 245, 2, -479, 2, -480, -474, -481,
	603, 351, -489, 2, -488, -525, 554, -106, 605, -106,
	605, 463, 605, -530, -297, -297, -442, 2, -135, -118,
	2, -442, 2, -135, 2, -266, 2, -132, -530, -131,
	605, 190, -266, 2, -442, 2, -135, -118, 2, -442,
	2, -135, 2, -216, 185, 2, 120, 506, -191, 2,
	185, 549, 2, 8, 2, 225, -530, 454, 401, 177,
	2, 468, 2, 469, 74, -416, 574, 74, 190, 2,
	190, 2, -399, 2, 568, 394, 190, 2, 2, -590,
	2, 350, 190, 2, 190, 2, 190, 2, 190, 2,
	190, 2, -190, 464, 526, 505, 398, 253, 2, -135,
	565, -118, 253, 252, -442, 565, 2, -613, 185, 452,
	-442, 2, 524, 262, 160, 190, -399, 2, 190, 2,
	190, 2, 5, 2, 399, 488, 2, 251, 393, 488,
	2, -297, 506, 558, 459, 120, 28, 2, 451, 2,
	2, 88, 89, 190, 2, 190, 2, 205, 190, 2,
	190, 506, -380, 607, 574, 2, -391, -478, -428, -429,
	-428, 521, -356, -358, -191, 468, 2, -228, -389, -230,
	185, -419, -420, -231, 276, 172, 346, -232, -398, 28,
	139, -398, -398, 60, 606, 606, 11, 12, 76, 41,
	595, 596, 597, 598, 183, 599, 600, 593, 594, 592,
	585, 586, 590, 257, 258, 95, 589, 587, 86, 290,
	445, 173, 174, 175, 176, 422, 232, 34, 233, 14,
	15, 16, -322, 33, 355, 275, 575, 222, 472, 588,
	17, 18, 19, 248, 250, 336, 50, 225, -274, 366,
	-321, 503, 67, -442, -442, -442, -442, -442, -442, -442,
	-442, 362, 605, -385, -437, 603, -223, 605, 605, 605,
	605, -518, -223, -442, -456, 606, -376, 605, -223, -456,
	-451, 605, 443, 603, 605, -459, -442, 5, 5, 5,
	605, 607, -571, 569, 185, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 389, -500, 605, -499, 605, -499, -499, 559, -497,
	605, 577, 570, 605, -497, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 559, 610,
	-568, -352, 605, -381, -483, -442, 597, -381, -381, 350,
	-373, -442, 106, -402, 254, 315, 191, 272, 437, 239,
	-439, 609, -439, -467, 577, -223, -475, -296, -223, -477,
	605, -473, -467, -107, -518, -90, -103, -112, -135, -150,
	-195, -196, 597, -297, 605, 190, 605, 607, -522, 190,
	-362, -280, -307, -266, -297, -313, -314, -319, -291, -266,
	2, 138, -373, -586, 533, 453, 28, 459, -528, -269,
	38, -453, -492, -493, -542, 609, -541, -495, -505, -501,
	-504, 379, 383, -524, 54, 555, -507, 244, 4, -533,
	-535, 241, 242, 480, 51, 403, 180, 126, 125, 343,
	56, 517, 518, 519, 520, 195, 196, 58, 556, 492,
	69, 70, -586, 533, 453, 28, 459, 185, -528, 185,
	-528, 2, 2, 155, 2, 2, 2, -266, -244, 610,
	64, 430, 155, -371, 218, -244, 155, -244, 155, -320,
	218, -319, -244, 155, -244, 610, 155, -244, 610, 155,
	607, 610, 155, -528, 2, -415, -521, -373, 38, -429,
	2, 127, 4, 5, -641, 610, 274, -325, 289, 333,
	214, 351, 572, 344, 131, -529, 5, 4, -452, -464,
	127, 282, 244, -512, -514, 8, -513, 9, -515, 595,
	596, -520, -519, 109, 607, -522, -241, 423, 466, 365,
	-240, 24, 29, 143, 236, 319, 552, 161, -337, 237,
	-334, 369, 155, 484, 542, -600, -603, 450, 513, 162,
	421, 90, 344, 466, 365, 423, 155, -395, -397, 38,
	118, 319, 364, 61, 228, 294, 295, 486, 562, 155,
	466, 365, 423, 365, -13, -255, 24, 143, -257, -252,
	466, -603, 99, 423, 581, 428, 375, 498, 392, -603,
	-600, 270, -602, 564, 332, -243, 484, 542, -600, -603,
	450, 423, -242, -339, -334, 369, 155, 609, 24, 143,
	423, 466, 365, -623, -624, 29, 423, 365, -594, -287,
	-565, 225, 568, 155, -287, -287, -478, 218, -617, 185,
	2, -610, -131, 266, 5, 10, -530, -131, -369, 610,
	610, -522, 597, 452, 451, 155, 155, 155, 155, 253,
	185, 334, 334, 2, 2, 2, 2, 2, 192, -605,
	-628, 2, 2, -297, 218, -354, 350, -589, -370, 506,
	-297, 185, 334, 43, -300, 218, 2, -303, 558, -594,
	334, -302, 218, -297, 38, 605, 334, 2, -415, 2,
	234, -565, 334, -479, -316, -297, -474, -316, 466, -290,
	38, -439, -297, 606, 610, -489, -489, -530, -204, 568,
	190, 605, -216, 568, 568, 253, -486, 610, -485, 225,
	-531, -530, -132, -530, 426, 253, -530, -589, -280, 2,
	-297, 2, 506, 255, -530, -204, 225, -530, -530, -530,
	-521, 28, 469, 2, -190, 464, 526, 89, 469, 2,
	-297, 506, 120, 234, 80, -617, 185, 2, -266, -592,
	185, -587, 438, 453, 533, -586, -297, 120, -297, 120,
	-297, 120, -297, -297, 2, 2, 2, 2, 2, 85,
	2, -135, -442, 2, 85, 2, 46, 485, -613, 185,
	2, 524, 2, 524, 2, -266, -266, -266, 487, 274,
	-297, -297, -297, -298, -303, 454, 507, 534, 452, -442,
	2, -630, 2, 190, 185, 2, 506, 234, 506, 234,
	120, 190, 74, 120, 28, 506, 449, 607, 4, -244,
	610, -270, -228, -389, -521, -390, -389, -229, -228, -231,
	185, 402, 543, 319, 470, 259, -420, -419, 28, -442,
	-424, 179, 318, -442, -422, -444, 595, 596, -513, -515,
	-372, 344, -222, -222, -222, -359, -469, -442, 392, 234,
	-494, -492, -492, -295, -522, 517, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, 275, 222, 472, 50, 225, -442, 521, -442,
	-442, -442, -442, 312, 334, 340, 530, 170, 540, 139,
	344, -644, 500, 40, -449, -223, -377, 605, -463, 35,
	483, 28, -456, 605, 2, -437, -442, -438, -323, -321,
	-266, 595, 596, 597, 598, 599, 600, 585, 586, 587,
	14, 15, 16, 590, 594, 592, 593, 183, 95, 589,
	290, 445, 86, 173, 174, 175, 176, 257, 258, 17,
	18, 19, 34, 588, -374, -373, -373, 606, 557, 28,
	139, 597, 2, 606, 610, 38, 606, -442, -374, -455,
	-451, -373, -462, -461, 565, -410, -411, 573, 299, 123,
	216, 297, -412, 457, -516, 8, -522, 597, -572, 178,
	209, 605, 606, 2, 606, 2, 606, -442, 2, 606,
	-442, 2, 606, -442, 2, 606, -442, 2, 606, 2,
	606, 2, -442, -442, -442, -442, -442, -442, -442, -373,
	8, -516, -516, 517, 517, -516, -516, -516, -508, 379,
	380, 381, 382, 277, 278, 279, 280, 383, 384, 385,
	386, 304, 305, 306, 307, 300, 301, 302, 303, 308,
	309, 310, 311, 200, 201, 202, 203, 196, 197, 198,
	199, -508, -404, 2, -510, -373, 4, 573, 299, 123,
	216, 297, 457, 5, -404, 2, -405, 2, -442, -373,
	-406, -443, -444, 595, 596, 588, -322, -456, -407, 2,
	-442, -374, -442, 57, 269, 523, -408, -442, 190, -373,
	-373, 2, -373, 2, -569, 38, -373, -365, 610, 190,
	38, 4, -365, -365, 605, 606, 610, -403, 213, 293,
	288, 247, -403, -473, -402, 254, -400, 360, -400, -400,
	-467, -281, 603, 611, -522, -467, -466, -465, 38, -290,
	357, -467, -467, 607, 606, -466, 604, -584, 605, 608,
	608, 608, 608, 608, -297, 605, -373, -522, 607, 489,
	2, 606, 248, 248, 248, 248, 248, 350, 444, 606,
	521, -588, -306, -310, 507, 2, 568, -105, 352, 606,
	610, -364, 37, 603, 607, -516, 2, 2, -511, 559,
	605, 605, -411, 605, 190, -588, -310, 507, 2, -593,
	-363, -363, 521, -266, 2, -297, -371, -244, 155, -371,
	-371, -244, 610, 155, -280, -301, -306, -308, -310, -266,
	-527, -528, -244, -302, -620, 606, 525, -430, -324, 402,
	482, 424, 461, 502, 8, 9, 8, 9, 610, -522,
	610, -621, 93, 521, 78, 453, -259, 283, 521, -433,
	218, 78, -543, 93, -283, -544, -266, 72, 539, 392,
	189, 153, -621, 93, 392, -621, 93, 2, 236, 93,
	466, 487, 28, 60, -478, 41, 41, 28, -601, -602,
	270, 190, 574, 506, 234, 453, 521, 521, -478, -397,
	-492, 118, 294, 295, 60, -517, -512, 595, 596, -517,
	60, -517, -517, -517, 568, -300, -478, 453, 521, 521,
	521, 412, 412, -252, -148, 521, 521, 28, -191, 431,
	127, -642, 587, 412, 270, -602, 521, 190, 610, 41,
	41, 28, -601, 190, 521, -319, -281, 553, 42, 553,
	42, 553, 521, 42, 453, 521, 610, 42, 521, 521,
	-13, 466, -595, -271, 105, 325, 287, 326, 97, 322,
	96, 321, 103, 323, 104, 324, 560, 337, 561, 338,
	63, 320, 298, 327, -272, -273, 146, 371, 551, 120,
	-527, -13, -13, 466, 365, 423, 155, -618, 225, 28,
	-607, 225, -486, 225, -486, -311, -266, 607, -135, -442,
	-442, -135, -442, -135, 46, 155, 155, 2, -638, 263,
	605, -328, 334, 190, -362, -487, 245, 610, -370, -586,
	155, -527, -396, -395, 334, -302, 218, 2, 155, -352,
	334, 149, 605, 400, 2, 155, -282, 218, -267, -266,
	-415, -246, 510, 155, -393, 549, -425, -135, 605, 127,
	38, -425, -382, -383, -484, -384, -283, 605, -290, -439,
	-106, -488, 606, 606, 606, -203, 354, -202, -266, 5,
	-216, -353, -284, -283, 119, 404, 404, -210, 568, -131,
	-132, 606, 610, -486, 225, 490, -204, -204, -486, -486,
	-297, 185, -530, -204, -204, -204, 2, 2, 2, 2,
	-399, -297, -280, -319, -297, 28, 607, -528, -528, -310,
	-306, -399, -280, -399, -280, -399, -280, -399, -399, -135,
	-442, 487, 2, 463, 185, 185, 607, -399, -355, 433,
	2, 400, 120, 506, 369, 234, -297, -319, -297, -319,
	-280, 120, -280, 121, -297, 4, -478, -390, -229, 351,
	259, 470, -422, -423, -444, 443, 444, -423, 443, 444,
	8, 9, 8, 9, -233, 474, 339, -371, 610, -238,
	39, 135, 259, -297, 574, 151, -442, -442, 521, -644,
	500, -449, 151, -442, 312, 340, 530, 170, 540, 139,
	344, 190, 605, -443, -443, 606, -375, -442, -442, 604,
	613, 606, 607, 606, -358, 610, -356, -442, -373, -373,
	606, 607, -373, -362, 604, 604, 610, 606, -460, -461,
	144, -442, 521, 521, 521, 521, 605, 606, 607, -577,
	361, 605, 605, -442, 606, 606, 606, 606, 38, 610,
	610, 610, 606, 610, 610, 610, 606, 606, 606, 610,
	606, 574, 574, 606, 606, 606, 606, 610, 606, 610,
	606, 190, 606, 606, -413, 376, 606, 11, 12, 595,
	596, 597, 598, 183, 599, 600, 593, 594, 592, 585,
	586, 587, 86, 290, 445, 14, 15, 16, -322, 248,
	225, -443, -443, -443, -443, 606, -447, -448, 190, 185,
	38, -408, -408, -408, 606, 190, -373, 606, 606, 605,
	-570, 292, 334, 606, -436, -435, 566, -483, -366, 2,
	-473, -292, -522, -436, -436, -373, -442, 254, 254, -401,
	549, 350, -403, -473, -466, -518, -441, -440, 187, 39,
	135, 328, 329, 330, 221, 188, -466, -290, -352, -466,
	-466, -522, -467, -467, -465, 606, -585, -518, 606, -367,
	-476, -564, -358, 607, -522, -213, -565, -192, 5, 340,
	-192, -192, -192, -192, -297, -528, 521, 521, 225, 25,
	377, -492, 603, 604, 8, -522, 605, -516, -516, -516,
	-528, 190, 190, 225, 350, 190, -527, 2, -244, -371,
	-244, -244, -319, -320, -244, -244, -244, -394, 568, -519,
	-429, 537, 83, 402, 517, -519, -240, 423, -283, -283,
	-297, -307, 204, 413, -527, 334, -433, 218, -245, 334,
	218, -291, -492, 605, -417, 570, 259, 259, 549, -283,
	-291, 259, 218, -283, 218, -291, 2, -291, -596, 402,
	345, -442, 60, -335, 281, 400, 335, -241, 423, 466,
	365, -135, -135, -135, 605, -620, 549, 138, -297, -319,
	-297, -307, -527, -302, 466, 365, 423, 331, -313, -517,
	-517, -395, 466, 365, 423, -307, -527, -300, -527, -251,
	218, -266, -251, 218, 453, -280, 412, 574, 45, -642,
	521, 190, -442, -442, -242, -135, -135, -135, 605, -281,
	-243, 423, 5, 218, -283, 5, -283, 218, 5, -266,
	-283, -307, -527, -624, 24, 143, -283, -307, -527, -271,
	371, -530, 340, 545, -280, -594, -287, 453, 521, 521,
	-478, -614, -615, 206, 436, 453, 439, -528, -131, -207,
	568, -131, -201, 229, 597, -591, -530, -266, 558, -266,
	-326, -329, -327, -283, -434, -433, -547, -548, -543, 275,
	234, 539, 247, 171, 93, -219, -220, 570, 568, 155,
	-317, -297, 603, -204, -530, -297, -487, -308, -309, 155,
	-352, 334, -527, 38, 155, 605, 2, 2, -301, 350,
	334, -282, 218, -247, 145, -642, -280, -436, -366, -392,
	-427, 433, 350, -353, 554, -290, -392, -368, 610, 190,
	587, 607, -353, -482, 597, -106, -106, -204, 610, 605,
	587, 587, 605, -530, 606, 610, 607, 605, 587, 587,
	-212, 354, -211, 147, 261, 246, 476, 477, 478, 479,
	137, 475, 124, 317, 230, -486, -530, -210, -132, 190,
	190, -65, 568, 506, -204, 609, 439, -266, -399, -399,
	-399, 463, 463, -266, -362, -293, -522, -280, -297, -294,
	-319, 185, 185, -280, 543, -423, 351, 286, -469, -239,
	576, -297, 609, -442, -442, 151, 151, -442, -443, -443,
	-442, 151, 190, 605, -442, -453, 33, 33, 606, 610,
	-438, -442, -321, 606, 557, -358, -358, 606, 597, -522,
	609, 606, -451, 148, -442, 515, 299, 216, 297, -412,
	297, -412, -412, -516, 5, -522, 597, -578, -286, 605,
	-266, 566, -357, 356, 606, -494, -492, -442, -442, -442,
	-442, -442, -516, -497, -497, -512, -512, -442, -447, -442,
	-494, -492, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, 139, 334, 344, -443, -448, -447, -442, -442,
	-492, 606, 606, 606, -373, -105, 605, 292, -386, 209,
	-442, -486, 610, -386, -386, 606, -473, -473, 605, -442,
	254, 604, 610, 612, 587, 587, -352, 607, -465, -466,
	604, 606, 610, 606, 610, -426, 38, 606, -522, -436,
	-215, -214, 136, 53, 107, 134, 340, 248, -616, 568,
	-528, -528, 453, 353, 5, 8, 603, 604, 607, -516,
	606, 606, 606, -528, -528, 453, -586, 533, 453, 28,
	-528, -244, -244, 119, 319, -442, 521, 521, 60, 225,
	155, 334, 551, 334, -544, 153, -549, -442, 605, 234,
	605, 605, 2, -235, -236, -237, 143, 466, 24, -622,
	2, 549, 155, -244, 155, -244, 572, -335, 605, 605,
	521, 453, -259, 521, 568, -373, -442, -205, 127, -521,
	-603, 609, -603, 609, 453, 521, 521, 453, 521, 521,
	334, 155, 568, 169, 169, 574, -251, -442, -442, 185,
	521, 568, -373, 521, -496, 48, 26, 334, -301, -244,
	155, 521, 521, 533, 466, -530, -530, 340, -13, -307,
	-527, -302, 466, 365, 423, -593, -593, 206, -310, -618,
	-486, -209, 354, -208, 147, 435, 137, 261, 230, -486,
	-207, 190, 245, 568, -302, 2, 606, 606, 610, 610,
	-550, -245, -297, -282, 234, 234, -289, -267, 38, 348,
	348, 605, -297, -86, 568, -485, -518, -597, 568, 43,
	-300, 38, 155, -594, -135, -302, -490, -491, 5, 38,
	-297, 155, 350, 334, -248, 268, -642, -526, -565, -358,
	-392, -381, 335, 91, 606, -436, -383, -366, -442, 2,
	606, -202, -203, -530, -530, -530, -204, -216, -284, 2,
	-531, -530, -530, 610, 605, 587, 587, 587, 587, 587,
	587, -210, -486, -131, -135, 354, -297, 597, -399, -341,
	-340, 369, 344, -341, 443, 443, 351, 179, 264, -238,
	-281, -442, -442, 151, 33, 33, -442, -442, -453, 606,
	-442, -442, -373, 604, 5, -442, 606, 606, 8, -442,
	606, 607, -579, -266, -442, 606, 60, 606, 606, 610,
	610, 606, 606, 606, 606, 606, 606, 606, -448, 190,
	139, 344, 605, 606, 606, -105, -450, 212, 60, -473,
	-450, -450, -401, -362, -473, -440, -281, 603, -281, 603,
	-522, -518, -476, 605, 607, -214, 587, -530, -530, -192,
	206, -616, -616, 568, -310, 604, 2, 603, -522, 606,
	-310, 190, -588, -310, 507, 119, -283, -283, 506, 443,
	-251, 392, -433, 155, 155, -551, 93, -553, 76, 171,
	102, 334, 340, 539, 392, 72, 127, 350, 409, -632,
	-633, -634, 38, 579, 580, 606, -360, -470, -564, 605,
	-266, -360, -362, 334, 495, 127, 350, 334, 127, 350,
	563, 119, 2, 533, 79, -283, -291, -362, -362, -297,
	-307, -527, 163, 606, 610, 587, 2, 597, 597, -307,
	-527, -302, -307, -527, -300, 155, -251, 367, 169, 521,
	-135, -442, 163, 606, -281, 5, 5, 155, -278, 76,
	-283, 5, -283, -301, 119, 453, 521, 521, 350, 350,
	353, -614, -615, -207, 610, 605, 587, 587, 587, -207,
	-531, -131, 2, -352, -342, 236, -283, -548, -545, -546,
	392, -434, -552, -554, 171, 392, -330, 605, -282, -267,
	605, -135, 2, -218, -217, -266, 5, 605, -328, 354,
	604, -599, 354, -598, 117, 137, -527, -396, -135, -302,
	-350, 568, -352, 606, 610, 149, -418, 549, -281, -297,
	155, -249, 267, -642, -526, -246, -421, -419, 140, 605,
	350, -135, -358, 587, 606, 606, 119, 606, -211, -212,
	-530, -131, -530, -530, -530, -131, -210, -486, -66, -67,
	234, 93, 374, -294, 506, 234, 605, 605, -238, -442,
	-442, -442, 606, -358, -522, 597, -573, 369, 606, -469,
	-442, -442, -443, 190, 605, -453, 606, -574, 567, -442,
	-387, -388, -442, 441, 108, 210, -574, -574, 606, -518,
	-518, 2, -530, 353, 2, 521, 603, 2, 190, -528,
	190, 190, 225, 225, 38, 412, -433, -291, -291, -295,
	-288, -266, 171, 218, 340, 563, -417, 259, 605, -443,
	543, -297, 605, 2, 217, 217, 30, 60, -635, 131,
	238, 606, 610, -471, -277, -266, -442, -471, 606, 606,
	340, 543, 340, 563, -442, 543, -492, 605, -244, -244,
	606, 606, -442, 521, -521, 100, -519, 2, -603, -251,
	-280, -442, 185, -442, 521, 5, -244, -295, -244, -244,
	-278, 533, -307, -527, -302, -619, 507, 460, 534, 454,
	193, 442, -619, 185, -208, -209, -530, -131, -131, -207,
	38, -336, -337, 2, -550, 259, -288, 259, 227, 154,
	-360, 605, 605, -362, -631, 568, 606, 610, 587, 587,
	-326, -219, -87, -88, 522, -485, 610, 605, 587, -352,
	319, 119, 38, 5, 605, 605, -266, 350, 605, -281,
	-261, 92, -642, -526, -247, -392, 335, -362, 93, -421,
	-449, -204, 605, -204, 606, 610, 28, 605, 28, 605,
	-297, -319, -373, -373, 606, -358, 60, 610, 606, 606,
	-443, -453, 606, -575, -576, -286, 610, 605, 605, 467,
	604, 604, -528, 2, -528, -528, -528, 453, -251, 392,
	-266, -544, -553, -288, 334, 549, -442, -443, -268, 605,
	-442, 605, 605, 38, 127, 238, 132, 223, -432, -636,
	101, 496, 226, -470, -238, 606, -431, 549, 409, -443,
	-278, -360, 605, 605, 605, 587, 190, -135, 605, -496,
	-244, -301, 521, 2, 2, 190, -593, 606, -609, 407,
	-135, -219, 605, -331, 81, 94, 128, 217, 194, 235,
	487, 493, 28, -331, 606, -360, -360, 606, -332, 350,
	119, 319, -217, -519, -519, 606, 38, -88, 9, -598,
	-599, -442, 38, 119, -135, -490, -360, -297, -360, 350,
	-253, -252, 276, -526, -248, 606, -291, -392, -531, -67,
	-362, -362, 606, 606, -580, 400, 444, 211, -373, -359,
	606, 610, 38, -388, 2, 2, 2, -616, -310, 412,
	-245, 155, 213, 606, -555, 291, -266, 606, -396, -396,
	38, 132, 223, -338, -334, 605, -239, -471, 213, -297,
	-604, 549, 606, -344, -343, -340, -346, -345, -340, -373,
	-519, 100, 367, -373, -278, -528, -528, 350, -611, 191,
	-610, 5, 10, -332, -361, -472, -283, -431, 606, 606,
	82, 119, -342, -135, 606, -135, 2, -350, 606, 606,
	-418, 606, -297, -250, -532, 412, 414, -642, -249, -436,
	140, 606, 606, 606, 606, -581, -582, 50, 536, 109,
	-442, -581, -581, -576, -578, 190, 171, 568, -556, -559,
	-558, 584, 473, 191, 368, 606, 495, 562, 606, 606,
	-635, -362, 568, -352, -442, -431, 606, 610, 554, 606,
	610, 554, 606, 190, 606, -244, -616, -244, -619, -206,
	568, 46, -260, -259, 606, 610, -432, -431, -338, 391,
	133, 143, -336, -631, -431, 605, -432, 605, -258, -257,
	-642, -512, -261, 140, 335, 543, -204, -583, 153, -582,
	388, 184, 443, 388, 184, -583, -583, -528, -288, 55,
	-558, 584, -559, 584, 543, 133, -436, 606, 55, -555,
	-343, 225, -345, 190, 367, 190, 451, -610, 30, -472,
	-338, -432, -220, 568, 444, 444, 2, -219, -332, -432,
	-360, -338, -360, -254, -255, -256, -362, -253, 335, 543,
	466, 109, 209, 516, 319, 33, 587, -557, 319, 430,
	64, 466, -557, 587, -556, 605, 605, -528, 354, -220,
	-338, -436, 2, -332, -338, 606, -220, 606, -250, 466,
	-382, 443, 358, -582, -442, 23, 340, 127, -442, -635,
	-373, -373, -244, -203, 605, -436, -220, -260, -220, -431,
	-436, -432, -258, -382, -436, 606, 606, -203, -436, -436,
	-432, -338, -254, -436, -333, -334, 521, 606, -338, -220,
	605, -220, -436, -373, -436, 606, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 561, 562, 564, 565, 566, 568,
	569, 571, 573, 575, 576, 577, 579, 580, 582, 583,
	584, 585, 586, 588, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	661, 663, 0, 1437, 1439, 1441, 1443, 0, 817, 0,
	36, 37, 39, 0, -2, 340, 342, 344, 346, 0,
	377, 379, 380, 382, 384, 385, 386, 388, -2, 0,
	494, 495, 497, 499, -2, 0, 1031, 1033, 1035, 0,
	650, 652, 0, 1038, 1040, 1042, 0, 0, 673, 674,
	0, 1549, -2, 665, 667, 669, 671, 742, 744, 746,
	748, 750, 752, 754, 756, 758, 760, 761, 763, 765,
	767, 769, 771, 772, 774, 776, 778, 779, 781, 782,
	784, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	804, 806, 808, -2, 811, 812, 813, -2, -2, 0,
	-2, -2, -2, 1455, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 438, 440, 442, 444, 446, 449,
	451, 453, 1607, 501, 503, 505, 507, 509, 511, 513,
	0, -2, 1621, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1580, 1582, 1584, 1586, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 563, 567, 570, 572, 574, 578, 581,
	587, 589, 591, 546, 547, 550, 2319, 2337, 2338, 2339,
	2342, 2343, 2344, 2345, 2346, 2347, 2807, 2888, 2889, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
	2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 2786, 548, 549, 1220,
	0, 615, 613, 2304, 616, 2602, 618, 620, 488, 489,
	490, 491, 492, 493, 0, 643, 629, 1619, 644, 646,
	647, 648, 649, 610, 608, 0, 648, 643, 2373, 641,
	1435, 1436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 417, 1279, 1280, 1281, 1420, 1421, 2650,
	1462, 0, 239, 662, -2, -2, 2772, -2, 696, 697,
	-2, -2, 711, 715, 706, 2776, 0, 2653, 2637, -2,
	718, 1438, 1440, 1442, 815, 816, 2323, 0, 0, 0,
	0, 0, 38, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 249, -2, -2, -2, -2, 0, 0,
	2698, 2425, 2272, 2339, 2275, 2270, 341, 343, 345, 347,
	348, 0, 0, 0, 0, 0, 0, 0, 378, 381,
	383, 387, -2, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1102, 1094, 1095, 1342,
	0, 0, 0, -2, 496, 498, 551, 552, 0, 1608,
	1608, 559, 560, -2, 0, 0, 0, 0, 311, 301,
	1032, 1034, 1036, 1037, 0, 0, 0, 0, 0, 651,
	653, 0, 0, 279, 1039, 1041, 1043, 1044, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 666, 668, 670,
	672, 743, 745, 747, 749, 751, 753, 755, 757, 759,
	762, 764, 766, 768, 770, 773, 775, 777, 780, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 809, 810, 823, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	925, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 1012,
	0, 0, 826, 829, 830, 831, 832, 833, 834, 0,
	898, 923, 924, 934, 814, 0, 1260, 1609, 1464, 1445,
	1459, 1464, 1447, 1448, 1449, 1450, 1451, 1456, 1458, 1452,
	1453, 1454, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 60, 439, 441, 443, 445, 447, 450, 452, 454,
	-2, 1578, 1579, 502, 504, 506, 508, 510, 512, 514,
	654, 0, 656, 0, 828, -2, 0, 1613, 1613, 1613,
	0, 0, 1579, 1577, 0, 659, 660, 722, 723, 1886,
	0, 0, 0, 0, 0, 0, 0, 0, 2146, 1974,
	0, 724, -2, 2007, 2009, 2747, 2575, 2772, 2145, 2011,
	2012, 2013, 2014, 2015, 0, 2017, 2018, 2019, 2020, 2021,
	2022, 0, 2024, 0, 2029, 2030, 2031, 0, 2754, 2249,
	2333, -2, 0, 0, 2760, 2329, 0, 2112, 2047, -2,
	-2, 2356, 2335, 1818, 1819, 1820, 1821, 1822, -2, -2,
	2790, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 0, 2735, 2755, 2756, 2761, 2763, 2757, 2744,
	2072, 2439, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1845, 1854, -2, -2, -2,
	-2, -2, -2, -2, 2748, 2749, 2766, 2769, 2775, 2780,
	2781, 2753, 2762, 2789, 2791, 2792, 2793, 2794, 2795, 2796,
	2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806,
	1846, -2, -2, -2, -2, 1596, 2616, 1599, 1220, 1597,
	1581, 1583, 0, 1585, 0, 0, 0, 1590, 1616, 1614,
	0, 1665, 1594, 1595, 1688, 1688, 1712, 0, 1693, 0,
	1712, 1608, 1739, 0, 1699, 2642, 2048, 2049, 0, 2339,
	2334, -2, -2, 2787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 0, 617, 619, 0, 0,
	0, 642, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 423, 424, 2755, 0, 0, 0,
	429, 0, 431, 432, 433, 434, 435, 436, 437, 209,
	2755, 519, 544, 0, 209, 2755, 522, 209, 2755, 525,
	0, 528, 1340, 209, 2755, 531, 2300, 209, 2755, 534,
	536, 2308, 209, 2755, 540, 2315, 2313, 541, 0, 543,
	229, 225, 226, 227, 228, 1431, 1432, 1433, 1434, 0,
	1461, 1341, 664, 0, 690, 0, 694, 695, 2743, -2,
	0, 2662, 699, 700, -2, 702, 1465, 1469, 1470, 1471,
	1472, 1473, 0, 0, 0, 0, 1478, 0, 0, 0,
	0, 691, 692, 709, 710, 716, 719, 0, 818, 819,
	820, 821, 822, 71, 0, 2755, 1739, 73, 0, 2294,
	2364, 2365, 2366, 2367, 2368, 2788, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861,
	2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871,
	2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881,
	2882, 2883, 2884, 2885, 2886, 2887, 2790, 77, 0, 2755,
	82, 0, 2755, 0, -2, 95, 0, 108, 0, 135,
	-2, -2, -2, 116, 0, 2755, 0, 2269, -2, 0,
	221, 302, 303, 304, 0, 1069, -2, 0, 1273, 1275,
	1275, 0, -2, 0, 0, 0, 1022, 2266, 2271, 1023,
	2290, 1024, 2276, 0, 349, 350, 351, 352, 353, 0,
	354, 2755, 356, 357, 0, 359, 360, 2755, 362, 363,
	0, 365, 0, 367, 0, 261, 265, 2755, 314, 315,
	2352, 2353, 2360, 2361, 2362, 2363, 2755, 391, 393, 0,
	395, 396, 0, 398, 0, 0, 0, 402, -2, 418,
	0, 415, 405, 406, 408, 409, 410, 411, 412, 0,
	458, 456, 2305, 0, 0, -2, 2755, 0, 1066, 0,
	0, 1320, -2, 0, 1266, 0, 1327, 2755, 1323, 0,
	-2, 0, 1606, 2755, 1482, 1098, 1099, 1100, 1101, 1751,
	485, 0, 1513, 0, 1515, 0, 1535, 1745, 1688, 0,
	0, 1750, 0, -2, 604, 2322, -2, 554, 0, 555,
	0, -2, 0, 328, 0, 0, 1047, 1049, 1050, 1052,
	1053, 1056, 1057, 1058, 1059, 0, 1061, 1725, 280, 282,
	0, 0, 0, 1046, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 0, 0, 675, 0, 0, 824, 825,
	0, 0, 841, 842, 843, 0, 328, 2654, 2611, 2461,
	850, 0, 853, 856, -2, 0, 0, 0, 0, 860,
	0, 865, 866, 867, 0, -2, 0, 874, 876, 1030,
	878, 0, 0, 880, 0, 884, 0, 887, 0, 889,
	0, 891, -2, -2, -2, 899, 900, -2, 905, -2,
	0, 909, -2, 0, 912, 0, 915, -2, 0, 925,
	921, 922, 0, 0, 0, 0, 942, 943, 0, 952,
	0, 955, 956, 957, 0, 961, 962, 0, 964, 965,
	966, 967, 0, 2725, 2659, 2425, 0, 975, -2, 981,
	983, 0, -2, 0, 999, 0, 1003, 0, 0, 1011,
	0, 0, 827, 0, 835, 836, 209, 1743, 1444, -2,
	1446, 0, -2, 0, 655, 0, 658, 1638, 1564, 1561,
	0, 1635, 1636, 1565, 0, 0, 0, 1572, 0, 1611,
	1612, 0, 0, 0, 1551, 1552, 0, 0, 0, 0,
	2151, 2152, 2153, 2154, 2167, 2155, 2156, 2166, 2164, 2165,
	2157, 2158, 2163, 2177, 2178, 2168, 2169, 2159, 2172, 2170,
	2171, 2173, 2174, 2175, 2176, 0, 0, 2182, 0, 2160,
	2161, 2162, 2190, 0, 0, 2191, 0, 2193, 0, 2183,
	2179, 2180, 2181, 0, 1953, 1955, 2257, 0, 0, 0,
	2189, 2184, 2185, 1891, 1892, 1893, 1894, 1895, 1928, 1932,
	1933, 0, 0, 2008, 2254, 2253, 2010, 0, 0, 2205,
	0, 2023, -2, 0, 2146, 2200, 0, 0, 2032, 2033,
	2034, 0, 0, 2205, 0, 0, 2248, 2044, 2045, 1883,
	0, 0, 2114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 1831, 0, 1833, 0, 1834, 1835, 1842, 1855,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 2229, -2, 0, 0, 0, 0, 1847, 0,
	1598, 0, 0, 1669, 2258, 2262, 2263, 1669, 1669, 0,
	0, 2206, 1736, 1736, 0, 0, 1731, 1731, 1731, 1729,
	1712, 0, 1712, 1722, 0, 1712, 1712, 0, -2, 1693,
	0, 0, 1722, 0, 1706, 592, 594, 596, 598, 599,
	600, 602, 1740, 1741, 0, 0, 0, 0, 2340, 0,
	0, 0, 0, 2312, 0, 0, 2325, 0, 0, 2299,
	374, 0, 0, 0, 2708, 2653, 0, -2, 622, 645,
	1608, 0, 2208, 1766, 1770, 0, 1772, 1773, 1774, 1775,
	1776, 0, 0, 1767, -2, 1843, 1845, 1866, 2357, 2358,
	2359, 1826, 1827, 1828, 1829, 1830, 1838, 1825, 1825, 1825,
	1836, 1865, 1857, 1865, 1861, 1811, 1812, 1813, 1848, 1849,
	1850, 1851, 0, 2708, 2653, 0, -2, 0, 632, 0,
	0, 1546, 419, 0, 426, 427, 428, 0, 515, 0,
	207, 208, 0, 209, 2755, 520, 0, 523, 0, 209,
	2755, 2264, 529, 0, 532, 0, 0, 538, 0, 0,
	0, 0, 0, 209, 1548, 0, 0, 0, 0, -2,
	704, 712, 713, 714, 0, 1467, 0, 1474, 733, 734,
	735, 1476, 1477, 0, 1479, 707, 736, 737, 738, 739,
	740, 741, 0, 2278, 2279, 2280, 2281, 2284, 2285, 0,
	0, 705, 726, 708, 0, 720, 117, 1417, 0, 0,
	164, 0, 1417, 1417, 0, 0, 0, 0, 192, 0,
	1132, 0, 0, 0, 0, 135, 149, 160, 129, 130,
	131, 0, 0, 0, 0, 0, 0, 83, 1242, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 97, 98, 0, 0, 103, 104,
	0, 148, 0, 0, 0, 0, 0, 1510, 0, 139,
	135, 0, 0, 134, 136, 119, 0, 0, 135, 150,
	162, 0, 196, 198, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 231, 0, 0, 0, 1267, 0,
	0, 0, 1605, 0, 0, 0, 0, 2755, 1415, 0,
	1400, 0, 1725, 2510, -2, -2, 280, 1725, 1021, 0,
	0, 2340, 2274, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 0, 394, 397, 399, 400, 401, 0, 1319,
	0, 407, 448, 1191, 2755, 0, 0, 475, 470, 0,
	472, 0, 0, 0, 1241, 2755, 1239, 2309, 0, 1264,
	0, 1220, 2755, 2307, 0, 0, 0, 1328, 2349, 1337,
	1341, 1500, 0, 487, 0, 1516, 1518, 0, 0, 1746,
	0, 1748, 1688, 1608, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 1060, 286, 0, 1724, 0,
	0, 316, 1725, 280, 2628, 1045, 328, 328, 1725, 677,
	1725, 679, 0, 0, 844, 845, 0, 328, 328, 328,
	851, 852, 854, 855, -2, -2, -2, -2, 857, 858,
	949, 0, 0, 0, 948, 868, 0, 870, 873, 877,
	0, 1015, 2637, 2653, 2708, 1028, 949, 2425, 949, 2425,
	949, 2425, 949, 949, 893, 937, 945, 904, 911, 0,
	906, 910, 913, 916, 0, 918, 926, 0, -2, 0,
	929, 0, 931, 0, 933, 949, 950, 953, 960, 963,
	968, 969, 970, 971, 2320, 972, 973, 974, -2, 978,
	979, 0, 990, 995, 996, 992, 0, 0, 0, 0,
	0, 0, 1006, 1007, 0, 0, 1014, 0, 837, 1259,
	0, 1457, 1638, 1564, 657, 1555, 1637, 1556, 1563, 1566,
	0, 0, 1568, 0, 1570, 0, 1633, 1634, 1641, 1642,
	0, 1652, 1653, 1645, 0, -2, 0, 0, 1648, 1649,
	1574, 0, 1591, 1592, 1593, 1622, 1625, 1356, 0, 2888,
	1887, 1761, 1888, 1889, 2293, 0, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, -2, -2, -2, -2,
	-2, -2, -2, -2, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, -2, -2, -2, 1929, 1930,
	1931, -2, 2192, 2194, 0, 2257, 0, -2, 0, -2,
	-2, -2, -2, 1950, 0, 1952, 1957, 1959, 1961, 0,
	0, 0, 0, 2256, 1971, 2240, 2241, 0, 0, 2148,
	2149, 2150, 1956, 0, 1975, 2255, 2252, 0, 0, 2186,
	0, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 0, 2204, 1621, 2036, 0, 0,
	0, 0, 2043, 2028, 2202, 0, 2201, 0, 0, 0,
	2212, 0, 2247, 2243, 0, 2291, 1882, 1869, 1870, 1871,
	1872, 1873, 1874, 1884, 0, 2288, 2326, 2332, 2122, 0,
	0, 0, 2073, 2074, 2075, 2076, 2077, 0, 2079, 2080,
	0, 2082, 2083, 0, 2085, 2086, 0, 2088, 2089, 2090,
	2091, 2092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 0, 0, 2094, 0, 2215, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2096, 0, 2098, 2206, 2226,
	0, 0, 1976, 0, 0, 0, 0, 2146, 0, 2101,
	2206, 2234, 0, 0, 0, 0, 0, 2206, 0, 2239,
	0, 2108, 0, 2110, 1600, 0, 0, 1756, 0, 0,
	0, 2261, 1756, 1756, 0, 1664, 0, 0, 1732, 1733,
	1734, 1735, 0, 0, 1736, 0, 1726, 1730, 1727, 1728,
	1722, 1685, 0, 0, 2295, 1722, 1691, 1721, 0, 1220,
	1711, 1722, 1722, 0, -2, 1695, 1712, 0, 0, 593,
	595, 597, 601, 603, 0, 0, 1621, -2, 0, -2,
	330, 1219, 0, 0, 0, 0, 0, 0, 612, 614,
	0, 0, 535, 0, 0, 628, 0, 606, 0, 609,
	0, 1757, 1760, 0, 0, 1771, 1777, 1778, 0, -2,
	0, 0, 1867, 0, 0, 0, 0, 0, 640, 0,
	643, 0, 0, 0, 430, 545, 209, 517, 0, 209,
	209, 526, 0, 0, 209, 537, 209, 2316, 209, 2314,
	230, 542, 1547, 242, 0, 693, 0, 1466, 1475, 0,
	730, 0, 732, 0, 2282, 2286, 2283, 2287, 0, 721,
	0, 0, 0, 0, 1416, 0, 1363, 0, 0, 168,
	2755, 0, 211, 0, 0, 1184, 2301, 0, 1174, 0,
	0, 2447, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 1243,
	1244, 1246, 1253, 1255, 0, 1249, 2289, 0, 0, 1250,
	0, 1252, 1254, 1256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 1276, 0, 0, 1277, 1278, 1488,
	1489, 0, 1509, 1510, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 2268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1269, 0, 1315, 1313, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 0, 0, 0, 0,
	-2, 1271, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 319, 2267, 2277, 0, 1054, 1055,
	355, 358, 361, 364, 248, 0, 0, 403, 0, 0,
	1104, 1079, 0, 0, 457, 328, 0, 0, 471, 475,
	2318, 1064, 1237, 1240, 0, 1220, 2755, 1287, 0, 0,
	0, 0, 0, 0, 1326, 0, 0, 2755, 2296, 2348,
	2349, 1502, 1510, 0, 1756, 0, 1533, 1519, 0, 0,
	0, 1533, 1537, 1538, 1540, 1541, 0, 0, 1747, 1753,
	553, 605, 1608, 1608, 328, 326, 2578, 324, 321, 323,
	0, 0, 1522, 1524, 0, 0, 0, 274, 0, 283,
	1725, 281, 0, 286, 0, 0, 0, 469, 676, 681,
	839, 0, 328, 847, 848, 849, 895, 939, 947, 994,
	859, 861, 862, 863, 0, 0, 0, 1029, 1025, 1026,
	1027, 879, 949, 882, 949, 885, 949, 888, 890, 908,
	914, 927, 920, 928, 0, 0, 0, 941, 958, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 1000, 1001,
	1002, 1004, 1009, 1008, 1013, 838, 1744, 1559, 1560, 1562,
	0, 1571, 0, 0, 1647, -2, -2, 1646, 1650, 1651,
	-2, -2, -2, -2, 1567, 0, 1576, 1573, 0, 1632,
	1354, 1355, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1972, 0, -2, 1951, 1954, 1958, 1960, 1962, 0,
	0, 0, 0, 0, 0, 2195, 0, 2197, 1973, 2250,
	2253, 2188, 0, 2144, 0, 0, 1620, 1621, 1621, 0,
	2042, 0, 2203, 0, 2210, 2211, 0, 2035, 0, 2244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2046,
	0, 0, 0, 0, 2078, 2081, 2084, 2087, 0, 0,
	0, 0, 2067, 0, 0, 0, 2071, 1837, 1823, 0,
	1865, 1863, 1864, 1858, 1865, 1862, 1815, 0, 1814, 0,
	2093, 0, 2095, 2097, 0, 0, 2099, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 1980, 1981, 2001, 2100, 2232, 2233, 0, 0,
	0, 0, 0, 0, 2106, 0, 2238, 2107, 2109, 1608,
	0, 1601, 0, 1666, 1655, 1755, 0, 2259, 1725, 1668,
	1670, 2260, 2298, 1655, 1655, 0, 2207, 0, 0, 1716,
	0, 0, 0, 1718, 1689, 0, 0, 1683, 0, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1690, 1220, 1720, 1692,
	1696, 2326, 0, 1722, 0, 1707, 0, 1709, 1742, 0,
	1701, 1704, 0, 0, 2341, 1756, 0, 368, 375, 376,
	369, 370, 371, 372, 0, 1403, 0, 0, 0, 0,
	0, 2209, 0, 1762, 0, 1768, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 1545, 425, 516, 209,
	521, 524, 2265, 209, 530, 533, 539, 238, 0, 689,
	-2, 728, 729, 731, 0, 727, 165, 1417, 0, 0,
	1359, 1361, 1365, 1371, 1374, 0, 170, 2755, 182, 0,
	2755, 0, 1148, 0, 0, 0, 0, 0, 0, 1419,
	0, 0, 2755, 209, 2755, 209, 186, 188, 191, 0,
	195, 193, 0, 1136, 0, 0, 1139, 118, 1417, 0,
	0, 121, 125, 137, 0, 0, 0, 147, 0, 0,
	0, 1376, 1380, 1388, 0, 0, 0, 1247, 1248, 1251,
	1257, 84, 0, 0, 0, 1384, 1386, 1392, 96, 99,
	2755, 2310, 101, 2755, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 123, 127, 138, 0, 1394,
	120, 0, 224, 0, 0, 214, 209, 2755, 0, 216,
	0, 217, 218, 232, 0, 0, 0, 1067, 1068, 1314,
	0, 1262, 1263, 0, 1274, 1268, 0, 0, 0, 0,
	0, 1396, 1397, 0, 0, 0, 1415, 1412, 1725, 244,
	0, 1725, 252, 0, 2273, 0, 266, 390, 0, 0,
	0, 0, 1103, 1202, 1105, 1107, 1108, 1109, 211, 0,
	2349, 1174, 2499, 2349, 0, 0, 1074, 0, 0, 0,
	463, 459, 0, 468, 474, 473, 479, -2, 0, 0,
	0, 0, -2, 0, 0, 1330, 1324, 1325, 0, 0,
	0, 0, 2755, 1504, 1510, 0, 1606, 1621, 486, 1511,
	1533, 0, 0, 0, 1521, 1517, 1514, 1756, 0, 0,
	0, 0, 0, 1749, 1752, 556, 557, 305, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	284, 0, 287, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 286, 317, 276, 1725, 0,
	0, 678, 0, 0, 846, 0, 869, 872, 881, 883,
	886, 930, 932, 949, 959, 984, 2297, 985, 1126, 0,
	1126, 0, 0, 1005, 1569, 0, 1644, 1575, 1626, 1627,
	0, 1356, 0, 1890, 1935, 0, 0, -2, 0, 0,
	1939, 0, 0, 0, -2, 0, 0, 0, 2196, 2198,
	0, 2252, 2187, 2037, 0, 0, 0, 2041, 2025, 2026,
	0, 2147, 2213, 2242, 2246, 0, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 0, 2292, 2327, 2331, 2120, 2121, 2125,
	2306, 0, 0, 0, 2050, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1860, 0, 0, 2214, 2225, 2227,
	1977, 1978, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, -2, -2, -2, 1995, 1996, 1997, -2, -2,
	-2, 2002, 0, 0, 0, 2228, 2230, 2231, 2235, 2236,
	0, 2103, 2104, 2105, 2237, 0, 1608, 1602, 1663, 0,
	1754, 1667, 0, 1663, 1663, 1615, 1714, 0, 0, 1738,
	0, 1686, 0, 1687, 0, 0, 1719, 0, 1694, 1697,
	1698, 1708, 0, 1700, 0, 1703, 0, 2037, -2, 329,
	331, 333, 0, 336, 337, 0, 0, 0, 621, 0,
	1403, 1403, 0, 623, 607, 0, 0, 1764, 0, 0,
	1840, 1844, 1868, 634, 636, 0, 0, 2708, 2653, 0,
	633, 518, 527, 240, 0, 1723, 0, 0, 0, 0,
	0, 0, 210, 0, 1183, 0, 1146, 0, 0, 1173,
	0, 0, 1189, 172, 173, 174, 0, 0, 0, 0,
	184, 0, 0, 180, 0, 190, 194, 1133, 0, 0,
	0, 0, 1364, 0, 0, 0, 144, 145, 146, 0,
	151, 0, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 1495, 0, 1485, 141, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 1353, 234,
	0, 0, 0, 0, 0, 1261, 1317, 1318, 1270, 1377,
	1381, 1389, 0, 0, 0, 0, 0, 648, 1414, 0,
	252, 250, 0, 253, 0, 256, 257, 0, 0, 252,
	246, 0, 0, 0, 1220, 404, 1077, 1190, 0, 0,
	1192, 1110, 1114, 0, 2349, 2349, 0, 2303, 0, 1075,
	0, 0, 1191, 455, 0, 462, 0, 476, 0, 0,
	1241, 0, 0, 1265, 1290, 1220, 0, 1329, 1331, 0,
	1339, 0, 0, 0, 1506, 1510, 0, 1499, 1500, 1640,
	1512, 1531, -2, 0, 0, 1621, 1539, 1536, 1542, 1543,
	0, 325, 0, 320, 322, 0, 308, 0, 1523, 1525,
	0, 1048, 1051, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 286, 1725, 312, 0, 840, 864, 940, 986,
	1125, 0, 0, 988, 0, 0, 1643, 1630, 1631, 1628,
	1356, 1937, 1941, 0, 0, 0, 1943, -2, 0, 1965,
	-2, -2, 2199, 2251, 2016, 1621, 2038, 2040, 2027, 2245,
	1885, 0, 2127, 2124, 0, 2111, 0, 2062, 2063, 0,
	0, 2066, 2068, 2069, 2070, 1824, 1817, 1816, 2224, 0,
	0, 0, 0, 2102, 1603, 0, 2116, 0, 0, 1671,
	2116, 2116, 1715, 0, 1717, 1684, 1672, 0, 1681, 0,
	2327, 1710, 1702, 0, 0, 334, 0, 338, 339, 373,
	0, 624, 625, 0, 0, 1758, 1763, 0, 1769, 1839,
	0, 0, 0, 0, 0, 241, 166, 167, 1368, 1372,
	1369, 0, 169, 0, 0, 1147, 0, 1150, 0, 0,
	0, 0, 1157, 1174, 0, 0, 0, 0, 0, 0,
	1176, 0, 1175, 0, 0, 1206, 0, 1344, 1351, 0,
	-2, 0, 0, 0, 176, 200, 0, 0, 0, 0,
	203, 1418, 178, 0, 0, 209, 209, 0, 0, 1360,
	1362, 1375, 0, 0, 0, 0, 154, 0, 0, 1378,
	1382, 1390, 1385, 1387, 1393, 0, 102, 0, 1496, 0,
	140, 0, 0, 0, 1395, 222, 223, 0, 209, 0,
	209, 215, 209, 1353, 0, 0, 0, 0, 0, 0,
	0, 1398, 1399, 243, 0, 0, 0, 0, 0, 245,
	318, 252, 392, 0, 1135, 0, 1202, 1194, 1195, 1196,
	0, 1106, 1201, 1203, 0, 0, 1111, 0, 0, 0,
	0, 1091, 1076, 0, 1087, 0, 0, 1104, 1079, 0,
	460, 477, 0, 480, 0, 483, 1065, 1238, 1282, 1220,
	1285, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 1508, 1510, 0, 1501, 1502, 1533, 1639, 0, 0,
	0, 1520, 1640, 0, 327, 328, 0, 328, 288, 0,
	289, 290, 291, 298, 299, 300, 277, 278, 680, 682,
	0, 0, 688, 1124, 0, 0, 0, 0, 1629, 1945,
	-2, -2, 1966, 0, 2328, 2330, 1621, 0, 2113, 1623,
	0, 0, -2, 0, 0, 0, 1604, 1587, 0, 1662,
	1654, 1656, 1658, 2640, 2420, 2754, 1588, 1589, 1737, 0,
	0, 1705, 335, 1402, 626, 0, 0, 1765, 0, 631,
	0, 0, 0, 0, 0, 1370, 171, 0, 0, 1151,
	1152, 2302, 1154, 0, 1156, 1158, 1159, 1160, 0, 1163,
	0, 2351, 0, 1168, 1171, 1172, 0, 0, 1185, 1207,
	0, 1216, 0, 1346, 1356, 1350, 0, 1348, 1218, 0,
	175, 202, 177, 204, 199, 0, 1353, 0, 179, 189,
	0, 0, 122, 0, 0, 2414, 157, 155, 153, 100,
	1357, 143, 0, 124, 0, 224, 233, 1352, 235, 219,
	209, 0, 1379, 1383, 1391, 0, 1406, 1407, 1408, 1409,
	0, 0, 0, 0, 254, 0, 255, 258, 259, 0,
	0, 1079, 1134, 1078, 1193, 0, 1204, 1205, 0, 0,
	0, 0, 0, 0, 1081, 0, 1080, 0, 0, 0,
	0, 0, 461, 464, 0, 467, 0, 0, 0, 0,
	0, 1289, 0, 1332, 1330, 0, 1338, 0, 0, 0,
	1484, 0, 0, 1503, 1504, 484, 1526, 0, 0, 1533,
	1544, 307, 0, 310, 285, 0, 684, 0, 686, 0,
	987, 989, 0, 0, 2039, 2131, 0, 0, 2064, 2065,
	-2, 0, 2005, 2115, 2117, 0, 0, 0, 0, 0,
	1673, 1682, 1403, 1759, 638, 635, 637, 0, 1366, 0,
	1373, 211, 1149, 1153, 0, 0, 0, 1164, 1224, 0,
	0, 1241, 1241, 1177, 0, 0, 1210, 1211, 1131, 0,
	1212, 1213, 1214, 1345, 1632, 1351, 1187, 0, 0, 201,
	206, 0, 0, 0, 0, 0, 0, 142, 0, 213,
	236, 1353, 0, 1410, 1411, 0, 0, 251, 270, 0,
	1283, 1081, 0, 1112, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1113, 1218, 0, 0, 1182, 1089, 0,
	1092, 0, 1088, 1085, 1086, 1077, 0, 465, 466, 481,
	0, 482, 0, 0, 1290, 0, 0, 1339, 0, 0,
	1491, 1483, 1510, 1505, 1506, 1756, 0, 1534, 0, 683,
	0, 0, 997, 998, 0, 0, 0, 0, 2126, 1624,
	2006, 0, 0, 1657, 1659, 1660, 1661, 627, 0, 1367,
	183, 0, 0, 1162, 1229, 0, 0, 0, 0, 0,
	1178, 1208, 1209, 1206, 1130, 0, 1349, 1347, 0, 1220,
	181, 0, 1218, 0, 1140, 0, 0, 1143, 0, 0,
	158, 2414, 156, 0, 209, 1403, 209, 0, 273, 0,
	264, 262, 263, 1073, 0, 1198, 1200, 1216, 1218, 1131,
	0, 1093, 1135, 1091, 478, 1284, 1288, 1286, 1322, 1218,
	0, 1216, 0, 1498, 1510, 1492, 1493, 0, 1508, 0,
	0, 328, 685, 687, 2123, 2143, 2132, -2, 2711, 2421,
	0, 2143, 2143, 2118, 2119, 0, 0, 0, 1165, 1225,
	1226, 0, 1221, 1222, 1223, 2350, 1166, 1167, 1169, 1170,
	1756, 0, 0, 1224, 205, 187, 1137, 0, 0, 1138,
	0, 0, 161, 0, 163, 237, 1401, 1404, 0, 260,
	0, 0, 1070, 1072, 1197, 0, 1131, 1216, 1079, 0,
	0, 0, 1079, 1081, 1216, 0, 1131, 0, 1487, 1497,
	0, 1507, 1484, 0, 1529, 0, 309, 2128, 0, 0,
	2134, 2135, 2136, 2137, 2138, 2129, 2130, 639, 1155, 0,
	1227, 0, 1228, 0, 0, 0, 1186, 1215, 0, 1229,
	1141, 0, 1144, 0, 159, 0, 0, 268, 269, 1199,
	1079, 1131, 1756, 0, 1082, 0, 1084, 1081, 1090, 1131,
	0, 1079, 0, 1480, 1486, 1490, 2311, 1491, 1527, 0,
	0, 0, 2140, 2141, 0, 0, 0, 1230, 0, 1233,
	1234, 0, 1231, 0, 1206, 0, 0, 209, 0, 1756,
	1079, 1181, 1083, 1073, 1079, 1218, 1756, 1216, 1498, 0,
	1756, 2139, 2142, 2133, 1161, 1232, 1235, 1236, 1217, 1188,
	0, 0, 1405, 271, 0, 1179, 1756, 1071, 1756, 1216,
	1335, 1131, 1487, 1756, 1530, 1128, 0, 0, 1180, 1333,
	1131, 1079, 1481, 1528, 1142, 1127, 0, 272, 1079, 1756,
	0, 1756, 1336, 0, 1334, 1128, 1145,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 593, 3, 599, 594, 3,
	605, 606, 597, 595, 610, 596, 607, 598, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 613, 3,
	585, 587, 586, 590, 609, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 603, 3, 604, 600, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 611, 592, 612, 588,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 589, 57928, 591, 57929, 601,
	57930, 602, 57931, 608, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1510
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1652
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1715
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1804
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1836
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1860
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1869
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1890
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1898
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1934
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2040
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2049
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2060
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2068
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2079
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2089
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2099
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2108
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2119
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2125
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2156
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2247
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2291
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2310
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2361
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = true
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = false
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2544
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2548
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2635
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2740
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2767
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2885
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2894
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3072
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "alter function")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3181
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3190
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3196
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3201
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3206
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3230
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3238
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = nil
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3314
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3328
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3510
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3535
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3540
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3559
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CREATE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3573
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3577
		{
			return unimplemented(sqllex, "create access method")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplemented(sqllex, "create cast")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplemented(sqllex, "create publication")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplemented(sqllex, "create rule")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplemented(sqllex, "create server")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3599
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3602
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3603
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3606
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3607
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3610
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplemented(sqllex, "drop server")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3754
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3789
		{

			sqlVAL.union.val = nil
		}
	case 476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3832
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3836
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "DELETE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3875
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3876
		{
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3900
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3902
		{
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			return helpWith(sqllex, "DROP")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4023
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4098
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4102
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4168
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4192
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4200
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "DELETE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "INSERT")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "DELETE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "INSERT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4281
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4289
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4314
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4405
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4421
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "GRANT")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4517
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4530
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4558
		{
			return helpWith(sqllex, "RESET")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "RESET")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "USE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4604
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "USE")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4672
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4777
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4830
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{
			return unimplemented(sqllex, "set from current")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4861
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4878
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = tree.Low
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = tree.Normal
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.High
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5027
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5054
		{
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5055
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5058
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5062
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5067
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5094
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.str = "client_encoding"
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.str = "timezone"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5144
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5207
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5216
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5369
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5410
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5421
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5437
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5442
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = false
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5497
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5523
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5524
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5540
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5548
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5556
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5592
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5597
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5599
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5603
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = true
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = false
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5618
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5623
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5664
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = true
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = false
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5701
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5708
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5716
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5727
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5741
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5749
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5754
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5763
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5779
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5784
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5789
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5794
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5810
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5828
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5850
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5868
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5876
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5897
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5902
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5907
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5911
		{
		}
	case 997:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5920
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5934
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5943
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6014
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6024
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6037
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6213
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6298
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6339
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6390
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6426
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6454
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6490
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6505
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{

			sqlVAL.union.val = nil
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.str = ""
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6549
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = nil
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6572
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6576
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6602
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6615
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6629
		{
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6630
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6631
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6686
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6712
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6723
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.str = ""
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6972
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7017
		{

			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = false
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7027
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7031
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7130
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7158
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7168
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7183
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7248
		{
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7250
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7251
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7252
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7410
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7419
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7427
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7461
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7465
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7473
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7475
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7492
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7519
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7553
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.str = ""
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = true
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7587
		{

			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = false
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7602
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7616
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7628
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7640
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7650
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7660
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7664
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = true
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = nil
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7791
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7792
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7817
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7819
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7821
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7823
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7825
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7827
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7862
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7879
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7897
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7913
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7929
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7933
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = false
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = true
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = false
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = true
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = false
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7987
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7993
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.str = ""
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.str = ""
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8066
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8072
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8297
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8303
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8315
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8321
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8335
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8341
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8400
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = true
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = false
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = tree.Types
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8488
		{
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8489
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8492
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8493
		{
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8504
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8522
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8552
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8560
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8581
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8600
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8605
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8630
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8643
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8648
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8658
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8659
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8676
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8679
		{
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8680
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8708
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8721
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8723
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8727
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8816
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.str = ""
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8844
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{

		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8876
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.str = ""
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.str = ""
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.str = ""
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.str = ""
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8931
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8944
		{
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8945
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8996
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9005
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9099
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9190
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9205
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9349
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9384
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9385
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9447
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9507
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = true
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = false
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9561
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = nil
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9574
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9575
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = true
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = false
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = false
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = true
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9605
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9609
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9662
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9667
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9693
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9726
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9786
		{
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9821
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9852
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9854
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9869
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9891
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9901
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9938
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9950
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9969
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10011
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10067
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10097
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10130
		{
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10132
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = nil
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = true
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = false
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.str = tree.AstFull
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.str = tree.AstRight
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.str = tree.AstInner
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10250
		{
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.str = tree.AstHash
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.str = ""
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10319
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10342
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10348
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10364
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = true
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = false
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = true
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = false
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10426
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10434
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10435
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10453
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10463
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10476
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10483
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10532
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10544
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = types.Geography
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10594
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10602
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10636
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = nil
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = types.Int2
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = types.Int
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = types.Float4
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = types.Float
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10679
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10687
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10695
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = types.Bool
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10709
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = types.Float
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10728
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10734
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10756
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = types.String
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = true
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = false
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = types.Date
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10805
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10813
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10827
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10836
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10844
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10861
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = true
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = false
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = false
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = types.Interval
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10885
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = nil
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11014
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11074
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11223
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11231
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11418
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11440
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11548
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11556
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11652
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11657
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11683
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11692
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11707
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11741
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11752
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11753
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11768
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11777
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11843
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11968
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11973
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11982
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12000
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12009
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12014
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12019
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12029
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12043
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12044
		{
			return unimplemented(sqllex, "treat")
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12070
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12117
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.str = ""
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12219
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12287
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12316
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12392
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12537
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12648
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12666
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12732
		{
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12733
		{
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12741
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12764
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12805
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12813
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12863
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12882
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12886
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12898
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12902
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12911
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12922
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12931
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12939
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12956
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13175
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13188
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13195
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.str = ""
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13226
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
