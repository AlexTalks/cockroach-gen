// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op {
		case tree.Plus:
			return expr, 0
		case tree.Minus:
			return unaryNegation(expr), 0
		}
	case tree.ComparisonOperator:
		switch op {
		case tree.RegMatch:
			return &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: expr}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:121

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:767
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_LOCALITIES_CHECK = lex.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13035

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1495,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 397,
	-2, 0,
	-1, 74,
	241, 234,
	508, 234,
	-2, 0,
	-1, 87,
	229, 1255,
	243, 1255,
	259, 393,
	386, 393,
	396, 1025,
	432, 393,
	445, 1025,
	492, 1025,
	519, 393,
	545, 1025,
	-2, 0,
	-1, 93,
	132, 1495,
	236, 1495,
	530, 1495,
	531, 1495,
	-2, 0,
	-1, 109,
	150, 1466,
	169, 1466,
	182, 1466,
	239, 1466,
	272, 1466,
	338, 1466,
	348, 1466,
	525, 1466,
	-2, 1437,
	-1, 148,
	158, 882,
	258, 882,
	389, 849,
	450, 849,
	491, 849,
	511, 882,
	513, 849,
	-2, 0,
	-1, 151,
	4, 1497,
	21, 1497,
	22, 1497,
	23, 1497,
	24, 1497,
	25, 1497,
	26, 1497,
	27, 1497,
	29, 1497,
	30, 1497,
	36, 1497,
	41, 1497,
	42, 1497,
	44, 1497,
	45, 1497,
	46, 1497,
	47, 1497,
	48, 1497,
	49, 1497,
	50, 1497,
	51, 1497,
	53, 1497,
	54, 1497,
	55, 1497,
	56, 1497,
	58, 1497,
	59, 1497,
	60, 1497,
	61, 1497,
	62, 1497,
	63, 1497,
	64, 1497,
	68, 1497,
	69, 1497,
	70, 1497,
	71, 1497,
	73, 1497,
	74, 1497,
	75, 1497,
	79, 1497,
	80, 1497,
	81, 1497,
	82, 1497,
	83, 1497,
	84, 1497,
	85, 1497,
	88, 1497,
	89, 1497,
	90, 1497,
	91, 1497,
	92, 1497,
	94, 1497,
	96, 1497,
	97, 1497,
	98, 1497,
	99, 1497,
	100, 1497,
	101, 1497,
	103, 1497,
	104, 1497,
	105, 1497,
	107, 1497,
	108, 1497,
	109, 1497,
	117, 1497,
	118, 1497,
	119, 1497,
	120, 1497,
	121, 1497,
	123, 1497,
	124, 1497,
	125, 1497,
	127, 1497,
	128, 1497,
	129, 1497,
	131, 1497,
	132, 1497,
	133, 1497,
	135, 1497,
	136, 1497,
	137, 1497,
	140, 1497,
	141, 1497,
	142, 1497,
	144, 1497,
	145, 1497,
	147, 1497,
	148, 1497,
	149, 1497,
	151, 1497,
	152, 1497,
	153, 1497,
	154, 1497,
	155, 1497,
	156, 1497,
	157, 1497,
	158, 1497,
	159, 1497,
	160, 1497,
	161, 1497,
	162, 1497,
	163, 1497,
	164, 1497,
	165, 1497,
	166, 1497,
	168, 1497,
	174, 1497,
	175, 1497,
	176, 1497,
	177, 1497,
	181, 1497,
	183, 1497,
	184, 1497,
	188, 1497,
	189, 1497,
	190, 1497,
	191, 1497,
	192, 1497,
	193, 1497,
	194, 1497,
	195, 1497,
	196, 1497,
	197, 1497,
	198, 1497,
	199, 1497,
	200, 1497,
	202, 1497,
	203, 1497,
	205, 1497,
	206, 1497,
	208, 1497,
	209, 1497,
	210, 1497,
	211, 1497,
	212, 1497,
	213, 1497,
	214, 1497,
	215, 1497,
	216, 1497,
	218, 1497,
	219, 1497,
	221, 1497,
	222, 1497,
	223, 1497,
	224, 1497,
	225, 1497,
	229, 1497,
	230, 1497,
	231, 1497,
	232, 1497,
	233, 1497,
	236, 1497,
	237, 1497,
	238, 1497,
	240, 1497,
	242, 1497,
	243, 1497,
	245, 1497,
	247, 1497,
	248, 1497,
	249, 1497,
	251, 1497,
	255, 1497,
	256, 1497,
	257, 1497,
	258, 1497,
	259, 1497,
	260, 1497,
	262, 1497,
	263, 1497,
	264, 1497,
	266, 1497,
	267, 1497,
	269, 1497,
	270, 1497,
	273, 1497,
	277, 1497,
	278, 1497,
	279, 1497,
	282, 1497,
	283, 1497,
	284, 1497,
	285, 1497,
	287, 1497,
	288, 1497,
	289, 1497,
	290, 1497,
	291, 1497,
	292, 1497,
	293, 1497,
	294, 1497,
	295, 1497,
	296, 1497,
	297, 1497,
	298, 1497,
	299, 1497,
	300, 1497,
	301, 1497,
	302, 1497,
	303, 1497,
	304, 1497,
	305, 1497,
	306, 1497,
	307, 1497,
	308, 1497,
	310, 1497,
	312, 1497,
	313, 1497,
	314, 1497,
	315, 1497,
	316, 1497,
	317, 1497,
	318, 1497,
	319, 1497,
	320, 1497,
	321, 1497,
	322, 1497,
	323, 1497,
	325, 1497,
	326, 1497,
	328, 1497,
	330, 1497,
	331, 1497,
	333, 1497,
	334, 1497,
	335, 1497,
	336, 1497,
	337, 1497,
	340, 1497,
	343, 1497,
	344, 1497,
	345, 1497,
	346, 1497,
	349, 1497,
	350, 1497,
	351, 1497,
	353, 1497,
	355, 1497,
	356, 1497,
	357, 1497,
	358, 1497,
	359, 1497,
	360, 1497,
	361, 1497,
	362, 1497,
	363, 1497,
	364, 1497,
	365, 1497,
	366, 1497,
	368, 1497,
	369, 1497,
	370, 1497,
	371, 1497,
	372, 1497,
	373, 1497,
	374, 1497,
	375, 1497,
	376, 1497,
	377, 1497,
	378, 1497,
	379, 1497,
	380, 1497,
	381, 1497,
	382, 1497,
	384, 1497,
	385, 1497,
	387, 1497,
	388, 1497,
	389, 1497,
	390, 1497,
	391, 1497,
	392, 1497,
	393, 1497,
	394, 1497,
	395, 1497,
	396, 1497,
	397, 1497,
	398, 1497,
	400, 1497,
	402, 1497,
	403, 1497,
	404, 1497,
	409, 1497,
	411, 1497,
	412, 1497,
	413, 1497,
	414, 1497,
	415, 1497,
	416, 1497,
	417, 1497,
	418, 1497,
	419, 1497,
	421, 1497,
	422, 1497,
	423, 1497,
	425, 1497,
	426, 1497,
	427, 1497,
	428, 1497,
	429, 1497,
	430, 1497,
	432, 1497,
	433, 1497,
	434, 1497,
	435, 1497,
	436, 1497,
	437, 1497,
	438, 1497,
	439, 1497,
	440, 1497,
	441, 1497,
	442, 1497,
	443, 1497,
	445, 1497,
	446, 1497,
	447, 1497,
	448, 1497,
	449, 1497,
	450, 1497,
	452, 1497,
	453, 1497,
	454, 1497,
	455, 1497,
	456, 1497,
	457, 1497,
	459, 1497,
	460, 1497,
	461, 1497,
	462, 1497,
	463, 1497,
	464, 1497,
	465, 1497,
	466, 1497,
	468, 1497,
	470, 1497,
	471, 1497,
	472, 1497,
	473, 1497,
	474, 1497,
	475, 1497,
	476, 1497,
	477, 1497,
	478, 1497,
	479, 1497,
	480, 1497,
	481, 1497,
	482, 1497,
	483, 1497,
	484, 1497,
	485, 1497,
	487, 1497,
	488, 1497,
	490, 1497,
	491, 1497,
	493, 1497,
	494, 1497,
	495, 1497,
	496, 1497,
	497, 1497,
	498, 1497,
	499, 1497,
	500, 1497,
	501, 1497,
	503, 1497,
	504, 1497,
	505, 1497,
	506, 1497,
	507, 1497,
	509, 1497,
	511, 1497,
	512, 1497,
	513, 1497,
	514, 1497,
	515, 1497,
	516, 1497,
	518, 1497,
	519, 1497,
	520, 1497,
	521, 1497,
	523, 1497,
	524, 1497,
	527, 1497,
	528, 1497,
	529, 1497,
	530, 1497,
	531, 1497,
	532, 1497,
	533, 1497,
	535, 1497,
	538, 1497,
	539, 1497,
	540, 1497,
	541, 1497,
	542, 1497,
	543, 1497,
	545, 1497,
	546, 1497,
	547, 1497,
	548, 1497,
	550, 1497,
	555, 1497,
	556, 1497,
	557, 1497,
	558, 1497,
	559, 1497,
	560, 1497,
	-2, 0,
	-1, 152,
	1, 1352,
	130, 1352,
	247, 1352,
	327, 1352,
	384, 1352,
	393, 1352,
	564, 1352,
	588, 1352,
	-2, 0,
	-1, 154,
	1, 1352,
	588, 1352,
	-2, 0,
	-1, 155,
	1, 1352,
	588, 1352,
	-2, 0,
	-1, 156,
	1, 1352,
	508, 1352,
	588, 1352,
	-2, 0,
	-1, 184,
	150, 1465,
	169, 1465,
	182, 1465,
	239, 1465,
	272, 1465,
	338, 1465,
	348, 1465,
	525, 1465,
	-2, 1440,
	-1, 230,
	4, 1504,
	5, 1504,
	6, 1504,
	7, 1504,
	8, 1504,
	9, 1504,
	10, 1504,
	21, 1504,
	22, 1504,
	23, 1504,
	24, 1504,
	25, 1504,
	26, 1504,
	27, 1504,
	29, 1504,
	30, 1504,
	36, 1504,
	37, 1504,
	41, 1504,
	42, 1504,
	43, 1504,
	44, 1504,
	45, 1504,
	46, 1504,
	47, 1504,
	48, 1504,
	49, 1504,
	50, 1504,
	51, 1504,
	53, 1504,
	54, 1504,
	55, 1504,
	56, 1504,
	58, 1504,
	59, 1504,
	60, 1504,
	61, 1504,
	62, 1504,
	63, 1504,
	64, 1504,
	65, 1504,
	66, 1504,
	67, 1504,
	68, 1504,
	69, 1504,
	70, 1504,
	71, 1504,
	73, 1504,
	74, 1504,
	75, 1504,
	77, 1504,
	79, 1504,
	80, 1504,
	81, 1504,
	82, 1504,
	83, 1504,
	84, 1504,
	85, 1504,
	88, 1504,
	89, 1504,
	90, 1504,
	91, 1504,
	92, 1504,
	94, 1504,
	96, 1504,
	97, 1504,
	98, 1504,
	99, 1504,
	100, 1504,
	101, 1504,
	103, 1504,
	104, 1504,
	105, 1504,
	106, 1504,
	107, 1504,
	108, 1504,
	109, 1504,
	110, 1504,
	111, 1504,
	112, 1504,
	113, 1504,
	114, 1504,
	115, 1504,
	116, 1504,
	117, 1504,
	118, 1504,
	119, 1504,
	120, 1504,
	121, 1504,
	122, 1504,
	123, 1504,
	124, 1504,
	125, 1504,
	126, 1504,
	127, 1504,
	128, 1504,
	129, 1504,
	131, 1504,
	132, 1504,
	133, 1504,
	135, 1504,
	136, 1504,
	137, 1504,
	140, 1504,
	141, 1504,
	142, 1504,
	144, 1504,
	145, 1504,
	147, 1504,
	148, 1504,
	149, 1504,
	151, 1504,
	152, 1504,
	153, 1504,
	154, 1504,
	155, 1504,
	156, 1504,
	157, 1504,
	158, 1504,
	159, 1504,
	160, 1504,
	161, 1504,
	162, 1504,
	163, 1504,
	164, 1504,
	165, 1504,
	166, 1504,
	167, 1504,
	168, 1504,
	174, 1504,
	175, 1504,
	176, 1504,
	177, 1504,
	181, 1504,
	183, 1504,
	184, 1504,
	187, 1504,
	188, 1504,
	189, 1504,
	190, 1504,
	191, 1504,
	192, 1504,
	193, 1504,
	194, 1504,
	195, 1504,
	196, 1504,
	197, 1504,
	198, 1504,
	199, 1504,
	200, 1504,
	202, 1504,
	203, 1504,
	205, 1504,
	206, 1504,
	208, 1504,
	209, 1504,
	210, 1504,
	211, 1504,
	212, 1504,
	213, 1504,
	214, 1504,
	215, 1504,
	216, 1504,
	217, 1504,
	218, 1504,
	219, 1504,
	221, 1504,
	222, 1504,
	223, 1504,
	224, 1504,
	225, 1504,
	229, 1504,
	230, 1504,
	231, 1504,
	232, 1504,
	233, 1504,
	235, 1504,
	236, 1504,
	237, 1504,
	238, 1504,
	240, 1504,
	242, 1504,
	243, 1504,
	244, 1504,
	245, 1504,
	246, 1504,
	247, 1504,
	248, 1504,
	249, 1504,
	250, 1504,
	251, 1504,
	255, 1504,
	256, 1504,
	257, 1504,
	258, 1504,
	259, 1504,
	260, 1504,
	262, 1504,
	263, 1504,
	264, 1504,
	266, 1504,
	267, 1504,
	268, 1504,
	269, 1504,
	270, 1504,
	271, 1504,
	273, 1504,
	277, 1504,
	278, 1504,
	279, 1504,
	280, 1504,
	281, 1504,
	282, 1504,
	283, 1504,
	284, 1504,
	285, 1504,
	287, 1504,
	288, 1504,
	289, 1504,
	290, 1504,
	291, 1504,
	292, 1504,
	293, 1504,
	294, 1504,
	295, 1504,
	296, 1504,
	297, 1504,
	298, 1504,
	299, 1504,
	300, 1504,
	301, 1504,
	302, 1504,
	303, 1504,
	304, 1504,
	305, 1504,
	306, 1504,
	307, 1504,
	308, 1504,
	310, 1504,
	311, 1504,
	312, 1504,
	313, 1504,
	314, 1504,
	315, 1504,
	316, 1504,
	317, 1504,
	318, 1504,
	319, 1504,
	320, 1504,
	321, 1504,
	322, 1504,
	323, 1504,
	324, 1504,
	325, 1504,
	326, 1504,
	327, 1504,
	328, 1504,
	329, 1504,
	330, 1504,
	331, 1504,
	332, 1504,
	333, 1504,
	334, 1504,
	335, 1504,
	336, 1504,
	337, 1504,
	340, 1504,
	344, 1504,
	345, 1504,
	346, 1504,
	349, 1504,
	350, 1504,
	351, 1504,
	352, 1504,
	353, 1504,
	354, 1504,
	355, 1504,
	356, 1504,
	357, 1504,
	358, 1504,
	359, 1504,
	360, 1504,
	361, 1504,
	362, 1504,
	363, 1504,
	364, 1504,
	365, 1504,
	366, 1504,
	368, 1504,
	369, 1504,
	370, 1504,
	371, 1504,
	372, 1504,
	373, 1504,
	374, 1504,
	375, 1504,
	376, 1504,
	377, 1504,
	378, 1504,
	379, 1504,
	380, 1504,
	381, 1504,
	382, 1504,
	384, 1504,
	385, 1504,
	387, 1504,
	388, 1504,
	389, 1504,
	390, 1504,
	391, 1504,
	392, 1504,
	393, 1504,
	394, 1504,
	395, 1504,
	396, 1504,
	397, 1504,
	398, 1504,
	400, 1504,
	402, 1504,
	403, 1504,
	404, 1504,
	409, 1504,
	411, 1504,
	412, 1504,
	413, 1504,
	414, 1504,
	415, 1504,
	416, 1504,
	417, 1504,
	418, 1504,
	419, 1504,
	421, 1504,
	422, 1504,
	423, 1504,
	424, 1504,
	425, 1504,
	426, 1504,
	427, 1504,
	428, 1504,
	429, 1504,
	430, 1504,
	432, 1504,
	433, 1504,
	434, 1504,
	435, 1504,
	436, 1504,
	437, 1504,
	438, 1504,
	439, 1504,
	440, 1504,
	441, 1504,
	442, 1504,
	443, 1504,
	445, 1504,
	446, 1504,
	447, 1504,
	448, 1504,
	449, 1504,
	450, 1504,
	451, 1504,
	452, 1504,
	453, 1504,
	454, 1504,
	455, 1504,
	456, 1504,
	457, 1504,
	458, 1504,
	459, 1504,
	460, 1504,
	461, 1504,
	462, 1504,
	463, 1504,
	464, 1504,
	465, 1504,
	466, 1504,
	468, 1504,
	470, 1504,
	471, 1504,
	472, 1504,
	473, 1504,
	474, 1504,
	475, 1504,
	476, 1504,
	477, 1504,
	478, 1504,
	479, 1504,
	480, 1504,
	481, 1504,
	482, 1504,
	483, 1504,
	484, 1504,
	485, 1504,
	487, 1504,
	488, 1504,
	489, 1504,
	490, 1504,
	491, 1504,
	493, 1504,
	494, 1504,
	495, 1504,
	496, 1504,
	497, 1504,
	498, 1504,
	499, 1504,
	500, 1504,
	501, 1504,
	503, 1504,
	504, 1504,
	505, 1504,
	506, 1504,
	507, 1504,
	509, 1504,
	511, 1504,
	512, 1504,
	513, 1504,
	514, 1504,
	515, 1504,
	516, 1504,
	517, 1504,
	518, 1504,
	519, 1504,
	520, 1504,
	521, 1504,
	523, 1504,
	524, 1504,
	526, 1504,
	527, 1504,
	528, 1504,
	529, 1504,
	530, 1504,
	531, 1504,
	532, 1504,
	533, 1504,
	534, 1504,
	535, 1504,
	538, 1504,
	539, 1504,
	540, 1504,
	541, 1504,
	542, 1504,
	543, 1504,
	545, 1504,
	546, 1504,
	547, 1504,
	548, 1504,
	550, 1504,
	555, 1504,
	556, 1504,
	557, 1504,
	558, 1504,
	559, 1504,
	560, 1504,
	561, 1504,
	569, 1504,
	576, 1504,
	577, 1504,
	578, 1504,
	585, 1504,
	589, 1504,
	-2, 0,
	-1, 729,
	4, 1253,
	21, 1253,
	22, 1253,
	23, 1253,
	24, 1253,
	25, 1253,
	26, 1253,
	27, 1253,
	29, 1253,
	30, 1253,
	36, 1253,
	41, 1253,
	42, 1253,
	44, 1253,
	45, 1253,
	46, 1253,
	47, 1253,
	48, 1253,
	49, 1253,
	50, 1253,
	51, 1253,
	53, 1253,
	54, 1253,
	55, 1253,
	56, 1253,
	58, 1253,
	59, 1253,
	60, 1253,
	61, 1253,
	62, 1253,
	63, 1253,
	64, 1253,
	68, 1253,
	69, 1253,
	70, 1253,
	71, 1253,
	73, 1253,
	74, 1253,
	75, 1253,
	79, 1253,
	80, 1253,
	81, 1253,
	82, 1253,
	83, 1253,
	84, 1253,
	85, 1253,
	88, 1253,
	89, 1253,
	90, 1253,
	91, 1253,
	92, 1253,
	94, 1253,
	96, 1253,
	97, 1253,
	98, 1253,
	99, 1253,
	100, 1253,
	101, 1253,
	103, 1253,
	104, 1253,
	105, 1253,
	107, 1253,
	108, 1253,
	109, 1253,
	117, 1253,
	118, 1253,
	119, 1253,
	120, 1253,
	121, 1253,
	123, 1253,
	124, 1253,
	125, 1253,
	127, 1253,
	128, 1253,
	129, 1253,
	131, 1253,
	132, 1253,
	133, 1253,
	135, 1253,
	136, 1253,
	137, 1253,
	140, 1253,
	141, 1253,
	142, 1253,
	144, 1253,
	145, 1253,
	147, 1253,
	148, 1253,
	149, 1253,
	151, 1253,
	152, 1253,
	153, 1253,
	154, 1253,
	155, 1253,
	156, 1253,
	157, 1253,
	158, 1253,
	159, 1253,
	160, 1253,
	161, 1253,
	162, 1253,
	163, 1253,
	164, 1253,
	165, 1253,
	166, 1253,
	168, 1253,
	174, 1253,
	175, 1253,
	176, 1253,
	177, 1253,
	181, 1253,
	183, 1253,
	184, 1253,
	188, 1253,
	189, 1253,
	190, 1253,
	191, 1253,
	192, 1253,
	193, 1253,
	194, 1253,
	195, 1253,
	196, 1253,
	197, 1253,
	198, 1253,
	199, 1253,
	200, 1253,
	202, 1253,
	203, 1253,
	205, 1253,
	206, 1253,
	208, 1253,
	209, 1253,
	210, 1253,
	211, 1253,
	212, 1253,
	213, 1253,
	214, 1253,
	215, 1253,
	216, 1253,
	218, 1253,
	219, 1253,
	221, 1253,
	222, 1253,
	223, 1253,
	224, 1253,
	225, 1253,
	229, 1253,
	230, 1253,
	231, 1253,
	232, 1253,
	233, 1253,
	236, 1253,
	237, 1253,
	238, 1253,
	240, 1253,
	242, 1253,
	243, 1253,
	245, 1253,
	247, 1253,
	248, 1253,
	249, 1253,
	251, 1253,
	255, 1253,
	256, 1253,
	257, 1253,
	258, 1253,
	259, 1253,
	260, 1253,
	262, 1253,
	263, 1253,
	264, 1253,
	266, 1253,
	267, 1253,
	269, 1253,
	270, 1253,
	273, 1253,
	277, 1253,
	278, 1253,
	279, 1253,
	282, 1253,
	283, 1253,
	284, 1253,
	285, 1253,
	287, 1253,
	288, 1253,
	289, 1253,
	290, 1253,
	291, 1253,
	292, 1253,
	293, 1253,
	294, 1253,
	295, 1253,
	296, 1253,
	297, 1253,
	298, 1253,
	299, 1253,
	300, 1253,
	301, 1253,
	302, 1253,
	303, 1253,
	304, 1253,
	305, 1253,
	306, 1253,
	307, 1253,
	308, 1253,
	310, 1253,
	312, 1253,
	313, 1253,
	314, 1253,
	315, 1253,
	316, 1253,
	317, 1253,
	318, 1253,
	319, 1253,
	320, 1253,
	321, 1253,
	322, 1253,
	323, 1253,
	325, 1253,
	326, 1253,
	328, 1253,
	330, 1253,
	331, 1253,
	333, 1253,
	334, 1253,
	335, 1253,
	336, 1253,
	337, 1253,
	340, 1253,
	344, 1253,
	345, 1253,
	346, 1253,
	349, 1253,
	350, 1253,
	351, 1253,
	353, 1253,
	355, 1253,
	356, 1253,
	357, 1253,
	358, 1253,
	359, 1253,
	360, 1253,
	361, 1253,
	362, 1253,
	363, 1253,
	364, 1253,
	365, 1253,
	366, 1253,
	368, 1253,
	369, 1253,
	370, 1253,
	371, 1253,
	372, 1253,
	373, 1253,
	374, 1253,
	375, 1253,
	376, 1253,
	377, 1253,
	378, 1253,
	379, 1253,
	380, 1253,
	381, 1253,
	382, 1253,
	384, 1253,
	385, 1253,
	387, 1253,
	388, 1253,
	389, 1253,
	390, 1253,
	391, 1253,
	392, 1253,
	393, 1253,
	394, 1253,
	395, 1253,
	396, 1253,
	397, 1253,
	398, 1253,
	400, 1253,
	402, 1253,
	403, 1253,
	404, 1253,
	409, 1253,
	411, 1253,
	412, 1253,
	413, 1253,
	414, 1253,
	415, 1253,
	416, 1253,
	417, 1253,
	418, 1253,
	419, 1253,
	421, 1253,
	422, 1253,
	423, 1253,
	425, 1253,
	426, 1253,
	427, 1253,
	428, 1253,
	429, 1253,
	430, 1253,
	432, 1253,
	433, 1253,
	434, 1253,
	435, 1253,
	436, 1253,
	437, 1253,
	438, 1253,
	439, 1253,
	440, 1253,
	441, 1253,
	442, 1253,
	443, 1253,
	445, 1253,
	446, 1253,
	447, 1253,
	448, 1253,
	449, 1253,
	450, 1253,
	452, 1253,
	453, 1253,
	454, 1253,
	455, 1253,
	456, 1253,
	457, 1253,
	459, 1253,
	460, 1253,
	461, 1253,
	462, 1253,
	463, 1253,
	464, 1253,
	465, 1253,
	466, 1253,
	468, 1253,
	470, 1253,
	471, 1253,
	472, 1253,
	473, 1253,
	474, 1253,
	475, 1253,
	476, 1253,
	477, 1253,
	478, 1253,
	479, 1253,
	480, 1253,
	481, 1253,
	482, 1253,
	483, 1253,
	484, 1253,
	485, 1253,
	487, 1253,
	488, 1253,
	490, 1253,
	491, 1253,
	493, 1253,
	494, 1253,
	495, 1253,
	496, 1253,
	497, 1253,
	498, 1253,
	499, 1253,
	500, 1253,
	501, 1253,
	503, 1253,
	504, 1253,
	505, 1253,
	506, 1253,
	507, 1253,
	509, 1253,
	511, 1253,
	512, 1253,
	513, 1253,
	514, 1253,
	515, 1253,
	516, 1253,
	518, 1253,
	519, 1253,
	520, 1253,
	521, 1253,
	523, 1253,
	524, 1253,
	527, 1253,
	528, 1253,
	529, 1253,
	530, 1253,
	531, 1253,
	532, 1253,
	533, 1253,
	535, 1253,
	538, 1253,
	539, 1253,
	540, 1253,
	541, 1253,
	542, 1253,
	543, 1253,
	545, 1253,
	546, 1253,
	547, 1253,
	548, 1253,
	550, 1253,
	555, 1253,
	556, 1253,
	557, 1253,
	558, 1253,
	559, 1253,
	560, 1253,
	-2, 0,
	-1, 748,
	186, 2288,
	508, 2288,
	568, 2288,
	587, 2288,
	-2, 0,
	-1, 749,
	186, 2394,
	508, 2394,
	568, 2394,
	587, 2394,
	-2, 0,
	-1, 750,
	186, 2275,
	508, 2275,
	568, 2275,
	587, 2275,
	-2, 0,
	-1, 752,
	186, 2526,
	508, 2526,
	568, 2526,
	587, 2526,
	-2, 0,
	-1, 754,
	186, 2567,
	508, 2567,
	568, 2567,
	587, 2567,
	-2, 0,
	-1, 761,
	186, 2421,
	508, 2421,
	568, 2421,
	587, 2421,
	-2, 683,
	-1, 794,
	587, 2224,
	590, 2224,
	-2, 956,
	-1, 795,
	587, 2226,
	590, 2226,
	-2, 957,
	-1, 796,
	587, 2225,
	590, 2225,
	-2, 958,
	-1, 797,
	590, 2151,
	-2, 959,
	-1, 820,
	182, 249,
	-2, 0,
	-1, 844,
	43, 2198,
	-2, 0,
	-1, 845,
	545, 1231,
	-2, 1026,
	-1, 861,
	4, 1633,
	21, 1633,
	22, 1633,
	23, 1633,
	24, 1633,
	25, 1633,
	26, 1633,
	27, 1633,
	29, 1633,
	30, 1633,
	36, 1633,
	41, 1633,
	42, 1633,
	44, 1633,
	45, 1633,
	46, 1633,
	47, 1633,
	48, 1633,
	49, 1633,
	50, 1633,
	51, 1633,
	53, 1633,
	54, 1633,
	55, 1633,
	56, 1633,
	58, 1633,
	59, 1633,
	60, 1633,
	61, 1633,
	62, 1633,
	63, 1633,
	64, 1633,
	68, 1633,
	69, 1633,
	70, 1633,
	71, 1633,
	73, 1633,
	74, 1633,
	75, 1633,
	79, 1633,
	80, 1633,
	81, 1633,
	82, 1633,
	83, 1633,
	84, 1633,
	85, 1633,
	88, 1633,
	89, 1633,
	90, 1633,
	91, 1633,
	92, 1633,
	94, 1633,
	96, 1633,
	97, 1633,
	98, 1633,
	99, 1633,
	100, 1633,
	101, 1633,
	103, 1633,
	104, 1633,
	105, 1633,
	107, 1633,
	108, 1633,
	109, 1633,
	117, 1633,
	118, 1633,
	119, 1633,
	120, 1633,
	121, 1633,
	123, 1633,
	124, 1633,
	125, 1633,
	127, 1633,
	128, 1633,
	129, 1633,
	131, 1633,
	132, 1633,
	133, 1633,
	135, 1633,
	136, 1633,
	137, 1633,
	140, 1633,
	141, 1633,
	142, 1633,
	144, 1633,
	145, 1633,
	147, 1633,
	148, 1633,
	149, 1633,
	151, 1633,
	152, 1633,
	153, 1633,
	154, 1633,
	155, 1633,
	156, 1633,
	157, 1633,
	158, 1633,
	159, 1633,
	160, 1633,
	161, 1633,
	162, 1633,
	163, 1633,
	164, 1633,
	165, 1633,
	166, 1633,
	168, 1633,
	174, 1633,
	175, 1633,
	176, 1633,
	177, 1633,
	181, 1633,
	183, 1633,
	184, 1633,
	188, 1633,
	189, 1633,
	190, 1633,
	191, 1633,
	192, 1633,
	193, 1633,
	194, 1633,
	195, 1633,
	196, 1633,
	197, 1633,
	198, 1633,
	199, 1633,
	200, 1633,
	202, 1633,
	203, 1633,
	205, 1633,
	206, 1633,
	208, 1633,
	209, 1633,
	210, 1633,
	211, 1633,
	212, 1633,
	213, 1633,
	214, 1633,
	215, 1633,
	216, 1633,
	218, 1633,
	219, 1633,
	221, 1633,
	222, 1633,
	223, 1633,
	224, 1633,
	225, 1633,
	229, 1633,
	230, 1633,
	231, 1633,
	232, 1633,
	233, 1633,
	236, 1633,
	237, 1633,
	238, 1633,
	240, 1633,
	242, 1633,
	243, 1633,
	245, 1633,
	247, 1633,
	248, 1633,
	249, 1633,
	251, 1633,
	255, 1633,
	256, 1633,
	257, 1633,
	258, 1633,
	259, 1633,
	260, 1633,
	262, 1633,
	263, 1633,
	264, 1633,
	266, 1633,
	267, 1633,
	269, 1633,
	270, 1633,
	273, 1633,
	277, 1633,
	278, 1633,
	279, 1633,
	282, 1633,
	283, 1633,
	284, 1633,
	285, 1633,
	287, 1633,
	288, 1633,
	289, 1633,
	290, 1633,
	291, 1633,
	292, 1633,
	293, 1633,
	294, 1633,
	295, 1633,
	296, 1633,
	297, 1633,
	298, 1633,
	299, 1633,
	300, 1633,
	301, 1633,
	302, 1633,
	303, 1633,
	304, 1633,
	305, 1633,
	306, 1633,
	307, 1633,
	308, 1633,
	310, 1633,
	312, 1633,
	313, 1633,
	314, 1633,
	315, 1633,
	316, 1633,
	317, 1633,
	318, 1633,
	319, 1633,
	320, 1633,
	321, 1633,
	322, 1633,
	323, 1633,
	325, 1633,
	326, 1633,
	328, 1633,
	330, 1633,
	331, 1633,
	333, 1633,
	334, 1633,
	335, 1633,
	336, 1633,
	337, 1633,
	340, 1633,
	344, 1633,
	345, 1633,
	346, 1633,
	349, 1633,
	350, 1633,
	351, 1633,
	353, 1633,
	355, 1633,
	356, 1633,
	357, 1633,
	358, 1633,
	359, 1633,
	360, 1633,
	361, 1633,
	362, 1633,
	363, 1633,
	364, 1633,
	365, 1633,
	366, 1633,
	368, 1633,
	369, 1633,
	370, 1633,
	371, 1633,
	372, 1633,
	373, 1633,
	374, 1633,
	375, 1633,
	376, 1633,
	377, 1633,
	378, 1633,
	379, 1633,
	380, 1633,
	381, 1633,
	382, 1633,
	384, 1633,
	385, 1633,
	387, 1633,
	388, 1633,
	389, 1633,
	390, 1633,
	391, 1633,
	392, 1633,
	393, 1633,
	394, 1633,
	395, 1633,
	396, 1633,
	397, 1633,
	398, 1633,
	400, 1633,
	402, 1633,
	403, 1633,
	404, 1633,
	409, 1633,
	411, 1633,
	412, 1633,
	413, 1633,
	414, 1633,
	415, 1633,
	416, 1633,
	417, 1633,
	418, 1633,
	419, 1633,
	421, 1633,
	422, 1633,
	423, 1633,
	425, 1633,
	426, 1633,
	427, 1633,
	428, 1633,
	429, 1633,
	430, 1633,
	432, 1633,
	433, 1633,
	434, 1633,
	435, 1633,
	436, 1633,
	437, 1633,
	438, 1633,
	439, 1633,
	440, 1633,
	441, 1633,
	442, 1633,
	443, 1633,
	445, 1633,
	446, 1633,
	447, 1633,
	448, 1633,
	449, 1633,
	450, 1633,
	452, 1633,
	453, 1633,
	454, 1633,
	455, 1633,
	456, 1633,
	457, 1633,
	459, 1633,
	460, 1633,
	461, 1633,
	462, 1633,
	463, 1633,
	464, 1633,
	465, 1633,
	466, 1633,
	468, 1633,
	470, 1633,
	471, 1633,
	472, 1633,
	473, 1633,
	474, 1633,
	475, 1633,
	476, 1633,
	477, 1633,
	478, 1633,
	479, 1633,
	480, 1633,
	481, 1633,
	482, 1633,
	483, 1633,
	484, 1633,
	485, 1633,
	487, 1633,
	488, 1633,
	490, 1633,
	491, 1633,
	493, 1633,
	494, 1633,
	495, 1633,
	496, 1633,
	497, 1633,
	498, 1633,
	499, 1633,
	500, 1633,
	501, 1633,
	503, 1633,
	504, 1633,
	505, 1633,
	506, 1633,
	507, 1633,
	509, 1633,
	511, 1633,
	512, 1633,
	513, 1633,
	514, 1633,
	515, 1633,
	516, 1633,
	518, 1633,
	519, 1633,
	520, 1633,
	521, 1633,
	523, 1633,
	524, 1633,
	527, 1633,
	528, 1633,
	529, 1633,
	530, 1633,
	531, 1633,
	532, 1633,
	533, 1633,
	535, 1633,
	538, 1633,
	539, 1633,
	540, 1633,
	541, 1633,
	542, 1633,
	543, 1633,
	545, 1633,
	546, 1633,
	547, 1633,
	548, 1633,
	550, 1633,
	555, 1633,
	556, 1633,
	557, 1633,
	558, 1633,
	559, 1633,
	560, 1633,
	-2, 0,
	-1, 871,
	259, 397,
	-2, 0,
	-1, 942,
	389, 850,
	450, 850,
	491, 850,
	513, 850,
	-2, 0,
	-1, 943,
	389, 849,
	450, 849,
	491, 849,
	513, 849,
	-2, 789,
	-1, 947,
	1, 896,
	584, 896,
	586, 896,
	588, 896,
	-2, 0,
	-1, 948,
	1, 824,
	584, 824,
	586, 824,
	588, 824,
	-2, 0,
	-1, 949,
	1, 828,
	584, 828,
	586, 828,
	588, 828,
	-2, 0,
	-1, 950,
	1, 955,
	182, 955,
	584, 955,
	586, 955,
	588, 955,
	-2, 0,
	-1, 958,
	1, 855,
	584, 855,
	586, 855,
	588, 855,
	-2, 0,
	-1, 964,
	1, 896,
	584, 896,
	586, 896,
	588, 896,
	-2, 0,
	-1, 965,
	1, 898,
	584, 898,
	586, 898,
	588, 898,
	-2, 0,
	-1, 966,
	1, 901,
	584, 901,
	586, 901,
	588, 901,
	-2, 0,
	-1, 972,
	1, 919,
	584, 919,
	586, 919,
	588, 919,
	-2, 0,
	-1, 973,
	1, 921,
	584, 921,
	586, 921,
	588, 921,
	-2, 0,
	-1, 978,
	1, 949,
	584, 949,
	586, 949,
	588, 949,
	-2, 0,
	-1, 1025,
	169, 1508,
	182, 1508,
	272, 1508,
	338, 1508,
	-2, 1444,
	-1, 1040,
	169, 1507,
	182, 1507,
	272, 1507,
	338, 1507,
	-2, 1441,
	-1, 1067,
	587, 2223,
	-2, 691,
	-1, 1096,
	5, 2215,
	585, 2213,
	-2, 2204,
	-1, 1104,
	5, 2236,
	585, 2233,
	-2, 2224,
	-1, 1105,
	5, 2237,
	585, 2234,
	-2, 2225,
	-1, 1113,
	587, 2221,
	-2, 2203,
	-1, 1114,
	585, 2650,
	-2, 2222,
	-1, 1137,
	585, 2649,
	-2, 2238,
	-1, 1138,
	5, 1708,
	-2, 2620,
	-1, 1139,
	5, 1709,
	-2, 2621,
	-1, 1140,
	5, 1710,
	-2, 2635,
	-1, 1141,
	5, 1711,
	-2, 2599,
	-1, 1142,
	5, 1712,
	-2, 2633,
	-1, 1143,
	5, 1720,
	-2, 2612,
	-1, 1144,
	5, 1707,
	-2, 2608,
	-1, 1145,
	5, 1707,
	-2, 2607,
	-1, 1146,
	5, 1707,
	-2, 2626,
	-1, 1147,
	5, 1718,
	-2, 2601,
	-1, 1148,
	5, 1723,
	-2, 2600,
	-1, 1149,
	5, 1725,
	-2, 2645,
	-1, 1152,
	5, 1747,
	-2, 2638,
	-1, 1153,
	5, 1739,
	-2, 2639,
	-1, 1154,
	5, 1747,
	-2, 2640,
	-1, 1155,
	5, 1743,
	-2, 2641,
	-1, 1156,
	5, 1693,
	-2, 2613,
	-1, 1157,
	5, 1694,
	-2, 2614,
	-1, 1158,
	5, 1695,
	-2, 2602,
	-1, 1186,
	5, 1730,
	-2, 2646,
	-1, 1187,
	5, 1731,
	-2, 2636,
	-1, 1188,
	5, 1732,
	546, 1732,
	-2, 2603,
	-1, 1189,
	5, 1733,
	546, 1733,
	-2, 2604,
	-1, 1226,
	585, 2233,
	-2, 2224,
	-1, 1227,
	585, 2234,
	-2, 2225,
	-1, 1327,
	186, 2567,
	508, 2567,
	568, 2567,
	587, 2567,
	-2, 0,
	-1, 1330,
	1, 669,
	588, 669,
	-2, 1360,
	-1, 1458,
	357, 2199,
	411, 2199,
	452, 2199,
	578, 2199,
	-2, 2189,
	-1, 1469,
	589, 2199,
	-2, 2200,
	-1, 1478,
	1, 1228,
	584, 1228,
	586, 1228,
	588, 1228,
	-2, 1493,
	-1, 1526,
	396, 1025,
	545, 1025,
	-2, 392,
	-1, 1543,
	43, 2197,
	-2, 991,
	-1, 1550,
	1, 1228,
	584, 1228,
	586, 1228,
	588, 1228,
	-2, 1493,
	-1, 1558,
	4, 1253,
	21, 1253,
	22, 1253,
	23, 1253,
	24, 1253,
	25, 1253,
	26, 1253,
	27, 1253,
	29, 1253,
	30, 1253,
	36, 1253,
	41, 1253,
	42, 1253,
	44, 1253,
	45, 1253,
	46, 1253,
	47, 1253,
	48, 1253,
	49, 1253,
	50, 1253,
	51, 1253,
	53, 1253,
	54, 1253,
	55, 1253,
	56, 1253,
	58, 1253,
	59, 1253,
	60, 1253,
	61, 1253,
	62, 1253,
	63, 1253,
	64, 1253,
	68, 1253,
	69, 1253,
	70, 1253,
	71, 1253,
	73, 1253,
	74, 1253,
	75, 1253,
	79, 1253,
	80, 1253,
	81, 1253,
	82, 1253,
	83, 1253,
	84, 1253,
	85, 1253,
	88, 1253,
	89, 1253,
	90, 1253,
	91, 1253,
	92, 1253,
	94, 1253,
	96, 1253,
	97, 1253,
	98, 1253,
	99, 1253,
	100, 1253,
	101, 1253,
	103, 1253,
	104, 1253,
	105, 1253,
	107, 1253,
	108, 1253,
	109, 1253,
	117, 1253,
	118, 1253,
	119, 1253,
	120, 1253,
	121, 1253,
	123, 1253,
	124, 1253,
	125, 1253,
	127, 1253,
	128, 1253,
	129, 1253,
	131, 1253,
	132, 1253,
	133, 1253,
	135, 1253,
	136, 1253,
	137, 1253,
	140, 1253,
	141, 1253,
	142, 1253,
	144, 1253,
	145, 1253,
	147, 1253,
	148, 1253,
	149, 1253,
	151, 1253,
	152, 1253,
	153, 1253,
	154, 1253,
	155, 1253,
	156, 1253,
	157, 1253,
	158, 1253,
	159, 1253,
	160, 1253,
	161, 1253,
	162, 1253,
	163, 1253,
	164, 1253,
	165, 1253,
	166, 1253,
	174, 1253,
	175, 1253,
	176, 1253,
	177, 1253,
	181, 1253,
	183, 1253,
	184, 1253,
	188, 1253,
	189, 1253,
	190, 1253,
	191, 1253,
	192, 1253,
	193, 1253,
	194, 1253,
	195, 1253,
	196, 1253,
	197, 1253,
	198, 1253,
	199, 1253,
	200, 1253,
	202, 1253,
	203, 1253,
	205, 1253,
	206, 1253,
	208, 1253,
	209, 1253,
	210, 1253,
	211, 1253,
	212, 1253,
	213, 1253,
	214, 1253,
	215, 1253,
	216, 1253,
	218, 1253,
	219, 1253,
	221, 1253,
	222, 1253,
	223, 1253,
	224, 1253,
	225, 1253,
	230, 1253,
	231, 1253,
	232, 1253,
	233, 1253,
	236, 1253,
	237, 1253,
	238, 1253,
	240, 1253,
	242, 1253,
	243, 1253,
	245, 1253,
	247, 1253,
	248, 1253,
	249, 1253,
	251, 1253,
	255, 1253,
	256, 1253,
	257, 1253,
	258, 1253,
	259, 1253,
	260, 1253,
	262, 1253,
	263, 1253,
	264, 1253,
	266, 1253,
	267, 1253,
	269, 1253,
	270, 1253,
	273, 1253,
	277, 1253,
	278, 1253,
	279, 1253,
	282, 1253,
	283, 1253,
	284, 1253,
	285, 1253,
	287, 1253,
	288, 1253,
	289, 1253,
	290, 1253,
	291, 1253,
	292, 1253,
	293, 1253,
	294, 1253,
	295, 1253,
	296, 1253,
	297, 1253,
	298, 1253,
	299, 1253,
	300, 1253,
	301, 1253,
	302, 1253,
	303, 1253,
	304, 1253,
	305, 1253,
	306, 1253,
	307, 1253,
	308, 1253,
	310, 1253,
	312, 1253,
	313, 1253,
	314, 1253,
	315, 1253,
	316, 1253,
	317, 1253,
	318, 1253,
	319, 1253,
	320, 1253,
	321, 1253,
	322, 1253,
	323, 1253,
	325, 1253,
	326, 1253,
	330, 1253,
	331, 1253,
	333, 1253,
	334, 1253,
	335, 1253,
	336, 1253,
	337, 1253,
	340, 1253,
	342, 1253,
	344, 1253,
	345, 1253,
	346, 1253,
	349, 1253,
	350, 1253,
	351, 1253,
	353, 1253,
	355, 1253,
	356, 1253,
	357, 1253,
	358, 1253,
	359, 1253,
	360, 1253,
	361, 1253,
	362, 1253,
	363, 1253,
	364, 1253,
	365, 1253,
	366, 1253,
	368, 1253,
	369, 1253,
	370, 1253,
	371, 1253,
	372, 1253,
	373, 1253,
	374, 1253,
	375, 1253,
	376, 1253,
	377, 1253,
	378, 1253,
	379, 1253,
	380, 1253,
	381, 1253,
	382, 1253,
	384, 1253,
	385, 1253,
	387, 1253,
	388, 1253,
	389, 1253,
	390, 1253,
	391, 1253,
	392, 1253,
	393, 1253,
	394, 1253,
	395, 1253,
	396, 1253,
	397, 1253,
	398, 1253,
	400, 1253,
	402, 1253,
	403, 1253,
	404, 1253,
	409, 1253,
	411, 1253,
	412, 1253,
	413, 1253,
	414, 1253,
	415, 1253,
	416, 1253,
	417, 1253,
	418, 1253,
	419, 1253,
	421, 1253,
	422, 1253,
	423, 1253,
	425, 1253,
	426, 1253,
	427, 1253,
	428, 1253,
	429, 1253,
	430, 1253,
	432, 1253,
	433, 1253,
	434, 1253,
	435, 1253,
	436, 1253,
	437, 1253,
	438, 1253,
	439, 1253,
	440, 1253,
	441, 1253,
	442, 1253,
	443, 1253,
	445, 1253,
	446, 1253,
	447, 1253,
	448, 1253,
	449, 1253,
	450, 1253,
	452, 1253,
	453, 1253,
	454, 1253,
	455, 1253,
	456, 1253,
	457, 1253,
	459, 1253,
	460, 1253,
	461, 1253,
	462, 1253,
	463, 1253,
	464, 1253,
	465, 1253,
	466, 1253,
	468, 1253,
	470, 1253,
	471, 1253,
	472, 1253,
	473, 1253,
	474, 1253,
	475, 1253,
	476, 1253,
	477, 1253,
	478, 1253,
	479, 1253,
	480, 1253,
	481, 1253,
	482, 1253,
	483, 1253,
	484, 1253,
	485, 1253,
	487, 1253,
	488, 1253,
	490, 1253,
	491, 1253,
	493, 1253,
	494, 1253,
	495, 1253,
	496, 1253,
	497, 1253,
	498, 1253,
	499, 1253,
	500, 1253,
	501, 1253,
	503, 1253,
	504, 1253,
	505, 1253,
	506, 1253,
	507, 1253,
	509, 1253,
	511, 1253,
	512, 1253,
	513, 1253,
	514, 1253,
	515, 1253,
	516, 1253,
	518, 1253,
	519, 1253,
	520, 1253,
	521, 1253,
	523, 1253,
	524, 1253,
	527, 1253,
	528, 1253,
	529, 1253,
	530, 1253,
	531, 1253,
	532, 1253,
	533, 1253,
	535, 1253,
	538, 1253,
	539, 1253,
	540, 1253,
	541, 1253,
	542, 1253,
	543, 1253,
	545, 1253,
	546, 1253,
	547, 1253,
	548, 1253,
	550, 1253,
	555, 1253,
	556, 1253,
	557, 1253,
	558, 1253,
	559, 1253,
	560, 1253,
	-2, 0,
	-1, 1581,
	1, 537,
	584, 537,
	586, 537,
	588, 537,
	-2, 1464,
	-1, 1584,
	4, 2644,
	11, 2644,
	12, 2644,
	14, 2644,
	15, 2644,
	16, 2644,
	17, 2644,
	18, 2644,
	19, 2644,
	21, 2644,
	22, 2644,
	23, 2644,
	24, 2644,
	25, 2644,
	26, 2644,
	27, 2644,
	29, 2644,
	30, 2644,
	33, 2644,
	34, 2644,
	36, 2644,
	38, 2644,
	41, 2644,
	42, 2644,
	44, 2644,
	45, 2644,
	46, 2644,
	47, 2644,
	48, 2644,
	49, 2644,
	50, 2644,
	51, 2644,
	53, 2644,
	54, 2644,
	55, 2644,
	56, 2644,
	58, 2644,
	59, 2644,
	60, 2644,
	61, 2644,
	62, 2644,
	63, 2644,
	64, 2644,
	67, 2644,
	68, 2644,
	69, 2644,
	70, 2644,
	71, 2644,
	73, 2644,
	74, 2644,
	75, 2644,
	76, 2644,
	79, 2644,
	80, 2644,
	81, 2644,
	82, 2644,
	83, 2644,
	84, 2644,
	85, 2644,
	86, 2644,
	88, 2644,
	89, 2644,
	90, 2644,
	91, 2644,
	92, 2644,
	94, 2644,
	95, 2644,
	96, 2644,
	97, 2644,
	98, 2644,
	99, 2644,
	100, 2644,
	101, 2644,
	103, 2644,
	104, 2644,
	105, 2644,
	106, 2644,
	107, 2644,
	108, 2644,
	109, 2644,
	117, 2644,
	118, 2644,
	119, 2644,
	120, 2644,
	121, 2644,
	123, 2644,
	124, 2644,
	125, 2644,
	127, 2644,
	128, 2644,
	129, 2644,
	131, 2644,
	132, 2644,
	133, 2644,
	135, 2644,
	136, 2644,
	137, 2644,
	140, 2644,
	141, 2644,
	142, 2644,
	144, 2644,
	145, 2644,
	147, 2644,
	148, 2644,
	149, 2644,
	151, 2644,
	152, 2644,
	153, 2644,
	154, 2644,
	155, 2644,
	156, 2644,
	157, 2644,
	158, 2644,
	159, 2644,
	160, 2644,
	161, 2644,
	162, 2644,
	163, 2644,
	164, 2644,
	165, 2644,
	166, 2644,
	170, 2644,
	171, 2644,
	172, 2644,
	173, 2644,
	174, 2644,
	175, 2644,
	176, 2644,
	177, 2644,
	180, 2644,
	181, 2644,
	183, 2644,
	184, 2644,
	187, 2644,
	188, 2644,
	189, 2644,
	190, 2644,
	191, 2644,
	192, 2644,
	193, 2644,
	194, 2644,
	195, 2644,
	196, 2644,
	197, 2644,
	198, 2644,
	199, 2644,
	200, 2644,
	202, 2644,
	203, 2644,
	205, 2644,
	206, 2644,
	208, 2644,
	209, 2644,
	210, 2644,
	211, 2644,
	212, 2644,
	213, 2644,
	214, 2644,
	215, 2644,
	216, 2644,
	217, 2644,
	218, 2644,
	219, 2644,
	220, 2644,
	221, 2644,
	222, 2644,
	223, 2644,
	224, 2644,
	225, 2644,
	227, 2644,
	228, 2644,
	230, 2644,
	231, 2644,
	232, 2644,
	233, 2644,
	235, 2644,
	236, 2644,
	237, 2644,
	238, 2644,
	240, 2644,
	242, 2644,
	243, 2644,
	244, 2644,
	245, 2644,
	246, 2644,
	247, 2644,
	248, 2644,
	249, 2644,
	250, 2644,
	251, 2644,
	253, 2644,
	254, 2644,
	255, 2644,
	256, 2644,
	257, 2644,
	258, 2644,
	259, 2644,
	260, 2644,
	262, 2644,
	263, 2644,
	264, 2644,
	266, 2644,
	267, 2644,
	268, 2644,
	269, 2644,
	270, 2644,
	271, 2644,
	273, 2644,
	277, 2644,
	278, 2644,
	279, 2644,
	282, 2644,
	283, 2644,
	284, 2644,
	285, 2644,
	286, 2644,
	287, 2644,
	288, 2644,
	289, 2644,
	290, 2644,
	291, 2644,
	292, 2644,
	293, 2644,
	294, 2644,
	295, 2644,
	296, 2644,
	297, 2644,
	298, 2644,
	299, 2644,
	300, 2644,
	301, 2644,
	302, 2644,
	303, 2644,
	304, 2644,
	305, 2644,
	306, 2644,
	307, 2644,
	308, 2644,
	310, 2644,
	311, 2644,
	312, 2644,
	313, 2644,
	314, 2644,
	315, 2644,
	316, 2644,
	317, 2644,
	318, 2644,
	319, 2644,
	320, 2644,
	321, 2644,
	322, 2644,
	323, 2644,
	325, 2644,
	326, 2644,
	329, 2644,
	330, 2644,
	331, 2644,
	333, 2644,
	334, 2644,
	335, 2644,
	336, 2644,
	337, 2644,
	340, 2644,
	344, 2644,
	345, 2644,
	346, 2644,
	347, 2644,
	349, 2644,
	350, 2644,
	351, 2644,
	353, 2644,
	355, 2644,
	356, 2644,
	357, 2644,
	358, 2644,
	359, 2644,
	360, 2644,
	361, 2644,
	362, 2644,
	363, 2644,
	364, 2644,
	365, 2644,
	366, 2644,
	368, 2644,
	369, 2644,
	370, 2644,
	371, 2644,
	372, 2644,
	373, 2644,
	374, 2644,
	375, 2644,
	376, 2644,
	377, 2644,
	378, 2644,
	379, 2644,
	380, 2644,
	381, 2644,
	382, 2644,
	384, 2644,
	385, 2644,
	387, 2644,
	388, 2644,
	389, 2644,
	390, 2644,
	391, 2644,
	392, 2644,
	393, 2644,
	394, 2644,
	395, 2644,
	396, 2644,
	397, 2644,
	398, 2644,
	400, 2644,
	402, 2644,
	403, 2644,
	404, 2644,
	409, 2644,
	410, 2644,
	411, 2644,
	412, 2644,
	413, 2644,
	414, 2644,
	415, 2644,
	416, 2644,
	417, 2644,
	418, 2644,
	419, 2644,
	421, 2644,
	422, 2644,
	423, 2644,
	424, 2644,
	425, 2644,
	426, 2644,
	427, 2644,
	428, 2644,
	429, 2644,
	430, 2644,
	431, 2644,
	432, 2644,
	433, 2644,
	434, 2644,
	435, 2644,
	436, 2644,
	437, 2644,
	438, 2644,
	439, 2644,
	440, 2644,
	441, 2644,
	442, 2644,
	443, 2644,
	445, 2644,
	446, 2644,
	447, 2644,
	448, 2644,
	449, 2644,
	450, 2644,
	452, 2644,
	453, 2644,
	454, 2644,
	455, 2644,
	456, 2644,
	457, 2644,
	458, 2644,
	459, 2644,
	460, 2644,
	461, 2644,
	462, 2644,
	463, 2644,
	464, 2644,
	465, 2644,
	466, 2644,
	468, 2644,
	470, 2644,
	471, 2644,
	472, 2644,
	473, 2644,
	474, 2644,
	475, 2644,
	476, 2644,
	477, 2644,
	478, 2644,
	479, 2644,
	480, 2644,
	481, 2644,
	482, 2644,
	483, 2644,
	484, 2644,
	485, 2644,
	487, 2644,
	488, 2644,
	489, 2644,
	490, 2644,
	491, 2644,
	493, 2644,
	494, 2644,
	495, 2644,
	496, 2644,
	497, 2644,
	498, 2644,
	499, 2644,
	500, 2644,
	501, 2644,
	503, 2644,
	504, 2644,
	505, 2644,
	506, 2644,
	507, 2644,
	509, 2644,
	511, 2644,
	512, 2644,
	513, 2644,
	514, 2644,
	515, 2644,
	516, 2644,
	518, 2644,
	519, 2644,
	520, 2644,
	521, 2644,
	523, 2644,
	524, 2644,
	527, 2644,
	528, 2644,
	529, 2644,
	530, 2644,
	531, 2644,
	532, 2644,
	533, 2644,
	535, 2644,
	538, 2644,
	539, 2644,
	540, 2644,
	541, 2644,
	542, 2644,
	543, 2644,
	545, 2644,
	546, 2644,
	547, 2644,
	548, 2644,
	550, 2644,
	555, 2644,
	556, 2644,
	557, 2644,
	558, 2644,
	559, 2644,
	560, 2644,
	561, 2644,
	563, 2644,
	566, 2644,
	567, 2644,
	568, 2644,
	569, 2644,
	570, 2644,
	571, 2644,
	573, 2644,
	574, 2644,
	575, 2644,
	576, 2644,
	577, 2644,
	578, 2644,
	579, 2644,
	580, 2644,
	581, 2644,
	583, 2644,
	586, 2644,
	587, 2644,
	589, 2644,
	590, 2644,
	-2, 0,
	-1, 1589,
	186, 2526,
	508, 2526,
	568, 2526,
	587, 2526,
	-2, 0,
	-1, 1638,
	389, 850,
	450, 850,
	491, 850,
	513, 850,
	-2, 0,
	-1, 1665,
	1, 845,
	584, 845,
	586, 845,
	588, 845,
	-2, 0,
	-1, 1666,
	1, 883,
	584, 883,
	586, 883,
	588, 883,
	-2, 0,
	-1, 1667,
	1, 891,
	584, 891,
	586, 891,
	588, 891,
	-2, 0,
	-1, 1670,
	1, 854,
	584, 854,
	586, 854,
	588, 854,
	-2, 0,
	-1, 1672,
	1, 858,
	584, 858,
	586, 858,
	588, 858,
	-2, 0,
	-1, 1678,
	1, 865,
	584, 865,
	586, 865,
	588, 865,
	-2, 0,
	-1, 1707,
	1, 2589,
	584, 2589,
	586, 2589,
	587, 2589,
	588, 2589,
	-2, 917,
	-1, 1708,
	1, 2523,
	584, 2523,
	586, 2523,
	587, 2523,
	588, 2523,
	-2, 918,
	-1, 1712,
	1, 930,
	584, 930,
	586, 930,
	588, 930,
	-2, 0,
	-1, 1727,
	1, 1355,
	588, 1355,
	-2, 1360,
	-1, 1730,
	169, 1507,
	182, 1507,
	272, 1507,
	338, 1507,
	-2, 1445,
	-1, 1830,
	150, 1466,
	169, 1466,
	182, 1466,
	239, 1466,
	272, 1466,
	338, 1466,
	348, 1466,
	525, 1466,
	-2, 1912,
	-1, 1890,
	586, 2085,
	-2, 0,
	-1, 1925,
	150, 1466,
	169, 1466,
	182, 1466,
	239, 1466,
	272, 1466,
	338, 1466,
	348, 1466,
	525, 1466,
	-2, 1594,
	-1, 1959,
	508, 2523,
	587, 2523,
	590, 2523,
	-2, 0,
	-1, 1976,
	585, 1735,
	-2, 1723,
	-1, 2007,
	186, 2523,
	587, 2523,
	590, 2523,
	-2, 0,
	-1, 2055,
	1, 671,
	588, 671,
	-2, 1360,
	-1, 2181,
	220, 250,
	-2, 2232,
	-1, 2182,
	220, 251,
	-2, 300,
	-1, 2286,
	1, 847,
	584, 847,
	586, 847,
	588, 847,
	-2, 0,
	-1, 2287,
	1, 885,
	584, 885,
	586, 885,
	588, 885,
	-2, 0,
	-1, 2288,
	1, 893,
	584, 893,
	586, 893,
	588, 893,
	-2, 0,
	-1, 2289,
	1, 932,
	584, 932,
	586, 932,
	588, 932,
	-2, 0,
	-1, 2322,
	1, 867,
	584, 867,
	586, 867,
	588, 867,
	-2, 0,
	-1, 2378,
	429, 1534,
	430, 1534,
	-2, 1768,
	-1, 2409,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1788,
	-1, 2410,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1789,
	-1, 2411,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1790,
	-1, 2412,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1791,
	-1, 2413,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1792,
	-1, 2414,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1793,
	-1, 2415,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1794,
	-1, 2416,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1795,
	-1, 2428,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1807,
	-1, 2429,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1808,
	-1, 2430,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1809,
	-1, 2434,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1816,
	-1, 2440,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1820,
	-1, 2442,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1828,
	-1, 2443,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1829,
	-1, 2444,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1830,
	-1, 2445,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1831,
	-1, 2617,
	5, 2236,
	186, 2096,
	585, 2233,
	-2, 2224,
	-1, 2618,
	186, 2097,
	-2, 2595,
	-1, 2619,
	186, 2098,
	-2, 2420,
	-1, 2620,
	186, 2099,
	-2, 2306,
	-1, 2621,
	186, 2100,
	-2, 2360,
	-1, 2622,
	186, 2101,
	-2, 2405,
	-1, 2623,
	186, 2102,
	-2, 2521,
	-1, 2624,
	186, 2103,
	-2, 1895,
	-1, 2695,
	1, 1595,
	2, 1595,
	106, 1595,
	150, 1595,
	169, 1595,
	182, 1595,
	187, 1595,
	204, 1595,
	207, 1595,
	235, 1595,
	239, 1595,
	250, 1595,
	268, 1595,
	272, 1595,
	311, 1595,
	338, 1595,
	342, 1595,
	348, 1595,
	420, 1595,
	424, 1595,
	525, 1595,
	536, 1595,
	552, 1595,
	553, 1595,
	554, 1595,
	564, 1595,
	584, 1595,
	586, 1595,
	588, 1595,
	590, 1595,
	-2, 1594,
	-1, 2708,
	585, 2205,
	-2, 2219,
	-1, 2710,
	1, 317,
	552, 317,
	-2, 1493,
	-1, 2737,
	585, 1734,
	-2, 1724,
	-1, 2914,
	1, 1228,
	584, 1228,
	586, 1228,
	588, 1228,
	-2, 1493,
	-1, 3083,
	343, 1537,
	-2, 2634,
	-1, 3084,
	343, 1538,
	-2, 2506,
	-1, 3088,
	429, 2162,
	430, 2162,
	-2, 1893,
	-1, 3089,
	429, 2166,
	430, 2166,
	-2, 1894,
	-1, 3090,
	429, 2163,
	430, 2163,
	-2, 1893,
	-1, 3091,
	429, 2167,
	430, 2167,
	-2, 1894,
	-1, 3104,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1818,
	-1, 3105,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1822,
	-1, 3111,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1824,
	-1, 3331,
	1, 668,
	584, 668,
	586, 668,
	588, 668,
	-2, 1360,
	-1, 3485,
	43, 2197,
	-2, 992,
	-1, 3490,
	1, 1228,
	584, 1228,
	586, 1228,
	588, 1228,
	-2, 1493,
	-1, 3596,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1826,
	-1, 3603,
	244, 0,
	246, 0,
	329, 0,
	-2, 1845,
	-1, 3671,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1874,
	-1, 3672,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1875,
	-1, 3673,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1876,
	-1, 3677,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1880,
	-1, 3678,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1881,
	-1, 3679,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1882,
	-1, 3726,
	585, 2206,
	-2, 2220,
	-1, 3888,
	587, 2752,
	-2, 1419,
	-1, 3946,
	244, 0,
	246, 0,
	329, 0,
	-2, 1846,
	-1, 3949,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1849,
	-1, 3950,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1851,
	-1, 4042,
	587, 2221,
	-2, 1263,
	-1, 4186,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1850,
	-1, 4187,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1852,
	-1, 4198,
	244, 0,
	-2, 1885,
	-1, 4367,
	244, 0,
	-2, 1886,
	-1, 4549,
	50, 0,
	217, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 2598,
}

const sqlPrivate = 57344

const sqlLast = 126002

var sqlAct = [...]int{
	266, 4645, 3474, 2979, 4731, 3242, 2992, 4542, 4601, 4530,
	4241, 4424, 4402, 4548, 4289, 3473, 4541, 4394, 4559, 4672,
	2103, 4445, 4420, 2178, 4501, 3929, 4560, 4517, 4227, 1219,
	1490, 2799, 4498, 4481, 4561, 2843, 4371, 4296, 4614, 4320,
	1230, 4038, 2863, 4142, 3636, 4547, 2253, 4103, 4137, 4083,
	4207, 4246, 4175, 3588, 2388, 3872, 3880, 4126, 2183, 4117,
	1050, 4124, 3815, 3507, 1299, 4023, 1292, 1303, 2650, 4039,
	4305, 3413, 3097, 4334, 2037, 796, 2457, 3501, 3353, 3853,
	3835, 4147, 3837, 2396, 2262, 3469, 1739, 2111, 759, 1605,
	3459, 3001, 3356, 4203, 2938, 2389, 1363, 3014, 3548, 1931,
	3546, 796, 3003, 3285, 1963, 1041, 2949, 2876, 2968, 1455,
	3729, 3257, 3248, 869, 4, 3265, 3225, 3928, 2963, 3246,
	3011, 2980, 2226, 2260, 4646, 3985, 873, 3375, 3342, 1900,
	3000, 2172, 2965, 1646, 2994, 2173, 2122, 2801, 2393, 3697,
	3224, 1049, 175, 2688, 1876, 4372, 2535, 1838, 1808, 2470,
	1603, 3081, 1297, 3350, 864, 2942, 791, 2687, 1545, 1462,
	2537, 108, 2891, 2149, 1100, 2168, 2950, 2156, 260, 1727,
	3010, 1346, 1210, 2091, 1271, 2095, 2035, 2668, 2647, 2526,
	3292, 1285, 2454, 2377, 2081, 2360, 3471, 1901, 1105, 2973,
	2358, 1096, 2012, 2842, 2721, 1582, 793, 2213, 1294, 797,
	2632, 1548, 4446, 2824, 798, 3004, 2787, 1920, 1332, 2720,
	690, 2529, 2658, 1213, 1192, 2579, 1910, 259, 1917, 1871,
	2677, 2507, 2613, 1822, 1740, 1678, 184, 1741, 2359, 2361,
	1665, 185, 1580, 1227, 2212, 175, 741, 1209, 1282, 2239,
	2690, 753, 1573, 802, 1485, 2110, 4602, 2382, 1081, 2013,
	2010, 693, 44, 1746, 43, 1964, 1190, 1103, 41, 32,
	30, 28, 3134, 1726, 1496, 701, 1215, 936, 956, 802,
	3711, 3128, 3712, 2026, 2026, 716, 4744, 845, 3244, 2026,
	2667, 4734, 2026, 4719, 2026, 3526, 1341, 2667, 1341, 3300,
	676, 4718, 805, 2026, 698, 2667, 4708, 888, 1045, 1107,
	2187, 4690, 73, 3517, 4688, 4245, 4633, 1671, 4245, 3315,
	2187, 4590, 2261, 1102, 3701, 4591, 3516, 4583, 805, 74,
	1079, 2667, 4581, 4578, 4575, 4545, 2667, 4579, 4576, 2187,
	4544, 1045, 4543, 4538, 2187, 78, 2047, 2047, 3314, 4537,
	4528, 3195, 3196, 2047, 4245, 1207, 4526, 4523, 1046, 4496,
	4245, 4308, 4470, 4245, 4463, 4462, 2728, 4457, 2667, 2667,
	4456, 4245, 4450, 4416, 4245, 4369, 2187, 4094, 4351, 2728,
	4348, 2044, 3915, 4345, 2187, 87, 4298, 4245, 4262, 3143,
	4299, 157, 2187, 1510, 4261, 3144, 4252, 4006, 2187, 73,
	2187, 46, 45, 4251, 4244, 4214, 4188, 4245, 4245, 2187,
	2728, 4166, 1026, 2660, 4155, 2047, 74, 1025, 3526, 152,
	4078, 2748, 4063, 3948, 2667, 871, 2667, 2728, 3526, 1249,
	3195, 3196, 78, 2187, 1225, 2724, 3896, 49, 3890, 107,
	3543, 2187, 3543, 67, 93, 104, 1242, 3851, 3096, 3721,
	48, 3852, 154, 3722, 2667, 3719, 3704, 4471, 1040, 3720,
	2667, 1035, 3620, 3616, 3542, 3533, 2187, 2667, 3543, 3534,
	47, 2187, 87, 3241, 3236, 1193, 1193, 2667, 2667, 3235,
	3186, 3184, 3176, 2667, 3187, 3185, 3177, 1754, 1755, 3174,
	4373, 4364, 1194, 2667, 3195, 3196, 4352, 1498, 50, 68,
	1222, 4308, 94, 2747, 3145, 3210, 2047, 51, 2667, 3018,
	1785, 2990, 57, 2047, 2989, 2249, 155, 1757, 2249, 2771,
	3201, 2727, 3701, 2667, 49, 2728, 107, 2659, 1243, 2718,
	2712, 93, 104, 2667, 2187, 1196, 2666, 1197, 2248, 2532,
	2667, 1489, 2249, 1810, 4135, 230, 4094, 4064, 3915, 3534,
	2667, 2866, 1756, 2786, 2060, 2025, 1221, 2041, 2044, 2944,
	2186, 2886, 2784, 1223, 1896, 1484, 3800, 3591, 3567, 1918,
	2161, 52, 2483, 2484, 2485, 2502, 2503, 2504, 1648, 2115,
	2704, 4566, 2703, 3133, 3518, 2702, 2701, 2700, 1198, 94,
	1195, 230, 2505, 232, 1034, 1033, 1032, 3195, 3196, 3201,
	3213, 3214, 3215, 3519, 1509, 1031, 1030, 1029, 1028, 1024,
	1023, 3058, 4239, 1022, 1021, 1020, 1019, 1018, 1017, 3944,
	1016, 1015, 1754, 1755, 1014, 1810, 3211, 2533, 1013, 1012,
	1011, 1010, 1009, 1008, 934, 933, 932, 2027, 2027, 232,
	931, 930, 231, 2027, 2495, 1785, 2027, 97, 2027, 929,
	1754, 1755, 1757, 2491, 928, 224, 1762, 2027, 927, 926,
	925, 924, 923, 3201, 225, 922, 921, 920, 919, 918,
	917, 916, 3210, 915, 914, 913, 912, 911, 1810, 910,
	1757, 909, 908, 907, 906, 905, 186, 1756, 231, 1489,
	904, 903, 902, 901, 93, 891, 890, 1776, 1807, 183,
	100, 886, 103, 1784, 1786, 3211, 1773, 885, 879, 2534,
	878, 2531, 863, 862, 819, 1756, 1612, 3516, 818, 817,
	816, 2562, 808, 1243, 807, 806, 774, 230, 2496, 2497,
	2498, 2499, 186, 765, 97, 872, 764, 763, 2490, 747,
	148, 254, 253, 252, 1308, 1105, 251, 250, 249, 248,
	4001, 53, 2044, 247, 246, 245, 244, 243, 242, 230,
	3942, 241, 1777, 240, 239, 56, 3201, 238, 1105, 3211,
	59, 3212, 1105, 237, 236, 232, 235, 1807, 234, 69,
	233, 1779, 1780, 1781, 1782, 58, 183, 100, 1366, 103,
	3960, 1762, 1366, 54, 3742, 3715, 3544, 156, 3288, 1598,
	1308, 151, 1302, 3156, 55, 4149, 1206, 232, 3139, 2758,
	2025, 2500, 2501, 3130, 230, 2044, 187, 2659, 2041, 1762,
	2747, 1105, 62, 1105, 231, 1105, 1840, 148, 1345, 2353,
	3217, 1308, 1350, 1243, 1807, 230, 3041, 224, 1784, 1786,
	2925, 1807, 153, 2732, 2493, 1879, 225, 3239, 2709, 1336,
	3212, 2694, 1878, 1921, 2958, 2089, 231, 1308, 1478, 2536,
	1470, 2548, 232, 2546, 1771, 1772, 1673, 1465, 186, 224,
	4546, 1504, 3211, 1879, 1882, 2046, 1753, 1308, 225, 1944,
	1878, 1849, 1492, 232, 1308, 1352, 3240, 2256, 151, 1513,
	1229, 4525, 1105, 4431, 1105, 4361, 1498, 1777, 1308, 4376,
	186, 3856, 1877, 187, 1105, 4202, 1105, 1778, 2976, 4355,
	1488, 231, 1276, 1279, 3212, 1550, 3197, 3198, 3199, 3200,
	3202, 3203, 4156, 1497, 224, 1554, 1557, 4134, 3195, 3196,
	4011, 3983, 231, 225, 1330, 4353, 1289, 3982, 1616, 1602,
	3976, 3975, 1591, 3974, 1807, 224, 3195, 3196, 3967, 3966,
	3964, 1476, 1308, 3959, 225, 186, 1604, 3956, 3, 1359,
	3955, 1452, 1457, 1150, 3850, 1809, 3746, 3745, 3744, 1807,
	1105, 2255, 1460, 1105, 3725, 2530, 186, 230, 802, 1498,
	1841, 3692, 1839, 2229, 3691, 3690, 3195, 3196, 3612, 2494,
	148, 3607, 3206, 3204, 3205, 3197, 3198, 3199, 3200, 3202,
	3203, 2741, 2194, 3283, 1325, 1847, 3232, 1543, 4151, 1487,
	1630, 2024, 3223, 3194, 1486, 3191, 3190, 3212, 3188, 175,
	175, 1783, 3183, 3182, 3181, 232, 3178, 805, 3175, 3155,
	3138, 1842, 1585, 1587, 1617, 3131, 3129, 2991, 1046, 2695,
	2519, 1753, 1778, 1560, 1840, 1754, 1755, 1809, 1752, 1767,
	1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 3205, 3197,
	3198, 3199, 3200, 3202, 3203, 4738, 1105, 1105, 1105, 1105,
	1105, 1105, 1105, 1105, 231, 1757, 4682, 1316, 3798, 4681,
	3857, 4647, 1503, 4600, 1754, 1755, 2192, 224, 4598, 1336,
	1231, 3638, 1336, 4488, 4423, 4412, 225, 3201, 2960, 1105,
	1809, 4409, 4408, 1498, 4407, 1105, 4388, 1785, 1687, 1576,
	1756, 4375, 4374, 4349, 1757, 3201, 4333, 4332, 186, 2460,
	4318, 4315, 4314, 4309, 2480, 2481, 2482, 2506, 2492, 2486,
	1048, 2488, 2489, 2487, 2474, 2475, 2476, 2477, 2478, 2479,
	1810, 1731, 4258, 3306, 3237, 4235, 3857, 4200, 4183, 1756,
	4182, 4163, 3207, 3208, 3209, 3201, 4162, 1597, 230, 3206,
	3204, 3205, 3197, 3198, 3199, 3200, 3202, 3203, 4120, 1611,
	4095, 1579, 4000, 3981, 1725, 3916, 3910, 3907, 1754, 1755,
	3786, 1774, 1770, 3785, 1767, 1765, 1766, 1758, 1759, 1760,
	1761, 1763, 1764, 3769, 39, 4238, 1829, 3768, 3766, 3707,
	2466, 1785, 3695, 3602, 1827, 3545, 232, 3527, 1757, 3493,
	1105, 1105, 1105, 3428, 1762, 1622, 1105, 1760, 1761, 1763,
	1764, 3211, 1639, 1227, 4377, 1227, 230, 3388, 3355, 3308,
	3160, 3159, 3154, 1674, 1810, 3120, 2937, 1885, 1884, 1883,
	1366, 230, 1880, 1756, 1898, 1872, 1754, 1755, 1870, 1105,
	2739, 4150, 796, 1762, 2738, 231, 2706, 2699, 1981, 796,
	1046, 3211, 1308, 2665, 2544, 1826, 1574, 3280, 224, 1943,
	1899, 1728, 1947, 1894, 232, 1893, 1757, 225, 1892, 1891,
	1736, 1735, 1890, 1960, 1907, 1889, 1026, 1888, 1887, 232,
	2008, 1025, 2959, 1807, 1886, 1867, 1866, 1865, 1730, 186,
	1784, 1786, 1864, 1863, 4123, 2561, 1862, 1749, 1750, 1881,
	1861, 1756, 1860, 230, 1732, 1859, 1858, 1955, 1857, 1856,
	1952, 1855, 1854, 231, 1853, 1842, 1828, 1825, 1308, 1820,
	1324, 1247, 1238, 1807, 4007, 1105, 224, 1928, 231, 1308,
	1904, 1905, 3952, 3741, 3718, 225, 3710, 1762, 3142, 2730,
	2697, 224, 4219, 4009, 3195, 3196, 3740, 1105, 1841, 1777,
	225, 232, 3304, 1366, 1823, 230, 3212, 2975, 175, 4066,
	2257, 3522, 2080, 1939, 2080, 1873, 1874, 2105, 4679, 2080,
	230, 230, 186, 1349, 4671, 2864, 1046, 4410, 4310, 1205,
	2078, 4301, 1807, 4300, 1784, 1786, 4306, 4154, 4097, 4096,
	4065, 4003, 3919, 2053, 3918, 3917, 3212, 3713, 3529, 1950,
	231, 1578, 3528, 232, 1225, 1341, 1225, 2087, 1921, 3589,
	802, 2052, 1336, 224, 1948, 3860, 2847, 802, 232, 232,
	1342, 1807, 225, 1929, 1862, 1341, 1951, 1638, 1926, 1919,
	1723, 3783, 1193, 1348, 3810, 2547, 3180, 2545, 1956, 1879,
	3179, 1341, 3391, 1777, 186, 2004, 1878, 3102, 1897, 2829,
	2029, 1344, 231, 2066, 3357, 3420, 4356, 2072, 2071, 805,
	1851, 2080, 2082, 1688, 4612, 224, 805, 231, 231, 1938,
	1222, 1937, 1222, 2158, 225, 1936, 1934, 1933, 1932, 1923,
	224, 224, 4354, 1308, 1308, 3199, 3200, 3202, 3203, 225,
	225, 3195, 3196, 1366, 1778, 1961, 186, 2055, 3206, 3204,
	3205, 3197, 3198, 3199, 3200, 3202, 3203, 3538, 1862, 230,
	1006, 186, 186, 2278, 3476, 1807, 3475, 1347, 2254, 1647,
	2230, 4297, 4586, 4571, 4558, 3460, 1221, 3015, 1221, 1648,
	2174, 3864, 3847, 1223, 3812, 1223, 3807, 1338, 3791, 3204,
	3205, 3197, 3198, 3199, 3200, 3202, 3203, 1975, 2143, 3564,
	2148, 3329, 1809, 2153, 4204, 1007, 3244, 232, 2051, 3640,
	2527, 3148, 230, 2737, 2872, 2826, 1895, 1875, 2049, 4567,
	3467, 2223, 2179, 2184, 1553, 1848, 1481, 1319, 2058, 2075,
	1275, 2532, 4035, 4580, 2883, 4577, 3512, 1308, 1778, 1308,
	3761, 1308, 2083, 2073, 2880, 2878, 4403, 1579, 4254, 3452,
	1758, 1759, 1760, 1761, 1763, 1764, 231, 1308, 1308, 4231,
	232, 4138, 2115, 4495, 4385, 3360, 4031, 1343, 1308, 224,
	3778, 2998, 2121, 2871, 2825, 2972, 4630, 4631, 225, 3583,
	1308, 987, 1308, 1308, 1308, 4279, 4568, 1765, 1766, 1758,
	1759, 1760, 1761, 1763, 1764, 3333, 1809, 1686, 4053, 2252,
	186, 2368, 1626, 802, 2176, 796, 1520, 2219, 4661, 231,
	3201, 1004, 3825, 2141, 2772, 1302, 2266, 1528, 2067, 2533,
	4032, 2264, 224, 1002, 1339, 2328, 2268, 2277, 2326, 1000,
	1482, 225, 2224, 1340, 1487, 2452, 998, 4733, 2276, 1486,
	2279, 2280, 2281, 2077, 995, 4272, 2236, 4264, 982, 1098,
	4092, 4091, 805, 186, 3823, 3822, 3814, 2140, 4051, 3305,
	2366, 2152, 2790, 3806, 2450, 4049, 858, 3805, 3335, 1044,
	2259, 3803, 1039, 3802, 2282, 1685, 3790, 2788, 3756, 2185,
	3824, 2076, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 3755,
	3456, 3455, 3299, 1105, 3153, 1105, 3152, 3151, 1046, 3150,
	1046, 2534, 1105, 2531, 1529, 1981, 1981, 1366, 2265, 1105,
	1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105,
	1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105,
	1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105,
	1105, 1105, 1105, 1105, 1105, 2246, 1105, 2233, 1105, 1105,
	1105, 1105, 2270, 2205, 2204, 1576, 1764, 2241, 1043, 2241,
	2238, 2242, 3418, 1349, 983, 4255, 2244, 3106, 2889, 2250,
	859, 2251, 2357, 802, 1105, 1684, 4232, 2370, 1105, 1105,
	2888, 1325, 1624, 2885, 3357, 2874, 1105, 1578, 1807, 1349,
	1105, 3390, 1105, 1105, 2862, 2368, 2861, 2254, 2827, 2827,
	1366, 2304, 2367, 2269, 1341, 2446, 1105, 1105, 1105, 1105,
	4662, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 2790,
	2286, 4027, 805, 1348, 2447, 2857, 4028, 2856, 1669, 2448,
	2855, 2834, 2833, 2453, 2788, 2731, 2794, 1105, 1105, 1105,
	1105, 1105, 1105, 1105, 1105, 1105, 2508, 2509, 2719, 1348,
	1105, 2536, 2441, 2056, 2366, 2803, 2322, 1729, 2851, 2575,
	2508, 2524, 1227, 1640, 3203, 2574, 4048, 1045, 1909, 1366,
	1315, 2398, 2203, 2969, 2335, 2345, 2365, 4030, 1227, 2381,
	2844, 2845, 2844, 2845, 1619, 4067, 2570, 2844, 2845, 2287,
	1566, 4666, 1565, 4033, 1105, 1366, 1564, 1483, 1563, 1331,
	4181, 3565, 2350, 2779, 2274, 2616, 2616, 2630, 2112, 2508,
	2356, 2355, 2651, 2653, 2369, 2362, 2354, 992, 2657, 2527,
	3419, 1524, 4016, 1026, 1261, 2472, 1026, 1026, 2385, 3117,
	1668, 2386, 2387, 2364, 3764, 1721, 2831, 1046, 1722, 2523,
	2342, 1537, 2108, 2123, 2456, 2146, 1495, 1046, 1502, 1913,
	1508, 1046, 2288, 2456, 984, 4047, 3021, 2711, 3115, 1542,
	2394, 2395, 2707, 2817, 2332, 1648, 2127, 2530, 2806, 1697,
	3079, 2113, 2114, 2294, 2674, 4630, 2682, 4396, 4692, 2084,
	2085, 1342, 1734, 2572, 2344, 4015, 4667, 1669, 2573, 3094,
	1928, 2576, 2115, 2577, 2578, 2468, 2367, 1916, 1308, 1308,
	2882, 2109, 1620, 1701, 1975, 1975, 3197, 3198, 3199, 3200,
	3202, 3203, 1911, 2521, 2449, 2464, 2816, 1596, 1636, 1601,
	4029, 1648, 2462, 2124, 2451, 2243, 2725, 1342, 1683, 1610,
	1914, 1615, 2881, 2291, 2285, 3573, 3332, 2696, 2673, 1046,
	1366, 3572, 2879, 2877, 1042, 1323, 2438, 2536, 1666, 4564,
	1939, 2612, 3055, 1225, 175, 4090, 2766, 1302, 2761, 4036,
	2625, 2655, 2642, 2767, 861, 860, 1549, 2663, 2664, 1225,
	2365, 3061, 3775, 1912, 1981, 2681, 4035, 2686, 2733, 2675,
	2692, 2693, 2295, 688, 3804, 2679, 2680, 1193, 4050, 1668,
	1881, 1926, 3787, 1672, 1336, 985, 4669, 4398, 1338, 3112,
	3629, 772, 809, 3801, 3259, 4675, 3454, 2722, 899, 683,
	4031, 1667, 1366, 3416, 4024, 1547, 2884, 2854, 3093, 1222,
	1234, 996, 2832, 3113, 2769, 1680, 1308, 3118, 4642, 2128,
	2351, 4022, 4650, 996, 2327, 1222, 1625, 2325, 2795, 996,
	4026, 2740, 1105, 1105, 1338, 1105, 997, 2763, 986, 4649,
	1623, 1978, 982, 2752, 996, 2744, 4045, 2755, 2717, 2756,
	1873, 1874, 1232, 4180, 4032, 2743, 2805, 796, 2792, 1308,
	2746, 2760, 2191, 2190, 2770, 1221, 1039, 2793, 1343, 856,
	3064, 855, 1223, 4695, 2914, 2875, 1915, 2762, 3832, 4619,
	3773, 1221, 2941, 2852, 2764, 2129, 2130, 3626, 1223, 2830,
	1308, 3086, 3087, 2341, 3934, 1236, 4025, 3933, 2836, 3509,
	770, 2793, 1308, 2436, 1308, 2096, 2439, 2956, 2773, 2125,
	2097, 3510, 4565, 4467, 1343, 2983, 1526, 4722, 2031, 1308,
	2820, 2033, 2775, 4404, 2162, 1339, 892, 2038, 2171, 2169,
	3012, 2040, 3833, 2835, 1340, 4477, 2043, 2343, 1698, 2789,
	2536, 2777, 2798, 2920, 2808, 2811, 2853, 4223, 2922, 2026,
	2865, 2126, 1037, 2159, 982, 3022, 3023, 2435, 983, 2859,
	1105, 1235, 2846, 2848, 2849, 2850, 3029, 3030, 3031, 3627,
	3042, 1339, 3043, 3831, 3344, 4668, 2778, 3028, 1039, 2858,
	1340, 2138, 2170, 3407, 1523, 2860, 2952, 1260, 3258, 3509,
	4418, 3016, 4532, 1549, 4533, 802, 2870, 2776, 3114, 2804,
	4046, 880, 3063, 2155, 2096, 3334, 1695, 2096, 3116, 2097,
	3039, 4563, 2097, 737, 1105, 2159, 1245, 3372, 2790, 2837,
	1105, 1105, 2997, 2098, 1038, 802, 1487, 3788, 2154, 3019,
	175, 2923, 3060, 2809, 3024, 2293, 3025, 3408, 810, 811,
	2102, 1935, 2163, 2987, 805, 4673, 2935, 2115, 4397, 2147,
	3399, 2948, 2945, 2946, 3017, 4027, 2144, 3066, 4618, 3068,
	4028, 2791, 2150, 1975, 1621, 3431, 3036, 2131, 1868, 2916,
	983, 3302, 2978, 3371, 805, 1699, 1105, 1105, 3406, 3046,
	3108, 3048, 1105, 3050, 2999, 2988, 2159, 4177, 2106, 2455,
	3930, 2113, 2114, 2135, 4641, 1105, 1105, 993, 4465, 2139,
	4112, 1105, 1105, 3059, 3400, 1341, 2986, 1105, 2118, 4193,
	771, 4030, 2099, 2104, 2967, 4515, 3038, 4506, 4075, 2536,
	2710, 2151, 2098, 2917, 1733, 2098, 2985, 4033, 3047, 706,
	3049, 1696, 3051, 3062, 1819, 2518, 3158, 4466, 3045, 2102,
	684, 3044, 2102, 2132, 2437, 3398, 2463, 2136, 984, 4674,
	2678, 1341, 1105, 1105, 1105, 3376, 3109, 4696, 1105, 773,
	1635, 1637, 2119, 769, 2915, 1700, 3074, 3069, 1105, 3085,
	3071, 900, 893, 894, 2691, 4343, 2290, 2284, 3345, 813,
	812, 4593, 3076, 4676, 3840, 1105, 3075, 1322, 2134, 3141,
	3774, 4594, 1045, 3838, 3642, 2100, 4683, 3080, 2381, 3095,
	4122, 1913, 1909, 2117, 3924, 3737, 3378, 1250, 3935, 3585,
	3077, 2099, 2104, 4425, 2099, 2104, 1653, 685, 4127, 3855,
	1744, 3136, 3137, 4176, 1233, 4562, 3140, 1743, 4335, 4629,
	1054, 4627, 4444, 4317, 3878, 3840, 3497, 4128, 3382, 814,
	815, 4336, 2106, 2211, 3838, 1906, 1248, 881, 882, 1916,
	1241, 675, 1743, 3931, 4029, 3132, 4617, 2166, 3979, 3681,
	984, 3107, 1046, 2384, 2676, 1738, 686, 2116, 687, 3377,
	3842, 4723, 2068, 1305, 4337, 1105, 1105, 1105, 1105, 4253,
	3293, 4326, 1914, 1913, 3696, 1105, 1105, 1105, 4701, 985,
	1105, 2065, 3380, 4036, 2100, 3121, 3122, 2100, 4384, 3731,
	1105, 1227, 1366, 2027, 3879, 3841, 1105, 4426, 1105, 3251,
	3252, 2164, 3818, 3760, 2137, 4113, 3351, 1227, 3498, 3489,
	3347, 3842, 2957, 2810, 3267, 2951, 3625, 2939, 2237, 2231,
	1742, 1916, 2225, 3381, 2217, 1366, 4339, 2094, 2197, 2838,
	2147, 2106, 986, 1517, 2106, 3147, 1911, 1227, 1978, 1978,
	1366, 2374, 2165, 3732, 3752, 1742, 3841, 1252, 3234, 4338,
	4178, 895, 896, 4482, 1914, 2793, 2352, 2063, 2145, 1981,
	3586, 3273, 746, 1366, 3253, 4447, 3286, 4340, 1743, 3733,
	2333, 3730, 2061, 3556, 2936, 1263, 3881, 4143, 1308, 1308,
	3298, 2092, 3549, 4295, 3338, 4293, 1744, 4234, 3363, 1036,
	3359, 985, 2275, 3358, 3100, 3078, 3709, 1912, 2064, 2142,
	3256, 1105, 1670, 3312, 3255, 3936, 2716, 2715, 2714, 3268,
	2101, 1744, 2713, 3263, 1572, 1105, 1570, 3846, 1558, 3261,
	2943, 4592, 2093, 898, 2105, 1308, 883, 884, 1915, 3282,
	1981, 2146, 1559, 1043, 4391, 3836, 4290, 4125, 3682, 4104,
	4242, 1819, 3767, 3287, 986, 2814, 3980, 3683, 1105, 3339,
	3340, 3539, 2235, 3229, 3230, 3231, 3463, 3432, 2105, 3266,
	3839, 3330, 3757, 3323, 1308, 3219, 3220, 3221, 3222, 3262,
	3361, 1742, 3279, 3365, 3271, 3336, 3291, 3245, 2375, 3551,
	3274, 3275, 1225, 3260, 4700, 3986, 1308, 1336, 1308, 3937,
	4638, 3270, 4427, 4422, 3550, 4485, 4160, 4221, 1225, 2669,
	3020, 2839, 2840, 2921, 2158, 1366, 2919, 2263, 1629, 2101,
	1915, 3839, 2101, 2158, 4492, 4392, 1308, 4229, 3362, 3348,
	1308, 3367, 4479, 3698, 3369, 3295, 3296, 3297, 1225, 3309,
	3310, 2543, 3311, 3277, 2672, 3278, 3393, 1717, 3421, 3753,
	3434, 4510, 3436, 1308, 4243, 3440, 1654, 4640, 1222, 3446,
	1308, 1719, 1308, 4582, 4411, 4199, 1366, 3978, 1716, 3320,
	3272, 3415, 4230, 796, 1222, 2337, 3324, 4159, 3734, 1714,
	3316, 3317, 3331, 1692, 1308, 2671, 1063, 1969, 3845, 1690,
	2670, 1664, 4486, 3547, 1662, 3226, 1308, 3397, 3227, 264,
	3601, 3395, 3337, 3562, 1222, 3561, 3411, 3294, 3269, 3472,
	1660, 3450, 4393, 1227, 1221, 1658, 3313, 3505, 1656, 1650,
	4341, 1223, 3429, 3409, 3303, 3189, 4342, 3346, 3119, 3481,
	1221, 1645, 3758, 3488, 3379, 1643, 1568, 1223, 1308, 1308,
	2940, 3389, 3482, 2873, 2828, 2742, 3402, 3012, 2324, 3458,
	2346, 3461, 3503, 3441, 3490, 1946, 3012, 3447, 745, 3405,
	1221, 1308, 1942, 1571, 1720, 1569, 3396, 1223, 1975, 3496,
	1607, 2753, 897, 1951, 3422, 3433, 3581, 2757, 3525, 3430,
	3580, 3403, 3514, 1738, 3417, 3404, 3453, 3057, 3410, 3056,
	3412, 2768, 3443, 3449, 3027, 3352, 3531, 3532, 2363, 1679,
	2299, 1366, 2216, 2196, 1366, 2009, 1852, 1618, 3557, 3552,
	3553, 3554, 3555, 1541, 2542, 3566, 4557, 1978, 3442, 4076,
	3809, 3808, 3448, 4077, 4062, 4478, 3499, 2836, 4141, 3465,
	4615, 3457, 3506, 994, 3622, 4082, 4020, 1105, 3877, 1975,
	3485, 802, 3484, 1105, 1105, 1718, 3486, 1105, 1105, 1105,
	3868, 1105, 1715, 3821, 3781, 2339, 3779, 3559, 3759, 2338,
	1105, 1981, 3492, 1713, 3487, 3537, 4136, 1691, 3477, 1105,
	3502, 175, 175, 1689, 1105, 1663, 2970, 1046, 1661, 3579,
	1366, 3558, 3541, 2962, 3523, 3524, 3511, 1067, 2955, 1105,
	805, 2947, 3504, 2933, 1659, 3520, 2918, 1366, 3535, 1657,
	3578, 2759, 1655, 1649, 1225, 2754, 2195, 1981, 1981, 1105,
	1105, 3560, 1105, 1105, 1105, 1644, 2193, 2175, 2160, 1642,
	1567, 3569, 2133, 3570, 2120, 3571, 2107, 2048, 2323, 2045,
	1105, 2042, 3587, 2039, 1105, 2034, 1981, 1981, 1105, 1105,
	1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105,
	1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 3513, 1105,
	3575, 3654, 2032, 3655, 2028, 3604, 2019, 1105, 1105, 1981,
	1222, 3556, 3584, 4606, 1105, 1202, 4127, 1954, 1747, 3444,
	3549, 3614, 3615, 3576, 2169, 1105, 4631, 3098, 999, 1001,
	1003, 2069, 3582, 3072, 3070, 4128, 1227, 1227, 4520, 4165,
	1105, 1203, 4158, 4157, 4089, 4012, 2349, 3013, 2088, 1522,
	2790, 4328, 2790, 2815, 4321, 3889, 2115, 2289, 3609, 3611,
	2234, 1711, 1712, 1284, 2319, 2788, 1221, 2812, 733, 1366,
	2318, 4519, 3621, 1223, 2296, 4054, 3727, 1283, 3628, 3630,
	3631, 4084, 3693, 1641, 3637, 3644, 4363, 2818, 3597, 3598,
	3987, 3965, 2347, 3714, 3374, 3632, 1754, 1755, 2819, 1754,
	1755, 2841, 775, 3652, 1751, 1317, 1251, 3653, 4634, 4625,
	3735, 3736, 689, 3657, 3659, 4587, 1105, 3551, 3651, 2819,
	2932, 3685, 3099, 2321, 3747, 3748, 3749, 786, 1748, 1757,
	3817, 3694, 3550, 3865, 2218, 1328, 1105, 3445, 2348, 2880,
	2878, 2887, 789, 2867, 2869, 1284, 3686, 2821, 3705, 3706,
	3700, 1204, 3816, 2823, 4670, 2926, 846, 2868, 2929, 175,
	2931, 1756, 1284, 255, 1756, 4472, 2822, 700, 4438, 1105,
	1105, 3702, 3703, 4432, 4390, 4312, 4288, 4222, 3661, 3662,
	3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672,
	3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680, 3875, 3684,
	1975, 3716, 2394, 3645, 2974, 3867, 3854, 2974, 3724, 1105,
	672, 3491, 2977, 2656, 2054, 1962, 3717, 4512, 4240, 3301,
	780, 4699, 4513, 4434, 3195, 3196, 787, 1225, 1225, 1754,
	1755, 2394, 3660, 1308, 1969, 1969, 1308, 3792, 4512, 1489,
	785, 4685, 4644, 4513, 2782, 2783, 1975, 1975, 1628, 3743,
	2780, 2781, 3957, 1981, 1627, 2538, 3739, 2782, 2780, 3796,
	3797, 3799, 2571, 1694, 3689, 3874, 1693, 4313, 4273, 4086,
	4081, 3763, 4080, 3811, 3953, 1975, 1975, 3813, 3738, 3633,
	1583, 3819, 3784, 3052, 1308, 3438, 3789, 3435, 784, 1846,
	1105, 3826, 1845, 1222, 1222, 4651, 4476, 4475, 1227, 1105,
	4474, 3891, 4378, 4291, 739, 4268, 4220, 4218, 1975, 1308,
	1308, 1308, 4216, 4115, 3898, 4101, 4052, 4008, 3913, 2685,
	3895, 3849, 2836, 3777, 3770, 3882, 1308, 3495, 2983, 782,
	3494, 3368, 3318, 3844, 3054, 3035, 3557, 3552, 3553, 3554,
	3555, 3034, 1308, 3861, 3033, 3032, 2961, 2934, 1366, 1221,
	1221, 3883, 3886, 2813, 2750, 3012, 1223, 1223, 3902, 3830,
	3862, 2745, 3834, 3828, 2735, 3843, 2734, 3899, 3900, 3901,
	3848, 2723, 1366, 2467, 2340, 1105, 1105, 3866, 2320, 1113,
	2317, 1105, 1105, 1981, 1302, 2316, 1105, 1105, 790, 1105,
	3914, 3885, 2315, 2314, 1105, 3871, 2313, 2232, 2206, 2202,
	2201, 2200, 3869, 2199, 2198, 1105, 2022, 2021, 2020, 2018,
	1953, 1710, 1709, 1651, 1536, 1535, 1534, 3893, 3892, 3887,
	3884, 1105, 1533, 1532, 1531, 262, 262, 262, 3829, 678,
	679, 3922, 694, 678, 694, 704, 3920, 3908, 744, 3903,
	3904, 3897, 762, 3938, 3912, 3905, 1530, 768, 1525, 3911,
	1521, 1519, 3909, 1518, 262, 1475, 1474, 3951, 1473, 1472,
	1357, 777, 1978, 1356, 3921, 1355, 1354, 1353, 1321, 1320,
	1270, 1269, 1268, 1267, 877, 1266, 1265, 3932, 1264, 3939,
	262, 1262, 1227, 1257, 1256, 1255, 1254, 3947, 3927, 1225,
	1227, 781, 1253, 1185, 1366, 2059, 1366, 1067, 870, 8,
	1005, 1067, 991, 1227, 4395, 4034, 2336, 1703, 3352, 92,
	1527, 832, 86, 2167, 1308, 1308, 3776, 1450, 3992, 961,
	4509, 1450, 1511, 1366, 4417, 738, 840, 4494, 3863, 3370,
	2890, 2298, 3286, 1978, 3319, 1652, 2300, 3321, 3322, 788,
	3281, 2698, 3325, 4464, 3326, 779, 3327, 1227, 3961, 1227,
	3157, 4370, 1975, 4192, 3977, 1222, 2541, 1850, 3238, 88,
	1089, 1135, 4111, 4110, 4021, 3762, 3002, 4013, 4014, 4108,
	4107, 1308, 4004, 4005, 1966, 1968, 4040, 1053, 4040, 1369,
	4044, 1366, 4531, 1308, 2070, 1095, 1308, 2086, 2079, 3984,
	4043, 4055, 776, 2736, 3988, 1366, 4057, 4058, 3991, 2615,
	3998, 3995, 3993, 1969, 678, 678, 3999, 3994, 3989, 3990,
	4017, 1221, 262, 1112, 1109, 1970, 1972, 175, 1223, 4002,
	783, 1111, 1110, 1971, 1869, 1108, 1308, 1308, 1965, 3873,
	2981, 4019, 3521, 4085, 740, 4087, 1577, 1575, 963, 2074,
	4056, 2461, 2525, 3146, 1843, 778, 1308, 1069, 1091, 2522,
	1246, 1080, 1068, 3264, 3243, 3508, 3723, 2373, 1366, 850,
	3192, 2528, 1237, 1308, 4105, 2016, 2639, 2631, 2627, 4102,
	3328, 4088, 2971, 1225, 1724, 4206, 1821, 2982, 1351, 1073,
	2459, 1225, 1975, 1834, 1302, 3124, 2383, 3515, 1227, 3284,
	4099, 2729, 4133, 4516, 1225, 3641, 4074, 4060, 1308, 1308,
	1308, 2210, 4079, 1201, 4144, 4093, 4071, 1200, 1244, 1199,
	4069, 1366, 4500, 4072, 4098, 4497, 4100, 4040, 2157, 3906,
	3470, 4164, 2062, 1105, 1105, 1105, 2774, 2471, 3478, 4161,
	4145, 2016, 1085, 4121, 258, 4106, 1468, 3249, 1225, 1222,
	1225, 1366, 2016, 3540, 1538, 767, 1105, 1222, 4247, 1105,
	1105, 1097, 4148, 4130, 1806, 2911, 4169, 2910, 4171, 1105,
	1222, 4387, 1981, 4061, 1337, 4139, 1335, 1105, 1105, 1334,
	1333, 4132, 4658, 4146, 4721, 4070, 3772, 4153, 4073, 3771,
	229, 3092, 1366, 1745, 1308, 1737, 3383, 3384, 4170, 3385,
	3386, 3387, 4184, 226, 4167, 1221, 228, 4168, 227, 4172,
	4116, 3728, 1223, 1221, 1222, 1366, 1222, 4179, 3290, 4585,
	1223, 3794, 3462, 1105, 23, 1832, 1221, 22, 21, 1837,
	112, 42, 1105, 1223, 20, 150, 4173, 128, 147, 146,
	1105, 120, 3423, 3424, 1981, 3425, 3426, 3427, 4129, 145,
	4189, 4195, 4217, 1105, 144, 143, 1105, 142, 149, 141,
	140, 135, 139, 138, 1978, 137, 136, 134, 1105, 132,
	1221, 133, 1221, 4212, 4213, 1366, 4201, 1223, 127, 1223,
	131, 130, 1308, 129, 4250, 126, 4215, 1308, 1308, 1225,
	125, 4225, 124, 123, 122, 121, 119, 118, 4226, 117,
	116, 115, 4224, 114, 113, 758, 755, 61, 60, 111,
	1978, 1978, 4233, 110, 19, 40, 4267, 14, 65, 66,
	18, 13, 35, 91, 102, 101, 36, 4303, 4278, 99,
	98, 4294, 1366, 34, 17, 1308, 16, 15, 96, 1978,
	1978, 95, 3472, 4265, 33, 4285, 4269, 31, 11, 9,
	37, 1930, 12, 1227, 1227, 1222, 5, 180, 4275, 179,
	182, 178, 181, 4311, 90, 177, 4284, 4283, 176, 4198,
	89, 4327, 1978, 1105, 1105, 4292, 4322, 4286, 29, 1450,
	10, 4287, 4040, 4040, 172, 4304, 3859, 81, 174, 173,
	1105, 1981, 171, 4331, 4346, 4347, 4302, 4307, 170, 169,
	82, 4325, 4323, 4350, 79, 4282, 168, 85, 167, 4280,
	1583, 1221, 1583, 80, 4324, 84, 83, 27, 1223, 6,
	64, 4330, 7, 4236, 4344, 4329, 1105, 4174, 3563, 1105,
	4148, 105, 106, 38, 77, 76, 1227, 75, 26, 4319,
	63, 4359, 4360, 25, 213, 212, 4358, 4270, 4383, 1227,
	211, 210, 209, 208, 207, 206, 201, 200, 205, 203,
	202, 204, 199, 216, 215, 4040, 221, 220, 219, 218,
	1239, 1975, 217, 214, 4281, 223, 198, 197, 4040, 196,
	194, 4382, 190, 4379, 189, 193, 195, 2105, 4362, 192,
	4406, 1105, 1105, 191, 188, 4368, 1067, 4405, 222, 4257,
	4421, 1105, 1450, 1259, 72, 4399, 1227, 1364, 165, 1227,
	4400, 1463, 3750, 1308, 166, 262, 3751, 262, 262, 71,
	1288, 262, 1298, 1308, 1308, 2378, 4413, 164, 163, 162,
	161, 160, 159, 1318, 158, 4040, 4415, 70, 4040, 24,
	1308, 2, 762, 1975, 1225, 1225, 1, 4441, 4455, 4428,
	4443, 4429, 4430, 0, 1105, 1105, 4435, 3780, 0, 3782,
	4440, 4436, 0, 0, 1105, 4433, 262, 0, 262, 262,
	1288, 4449, 262, 262, 0, 4460, 0, 4461, 1298, 4307,
	4448, 1302, 1302, 4452, 0, 0, 0, 4453, 4454, 262,
	4367, 1491, 0, 0, 0, 4459, 0, 4451, 1302, 4487,
	1105, 1105, 0, 1105, 4458, 0, 0, 4491, 0, 4469,
	1222, 1222, 1515, 0, 4473, 0, 1978, 0, 1969, 0,
	0, 0, 4468, 4499, 4502, 0, 4514, 1225, 3820, 0,
	0, 1540, 4511, 0, 1298, 0, 0, 0, 262, 262,
	1225, 1288, 1450, 4490, 4489, 4518, 4536, 0, 0, 0,
	0, 0, 0, 0, 0, 4508, 1105, 1105, 1105, 4540,
	0, 4504, 762, 4539, 262, 262, 1221, 1221, 4503, 4521,
	2633, 4507, 0, 1223, 1223, 0, 0, 0, 0, 0,
	4534, 4527, 0, 4535, 0, 0, 1105, 877, 0, 1969,
	1975, 0, 0, 1222, 4569, 0, 0, 1225, 4555, 4574,
	1225, 0, 4553, 4554, 0, 0, 1222, 4556, 0, 4570,
	0, 0, 0, 0, 0, 0, 4588, 0, 0, 0,
	0, 0, 0, 0, 4572, 0, 4595, 0, 0, 4597,
	0, 0, 0, 0, 4611, 0, 4599, 0, 0, 0,
	1105, 0, 0, 0, 4609, 0, 1978, 0, 4610, 1221,
	4596, 0, 0, 4616, 0, 0, 1223, 0, 0, 0,
	4604, 262, 1221, 1222, 4603, 4605, 1222, 0, 0, 1223,
	4632, 0, 0, 0, 4607, 4608, 4624, 0, 4628, 4636,
	4613, 262, 4622, 4623, 0, 4626, 0, 0, 0, 1227,
	0, 1227, 4499, 2105, 4639, 4502, 4635, 0, 4653, 4637,
	0, 4643, 0, 0, 4656, 4654, 4421, 4665, 4652, 4648,
	0, 0, 0, 4518, 0, 4664, 4663, 4660, 4040, 1221,
	4040, 0, 1221, 0, 4659, 0, 1223, 0, 4678, 1223,
	4655, 0, 4657, 0, 0, 0, 0, 0, 0, 0,
	0, 4677, 0, 0, 4680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4693, 0, 4686, 4687,
	4691, 1105, 1105, 4689, 0, 0, 3870, 0, 4684, 0,
	1105, 4694, 1105, 1105, 4697, 0, 1293, 0, 0, 0,
	4706, 4703, 4712, 0, 0, 0, 4715, 4717, 4709, 4716,
	4714, 4711, 0, 0, 4710, 0, 0, 0, 4713, 0,
	0, 4724, 0, 4725, 4720, 0, 1450, 0, 4727, 0,
	0, 4729, 0, 4730, 2983, 0, 4732, 0, 4728, 4726,
	0, 4735, 0, 0, 1458, 0, 0, 1469, 1293, 1105,
	4740, 4736, 4742, 0, 0, 4737, 4743, 3923, 4745, 4746,
	4704, 4705, 4732, 4739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2465, 0, 0, 1945,
	0, 0, 0, 0, 0, 3195, 3196, 0, 3213, 3214,
	3215, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	1225, 678, 1225, 0, 0, 0, 0, 3943, 0, 0,
	0, 0, 0, 1293, 1293, 0, 0, 4741, 0, 1450,
	0, 0, 262, 0, 262, 0, 0, 0, 262, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 1288, 262, 0, 262, 2638, 0, 0, 0,
	0, 262, 1491, 694, 0, 0, 0, 0, 262, 1491,
	3210, 0, 2016, 0, 0, 0, 1222, 865, 1222, 0,
	0, 0, 0, 2023, 0, 0, 1969, 1969, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 1450, 0,
	0, 0, 262, 1583, 73, 0, 868, 867, 0, 0,
	0, 0, 2090, 0, 0, 1969, 1969, 0, 0, 0,
	0, 74, 0, 0, 1450, 0, 0, 0, 0, 0,
	0, 0, 1221, 0, 1221, 0, 0, 78, 0, 1223,
	0, 1223, 762, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 3201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 3082, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 1978, 3217, 49,
	0, 107, 0, 0, 0, 0, 93, 104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2188, 0, 0, 0, 0, 0, 0, 4114,
	0, 0, 0, 87, 0, 2633, 2633, 0, 0, 1450,
	3211, 0, 4131, 0, 0, 73, 0, 4259, 4260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 94, 4152, 0, 0, 0, 0,
	0, 262, 0, 871, 262, 4274, 0, 4276, 78, 4277,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 93, 104, 0, 0, 0, 0, 1754, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1450, 1807, 0, 0, 0, 0, 0, 87, 0,
	0, 1785, 0, 0, 0, 0, 0, 262, 1757, 0,
	0, 262, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 262, 1978, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 1810, 0, 0, 0, 871, 262,
	0, 262, 1969, 1756, 0, 678, 0, 262, 0, 0,
	49, 0, 107, 1776, 0, 0, 0, 93, 104, 762,
	1469, 0, 1773, 877, 0, 3212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3195, 3196, 0, 3213,
	3214, 3215, 0, 0, 0, 0, 0, 0, 262, 97,
	1288, 262, 0, 0, 0, 2633, 2633, 2633, 2633, 0,
	0, 0, 0, 0, 0, 762, 0, 1469, 0, 0,
	0, 0, 262, 0, 0, 94, 3600, 0, 0, 2297,
	0, 0, 0, 0, 262, 262, 0, 262, 0, 262,
	0, 262, 0, 262, 0, 0, 0, 1779, 1780, 1781,
	1782, 183, 100, 0, 103, 0, 0, 1762, 0, 0,
	4414, 3210, 0, 0, 0, 2726, 2329, 0, 0, 2330,
	0, 2331, 0, 0, 0, 0, 2397, 0, 0, 230,
	0, 0, 1969, 262, 0, 97, 0, 872, 0, 0,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	2638, 0, 0, 0, 1784, 1786, 0, 0, 0, 744,
	3207, 3208, 3209, 762, 0, 0, 0, 3206, 3204, 3205,
	3197, 3198, 3199, 3200, 3202, 3203, 0, 232, 0, 0,
	1771, 1772, 0, 0, 0, 0, 0, 183, 100, 0,
	103, 0, 3195, 3196, 0, 3213, 3214, 3215, 0, 0,
	0, 0, 0, 151, 0, 3201, 0, 0, 0, 0,
	0, 2016, 2016, 1777, 3606, 230, 0, 0, 187, 2539,
	97, 0, 0, 872, 0, 0, 231, 0, 148, 0,
	0, 2638, 2638, 0, 0, 0, 0, 0, 0, 224,
	3195, 3196, 0, 3213, 3214, 3215, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 2473, 0, 2016, 0,
	0, 0, 3605, 232, 0, 0, 0, 3210, 0, 3217,
	866, 0, 183, 100, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 0, 0, 2016, 0, 0,
	230, 0, 0, 4419, 187, 0, 0, 0, 872, 0,
	0, 3211, 231, 148, 2708, 3210, 0, 0, 0, 2016,
	0, 2016, 0, 0, 0, 224, 678, 4439, 0, 0,
	0, 0, 2222, 0, 225, 0, 0, 1783, 0, 0,
	4584, 262, 0, 0, 0, 0, 0, 0, 232, 2016,
	678, 0, 0, 2016, 0, 0, 186, 262, 1778, 678,
	0, 3201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 262, 1298, 187,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3201,
	224, 2638, 2638, 2638, 2638, 0, 1809, 0, 0, 225,
	0, 0, 0, 0, 0, 3217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 1298, 0, 0, 694,
	0, 1588, 0, 0, 0, 0, 0, 4522, 0, 2749,
	0, 1450, 0, 4524, 0, 262, 3212, 0, 262, 2785,
	0, 0, 262, 0, 262, 0, 0, 3211, 0, 1288,
	0, 262, 262, 3217, 1298, 1298, 2765, 0, 0, 0,
	0, 262, 0, 0, 1450, 0, 0, 0, 0, 0,
	1754, 1755, 0, 0, 0, 0, 0, 1774, 1770, 1450,
	1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0,
	0, 1969, 0, 1785, 0, 3211, 0, 0, 0, 0,
	1757, 0, 1450, 0, 0, 0, 2802, 0, 2633, 2633,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 1807,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	262, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1067, 0, 0, 262, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 1807, 0, 0,
	262, 3207, 3208, 3209, 0, 0, 0, 0, 3206, 3204,
	3205, 3197, 3198, 3199, 3200, 3202, 3203, 0, 0, 0,
	0, 0, 3212, 0, 0, 0, 262, 2924, 2633, 2633,
	2633, 2633, 2633, 2633, 2633, 2633, 2633, 2633, 2633, 2633,
	2633, 2633, 2633, 2633, 2633, 2633, 2633, 2633, 0, 2633,
	0, 1491, 0, 0, 262, 0, 262, 0, 0, 1779,
	1780, 1781, 1782, 262, 0, 0, 0, 0, 0, 1762,
	3212, 0, 0, 2966, 1450, 0, 0, 0, 0, 0,
	0, 0, 0, 2802, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 2995, 877, 0, 2802, 2802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 1784, 1786, 0, 0,
	0, 0, 0, 0, 0, 1450, 0, 0, 0, 0,
	0, 0, 0, 262, 1288, 262, 0, 0, 0, 1491,
	1969, 1491, 1298, 262, 0, 0, 1288, 0, 1288, 0,
	1288, 1060, 1293, 0, 0, 0, 0, 3207, 3208, 3209,
	0, 0, 0, 0, 3206, 3204, 3205, 3197, 3198, 3199,
	3200, 3202, 3203, 0, 0, 1777, 0, 0, 0, 0,
	0, 262, 262, 262, 262, 1288, 0, 0, 1288, 0,
	262, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 0, 3207, 3208, 3209, 0, 0,
	0, 0, 3206, 3204, 3205, 3197, 3198, 3199, 3200, 3202,
	3203, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 1293, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1450, 0, 0, 1450, 0, 0, 3195, 3196, 0, 3213,
	3214, 3215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 1755, 2638, 2638, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	1778, 0, 1757, 0, 0, 0, 0, 0, 1458, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1450,
	0, 3210, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 1469, 1450, 1756, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 1809, 0,
	0, 0, 0, 0, 2638, 2638, 2638, 2638, 2638, 2638,
	2638, 2638, 2638, 2638, 2638, 2638, 2638, 2638, 2638, 2638,
	2638, 2638, 2638, 2638, 0, 2638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	1787, 1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0,
	3595, 0, 0, 0, 0, 3201, 0, 0, 0, 0,
	1785, 3250, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 1779, 1780, 1781, 1782, 0, 1804, 0, 0, 0,
	0, 1762, 1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763,
	1764, 0, 0, 1810, 3276, 3218, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 1450, 3289,
	1469, 0, 1776, 0, 0, 0, 0, 0, 1293, 3217,
	262, 1773, 0, 0, 0, 0, 0, 0, 1784, 1786,
	0, 0, 3307, 0, 0, 0, 262, 0, 0, 0,
	0, 678, 0, 0, 0, 0, 678, 0, 0, 678,
	0, 0, 678, 678, 1771, 1772, 0, 1469, 678, 1469,
	0, 3211, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 1780, 1781, 1782,
	0, 0, 1491, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 262, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 1805, 2802, 2802, 262,
	0, 3343, 0, 1784, 1786, 0, 0, 2802, 0, 1807,
	3354, 0, 0, 0, 0, 0, 0, 0, 2802, 3354,
	0, 2802, 3354, 0, 0, 3354, 0, 0, 0, 1771,
	1772, 0, 0, 0, 2016, 0, 0, 0, 0, 0,
	262, 262, 3343, 0, 262, 0, 2016, 1793, 0, 2016,
	0, 0, 0, 0, 0, 0, 3212, 0, 0, 0,
	0, 1783, 1777, 0, 3343, 0, 262, 0, 3414, 3414,
	0, 0, 1288, 0, 0, 3289, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 0, 0, 0, 2802, 0,
	2802, 0, 3439, 2802, 3343, 0, 0, 2802, 3343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 1807, 0, 0, 1450, 0, 0,
	1809, 0, 262, 3466, 0, 0, 3468, 2802, 0, 0,
	262, 0, 0, 0, 262, 0, 0, 1298, 0, 0,
	0, 1450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 2966, 0, 2633,
	1288, 0, 262, 0, 0, 2802, 1783, 678, 0, 0,
	0, 3207, 3208, 3209, 2802, 0, 0, 0, 3206, 3204,
	3205, 3197, 3198, 3199, 3200, 3202, 3203, 1778, 0, 0,
	1463, 0, 0, 1364, 0, 262, 2966, 0, 0, 2966,
	0, 1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760,
	1761, 1763, 1764, 2633, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 1755, 0, 0, 0, 0, 0,
	0, 3568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 1785, 0, 3574, 0,
	0, 1288, 262, 1757, 262, 0, 0, 0, 0, 0,
	1288, 0, 0, 1450, 0, 1450, 0, 0, 0, 3618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 3634, 0, 1756, 0,
	262, 0, 1450, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 1469, 1469, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 2016, 0, 1794, 0, 0,
	0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767,
	1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 3195,
	3196, 0, 3213, 3214, 3215, 0, 0, 0, 3639, 0,
	1450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3594, 0, 0, 1450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1469, 0, 0, 0,
	2633, 0, 1779, 1780, 1781, 1782, 73, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 2222, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3210, 0, 0, 0, 3726, 78,
	0, 0, 0, 0, 0, 0, 0, 1450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	1786, 0, 0, 0, 0, 262, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 1755, 0, 87,
	0, 0, 0, 1908, 0, 1771, 1772, 678, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	1450, 0, 0, 0, 0, 0, 1757, 0, 0, 1491,
	1491, 0, 0, 0, 0, 0, 0, 0, 1777, 871,
	0, 0, 0, 1491, 1491, 1491, 0, 1293, 3201, 0,
	1450, 49, 1810, 107, 0, 2638, 0, 0, 93, 104,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 1450, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 0, 2638,
	1807, 0, 0, 0, 1450, 0, 94, 0, 0, 0,
	762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 1469,
	0, 3414, 0, 0, 3211, 1067, 0, 0, 0, 0,
	0, 0, 1783, 0, 262, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 1450, 0, 0, 0, 0, 0,
	0, 0, 871, 1778, 3343, 0, 262, 0, 0, 0,
	0, 1052, 0, 0, 0, 0, 107, 262, 0, 0,
	0, 93, 104, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 1784, 1786, 0, 0, 0, 262, 0, 0,
	0, 0, 262, 0, 0, 0, 1807, 262, 0, 0,
	0, 1450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 2802, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 2995, 2995, 0, 94,
	0, 97, 877, 877, 2802, 0, 0, 0, 2966, 2966,
	0, 1777, 877, 2802, 0, 0, 2638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 3212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 100, 0, 103, 0, 0, 0,
	0, 0, 1774, 1770, 0, 1767, 1765, 1766, 1758, 1759,
	1760, 1761, 1763, 1764, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 1807, 0, 0, 0, 0, 0, 872,
	0, 0, 0, 0, 148, 1790, 0, 0, 0, 2906,
	0, 0, 0, 0, 0, 0, 0, 0, 3962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3997, 0, 0, 0, 232,
	1067, 1067, 2898, 2896, 0, 0, 0, 0, 0, 2900,
	2902, 2892, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 4010, 0, 0, 151, 1778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 262, 0, 0, 3207, 3208, 3209, 1491, 231, 262,
	0, 3206, 3204, 3205, 3197, 3198, 3199, 3200, 3202, 3203,
	0, 224, 262, 0, 0, 0, 183, 100, 0, 103,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 1586, 0, 230, 2802, 2802, 0, 3414, 2802,
	0, 0, 872, 0, 0, 0, 4042, 148, 4042, 1491,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 2802,
	0, 3354, 0, 0, 0, 1491, 1491, 262, 3343, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3343, 232, 262, 3343, 1790, 262, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 2802, 0, 2802, 262, 0, 0, 0, 151, 0,
	0, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0, 0,
	0, 0, 2222, 187, 0, 0, 0, 0, 0, 2894,
	0, 231, 2802, 0, 0, 0, 0, 4118, 0, 0,
	2908, 0, 0, 0, 224, 0, 0, 0, 262, 0,
	1364, 0, 0, 225, 0, 0, 0, 0, 262, 0,
	0, 2907, 2899, 2897, 2901, 2903, 2893, 2895, 2909, 0,
	0, 1754, 1755, 0, 0, 186, 2905, 1798, 1799, 1800,
	4190, 0, 0, 0, 0, 0, 1790, 4042, 0, 0,
	1491, 1790, 0, 0, 1785, 0, 0, 0, 0, 0,
	1790, 1757, 0, 0, 0, 1790, 0, 0, 0, 2912,
	1804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4190, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 2397, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1313, 0,
	0, 0, 0, 0, 1754, 1755, 0, 0, 0, 0,
	2802, 0, 3354, 0, 2397, 4228, 0, 0, 0, 0,
	0, 1052, 0, 262, 0, 1052, 0, 1785, 0, 0,
	4248, 0, 4248, 0, 1757, 0, 0, 0, 0, 0,
	1779, 1780, 1781, 1782, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 762, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 1288, 0, 0, 0, 1756,
	0, 0, 0, 0, 1493, 0, 1499, 0, 1505, 1776,
	3343, 0, 262, 0, 0, 0, 0, 1795, 1773, 0,
	1805, 0, 0, 0, 2913, 0, 0, 1784, 1786, 0,
	0, 0, 4228, 2904, 0, 0, 0, 0, 0, 0,
	2802, 0, 0, 1790, 1790, 1790, 1790, 1790, 1790, 1790,
	1790, 0, 0, 1771, 1772, 0, 0, 0, 4316, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	1491, 1793, 3110, 0, 0, 1594, 1790, 1599, 0, 0,
	0, 2222, 4042, 4042, 0, 0, 1777, 1608, 0, 1613,
	0, 0, 0, 1779, 1780, 1781, 1782, 0, 0, 1293,
	262, 262, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2637, 0, 0, 3639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	1790, 3414, 4381, 0, 0, 0, 0, 0, 0, 4228,
	1784, 1786, 0, 1675, 0, 0, 1681, 0, 1807, 0,
	0, 0, 0, 0, 0, 4042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 1772, 4042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 4118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 4042, 0, 262, 4042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3354, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 1755, 1491, 0, 1491, 0, 0, 0,
	0, 1807, 1831, 0, 0, 0, 0, 0, 1844, 1809,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 4483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4248, 0, 0, 262, 0, 0, 0, 1810, 0,
	0, 0, 0, 1783, 0, 0, 0, 1756, 0, 0,
	0, 0, 0, 2802, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 1778, 0, 1773, 0, 0, 0,
	0, 1794, 0, 0, 262, 0, 0, 0, 0, 1797,
	1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761,
	1763, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3639, 0, 1902, 1902, 1902, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	3103, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 1780, 1781, 1782, 262, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1469, 0, 1137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1786,
	0, 0, 0, 1774, 1770, 0, 1767, 1765, 1766, 1758,
	1759, 1760, 1761, 1763, 1764, 0, 0, 0, 0, 0,
	0, 2802, 0, 0, 1771, 1772, 0, 0, 4042, 0,
	4042, 0, 0, 1491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2995, 1790, 0, 0, 0, 1790, 0,
	0, 0, 2802, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 1790, 0, 0, 0, 0, 2995, 0, 0,
	0, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790,
	1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790,
	1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790,
	1790, 1790, 1790, 1790, 1790, 1790, 1790, 0, 0, 0,
	0, 1783, 1790, 0, 1790, 1790, 1790, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 2637, 2637, 0, 0,
	0, 1228, 1778, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 709,
	0, 0, 1790, 0, 0, 1790, 0, 0, 1790, 0,
	710, 1790, 0, 0, 0, 1790, 1790, 1790, 1790, 1790,
	1790, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1770, 730, 1767, 1765, 1766, 1758, 1759, 1760,
	1761, 1763, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 1755, 712, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 3216, 0, 2637, 2637, 2637, 2637,
	0, 0, 0, 1790, 1785, 1790, 713, 0, 0, 0,
	1790, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 714, 0,
	0, 715, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 2372, 0, 2376, 0,
	0, 0, 729, 0, 0, 2390, 0, 0, 0, 0,
	0, 0, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 0, 2440,
	0, 2442, 2443, 2444, 2445, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 1780, 1781, 1782, 0, 0, 0, 2469, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 2520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2550,
	2553, 2556, 2559, 0, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 0, 0, 0, 0, 0, 0, 1784, 1786, 736,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2629, 0, 2641, 2643, 2648, 0, 0, 0,
	0, 0, 0, 1771, 1772, 0, 0, 0, 0, 737,
	0, 718, 0, 0, 724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 1777, 0, 0, 708,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	734, 735, 732, 0, 0, 0, 0, 0, 727, 1790,
	1790, 720, 1790, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1228, 0, 0, 0, 0, 0, 1807, 0,
	711, 0, 0, 721, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 723, 0,
	0, 0, 0, 731, 0, 0, 1228, 0, 0, 0,
	1228, 0, 712, 0, 0, 0, 0, 740, 1228, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 0, 1790, 0, 714, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1228, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1228, 0, 0, 0, 1809,
	0, 729, 1228, 0, 0, 0, 1790, 1790, 0, 2637,
	2637, 0, 0, 1790, 0, 0, 1228, 0, 0, 0,
	0, 0, 0, 3216, 3216, 0, 0, 1790, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 2927, 2928, 0, 2930, 0,
	726, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	1228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761,
	1763, 1764, 0, 0, 0, 0, 0, 0, 0, 2637,
	2637, 2637, 2637, 2637, 2637, 2637, 2637, 2637, 2637, 2637,
	2637, 2637, 2637, 2637, 2637, 2637, 2637, 2637, 2637, 0,
	2637, 3216, 3216, 3216, 3216, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 737, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 0, 734,
	735, 732, 0, 0, 0, 0, 0, 727, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2608, 2609, 2610, 2611, 2604, 2605,
	2606, 2607, 721, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	0, 0, 731, 0, 0, 0, 0, 0, 0, 3104,
	3105, 0, 0, 0, 0, 3111, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 725, 0, 0,
	0, 0, 0, 0, 3125, 3126, 0, 0, 0, 0,
	2520, 0, 0, 0, 0, 0, 2584, 2585, 2586, 2587,
	0, 1228, 0, 1228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1228, 2596,
	2597, 2598, 2599, 2592, 2593, 2594, 2595, 2600, 2601, 2602,
	2603, 0, 0, 0, 0, 3135, 1982, 0, 0, 0,
	1228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2580, 2581, 2582, 2583, 2588, 2589, 2590,
	2591, 0, 0, 0, 0, 0, 1228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 1790, 0, 0, 1790, 3216,
	3216, 1790, 0, 0, 0, 1790, 0, 0, 2648, 2648,
	2648, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1902, 0, 1790, 0, 0, 0, 0,
	0, 3254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 1790,
	1790, 1790, 1790, 0, 0, 0, 0, 0, 1790, 0,
	1790, 0, 0, 3216, 3216, 3216, 3216, 3216, 3216, 3216,
	3216, 3216, 3216, 3216, 3216, 3216, 3216, 3216, 3216, 3216,
	3216, 3216, 3216, 0, 0, 0, 3216, 0, 0, 1790,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 1228, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1052, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1052, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1228, 0, 1228, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1228, 1228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1228, 0,
	1228, 1228, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 1790, 0, 0, 0, 1790, 1790, 0,
	0, 1790, 1790, 0, 0, 0, 1790, 0, 0, 0,
	1790, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2637, 0, 0, 1982, 1982, 1228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2390, 0, 0, 0, 0, 0, 3592, 3593, 0, 0,
	3596, 0, 0, 0, 3599, 0, 0, 0, 1228, 0,
	0, 0, 0, 3603, 0, 0, 0, 0, 0, 0,
	0, 0, 3610, 0, 0, 1754, 1755, 3254, 1787, 1788,
	1789, 1798, 1799, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 3623, 0, 0, 0, 0, 1791, 1785, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 3646, 3647, 1804, 3648, 3649, 3650, 0, 0,
	1228, 0, 0, 0, 0, 0, 0, 1228, 0, 0,
	0, 1810, 0, 3656, 0, 0, 1228, 3658, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 1228, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 1790, 1790, 1790,
	3687, 3688, 0, 0, 0, 0, 0, 0, 1790, 1790,
	3216, 2637, 0, 0, 0, 0, 0, 1790, 3699, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 1779, 1780, 1781, 1782, 1790, 0,
	821, 0, 0, 0, 1762, 1790, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 1228, 1228, 0, 0,
	823, 0, 0, 0, 0, 824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3754,
	0, 1795, 0, 0, 1805, 0, 0, 0, 0, 0,
	0, 1784, 1786, 0, 0, 0, 0, 0, 1228, 3765,
	0, 0, 0, 0, 825, 0, 842, 0, 1801, 0,
	1802, 0, 0, 0, 0, 0, 0, 1771, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 1982, 3793, 0, 1793, 827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3216,
	1777, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 828, 0, 0, 0, 1790, 0,
	1228, 1790, 0, 0, 0, 0, 0, 0, 849, 0,
	0, 0, 0, 0, 1228, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 1807, 829, 0, 0, 830, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 853, 0, 0,
	0, 0, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1902, 0, 0, 0, 0, 1228, 0,
	0, 0, 3894, 0, 0, 0, 0, 0, 0, 0,
	1228, 0, 1228, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1228, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 852, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 847, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 3940, 3941,
	0, 0, 0, 0, 3945, 3946, 0, 0, 0, 3949,
	3950, 0, 0, 1809, 0, 1790, 0, 3954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3963, 831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 834, 0, 0, 0,
	1768, 1769, 1775, 1797, 1774, 1770, 0, 1767, 1765, 1766,
	1758, 1759, 1760, 1761, 1763, 1764, 0, 0, 0, 0,
	3970, 0, 843, 0, 3969, 0, 0, 0, 0, 0,
	0, 0, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 820, 0, 844, 0, 0,
	1790, 0, 0, 0, 1790, 0, 835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 836, 0,
	0, 0, 837, 856, 0, 855, 0, 0, 0, 838,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 839, 0, 0, 0, 0, 848, 0,
	0, 0, 0, 0, 857, 0, 854, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 263, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	1787, 1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 1791,
	1785, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 1228,
	1228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 1228, 4185, 4186, 4187, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 1228, 0, 0, 0, 0, 0, 2390,
	0, 1773, 4196, 4197, 0, 1228, 0, 0, 1228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4205, 4208, 0, 0, 0, 0, 0, 1982, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1228, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4249, 1779, 1780, 1781, 1782,
	0, 0, 0, 4256, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 1228, 0, 0, 4263, 0, 1982, 1052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 1805, 0, 0, 0,
	0, 0, 1228, 1784, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 1802, 0, 1228, 0, 1228, 0, 0, 1771,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1228, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 0, 1228, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 0, 1228, 0,
	1228, 0, 0, 0, 1228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 4386,
	0, 1228, 4389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1228, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1052, 1052, 0, 1778, 0, 0,
	0, 0, 0, 0, 4437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 1228, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 2390, 0,
	0, 0, 0, 0, 0, 0, 0, 4208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1228, 0,
	0, 0, 0, 0, 1052, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1982, 1982, 1794, 0, 0,
	0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767,
	1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0,
	0, 0, 3170, 0, 1982, 1982, 3171, 0, 0, 4552,
	4552, 4552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1982, 0, 4573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 1228, 0, 0, 0, 0,
	263, 0, 263, 263, 0, 0, 263, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4552, 0, 0, 0, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 1311, 263, 263, 0, 1311, 263, 263, 0,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 263, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 4552, 4698, 0, 0, 1311, 263,
	263, 0, 0, 4702, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 1754, 1755, 0, 1787,
	1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1785,
	0, 1228, 0, 0, 1228, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 1982, 0, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 1228, 0, 0, 0, 263, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 1228, 0, 0, 0,
	0, 1217, 0, 0, 0, 0, 263, 1228, 1228, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1228, 0, 0, 0, 0, 0, 1228, 257, 257, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 1780, 1781, 1782, 0,
	1228, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 1982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 1784, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 1802, 0, 0, 0, 0, 0, 0, 1771, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1228, 1777, 0, 0, 0, 0, 0, 0, 1228, 0,
	0, 0, 1228, 0, 1228, 0, 0, 0, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1228, 1228, 0, 0, 0, 0, 0, 0,
	0, 1228, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 1311, 1228, 0, 1228, 263, 263,
	263, 0, 0, 1807, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 1311, 0, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 1228, 0, 0, 1228, 0, 0, 0, 0, 0,
	263, 0, 0, 1228, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 1228, 1778, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 1228, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 1228, 0, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 1228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1228, 1228, 1228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	1982, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767, 1765,
	1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0, 0,
	1228, 2516, 1228, 0, 0, 2517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 1311, 1311, 263,
	0, 0, 0, 1228, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 263, 1228, 0, 0, 0, 0, 263, 0,
	1228, 0, 0, 0, 0, 1228, 1228, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 263, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 1311, 0, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1228, 1311, 1311, 1228, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 263, 0, 0, 263, 0, 0, 0,
	0, 1228, 1228, 0, 1311, 0, 1311, 1311, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 1101, 0, 0, 0, 0, 0, 0, 0, 263,
	263, 0, 263, 0, 263, 0, 263, 0, 263, 1982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 261, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 1228, 0, 0, 1274, 0, 1274,
	1274, 0, 0, 0, 0, 0, 803, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 803, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 0, 0, 0, 1361, 0,
	0, 0, 0, 0, 1467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 1228, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 0, 0, 1754, 1755, 0,
	1787, 1788, 1789, 1798, 1799, 1800, 1592, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	1785, 0, 0, 0, 1224, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 263, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 1779, 1780, 1781, 1782,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	263, 0, 0, 263, 0, 0, 0, 263, 0, 263,
	0, 0, 0, 0, 0, 0, 263, 263, 0, 0,
	0, 0, 1311, 1311, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 1805, 1228, 0, 1228,
	0, 0, 0, 1784, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 1802, 0, 1311, 0, 0, 0, 0, 1771,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 1090, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 263, 0, 1311, 0, 1949, 0, 1467, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 1274, 1311, 0,
	0, 0, 0, 0, 1467, 0, 0, 1778, 0, 263,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	263, 0, 0, 0, 1796, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 263, 263, 263,
	0, 0, 0, 0, 0, 263, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1211, 261,
	261, 0, 0, 261, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767,
	1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 261, 0,
	261, 261, 0, 0, 261, 261, 3968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 261, 0, 2208,
	0, 0, 0, 2215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2240, 0, 2240, 0, 0, 0, 0, 0, 2247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2215, 0, 0, 2272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2292, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 2305, 0, 2307,
	0, 2309, 0, 2311, 0, 2312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2334, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 1311, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 263, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 263, 0, 1311, 263,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1311, 263, 1311, 0, 1924, 0, 1224, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 109, 0, 0, 0, 261, 1924, 261, 0, 0,
	1311, 0, 0, 803, 1311, 0, 0, 0, 0, 0,
	803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 263, 1311, 0, 1311, 261, 0, 0,
	1311, 0, 0, 2705, 261, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 1311, 263,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 109,
	1311, 109, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 1311, 0, 0, 0, 0, 0, 0,
	263, 0, 1047, 109, 109, 0, 0, 2751, 0, 0,
	1274, 0, 0, 0, 1274, 1311, 1274, 0, 109, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 109, 2228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1311, 0, 263, 1311, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 803, 0, 0, 0,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 1467, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 261, 0, 1027, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 261, 2215, 0, 0, 0,
	0, 0, 0, 0, 0, 2228, 1824, 0, 0, 0,
	0, 261, 0, 261, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 1830, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3026, 0, 0, 0,
	261, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3037, 0, 3040, 0, 0,
	0, 0, 0, 1311, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 261, 0, 261,
	0, 261, 0, 261, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3065, 1467, 3067, 1467, 0, 0, 0,
	0, 0, 3073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 1922, 0,
	1925, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 3101, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	1311, 263, 0, 0, 795, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	795, 0, 263, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 1311, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1224, 0, 0, 1311, 0, 0, 0,
	263, 0, 1311, 0, 0, 0, 0, 0, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	261, 0, 0, 0, 261, 0, 261, 0, 0, 0,
	0, 0, 0, 261, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 1311, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 1047, 0, 0, 0, 1311, 1311,
	0, 0, 0, 0, 0, 0, 1274, 1311, 0, 0,
	1467, 1467, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 3341, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1311, 0, 1311, 263, 0,
	1311, 263, 261, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 3392, 3394, 0, 0, 2228, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1311, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 803, 0,
	1311, 0, 0, 263, 0, 261, 0, 0, 0, 0,
	0, 0, 1311, 263, 0, 0, 0, 1311, 0, 0,
	0, 0, 1027, 0, 0, 1027, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 1311, 1311, 0, 261, 0, 0, 0,
	0, 0, 3479, 0, 0, 1311, 3483, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 261, 0, 0,
	0, 2458, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1311, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 261, 261, 261, 261, 3536, 0, 0,
	0, 0, 261, 0, 0, 261, 1311, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 261, 0, 263, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3577, 0, 1467, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 3590, 0, 0, 0, 1311, 263, 0, 0,
	0, 1311, 1311, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1367, 0, 0,
	0, 1367, 0, 0, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 263, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1309, 0, 0, 0,
	0, 0, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1309, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 1311, 1224, 0,
	0, 1309, 0, 0, 0, 0, 109, 1311, 1311, 109,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 109, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 263,
	261, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 1310, 2228, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2228,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 3858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 261, 2228, 0, 261, 0, 0, 3876,
	0, 1368, 0, 1924, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 1310, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 1755, 1310, 1787, 1788, 1789, 1798, 1799,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1785, 0, 3925, 0, 0,
	1310, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	261, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	1310, 0, 0, 0, 803, 2458, 0, 1310, 1810, 0,
	0, 0, 261, 0, 0, 0, 261, 1756, 0, 0,
	0, 1310, 0, 0, 0, 0, 1830, 1776, 0, 0,
	0, 0, 0, 0, 261, 0, 1773, 0, 0, 1367,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 0,
	0, 795, 0, 0, 0, 0, 0, 0, 795, 0,
	0, 1309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 1309, 0, 0,
	0, 0, 0, 0, 261, 0, 261, 0, 1309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 1805, 1367, 0, 0, 0, 0, 0, 1784, 1786,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 1802, 0, 0,
	0, 0, 0, 0, 1771, 1772, 0, 0, 0, 4059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 2228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1211, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	4140, 0, 1309, 1309, 0, 0, 0, 0, 0, 1807,
	0, 0, 1367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1224, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 109, 109, 0,
	109, 109, 109, 0, 0, 0, 1309, 0, 1309, 1796,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1309, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1309, 0, 0,
	1809, 0, 0, 109, 109, 0, 109, 109, 109, 1309,
	0, 1309, 1309, 1309, 0, 4237, 0, 0, 0, 0,
	0, 1310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 2228, 0, 261, 1768, 1769, 1775,
	1797, 1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760,
	1761, 1763, 1764, 0, 0, 0, 0, 0, 261, 0,
	0, 3608, 0, 0, 0, 0, 0, 0, 1211, 261,
	0, 1047, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 109, 109, 0, 0, 261,
	0, 0, 0, 0, 261, 0, 1367, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 1754, 1755, 0, 1787,
	1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0, 1224,
	0, 0, 4357, 1467, 0, 0, 0, 0, 1791, 1785,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 1310, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 261, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 1367,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1310, 0, 1310, 0, 1310, 0, 0, 0, 1367, 4442,
	0, 0, 0, 0, 0, 1779, 1780, 1781, 1782, 0,
	1310, 1310, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 1310, 0, 0, 1367, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 0, 1310, 1310, 1310, 0, 0,
	0, 0, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 1224, 1795, 0, 0, 1805, 0, 0, 0, 935,
	0, 982, 1784, 1786, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 1801,
	0, 1802, 0, 0, 0, 943, 4493, 0, 1771, 1772,
	0, 1211, 1211, 0, 0, 0, 0, 0, 0, 0,
	0, 957, 0, 941, 940, 0, 1793, 0, 1924, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 4529, 1309, 1309, 261,
	0, 942, 0, 0, 0, 0, 945, 0, 0, 0,
	0, 990, 0, 0, 0, 261, 0, 0, 261, 0,
	954, 955, 0, 0, 0, 0, 0, 0, 0, 971,
	1368, 0, 0, 0, 1803, 0, 261, 0, 0, 1367,
	0, 0, 0, 0, 0, 0, 0, 983, 947, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 4589, 0, 0,
	0, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	261, 0, 0, 0, 980, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1367, 0, 0, 981, 1783, 0, 0, 0, 1924,
	0, 0, 0, 1368, 0, 1309, 0, 0, 0, 950,
	0, 0, 0, 0, 0, 0, 1778, 939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 951, 952, 0, 0,
	0, 0, 0, 1796, 0, 0, 795, 0, 1309, 0,
	0, 0, 0, 0, 0, 959, 958, 0, 0, 0,
	0, 0, 0, 953, 0, 0, 0, 968, 0, 0,
	0, 0, 1368, 0, 1809, 0, 0, 109, 0, 1309,
	0, 0, 0, 0, 0, 987, 979, 0, 0, 0,
	0, 1309, 0, 1309, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 1211, 0, 0, 0, 0, 1309, 0,
	0, 0, 0, 0, 0, 0, 0, 984, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 109, 0,
	0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767, 1765,
	1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0, 946,
	0, 0, 989, 0, 0, 3173, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 0, 0, 975, 976,
	0, 1310, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 973, 0, 0, 0, 0, 0, 0,
	988, 969, 0, 1368, 962, 960, 0, 965, 0, 0,
	0, 0, 0, 966, 1924, 1924, 937, 0, 985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 261, 0, 0, 0, 0, 0, 0,
	938, 109, 0, 0, 0, 0, 0, 1211, 0, 0,
	0, 0, 977, 0, 967, 1211, 0, 0, 0, 0,
	964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 986, 0, 0, 0, 1368, 0, 0, 0, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 949, 1310,
	0, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 972, 0, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 1754, 1755,
	0, 1787, 1788, 1789, 1798, 1799, 1800, 974, 0, 0,
	0, 261, 1310, 0, 0, 0, 0, 0, 0, 0,
	1791, 1785, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	0, 0, 0, 1310, 0, 0, 0, 1924, 0, 261,
	1924, 0, 0, 0, 1810, 1310, 0, 1310, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 1776, 0, 0, 0, 0, 0, 0,
	109, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1367, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 1780, 1781,
	1782, 0, 0, 0, 1367, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 1367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 0, 1795, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 1784, 1786, 0, 1309, 1309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 1802, 0, 0, 0, 0, 0, 0,
	1771, 1772, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 1309, 0, 1309, 0, 0,
	1924, 0, 1924, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1367, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1309, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2458, 0, 1309, 0, 0, 0, 0, 0, 0, 1309,
	0, 1309, 0, 0, 0, 1367, 0, 1783, 0, 0,
	0, 0, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1309, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1309, 1309, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	1367, 0, 0, 1367, 0, 0, 0, 0, 109, 0,
	0, 1310, 1310, 0, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 0,
	1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 3172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 1754, 1755, 0, 1787, 1788, 1789, 1798, 1799, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1367,
	0, 0, 0, 1791, 1785, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 1367, 1310, 0, 0,
	1804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 1310,
	0, 1310, 0, 0, 0, 0, 1756, 0, 109, 0,
	0, 0, 0, 0, 109, 0, 1776, 0, 1368, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 1310,
	0, 0, 0, 1310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1310, 0, 0, 0,
	0, 0, 0, 1310, 0, 1310, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1310,
	1779, 1780, 1781, 1782, 0, 0, 0, 0, 1367, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 1310, 0, 0, 0, 0, 1795, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 1784, 1786, 0,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 1802, 0, 0, 0,
	0, 0, 0, 1771, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 1368, 0, 0, 1368, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1309, 0, 0, 1309, 0, 1792, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 1309, 1309,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1309, 0, 0, 0, 0, 0, 1367, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1367, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 1768, 1769, 1775, 1797,
	1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761,
	1763, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	3169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1367, 0, 1367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1309, 1309, 0, 0, 0, 0, 0,
	0, 0, 1367, 0, 0, 0, 0, 1754, 1755, 0,
	1787, 1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	1785, 0, 0, 0, 0, 0, 1310, 1757, 0, 1310,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 1309, 1810, 0, 1309, 0, 0, 0, 0,
	0, 0, 1756, 0, 1367, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 1310, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1309, 1309, 0, 0, 0,
	0, 0, 1310, 1310, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1309, 0, 0, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 1367, 0, 0,
	0, 0, 1309, 0, 0, 1310, 0, 0, 0, 0,
	0, 1368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 1780, 1781, 1782,
	0, 0, 0, 0, 0, 1368, 1762, 1309, 1309, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	1755, 0, 1787, 1788, 1789, 1798, 1799, 1800, 0, 0,
	0, 0, 0, 1795, 0, 0, 1805, 0, 0, 0,
	1367, 1791, 1785, 1784, 1786, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	1801, 0, 1802, 0, 0, 0, 0, 0, 0, 1771,
	1772, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 1367, 0, 1309, 1756, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 1777, 1773, 1367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1368, 0, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 1310, 0,
	0, 0, 0, 0, 0, 1803, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1367, 0, 0, 0, 0, 0,
	0, 1309, 0, 0, 1807, 0, 1309, 1309, 1779, 1780,
	1781, 1782, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1368, 0, 1310, 0, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 1367, 0, 0, 1309, 1795, 1783, 0, 1805, 0,
	0, 0, 0, 0, 0, 1784, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 1310,
	1310, 0, 1801, 0, 1802, 0, 0, 0, 0, 0,
	0, 1771, 1772, 0, 0, 0, 0, 0, 0, 1310,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 1793,
	0, 1368, 0, 0, 0, 0, 1310, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 1310, 1310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1368, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 1368, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767,
	1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0,
	0, 0, 1309, 0, 0, 1368, 3168, 1310, 0, 0,
	0, 0, 1309, 1309, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 0, 1310, 0, 1809, 0, 0,
	1310, 1310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 1310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 1768, 1769, 1775, 1797, 1774, 1770,
	0, 1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 3167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1365, 0, 0, 1310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1310, 1310, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 1370, 278, 279,
	1371, 1372, 1373, 1310, 1374, 620, 1375, 1376, 1377, 1378,
	280, 281, 1168, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1379, 625, 290, 291,
	292, 293, 294, 295, 1380, 1381, 0, 296, 626, 627,
	628, 1382, 297, 298, 629, 1383, 1312, 1384, 299, 300,
	301, 302, 303, 304, 305, 0, 1385, 307, 308, 309,
	306, 310, 1386, 311, 0, 312, 313, 314, 315, 316,
	317, 1387, 318, 319, 320, 1169, 321, 322, 323, 1388,
	1389, 1391, 1390, 1392, 1393, 1394, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1395, 333, 330, 331, 1396,
	334, 332, 335, 1397, 336, 337, 338, 1398, 1399, 339,
	340, 341, 1400, 342, 343, 1401, 344, 345, 346, 1402,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1403, 268, 1404, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1405, 365, 366, 1406, 1407, 1170, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1408, 378, 638, 1409, 639, 379, 1410, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1172, 385, 386, 1411,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1412, 1171, 395, 643, 644, 1413, 645,
	1414, 397, 398, 1173, 646, 1174, 399, 400, 401, 1175,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1415, 409, 411, 410, 1416, 412, 647, 1176, 413, 414,
	1177, 1417, 415, 0, 0, 0, 416, 417, 420, 1418,
	1419, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1178, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1179, 459, 449, 1420, 270, 1180, 460,
	461, 1421, 648, 462, 649, 464, 465, 1422, 0, 466,
	0, 1423, 1424, 468, 469, 470, 1425, 1426, 471, 472,
	650, 1181, 473, 1182, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1427, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1428, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1429, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1430,
	522, 523, 524, 1183, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1431, 546, 547, 545, 548, 549, 550,
	1432, 551, 552, 534, 535, 553, 554, 1184, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1433, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1434, 578, 579, 0, 575,
	566, 1435, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1436, 588, 661, 662, 663, 664, 1437, 597, 1438,
	589, 590, 591, 665, 592, 666, 1439, 593, 594, 595,
	596, 0, 598, 599, 1440, 1441, 600, 601, 602, 604,
	605, 603, 606, 1442, 607, 1443, 0, 608, 609, 610,
	667, 668, 669, 1444, 612, 611, 613, 670, 1445, 614,
	1446, 1447, 1448, 1449, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1365, 0, 0, 0, 0, 0,
	0, 0, 2683, 0, 0, 0, 0, 0, 0, 0,
	2684, 271, 273, 272, 274, 275, 276, 277, 1370, 278,
	279, 1371, 1372, 1373, 0, 1374, 620, 1375, 1376, 1377,
	1378, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 1379, 625, 290,
	291, 292, 293, 294, 295, 1380, 1381, 0, 296, 626,
	627, 628, 1382, 297, 298, 629, 1383, 1312, 1384, 299,
	300, 301, 302, 303, 304, 305, 0, 1385, 307, 308,
	309, 306, 310, 1386, 311, 0, 312, 313, 314, 315,
	316, 317, 1387, 318, 319, 320, 1169, 321, 322, 323,
	1388, 1389, 1391, 1390, 1392, 1393, 1394, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 1395, 333, 330, 331,
	1396, 334, 332, 335, 1397, 336, 337, 338, 1398, 1399,
	339, 340, 341, 1400, 342, 343, 1401, 344, 345, 346,
	1402, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 1403, 268, 1404,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 1405, 365, 366, 1406, 1407, 1170, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1408, 378, 638, 1409, 639, 379, 1410, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1172, 385, 386,
	1411, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1412, 1171, 395, 643, 644, 1413,
	645, 1414, 397, 398, 1173, 646, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1415, 409, 411, 410, 1416, 412, 647, 1176, 413,
	414, 1177, 1417, 415, 0, 0, 0, 416, 417, 420,
	1418, 1419, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1420, 270, 1180,
	460, 461, 1421, 648, 462, 649, 464, 465, 1422, 0,
	466, 0, 1423, 1424, 468, 469, 470, 1425, 1426, 471,
	472, 650, 1181, 473, 1182, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1427, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 1428, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 1429,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1430, 522, 523, 524, 1183, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1431, 546, 547, 545, 548, 549,
	550, 1432, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 1433,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 1434, 578, 579, 0,
	575, 566, 1435, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 1436, 588, 661, 662, 663, 664, 1437, 597,
	1438, 589, 590, 591, 665, 592, 666, 1439, 593, 594,
	595, 596, 0, 598, 599, 1440, 1441, 600, 601, 602,
	604, 605, 603, 606, 1442, 607, 1443, 0, 608, 609,
	610, 667, 668, 669, 1444, 612, 611, 613, 670, 1445,
	614, 1446, 1447, 1448, 1449, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1365, 0, 0, 0, 0, 3617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3619,
	271, 273, 272, 274, 275, 276, 277, 1370, 278, 279,
	1371, 1372, 1373, 0, 1374, 620, 1375, 1376, 1377, 1378,
	280, 281, 1168, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1379, 625, 290, 291,
	292, 293, 294, 295, 1380, 1381, 0, 296, 626, 627,
	628, 1382, 297, 298, 629, 1383, 1312, 1384, 299, 300,
	301, 302, 303, 304, 305, 0, 1385, 307, 308, 309,
	306, 310, 1386, 311, 0, 312, 313, 314, 315, 316,
	317, 1387, 318, 319, 320, 1169, 321, 322, 323, 1388,
	1389, 1391, 1390, 1392, 1393, 1394, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1395, 333, 330, 331, 1396,
	334, 332, 335, 1397, 336, 337, 338, 1398, 1399, 339,
	340, 341, 1400, 342, 343, 1401, 344, 345, 346, 1402,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1403, 268, 1404, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1405, 365, 366, 1406, 1407, 1170, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1408, 378, 638, 1409, 639, 379, 1410, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1172, 385, 386, 1411,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1412, 1171, 395, 643, 644, 1413, 645,
	1414, 397, 398, 1173, 646, 1174, 399, 400, 401, 1175,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1415, 409, 411, 410, 1416, 412, 647, 1176, 413, 414,
	1177, 1417, 415, 0, 0, 0, 416, 417, 420, 1418,
	1419, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1178, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1179, 459, 449, 1420, 270, 1180, 460,
	461, 1421, 648, 462, 649, 464, 465, 1422, 0, 466,
	0, 1423, 1424, 468, 469, 470, 1425, 1426, 471, 472,
	650, 1181, 473, 1182, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1427, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1428, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1429, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1430,
	522, 523, 524, 1183, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1431, 546, 547, 545, 548, 549, 550,
	1432, 551, 552, 534, 535, 553, 554, 1184, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1433, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1434, 578, 579, 0, 575,
	566, 1435, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1436, 588, 661, 662, 663, 664, 1437, 597, 1438,
	589, 590, 591, 665, 592, 666, 1439, 593, 594, 595,
	596, 0, 598, 599, 1440, 1441, 600, 601, 602, 604,
	605, 603, 606, 1442, 607, 1443, 0, 608, 609, 610,
	667, 668, 669, 1444, 612, 611, 613, 670, 1445, 614,
	1446, 1447, 1448, 1449, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 1365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3996, 271, 273, 272, 274, 275, 276, 277,
	1370, 278, 279, 1371, 1372, 1373, 0, 1374, 620, 1375,
	1376, 1377, 1378, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 1379,
	625, 290, 291, 292, 293, 294, 295, 1380, 1381, 0,
	296, 626, 627, 628, 1382, 297, 298, 629, 1383, 1312,
	1384, 299, 300, 301, 302, 303, 304, 305, 0, 1385,
	307, 308, 309, 306, 310, 1386, 311, 0, 312, 313,
	314, 315, 316, 317, 1387, 318, 319, 320, 1169, 321,
	322, 323, 1388, 1389, 1391, 1390, 1392, 1393, 1394, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 1395, 333,
	330, 331, 1396, 334, 332, 335, 1397, 336, 337, 338,
	1398, 1399, 339, 340, 341, 1400, 342, 343, 1401, 344,
	345, 346, 1402, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 1403,
	268, 1404, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 1405, 365, 366, 1406, 1407, 1170,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1408, 378, 638, 1409, 639, 379, 1410,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1172,
	385, 386, 1411, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1412, 1171, 395, 643,
	644, 1413, 645, 1414, 397, 398, 1173, 646, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1415, 409, 411, 410, 1416, 412, 647,
	1176, 413, 414, 1177, 1417, 415, 0, 0, 0, 416,
	417, 420, 1418, 1419, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1420,
	270, 1180, 460, 461, 1421, 648, 462, 649, 464, 465,
	1422, 0, 466, 0, 1423, 1424, 468, 469, 470, 1425,
	1426, 471, 472, 650, 1181, 473, 1182, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1427,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 1428, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 1429, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1430, 522, 523, 524, 1183, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1431, 546, 547, 545,
	548, 549, 550, 1432, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 1433, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 1434, 578,
	579, 0, 575, 566, 1435, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 1436, 588, 661, 662, 663, 664,
	1437, 597, 1438, 589, 590, 591, 665, 592, 666, 1439,
	593, 594, 595, 596, 0, 598, 599, 1440, 1441, 600,
	601, 602, 604, 605, 603, 606, 1442, 607, 1443, 0,
	608, 609, 610, 667, 668, 669, 1444, 612, 611, 613,
	670, 1445, 614, 1446, 1447, 1448, 1449, 615, 616, 671,
	617, 618, 619, 0, 1365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4191, 271, 273, 272, 274, 275, 276, 277, 1370, 278,
	279, 1371, 1372, 1373, 0, 1374, 620, 1375, 1376, 1377,
	1378, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 1379, 625, 290,
	291, 292, 293, 294, 295, 1380, 1381, 0, 296, 626,
	627, 628, 1382, 297, 298, 629, 1383, 1312, 1384, 299,
	300, 301, 302, 303, 304, 305, 0, 1385, 307, 308,
	309, 306, 310, 1386, 311, 0, 312, 313, 314, 315,
	316, 317, 1387, 318, 319, 320, 1169, 321, 322, 323,
	1388, 1389, 1391, 1390, 1392, 1393, 1394, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 1395, 333, 330, 331,
	1396, 334, 332, 335, 1397, 336, 337, 338, 1398, 1399,
	339, 340, 341, 1400, 342, 343, 1401, 344, 345, 346,
	1402, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 1403, 268, 1404,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 1405, 365, 366, 1406, 1407, 1170, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1408, 378, 638, 1409, 639, 379, 1410, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1172, 385, 386,
	1411, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1412, 1171, 395, 643, 644, 1413,
	645, 1414, 397, 398, 1173, 646, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1415, 409, 411, 410, 1416, 412, 647, 1176, 413,
	414, 1177, 1417, 415, 0, 0, 0, 416, 417, 420,
	1418, 1419, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1420, 270, 1180,
	460, 461, 1421, 648, 462, 649, 464, 465, 1422, 0,
	466, 0, 1423, 1424, 468, 469, 470, 1425, 1426, 471,
	472, 650, 1181, 473, 1182, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1427, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 1428, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 1429,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1430, 522, 523, 524, 1183, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1431, 546, 547, 545, 548, 549,
	550, 1432, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 1433,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 1434, 578, 579, 0,
	575, 566, 1435, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 1436, 588, 661, 662, 663, 664, 1437, 597,
	1438, 589, 590, 591, 665, 592, 666, 1439, 593, 594,
	595, 596, 0, 598, 599, 1440, 1441, 600, 601, 602,
	604, 605, 603, 606, 1442, 607, 1443, 0, 608, 609,
	610, 667, 668, 669, 1444, 612, 611, 613, 670, 1445,
	614, 1446, 1447, 1448, 1449, 615, 616, 671, 617, 618,
	619, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4068, 271,
	273, 272, 274, 275, 276, 277, 1370, 278, 279, 1371,
	1372, 1373, 0, 1374, 620, 1375, 1376, 1377, 1378, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 1379, 625, 290, 291, 292,
	293, 294, 295, 1380, 1381, 0, 296, 626, 627, 628,
	1382, 297, 298, 629, 1383, 1312, 1384, 299, 300, 301,
	302, 303, 304, 305, 0, 1385, 307, 308, 309, 306,
	310, 1386, 311, 0, 312, 313, 314, 315, 316, 317,
	1387, 318, 319, 320, 1169, 321, 322, 323, 1388, 1389,
	1391, 1390, 1392, 1393, 1394, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 1395, 333, 330, 331, 1396, 334,
	332, 335, 1397, 336, 337, 338, 1398, 1399, 339, 340,
	341, 1400, 342, 343, 1401, 344, 345, 346, 1402, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 1403, 268, 1404, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	1405, 365, 366, 1406, 1407, 1170, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1408,
	378, 638, 1409, 639, 379, 1410, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1172, 385, 386, 1411, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1412, 1171, 395, 643, 644, 1413, 645, 1414,
	397, 398, 1173, 646, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1415,
	409, 411, 410, 1416, 412, 647, 1176, 413, 414, 1177,
	1417, 415, 0, 0, 0, 416, 417, 420, 1418, 1419,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1420, 270, 1180, 460, 461,
	1421, 648, 462, 649, 464, 465, 1422, 0, 466, 0,
	1423, 1424, 468, 469, 470, 1425, 1426, 471, 472, 650,
	1181, 473, 1182, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1427, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 1428, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 1429, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1430, 522,
	523, 524, 1183, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1431, 546, 547, 545, 548, 549, 550, 1432,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 1433, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 1434, 578, 579, 0, 575, 566,
	1435, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	1436, 588, 661, 662, 663, 664, 1437, 597, 1438, 589,
	590, 591, 665, 592, 666, 1439, 593, 594, 595, 596,
	0, 598, 599, 1440, 1441, 600, 601, 602, 604, 605,
	603, 606, 1442, 607, 1443, 0, 608, 609, 610, 667,
	668, 669, 1444, 612, 611, 613, 670, 1445, 614, 1446,
	1447, 1448, 1449, 615, 616, 671, 617, 618, 619, 0,
	1365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3926, 271, 273, 272,
	274, 275, 276, 277, 1370, 278, 279, 1371, 1372, 1373,
	0, 1374, 620, 1375, 1376, 1377, 1378, 280, 281, 1168,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 1379, 625, 290, 291, 292, 293, 294,
	295, 1380, 1381, 0, 296, 626, 627, 628, 1382, 297,
	298, 629, 1383, 1312, 1384, 299, 300, 301, 302, 303,
	304, 305, 0, 1385, 307, 308, 309, 306, 310, 1386,
	311, 0, 312, 313, 314, 315, 316, 317, 1387, 318,
	319, 320, 1169, 321, 322, 323, 1388, 1389, 1391, 1390,
	1392, 1393, 1394, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 1395, 333, 330, 331, 1396, 334, 332, 335,
	1397, 336, 337, 338, 1398, 1399, 339, 340, 341, 1400,
	342, 343, 1401, 344, 345, 346, 1402, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 1403, 268, 1404, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 1405, 365,
	366, 1406, 1407, 1170, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1408, 378, 638,
	1409, 639, 379, 1410, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1172, 385, 386, 1411, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	1412, 1171, 395, 643, 644, 1413, 645, 1414, 397, 398,
	1173, 646, 1174, 399, 400, 401, 1175, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1415, 409, 411,
	410, 1416, 412, 647, 1176, 413, 414, 1177, 1417, 415,
	0, 0, 0, 416, 417, 420, 1418, 1419, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1178, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1179, 459, 449, 1420, 270, 1180, 460, 461, 1421, 648,
	462, 649, 464, 465, 1422, 0, 466, 0, 1423, 1424,
	468, 469, 470, 1425, 1426, 471, 472, 650, 1181, 473,
	1182, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 1427, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 1428,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 1429, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 1430, 522, 523, 524,
	1183, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	1431, 546, 547, 545, 548, 549, 550, 1432, 551, 552,
	534, 535, 553, 554, 1184, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 1433, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 1434, 578, 579, 0, 575, 566, 1435, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 1436, 588,
	661, 662, 663, 664, 1437, 597, 1438, 589, 590, 591,
	665, 592, 666, 1439, 593, 594, 595, 596, 0, 598,
	599, 1440, 1441, 600, 601, 602, 604, 605, 603, 606,
	1442, 607, 1443, 0, 608, 609, 610, 667, 668, 669,
	1444, 612, 611, 613, 670, 1445, 614, 1446, 1447, 1448,
	1449, 615, 616, 671, 617, 618, 619, 0, 1365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3635, 271, 273, 272, 274, 275,
	276, 277, 1370, 278, 279, 1371, 1372, 1373, 0, 1374,
	620, 1375, 1376, 1377, 1378, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 1379, 625, 290, 291, 292, 293, 294, 295, 1380,
	1381, 0, 296, 626, 627, 628, 1382, 297, 298, 629,
	1383, 1312, 1384, 299, 300, 301, 302, 303, 304, 305,
	0, 1385, 307, 308, 309, 306, 310, 1386, 311, 0,
	312, 313, 314, 315, 316, 317, 1387, 318, 319, 320,
	1169, 321, 322, 323, 1388, 1389, 1391, 1390, 1392, 1393,
	1394, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	1395, 333, 330, 331, 1396, 334, 332, 335, 1397, 336,
	337, 338, 1398, 1399, 339, 340, 341, 1400, 342, 343,
	1401, 344, 345, 346, 1402, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 1403, 268, 1404, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 1405, 365, 366, 1406,
	1407, 1170, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1408, 378, 638, 1409, 639,
	379, 1410, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1172, 385, 386, 1411, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 1412, 1171,
	395, 643, 644, 1413, 645, 1414, 397, 398, 1173, 646,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1415, 409, 411, 410, 1416,
	412, 647, 1176, 413, 414, 1177, 1417, 415, 0, 0,
	0, 416, 417, 420, 1418, 1419, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1420, 270, 1180, 460, 461, 1421, 648, 462, 649,
	464, 465, 1422, 0, 466, 0, 1423, 1424, 468, 469,
	470, 1425, 1426, 471, 472, 650, 1181, 473, 1182, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 1427, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 1428, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 1429, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 1430, 522, 523, 524, 1183, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 1431, 546,
	547, 545, 548, 549, 550, 1432, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 1433, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	1434, 578, 579, 0, 575, 566, 1435, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 1436, 588, 661, 662,
	663, 664, 1437, 597, 1438, 589, 590, 591, 665, 592,
	666, 1439, 593, 594, 595, 596, 0, 598, 599, 1440,
	1441, 600, 601, 602, 604, 605, 603, 606, 1442, 607,
	1443, 0, 608, 609, 610, 667, 668, 669, 1444, 612,
	611, 613, 670, 1445, 614, 1446, 1447, 1448, 1449, 615,
	616, 671, 617, 618, 619, 0, 1365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3464, 271, 273, 272, 274, 275, 276, 277,
	1370, 278, 279, 1371, 1372, 1373, 0, 1374, 620, 1375,
	1376, 1377, 1378, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 1379,
	625, 290, 291, 292, 293, 294, 295, 1380, 1381, 0,
	296, 626, 627, 628, 1382, 297, 298, 629, 1383, 1312,
	1384, 299, 300, 301, 302, 303, 304, 305, 0, 1385,
	307, 308, 309, 306, 310, 1386, 311, 0, 312, 313,
	314, 315, 316, 317, 1387, 318, 319, 320, 1169, 321,
	322, 323, 1388, 1389, 1391, 1390, 1392, 1393, 1394, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 1395, 333,
	330, 331, 1396, 334, 332, 335, 1397, 336, 337, 338,
	1398, 1399, 339, 340, 341, 1400, 342, 343, 1401, 344,
	345, 346, 1402, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 1403,
	268, 1404, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 1405, 365, 366, 1406, 1407, 1170,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1408, 378, 638, 1409, 639, 379, 1410,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1172,
	385, 386, 1411, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1412, 1171, 395, 643,
	644, 1413, 645, 1414, 397, 398, 1173, 646, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1415, 409, 411, 410, 1416, 412, 647,
	1176, 413, 414, 1177, 1417, 415, 0, 0, 0, 416,
	417, 420, 1418, 1419, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1420,
	270, 1180, 460, 461, 1421, 648, 462, 649, 464, 465,
	1422, 0, 466, 0, 1423, 1424, 468, 469, 470, 1425,
	1426, 471, 472, 650, 1181, 473, 1182, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1427,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 1428, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 1429, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1430, 522, 523, 524, 1183, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1431, 546, 547, 545,
	548, 549, 550, 1432, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 1433, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 1434, 578,
	579, 0, 575, 566, 1435, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 1436, 588, 661, 662, 663, 664,
	1437, 597, 1438, 589, 590, 591, 665, 592, 666, 1439,
	593, 594, 595, 596, 0, 598, 599, 1440, 1441, 600,
	601, 602, 604, 605, 603, 606, 1442, 607, 1443, 0,
	608, 609, 610, 667, 668, 669, 1444, 612, 611, 613,
	670, 1445, 614, 1446, 1447, 1448, 1449, 615, 616, 671,
	617, 618, 619, 0, 1365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2540, 271, 273, 272, 274, 275, 276, 277, 1370, 278,
	279, 1371, 1372, 1373, 0, 1374, 620, 1375, 1376, 1377,
	1378, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 1379, 625, 290,
	291, 292, 293, 294, 295, 1380, 1381, 0, 296, 626,
	627, 628, 1382, 297, 298, 629, 1383, 1312, 1384, 299,
	300, 301, 302, 303, 304, 305, 0, 1385, 307, 308,
	309, 306, 310, 1386, 311, 0, 312, 313, 314, 315,
	316, 317, 1387, 318, 319, 320, 1169, 321, 322, 323,
	1388, 1389, 1391, 1390, 1392, 1393, 1394, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 1395, 333, 330, 331,
	1396, 334, 332, 335, 1397, 336, 337, 338, 1398, 1399,
	339, 340, 341, 1400, 342, 343, 1401, 344, 345, 346,
	1402, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 1403, 268, 1404,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 1405, 365, 366, 1406, 1407, 1170, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1408, 378, 638, 1409, 639, 379, 1410, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1172, 385, 386,
	1411, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1412, 1171, 395, 643, 644, 1413,
	645, 1414, 397, 398, 1173, 646, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1415, 409, 411, 410, 1416, 412, 647, 1176, 413,
	414, 1177, 1417, 415, 0, 0, 0, 416, 417, 420,
	1418, 1419, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1420, 270, 1180,
	460, 461, 1421, 648, 462, 649, 464, 465, 1422, 0,
	466, 0, 1423, 1424, 468, 469, 470, 1425, 1426, 471,
	472, 650, 1181, 473, 1182, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1427, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 1428, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 1429,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1430, 522, 523, 524, 1183, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1431, 546, 547, 545, 548, 549,
	550, 1432, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 1433,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 1434, 578, 579, 0,
	575, 566, 1435, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 1436, 588, 661, 662, 663, 664, 1437, 597,
	1438, 589, 590, 591, 665, 592, 666, 1439, 593, 594,
	595, 596, 0, 598, 599, 1440, 1441, 600, 601, 602,
	604, 605, 603, 606, 1442, 607, 1443, 0, 608, 609,
	610, 667, 668, 669, 1444, 612, 611, 613, 670, 1445,
	614, 1446, 1447, 1448, 1449, 615, 616, 671, 617, 618,
	619, 1461, 0, 1365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2189, 0,
	271, 273, 272, 274, 275, 276, 277, 1370, 278, 279,
	1371, 1372, 1373, 0, 1374, 620, 1375, 1376, 1377, 1378,
	280, 281, 1168, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1379, 625, 290, 291,
	292, 293, 294, 295, 1380, 1381, 0, 296, 626, 627,
	628, 1382, 297, 298, 629, 1383, 1312, 1384, 299, 300,
	301, 302, 303, 304, 305, 0, 1385, 307, 308, 309,
	306, 310, 1386, 311, 0, 312, 313, 314, 315, 316,
	317, 1387, 318, 319, 320, 1169, 321, 322, 323, 1388,
	1389, 1391, 1390, 1392, 1393, 1394, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1395, 333, 330, 331, 1396,
	334, 332, 335, 1397, 336, 337, 338, 1398, 1399, 339,
	340, 341, 1400, 342, 343, 1401, 344, 345, 346, 1402,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1403, 268, 1404, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1405, 365, 366, 1406, 1407, 1170, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1408, 378, 638, 1409, 639, 379, 1410, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1172, 385, 386, 1411,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1412, 1171, 395, 643, 644, 1413, 645,
	1414, 397, 398, 1173, 646, 1174, 399, 400, 401, 1175,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1415, 409, 411, 410, 1416, 412, 647, 1176, 413, 414,
	1177, 1417, 415, 0, 0, 0, 416, 417, 420, 1418,
	1419, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1178, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1179, 459, 449, 1420, 270, 1180, 460,
	461, 1421, 648, 462, 649, 464, 465, 1422, 0, 466,
	0, 1423, 1424, 468, 469, 470, 1425, 1426, 471, 472,
	650, 1181, 473, 1182, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1427, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1428, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1429, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1430,
	522, 523, 524, 1183, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1431, 546, 547, 545, 548, 549, 550,
	1432, 551, 552, 534, 535, 553, 554, 1184, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1433, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1434, 578, 579, 0, 575,
	566, 1435, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1436, 588, 661, 662, 663, 664, 1437, 597, 1438,
	589, 590, 591, 665, 592, 666, 1439, 593, 594, 595,
	596, 0, 598, 599, 1440, 1441, 600, 601, 602, 604,
	605, 603, 606, 1442, 607, 1443, 0, 608, 609, 610,
	667, 668, 669, 1444, 612, 611, 613, 670, 1445, 614,
	1446, 1447, 1448, 1449, 615, 616, 671, 617, 618, 619,
	1362, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1370, 278, 279, 1371,
	1372, 1373, 0, 1374, 620, 1375, 1376, 1377, 1378, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 1379, 625, 290, 291, 292,
	293, 294, 295, 1380, 1381, 0, 296, 626, 627, 628,
	1382, 297, 298, 629, 1383, 1312, 1384, 299, 300, 301,
	302, 303, 304, 305, 0, 1385, 307, 308, 309, 306,
	310, 1386, 311, 0, 312, 313, 314, 315, 316, 317,
	1387, 318, 319, 320, 1169, 321, 322, 323, 1388, 1389,
	1391, 1390, 1392, 1393, 1394, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 1395, 333, 330, 331, 1396, 334,
	332, 335, 1397, 336, 337, 338, 1398, 1399, 339, 340,
	341, 1400, 342, 343, 1401, 344, 345, 346, 1402, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 1403, 268, 1404, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	1405, 365, 366, 1406, 1407, 1170, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1408,
	378, 638, 1409, 639, 379, 1410, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1172, 385, 386, 1411, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1412, 1171, 395, 643, 644, 1413, 645, 1414,
	397, 398, 1173, 646, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1415,
	409, 411, 410, 1416, 412, 647, 1176, 413, 414, 1177,
	1417, 415, 0, 0, 0, 416, 417, 420, 1418, 1419,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1420, 270, 1180, 460, 461,
	1421, 648, 462, 649, 464, 465, 1422, 0, 466, 0,
	1423, 1424, 468, 469, 470, 1425, 1426, 471, 472, 650,
	1181, 473, 1182, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1427, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 1428, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 1429, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1430, 522,
	523, 524, 1183, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1431, 546, 547, 545, 548, 549, 550, 1432,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 1433, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 1434, 578, 579, 0, 575, 566,
	1435, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	1436, 588, 661, 662, 663, 664, 1437, 597, 1438, 589,
	590, 591, 665, 592, 666, 1439, 593, 594, 595, 596,
	0, 598, 599, 1440, 1441, 600, 601, 602, 604, 605,
	603, 606, 1442, 607, 1443, 0, 608, 609, 610, 667,
	668, 669, 1444, 612, 611, 613, 670, 1445, 614, 1446,
	1447, 1448, 1449, 615, 616, 671, 617, 618, 619, 1365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 1370, 278, 279, 1371, 1372, 1373, 0,
	1374, 620, 1375, 1376, 1377, 1378, 280, 281, 1168, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 1379, 625, 290, 291, 292, 293, 294, 295,
	1380, 1381, 0, 296, 626, 627, 628, 1382, 297, 298,
	629, 1383, 1312, 1384, 299, 300, 301, 302, 303, 304,
	305, 0, 1385, 307, 308, 309, 306, 310, 1386, 311,
	0, 312, 313, 314, 315, 316, 317, 1387, 318, 319,
	320, 1169, 321, 322, 323, 1388, 1389, 1391, 1390, 1392,
	1393, 1394, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 1395, 333, 330, 331, 1396, 334, 332, 335, 1397,
	336, 337, 338, 1398, 1399, 339, 340, 341, 1400, 342,
	343, 1401, 344, 345, 346, 1402, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 1403, 268, 1404, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 1405, 365, 366,
	1406, 1407, 1170, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1408, 378, 638, 1409,
	639, 379, 1410, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1172, 385, 386, 1411, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1412,
	1171, 395, 643, 644, 1413, 645, 1414, 397, 398, 1173,
	646, 1174, 399, 400, 401, 1175, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1415, 409, 411, 410,
	1416, 412, 647, 1176, 413, 414, 1177, 1417, 415, 0,
	0, 0, 416, 417, 420, 1418, 1419, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1178, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1179,
	459, 449, 1420, 270, 1180, 460, 461, 1421, 648, 462,
	649, 464, 465, 1422, 0, 466, 0, 1423, 1424, 468,
	469, 470, 1425, 1426, 471, 472, 650, 1181, 473, 1182,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1427, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 1428, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 1429, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1430, 522, 523, 524, 1183,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1431,
	546, 547, 545, 548, 549, 550, 1432, 551, 552, 534,
	535, 553, 554, 1184, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 1433, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 1434, 578, 579, 0, 575, 566, 1435, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 1436, 588, 661,
	662, 663, 664, 1437, 597, 1438, 589, 590, 591, 665,
	592, 666, 1439, 593, 594, 595, 596, 0, 598, 599,
	1440, 1441, 600, 601, 602, 604, 605, 603, 606, 1442,
	607, 1443, 0, 608, 609, 610, 667, 668, 669, 1444,
	612, 611, 613, 670, 1445, 614, 1446, 1447, 1448, 1449,
	615, 616, 671, 617, 618, 619, 2515, 0, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 2512, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 2513, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 2511, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 2514, 0, 0, 0, 0, 0, 0, 1088,
	2510, 0, 1048, 1086, 1104, 1076, 1077, 1078, 1074, 1075,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1128, 1092, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 1141, 0, 288, 1148, 289, 1147, 0, 1158, 290,
	291, 292, 293, 294, 295, 1094, 1127, 1059, 296, 1188,
	1189, 628, 0, 297, 298, 1134, 0, 1115, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 323,
	1118, 1116, 1117, 1124, 1120, 1119, 1123, 324, 325, 326,
	327, 328, 1151, 329, 1145, 1144, 1064, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1136, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1070, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1159, 1160, 360, 1083, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1143, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	1156, 1157, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1166, 0, 1093, 379, 0, 380, 381,
	382, 383, 384, 1129, 1130, 1133, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1171, 395, 1138, 1139, 0,
	1099, 0, 397, 398, 1173, 1131, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1167, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	1122, 1121, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1061, 270, 1180,
	460, 461, 1084, 1132, 462, 1146, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 1161, 474, 475, 1071, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1162, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1142, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 1072,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 230, 546, 547, 545, 548, 549,
	550, 1125, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 1140, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1187, 569,
	570, 571, 572, 1163, 576, 577, 0, 578, 579, 1058,
	575, 566, 232, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1152, 1153, 1154, 1155, 0, 597,
	0, 589, 590, 591, 1164, 592, 1165, 1082, 593, 594,
	595, 596, 0, 598, 599, 0, 1065, 600, 601, 602,
	604, 605, 603, 606, 1126, 607, 0, 0, 608, 609,
	610, 1584, 1149, 1186, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 224, 615, 616, 671, 617, 618,
	619, 1062, 0, 225, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 1055, 1056, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 1835, 1833, 0, 0, 1086,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 230, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 232, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 1584, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 224, 615,
	616, 671, 617, 618, 619, 1062, 0, 225, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 1835,
	3123, 0, 0, 1086, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 230, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	232, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 1584,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 224, 615, 616, 671, 617, 618, 619, 1062,
	0, 225, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 1104, 1076, 1077, 1078,
	1074, 1075, 1087, 1835, 1833, 0, 0, 1086, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1128, 1092,
	0, 0, 0, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 1141, 0, 288, 1148, 289, 1147, 2644,
	1158, 290, 291, 292, 293, 294, 295, 1094, 1127, 1059,
	296, 1188, 1189, 628, 0, 297, 298, 1134, 0, 1115,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1169, 321,
	322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123, 324,
	325, 326, 327, 328, 1151, 329, 1145, 1144, 1064, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1136, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1070, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1159, 1160, 360, 1083,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1143,
	0, 0, 0, 364, 0, 365, 366, 0, 2649, 1170,
	367, 368, 1156, 1157, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1166, 0, 1093, 379, 0,
	380, 381, 382, 383, 384, 1129, 1130, 1133, 463, 1172,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1171, 395, 1138,
	1139, 0, 1099, 0, 397, 398, 1173, 1131, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 2645, 412, 1167,
	1176, 413, 414, 1177, 0, 415, 0, 0, 0, 416,
	417, 420, 1122, 1121, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1061,
	270, 1180, 460, 461, 1084, 1132, 462, 1146, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1181, 473, 1182, 1161, 474, 475,
	1071, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1162, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1142, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1183, 525, 526, 527,
	528, 1072, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1125, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 1140, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1187, 569, 570, 571, 572, 1163, 576, 577, 0, 578,
	579, 1058, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1152, 1153, 1154, 1155,
	0, 597, 2646, 589, 590, 591, 1164, 592, 1165, 1082,
	593, 594, 595, 596, 0, 598, 599, 0, 1065, 600,
	601, 602, 604, 605, 603, 606, 1126, 607, 0, 0,
	608, 609, 610, 667, 1149, 1186, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1062, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 1055, 1056,
	0, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	2560, 1086, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 0, 0, 0, 0,
	0, 0, 0, 1088, 2558, 0, 2557, 1086, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 0, 0, 0, 0, 0, 0, 0, 1088,
	2555, 0, 2554, 1086, 1104, 1076, 1077, 1078, 1074, 1075,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1128, 1092, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 1141, 0, 288, 1148, 289, 1147, 0, 1158, 290,
	291, 292, 293, 294, 295, 1094, 1127, 1059, 296, 1188,
	1189, 628, 0, 297, 298, 1134, 0, 1115, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 323,
	1118, 1116, 1117, 1124, 1120, 1119, 1123, 324, 325, 326,
	327, 328, 1151, 329, 1145, 1144, 1064, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1136, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1070, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1159, 1160, 360, 1083, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1143, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	1156, 1157, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1166, 0, 1093, 379, 0, 380, 381,
	382, 383, 384, 1129, 1130, 1133, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1171, 395, 1138, 1139, 0,
	1099, 0, 397, 398, 1173, 1131, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1167, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	1122, 1121, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1061, 270, 1180,
	460, 461, 1084, 1132, 462, 1146, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 1161, 474, 475, 1071, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1162, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1142, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 1072,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1125, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 1140, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1187, 569,
	570, 571, 572, 1163, 576, 577, 0, 578, 579, 1058,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1152, 1153, 1154, 1155, 0, 597,
	0, 589, 590, 591, 1164, 592, 1165, 1082, 593, 594,
	595, 596, 0, 598, 599, 0, 1065, 600, 601, 602,
	604, 605, 603, 606, 1126, 607, 0, 0, 608, 609,
	610, 667, 1149, 1186, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1062, 0, 0, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 1055, 1056, 0, 0,
	0, 0, 0, 0, 0, 1088, 2552, 0, 2551, 1086,
	1104, 1076, 1077, 1078, 1074, 1075, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1128, 1092, 0, 0, 0, 280, 281, 1168,
	282, 283, 284, 285, 286, 287, 621, 1141, 0, 288,
	1148, 289, 1147, 0, 1158, 290, 291, 292, 293, 294,
	295, 1094, 1127, 1059, 296, 1188, 1189, 628, 0, 297,
	298, 1134, 0, 1115, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1169, 321, 322, 323, 1118, 1116, 1117, 1124,
	1120, 1119, 1123, 324, 325, 326, 327, 328, 1151, 329,
	1145, 1144, 1064, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1136, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1070,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1159, 1160, 360, 1083, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1143, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1170, 367, 368, 1156, 1157, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1166,
	0, 1093, 379, 0, 380, 381, 382, 383, 384, 1129,
	1130, 1133, 463, 1172, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1171, 395, 1138, 1139, 0, 1099, 0, 397, 398,
	1173, 1131, 1174, 399, 400, 401, 1175, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1167, 1176, 413, 414, 1177, 0, 415,
	0, 0, 0, 416, 417, 420, 1122, 1121, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1178, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1179, 459, 449, 1061, 270, 1180, 460, 461, 1084, 1132,
	462, 1146, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1181, 473,
	1182, 1161, 474, 475, 1071, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1162, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1142, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1183, 525, 526, 527, 528, 1072, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1125, 551, 552,
	534, 535, 553, 554, 1184, 555, 556, 557, 558, 559,
	560, 561, 1140, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1187, 569, 570, 571, 572, 1163,
	576, 577, 0, 578, 579, 1058, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1152, 1153, 1154, 1155, 0, 597, 0, 589, 590, 591,
	1164, 592, 1165, 1082, 593, 594, 595, 596, 0, 598,
	599, 0, 1065, 600, 601, 602, 604, 605, 603, 606,
	1126, 607, 0, 0, 608, 609, 610, 667, 1149, 1186,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1062, 0, 0,
	0, 0, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 0, 1055, 1056, 0, 0, 0, 0, 0, 0,
	0, 1088, 2549, 0, 1677, 1086, 1104, 1076, 1077, 1078,
	1074, 1075, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1128, 1092,
	0, 0, 0, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 1141, 0, 288, 1148, 289, 1147, 0,
	1158, 290, 291, 292, 293, 294, 295, 1094, 1127, 1059,
	296, 1188, 1189, 628, 0, 297, 298, 1134, 0, 1115,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1169, 321,
	322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123, 324,
	325, 326, 327, 328, 1151, 329, 1145, 1144, 1064, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1136, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1070, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1159, 1160, 360, 1083,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1143,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1170,
	367, 368, 1156, 1157, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1166, 0, 1093, 379, 0,
	380, 381, 382, 383, 384, 1129, 1130, 1133, 463, 1172,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1171, 395, 1138,
	1139, 0, 1099, 0, 397, 398, 1173, 1131, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1167,
	1176, 413, 414, 1177, 0, 415, 0, 0, 0, 416,
	417, 420, 1122, 1121, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1061,
	270, 1180, 460, 461, 1084, 1132, 462, 1146, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1181, 473, 1182, 1161, 474, 475,
	1071, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1162, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1142, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1183, 525, 526, 527,
	528, 1072, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1125, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 1140, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1187, 569, 570, 571, 572, 1163, 576, 577, 0, 578,
	579, 1058, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1152, 1153, 1154, 1155,
	0, 597, 0, 589, 590, 591, 1164, 592, 1165, 1082,
	593, 594, 595, 596, 0, 598, 599, 0, 1065, 600,
	601, 602, 604, 605, 603, 606, 1126, 607, 0, 0,
	608, 609, 610, 667, 1149, 1186, 0, 612, 611, 613,
	670, 0, 614, 1676, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1062, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 1055, 1056,
	0, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	1051, 1086, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	1066, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 1104, 1076, 1077, 1078,
	1074, 1075, 1087, 1088, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1128, 1092,
	0, 0, 0, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 1141, 0, 288, 1148, 289, 1147, 0,
	1158, 290, 291, 292, 293, 294, 295, 1094, 1127, 1059,
	296, 1188, 1189, 628, 0, 297, 298, 1134, 0, 1115,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 4505, 317, 0, 318, 319, 320, 1169, 321,
	322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123, 324,
	325, 326, 327, 328, 1151, 329, 1145, 1144, 1064, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1136, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1070, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1159, 1160, 360, 1083,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1143,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1170,
	367, 368, 1156, 1157, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1166, 0, 1093, 379, 0,
	380, 381, 382, 383, 384, 1129, 1130, 1133, 463, 1172,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1171, 395, 1138,
	1139, 0, 1099, 0, 397, 398, 1173, 1131, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1167,
	1176, 413, 414, 1177, 0, 415, 0, 0, 0, 416,
	417, 420, 1122, 1121, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1061,
	270, 1180, 460, 461, 1084, 1132, 462, 1146, 464, 465,
	0, 0, 466, 0, 1066, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1181, 473, 1182, 1161, 474, 475,
	1071, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1162, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1142, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1183, 525, 526, 527,
	528, 1072, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1125, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 1140, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1187, 569, 570, 571, 572, 1163, 576, 577, 0, 578,
	579, 1058, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1152, 1153, 1154, 1155,
	0, 597, 0, 589, 590, 591, 1164, 592, 1165, 1082,
	593, 594, 595, 596, 0, 598, 599, 0, 1065, 600,
	601, 602, 604, 605, 603, 606, 1126, 607, 0, 0,
	608, 609, 610, 667, 1149, 1186, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1062, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 1055, 1056,
	1104, 1076, 1077, 1078, 1074, 1075, 1087, 1088, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1128, 1092, 0, 0, 0, 280, 281, 1168,
	282, 283, 284, 285, 286, 287, 621, 1141, 0, 288,
	1148, 289, 1147, 0, 1158, 290, 291, 292, 293, 294,
	295, 1094, 1127, 1059, 296, 1188, 1189, 628, 0, 297,
	298, 1134, 0, 1115, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1169, 321, 322, 323, 1118, 1116, 1117, 1124,
	1120, 1119, 1123, 324, 325, 326, 327, 328, 1151, 329,
	1145, 1144, 1064, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1136, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1070,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1159, 1160, 360, 1083, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1143, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1170, 367, 368, 1156, 1157, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1166,
	0, 1093, 379, 0, 380, 381, 382, 383, 384, 1129,
	1130, 1133, 463, 1172, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 2392, 392, 393, 394, 396,
	0, 1171, 395, 1138, 1139, 0, 1099, 0, 397, 398,
	1173, 1131, 1174, 399, 400, 401, 1175, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1167, 1176, 413, 414, 1177, 0, 415,
	0, 0, 0, 416, 417, 420, 1122, 1121, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1178, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1179, 459, 449, 1061, 270, 1180, 460, 461, 1084, 1132,
	462, 1146, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1181, 473,
	1182, 1161, 474, 475, 1071, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1162, 492, 655, 493, 494, 2391,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1142, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1183, 525, 526, 527, 528, 1072, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1125, 551, 552,
	534, 535, 553, 554, 1184, 555, 556, 557, 558, 559,
	560, 561, 1140, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1187, 569, 570, 571, 572, 1163,
	576, 577, 0, 578, 579, 1058, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1152, 1153, 1154, 1155, 0, 597, 0, 589, 590, 591,
	1164, 592, 1165, 1082, 593, 594, 595, 596, 0, 598,
	599, 0, 1065, 600, 601, 602, 604, 605, 603, 606,
	1126, 607, 0, 0, 608, 609, 610, 667, 1149, 1186,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1062, 0, 0,
	0, 0, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 0, 1055, 1056, 1104, 1076, 1077, 1078, 1074, 1075,
	1087, 1088, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1128, 1092, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 1141, 0, 288, 1148, 289, 1147, 0, 1158, 290,
	291, 292, 293, 294, 295, 1094, 1127, 1059, 296, 1188,
	1189, 628, 0, 297, 298, 1134, 0, 1115, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 323,
	1118, 1116, 1117, 1124, 1120, 1119, 1123, 324, 325, 326,
	327, 328, 1151, 329, 1145, 1144, 1064, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1136, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1070, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1159, 1160, 360, 1083, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1143, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	1156, 1157, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1166, 0, 1093, 379, 0, 380, 381,
	382, 383, 384, 1129, 1130, 1133, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1171, 395, 1138, 1139, 0,
	1099, 0, 397, 398, 1173, 1131, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1167, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	1122, 1121, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1061, 270, 1180,
	460, 461, 1084, 1132, 462, 1146, 464, 465, 0, 0,
	466, 0, 1066, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 1161, 474, 475, 1071, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1162, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1142, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 1072,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1125, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 1140, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1187, 569,
	570, 571, 572, 1163, 576, 577, 0, 578, 579, 1058,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1152, 1153, 1154, 1155, 0, 597,
	0, 589, 590, 591, 1164, 592, 1165, 1082, 593, 594,
	595, 596, 0, 598, 599, 0, 1065, 600, 601, 602,
	604, 605, 603, 606, 1126, 607, 0, 0, 608, 609,
	610, 667, 1149, 1186, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1062, 0, 0, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 1055, 1056, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 1088, 0, 0, 0, 1086,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 4266, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 1066, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 1088,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 3888, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 1903, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 0, 1086, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 3613, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 1088,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 1903, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 0, 1086, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	2649, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 1088,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 0, 0, 0, 0,
	0, 0, 0, 1088, 1833, 0, 2654, 1086, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 2652, 1086, 1104, 1076, 1077, 1078, 1074, 1075,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1128, 1092, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 1141, 0, 288, 1148, 289, 1147, 0, 1158, 290,
	291, 292, 293, 294, 295, 1094, 1127, 1059, 296, 1188,
	1189, 628, 0, 297, 298, 1134, 0, 1115, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 323,
	1118, 1116, 1117, 1124, 1120, 1119, 1123, 324, 325, 326,
	327, 328, 1151, 329, 1145, 1144, 1064, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1136, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1070, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1159, 1160, 360, 1083, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1143, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	1156, 1157, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1166, 0, 1093, 379, 0, 380, 381,
	382, 383, 384, 1129, 1130, 1133, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1171, 395, 1138, 1139, 0,
	1099, 0, 397, 398, 1173, 1131, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1167, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	1122, 1121, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1061, 270, 1180,
	460, 461, 1084, 1132, 462, 1146, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 1161, 474, 475, 1071, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1162, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1142, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 1072,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1125, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 1140, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1187, 569,
	570, 571, 572, 1163, 576, 577, 0, 578, 579, 1058,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1152, 1153, 1154, 1155, 0, 597,
	0, 589, 590, 591, 1164, 592, 1165, 1082, 593, 594,
	595, 596, 0, 598, 599, 0, 1065, 600, 601, 602,
	604, 605, 603, 606, 1126, 607, 0, 0, 608, 609,
	610, 667, 1149, 1186, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1062, 0, 0, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 1055, 1056, 0, 0,
	0, 0, 0, 0, 0, 1088, 0, 0, 2640, 1086,
	1104, 1076, 1077, 1078, 1074, 1075, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1128, 1092, 0, 0, 0, 280, 281, 1168,
	282, 283, 284, 285, 286, 287, 621, 1141, 0, 288,
	1148, 289, 1147, 0, 1158, 290, 291, 292, 293, 294,
	295, 1094, 1127, 1059, 296, 1188, 1189, 628, 0, 297,
	298, 1134, 0, 1115, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1169, 321, 322, 323, 1118, 1116, 1117, 1124,
	1120, 1119, 1123, 324, 325, 326, 327, 328, 1151, 329,
	1145, 1144, 1064, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1136, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1070,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1159, 1160, 360, 1083, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1143, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1170, 367, 368, 1156, 1157, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1166,
	0, 1093, 379, 0, 380, 381, 382, 383, 384, 1129,
	1130, 1133, 463, 1172, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1171, 395, 1138, 1139, 0, 1099, 0, 397, 398,
	1173, 1131, 1174, 399, 400, 401, 1175, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1167, 1176, 413, 414, 1177, 0, 415,
	0, 0, 0, 416, 417, 420, 1122, 1121, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1178, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1179, 459, 449, 1061, 270, 1180, 460, 461, 1084, 1132,
	462, 1146, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1181, 473,
	1182, 1161, 474, 475, 1071, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1162, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1142, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1183, 525, 526, 527, 528, 1072, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1125, 551, 552,
	534, 535, 553, 554, 1184, 555, 556, 557, 558, 559,
	560, 561, 1140, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1187, 569, 570, 571, 572, 1163,
	576, 577, 0, 578, 579, 1058, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1152, 1153, 1154, 1155, 0, 597, 0, 589, 590, 591,
	1164, 592, 1165, 1082, 593, 594, 595, 596, 0, 598,
	599, 0, 1065, 600, 601, 602, 604, 605, 603, 606,
	1126, 607, 0, 0, 608, 609, 610, 667, 1149, 1186,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1062, 0, 0,
	0, 0, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 0, 1055, 1056, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 0, 2628, 1086, 1104, 1076, 1077, 1078,
	1074, 1075, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1128, 1092,
	0, 0, 0, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 1141, 0, 288, 1148, 289, 1147, 0,
	1158, 290, 291, 292, 293, 294, 295, 1094, 1127, 1059,
	296, 1188, 1189, 628, 0, 297, 298, 1134, 0, 1115,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1169, 321,
	322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123, 324,
	325, 326, 327, 328, 1151, 329, 1145, 1144, 1064, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1136, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1070, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1159, 1160, 360, 1083,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1143,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1170,
	367, 368, 1156, 1157, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1166, 0, 1093, 379, 0,
	380, 381, 382, 383, 384, 1129, 1130, 1133, 463, 1172,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1171, 395, 1138,
	1139, 0, 1099, 0, 397, 398, 1173, 1131, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1167,
	1176, 413, 414, 1177, 0, 415, 0, 0, 0, 416,
	417, 420, 1122, 1121, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1061,
	270, 1180, 460, 461, 1084, 1132, 462, 1146, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1181, 473, 1182, 1161, 474, 475,
	1071, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1162, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1142, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1183, 525, 526, 527,
	528, 1072, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1125, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 1140, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1187, 569, 570, 571, 572, 1163, 576, 577, 0, 578,
	579, 1058, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1152, 1153, 1154, 1155,
	0, 597, 0, 589, 590, 591, 1164, 592, 1165, 1082,
	593, 594, 595, 596, 0, 598, 599, 0, 1065, 600,
	601, 602, 604, 605, 603, 606, 1126, 607, 0, 0,
	608, 609, 610, 667, 1149, 1186, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1062, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 1055, 1056,
	0, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	2626, 1086, 2617, 2624, 1077, 1078, 1074, 1075, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 2620, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 2621,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 2622, 430, 2619, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 2623, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 2618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 0, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 2614, 1086, 2617, 2624,
	1077, 1078, 1074, 1075, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 2620, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 2621, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 2622, 430, 2619,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 2623, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 2618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 1088,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 0, 0, 0, 0,
	0, 1841, 0, 1088, 0, 0, 0, 1086, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 2371, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 1682, 1086, 1104, 1076, 1077, 1078, 1074, 1075,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1128, 1092, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 1141, 0, 288, 1148, 289, 1147, 0, 1158, 290,
	291, 292, 293, 294, 295, 1094, 1127, 1059, 296, 1188,
	1189, 628, 0, 297, 298, 1134, 0, 1115, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 323,
	1118, 1116, 1117, 1124, 1120, 1119, 1123, 324, 325, 326,
	327, 328, 1151, 329, 1145, 1144, 1064, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1136, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1070, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1159, 1160, 360, 1083, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1143, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	1156, 1157, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1166, 0, 1093, 379, 0, 380, 381,
	382, 383, 384, 1129, 1130, 1133, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1171, 395, 1138, 1139, 0,
	1099, 0, 397, 398, 1173, 1131, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1167, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	1122, 1121, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1061, 270, 1180,
	460, 461, 1084, 1132, 462, 1146, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 1161, 474, 475, 1071, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1162, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1142, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 1072,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1125, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 1140, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1187, 569,
	570, 571, 572, 1163, 576, 577, 0, 578, 579, 1058,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1152, 1153, 1154, 1155, 0, 597,
	0, 589, 590, 591, 1164, 592, 1165, 1082, 593, 594,
	595, 596, 0, 598, 599, 0, 1065, 600, 601, 602,
	604, 605, 603, 606, 1126, 607, 0, 0, 608, 609,
	610, 667, 1149, 1186, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1062, 0, 0, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 1055, 1056, 0, 0,
	0, 0, 0, 0, 0, 1088, 0, 0, 1614, 1086,
	1104, 1076, 1077, 1078, 1074, 1075, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1128, 1092, 0, 0, 0, 280, 281, 1168,
	282, 283, 284, 285, 286, 287, 621, 1141, 0, 288,
	1148, 289, 1147, 0, 1158, 290, 291, 292, 293, 294,
	295, 1094, 1127, 1059, 296, 1188, 1189, 628, 0, 297,
	298, 1134, 0, 1115, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1169, 321, 322, 323, 1118, 1116, 1117, 1124,
	1120, 1119, 1123, 324, 325, 326, 327, 328, 1151, 329,
	1145, 1144, 1064, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1136, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1070,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1159, 1160, 360, 1083, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1143, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1170, 367, 368, 1156, 1157, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1166,
	0, 1093, 379, 0, 380, 381, 382, 383, 384, 1129,
	1130, 1133, 463, 1172, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1171, 395, 1138, 1139, 0, 1099, 0, 397, 398,
	1173, 1131, 1174, 399, 400, 401, 1175, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1167, 1176, 413, 414, 1177, 0, 415,
	0, 0, 0, 416, 417, 420, 1122, 1121, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1178, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1179, 459, 449, 1061, 270, 1180, 460, 461, 1084, 1132,
	462, 1146, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1181, 473,
	1182, 1161, 474, 475, 1071, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1162, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1142, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1183, 525, 526, 527, 528, 1072, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1125, 551, 552,
	534, 535, 553, 554, 1184, 555, 556, 557, 558, 559,
	560, 561, 1140, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1187, 569, 570, 571, 572, 1163,
	576, 577, 0, 578, 579, 1058, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1152, 1153, 1154, 1155, 0, 597, 0, 589, 590, 591,
	1164, 592, 1165, 1082, 593, 594, 595, 596, 0, 598,
	599, 0, 1065, 600, 601, 602, 604, 605, 603, 606,
	1126, 607, 0, 0, 608, 609, 610, 667, 1149, 1186,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1062, 0, 0,
	0, 0, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 0, 1055, 1056, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 0, 1609, 1086, 1104, 1076, 1077, 1078,
	1074, 1075, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1128, 1092,
	0, 0, 0, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 1141, 0, 288, 1148, 289, 1147, 0,
	1158, 290, 291, 292, 293, 294, 295, 1094, 1127, 1059,
	296, 1188, 1189, 628, 0, 297, 298, 1134, 0, 1115,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1169, 321,
	322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123, 324,
	325, 326, 327, 328, 1151, 329, 1145, 1144, 1064, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1136, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1070, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1159, 1160, 360, 1083,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1143,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1170,
	367, 368, 1156, 1157, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1166, 0, 1093, 379, 0,
	380, 381, 382, 383, 384, 1129, 1130, 1133, 463, 1172,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1171, 395, 1138,
	1139, 0, 1099, 0, 397, 398, 1173, 1131, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1167,
	1176, 413, 414, 1177, 0, 415, 0, 0, 0, 416,
	417, 420, 1122, 1121, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1061,
	270, 1180, 460, 461, 1084, 1132, 462, 1146, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1181, 473, 1182, 1161, 474, 475,
	1071, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1162, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1142, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1183, 525, 526, 527,
	528, 1072, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1125, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 1140, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1187, 569, 570, 571, 572, 1163, 576, 577, 0, 578,
	579, 1058, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1152, 1153, 1154, 1155,
	0, 597, 0, 589, 590, 591, 1164, 592, 1165, 1082,
	593, 594, 595, 596, 0, 598, 599, 0, 1065, 600,
	601, 602, 604, 605, 603, 606, 1126, 607, 0, 0,
	608, 609, 610, 667, 1149, 1186, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1062, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 1055, 1056,
	0, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	1600, 1086, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 0, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 1595, 1086, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 1507, 1086, 1104, 1076, 1077, 1078, 1074, 1075,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1128, 1092, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 1141, 0, 288, 1148, 289, 1147, 0, 1158, 290,
	291, 292, 293, 294, 295, 1094, 1127, 1059, 296, 1188,
	1189, 628, 0, 297, 298, 1134, 0, 1115, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 323,
	1118, 1116, 1117, 1124, 1120, 1119, 1123, 324, 325, 326,
	327, 328, 1151, 329, 1145, 1144, 1064, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1136, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1070, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1159, 1160, 360, 1083, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1143, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	1156, 1157, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1166, 0, 1093, 379, 0, 380, 381,
	382, 383, 384, 1506, 1130, 1133, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1171, 395, 1138, 1139, 0,
	1099, 0, 397, 398, 1173, 1131, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1167, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	1122, 1121, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1061, 270, 1180,
	460, 461, 1084, 1132, 462, 1146, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 1161, 474, 475, 1071, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1162, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1142, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 1072,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1125, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 1140, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1187, 569,
	570, 571, 572, 1163, 576, 577, 0, 578, 579, 1058,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1152, 1153, 1154, 1155, 0, 597,
	0, 589, 590, 591, 1164, 592, 1165, 1082, 593, 594,
	595, 596, 0, 598, 599, 0, 1065, 600, 601, 602,
	604, 605, 603, 606, 1126, 607, 0, 0, 608, 609,
	610, 667, 1149, 1186, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1062, 0, 0, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 1055, 1056, 0, 0,
	0, 0, 0, 0, 0, 1088, 0, 0, 1501, 1086,
	1104, 1076, 1077, 1078, 1074, 1075, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1128, 1092, 0, 0, 0, 280, 281, 1168,
	282, 283, 284, 285, 286, 287, 621, 1141, 0, 288,
	1148, 289, 1147, 0, 1158, 290, 291, 292, 293, 294,
	295, 1094, 1127, 1059, 296, 1188, 1189, 628, 0, 297,
	298, 1134, 0, 1115, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1169, 321, 322, 323, 1118, 1116, 1117, 1124,
	1120, 1119, 1123, 324, 325, 326, 327, 328, 1151, 329,
	1145, 1144, 1064, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1136, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1070,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1159, 1160, 360, 1083, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1143, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1170, 367, 368, 1156, 1157, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1166,
	0, 1093, 379, 0, 380, 381, 382, 383, 384, 1500,
	1130, 1133, 463, 1172, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1171, 395, 1138, 1139, 0, 1099, 0, 397, 398,
	1173, 1131, 1174, 399, 400, 401, 1175, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1167, 1176, 413, 414, 1177, 0, 415,
	0, 0, 0, 416, 417, 420, 1122, 1121, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1178, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1179, 459, 449, 1061, 270, 1180, 460, 461, 1084, 1132,
	462, 1146, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1181, 473,
	1182, 1161, 474, 475, 1071, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1162, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1142, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1183, 525, 526, 527, 528, 1072, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1125, 551, 552,
	534, 535, 553, 554, 1184, 555, 556, 557, 558, 559,
	560, 561, 1140, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1187, 569, 570, 571, 572, 1163,
	576, 577, 0, 578, 579, 1058, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1152, 1153, 1154, 1155, 0, 597, 0, 589, 590, 591,
	1164, 592, 1165, 1082, 593, 594, 595, 596, 0, 598,
	599, 0, 1065, 600, 601, 602, 604, 605, 603, 606,
	1126, 607, 0, 0, 608, 609, 610, 667, 1149, 1186,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1062, 0, 0,
	0, 0, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 0, 1055, 1056, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 0, 1494, 1086, 1104, 1076, 1077, 1078,
	1074, 1075, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1128, 1092,
	0, 0, 0, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 1141, 0, 288, 1148, 289, 1147, 0,
	1158, 290, 291, 292, 293, 294, 295, 1094, 1127, 1059,
	296, 1188, 1189, 628, 0, 297, 298, 1134, 0, 1115,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1169, 321,
	322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123, 324,
	325, 326, 327, 328, 1151, 329, 1145, 1144, 1064, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1136, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1070, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1159, 1160, 360, 1083,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1143,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1170,
	367, 368, 1156, 1157, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1166, 0, 1093, 379, 0,
	380, 381, 382, 383, 384, 1129, 1130, 1133, 463, 1172,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1171, 395, 1138,
	1139, 0, 1099, 0, 397, 398, 1173, 1131, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1167,
	1176, 413, 414, 1177, 0, 415, 0, 0, 0, 416,
	417, 420, 1122, 1121, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1061,
	270, 1180, 460, 461, 1084, 1132, 462, 1146, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1181, 473, 1182, 1161, 474, 475,
	1071, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1162, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1142, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1183, 525, 526, 527,
	528, 1072, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1125, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 1140, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1187, 569, 570, 571, 572, 1163, 576, 577, 0, 578,
	579, 1058, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1152, 1153, 1154, 1155,
	0, 597, 0, 589, 590, 591, 1164, 592, 1165, 1082,
	593, 594, 595, 596, 0, 598, 599, 0, 1065, 600,
	601, 602, 604, 605, 603, 606, 1126, 607, 0, 0,
	608, 609, 610, 667, 1149, 1186, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1062, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 1055, 1056,
	0, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	1314, 1086, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 1104, 1076, 1077, 1078,
	1074, 1075, 1087, 1088, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1128, 1092,
	0, 0, 0, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 1141, 0, 288, 1148, 289, 1147, 0,
	1158, 290, 291, 292, 293, 294, 295, 1094, 1127, 1059,
	296, 1188, 1189, 628, 0, 297, 298, 1134, 0, 1115,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1169, 321,
	322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123, 324,
	325, 326, 327, 328, 1151, 329, 1145, 1144, 1064, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1136, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1070, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1159, 1160, 360, 1083,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1143,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1170,
	367, 368, 1156, 1157, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1166, 0, 1093, 379, 0,
	380, 381, 382, 383, 384, 1129, 1130, 1133, 463, 1172,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1171, 395, 1138,
	1139, 0, 1099, 0, 397, 398, 1173, 1131, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1167,
	1176, 413, 414, 1177, 0, 415, 0, 0, 0, 416,
	417, 420, 1122, 1121, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1061,
	270, 1180, 460, 461, 1084, 1132, 462, 1146, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1181, 473, 1182, 1161, 474, 475,
	1071, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1162, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1142, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1183, 525, 526, 527,
	528, 1072, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1125, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 1140, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1187, 569, 570, 571, 572, 1163, 576, 577, 0, 578,
	579, 1058, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1152, 1153, 1154, 1155,
	0, 597, 0, 589, 590, 591, 1164, 592, 1165, 1082,
	593, 594, 595, 596, 0, 598, 599, 0, 1065, 600,
	601, 602, 604, 605, 603, 606, 1126, 607, 0, 0,
	608, 609, 610, 667, 1149, 1186, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1062, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 1055, 1056,
	1104, 1076, 1077, 1078, 1074, 1075, 1087, 1088, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1128, 1092, 0, 0, 0, 280, 281, 1168,
	282, 283, 284, 285, 286, 287, 621, 1141, 0, 288,
	1148, 289, 1147, 0, 1158, 290, 291, 292, 293, 294,
	295, 1094, 1127, 1059, 296, 1188, 1189, 628, 0, 297,
	298, 1134, 0, 1115, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1169, 321, 322, 4551, 1118, 1116, 1117, 1124,
	1120, 1119, 1123, 324, 325, 326, 327, 328, 1151, 329,
	1145, 1144, 1064, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1136, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1070,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1159, 1160, 360, 1083, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1143, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1170, 367, 368, 1156, 1157, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1166,
	0, 1093, 379, 0, 380, 381, 382, 383, 384, 1129,
	1130, 1133, 463, 1172, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1171, 395, 1138, 1139, 0, 1099, 0, 397, 398,
	1173, 1131, 1174, 399, 400, 401, 1175, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1167, 1176, 413, 414, 1177, 0, 415,
	0, 0, 0, 416, 417, 420, 1122, 1121, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1178, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1179, 459, 449, 1061, 270, 1180, 460, 461, 1084, 1132,
	462, 1146, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1181, 473,
	1182, 1161, 474, 475, 1071, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1162, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1142, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1183, 525, 526, 527, 528, 1072, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1125, 551, 552,
	534, 535, 553, 554, 1184, 555, 556, 557, 558, 559,
	560, 561, 1140, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1187, 569, 570, 571, 572, 1163,
	576, 577, 0, 578, 579, 1058, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1152, 1153, 1154, 1155, 0, 597, 0, 589, 590, 591,
	1164, 592, 1165, 1082, 593, 594, 595, 596, 0, 4550,
	599, 0, 1065, 600, 601, 602, 604, 605, 603, 606,
	1126, 607, 0, 0, 608, 609, 610, 667, 1149, 1186,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1062, 0, 0,
	0, 0, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 0, 1055, 1056, 1104, 1076, 1077, 1078, 1074, 1075,
	1087, 1088, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1128, 1092, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	4549, 1141, 0, 288, 1148, 289, 1147, 0, 1158, 290,
	291, 292, 293, 294, 295, 1094, 1127, 1059, 296, 1188,
	1189, 628, 0, 297, 298, 1134, 0, 1115, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 4551,
	1118, 1116, 1117, 1124, 1120, 1119, 1123, 324, 325, 326,
	327, 328, 1151, 329, 1145, 1144, 1064, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1136, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1070, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1159, 1160, 360, 1083, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1143, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	1156, 1157, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1166, 0, 1093, 379, 0, 380, 381,
	382, 383, 384, 1129, 1130, 1133, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1171, 395, 1138, 1139, 0,
	1099, 0, 397, 398, 1173, 1131, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1167, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	1122, 1121, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 1061, 270, 1180,
	460, 461, 1084, 1132, 462, 1146, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 1161, 474, 475, 1071, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1162, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1142, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 1072,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1125, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 1140, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1187, 569,
	570, 571, 572, 1163, 576, 577, 0, 578, 579, 1058,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1152, 1153, 1154, 1155, 0, 597,
	0, 589, 590, 591, 1164, 592, 1165, 1082, 593, 594,
	595, 596, 0, 4550, 599, 0, 1065, 600, 601, 602,
	604, 605, 603, 606, 1126, 607, 0, 0, 608, 609,
	610, 667, 1149, 1186, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1062, 0, 0, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 1055, 1056, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 1088, 0, 0, 0, 1086,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 4210, 323, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 4211,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 1173, 1131,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 1180, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 4209, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 598, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1062, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	1055, 1056, 1104, 1076, 1077, 1078, 3090, 3091, 1087, 1088,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 1092, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 1141,
	0, 288, 1148, 289, 1147, 0, 1158, 290, 291, 292,
	293, 294, 295, 1094, 1127, 1059, 296, 1188, 1189, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	1151, 329, 1145, 1144, 1064, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1136,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1070, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 1083, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1143, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 1156, 1157,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 1093, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 1138, 1139, 0, 1099, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 1061, 270, 1180, 460, 461,
	1084, 1132, 462, 1146, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 1071, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1142, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 1072, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 1140, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1187, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 1058, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1152, 1153, 1154, 1155, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 1082, 593, 594, 595, 596,
	0, 598, 599, 0, 1065, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	1149, 1186, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1062,
	0, 0, 0, 0, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 1055, 1056, 1104, 1076, 1077, 1078,
	3088, 3089, 1087, 1088, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1128, 1092,
	0, 0, 0, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 1141, 0, 288, 1148, 289, 1147, 0,
	1158, 290, 291, 292, 293, 294, 295, 1094, 1127, 1059,
	296, 1188, 1189, 628, 0, 297, 298, 1134, 0, 1115,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1169, 321,
	322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123, 324,
	325, 326, 327, 328, 1151, 329, 1145, 1144, 1064, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1136, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1070, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1159, 1160, 360, 1083,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1143,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1170,
	367, 368, 1156, 1157, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1166, 0, 1093, 379, 0,
	380, 381, 382, 383, 384, 1129, 1130, 1133, 463, 1172,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1171, 395, 1138,
	1139, 0, 1099, 0, 397, 398, 1173, 1131, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1167,
	1176, 413, 414, 1177, 0, 415, 0, 0, 0, 416,
	417, 420, 1122, 1121, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 1061,
	270, 1180, 460, 461, 1084, 1132, 462, 1146, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1181, 473, 1182, 1161, 474, 475,
	1071, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1162, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1142, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1183, 525, 526, 527,
	528, 1072, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1125, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 1140, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1187, 569, 570, 571, 572, 1163, 576, 577, 0, 578,
	579, 1058, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1152, 1153, 1154, 1155,
	0, 597, 0, 589, 590, 591, 1164, 592, 1165, 1082,
	593, 594, 595, 596, 0, 598, 599, 0, 1065, 600,
	601, 602, 604, 605, 603, 606, 1126, 607, 0, 0,
	608, 609, 610, 667, 1149, 1186, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1062, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 1055, 1056,
	1104, 1076, 1077, 1078, 1074, 1075, 1087, 1088, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1128, 1092, 0, 0, 0, 280, 281, 1168,
	282, 283, 284, 285, 286, 287, 621, 1141, 0, 288,
	1148, 289, 1147, 0, 1158, 290, 291, 292, 293, 294,
	295, 1094, 1127, 1059, 296, 1188, 1189, 628, 0, 297,
	298, 1134, 0, 1115, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1169, 321, 322, 323, 1118, 1116, 1117, 1124,
	1120, 1119, 1123, 324, 325, 326, 327, 328, 1151, 329,
	1145, 1144, 1064, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1136, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1070,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1159, 1160, 360, 1083, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1143, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1170, 367, 368, 1156, 1157, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1166,
	0, 1093, 379, 0, 380, 381, 382, 383, 384, 1129,
	1130, 1133, 463, 1172, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1171, 395, 1138, 1139, 0, 1099, 0, 397, 398,
	1173, 1131, 1174, 399, 400, 401, 1175, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1167, 1176, 413, 414, 1177, 0, 415,
	0, 0, 0, 416, 417, 420, 1122, 1121, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1178, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1179, 459, 449, 1061, 270, 1180, 460, 461, 1084, 1132,
	462, 1146, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1181, 473,
	1182, 1161, 474, 475, 1071, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1162, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1142, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1183, 525, 526, 527, 528, 1072, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1125, 551, 552,
	534, 535, 553, 554, 1184, 555, 556, 557, 558, 559,
	560, 561, 1140, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1187, 569, 570, 571, 572, 1163,
	576, 577, 0, 578, 579, 1058, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1152, 1153, 1154, 1155, 0, 597, 0, 589, 590, 591,
	1164, 592, 1165, 1082, 593, 594, 595, 596, 0, 598,
	599, 0, 1065, 600, 601, 602, 604, 605, 603, 606,
	1126, 607, 0, 0, 608, 609, 610, 667, 1149, 1186,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1062, 0, 0,
	0, 0, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 0, 2379, 2380, 1104, 1076, 1077, 1078, 1074, 1075,
	1087, 1088, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1128, 1092, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 1141, 0, 288, 1148, 289, 1147, 0, 1158, 290,
	291, 292, 293, 294, 295, 1094, 1127, 0, 296, 1188,
	1189, 628, 0, 297, 298, 1134, 0, 1115, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 323,
	1118, 1116, 1117, 1124, 1120, 1119, 1123, 324, 325, 326,
	327, 328, 1151, 329, 1145, 1144, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1136, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1070, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1159, 1160, 360, 1083, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1143, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	1156, 1157, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1166, 0, 1093, 379, 0, 380, 381,
	382, 383, 384, 1129, 1130, 1133, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1171, 395, 1138, 1139, 0,
	1099, 0, 397, 398, 1173, 1131, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1167, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	1122, 1121, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 0, 270, 1180,
	460, 461, 1084, 1132, 462, 1146, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 1161, 474, 475, 1071, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1162, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1142, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 1072,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1125, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 1140, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1187, 569,
	570, 571, 572, 1163, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1152, 1153, 1154, 1155, 0, 597,
	0, 589, 590, 591, 1164, 592, 1165, 1082, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 1126, 607, 0, 0, 608, 609,
	610, 667, 1149, 1186, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1104, 1076, 1077, 1078, 1074, 1075, 1087, 0, 2636,
	0, 0, 0, 0, 0, 0, 2634, 2635, 271, 273,
	272, 274, 275, 276, 277, 1088, 278, 279, 0, 1086,
	0, 0, 0, 1128, 1092, 0, 0, 0, 280, 281,
	1168, 282, 283, 284, 285, 286, 287, 621, 1141, 0,
	288, 1148, 289, 1147, 0, 1158, 290, 291, 292, 293,
	294, 295, 1094, 1127, 0, 296, 1188, 1189, 628, 0,
	297, 298, 1134, 0, 1115, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1169, 321, 322, 323, 1118, 1116, 1117,
	1124, 1120, 1119, 1123, 324, 325, 326, 327, 328, 1151,
	329, 1145, 1144, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1136, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1070, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1159, 1160, 360, 1083, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1143, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1170, 367, 368, 1156, 1157, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1166, 0, 1093, 379, 0, 380, 381, 382, 383, 384,
	1129, 1130, 1133, 463, 1172, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1171, 395, 1138, 1139, 0, 1099, 0, 397,
	398, 1173, 1131, 1174, 399, 400, 401, 1175, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1167, 1176, 413, 414, 1177, 0,
	415, 0, 0, 0, 416, 417, 420, 1122, 1121, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1178, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1179, 459, 449, 0, 270, 1180, 460, 461, 1084,
	1132, 462, 1146, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1181,
	473, 1182, 1161, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1162, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1142, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1183, 525, 526, 527, 528, 3083, 3084, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1125, 551,
	552, 534, 535, 553, 554, 1184, 555, 556, 557, 558,
	559, 560, 561, 1140, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1187, 569, 570, 571, 572,
	1163, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1152, 1153, 1154, 1155, 0, 597, 0, 589, 590,
	591, 1164, 592, 1165, 1082, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 1126, 607, 0, 0, 608, 609, 610, 667, 1149,
	1186, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1104, 1076,
	1077, 1078, 1074, 1075, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 2084, 2085, 271, 273, 272, 274, 275,
	276, 277, 1088, 278, 279, 0, 1086, 0, 0, 0,
	1128, 1092, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 0, 1141, 0, 288, 1148, 289,
	1147, 0, 1158, 290, 291, 292, 293, 294, 295, 1094,
	1127, 1059, 296, 1188, 1189, 628, 0, 297, 298, 1134,
	0, 1115, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 4551, 1118, 1116, 1117, 1124, 1120, 1119,
	1123, 324, 325, 326, 327, 328, 1151, 329, 1145, 1144,
	1064, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1136, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1070, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1159, 1160,
	360, 1083, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1143, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 1156, 1157, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1166, 0, 1093,
	379, 0, 380, 381, 382, 383, 384, 1129, 1130, 1133,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1171,
	395, 1138, 1139, 0, 1099, 0, 397, 398, 0, 1131,
	0, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1167, 1176, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 1122, 1121, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 1061, 270, 0, 460, 461, 1084, 1132, 462, 1146,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 1161,
	474, 475, 1071, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1162, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1142, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 1072, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1125, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	1140, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1187, 569, 570, 571, 572, 1163, 576, 577,
	0, 578, 579, 1058, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1152, 1153,
	1154, 1155, 0, 597, 0, 589, 590, 591, 1164, 592,
	1165, 1082, 593, 594, 595, 596, 0, 4550, 599, 0,
	1065, 600, 601, 602, 604, 605, 603, 606, 1126, 607,
	0, 0, 608, 609, 610, 667, 1149, 1186, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1048, 0, 1226, 0, 0,
	1055, 1056, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 1086, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1128,
	0, 0, 0, 0, 280, 281, 1168, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 1127,
	0, 296, 626, 627, 628, 0, 297, 298, 1134, 0,
	1115, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1169,
	321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1159, 1160, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1170, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1166, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1129, 1130, 1133, 463,
	1172, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1171, 395,
	643, 644, 0, 645, 0, 397, 398, 1173, 1131, 1174,
	399, 400, 401, 1175, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1212, 409, 411, 410, 0, 412,
	1167, 1176, 413, 414, 1177, 0, 415, 0, 0, 0,
	416, 417, 420, 1122, 1121, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1178, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1179, 459, 449,
	0, 270, 1180, 460, 461, 0, 1132, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 1218, 468, 469, 470,
	0, 0, 471, 472, 650, 1181, 473, 1182, 1161, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1162, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1183, 525, 526,
	527, 528, 657, 1220, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 230, 546, 547,
	545, 548, 549, 550, 1125, 551, 552, 534, 535, 553,
	554, 1184, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 1163, 576, 577, 0,
	578, 579, 0, 575, 566, 232, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 1164, 592, 1165,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 1126, 607, 0,
	0, 608, 609, 610, 1584, 668, 669, 0, 612, 611,
	613, 670, 1226, 614, 0, 0, 0, 224, 615, 616,
	671, 617, 618, 619, 0, 0, 225, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 0, 1216, 0, 1927, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 1127, 0, 296, 626, 627, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 643, 644, 0, 645, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1212,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 0, 270, 1180, 460, 461,
	0, 1132, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 1218, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 657, 1220, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 230, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 0, 575, 566,
	232, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 1584,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 224, 615, 616, 671, 617, 618, 619, 0,
	0, 225, 0, 0, 0, 3247, 0, 1226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1216, 0, 1927, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1128,
	0, 0, 0, 0, 280, 281, 1168, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 1127,
	0, 296, 626, 627, 628, 0, 297, 298, 1134, 0,
	1115, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1169,
	321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1159, 1160, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1170, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1166, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1129, 1130, 1133, 463,
	1172, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1171, 395,
	643, 644, 0, 645, 0, 397, 398, 1173, 1131, 1174,
	399, 400, 401, 1175, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1212, 409, 411, 410, 0, 412,
	1167, 1176, 413, 414, 1177, 0, 415, 0, 0, 0,
	416, 417, 420, 1122, 1121, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1178, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1179, 459, 449,
	0, 270, 1180, 460, 461, 0, 1132, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 1218, 468, 469, 470,
	0, 0, 471, 472, 650, 1181, 473, 1182, 1161, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1162, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1183, 525, 526,
	527, 528, 657, 1220, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1125, 551, 552, 534, 535, 553,
	554, 1184, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 1163, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 1164, 592, 1165,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 1126, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 1208, 0, 1226, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 1216, 0, 1214, 1128,
	0, 0, 0, 0, 280, 281, 1168, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 1127,
	0, 296, 626, 627, 628, 0, 297, 298, 1134, 0,
	1115, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1169,
	321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1159, 1160, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1170, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1166, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1129, 1130, 1133, 463,
	1172, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1171, 395,
	643, 644, 0, 645, 0, 397, 398, 1173, 1131, 1174,
	399, 400, 401, 1175, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1212, 409, 411, 410, 0, 412,
	1167, 1176, 413, 414, 1177, 0, 415, 0, 0, 0,
	416, 417, 420, 1122, 1121, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1178, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1179, 459, 449,
	0, 270, 1180, 460, 461, 0, 1132, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 1218, 468, 469, 470,
	0, 0, 471, 472, 650, 1181, 473, 1182, 1161, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1162, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1183, 525, 526,
	527, 528, 657, 1220, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1125, 551, 552, 534, 535, 553,
	554, 1184, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 1163, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 1164, 592, 1165,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 1126, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1226, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 0, 1216, 0, 1214, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 1127, 0, 296, 626, 627, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 643, 644, 0, 645, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1212,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 0, 270, 1180, 460, 461,
	0, 1132, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 1218, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 657, 1220, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1226, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1128,
	0, 1216, 0, 1214, 280, 281, 1168, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 1127,
	0, 296, 626, 627, 628, 0, 297, 298, 1134, 0,
	1115, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1169,
	321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1159, 1160, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1170, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1166, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1129, 1130, 1133, 463,
	1172, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1171, 395,
	643, 644, 0, 645, 0, 397, 398, 1173, 1131, 1174,
	399, 400, 401, 1175, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1167, 1176, 413, 414, 1177, 0, 415, 0, 0, 0,
	416, 417, 420, 1122, 1121, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1178, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1179, 459, 449,
	0, 270, 1180, 460, 461, 0, 1132, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1181, 473, 1182, 1161, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1162, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1183, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1125, 551, 552, 534, 535, 553,
	554, 1184, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 1163, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 1164, 592, 1165,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 1126, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1226, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1128, 0, 0, 0, 4041, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 1127, 0, 296, 626, 627, 628,
	0, 297, 298, 1134, 0, 1115, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 1118, 1116,
	1117, 1124, 1120, 1119, 1123, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1159, 1160, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1166, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1129, 1130, 1133, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1171, 395, 643, 644, 0, 645, 0,
	397, 398, 1173, 1131, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1167, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 1122, 1121,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 0, 270, 1180, 460, 461,
	0, 1132, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 1161, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1162, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 657, 1220, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1125,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 1163, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 1164, 592, 1165, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 1126, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 2483,
	2484, 2485, 2502, 2503, 2504, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 2505,
	0, 620, 0, 1825, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 1810, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 2495, 0, 307, 308, 309, 306, 310, 0, 311,
	2491, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 2496, 2497, 2498, 2499, 361,
	362, 363, 635, 0, 0, 2490, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 2500, 2501,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 2493, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 2494, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 1809, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 1048, 0,
	1307, 2480, 2481, 2482, 2506, 2492, 2486, 0, 2488, 2489,
	2487, 2474, 2475, 2476, 2477, 2478, 2479, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1168,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1312, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1169, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1170, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1172, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1171, 395, 643, 644, 0, 645, 0, 397, 398,
	1173, 646, 1174, 399, 400, 401, 1175, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1176, 413, 414, 1177, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1178, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1179, 459, 449, 0, 0, 1180, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1181, 473,
	1182, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1183, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	230, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1184, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 232, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 1584, 668, 669,
	0, 612, 611, 613, 670, 1581, 614, 1307, 0, 0,
	224, 615, 616, 671, 617, 618, 619, 0, 0, 225,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 186, 0, 0, 280, 281, 1168, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1312, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1169,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1170, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1172, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1171, 395,
	643, 644, 0, 645, 0, 397, 398, 1173, 646, 1174,
	399, 400, 401, 1175, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1176, 413, 414, 1177, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1178, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1179, 459, 449,
	0, 0, 1180, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1181, 473, 1182, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1183, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 230, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1184, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 232, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 1584, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 224, 615, 616,
	671, 617, 618, 619, 1307, 1306, 225, 0, 0, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 186, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1312, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1171, 395, 643, 644, 0,
	645, 0, 397, 398, 1173, 646, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 0, 0, 1180,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1307, 1306, 0, 0, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 1606, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1168, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1312, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1169, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1170, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1172, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1171, 395, 643, 644, 0, 645, 0, 397,
	398, 1173, 646, 1174, 399, 400, 401, 1175, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1176, 413, 414, 1177, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1178, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1179, 459, 449, 0, 0, 1180, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1181,
	473, 1182, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1183, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1184, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1307, 1306,
	0, 0, 0, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 3530, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1312, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1171,
	395, 643, 644, 0, 645, 0, 397, 398, 1173, 646,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 0, 0, 1180, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 2267, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1307, 2181, 0, 0, 0,
	0, 2182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 1606,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1168, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1312, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1169, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1170, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1172, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1171, 395, 643, 644,
	0, 645, 0, 397, 398, 1173, 646, 1174, 399, 400,
	401, 1175, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 2180, 411, 410, 0, 412, 647, 1176,
	413, 414, 1177, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1178, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1179, 459, 449, 0, 0,
	1180, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1181, 473, 1182, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1183, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1184,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1307, 1306, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1606, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1312, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1171, 395, 643, 644, 0, 645, 0,
	397, 398, 1173, 646, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 0, 0, 1180, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1226, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1128,
	0, 0, 0, 1590, 280, 281, 1168, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 1127,
	0, 296, 626, 627, 628, 0, 297, 298, 1134, 0,
	1115, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1169,
	321, 322, 323, 1118, 1116, 1117, 1124, 1120, 1119, 1123,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1159, 1160, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1170, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1166, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1129, 1130, 1133, 463,
	1172, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1171, 395,
	643, 644, 0, 645, 0, 397, 398, 1173, 1131, 1174,
	399, 400, 401, 1175, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1167, 1176, 413, 414, 1177, 0, 415, 0, 0, 0,
	416, 417, 420, 1122, 1121, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1178, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1179, 459, 449,
	0, 270, 1180, 460, 461, 0, 1132, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1181, 473, 1182, 1161, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1162, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1183, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1125, 551, 552, 534, 535, 553,
	554, 1184, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 1163, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 1164, 592, 1165,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 1126, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1048, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 230, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 232, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 1584, 668, 669, 0, 612, 611, 613, 670, 265,
	614, 0, 0, 0, 224, 615, 616, 671, 617, 618,
	619, 0, 0, 225, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 186, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 265, 2996, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	1941, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 265, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 4707, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	3480, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1578, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 265, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 2984, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 265, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 3638, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 889, 614, 794, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 2258, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 801, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	887, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 799, 580, 581, 582,
	583, 584, 800, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 792, 614, 794, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 804, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 801, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 799, 580, 581, 582, 583, 584, 800,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 1980, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 280, 281, 1168, 282, 283, 284, 285, 286,
	287, 0, 1986, 0, 288, 1976, 289, 1992, 0, 1999,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	2002, 2003, 0, 0, 297, 298, 0, 0, 1312, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1169, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 1151, 329, 1990, 1989, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1136, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 1988, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1170, 367,
	368, 1997, 1998, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 0, 380,
	381, 382, 383, 384, 0, 0, 0, 463, 1172, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1171, 395, 1983, 1984,
	0, 1979, 0, 397, 398, 1173, 0, 1174, 399, 400,
	401, 1175, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 0, 1176,
	413, 414, 1177, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1178, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1179, 459, 449, 0, 0,
	1180, 460, 461, 0, 0, 462, 1991, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 0, 1181, 473, 1182, 0, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 1973, 486, 487, 488, 1974, 489, 490, 491, 0,
	492, 0, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1987, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1183, 525, 526, 527, 528,
	0, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1184,
	555, 556, 557, 558, 559, 560, 561, 1985, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 2001,
	569, 570, 571, 572, 0, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1993, 1994, 1995, 1996, 0,
	597, 0, 589, 590, 591, 0, 592, 0, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 0, 1977, 2000, 0, 612, 611, 613, 0,
	0, 614, 0, 0, 794, 0, 615, 616, 0, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	1967, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	801, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 799, 580, 581, 582, 583, 584, 800, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 794, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 804, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	801, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 2301, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 2302,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 799, 580, 581, 582, 583, 584, 800, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	2303, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 2050,
	614, 1307, 2017, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 804, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1168, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1312, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1169, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 2014, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1170, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1172, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1171, 395, 643, 644, 0, 645, 0, 397,
	398, 1173, 646, 1174, 399, 400, 401, 1175, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1176, 413, 414, 1177, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1178, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1179, 459, 449, 0, 0, 1180, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1181,
	473, 1182, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1183, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 2015, 551,
	552, 534, 535, 553, 554, 1184, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 2011, 614, 1307, 2017,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1312, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	2014, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1171,
	395, 643, 644, 0, 645, 0, 397, 398, 1173, 646,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 0, 0, 1180, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 2015, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 794, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 801, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 2006, 541, 542, 543, 544, 0, 2007,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 799, 580, 581, 582,
	583, 584, 800, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 2005, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 794, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 804, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 801, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 1958, 541, 542, 543, 544, 0, 1959,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 799, 580, 581, 582,
	583, 584, 800, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 1957, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 1307, 2017, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 804, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1168, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1312, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1169, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 2014, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1170, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1172, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1171, 395, 643, 644,
	0, 645, 0, 397, 398, 1173, 646, 1174, 399, 400,
	401, 1175, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1176,
	413, 414, 1177, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1178, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1179, 459, 449, 0, 0,
	1180, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1181, 473, 1182, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1183, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 2015, 551, 552, 534, 535, 553, 554, 1184,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1307, 1306, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1168, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1312, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1169, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1170, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1172, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1171, 395, 643, 644, 0, 645, 0,
	397, 398, 1173, 646, 1174, 399, 400, 401, 1175, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1176, 413, 414, 1177,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1178,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1179, 459, 449, 0, 0, 1180, 460, 461,
	3827, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1181, 473, 1182, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1183, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1184, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1307,
	1306, 0, 0, 0, 0, 1304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1168, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1312, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1169, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1170, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1172, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1171, 395, 643, 644, 0, 645, 0, 397, 398, 1173,
	646, 1174, 399, 400, 401, 1175, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1176, 413, 414, 1177, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1178, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1179,
	459, 449, 0, 0, 1180, 460, 461, 3451, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1181, 473, 1182,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1183,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1184, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1634, 0, 1307, 1306,
	0, 0, 0, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1312, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 1633, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1171,
	395, 643, 644, 0, 645, 0, 397, 398, 1173, 646,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 0, 0, 1180, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 1632, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 1631, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1552, 0, 1307, 1306, 0,
	0, 0, 0, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1168, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1312, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1169,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1170, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1551, 641, 642, 463,
	1172, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1171, 395,
	643, 644, 0, 645, 0, 397, 398, 1173, 646, 1174,
	399, 400, 401, 1175, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1176, 413, 414, 1177, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1178, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1179, 459, 449,
	0, 0, 1180, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1181, 473, 1182, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1183, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1184, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1512, 0, 1307, 1306, 0, 0,
	0, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1168, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1312,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1169, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1170,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1172,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1171, 395, 643,
	644, 0, 645, 0, 397, 398, 1173, 646, 1174, 399,
	400, 401, 1175, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1176, 413, 414, 1177, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1178, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1179, 459, 449, 0,
	0, 1180, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1181, 473, 1182, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1183, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1184, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1480, 0, 1307, 1306, 0, 0, 0,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1168, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1312, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1169, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1170, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1479, 641, 642, 463, 1172, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1171, 395, 643, 644,
	0, 645, 0, 397, 398, 1173, 646, 1174, 399, 400,
	401, 1175, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1176,
	413, 414, 1177, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1178, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1179, 459, 449, 0, 0,
	1180, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1181, 473, 1182, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1183, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1184,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1301, 0, 1307, 1306, 0, 0, 0, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1168, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1312, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1169, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1170, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 1300, 641, 642, 463, 1172, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1171, 395, 643, 644, 0,
	645, 0, 397, 398, 1173, 646, 1174, 399, 400, 401,
	1175, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1176, 413,
	414, 1177, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1178, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1179, 459, 449, 0, 0, 1180,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1181, 473, 1182, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1183, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1184, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1307, 1306, 0, 0, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1168, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1312, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1169, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1170, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1172, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1171, 395, 643, 644, 0, 645, 0, 397,
	398, 1173, 646, 1174, 399, 400, 401, 1175, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1176, 413, 414, 1177, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1178, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1179, 459, 449, 0, 0, 1180, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1181,
	473, 1182, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1183, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1184, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 1307, 2017,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1168, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1312, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1169, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	2057, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1170, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1172, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1171,
	395, 643, 644, 0, 645, 0, 397, 398, 1173, 646,
	1174, 399, 400, 401, 1175, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1176, 413, 414, 1177, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1178, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1179, 459,
	449, 0, 0, 1180, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1181, 473, 1182, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1183, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1184, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 1307, 1306, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1168, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1312, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1169, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1170, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1172, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1171, 395, 643, 644,
	0, 645, 0, 397, 398, 1173, 646, 1174, 399, 400,
	401, 1175, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1176,
	413, 414, 1177, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1178, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1179, 459, 449, 0, 0,
	1180, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1181, 473, 1182, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1183, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1184,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 1307, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1168, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1312, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1169, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1170, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1172, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1171, 395, 643, 644,
	0, 645, 0, 397, 398, 1173, 646, 1174, 399, 400,
	401, 1175, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1176,
	413, 414, 1177, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1178, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1179, 459, 449, 0, 0,
	1180, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1181, 473, 1182, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1183, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1184,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 2803, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 2800, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 2807, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 3009,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 2806, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	3006, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 3008, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 3005, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 2805, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 3007, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 2803, 297, 298, 629, 0, 0, 2797,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 2800, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 2807, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 2806, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 2796, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 2805, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 2804, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1705, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1704, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 1708, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	1706, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 1707, 611, 613, 670, 1454, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1456, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 1218, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1451, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1453, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 1218, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1358, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1360, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 1218, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 703, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 702, 276, 277, 692, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 695, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 696, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	697, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 691, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 692, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 695, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 696, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 697, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 1218, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 3401, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 2954, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 2953, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 2273,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 2214,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 2221, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 2220, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 2207, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 2209, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 2177, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 1218, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1556, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1555, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1471, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1464, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1466, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1291, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1290, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1281, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1280,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1278, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1277, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1273, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 1272, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 673,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 256, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 695, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 696, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 697, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 2310, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 2308, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 2306, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 2227, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 2036, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 2030, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 876, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 875, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 874, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 3009,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 4109, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	760, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1328, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 1326,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 761, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 757, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 1329, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 756, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 760, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1328, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 1326, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 761, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 757, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 1329, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 756,
	662, 663, 664, 0, 597, 0, 589, 1327, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 682, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	681, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 680, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 265, 2996, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	265, 4119, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 4380,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 4018,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 3795, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 2689, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 265, 2996, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 2993,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 2283, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 2271, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 760,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 750, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 761, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 757, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 1589, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 756, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1562, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1561, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1546, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1544, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1539, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1516, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1514, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1477, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1459, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1296, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1295,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1287, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1286, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 1240, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 766, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 760, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 750, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 748, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 749, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	761, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 751,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 757,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 752,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 756, 662, 663, 664, 0, 597,
	0, 589, 754, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 742,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 743, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 705, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 699, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	677, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 3500, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 3437, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 3366, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 3364, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 3349, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 2964, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 743, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 2245, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	0, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1258, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 1191, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 0, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 0,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 0,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 0, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1754,
	1755, 0, 1787, 1788, 1789, 1798, 1799, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1785, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	1754, 1755, 0, 1787, 1788, 1789, 1798, 1799, 1800, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 1791, 1785, 1756, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 1776, 0, 0, 0, 0, 1804,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 1780,
	1781, 1782, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	1780, 1781, 1782, 0, 0, 1795, 0, 0, 1805, 1762,
	0, 0, 0, 0, 0, 1784, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 1802, 0, 0, 0, 0, 0,
	0, 1771, 1772, 0, 0, 0, 1795, 0, 0, 1805,
	0, 0, 0, 0, 0, 0, 1784, 1786, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 1777, 1802, 0, 0, 0, 0,
	0, 0, 1771, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	1754, 1755, 0, 1787, 1788, 1789, 1798, 1799, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 1791, 1785, 0, 0, 1796, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1778, 1754, 1755, 0, 1787, 1788, 1789, 1798, 1799, 1800,
	0, 0, 0, 0, 0, 0, 1810, 1809, 0, 0,
	0, 0, 0, 1791, 1785, 1756, 0, 1796, 0, 0,
	0, 1757, 0, 0, 0, 1776, 0, 0, 0, 0,
	1804, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1809, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 1794,
	0, 0, 0, 0, 1768, 1769, 1775, 1797, 1774, 1770,
	0, 1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 2517, 1779,
	1780, 1781, 1782, 0, 0, 0, 0, 0, 0, 1762,
	1794, 0, 0, 0, 0, 1768, 1769, 1775, 1797, 1774,
	1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763,
	1764, 0, 0, 0, 0, 4484, 0, 0, 0, 0,
	1779, 1780, 1781, 1782, 0, 0, 1795, 0, 0, 1805,
	1762, 0, 0, 0, 0, 0, 1784, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 1802, 0, 0, 0, 0,
	0, 0, 1771, 1772, 0, 0, 0, 1795, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 1784, 1786, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 1777, 1802, 0, 0, 0,
	0, 0, 0, 1771, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 1754, 1755, 0, 1787, 1788, 1789, 1798, 1799, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 1791, 1785, 0, 0, 1796, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 1778, 1754, 1755, 0, 1787, 1788, 1789, 1798, 1799,
	1800, 0, 0, 0, 0, 0, 0, 1810, 1809, 0,
	0, 0, 0, 0, 1791, 1785, 1756, 0, 1796, 0,
	0, 0, 1757, 0, 0, 0, 1776, 0, 0, 0,
	0, 1804, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1809,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	1794, 0, 0, 0, 0, 1768, 1769, 1775, 1797, 1774,
	1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763,
	1764, 0, 0, 0, 0, 4480, 0, 0, 0, 0,
	1779, 1780, 1781, 1782, 0, 0, 0, 0, 0, 0,
	1762, 1794, 0, 0, 0, 0, 1768, 1769, 1775, 1797,
	1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761,
	1763, 1764, 0, 0, 0, 0, 4401, 0, 0, 0,
	0, 1779, 1780, 1781, 1782, 0, 0, 1795, 0, 0,
	1805, 1762, 0, 0, 0, 0, 0, 1784, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 1802, 0, 0, 0,
	0, 0, 0, 1771, 1772, 0, 0, 0, 1795, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 1784, 1786,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 1777, 1802, 0, 0,
	0, 0, 0, 0, 1771, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 1754, 1755, 0, 1787, 1788, 1789, 1798, 1799,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 1791, 1785, 0, 0, 1796, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 1778, 1754, 1755, 0, 1787, 1788, 1789, 1798,
	1799, 1800, 0, 0, 0, 0, 0, 0, 1810, 1809,
	0, 0, 0, 0, 0, 1791, 1785, 1756, 0, 1796,
	0, 0, 0, 1757, 0, 0, 0, 1776, 0, 0,
	0, 0, 1804, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	1809, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 1794, 0, 0, 0, 0, 1768, 1769, 1775, 1797,
	1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761,
	1763, 1764, 0, 0, 0, 0, 4366, 0, 0, 0,
	0, 1779, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	0, 1762, 1794, 0, 0, 0, 0, 1768, 1769, 1775,
	1797, 1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760,
	1761, 1763, 1764, 0, 0, 0, 0, 4365, 0, 0,
	0, 0, 1779, 1780, 1781, 1782, 0, 0, 1795, 0,
	0, 1805, 1762, 0, 0, 0, 0, 0, 1784, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 1802, 0, 0,
	0, 0, 0, 0, 1771, 1772, 0, 0, 0, 1795,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 1784,
	1786, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1777, 1802, 0,
	0, 0, 0, 0, 0, 1771, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 1754, 1755, 0, 1787, 1788, 1789, 1798,
	1799, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 1791, 1785, 0, 0, 1796,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 1778, 1754, 1755, 0, 1787, 1788, 1789,
	1798, 1799, 1800, 0, 0, 0, 0, 0, 0, 1810,
	1809, 0, 0, 0, 0, 0, 1791, 1785, 1756, 0,
	1796, 0, 0, 0, 1757, 0, 0, 0, 1776, 0,
	0, 0, 0, 1804, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1809, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 1794, 0, 0, 0, 0, 1768, 1769, 1775,
	1797, 1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760,
	1761, 1763, 1764, 0, 0, 0, 0, 4194, 0, 0,
	0, 0, 1779, 1780, 1781, 1782, 0, 0, 0, 0,
	0, 0, 1762, 1794, 0, 0, 0, 0, 1768, 1769,
	1775, 1797, 1774, 1770, 0, 1767, 1765, 1766, 1758, 1759,
	1760, 1761, 1763, 1764, 0, 0, 0, 0, 4037, 0,
	0, 0, 0, 1779, 1780, 1781, 1782, 0, 0, 1795,
	0, 0, 1805, 1762, 0, 0, 0, 0, 0, 1784,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 1802, 0,
	0, 0, 0, 0, 0, 1771, 1772, 0, 0, 0,
	1795, 0, 0, 1805, 0, 0, 0, 0, 0, 0,
	1784, 1786, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1777, 1802,
	0, 0, 0, 0, 0, 0, 1771, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 1754, 1755, 0, 1787, 1788, 1789,
	1798, 1799, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 1791, 1785, 0, 0,
	1796, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 1778, 1754, 1755, 0, 1787, 1788,
	1789, 1798, 1799, 1800, 0, 0, 0, 0, 0, 0,
	1810, 1809, 0, 0, 0, 0, 0, 1791, 1785, 1756,
	0, 1796, 0, 0, 0, 1757, 0, 0, 0, 1776,
	0, 0, 0, 0, 1804, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1809, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 1794, 0, 0, 0, 0, 1768, 1769,
	1775, 1797, 1774, 1770, 0, 1767, 1765, 1766, 1758, 1759,
	1760, 1761, 1763, 1764, 0, 0, 0, 0, 3973, 0,
	0, 0, 0, 1779, 1780, 1781, 1782, 0, 0, 0,
	0, 0, 0, 1762, 1794, 0, 0, 0, 0, 1768,
	1769, 1775, 1797, 1774, 1770, 0, 1767, 1765, 1766, 1758,
	1759, 1760, 1761, 1763, 1764, 0, 0, 0, 0, 3972,
	0, 0, 0, 0, 1779, 1780, 1781, 1782, 0, 0,
	1795, 0, 0, 1805, 1762, 0, 0, 0, 0, 0,
	1784, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 1802,
	0, 0, 0, 0, 0, 0, 1771, 1772, 0, 0,
	0, 1795, 0, 0, 1805, 0, 0, 0, 0, 0,
	0, 1784, 1786, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1777,
	1802, 0, 0, 0, 0, 0, 0, 1771, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1778, 1754, 1755, 0, 1787, 1788,
	1789, 1798, 1799, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 1791, 1785, 0,
	0, 1796, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1778, 1754, 1755, 0, 1787,
	1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0, 0,
	0, 1810, 1809, 0, 0, 0, 0, 0, 1791, 1785,
	1756, 0, 1796, 0, 0, 0, 1757, 0, 0, 0,
	1776, 0, 0, 0, 0, 1804, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1809, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 1794, 0, 0, 0, 0, 1768,
	1769, 1775, 1797, 1774, 1770, 0, 1767, 1765, 1766, 1758,
	1759, 1760, 1761, 1763, 1764, 0, 0, 0, 0, 3971,
	0, 0, 0, 0, 1779, 1780, 1781, 1782, 0, 0,
	0, 0, 0, 0, 1762, 1794, 0, 0, 0, 0,
	1768, 1769, 1775, 1797, 1774, 1770, 0, 1767, 1765, 1766,
	1758, 1759, 1760, 1761, 1763, 1764, 0, 0, 0, 0,
	3643, 0, 0, 0, 0, 1779, 1780, 1781, 1782, 0,
	0, 1795, 0, 0, 1805, 1762, 0, 0, 0, 0,
	0, 1784, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	1802, 0, 0, 0, 0, 0, 0, 1771, 1772, 0,
	0, 0, 1795, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 1784, 1786, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	1777, 1802, 0, 0, 0, 0, 0, 0, 1771, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 1754, 1755, 0, 1787,
	1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 1791, 1785,
	0, 0, 1796, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 1778, 1754, 1755, 0,
	1787, 1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 1810, 1809, 0, 0, 0, 0, 0, 1791,
	1785, 1756, 0, 1796, 0, 0, 0, 1757, 0, 0,
	0, 1776, 0, 0, 0, 0, 1804, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 1809, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 1794, 0, 0, 0, 0,
	1768, 1769, 1775, 1797, 1774, 1770, 0, 1767, 1765, 1766,
	1758, 1759, 1760, 1761, 1763, 1764, 0, 0, 0, 0,
	3165, 0, 0, 0, 0, 1779, 1780, 1781, 1782, 0,
	0, 0, 0, 0, 0, 1762, 1794, 0, 0, 0,
	0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767, 1765,
	1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0, 0,
	0, 3164, 0, 0, 0, 0, 1779, 1780, 1781, 1782,
	0, 0, 1795, 0, 0, 1805, 1762, 0, 0, 0,
	0, 0, 1784, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 1802, 0, 0, 0, 0, 0, 0, 1771, 1772,
	0, 0, 0, 1795, 0, 0, 1805, 0, 0, 0,
	0, 0, 0, 1784, 1786, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 1777, 1802, 0, 0, 0, 0, 0, 0, 1771,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 1754, 1755, 0,
	1787, 1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 1791,
	1785, 0, 0, 1796, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1778, 1754, 1755,
	0, 1787, 1788, 1789, 1798, 1799, 1800, 0, 0, 0,
	0, 0, 0, 1810, 1809, 0, 0, 0, 0, 0,
	1791, 1785, 1756, 0, 1796, 0, 0, 0, 1757, 0,
	0, 0, 1776, 0, 0, 0, 0, 1804, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1809, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 0, 1794, 0, 0, 0,
	0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767, 1765,
	1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0, 0,
	0, 3163, 0, 0, 0, 0, 1779, 1780, 1781, 1782,
	0, 0, 0, 0, 0, 0, 1762, 1794, 0, 0,
	0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767,
	1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0,
	0, 0, 3162, 0, 0, 0, 0, 1779, 1780, 1781,
	1782, 0, 0, 1795, 0, 0, 1805, 1762, 4621, 0,
	0, 0, 0, 1784, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 1802, 0, 0, 0, 0, 0, 0, 1771,
	1772, 0, 0, 0, 1795, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 1784, 1786, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1777, 1802, 0, 0, 0, 0, 0, 0,
	1771, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 1755, 1778, 1787,
	1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 1791, 1785,
	0, 0, 0, 0, 0, 1796, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 1809, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767,
	1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0,
	3127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 0,
	1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0,
	0, 0, 0, 0, 0, 1779, 1780, 1781, 1782, 0,
	0, 0, 0, 0, 0, 1762, 0, 3227, 0, 1754,
	1755, 3226, 1787, 1788, 1789, 1798, 1799, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1785, 0, 0, 0, 0, 3098, 0, 1757,
	0, 0, 1795, 0, 0, 1805, 0, 0, 1804, 0,
	0, 0, 1784, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 1801,
	0, 1802, 0, 0, 1756, 0, 0, 0, 1771, 1772,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2662, 0, 3099, 0, 0, 0, 0, 1754, 1755, 0,
	1787, 1788, 1789, 1798, 1799, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 1791,
	1785, 0, 0, 0, 2661, 0, 0, 1757, 1779, 1780,
	1781, 1782, 1792, 0, 0, 0, 1804, 0, 1762, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 1795, 0, 0, 1805, 0,
	0, 1773, 0, 0, 0, 1784, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 1801, 0, 1802, 0, 0, 0, 0, 0,
	0, 1771, 1772, 0, 0, 0, 1778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 1780, 1781, 1782,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 1792, 1805, 0, 0, 0,
	0, 0, 0, 1784, 1786, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 1802, 0, 0, 0, 0, 0, 0, 1771,
	1772, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 1768, 1769, 1775, 1797, 1774, 1770, 1793, 1767, 1765,
	1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 1783, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 1755,
	0, 1787, 1788, 1789, 1798, 1799, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 1796, 0, 0, 0,
	1791, 1785, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 1792, 0, 0, 0, 1804, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 1794,
	0, 0, 0, 0, 1768, 1769, 1775, 1797, 1774, 1770,
	0, 1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 1780, 1781,
	1782, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 1784, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 1802, 0, 0, 0, 0, 0, 0,
	1771, 1772, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 1793, 1767,
	1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0, 0,
	0, 1754, 1755, 1777, 1787, 1788, 1789, 1798, 1799, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1785, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 1792, 1045, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 1780, 1781, 1782, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 1754, 1755, 0, 1787, 1788, 1789, 1798, 1799, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1785, 0, 1809, 1795, 0, 0,
	1805, 1757, 0, 0, 0, 0, 0, 1784, 1786, 0,
	1804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 1802, 1810, 0, 0,
	0, 0, 0, 1771, 1772, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 1793, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 1794, 0,
	0, 0, 0, 1768, 1769, 1775, 1797, 1774, 1770, 0,
	1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	1779, 1780, 1781, 1782, 0, 0, 0, 0, 1807, 0,
	1762, 0, 0, 0, 0, 0, 3233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 1784, 1786, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 1802, 0, 0, 0,
	0, 1778, 0, 1771, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 1754, 1755, 1796, 1787,
	1788, 1789, 1798, 1799, 1800, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1785,
	0, 0, 0, 3228, 0, 0, 1757, 0, 0, 1809,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 0, 3624, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 1807, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 1768, 1769, 1775, 1797,
	1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761,
	1763, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 1779, 1780, 1781, 1782, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 1754,
	1755, 0, 1787, 1788, 1789, 1798, 1799, 1800, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1785, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1795, 0, 0, 1805, 0, 0, 1804, 1809,
	0, 0, 1784, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 1801,
	0, 1802, 0, 0, 1756, 0, 0, 0, 1771, 1772,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 1768, 1769, 1775, 1797,
	1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761,
	1763, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 1780,
	1781, 1782, 1792, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 1755, 0, 1787, 1788, 1789, 1798, 1799, 1800,
	0, 0, 0, 0, 0, 1795, 0, 0, 1805, 0,
	0, 0, 0, 1791, 1785, 1784, 1786, 0, 3166, 0,
	0, 1757, 0, 0, 0, 1783, 0, 0, 0, 0,
	1804, 0, 1801, 0, 1802, 0, 0, 0, 0, 0,
	0, 1771, 1772, 0, 0, 0, 1778, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 1796, 1777, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	1779, 1780, 1781, 1782, 0, 3193, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767, 1765,
	1766, 1758, 1759, 1760, 1761, 1763, 1764, 1795, 1783, 0,
	1805, 0, 0, 0, 0, 0, 0, 1784, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 1801, 0, 1802, 0, 0, 0,
	0, 0, 0, 1771, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 1754, 1755, 0, 1787,
	1788, 1789, 1798, 1799, 1800, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 1791, 1785,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 1807, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 1768, 1769, 1775, 1797, 1774, 1770,
	0, 1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 1779, 1780, 1781, 1782, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 1754,
	1755, 0, 1787, 1788, 1789, 1798, 1799, 1800, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1785, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1795, 0, 0, 1805, 0, 0, 1804, 1809,
	0, 0, 1784, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 1801,
	0, 1802, 0, 0, 1756, 0, 0, 0, 1771, 1772,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 1768, 1769, 1775, 1797,
	1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761,
	1763, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 1780,
	1781, 1782, 1792, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 1755, 0, 1787, 1788, 1789, 1798, 1799, 1800,
	0, 0, 0, 0, 0, 1795, 0, 0, 1805, 0,
	0, 0, 0, 0, 1785, 1784, 1786, 0, 0, 0,
	0, 1757, 0, 0, 0, 1783, 0, 0, 0, 0,
	1804, 0, 1801, 0, 1802, 0, 0, 0, 0, 0,
	0, 1771, 1772, 0, 0, 0, 1778, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 1796, 1777, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	1779, 1780, 1781, 1782, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 1768, 1769, 1775, 1797, 1774, 1770, 0, 1767, 1765,
	1766, 1758, 1759, 1760, 1761, 1763, 1764, 1795, 1783, 0,
	1805, 0, 0, 0, 0, 0, 0, 1784, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 1801, 0, 1802, 0, 0, 0,
	0, 0, 0, 1771, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 1768, 1769, 1775, 1797, 1774, 1770,
	0, 1767, 1765, 1766, 1758, 1759, 1760, 1761, 1763, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 1768, 1769, 1775, 1797,
	1774, 1770, 0, 1767, 1765, 1766, 1758, 1759, 1760, 1761,
	1763, 1764,
}

var sqlPact = [...]int{
	360, -1000, -1000, -1000, -1000, 182, -1000, -1000, 180, 178,
	176, 175, 169, 166, 165, 163, 160, 159, 158, -1000,
	-1000, -1000, -1000, -1000, -1000, 157, -1000, -1000, 156, -1000,
	155, 151, 150, -1000, -1000, 149, -1000, 148, -1000, -1000,
	-1000, -1000, 145, 144, 143, 91574, 91027, 92114, 2269, 112248,
	98622, 2131, 82303, 111701, 81756, 111154, 2133, 8393, 110607, 2730,
	141, -1000, 110060, 139, 138, 135, -1000, 109513, -1000, 2031,
	-1000, 128, -1000, 3320, 66951, 127, 126, 124, 2150, 122,
	-1000, 121, 120, -1000, -1000, 116, -1000, 10168, 1584, -1000,
	115, 114, -1000, 4855, 96441, 112, 110, 2359, 109, 103,
	66404, 98, 97, 2284, 2791, -1000, -1000, 2090, -1000, -1000,
	95, 94, 93, 92, 87, 86, 85, 84, 83, 81,
	79, -1000, 78, 77, 76, 75, 73, -1000, 72, 71,
	70, -1000, 69, -1000, 68, 67, 64, 63, 62, 61,
	60, 56, 51, 43, 42, 38, 37, 36, 16037, -1000,
	-1000, 1965, 1692, 1684, 1677, 1671, 1659, 998, 35, 34,
	33, 32, 31, 30, 26, 23, 22, 20, 19, 18,
	17, 16, 15, 12, 11, 137, 10, 9, 8, 7,
	-2, -3, -4, 2310, -1000, 1569, 1118, 31808, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 118188, 112788, -8, -63, -10, -1000,
	3233, 794, 54883, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 293, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 495, 2092, 737, -1000, -1000, -1000,
	108973, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2268,
	-72, -1000, 1991, -1000, -1000, -1000, -1000, -1000, 736, -1000,
	2264, 233, 2222, -1000, -1000, -1000, 3266, 2425, 3710, 3704,
	3703, 3702, 3701, 117648, 1855, 3699, 2486, 3696, 3694, 3693,
	3691, 3690, 3689, 3688, -1000, 90480, 1035, 89933, 89386, 3295,
	108433, 88839, 107886, 75750, 46948, 1065, 3265, -1000, -1000, -1000,
	-1000, -1000, -1000, 112788, -1000, 1032, -1000, -1000, 3687, 3686,
	2093, 735, 98075, -1000, 1947, -1000, 891, 33530, -1000, 1331,
	-1000, 33530, 288, -1000, -1000, -1000, -1000, -1000, -1000, 3685,
	3684, 3683, 3681, 3678, -1000, -1000, 81209, 24868, 80662, 80115,
	107339, 24309, 88292, 87745, 3677, 3676, 3674, 3673, 106792, 75191,
	1031, 1439, -1000, -1000, -1000, -1000, -1000, -1000, -35, 72955,
	3451, 112788, -1000, 285, -1000, -1000, -1000, -1000, -1000, -1000,
	46362, 911, 45776, 859, 45190, 381, -1000, -1000, -1000, -1000,
	74632, -1000, 106245, 2411, 3671, 3669, 1141, 3668, 3171, 1852,
	3666, 1863, 1235, 3664, 3642, 3641, 3640, 3634, 3633, 3632,
	1499, 105698, 2891, 1533, 105151, 1720, 74073, 1029, 87198, 92114,
	2559, 104604, 1451, 1445, -1000, -1000, -1000, -1000, 2994, 2784,
	2782, 1254, -1000, -1000, -1000, -1000, 58173, 6767, 5026, -1000,
	-1000, 8782, 104057, 60958, 92114, 92114, -1000, -1000, -1000, -1000,
	-1000, 44604, 787, 44018, 927, -1000, -1000, 58730, 2844, -1000,
	-1000, -1000, -1000, 43432, 704, 42846, 926, 112788, -1000, 2885,
	1932, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2198, 1650, 3466,
	2658, 73514, 2066, 1353, 3229, 2993, 2989, 1517, 2977, 3631,
	2574, 2976, 2973, 2968, 2952, 2949, 1648, 2523, 305, 31222,
	2877, 1737, 42260, 1567, 1461, 2947, 2941, 3481, 1976, 2017,
	2051, 79568, 3630, 3629, 3193, 2937, 2926, 2707, 2919, -1000,
	2838, 1493, -1000, -1000, -1000, -1000, 1428, -1000, -1000, -1000,
	-1000, 82843, -1000, -1000, 1290, -1000, -1000, 1290, -1000, -1000,
	-1000, -1000, -1000, 1399, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1569, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1694, -1000, 2030, -1000,
	-1000, 2443, 3210, 3210, 3210, 3264, 452, 445, -1000, 137,
	-1000, -1000, 125055, -1000, -1000, 47522, 47522, 47522, 47522, 47522,
	47522, 47522, 47522, 2140, -1000, 734, -1000, -1000, 771, -1000,
	732, 670, 609, -1000, -1000, -1000, -1000, -1000, -1000, 731,
	-1000, -1000, -1000, -1000, -1000, -1000, 3451, -1000, 27718, -1000,
	-1000, -1000, 387, 730, 47522, -1000, -1000, 3507, 3504, 990,
	-1000, 284, 905, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2884, 729, 727, -1000, 726,
	724, 723, 721, 720, -1000, -1000, -1000, 717, 715, 711,
	708, 707, 702, 701, 700, -1000, 2048, -1000, -1000, -1000,
	-1000, -1000, -1000, 653, 650, 650, 650, -1000, 1021, -1000,
	-1000, -1000, 307, 647, 279, 644, 643, 642, -1000, 699,
	693, 692, 690, 687, 684, 683, 680, 678, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1020, -1000, -1000, -1000, -1000,
	-36, 112788, -1000, 495, -36, -1000, -1000, 675, -1000, 35838,
	35838, 35838, -1000, -1000, 2263, 47522, -1000, 2456, -1000, -30,
	-30, 845, 56518, -1000, 53768, 845, 523, 785, 62595, -1000,
	2836, -1000, -1000, 674, 282, -1000, -1000, -1000, -1000, 25425,
	2829, 112788, 112788, 92114, 92114, 92114, 3628, 3100, 47522, -1000,
	-1000, 70754, 112788, 92654, -1000, -1000, 3397, 67491, 70214, 112788,
	2883, 69674, 3627, -1000, -1000, -1000, -1000, -1000, 3073, 3626,
	3625, 3624, -1000, 112788, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 210, 3071, -1000, -1000, 95894, 210, 3069, -1000, 210,
	3042, -1000, 95354, -1000, -1000, 2245, 3040, -1000, -1000, 218,
	3038, -1000, -1000, -1000, 215, 3036, -1000, -1000, 278, -94,
	3034, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 125055, -1000, -1000, -1000, 69127, -1000, 3196,
	-1000, -1000, 112788, -1000, 47522, -1000, 3396, 1901, 76854, 3312,
	-46, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2472, 2442,
	1110, 2296, -1000, 3121, 1453, -1000, 33530, 3159, -1000, -1000,
	-1000, 258, 25425, -1000, -1000, -1000, -1000, -1000, -1000, 2340,
	3033, 1522, -1000, 2291, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2111, 3031, -1000, 1955, 3029, 2096, -1000, -1000,
	2317, -1000, 3186, -1000, -1000, 1952, 3025, -29, -1000, -1000,
	2260, -1000, -1000, -1000, -1000, -1000, 1931, -1000, 976, 3024,
	-1000, 86651, 60401, 58730, 72955, -40, -1000, -1000, -1000, -1000,
	-159, -1000, 23750, 125055, -1000, -1000, -1000, -1000, 1785, 125055,
	923, -1000, -1000, 3023, -1000, 125055, 839, -1000, -1000, 3013,
	-1000, 2881, -1000, -1000, 2371, -1000, -1000, 3622, -1000, -1000,
	3621, -1000, 3619, 3618, 3617, -1000, 1734, 1987, 3616, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 86111, 2261, -1000,
	-1000, 85017, 2880, -1000, 2367, 3311, -1000, 85564, 1026, -1000,
	976, 2365, -1000, 94814, 935, 2362, -1000, 3615, 3278, 2593,
	976, 2361, -1000, -1000, -1000, -1000, -1000, 818, -1000, 64227,
	-1000, 64227, -1000, 1623, -1000, 117108, -30, 92114, 3451, -1000,
	-58, -1000, -1000, -1000, 794, -1000, 57626, -1000, 57626, 97528,
	76307, 964, 775, 65857, 125055, -1000, -1000, -1000, -1000, 125055,
	-1000, -1000, -1000, -278, 2657, -1000, 76307, 59844, 125055, -1000,
	-1000, -1000, -1000, 125055, -1000, -1000, -1000, 76307, 85017, -1000,
	103510, 84477, -1000, -1000, 1462, 2511, -1000, -1000, -1000, 76307,
	1293, 76307, 76307, 76307, -1000, 102963, -1000, -1000, 2082, 1489,
	3188, 2081, 92114, -1000, 1903, -1000, -1000, -1000, 3214, 112788,
	-1000, -1000, 2878, -1000, 68580, 94274, -1000, 93734, -1000, 93194,
	-1000, 92114, -1000, 92114, -1000, 3614, 3611, 3610, -1000, -1000,
	3603, -1000, 3598, 3205, -1000, 125055, 3199, -1000, 3596, 3297,
	2877, 125055, -1000, 3006, 1676, 1673, 112788, -1000, -1000, 112788,
	-1000, 112788, -1000, -1000, -1000, 1541, -1000, -1000, 2470, -1000,
	-1000, -1000, -1000, 92114, 1431, -1000, -1000, -1000, -1000, -1000,
	-1000, 2933, 3592, 1761, -1000, 1805, -1000, 2824, 3238, -1000,
	1460, 1745, -1000, -1000, 229, -1000, -1000, -46, -1000, 116568,
	-1000, 2443, -1000, 112788, -1000, 2418, 2861, 2876, 1590, 2242,
	2569, -1000, 41674, 2535, 50966, 2287, 137, -1000, -1000, 137,
	137, 32956, -1000, -1000, 67491, 67491, 25425, 1417, 47522, 47522,
	47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522,
	47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522,
	47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522,
	47522, 47522, 47522, 47522, 2046, 47522, 1394, 47522, 47522, 47522,
	47522, 1547, -1000, -1000, 1963, 524, 2037, 670, -1000, -1000,
	-1000, 3438, 3438, 3438, 1024, 1024, 1024, 125420, 125420, 605,
	3591, 771, -1000, 47522, -1000, 91, 57065, 47522, 25984, -1000,
	445, 11555, 2457, -1000, 444, 26570, -1000, -1000, -1000, 27718,
	609, 41088, 47522, 1009, 125055, -1000, -1000, 1458, 3467, 23192,
	2899, 2697, 669, 851, 849, 30636, 30050, 29464, 28878, 709,
	47522, 47522, 47522, 47522, 47522, 47522, 47522, 47522, -1000, -1000,
	3474, -1000, 3467, -1000, -1000, -1000, -1000, 3467, 1411, 1405,
	3467, -1000, 3467, 3467, 9073, 9073, 40514, 39928, 39342, 51540,
	38756, 47522, 28292, 38170, 37584, -1000, 112788, -36, 3395, 47522,
	217, -1000, 123406, -1000, 217, 217, 668, -60, 125055, 2661,
	2661, 55428, 2374, 2158, 2158, 2158, -1000, 845, 18699, 845,
	101876, 2185, 845, 845, 254, 280, 443, 53223, 2456, 101876,
	756, 662, -11, -12, -13, -1000, -1000, -16, -18, -1000,
	-1000, 92114, 661, 25984, 25425, 251, 2005, -66, 2538, 2534,
	2533, -1000, 2532, -1000, 1778, -67, 1390, 92114, 112788, 3589,
	-129, -1000, 4941, -75, -1000, 1302, 246, 3467, -1000, -1000,
	-1000, -1000, -1000, 3584, 3582, -1000, 1017, 659, 655, 406,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 653, 650,
	650, 650, -1000, 307, 647, 279, 644, 643, 642, -1000,
	-1000, -1000, -1000, -1000, 2819, 92114, 112788, 3579, -159, 92654,
	-97, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 112788,
	-1000, -1000, -1000, 3572, -1000, 92114, -1000, -1000, 92114, 210,
	3012, -1000, 92114, -1000, 92114, 209, 3008, -1000, -1000, 112788,
	-1000, 92114, 92114, -1000, 112788, 112788, 112788, 76307, 76307, 220,
	-1000, 92114, 865, -77, 1152, -46, -1000, -1000, -1000, 1290,
	-1000, 1889, -1000, -1000, -1000, -1000, -1000, -1000, 1465, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 990, -1000, -1000,
	-1000, -1000, -1000, -1000, 3462, 3456, -38, -1000, -1000, 25425,
	-1000, -47, 1791, 1982, 1378, -1000, 79021, 2300, 3194, 3571,
	2584, 3180, 1614, -1000, 1540, -1000, 3279, 82843, 3326, 3345,
	1299, -1000, 2818, -1000, -1000, 889, 1757, 1733, 1374, 1373,
	82843, 1955, -1000, 67491, -1000, 2581, 3261, 1361, 1356, 1361,
	1361, 1354, -1000, 82843, 1728, 1372, 1369, 1367, 1937, 1917,
	-1000, -1000, 2026, -1000, 1338, 1336, 807, 1908, -1000, -49,
	3322, 3336, 1298, -1000, 2817, 1327, -1000, -1000, -1000, 3258,
	92114, 25425, 1553, 1552, 1542, 1727, 1325, -39, -1000, 3319,
	1322, 1310, -1000, 7166, -1000, 76307, 2072, 3003, 2656, 841,
	2653, -1000, -1000, -1000, 841, -40, 72955, 112788, 243, -1000,
	91, 47522, 47522, 91, 47522, 91, 3294, 3000, -1000, -1000,
	-1000, -1000, -1000, 3565, 1957, 2485, -1000, -1000, 641, 2360,
	2814, 112788, 2549, -41, 92114, -1000, 68040, 2998, 71301, 1955,
	2358, -1000, -1000, 83930, -1000, 2995, 495, 2355, -1000, 697,
	3564, 2990, -1000, 116028, -1000, 3196, 1427, 2983, 1089, 772,
	3394, -1000, 772, 64767, -1000, 112788, -1000, -30, 273, 77941,
	-82, -85, 441, -1000, 102423, 112788, 1085, 78481, 112788, 3148,
	973, 58730, -1000, 58730, -87, -278, 2650, 1530, 964, 964,
	841, -1000, 841, -1000, 92114, 2872, -1000, -1000, 76307, 964,
	964, 964, -1000, -1000, -1000, -1000, 3563, 3562, 3559, 3553,
	-1000, -1000, 975, 92114, 112788, 92114, -1000, 239, -1000, 112788,
	-1000, 112788, 112788, 92114, -1000, 975, 112788, 975, 112788, 975,
	112788, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 91, 47522,
	-1000, -1000, 3552, 1653, -1000, 2867, -1000, 2865, -1000, 14,
	-1000, -1000, -1000, -1000, -1000, -1000, 2001, -1000, -1000, -1000,
	-1000, 92114, 92114, 92114, 92114, 112788, 3134, -1000, 112788, 3132,
	92114, -1000, -1000, 82843, -1000, 2418, 2861, -1000, -1000, -1000,
	-1000, -1000, -1000, 1396, 2227, -1000, 2510, -1000, 1564, -1000,
	-1000, -1000, 125055, 52097, -1000, -1000, 125055, 1822, -1000, 50392,
	49818, -1000, -1000, 1708, 92114, 2564, -1000, 2564, -152, -1000,
	123278, 2509, 92114, -1000, -1000, -1000, -1000, -1000, 887, 629,
	629, 1225, 1225, 1225, 1225, 3308, 1157, 6855, 1063, 7480,
	7480, 5649, 5649, 5649, 5649, 5649, 7480, 466, 1024, 1024,
	466, 466, 466, 466, 466, 1024, 1024, 1024, 7480, 7480,
	7480, 1024, 125420, 125228, 7941, 47522, 47522, 1309, 1954, 524,
	7603, 47522, 8520, 8520, 8520, 8520, -1000, 1841, -1000, -1000,
	-1000, -1000, 2802, 640, 51540, 51540, -1000, -1000, -1000, -1000,
	27144, 47522, -1000, -1000, -1000, -1000, 36998, -1000, -1000, 122646,
	-322, 440, -1000, 216, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 439, -146, -17,
	-1000, 47522, 47522, 47522, 434, -1000, 211, 47522, 112788, -1000,
	119278, 754, -205, -1000, -92, 1418, -1000, 47522, -1000, -1000,
	1241, -1000, 1239, 1238, 1236, -1000, 637, 433, -1000, 206,
	-1000, 2143, 636, 635, 47522, -1000, -1000, -1000, -1000, -1000,
	122266, -1000, -1000, 122225, -1000, -1000, 121845, -1000, -1000, 121804,
	-1000, -1000, -1000, 124790, 17988, 17796, 17170, 10746, 16577, 15815,
	-107, 432, -114, 430, 880, 876, 428, 427, 426, -115,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -116, 422, -1000, 2799, -146, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 420, -1000, 419, -1000, 124598,
	-146, 417, 6015, -1000, 51540, 51540, 51540, 51540, -1000, 416,
	-1000, 123105, -1000, 124425, 36424, 36424, 36424, 410, 124160, 47522,
	-146, -117, -1000, -122, -1000, -1000, 549, -123, 1004, 35838,
	54333, 25425, -1000, 1004, 1004, 47522, -1000, 47522, 2524, -1000,
	-1000, -1000, -1000, 2520, 1812, 2661, 55428, -1000, -1000, -1000,
	-1000, 101876, -1000, 3451, 2645, -1000, 101876, -1000, -1000, 112788,
	495, -1000, 101876, 101876, 25425, 845, -1000, 845, 101876, 671,
	-1000, -1000, -1000, -1000, -1000, 407, 61503, -17, 201, 25425,
	976, -1000, -1000, 2635, 2635, 2635, 2635, -1000, -1000, 112788,
	1234, -43, -219, -1000, 3414, -1000, 2063, -1000, 67491, -1000,
	769, 1125, 25425, -1000, -1000, -1000, 634, -1000, 3467, 3467,
	-1000, 3467, 112788, 2790, 152, -1000, 123, 71301, 71301, 3550,
	-1000, -1000, 210, -1000, 92114, 210, 210, -1000, 92114, 92114,
	2245, -1000, 218, -1000, 215, -1000, -1000, -94, -1000, 997,
	33530, -1000, 1290, -1000, -1000, 1562, -1000, 1972, -1000, 1214,
	-1000, -1000, -1000, -1000, 33530, -1000, 2343, 112788, 112788, 92114,
	-1000, 112788, -1000, 2135, 71301, -1000, 2353, 115488, 2349, 67491,
	112788, -1000, -1000, 633, 898, 2508, 2505, 1079, 112788, 112788,
	2503, 114948, 114408, -1000, 3549, 112788, 2040, 47522, 3254, 2238,
	2241, 91, 91, -1000, 91, 91, 91, -1000, 632, 1305,
	92114, 92114, 112788, 71301, 92114, 2053, -1000, -1000, -1000, -1000,
	-1000, 83383, -1000, -1000, 3470, 3469, -1000, 1361, -1000, -1000,
	-1000, 1361, 1955, 1986, 112788, 71301, 92114, 71301, 112788, 112788,
	-1000, 1724, 112788, 1410, -1000, 807, 2085, 91, 91, -1000,
	91, 91, 91, 618, 25425, 2014, -1000, 2822, 112788, 3502,
	113868, 3500, 112788, 112788, 112788, 71301, 3215, 112788, 112788, 71301,
	7166, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 72415, 1067, 976, 1717, 1233, 1232, 82843, 58730,
	971, 58730, 2601, -1000, -1000, 22634, -1000, 125055, 125055, -1000,
	125055, -1000, 68040, 112788, -1000, 1025, 112788, 78481, 960, 2975,
	63687, -159, 964, 76307, 92114, -41, 2549, 112788, -1000, -1000,
	1955, 2971, 495, 2352, -1000, 76307, 3393, 2969, 614, 3548,
	3545, -1000, 92114, 2254, 2351, -1000, -1000, 113328, 2986, 807,
	112788, 1004, 55428, 1929, -1000, 62050, 1045, 112788, 1839, 117,
	-1000, -1000, -1000, 6, 112788, -1000, 783, -1000, -1000, 273,
	273, 964, -172, 612, -1000, 834, 830, 59287, 76307, -131,
	-1000, -1000, -1000, -1000, 2349, 92114, 112788, 1278, 2592, 112788,
	-132, -1000, 199, 610, -1000, 2607, -1000, -278, -1000, 973,
	58730, 2779, 2777, -1000, -1000, 995, -1000, 1459, 964, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-31, 112788, -159, -159, -42, -43, -1000, 975, -1000, 975,
	-1000, 975, -1000, 125055, -1000, -1000, 1642, 1636, 112788, -1000,
	25425, 112788, 92114, 25425, 92114, 2858, 2854, -1000, -1000, -1000,
	112788, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1099, -1000,
	1822, 2226, -1000, 609, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2448, -1000, -45, 32956, 847, -1000, -1000,
	92114, -32, 47522, 47522, 6622, 6041, 47522, 51540, 51540, -1000,
	47522, 5097, -1000, -1000, -1000, -1000, -1000, 2774, 608, 47522,
	67491, 5399, 5351, -1000, 395, 15191, 466, -1000, 47522, -1000,
	548, -1000, 392, 35264, -1000, 123707, -50, -133, -1000, 19270,
	-146, -134, -1000, -1000, 765, -1000, 2948, -1000, 47522, 123980,
	2391, 2036, 1857, 1654, 3467, 3494, 22076, -1000, 65312, 1007,
	2206, 121424, -1000, -1000, -1000, -1000, 67491, 67491, 47522, 47522,
	-1000, 47522, 47522, 47522, -1000, -1000, -1000, 3467, 883, -1000,
	-1000, -1000, 883, -1000, -1000, 1361, -1000, 1361, -1000, 47522,
	-1000, -1000, 2769, 47522, -1000, 67491, 67491, 51540, 51540, 51540,
	51540, 51540, 51540, 51540, 51540, 51540, 51540, 51540, 51540, 51540,
	51540, 51540, 51540, 51540, 51540, 51540, 51540, 2481, 51540, 3433,
	3433, 3433, 1480, -1000, 2776, 2769, 47522, 47522, 67491, 389,
	388, 385, -1000, 47522, -146, -1000, -1000, 6910, 607, -1000,
	2356, -1000, 2689, -1000, 47522, -1000, -276, -1000, 2456, -1000,
	-1000, 2689, 2689, -140, 125055, 55428, 55428, -1000, 604, 47522,
	2516, -1000, -1000, 752, -320, -1000, 829, -1000, -1000, -1000,
	-1000, -1000, 495, -1000, -1000, -1000, 198, 101876, 101876, 750,
	-1000, -141, -1000, -1000, -147, -1000, 3390, 378, 25425, -1000,
	1004, 2606, -1000, -1000, -1000, -1000, -1000, -1000, -159, 112788,
	112788, 2220, 3493, -1000, 3468, 763, 749, 197, 3467, 372,
	371, 370, -159, 112788, 112788, 112788, -1000, -1000, -1000, -1000,
	210, -1000, -1000, -1000, 209, -1000, -1000, -1000, -1000, 2595,
	-1000, -46, -1000, -1000, -1000, 47522, -1000, -1000, 3192, 1231,
	1220, -1000, -1000, -1000, -1000, 2772, -1000, 2965, -1000, 2346,
	-1000, 1052, -1000, 1833, -1000, 47522, 603, 2583, 602, 598,
	3542, 2098, 3541, 1084, 2963, 2245, 2961, 2245, -1000, -1000,
	-1000, 873, -1000, 125055, 2238, -1000, 588, 585, -1000, -47,
	1634, 1948, 1218, 984, -1000, -1000, -1000, -1000, 47522, 47522,
	101336, -1000, 479, 3186, -33, -1000, -1000, -1000, 1714, 1215,
	1213, -1000, -1000, -1000, -1000, 1955, 1695, 1209, 1205, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 982, -1000, 2915, 2914,
	874, 112788, -1000, 980, -1000, -1000, -1000, -1000, 47522, -1000,
	-49, 1198, 3324, 2345, 92114, -1000, 2245, 2960, 1197, -1000,
	1196, -1000, -1000, -1000, 3318, 3317, 1210, -1000, -1000, -1000,
	-1000, -1000, 71858, -1000, 112788, 71301, 92114, 1881, 841, -1000,
	2459, 841, 971, 2762, -1000, 2546, 978, 92114, 3539, 368,
	-149, -51, 67491, 3388, -1000, 2239, 551, 92114, 861, -1000,
	3451, -1000, -1000, -1000, 977, -1000, 3310, 92114, 3387, 2957,
	976, 91, 92114, 3480, -1000, -1000, 3380, 92114, 2945, 2252,
	2337, 2482, 807, 77401, 976, 2204, -78, -1000, 1839, 34678,
	3184, -158, -1000, -1000, -1000, 1004, 64767, 55428, 47522, 3538,
	-160, -1000, -1000, -1000, -1000, -1000, 99169, 99169, 76307, 76307,
	76307, 964, 112788, 112788, 78481, -1000, -1000, 582, 112788, 112788,
	581, -1000, 112788, 112788, 3536, 76307, -52, 580, -1000, 827,
	826, 824, -1000, -1000, -1000, -1000, -1000, -1000, 973, -1000,
	-278, 58730, 91, -1000, 2218, 92114, -1000, 21518, -1000, -1000,
	-1000, -1000, -1000, -1000, 975, -1000, -1000, 2089, 2277, 2089,
	1828, 1825, -1000, -1000, 2225, -1000, -1000, -1000, -1000, 2599,
	3208, 25425, 3305, 8520, 47522, 47522, 601, 4764, 576, 8520,
	47522, 47522, 67491, 6166, -173, 47522, 47522, -1000, 47522, 748,
	125055, -1000, 3489, 47522, 364, 361, -1000, -1000, -1000, 3464,
	-1000, -1000, -1000, 125055, 47522, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 357, -1000, 193, -1000, -1000, -1000, 118728, -1000,
	47522, 354, 3251, -1000, 353, 352, 12516, 9994, 121383, 121003,
	120962, 347, -1000, -1000, 345, 344, 125055, 2776, 125055, -1000,
	-1000, 907, 907, 1333, 1333, 1333, 1333, 3433, 473, 330,
	965, 409, 409, 409, 925, 1480, 1480, 409, 409, 409,
	1480, 2741, 2480, 578, 5195, -1000, -1000, 125055, 125055, 341,
	-1000, -1000, -1000, -146, 335, 6910, -1000, 2648, 3250, 125055,
	-1000, 55428, 2648, 2648, -1000, -1000, 1812, 112788, 125055, 55428,
	-1000, 2645, -1000, 19839, -1000, 25425, -1000, -1000, -1000, -1000,
	3451, -1000, 61503, -1000, 577, -1000, 153, -1000, 2606, -1000,
	823, -1000, -1000, 76307, 76307, -159, -167, -1000, -1000, 740,
	3535, 760, 25425, 334, -1000, -1000, -1000, -159, -159, -159,
	-1000, -1000, -1000, 3146, 125055, 112788, 112788, 1543, 100796, 112788,
	2943, -1000, 2088, -1000, 1079, 120582, 55973, -1000, 55973, 112788,
	-1000, -1000, -1000, 1879, 1589, 3534, 1128, -1000, 3216, 112788,
	-1000, 112788, -1000, -1000, -1000, 112788, 112788, 92114, 112788, -1000,
	71301, 2924, -174, 125055, -53, -1000, 822, -1000, 1357, -1000,
	20960, 112788, 71301, 92114, 112788, 71301, 92114, 2119, -1000, -1000,
	2913, -1000, 2923, -176, 25425, -1000, 3487, 3485, 2942, 3225,
	-1000, 112788, 3484, 112788, 92114, 3145, -1000, -1000, -1000, -1000,
	-1000, 1666, 1193, 1192, 971, -54, 575, -1000, 821, -1000,
	-1000, 820, -1000, 971, -1000, 76307, 58730, 3533, 495, -1000,
	2578, -1000, 96981, 2292, 91, -1000, 3531, 99716, 573, -1000,
	2214, -1000, 710, -1000, 2461, 71301, 1955, 91, 92114, -1000,
	-1000, 495, 331, -56, -1000, 2979, 1075, 25425, 92114, 2935,
	2484, 807, 77401, -1000, 1427, 2569, -1000, -73, -1000, 656,
	91, 2204, -1000, -78, 125055, -1000, 819, -1000, -182, -1000,
	-1000, 326, -1000, 3144, 3143, -1000, 2714, 55973, 561, 556,
	112788, 3140, -1000, -1000, -185, 3095, 3095, 76307, 58730, 76307,
	-1000, 973, 841, -1000, 2354, -1000, -1000, -1000, -1000, -1000,
	25425, 1721, -1000, 555, 553, -1000, -1000, -1000, -1000, 3208,
	8520, 8520, 47522, 47522, 47522, 8520, 6166, -190, -1000, 8520,
	8520, -146, -1000, -1000, 123707, -1000, -1000, -1000, 125055, -1000,
	20402, 2108, -1000, 120541, -1000, 32956, -1000, -1000, 47522, 47522,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 51540, 2739,
	552, 67491, -1000, -1000, 309, 1001, 47522, 49244, 2456, 1001,
	1001, -1000, -191, -1000, -1000, -1000, 3451, 153, -1000, -1000,
	3530, 25425, -1000, 76307, -1000, -1000, 3525, 759, -1000, 3524,
	-1000, -1000, -1000, -1000, -1000, 2647, 3359, -1000, 1905, -1000,
	112788, -1000, 112788, -1000, 25425, 112788, 2719, 1277, -1000, 898,
	2502, 550, 51540, 92114, 600, -1000, 3408, 2680, -192, -1000,
	112788, 47522, 112788, -193, -200, 2307, -1000, -1000, 1266, 47522,
	-1000, -1000, -1000, 67491, 547, 2245, 2245, -202, -208, -1000,
	-1000, -1000, 47522, 1189, 112788, 34104, -1000, 3523, 3186, -1000,
	-1000, -1000, -1000, -1000, -1000, 112788, -1000, 47522, 1187, -1000,
	-1000, -1000, 3483, 2245, 25425, 2245, -1000, 2245, 3225, 1115,
	112788, 71301, 92114, -1000, 2408, 2408, 76307, 58730, -1000, -94,
	971, -1000, 3358, 2573, 3521, -1000, -1000, -1000, -1000, 2500,
	-1000, -1000, 112788, 2498, 967, -1000, -210, -1000, 815, 813,
	78481, 960, 877, -1000, -99, 528, -1000, 810, -1000, -1000,
	-1000, -1000, 495, 3357, -1000, 3482, 527, 526, 112788, 2251,
	525, 25425, 3182, 807, 77401, -1000, 2986, 1839, -1000, 2313,
	112788, 3178, -1000, 2569, 524, -1000, 964, 522, 521, 2507,
	2507, -213, 55973, 55973, -216, 518, 964, -1000, -218, -1000,
	-1000, -1000, -1000, -1000, -104, -1000, 897, 871, -1000, -1000,
	92114, 92114, 47522, 47522, -1000, 8520, 8520, 8520, -1000, 299,
	-1000, -1000, 2204, 3246, -1000, -109, 120161, 120120, 6738, 51540,
	67491, -221, -1000, -1000, 112788, 125055, -110, -1000, 125055, 517,
	516, 436, -1000, -1000, -1000, 630, -1000, -1000, -1000, 3520,
	-1000, 100256, 112788, -1000, -1000, 1544, -1000, -1000, -1000, 112788,
	2331, -1000, -1000, -1000, 1078, 47522, 5195, 511, 47522, -1000,
	3356, -1000, 2570, 2754, 1926, 55973, -1000, 3208, -1000, 119740,
	-1000, 1060, 1884, -1000, -1000, -1000, 125055, 3225, 55973, -1000,
	-1000, 509, 507, 125055, 506, 809, 2738, -1000, -1000, -1000,
	-1000, 125055, 500, 3324, -1000, -1000, -1000, -1000, 2245, 92114,
	-1000, -1000, -1000, -1000, -223, -1000, -1000, 1953, 91, 2087,
	2643, -1000, 2292, 499, -1000, -1000, 2231, 2548, -1000, 99716,
	33530, 33530, 297, 3355, 877, -1000, 3434, -1000, 3119, 3119,
	47522, 3350, 91, -1000, 3480, 55973, -1000, 92114, 55973, 2250,
	2026, 2463, 77401, -1000, 2482, -1000, -1000, -224, 112788, 1839,
	-1000, -1000, 76307, 76307, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1060, -226, -229, -1000, 76307,
	-1000, -1000, 2354, -1000, 112788, -1000, 112788, -1000, -1000, -231,
	-232, -1000, 2067, 47522, 32956, -1000, -1000, 6738, -234, -1000,
	-143, -1000, 3347, 49244, 3518, 3515, 3514, -1000, -1000, -1000,
	1893, -1000, -1000, -1000, 2932, 2684, 119699, 2436, 112788, 119319,
	-1000, 2734, -1000, -1000, 2573, 498, -1000, -1000, -1000, -1000,
	847, 112788, 2573, 2676, 92114, 1077, -237, 2089, 2089, 47522,
	32382, 2118, 47522, -1000, -1000, 3225, -1000, 2724, 3453, -1000,
	960, -1000, 2116, 112788, -1000, 3209, -1000, 3139, -1000, -1000,
	-1000, 2578, 91, -1000, -1000, -1000, -239, 125055, 91, -1000,
	295, -240, 1075, -246, 92114, 1950, -1000, 807, -1000, 2484,
	1004, -1000, -1000, -247, -253, 1926, 1060, 2085, -254, -1000,
	-256, -261, -1000, -1000, 274, 48670, 48670, 48670, -146, -152,
	-1000, 112788, 496, -1000, -1000, -1000, -1000, -1000, 2908, 970,
	-1000, 2243, 1912, -15, 1088, -1000, -1000, 2085, 112788, -1000,
	-1000, -1000, 969, 495, -1000, 47522, 1060, -262, -1000, 1044,
	-263, -1000, 1042, -264, -1000, 2737, -1000, -269, 2245, 968,
	3289, -1000, -1000, -1000, 2231, 92114, -275, -1000, -1000, 2409,
	-1000, 2573, 967, -1000, -1000, -1000, 1060, 493, 1926, 488,
	1511, 807, -1000, -1000, 1361, 3182, 3094, 964, 964, 2573,
	1926, 910, -1000, 964, -1000, -1000, -1000, 2939, -1000, 52654,
	2237, 1810, 122687, 2939, 2939, -1000, -1000, 112788, 3274, -1000,
	2249, 2247, 1495, -1000, -1000, -1000, -1000, -1000, -1000, 2680,
	-280, 3273, 2436, 125055, 2573, -1000, 2089, 2640, -1000, 2089,
	2731, -1000, 2095, -1000, -1000, -1000, 1741, 3432, 2446, 486,
	-1000, 112788, 1769, 1752, 3513, 2087, 2231, 1926, 55973, 2573,
	55973, -1000, -1000, 112788, -1000, 2026, 1330, -1000, -1000, 2085,
	2573, 1004, 485, -1000, -1000, 1832, 3341, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 806, -1000, 3114, -1000, 1096,
	2091, 2091, 1004, -1000, 800, 2243, -1000, -1000, 484, -1000,
	481, -1000, 2210, -1000, -1000, -1000, -1000, 112788, -1000, -1000,
	3459, -1000, 960, -1000, 2573, -282, 2085, -285, -1000, -159,
	1950, -1000, 1576, 910, 2085, -1000, 1804, -1000, -1000, 2167,
	48096, 47522, -1000, 3418, -1000, -1000, 2522, -1000, -1000, 47522,
	2680, 47522, 47522, 63142, -290, -1000, 2231, 2085, 1060, 910,
	1926, 1511, 64767, 1004, 910, -1000, -1000, -1000, 125055, -1000,
	-1000, -1000, 125055, -1000, -295, -303, -172, 99169, 2213, 2446,
	910, 1926, 1004, 2573, -1000, -274, -1000, 1004, 2085, 1179,
	-305, -1000, -1000, -1000, -1000, 1004, 2573, -1000, 2085, -1000,
	-1000, -1000, -1000, 470, -1000, -1000, 2085, 910, 47522, 910,
	1004, -310, 1004, -1000, 2085, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4356, 4351, 4349, 4347, 4344, 4342, 4341, 4340, 4339,
	4338, 4337, 4329, 4324, 4318, 4314, 4308, 4304, 4303, 4299,
	4296, 4295, 4294, 4292, 4290, 4289, 4287, 4286, 4285, 4283,
	4282, 4279, 4278, 4277, 4276, 4274, 4273, 4272, 4271, 4270,
	4269, 4268, 4267, 4266, 4265, 4264, 4263, 4262, 4261, 4260,
	4255, 4254, 4253, 4250, 4248, 4247, 4245, 4244, 4243, 4242,
	4241, 4238, 4237, 52, 4232, 4230, 4229, 4227, 4226, 4225,
	4223, 4218, 4217, 4216, 4214, 4210, 4209, 4208, 4202, 4199,
	4198, 4197, 4196, 4195, 70, 4194, 261, 4190, 4188, 4180,
	4178, 4175, 4174, 4172, 4171, 4170, 4169, 4167, 4166, 260,
	4162, 113, 154, 4161, 4160, 3718, 4159, 4158, 259, 4157,
	4154, 4151, 4148, 264, 4147, 4146, 4144, 4143, 4140, 4139,
	4136, 4135, 4134, 4133, 4132, 89, 150, 4131, 4130, 1184,
	4129, 4128, 4127, 4125, 4124, 4123, 4119, 4118, 4117, 4116,
	241, 4115, 258, 4114, 4113, 4111, 4110, 4109, 4107, 4106,
	4105, 4104, 4103, 4102, 4100, 4095, 4093, 4091, 4090, 4088,
	4081, 4079, 4077, 4076, 4075, 4073, 4072, 4071, 4070, 4069,
	4068, 4067, 4065, 4064, 4059, 4051, 4049, 4048, 4047, 4045,
	230, 267, 180, 4044, 4041, 254, 252, 4040, 4038, 4037,
	4034, 4032, 134, 6, 46, 4031, 4029, 90, 82, 80,
	97, 98, 100, 4028, 110, 4021, 126, 59, 4020, 15,
	2, 161, 231, 12815, 226, 4018, 4016, 4013, 229, 185,
	4005, 227, 4003, 4001, 4000, 3999, 3996, 72, 53, 175,
	173, 167, 163, 1001, 3994, 153, 108, 77, 56, 43,
	9, 71, 202, 21, 3992, 246, 8, 124, 1, 39,
	3990, 3989, 3986, 3984, 3599, 132, 3981, 251, 236, 162,
	3977, 3975, 3974, 320, 3971, 3968, 49, 3965, 181, 107,
	118, 31, 120, 3964, 145, 28, 3963, 240, 78, 3957,
	159, 96, 83, 12321, 11661, 3956, 109, 66, 122, 3954,
	217, 168, 194, 128, 152, 158, 198, 204, 199, 164,
	191, 3952, 239, 3948, 3383, 74, 176, 148, 5911, 3947,
	3946, 3942, 85, 186, 94, 3940, 3939, 73, 11, 14,
	4, 7, 127, 22, 20, 16, 3938, 25, 117, 47,
	32, 3935, 24, 3932, 3929, 3928, 3927, 3923, 40, 170,
	3921, 262, 3915, 105, 54, 41, 3913, 30, 210, 3911,
	212, 119, 3909, 3907, 244, 197, 174, 3906, 68, 221,
	3905, 3903, 3900, 3899, 3898, 129, 3, 121, 3897, 3896,
	139, 3895, 50, 228, 190, 3894, 63, 3892, 3890, 166,
	106, 136, 253, 133, 220, 111, 216, 177, 222, 3888,
	3887, 3886, 178, 3882, 3881, 211, 146, 3880, 3879, 238,
	268, 92, 48, 86, 224, 81, 183, 151, 3877, 189,
	3876, 3875, 263, 169, 208, 12, 17, 91, 130, 3874,
	5, 223, 149, 218, 115, 3873, 6873, 200, 2590, 3872,
	3871, 140, 116, 76, 125, 147, 248, 104, 3870, 3869,
	2946, 3868, 3867, 3864, 3863, 179, 3862, 3861, 3859, 143,
	157, 207, 3858, 95, 69, 51, 27, 112, 237, 266,
	103, 213, 172, 242, 3857, 3856, 3852, 187, 3850, 84,
	123, 155, 195, 232, 55, 3849, 255, 3848, 138, 1699,
	62, 144, 3845, 219, 3844, 3843, 3842, 3841, 3836, 3835,
	3834, 953, 215, 3833, 3819, 3813, 35, 184, 3808, 247,
	160, 193, 99, 60, 3807, 88, 3539, 3805, 299, 2633,
	67, 249, 192, 250, 3804, 58, 64, 3802, 0, 14383,
	8138, 10674, 14059, 3799, 2959, 3797, 3795, 3794, 205, 137,
	3790, 3789, 3786, 102, 3785, 79, 3784, 3783, 65, 3782,
	33, 18, 19, 34, 26, 313, 257, 3781, 3780, 29,
	135, 141, 3779, 256, 214, 3778, 3777, 3776, 3773, 93,
	3771, 36, 3770, 44, 3768, 3763, 45, 13, 38, 3761,
	3760, 196, 3756, 209, 234, 3755, 156, 3751, 3332, 131,
	3750, 3749, 3748, 57, 61, 245, 87, 3747, 277, 3746,
	3288, 3744, 3742, 23, 3740, 3739, 225, 203, 171, 206,
	3736, 3733, 165, 3732, 3731, 3730, 275, 3729, 3727, 3726,
	37, 3725, 10, 3724, 3722, 201, 3093, 3720, 3715, 42,
	3713, 182,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 585, 585, 597, 597, 22, 22, 42, 42,
	23, 43, 16, 586, 586, 586, 586, 35, 24, 44,
	28, 28, 28, 28, 28, 195, 195, 195, 195, 21,
	21, 38, 38, 230, 230, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 581, 581, 232, 232, 231, 225, 225, 226, 226,
	587, 587, 233, 233, 233, 235, 235, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 480, 480, 480,
	513, 513, 512, 512, 512, 511, 511, 601, 601, 602,
	602, 602, 602, 602, 128, 128, 378, 378, 378, 52,
	52, 52, 52, 52, 576, 576, 197, 197, 197, 199,
	199, 198, 198, 198, 198, 198, 75, 75, 592, 592,
	593, 593, 591, 594, 594, 594, 196, 196, 196, 124,
	124, 124, 124, 124, 124, 125, 125, 126, 126, 200,
	200, 200, 202, 202, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 206, 15, 15, 15, 15, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 104, 104, 515,
	515, 516, 516, 191, 191, 192, 192, 192, 192, 193,
	193, 194, 194, 194, 66, 66, 203, 203, 205, 205,
	204, 204, 204, 204, 204, 54, 54, 54, 54, 54,
	54, 54, 55, 55, 55, 55, 55, 56, 56, 56,
	56, 56, 56, 57, 57, 57, 57, 57, 57, 64,
	64, 64, 64, 64, 182, 182, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 72,
	72, 72, 72, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 604, 604, 605, 605, 606, 606, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 81, 81, 340, 340, 303, 303,
	82, 82, 82, 83, 83, 84, 84, 68, 68, 574,
	574, 355, 355, 471, 471, 69, 582, 582, 582, 584,
	584, 583, 583, 86, 86, 377, 377, 87, 87, 87,
	87, 87, 87, 88, 88, 88, 88, 88, 88, 88,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 96, 96, 96, 96, 96, 97,
	97, 97, 94, 94, 94, 91, 91, 91, 90, 90,
	90, 95, 95, 95, 573, 292, 292, 93, 93, 93,
	92, 92, 92, 356, 356, 98, 98, 98, 98, 304,
	99, 99, 99, 99, 99, 99, 99, 99, 102, 102,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 473, 473, 100, 100, 100, 438, 438,
	105, 105, 105, 393, 393, 106, 106, 106, 106, 106,
	107, 107, 107, 107, 107, 107, 107, 107, 127, 127,
	127, 127, 127, 127, 127, 578, 578, 348, 348, 257,
	257, 257, 257, 117, 117, 117, 117, 118, 118, 118,
	119, 119, 187, 187, 134, 134, 134, 134, 134, 133,
	133, 133, 133, 133, 133, 58, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 63,
	63, 136, 136, 598, 598, 138, 135, 135, 135, 137,
	137, 137, 137, 139, 140, 140, 140, 140, 140, 140,
	140, 140, 141, 141, 505, 505, 364, 364, 503, 503,
	525, 525, 504, 504, 310, 310, 310, 310, 310, 311,
	311, 311, 514, 514, 514, 514, 514, 514, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 188, 188, 189,
	190, 190, 190, 190, 190, 165, 165, 165, 181, 181,
	181, 181, 181, 181, 181, 168, 168, 168, 152, 152,
	143, 143, 143, 143, 143, 143, 143, 147, 147, 147,
	147, 147, 147, 147, 147, 144, 144, 154, 154, 154,
	154, 154, 148, 148, 149, 149, 149, 149, 175, 175,
	151, 151, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 145, 145, 145, 145, 156, 156, 156, 156, 400,
	400, 400, 180, 180, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 178, 178, 178, 178, 178,
	178, 595, 595, 596, 596, 172, 172, 172, 172, 172,
	172, 452, 452, 166, 166, 166, 166, 171, 171, 171,
	171, 174, 174, 174, 174, 383, 383, 163, 163, 163,
	164, 164, 164, 169, 169, 170, 167, 167, 173, 173,
	173, 173, 146, 146, 146, 146, 608, 608, 608, 176,
	176, 162, 162, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 609, 609, 158, 158, 158, 157,
	157, 157, 157, 160, 160, 161, 161, 161, 161, 161,
	161, 159, 150, 179, 575, 575, 571, 571, 571, 571,
	571, 571, 571, 571, 572, 572, 572, 572, 577, 577,
	110, 110, 110, 110, 110, 120, 120, 120, 120, 120,
	111, 111, 111, 111, 111, 113, 113, 112, 112, 112,
	112, 76, 76, 76, 76, 76, 14, 14, 14, 77,
	77, 248, 248, 209, 209, 209, 329, 329, 210, 210,
	318, 318, 318, 318, 207, 207, 208, 208, 78, 78,
	610, 610, 610, 588, 588, 588, 589, 589, 589, 589,
	589, 589, 312, 312, 313, 313, 418, 418, 418, 418,
	418, 316, 316, 316, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 319, 319, 234, 234, 234, 327, 328,
	328, 320, 320, 326, 325, 325, 324, 324, 323, 323,
	321, 322, 322, 322, 331, 331, 330, 333, 333, 332,
	417, 534, 534, 536, 536, 536, 536, 536, 536, 536,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 401, 401, 611, 611, 532, 532, 532, 533,
	528, 528, 529, 529, 529, 529, 529, 314, 314, 315,
	315, 315, 315, 530, 531, 346, 346, 456, 535, 535,
	537, 537, 539, 612, 612, 612, 612, 612, 612, 613,
	613, 613, 416, 416, 415, 415, 338, 338, 540, 540,
	540, 540, 541, 541, 541, 541, 541, 544, 543, 542,
	542, 542, 542, 542, 80, 80, 80, 380, 380, 379,
	379, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 184, 184, 260, 260,
	74, 74, 74, 12, 12, 12, 590, 590, 590, 79,
	79, 79, 79, 79, 79, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 580, 580, 579, 579, 261,
	261, 615, 615, 85, 85, 85, 85, 85, 85, 85,
	85, 474, 474, 475, 475, 73, 73, 73, 73, 73,
	402, 402, 399, 399, 398, 398, 345, 345, 454, 454,
	454, 455, 265, 265, 266, 266, 227, 227, 227, 30,
	29, 20, 20, 25, 25, 26, 26, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 27, 27, 46, 46,
	46, 46, 47, 47, 47, 47, 50, 50, 51, 51,
	45, 45, 45, 45, 48, 48, 41, 41, 599, 599,
	600, 600, 116, 116, 121, 121, 121, 121, 121, 122,
	122, 122, 122, 123, 123, 123, 123, 132, 132, 183,
	183, 183, 183, 183, 183, 183, 53, 53, 53, 53,
	65, 65, 65, 65, 130, 617, 617, 617, 131, 131,
	131, 616, 616, 258, 258, 412, 412, 413, 413, 618,
	618, 414, 414, 414, 414, 414, 251, 250, 252, 252,
	253, 253, 71, 71, 71, 243, 243, 242, 240, 240,
	517, 517, 245, 245, 245, 246, 246, 236, 236, 237,
	237, 238, 238, 239, 239, 249, 249, 619, 619, 108,
	108, 108, 186, 186, 302, 302, 302, 409, 409, 409,
	339, 339, 272, 272, 411, 411, 411, 411, 376, 376,
	376, 185, 185, 353, 353, 366, 366, 367, 367, 468,
	468, 368, 114, 114, 115, 115, 129, 129, 213, 213,
	211, 211, 211, 211, 211, 211, 211, 211, 218, 218,
	219, 219, 220, 220, 221, 222, 222, 222, 222, 357,
	357, 223, 223, 223, 212, 212, 212, 214, 214, 214,
	214, 214, 214, 214, 217, 217, 217, 217, 224, 224,
	224, 216, 216, 551, 551, 551, 553, 553, 555, 555,
	554, 554, 550, 550, 552, 552, 614, 614, 382, 382,
	382, 336, 337, 334, 334, 335, 335, 343, 343, 341,
	342, 342, 344, 344, 453, 453, 453, 228, 228, 228,
	373, 373, 373, 373, 374, 374, 405, 405, 403, 403,
	403, 403, 404, 404, 406, 406, 406, 407, 407, 408,
	408, 370, 370, 371, 371, 372, 372, 372, 372, 434,
	434, 215, 215, 215, 350, 350, 350, 351, 351, 424,
	424, 424, 424, 424, 424, 425, 425, 423, 423, 423,
	423, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	458, 459, 459, 352, 352, 460, 410, 410, 569, 569,
	569, 570, 570, 451, 451, 461, 461, 461, 461, 461,
	461, 449, 449, 450, 450, 469, 470, 470, 386, 386,
	386, 386, 384, 384, 387, 387, 387, 387, 387, 385,
	385, 462, 462, 462, 462, 375, 375, 463, 463, 463,
	463, 464, 465, 465, 466, 466, 419, 420, 420, 476,
	476, 476, 476, 478, 349, 349, 349, 349, 349, 527,
	526, 526, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 493, 493, 493, 493, 493, 493, 493,
	479, 479, 479, 479, 479, 483, 483, 483, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 484,
	484, 489, 489, 490, 490, 490, 485, 486, 491, 491,
	491, 491, 620, 620, 495, 495, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 481, 481, 481, 488, 488,
	488, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 394, 394, 396, 396, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 428,
	428, 428, 428, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 545, 545,
	545, 545, 545, 545, 545, 545, 430, 430, 548, 548,
	549, 549, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 556, 556, 557, 557, 559, 559, 560, 560, 561,
	562, 562, 562, 563, 564, 564, 558, 558, 565, 565,
	565, 565, 566, 566, 567, 567, 567, 567, 567, 568,
	568, 568, 568, 568, 440, 440, 441, 441, 447, 447,
	447, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 309, 309, 308, 262,
	262, 262, 262, 262, 262, 362, 362, 360, 360, 360,
	363, 363, 361, 361, 359, 359, 358, 358, 437, 437,
	435, 435, 439, 439, 388, 388, 494, 494, 494, 494,
	494, 494, 494, 494, 389, 389, 389, 397, 390, 390,
	391, 391, 391, 391, 391, 431, 432, 392, 392, 392,
	433, 433, 442, 446, 446, 445, 444, 444, 443, 443,
	421, 421, 422, 422, 369, 369, 621, 621, 365, 365,
	467, 467, 467, 467, 306, 306, 354, 354, 305, 305,
	297, 297, 298, 298, 298, 298, 347, 347, 448, 448,
	496, 496, 497, 497, 498, 498, 499, 499, 500, 501,
	502, 436, 436, 282, 281, 269, 270, 280, 279, 278,
	268, 271, 275, 276, 277, 273, 274, 288, 287, 286,
	241, 244, 293, 294, 294, 296, 296, 295, 295, 284,
	285, 472, 267, 299, 299, 300, 300, 300, 301, 301,
	301, 301, 263, 263, 264, 264, 289, 289, 290, 291,
	291, 283, 283, 283, 254, 254, 254, 255, 255, 256,
	256, 510, 510, 507, 507, 507, 508, 508, 508, 509,
	509, 509, 509, 506, 506, 506, 506, 506, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 519,
	519, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 521,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 524, 524,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 3,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 0,
	1, 1, 2, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 4, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 6,
	3, 8, 3, 4, 3, 3, 4, 3, 4, 4,
	4, 3, 5, 7, 3, 3, 4, 3, 3, 3,
	3, 3, 2, 0, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 5, 1,
	2, 1, 3, 2, 0, 7, 2, 5, 0, 1,
	3, 3, 1, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 6, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 1, 1, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 7, 7, 9, 5, 2, 6, 4,
	7, 7, 7, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 4, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 13,
	16, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 1, 1, 0, 1, 4, 1, 0,
	3, 7, 7, 1, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 2, 8, 4, 2, 5, 5,
	5, 2, 2, 0, 1, 3, 11, 12, 9, 5,
	3, 1, 5, 10, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 12, 15, 3, 1, 0, 4, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 588, -101, -98, -66, -64, -105, -106,
	-87, -107, -100, -127, -132, -114, -115, -116, -128, -134,
	-183, -188, -189, -190, -3, -52, -54, -67, -86, -88,
	-99, -109, -108, -110, -117, -124, -120, -104, -58, -129,
	-133, -142, -184, -185, -186, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-137, -138, 452, -53, -65, -131, -130, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -603, 102, -552, -89,
	-92, -123, -607, 161, 219, -111, -112, 364, -118, -119,
	417, -121, -122, 419, 162, -60, -59, 156, -211, -213,
	-135, -136, -187, -143, -144, -145, -146, -147, -148, -149,
	-175, -150, -151, -152, -153, -154, -155, -159, -178, -156,
	-157, -158, -161, -160, -162, -167, -163, -164, -165, -166,
	-168, -169, -171, -172, -173, -174, -176, -177, 457, -170,
	-179, 518, 49, 472, 82, 146, 427, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -551, -90, -91, -94, -96,
	-97, -93, -95, 416, -214, -212, 585, 533, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 554, 563, -217, -215, -216, -224,
	444, 541, 492, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, -304, 2, -284, -289, -290,
	-291, -283, -254, -521, -524, 4, -518, -522, 168, 229,
	328, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 500, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 225, 230, 231, 232, 236, 233, 242, 243, 247,
	248, 249, 251, 255, 256, 257, 258, 259, 260, 262,
	264, 263, 266, 269, 270, 273, 277, 278, 282, 283,
	279, 284, 285, 287, 288, 291, 289, 292, 293, 290,
	294, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 295, 310, 308, 312, 313, 314, 326,
	323, 318, 319, 315, 320, 316, 317, 321, 322, 325,
	330, 331, 334, 216, 336, 337, 340, 358, 344, 345,
	346, 349, 350, 353, 356, 357, 359, 360, 361, 362,
	363, 364, 365, 366, 368, 369, 371, 372, 373, 375,
	376, 377, 379, 381, 382, 384, 385, 387, 388, 389,
	390, 391, 392, 393, 395, 397, 396, 398, 400, 402,
	403, 404, 409, 415, 411, 412, 413, 414, 416, 417,
	418, 419, 421, 422, 423, 425, 426, 427, 428, 430,
	432, 433, 437, 438, 454, 455, 474, 434, 435, 436,
	439, 440, 441, 442, 443, 447, 445, 446, 448, 449,
	450, 452, 453, 456, 457, 459, 460, 461, 462, 463,
	464, 465, 468, 470, 471, 472, 491, 473, 475, 479,
	480, 481, 482, 476, 477, 490, 484, 485, 487, 488,
	493, 494, 495, 496, 497, 498, 499, 501, 503, 511,
	512, 513, 515, 518, 519, 520, 521, 509, 523, 524,
	527, 528, 529, 532, 530, 531, 533, 535, 538, 539,
	540, 546, 545, 547, 550, 555, 556, 558, 559, 560,
	36, 50, 51, 54, 56, 58, 69, 70, 71, 75,
	124, 125, 153, 164, 165, 177, 190, 191, 203, 205,
	213, 214, 215, 237, 238, 240, 245, 267, 333, 335,
	351, 355, 370, 374, 378, 380, 394, 429, 466, 478,
	483, 504, 505, 506, 507, 514, 516, 541, 542, 543,
	548, 557, -304, 2, -284, 342, -277, 2, -254, -254,
	381, 28, 2, 28, 369, 446, 495, 497, 2, -578,
	-348, 2, 28, -257, -254, 102, 201, 444, -277, 2,
	-578, -348, 25, 2, -254, 2, 356, 22, 27, 66,
	77, 98, 140, 163, 185, 188, -606, 358, 388, 432,
	448, 490, 501, 515, 2, 545, 288, 445, 492, 229,
	120, 520, 439, -590, 437, 438, 356, 386, 425, 204,
	534, -258, 2, 434, -254, 288, 2, 588, 94, 278,
	74, 429, 449, -140, 512, -139, 504, 439, -141, -505,
	2, 310, -254, 588, 588, 588, 28, -267, -254, 492,
	229, 439, 120, 488, 588, 2, 492, 361, 545, 445,
	120, 391, 229, 520, 188, 140, 27, 126, 439, -590,
	288, -576, 2, -571, 4, -522, -518, -298, -297, 492,
	498, 120, -291, -283, 578, -290, 588, 588, 588, 2,
	248, 249, 390, 389, 449, 450, 588, 588, 588, 588,
	437, 2, 163, 22, 27, 66, 93, 98, 126, 185,
	188, 347, -604, 358, 388, 448, 490, 494, 501, 515,
	-589, 473, 68, 414, 439, -588, -590, 288, 520, 140,
	-398, 120, 278, 199, 528, 497, 495, 526, 132, 236,
	531, 530, 588, 588, -102, 2, 585, 32, 31, -101,
	-105, 142, 452, -206, 492, 241, 2, -254, 588, 588,
	2, 248, 249, 437, 438, 588, 588, 186, -571, 2,
	588, 588, 2, 248, 249, 437, 438, 241, 2, 68,
	441, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 2, -181, 449, 473, 210,
	47, 46, 74, 28, 387, 79, 362, 121, 148, 521,
	202, 229, 230, 256, 93, 94, -400, 44, 249, 248,
	438, -595, 437, -452, 493, 440, 446, 487, 260, 434,
	512, 102, 535, 426, 560, 391, 392, 485, 404, 279,
	157, 187, 4, 120, 310, 451, 504, 278, 433, 365,
	84, -614, 2, 492, -616, 2, 512, 512, 2, -616,
	2, -616, 2, -616, 2, -617, 512, 557, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, -212, -214, -213, 588, 588,
	588, 588, 588, 588, 588, -181, 449, 2, 74, 28,
	-341, -343, 525, 239, 150, 348, -211, -213, 2, -551,
	-503, 2, -426, -525, -428, 576, 577, 569, 489, 67,
	-308, 327, 561, -440, 126, 526, 342, -524, -429, -442,
	153, 358, 429, -363, 8, 9, 5, 6, 7, -263,
	-430, -436, 517, 167, 332, -301, 589, 10, 585, -548,
	-213, -441, 37, 205, 65, -507, -300, -264, -479, 240,
	-299, -283, -545, -546, 4, -518, -519, -508, -482, -490,
	-486, -487, -493, -254, -521, 77, 111, 112, 110, 115,
	114, 281, 280, 116, 113, 451, 534, 66, 36, 213,
	214, 245, 333, 215, 75, -547, 141, -520, 237, 238,
	466, 51, 394, 177, 125, 124, 335, 56, 54, 542,
	-491, 122, 504, 505, 506, 507, 190, 191, 58, 164,
	165, 355, 378, 483, 514, 516, 203, 267, 43, 106,
	187, 235, 217, 244, 246, 250, 268, 271, 311, 324,
	329, 352, 354, 424, 458, -620, 543, 478, 69, 70,
	-553, 396, -554, -277, -553, 588, 588, 590, 588, -334,
	-336, -337, 2, 28, 138, 585, 2, -457, 2, -458,
	-462, -213, 261, -461, 585, -459, 583, -284, 343, -549,
	430, -545, -546, -263, -283, -300, 4, -518, -520, 587,
	-338, 585, 120, 492, 78, 229, 163, -393, 585, -254,
	28, 342, 508, 590, -335, 385, -438, 585, 342, 186,
	345, 60, 292, 2, 2, 2, 2, 2, 213, -254,
	492, 119, 2, 259, 2, 2, 2, 2, 2, 2,
	2, -356, 213, 2, -284, 545, -356, 213, 2, -356,
	213, 2, -399, 2, 87, -268, 213, 2, -254, -292,
	213, 2, -287, -289, -296, 213, 2, -294, -254, -516,
	213, 2, -515, -510, 10, -509, 5, 4, -518, -522,
	-519, -521, 77, -426, 2, -129, 2, 60, -254, 545,
	2, 2, 454, 2, 585, -140, 71, 512, 43, 449,
	-413, 2, -414, -250, -251, -252, -469, -253, 247, 384,
	393, 564, 130, 327, 560, -503, -598, 186, 568, 508,
	-503, -364, 587, 2, 2, 2, 2, 2, 2, -462,
	213, -284, 2, -281, -506, 4, -518, -522, -519, -523,
	28, 31, 32, 33, 35, 37, 38, 39, 40, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 110, 111,
	113, 112, 114, 115, 116, 126, 130, 134, 138, 139,
	143, 146, 150, 167, 169, 182, 185, 186, 201, 204,
	207, 220, 234, 239, 241, 261, 265, 272, 280, 281,
	327, 332, 338, 342, 343, 347, 348, 367, 383, 399,
	420, 444, 451, 469, 486, 492, 502, 508, 510, 517,
	525, 526, 534, 536, 544, 549, 551, 552, 553, 554,
	-524, 2, -462, 213, 2, -286, 213, -462, -289, 2,
	-268, 2, -280, -506, 2, -305, 213, -284, -285, -289,
	-287, 2, 2, 2, 2, 2, -294, 2, -515, 213,
	2, 545, 241, 508, 590, -354, -297, -298, -502, 8,
	-347, -254, 587, -426, 2, -129, -113, 2, 182, -426,
	213, 2, -129, 213, 2, -426, 213, 2, -129, 213,
	2, -592, 2, -515, 213, -254, 2, 292, 2, 2,
	515, 2, 98, 492, 119, 2, 413, -605, 432, 519,
	2, 2, 2, 2, 2, 2, 2, 492, -273, 2,
	-254, 182, 476, -294, 213, -295, 2, 445, -615, 396,
	-515, 213, 2, 545, -287, 213, 2, -287, 229, 243,
	-268, 213, 2, 497, 495, 497, 495, 186, 2, 241,
	2, 241, 2, -463, 2, -464, -458, -465, 583, 343,
	-473, 2, -472, -509, 541, -102, 585, -102, 585, 449,
	585, -515, -284, -284, -426, 2, -129, -113, 2, -426,
	2, -129, 2, -126, -515, -125, 585, 186, -426, 2,
	-129, -113, 2, -426, 2, -129, 2, -206, 182, 2,
	120, 492, -181, 2, 182, 536, 2, 8, 2, 220,
	-515, 440, 392, 174, 2, 454, 2, 455, 74, -400,
	560, 74, 186, 2, 186, 2, -383, 2, 554, 186,
	2, 2, -575, 2, 342, 186, 2, 186, 2, 186,
	2, 186, 2, 186, 2, -180, 450, 513, 491, 389,
	249, 2, -129, 551, -113, -426, 551, 2, -596, 182,
	438, -426, 2, 511, 258, 158, 186, -383, 2, 186,
	2, 186, 2, 5, 2, 390, 474, 2, 247, 384,
	474, 2, -284, -608, 28, 2, 492, 545, 445, 2,
	2, 88, 89, 186, 2, 186, 2, 200, 186, 2,
	186, 492, 560, 2, -375, -462, -412, -413, -412, 508,
	-341, -343, -181, 454, 2, -218, -373, -220, 182, -403,
	-404, -221, 272, 169, 338, -222, -382, 28, 138, -382,
	-382, 60, 586, 586, 11, 12, 76, 41, 576, 577,
	578, 579, 180, 580, 581, 574, 575, 573, 566, 567,
	571, 253, 254, 95, 570, 568, 86, 286, 431, 170,
	171, 172, 173, 410, 227, 34, 228, 14, 15, 16,
	-308, 33, 347, 271, 561, 217, 458, 569, 17, 18,
	19, 244, 246, 329, 50, 220, -262, 358, -307, 489,
	67, -426, -426, -426, -426, -426, -426, -426, -426, 354,
	585, -369, -421, 583, -213, 585, 585, 585, 585, -502,
	-213, -426, -440, 586, -361, 585, -213, -440, -435, 585,
	429, 583, 585, -443, -426, 5, 5, 5, 585, 587,
	-556, 555, 182, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 380, -484,
	585, -483, 585, -483, -483, 546, -481, 585, 563, 556,
	585, -481, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 546, 590, -553, -338, 585,
	-365, -467, -426, 578, -365, -365, 342, -358, -426, 106,
	-386, 250, 311, 187, 268, 424, 235, -423, 589, -423,
	-451, 563, -213, -459, -283, -213, -461, 585, -457, -451,
	-103, -502, -86, -99, -108, -129, -142, -185, -186, 578,
	-284, 585, 186, 585, 587, -506, 186, -347, -268, -284,
	-299, -300, -305, 2, 137, -358, -571, 520, 439, 445,
	-347, -257, 38, -437, -476, -477, -527, 589, -526, -479,
	-489, -485, -488, 370, 374, -508, 54, 542, -491, 240,
	4, -518, -520, 237, 238, 466, 51, 394, 177, 125,
	124, 335, 56, 504, 505, 506, 507, 190, 191, 58,
	543, 478, 69, 70, -571, 520, 439, 445, -347, 182,
	-513, 2, -512, -511, 116, 451, -509, 5, 2, 153,
	2, 2, 2, -254, -233, 590, 64, 418, 153, -356,
	213, -233, 153, -233, 153, -306, 213, -305, -233, 153,
	-233, 590, 153, -233, 590, 153, 587, 590, 153, -513,
	2, -399, -505, -358, 38, -413, 2, 126, -511, -618,
	590, 270, -311, 285, 326, 209, 343, 558, 336, 130,
	-514, 5, 4, -436, -448, 126, 278, 240, -496, -498,
	8, -497, 9, -499, 576, 577, -504, -503, 109, 587,
	-506, -230, 411, 452, 357, -229, 24, 29, 142, 231,
	314, 539, 159, -324, 232, -321, 361, 153, 470, 529,
	-585, -586, 436, 499, 500, 90, 336, 452, 357, 411,
	153, -379, -381, 38, 118, 314, 356, 61, 224, 290,
	291, 472, 548, 153, 452, 357, 411, 357, 24, 142,
	-245, -242, 452, -586, 99, 411, 484, 383, -586, -232,
	470, 529, -585, -586, 436, 411, -231, -326, -321, 361,
	153, 589, 24, 142, 411, 452, 357, -601, -602, 29,
	411, 357, -579, -550, 554, 153, -462, 213, -593, -125,
	262, 5, 10, -515, -125, -354, 590, 590, -506, 578,
	438, 437, 153, 153, 153, 153, 182, 327, 2, 2,
	2, 2, 2, 188, -588, -606, 2, 2, -284, 213,
	-340, 342, -574, -355, 492, -284, 182, 327, 43, -286,
	213, 2, -289, 545, -579, 327, -288, 213, -284, 38,
	585, 327, 2, -399, 2, 229, -550, 327, -463, -302,
	-284, -458, -302, 452, -277, 38, -423, -284, 586, 590,
	-473, -473, -515, -194, 554, 186, 102, 585, 585, -206,
	-470, 590, -469, 220, -516, -126, -515, 414, -515, -574,
	-268, 2, -284, 2, 492, 251, -515, -194, 220, -515,
	-515, -515, -505, 28, 455, 2, -180, 450, 513, 89,
	455, 2, -284, 492, 120, 229, 80, -254, -577, 182,
	-572, 425, 439, 520, -571, -284, 120, -284, 120, -284,
	120, -284, -284, 2, 2, 2, 2, 2, 85, 85,
	2, 46, -596, 182, 2, 511, 2, 511, 2, -254,
	-254, -254, 473, 270, -284, 493, -609, 2, 186, 182,
	2, 492, 229, 492, 229, 120, 186, 74, 120, 28,
	492, 435, -233, 590, -258, -218, -373, -505, -374, -373,
	-219, -218, -221, 182, 393, 530, 314, 456, 255, -404,
	-403, 28, -426, -408, 176, 313, -426, -406, -428, 576,
	577, -497, -499, -357, 336, -212, -212, -212, -344, -453,
	-426, 383, 229, -478, -476, -476, -282, -506, 504, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, 271, 217, 458, 50, 220,
	-426, 508, -426, -426, -426, -426, 308, 327, 332, 517,
	167, 527, 138, 336, -621, 486, 40, -433, -213, -362,
	585, -447, 35, 469, 28, -440, 585, 2, -421, -426,
	-422, -309, -307, -254, 576, 577, 578, 579, 580, 581,
	566, 567, 568, 14, 15, 16, 571, 575, 573, 574,
	180, 95, 570, 286, 431, 86, 170, 171, 172, 173,
	253, 254, 17, 18, 19, 34, 569, -359, -358, -358,
	586, 544, 28, 138, 578, 2, 586, 590, 38, 586,
	-426, -359, -439, -435, -358, -446, -445, 551, -394, -395,
	559, 295, 123, 211, 293, -396, 443, -500, 8, -506,
	578, -557, 175, 204, 585, 586, 2, 586, 2, 586,
	-426, 2, 586, -426, 2, 586, -426, 2, 586, -426,
	2, 586, 2, -426, -426, -426, -426, -426, -426, -426,
	-358, 8, -500, -500, 504, 504, -500, -500, -500, -492,
	370, 371, 372, 373, 273, 274, 275, 276, 374, 375,
	376, 377, 300, 301, 302, 303, 296, 297, 298, 299,
	304, 305, 306, 307, 195, 196, 197, 198, 191, 192,
	193, 194, -492, -388, 2, -494, -358, 4, 559, 295,
	123, 211, 293, 443, 5, -388, 2, -389, 2, -426,
	-358, -390, -427, -428, 576, 577, 569, -308, -440, -391,
	2, -426, -359, -426, 57, 265, 510, -392, -426, 186,
	-358, -358, 2, -358, 2, -554, 38, -358, -350, 590,
	186, 38, 4, -350, -350, 585, 586, 590, -387, 208,
	289, 284, 243, -387, -457, -386, 250, -384, 352, -384,
	-384, -451, -269, 583, 591, -506, -451, -450, -449, 38,
	-277, 349, -451, -451, 587, 586, -450, 584, -569, 585,
	588, 588, 588, 588, 588, -284, 585, -358, -506, 587,
	475, 2, 586, 244, 244, 244, 244, 430, 586, 508,
	-573, -292, -296, 2, 554, -101, 344, 586, 590, -349,
	37, 583, 587, -500, 2, 2, -495, 546, 585, 585,
	-395, 585, 186, -573, -296, 2, -348, 590, 508, -254,
	2, -284, -356, -233, 153, -356, -356, -233, 590, 153,
	-268, -287, -292, -294, -296, -254, -515, -516, -233, -288,
	-598, 586, 512, -414, -310, 393, 468, 412, 447, 488,
	8, 9, 8, 9, 590, -506, 590, -599, 93, 508,
	78, 439, -247, 279, 508, -417, 213, 78, -528, -271,
	93, -529, -254, 72, 526, 383, 185, 151, -599, 93,
	383, -599, 93, 2, 231, 93, 452, 473, 28, 60,
	-462, 41, 41, 28, -597, 325, 266, 550, 186, 560,
	492, 229, 439, 508, 508, -462, -381, -476, 118, 290,
	291, 60, -501, -496, 576, 577, -501, 60, -501, -501,
	-501, 554, -286, -462, 439, 508, 508, 508, 402, 402,
	-242, 508, 508, -619, 568, 402, 590, 41, 41, 28,
	-597, 325, 266, 186, 508, -305, -269, 540, 42, 540,
	42, 540, 508, 42, 439, 508, 590, 42, 508, 508,
	-580, -259, 105, 320, 283, 321, 97, 317, 96, 316,
	103, 318, 104, 319, 547, 330, 63, 315, 294, 322,
	-260, -261, 363, 538, -515, 452, 357, 411, 153, 220,
	-470, 220, -470, -297, -254, 587, -129, -426, -426, -129,
	-426, -129, 46, 153, 2, -615, 259, 585, -314, 327,
	186, -347, -471, 241, 590, -355, -571, 153, -512, -380,
	-379, 327, -288, 213, 2, 153, -338, 327, 147, 585,
	391, 2, 153, -270, 213, -255, -254, -399, -236, 496,
	153, -377, 536, -409, -129, 585, 126, 38, -409, -366,
	-367, -468, -368, -271, 585, -277, -423, -102, -472, 586,
	586, 586, -193, 346, -192, -254, 5, -206, 536, -313,
	-418, -417, -532, -533, -528, 271, 229, 526, 243, 168,
	-339, -272, -271, 119, -200, 554, -125, -126, 586, -470,
	220, 476, -194, -194, -470, -470, -284, 182, -515, -194,
	-194, -194, 2, 2, 2, 2, -383, -284, -268, -305,
	-284, 587, -347, -347, -296, -292, -383, -268, -383, -268,
	-383, -268, -129, -426, 2, 449, 182, 182, 587, -383,
	391, 120, 492, 361, 229, -284, -305, -284, -305, -268,
	120, -268, 121, -284, -462, -374, -219, 343, 255, 456,
	-406, -407, -428, 429, 430, -407, 429, 430, 8, 9,
	8, 9, -223, 460, 331, -356, 590, -227, 39, 134,
	255, -284, 560, 149, -426, -426, 508, -621, 486, -433,
	149, -426, 308, 332, 517, 167, 527, 138, 336, 186,
	585, -427, -427, 586, -360, -426, -426, 584, 593, 586,
	587, 586, -343, 590, -341, -426, -358, -358, 586, 587,
	-358, -347, 584, 584, 590, 586, -444, -445, 143, -426,
	508, 508, 508, 508, 585, 586, 587, -562, 353, 585,
	585, -426, 586, 586, 586, 586, 38, 590, 590, 590,
	586, 590, 590, 590, 586, 586, 586, 590, 586, 560,
	560, 586, 586, 586, 586, 590, 586, 590, 586, 186,
	586, 586, -397, 367, 586, 11, 12, 576, 577, 578,
	579, 180, 580, 581, 574, 575, 573, 566, 567, 568,
	86, 286, 431, 14, 15, 16, -308, 244, 220, -427,
	-427, -427, -427, 586, -431, -432, 186, 182, 38, -392,
	-392, -392, 586, 186, -358, 586, 586, 585, -555, 288,
	327, 586, -420, -419, 552, -467, -351, 2, -457, -279,
	-506, -420, -420, -358, -426, 250, 250, -385, 536, 342,
	-387, -457, -450, -502, -425, -424, 184, 39, 134, 323,
	216, -450, -277, -338, -450, -450, -506, -451, -451, -449,
	586, -570, -502, 586, -352, -460, -549, -343, 587, -506,
	-203, -550, -182, 5, 332, -182, -182, -182, -347, 508,
	508, 25, 368, -476, 583, 584, 8, -506, 585, -500,
	-500, -500, -347, 186, 186, 186, -512, -512, 2, -233,
	-356, -233, -233, -305, -306, -233, -233, -233, -378, 554,
	-503, -413, 524, 83, 393, 504, -503, -229, 411, -271,
	-271, -284, -293, -254, 199, 403, -512, 327, -417, 213,
	-235, 327, -476, -278, -254, 585, -401, 556, 255, 255,
	536, -271, -278, 255, 213, -271, 213, -278, 2, -278,
	-581, 393, 337, -426, 60, -322, 277, 391, 328, -230,
	411, 452, 357, -129, -129, -129, -129, -129, 585, -598,
	536, 137, -284, -305, -284, -293, -512, -288, 452, 357,
	411, 324, -299, -501, -501, -379, 452, 357, 411, -293,
	-512, -286, -512, -241, -254, -241, 439, -268, 402, 560,
	45, -619, -231, -129, -129, -129, -129, -129, 585, -269,
	-232, 411, 5, 213, -271, 5, -271, 213, 5, -254,
	-271, -293, -512, -602, 24, 142, -271, -293, -512, -259,
	-515, 332, 532, -579, 439, 508, 508, -462, -125, -197,
	554, -125, -191, 225, 578, -576, -254, 545, -254, -312,
	-315, -313, -271, -209, -210, 556, 554, 153, -303, -284,
	583, -194, -515, -284, -471, -294, -295, 153, -338, 327,
	-515, 38, 153, 585, 2, 2, -287, 342, 327, -270,
	213, -237, 144, -619, -268, -420, -351, -376, -411, 420,
	342, -339, 541, -277, -376, -353, 590, 186, 568, 587,
	-339, -466, 578, -102, -102, -194, 590, 585, 568, 568,
	585, -515, -515, 586, 590, -235, -284, -270, 229, 229,
	-276, -255, 586, 590, 587, 585, -202, 346, -201, 145,
	257, 242, 462, 463, 464, 465, 136, 461, -470, -200,
	-126, 186, 186, -61, 554, 492, -194, 589, -254, -383,
	-383, -383, 449, 449, -254, -280, -268, -284, -281, -305,
	182, 182, -268, 530, -407, 343, 282, -453, -228, 562,
	-284, 589, -426, -426, 149, 149, -426, -427, -427, -426,
	149, 186, 585, -426, -437, 33, 33, 586, 590, -422,
	-426, -307, 586, 544, -343, -343, 586, 578, -506, 589,
	586, -435, 146, -426, 502, 295, 211, 293, -396, 293,
	-396, -396, -500, 5, -506, 578, -563, -274, 585, -254,
	552, -342, 348, 586, -478, -476, -426, -426, -426, -426,
	-426, -500, -481, -481, -496, -496, -426, -431, -426, -478,
	-476, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, 138, 327, 336, -427, -432, -431, -426, -426, -476,
	586, 586, 586, -358, -101, 585, 288, -370, 204, -426,
	-470, 590, -370, -370, 586, -457, -457, 585, -426, 250,
	584, 590, 592, 568, -338, 587, -449, -450, 584, 586,
	590, 586, 590, -410, 38, 586, -506, -420, -205, -204,
	135, 53, 107, 133, 332, -347, -347, 345, 5, 8,
	583, 584, 587, -500, 586, 586, 586, -347, -347, -347,
	-233, -233, 119, 314, -426, 508, 508, 60, 220, 153,
	327, 538, -534, -529, 151, -426, 585, 229, 585, 585,
	2, -225, -226, 142, 452, 24, -600, 2, 536, 153,
	-233, 153, -233, 558, -322, 585, 585, 508, 439, -247,
	508, 554, -358, -426, -195, 126, -505, -586, 589, -586,
	589, 439, 508, 508, 439, 508, 508, 554, 166, 166,
	560, -241, 554, -358, 508, -480, 48, 26, 327, -287,
	-233, 153, 508, 508, 520, 452, -515, 332, -293, -512,
	-288, 452, 357, 411, -470, -199, 346, -198, 145, 422,
	136, 257, 222, -470, -197, 186, 241, 554, -288, 2,
	586, 586, 590, -535, 38, 340, 340, 585, -284, -82,
	554, -469, -502, -582, 554, 43, -286, 38, 153, -579,
	-129, -288, -474, -475, 5, 38, -284, 153, 342, 327,
	-238, 264, -619, -510, -550, -343, -376, -365, 328, 91,
	586, -420, -367, -351, -426, 2, 586, -192, -193, -515,
	-515, -515, -194, -206, -206, -418, -316, 585, -270, -255,
	585, -206, -272, 2, -516, 590, 585, 568, 568, 568,
	-200, -470, -125, -129, 346, -284, 578, -383, -328, -327,
	361, 336, -328, 429, 429, 343, 176, 260, -227, -269,
	-426, -426, 149, 33, 33, -426, -426, -437, 586, -426,
	-426, -358, 584, 5, -426, 586, 586, 8, -426, 586,
	587, -564, -254, -426, 586, 60, 586, 586, 590, 590,
	586, 586, 586, 586, 586, 586, 586, -432, 186, 138,
	336, 585, 586, 586, -101, -434, 207, 60, -457, -434,
	-434, -385, -347, -457, -424, -269, 583, -506, -502, -460,
	585, 587, -204, 568, -515, -515, 554, 584, 2, 583,
	-506, 586, 119, -271, -271, 492, 429, -241, 383, -417,
	153, -536, 93, -538, 76, 168, 102, 327, 332, 526,
	383, 72, 126, 399, -611, 38, 565, 586, -345, -454,
	-549, 585, -254, -345, -347, 327, 481, 126, 327, 126,
	549, 119, 2, 520, 79, -271, -278, -347, -347, -284,
	-293, -512, 160, 586, 590, 568, 2, 578, 578, -293,
	-512, -288, -293, -512, -286, 359, 166, 160, 586, -269,
	5, 5, 153, -266, 76, -271, 5, -271, -287, 119,
	439, 508, 508, -197, 590, 585, 568, 568, -197, -516,
	-125, 2, -338, -329, 231, -271, -533, -530, -531, 383,
	-537, -539, 168, 383, -129, 2, -208, -207, -254, 5,
	585, -314, 346, 584, -584, 346, -583, 117, 136, -512,
	-380, -129, -288, -338, 586, 590, 147, -402, 536, -269,
	-284, 153, -239, 263, -619, -510, -236, -405, -403, 139,
	585, 342, -129, -343, 568, 586, 586, 119, 119, 223,
	152, -345, 585, 585, -347, 119, 586, -201, -202, -515,
	-125, -515, -200, -470, -62, -63, 229, 93, 366, -281,
	492, 229, 585, 585, -227, -426, -426, -426, 586, -343,
	-506, 578, -558, 361, 586, -453, -426, -426, -427, 186,
	585, -437, 586, -559, 553, -426, -371, -372, -426, 428,
	108, 205, -559, -559, 586, -502, 2, -515, 2, 583,
	2, 220, 38, 402, -417, -278, -282, -275, -254, 168,
	213, 332, 549, -401, 255, 585, -427, -284, 585, 2,
	30, -612, 130, 234, 586, 590, -455, -265, -254, -426,
	-455, 586, 586, 332, 332, 549, -426, -476, 585, -233,
	-233, 586, 586, -426, 508, -505, 100, -503, 2, -586,
	-268, -426, 508, 5, -233, -282, -233, -233, -266, 520,
	-293, -512, -288, -198, -199, -515, -125, -197, 38, -319,
	233, 2, -535, 255, -275, 255, -610, 554, 586, 590,
	568, 568, -312, -209, -83, -84, 509, -469, 590, 585,
	568, -338, 38, 5, 585, 585, -254, 342, 585, -269,
	-249, 92, -619, -510, -237, -376, 328, -347, 93, -405,
	-433, -194, 585, 585, -317, 81, 94, 127, 212, 189,
	230, 473, 479, 28, -317, 586, -345, -345, 586, 585,
	-194, 586, 590, 28, 585, 28, 585, -284, -305, -358,
	-358, 586, -343, 60, 590, 586, 586, -427, -437, 586,
	-560, -561, -274, 590, 585, 585, 453, 584, 2, -241,
	383, -254, -538, -275, 327, 536, -426, -256, 585, -426,
	38, 234, 131, 218, -416, -613, 101, 482, 221, -454,
	-227, 586, -415, 536, 399, -266, -345, 585, 585, 585,
	568, 186, 585, -480, -233, -287, 586, -591, 397, -129,
	-323, -324, 220, 585, -318, 342, 119, 314, -207, -503,
	-503, 586, 38, -84, 9, -583, -584, -426, 38, -129,
	-474, -345, -284, -345, 342, -243, -242, 272, -510, -238,
	586, -278, -376, -516, -516, -415, 586, 586, -516, -63,
	-347, -347, 586, 586, -565, 391, 430, 206, -358, -344,
	586, 590, 38, -372, 2, 2, 2, 402, 153, 208,
	586, -540, 287, -254, 586, 131, 218, -319, 585, -228,
	-455, -319, 208, -284, -587, 536, 586, -331, -330, -327,
	-333, -332, -327, -358, -503, 100, 359, -358, -266, -594,
	187, -593, 5, 10, -209, 359, -346, -456, -271, 82,
	119, -329, -129, 586, -129, 586, 586, -402, 586, -284,
	-240, -517, 402, 404, -619, -239, -420, 586, 586, -416,
	-415, -325, -321, 586, 586, 586, 586, -566, -567, 50,
	523, 109, -426, -566, -566, -561, -563, 168, 554, -541,
	-544, -543, 342, 459, 187, 360, 586, 481, 548, -325,
	-347, 554, -338, -426, -415, 586, 590, 541, 586, 590,
	541, 586, 186, 586, -233, -196, 554, 46, -318, -284,
	586, 590, 382, 132, 142, -319, -610, -415, 585, -416,
	585, -246, -245, -619, -496, -249, 139, -194, -194, -319,
	-416, -210, 554, -194, -568, 151, -567, 379, 181, 429,
	379, 181, -568, -568, -275, 55, -543, 342, -544, 342,
	530, 132, -612, 586, 55, -540, -319, -330, 220, -332,
	186, 359, 437, -593, 30, -248, -247, 585, -456, 430,
	430, 2, -323, -318, -416, -345, -319, -345, -244, -347,
	-243, 328, 530, -325, -319, -420, 109, 204, 503, 314,
	33, 568, -542, 314, 418, 64, 452, -542, -420, 568,
	-541, 585, 585, 346, -347, 2, -209, -319, 586, -325,
	586, -240, 452, -210, -325, 429, 350, -567, -426, 23,
	332, 126, -426, -612, -358, -358, -193, 585, 586, -318,
	-325, -415, -210, -416, -246, -366, -420, -210, 586, 586,
	-193, -234, 64, 418, -248, -210, -416, -420, -319, -420,
	-420, -320, -321, 508, 586, -420, -319, -325, 585, -325,
	-210, -358, -210, -420, 586, -420, -320,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 540, 541, 543, 544, 545, 547,
	548, 550, 552, 554, 555, 556, 558, 559, 561, 562,
	563, 564, 565, 567, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	634, 636, 0, 1329, 1331, 1333, 1335, 0, 779, 0,
	36, 37, 39, 0, -2, 325, 327, 329, 0, 356,
	358, 359, 361, 363, 364, 365, 367, -2, 0, 473,
	474, 476, 478, -2, 0, 970, 972, 0, 623, 625,
	0, 975, 977, 0, 0, 645, 646, 0, 1436, -2,
	639, 641, 643, 708, 710, 712, 714, 716, 718, 720,
	722, 724, 725, 727, 729, 731, 733, 735, 736, 738,
	740, 742, 743, 745, 746, 748, 750, 752, 754, 756,
	758, 760, 762, 764, 766, 768, 770, 772, -2, 775,
	776, -2, -2, 0, -2, -2, -2, 1347, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 417, 419, 421,
	423, 425, 428, 430, 432, 1494, 480, 482, 484, 486,
	488, 490, 492, 0, -2, 1508, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 101,
	102, 103, 104, 105, 106, 107, 108, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 99, 71, 0, 0, 1467, 1469, 1471, 1473,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 542, 546, 549, 551, 553,
	557, 560, 566, 568, 570, 525, 526, 529, 2199, 2216,
	2217, 2218, 2221, 2222, 2223, 2224, 2225, 2226, 2669, 2751,
	2752, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 527, 528, 1147, 0, 594, 592, 2184, 595,
	2470, 597, 599, 467, 468, 469, 470, 471, 472, 0,
	616, 607, 1506, 617, 619, 620, 621, 622, 589, 587,
	0, 616, 2252, 614, 1327, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 396, 1196, 1197,
	1198, 1312, 1313, 2514, 1354, 0, 225, 635, -2, -2,
	-2, 2634, -2, 667, -2, 674, 2638, 2517, 679, 0,
	681, -2, 684, 1330, 1332, 1334, 777, 778, 2202, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 235, -2, -2, -2, -2, 0, 0,
	2562, 2304, 2152, 2218, 2155, 2150, 326, 328, 330, 331,
	0, 0, 0, 0, 0, 0, 357, 360, 362, 366,
	-2, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1031, 1023, 1024, 1254, 0, 0,
	0, -2, 475, 477, 530, 531, 0, 1495, 1495, 538,
	539, -2, 0, 0, 0, 0, 296, 283, 971, 973,
	974, 0, 0, 0, 0, 624, 626, 0, 0, 264,
	976, 978, 979, 0, 0, 0, 0, 0, 298, 0,
	0, 640, 642, 644, 709, 711, 713, 715, 717, 719,
	721, 723, 726, 728, 730, 732, 734, 737, 739, 741,
	744, 747, 749, 751, 753, 755, 757, 759, 761, 763,
	765, 767, 769, 771, 773, 774, 785, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	873, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 951,
	0, 0, 788, 790, 791, 792, 0, 851, 871, 872,
	881, 0, 1187, 1496, 1356, 1337, 1351, 1356, 1339, 1340,
	1341, 1342, 1343, 1348, 1350, 1344, 1345, 1346, 42, 44,
	46, 48, 50, 52, 54, 56, 58, 418, 420, 422,
	424, 426, 429, 431, 433, -2, 1465, 1466, 481, 483,
	485, 487, 489, 491, 493, 627, 0, 629, 0, 789,
	-2, 0, 1500, 1500, 1500, 0, 0, 1466, 1464, 0,
	632, 633, 688, 689, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 1856, 0, 690, -2, 1889, 1891,
	2609, 2444, 2634, 2025, 1893, 1894, 1895, 1896, 1897, 0,
	1899, 1900, 1901, 1902, 1903, 1904, 0, 1906, 0, 1911,
	1912, 1913, 0, 2616, 2129, 2212, -2, 0, 0, 2622,
	2208, 0, 1992, 1929, -2, -2, 2235, 2214, 1700, 1701,
	1702, 1703, 1704, -2, -2, 2652, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 0, 2597, 2617,
	2618, 2623, 2625, 2619, 2606, 1954, 2317, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1727, 1736, -2, -2, -2, -2, -2, -2, -2, 2610,
	2611, 2628, 2631, 2637, 2642, 2643, 2615, 2624, 2651, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 1728, -2, -2, -2, -2,
	1483, 2483, 1486, 1147, 1484, 1468, 1470, 0, 1472, 0,
	0, 0, 1477, 1503, 1501, 0, 1552, 1481, 1482, 1570,
	1570, 1594, 0, 1575, 0, 1594, 1495, 1621, 0, 1581,
	2506, 1930, 1931, 0, 2218, 2213, -2, -2, 2649, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 0, 596,
	598, 0, 0, 0, 615, 1505, 0, 0, 0, 0,
	0, 0, 0, 399, 400, 401, 402, 403, 2617, 0,
	0, 0, 408, 0, 410, 411, 412, 413, 414, 415,
	416, 194, 2617, 498, 523, 0, 194, 2617, 501, 194,
	2617, 504, 0, 507, 1252, 194, 2617, 510, 2180, 194,
	2617, 513, 515, 2188, 194, 2617, 519, 2195, 2193, 520,
	2617, 522, 301, 299, 300, 2231, 2232, 2239, 2240, 2241,
	2242, 2650, 2652, 1323, 1324, 1325, 1326, 0, 1353, 1253,
	637, 638, 0, 662, 0, 666, 2605, -2, 0, 2526,
	-2, 670, 1357, 1361, 1362, 1363, 1364, 1365, 0, 0,
	0, 0, 1370, 0, 0, 676, 0, 0, 663, 664,
	682, 685, 0, 780, 781, 782, 783, 784, 70, 0,
	2617, 1621, 72, 0, 2174, 2243, 2244, 2245, 2246, 2247,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 76, 0, 2617, 81, 0, 2617, 0, -2, 92,
	0, 100, 0, 2177, 109, 0, 2617, 0, 2149, -2,
	0, 206, 284, 285, 286, 287, 0, 998, -2, 2617,
	1195, 0, 0, 0, 0, 961, 2146, 2151, 962, 2170,
	963, 2156, 0, 332, 333, 334, 335, 336, 0, 337,
	2617, 339, 340, 0, 342, 343, 2617, 345, 346, 0,
	348, 0, 247, 248, 2617, 370, 372, 0, 374, 375,
	0, 377, 0, 0, 0, 381, -2, 397, 0, 394,
	384, 385, 387, 388, 389, 390, 391, 0, 437, 435,
	2185, 0, 0, -2, 2617, 0, 995, 0, 0, 1232,
	-2, 2617, 1192, 0, 1239, 2617, 1235, 0, -2, 0,
	1493, 2617, 1374, 1027, 1028, 1029, 1030, 1633, 464, 0,
	1401, 0, 1403, 0, 1422, 1627, 1570, 0, 0, 1632,
	0, -2, 583, 2201, -2, 533, 0, 534, 0, -2,
	0, 313, 0, 0, 980, 981, 982, 983, 984, 987,
	988, 989, 990, 1607, 265, 267, 0, 0, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 0, 0, 647,
	0, 0, 786, 787, 0, 0, 797, 798, 799, 0,
	313, 2518, 2479, 2338, 806, 0, 809, 812, -2, 0,
	0, 0, 0, 816, 0, 821, 822, 823, 0, 0,
	827, 829, 969, 831, 0, 0, 833, 0, 837, 0,
	840, 0, 842, 0, 844, -2, -2, -2, 852, 853,
	-2, 857, -2, 0, 860, 862, 0, 864, -2, 0,
	873, 869, 870, 0, 0, 0, 0, 889, 890, 0,
	899, 0, 902, 903, 904, 0, 906, 907, 0, 909,
	910, 911, 912, 0, 0, 915, 916, -2, -2, 920,
	922, 0, -2, 0, 938, 0, 942, 0, 0, 950,
	0, 0, 793, 794, 194, 1625, 1336, -2, 1338, 0,
	-2, 0, 628, 0, 631, 1525, 1451, 1448, 0, 1522,
	1523, 1452, 0, 0, 0, 1459, 0, 1498, 1499, 0,
	0, 0, 1438, 1439, 0, 0, 0, 0, 2031, 2032,
	2033, 2034, 2047, 2035, 2036, 2046, 2044, 2045, 2037, 2038,
	2043, 2057, 2058, 2048, 2049, 2039, 2052, 2050, 2051, 2053,
	2054, 2055, 2056, 0, 0, 2062, 0, 2040, 2041, 2042,
	2070, 0, 0, 2071, 0, 2073, 0, 2063, 2059, 2060,
	2061, 0, 1835, 1837, 2137, 0, 0, 0, 2069, 2064,
	2065, 1773, 1774, 1775, 1776, 1777, 1810, 1814, 1815, 0,
	0, 1890, 2134, 2133, 1892, 0, 0, 2085, 0, 1905,
	-2, 0, 2026, 2080, 0, 0, 1914, 1915, 1916, 0,
	0, 2085, 0, 0, 2128, 1926, 1927, 1765, 0, 0,
	1994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 1713,
	0, 1715, 0, 1716, 1717, 1724, 1737, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 2109,
	-2, 0, 0, 0, 0, 1729, 0, 1485, 0, 0,
	1556, 2138, 2142, 2143, 1556, 1556, 0, 0, 2086, 1618,
	1618, 0, 0, 1613, 1613, 1613, 1611, 1594, 0, 1594,
	1604, 0, 1594, 1594, 0, -2, 1575, 0, 0, 1604,
	0, 1588, 571, 573, 575, 577, 578, 579, 581, 1622,
	1623, 0, 0, 0, 0, 2219, 0, 0, 0, 0,
	0, 2204, 0, 353, 0, 0, 0, 2572, 2517, -2,
	601, 618, 1495, 0, 2088, 1648, 1652, 0, 1654, 1655,
	1656, 1657, 1658, 0, 0, 1649, -2, 1725, 1727, 1748,
	2236, 2237, 2238, 1708, 1709, 1710, 1711, 1712, 1720, 1707,
	1707, 1707, 1718, 1747, 1739, 1747, 1743, 1693, 1694, 1695,
	1730, 1731, 1732, 1733, 0, 2572, 2517, -2, 609, 0,
	0, 1433, 210, 212, 213, 214, 215, 216, 398, 0,
	405, 406, 407, 0, 494, 0, 192, 193, 0, 194,
	2617, 499, 0, 502, 0, 194, 2617, 2144, 508, 0,
	511, 0, 0, 517, 0, 0, 0, 0, 0, 194,
	1435, 0, 0, 0, 0, -2, 672, 677, 678, 0,
	1359, 0, 1366, 699, 700, 701, 1368, 1369, 0, 1371,
	675, 702, 703, 704, 705, 706, 707, 0, 2158, 2159,
	2160, 2161, 2164, 2165, 0, 0, 673, 692, 680, 0,
	686, 110, 1309, 0, 0, 153, 0, 1309, 1309, 0,
	0, 0, 0, 179, 0, 1066, 0, 0, 0, 0,
	125, 138, 149, 122, 123, 0, 0, 0, 0, 0,
	0, 82, 1169, 0, 1172, 0, 0, 0, 0, 0,
	0, 0, 1185, 0, 0, 0, 0, 0, 0, 0,
	96, 97, 0, 137, 0, 0, 1398, 0, 132, 112,
	0, 0, 125, 139, 151, 0, 183, 185, 1063, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 217, 0,
	0, 0, 1193, 0, 1492, 0, 0, 2617, 0, 1607,
	2386, -2, -2, 265, 1607, 960, 0, 0, 2219, 2154,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 376,
	378, 379, 380, 0, 1231, 0, 386, 427, 1118, 2617,
	0, 0, 454, 449, 0, 451, 0, 0, 0, 1168,
	2617, 1166, 2189, 0, 1190, 0, 1147, 2617, 2187, 0,
	0, 0, 1240, 2228, 1249, 1253, 1388, 0, 466, 0,
	1404, 1406, 0, 0, 1628, 0, 1630, 1570, 1495, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	271, 0, 1606, 0, 0, 1607, 265, 2494, 313, 313,
	1607, 649, 1607, 651, 0, 0, 800, 801, 0, 313,
	313, 313, 807, 808, 810, 811, -2, -2, -2, -2,
	813, 814, 896, 0, 0, 0, 895, 826, 830, 0,
	954, 2502, 2517, 2572, 967, 896, 2304, 896, 2304, 896,
	2304, 841, 843, 846, 884, 892, 856, 861, 0, 0,
	866, 874, -2, 0, 876, 0, 878, 0, 880, 896,
	897, 900, 905, 908, 913, 914, 0, 929, 934, 935,
	931, 0, 0, 0, 0, 0, 0, 945, 946, 0,
	0, 953, 1186, 0, 1349, 1525, 1451, 630, 1442, 1524,
	1443, 1450, 1453, 0, 0, 1455, 0, 1457, 0, 1520,
	1521, 1528, 1529, 0, 1539, 1540, 1532, 0, -2, 0,
	0, 1535, 1536, 1461, 0, 1478, 1479, 1480, 1509, 1512,
	1268, 0, 2751, 1769, 1643, 1770, 1771, 2173, 0, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, -2,
	-2, -2, -2, -2, -2, -2, -2, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, -2, -2,
	-2, 1811, 1812, 1813, -2, 2072, 2074, 0, 2137, 0,
	-2, 0, -2, -2, -2, -2, 1832, 0, 1834, 1839,
	1841, 1843, 0, 0, 0, 0, 2136, 1853, 2120, 2121,
	0, 0, 2028, 2029, 2030, 1838, 0, 1857, 2135, 2132,
	0, 0, 2066, 0, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 0, 2084, 1508,
	1918, 0, 0, 0, 0, 1925, 1910, 2082, 0, 2081,
	0, 0, 0, 2092, 0, 2127, 2123, 0, 2171, 1764,
	1751, 1752, 1753, 1754, 1755, 1756, 1766, 0, 2168, 2205,
	2211, 2002, 0, 0, 0, 1955, 1956, 1957, 1958, 1959,
	0, 1961, 1962, 0, 1964, 1965, 0, 1967, 1968, 0,
	1970, 1971, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 0, 0, 1974, 0, 2095, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1976, 0, 1978, 2086,
	2106, 0, 0, 1858, 0, 0, 0, 0, 2026, 0,
	1981, 2086, 2114, 0, 0, 0, 0, 0, 2086, 0,
	2119, 0, 1988, 0, 1990, 1487, 0, 0, 1638, 0,
	0, 0, 2141, 1638, 1638, 0, 1551, 0, 0, 1614,
	1615, 1616, 1617, 0, 0, 1618, 0, 1608, 1612, 1609,
	1610, 1604, 1567, 0, 0, 2175, 1604, 1573, 1603, 0,
	1147, 1593, 1604, 1604, 0, -2, 1577, 1594, 0, 0,
	572, 574, 576, 580, 582, 0, 0, 1508, -2, 0,
	-2, 315, 1146, 0, 0, 0, 0, 591, 593, 0,
	0, 514, 0, 606, 0, 585, 0, 588, 0, 1639,
	1642, 0, 0, 1653, 1659, 1660, 0, -2, 0, 0,
	1749, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	409, 524, 194, 496, 0, 194, 194, 505, 0, 0,
	194, 516, 194, 2196, 194, 2194, 302, 521, 1434, 228,
	0, 665, 0, 1358, 1367, 0, 696, 0, 698, 0,
	2162, 2166, 2163, 2167, 0, 687, 0, 0, 0, 0,
	1308, 0, 1275, 0, 0, 157, 2617, 0, 196, 0,
	0, 1111, 2181, 0, 1103, 0, 0, 2324, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 1170, 1171, 1173, 1180,
	1182, 0, 1176, 2169, 0, 0, 1177, 0, 1179, 1181,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 1397, 1398, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 2148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1227, 1225, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 0, 0, -2, 0, 0, 0, 0, 0,
	238, 0, 304, 2147, 2157, 0, 985, 986, 338, 341,
	344, 347, 234, 0, 382, 0, 0, 1033, 1008, 0,
	0, 436, 313, 0, 0, 450, 454, 2198, 993, 1164,
	1167, 0, 1147, 2617, 1204, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 2617, 2176, 2227, 2228, 1390, 1398,
	0, 1638, 0, 1420, 1407, 0, 0, 0, 1420, 1424,
	1425, 1427, 1428, 0, 0, 1629, 1635, 532, 584, 1495,
	1495, 313, 311, 2447, 309, 306, 308, 0, 0, 0,
	1034, 1036, 1037, 1038, 196, 0, 2228, 1103, 2375, 2228,
	0, 1410, 1412, 0, 259, 0, 268, 1607, 266, 271,
	0, 0, 0, 448, 648, 653, 795, 0, 313, 803,
	804, 805, 848, 886, 894, 933, 815, 817, 818, 819,
	0, 0, 968, 964, 965, 966, 832, 896, 835, 896,
	838, 896, 859, 863, 868, 875, 0, 0, 0, 888,
	0, 0, 0, 0, 0, 0, 0, 939, 940, 941,
	943, 948, 947, 952, 1626, 1446, 1447, 1449, 0, 1458,
	0, 0, 1534, -2, -2, 1533, 1537, 1538, -2, -2,
	-2, -2, 1454, 0, 1463, 1460, 0, 1519, 1266, 1267,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1854,
	0, -2, 1833, 1836, 1840, 1842, 1844, 0, 0, 0,
	0, 0, 0, 2075, 0, 2077, 1855, 2130, 2133, 2068,
	0, 2024, 0, 0, 1507, 1508, 1508, 0, 1924, 0,
	2083, 0, 2090, 2091, 0, 1917, 0, 2124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1928, 0, 0,
	0, 0, 1960, 1963, 1966, 1969, 0, 0, 0, 0,
	1949, 0, 0, 0, 1953, 1719, 1705, 0, 1747, 1745,
	1746, 1740, 1747, 1744, 1697, 0, 1696, 0, 1973, 0,
	1975, 1977, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1862, 1863, 1883, 1980, 2112, 2113, 0, 0, 0, 0,
	0, 0, 1986, 0, 2118, 1987, 1989, 1495, 0, 1488,
	0, 1553, 1542, 1637, 0, 2139, 1607, 1555, 1557, 2140,
	2178, 1542, 1542, 0, 2087, 0, 0, 1598, 0, 0,
	0, 1600, 1571, 0, 0, 1565, 0, 1561, 1562, 1563,
	1564, 1572, 1147, 1602, 1574, 1578, 2205, 0, 1604, 0,
	1589, 0, 1591, 1624, 0, 1583, 1586, 0, 0, 2220,
	1638, 0, 349, 354, 355, 350, 351, 352, 600, 0,
	0, 0, 0, 2089, 0, 1644, 0, 1650, 0, 0,
	0, 0, 608, 0, 0, 0, 211, 1432, 404, 495,
	194, 500, 503, 2145, 194, 509, 512, 518, 224, 0,
	661, -2, 694, 695, 697, 0, 693, 154, 1309, 0,
	0, 1271, 1273, 2192, 1277, 1283, 1286, 0, 159, 2617,
	170, 0, 1082, 0, 2179, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 2617, 194, 2617, 194, 173, 175,
	178, 0, 182, 180, 0, 1070, 0, 0, 1073, 111,
	1309, 0, 0, 114, 118, 126, 127, 130, 0, 0,
	0, 136, 0, 0, 0, 1288, 1292, 1300, 0, 0,
	0, 1174, 1175, 1178, 1184, 83, 0, 0, 0, 1296,
	1298, 1304, 93, 94, 2190, 95, 0, 1270, 0, 0,
	0, 0, 184, 116, 120, 128, 129, 131, 0, 1306,
	113, 0, 209, 0, 0, 199, 194, 2617, 0, 201,
	0, 202, 203, 218, 0, 0, 0, 996, 997, 1226,
	1188, 1189, 0, 1194, 0, 0, 0, 0, 1607, 230,
	0, 1607, 238, 0, 2153, 0, 369, 0, 0, 0,
	0, 1032, 1129, 0, 1003, 0, 0, 0, 442, 438,
	0, 447, 453, 452, 458, -2, 0, 0, 0, 0,
	-2, 0, 0, 1242, 1236, 1237, 0, 0, 0, 0,
	2617, 1392, 1398, 0, 1493, 1508, 465, 1399, 1420, 0,
	0, 0, 1409, 1405, 1402, 1638, 0, 0, 0, 0,
	0, 1631, 1634, 535, 536, 288, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 1039, 1043, 0, 2228, 2228,
	0, 2183, 0, 0, 0, 0, 269, 0, 272, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 271, 261,
	1607, 0, 0, 650, 0, 0, 802, 0, 825, 834,
	836, 839, 877, 879, 896, 923, 924, 1060, 0, 1060,
	0, 0, 944, 1456, 0, 1531, 1462, 1513, 1514, 0,
	1268, 0, 1772, 1817, 0, 0, -2, 0, 0, 1821,
	0, 0, 0, -2, 0, 0, 0, 2076, 2078, 0,
	2132, 2067, 1919, 0, 0, 0, 1923, 1907, 1908, 0,
	2027, 2093, 2122, 2126, 0, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 0, 2172, 2206, 2210, 2000, 2001, 2005, 2186,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1742, 0, 0, 2094, 2105, 2107, 1859,
	1860, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, -2, -2, -2, 1877, 1878, 1879, -2, -2, -2,
	1884, 0, 0, 0, 2108, 2110, 2111, 2115, 2116, 0,
	1983, 1984, 1985, 2117, 0, 1495, 1489, 1550, 0, 1636,
	1554, 0, 1550, 1550, 1502, 1596, 0, 0, 1620, 0,
	1568, 0, 1569, 0, 1601, 0, 1576, 1579, 1580, 1590,
	0, 1582, 0, 1585, 0, 1919, -2, 314, 316, 318,
	0, 321, 322, 0, 0, 603, 604, 602, 586, 0,
	0, 1646, 0, 0, 1722, 1726, 1750, 611, 612, 610,
	497, 506, 226, 0, 1605, 0, 0, 0, 0, 0,
	0, 195, 1080, 1110, 0, 0, 0, 1102, 0, 0,
	1116, 161, 162, 0, 0, 0, 0, 171, 0, 0,
	168, 0, 177, 181, 1067, 0, 0, 0, 0, 1276,
	0, 0, 0, 133, 134, 135, 0, 140, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 1382, 1383,
	0, 1377, 0, 0, 0, 197, 0, 0, 0, 1265,
	220, 0, 0, 0, 0, 0, 1229, 1230, 1289, 1293,
	1301, 0, 0, 0, 238, 236, 0, 239, 0, 242,
	243, 0, 245, 238, 232, 0, 0, 0, 1147, 383,
	1006, 1117, 0, 1119, 0, 1004, 0, 0, 1118, 434,
	0, 441, 0, 455, 0, 0, 1168, 0, 0, 1191,
	1202, 1147, 0, 1241, 1243, 0, 1251, 0, 0, 0,
	1394, 1398, 0, 1387, 1388, 1527, 1400, 1418, -2, 0,
	0, 1508, 1426, 1423, 1429, 1430, 0, 310, 0, 305,
	307, 0, 291, 0, 0, 1035, 1040, 0, 0, 0,
	0, 0, 1411, 1413, 0, 0, 0, 0, 0, 0,
	260, 271, 1607, 297, 0, 796, 820, 887, 925, 1059,
	0, 0, 927, 0, 0, 1530, 1517, 1518, 1515, 1268,
	1819, 1823, 0, 0, 0, 1825, -2, 0, 1847, -2,
	-2, 2079, 2131, 1898, 1508, 1920, 1922, 1909, 2125, 1767,
	0, 2007, 2004, 0, 1991, 0, 1944, 1945, 0, 0,
	1948, 1950, 1951, 1952, 1706, 1699, 1698, 2104, 0, 0,
	0, 0, 1982, 1490, 0, 1996, 0, 0, 1558, 1996,
	1996, 1597, 0, 1599, 1566, 1559, 0, 2206, 1592, 1584,
	0, 0, 319, 0, 323, 324, 0, 1640, 1645, 0,
	1651, 1721, 227, 155, 156, 1280, 1284, 1281, 0, 158,
	0, 1081, 0, 1084, 0, 0, 0, 0, 1091, 1103,
	0, 0, 0, 0, 0, 1104, 0, 1133, 0, 1256,
	1263, 0, -2, 0, 0, 0, 164, 187, 0, 0,
	188, 1310, 166, 0, 0, 194, 194, 0, 0, 1272,
	1274, 1287, 0, 0, 0, 0, 143, 0, 0, 1290,
	1294, 1302, 1297, 1299, 1305, 0, 1384, 0, 0, 1307,
	207, 208, 0, 194, 0, 194, 200, 194, 1265, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 231, 303,
	238, 371, 0, 1054, 0, 1129, 1121, 1122, 1123, 0,
	1128, 1130, 0, 0, 1020, 1005, 0, 1016, 0, 0,
	1033, 1008, 0, 439, 456, 0, 459, 0, 462, 994,
	1165, 1199, 1147, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 1396, 1398, 0, 1389, 1390, 1420, 1526, 0,
	0, 0, 1408, 1527, 0, 312, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 273, 0, 274,
	275, 276, 262, 263, 652, 654, 0, 0, 660, 1058,
	0, 0, 0, 0, 1516, 1827, -2, -2, 1848, 0,
	2207, 2209, 1508, 0, 1993, 1510, 0, 0, -2, 0,
	0, 0, 1491, 1474, 0, 1549, 1541, 1543, 1545, 2505,
	2299, 2616, 1475, 1476, 1619, 0, 1587, 320, 605, 0,
	1647, 0, 0, 1282, 160, 0, 1085, 1086, 2182, 1088,
	0, 1090, 1092, 1093, 1094, 0, 1097, 2230, 0, 1101,
	0, 1112, 1134, 0, 1143, 0, 1258, 1268, 1262, 0,
	1260, 1145, 0, 163, 165, 189, 186, 1265, 0, 167,
	176, 0, 0, 115, 0, 0, 2293, 146, 144, 142,
	1269, 117, 0, 209, 219, 1264, 221, 204, 194, 0,
	1291, 1295, 1303, 240, 0, 241, 244, 0, 0, 1069,
	0, 1007, 1120, 0, 1131, 1132, 1010, 0, 1009, 0,
	0, 0, 0, 0, 440, 443, 0, 446, 0, 0,
	0, 0, 0, 1244, 1242, 0, 1250, 0, 0, 0,
	1376, 0, 0, 1391, 1392, 463, 1414, 0, 0, 1420,
	1431, 290, 0, 0, 1041, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1042, 1145, 0, 0, 1109, 0,
	295, 270, 0, 656, 0, 658, 0, 926, 928, 0,
	0, 1921, 2011, 0, 0, 1946, 1947, -2, 0, 1887,
	1995, 1997, 0, 0, 0, 0, 0, 1560, 1641, 1278,
	0, 1285, 1083, 1087, 0, 0, 0, 1151, 0, 0,
	1105, 0, 1137, 1138, 1054, 0, 1139, 1140, 1141, 1257,
	1519, 1263, 1054, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 198, 222, 1265, 237, 255, 0, 1200,
	1008, 1068, 0, 0, 1018, 0, 1021, 0, 1017, 1014,
	1015, 1006, 0, 444, 445, 460, 0, 461, 0, 1203,
	0, 0, 1251, 0, 0, 1379, 1375, 1398, 1393, 1394,
	1638, 1417, 1421, 0, 0, 1143, 1145, 1065, 0, 655,
	0, 0, 936, 937, 0, 0, 0, 0, 2006, 1511,
	1888, 0, 0, 1544, 1546, 1547, 1548, 1279, 0, 0,
	1096, 1156, 0, 0, 0, 1135, 1136, 1065, 0, 1261,
	1259, 1114, 0, 1147, 169, 0, 1145, 0, 1074, 0,
	0, 1077, 0, 0, 147, 2293, 145, 0, 194, 258,
	0, 252, 250, 251, 1010, 0, 0, 1125, 1127, 0,
	1022, 1054, 1020, 457, 1201, 1234, 1145, 0, 1143, 0,
	1386, 1398, 1380, 1381, 0, 1396, 0, 313, 313, 1054,
	1143, 1008, 1064, 313, 657, 659, 2003, 2023, 2012, -2,
	2575, 2300, 0, 2023, 2023, 1998, 1999, 0, 0, 1098,
	1152, 1153, 0, 1148, 1149, 1150, 2229, 1099, 1100, 1133,
	0, 0, 1151, 190, 1054, 1071, 0, 0, 1072, 0,
	0, 150, 0, 152, 223, 246, 0, 0, 1002, 0,
	1124, 0, 0, 0, 0, 1069, 1010, 1143, 0, 1054,
	0, 1372, 1385, 0, 1395, 1376, 0, 292, 293, 1065,
	1054, 1638, 0, 294, 2008, 0, 0, 2014, 2015, 2016,
	2017, 2018, 2009, 2010, 1089, 0, 1154, 0, 1155, 0,
	0, 0, 1638, 1142, 0, 1156, 174, 1075, 0, 1078,
	0, 148, 0, 253, 254, 999, 1001, 0, 1126, 1011,
	0, 1013, 1008, 1019, 1054, 0, 1065, 0, 1378, 2191,
	1379, 1415, 0, 1008, 1065, 1108, 0, 2020, 2021, 0,
	0, 0, 1157, 0, 1160, 1161, 0, 1158, 1113, 0,
	1133, 0, 0, 0, 0, 1012, 1010, 1065, 1145, 1008,
	1143, 1386, 0, 1638, 1008, 2019, 2022, 2013, 1095, 1159,
	1162, 1163, 1144, 1115, 0, 0, 256, 0, 1057, 1002,
	1008, 1143, 1638, 1054, 1373, 1638, 1106, 1638, 1062, 0,
	0, 1053, 1055, 1056, 1000, 1638, 1054, 1247, 1065, 1416,
	1107, 1076, 1061, 0, 257, 1245, 1065, 1008, 0, 1008,
	1638, 0, 1638, 1248, 1062, 1246, 1079,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 574, 3, 580, 575, 3,
	585, 586, 578, 576, 590, 577, 587, 579, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 593, 3,
	566, 568, 567, 571, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 583, 3, 584, 581, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 591, 573, 592, 569,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 570, 57909, 572,
	57910, 582, 57911, 588, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1349
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1354
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1356
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1359
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1360
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1361
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1362
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1363
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1364
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1365
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1366
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1367
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1368
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1369
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1376
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1385
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1387
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1390
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1391
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1392
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1393
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1395
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1396
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1397
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1398
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1457
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1519
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1549
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1553
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1559
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1568
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1586
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1593
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1650
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1674
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1683
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1704
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1712
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1735
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1736
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1740
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1749
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1761
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1766
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1773
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1785
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1792
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1800
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1805
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1809
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1820
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1839
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1849
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1859
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1868
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1879
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1885
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1911
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1916
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1988
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2002
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2045
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2048
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2054
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2106
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = nil
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = true
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = false
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2222
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2279
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2283
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2321
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2326
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2333
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2341
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2372
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2456
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2464
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2491
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2608
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2625
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			return unimplemented(sqllex, "alter function")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2843
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2847
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2851
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2889
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2898
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2904
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2909
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2914
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2919
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2924
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2955
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = nil
		}
	case 314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3031
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3045
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3065
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3097
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3098
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3099
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3100
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3211
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3227
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3231
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3236
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3248
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3250
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3255
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "CREATE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3269
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3273
		{
			return unimplemented(sqllex, "create access method")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			return unimplemented(sqllex, "create cast")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3276
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3278
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3279
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3280
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3281
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3282
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3283
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3284
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3285
		{
			return unimplemented(sqllex, "create publication")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3286
		{
			return unimplemented(sqllex, "create rule")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			return unimplemented(sqllex, "create server")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3290
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3294
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3295
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3298
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3299
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3302
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3303
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3306
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3307
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3312
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3313
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3314
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3315
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3317
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return unimplemented(sqllex, "drop server")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3327
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3328
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3333
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3334
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3335
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3372
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3450
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3485
		{

			sqlVAL.union.val = nil
		}
	case 455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "DELETE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3572
		{
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3587
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3598
		{
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "DROP")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3603
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3604
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3719
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3726
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3798
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3832
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3864
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3888
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3896
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "DELETE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3922
		{
			return helpWith(sqllex, "INSERT")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "DELETE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3943
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			return helpWith(sqllex, "INSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3977
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4010
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4103
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "GRANT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4154
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4166
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "RESET")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "RESET")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "USE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4240
		{
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "USE")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4264
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4447
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4454
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return unimplemented(sqllex, "set from current")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = tree.Low
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = tree.Normal
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = tree.High
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4617
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4620
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4622
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4638
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4640
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4642
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SHOW")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4661
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4670
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4680
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.str = "client_encoding"
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.str = "timezone"
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4730
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4745
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4793
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4802
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4939
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = true
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = true
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = false
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5058
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5076
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5092
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5100
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5140
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5145
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5147
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5166
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5171
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = true
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = false
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5264
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5285
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5290
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5313
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5366
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5374
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5400
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5409
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5418
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5441
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5453
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5512
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5522
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5669
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5772
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5783
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5784
		{
			return helpWith(sqllex, "RESUME")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5811
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5843
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5851
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5886
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5953
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5969
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5998
		{

			sqlVAL.union.val = nil
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.str = ""
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = nil
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6037
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6041
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6067
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6081
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6096
		{
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6153
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6190
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6193
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6196
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6197
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6203
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6219
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6224
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.str = ""
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6367
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6467
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6492
		{

			sqlVAL.union.val = true
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = false
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6504
		{
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6605
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6616
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6633
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6643
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6658
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6723
		{
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6725
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6727
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6728
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6884
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6893
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6912
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6917
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6927
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6939
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6941
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6979
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = true
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7004
		{

			sqlVAL.union.val = true
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = false
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7019
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7033
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7045
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7057
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7067
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7077
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = nil
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7187
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7213
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7215
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7217
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7219
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7221
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7223
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7261
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7279
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7298
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7315
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7332
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7336
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = false
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = true
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = false
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = true
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = false
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7390
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7396
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7402
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.str = ""
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.str = ""
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7469
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7475
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7700
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7706
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7718
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7724
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7738
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7744
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7761
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7762
		{
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7765
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7766
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7777
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7804
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7825
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7833
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7873
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7877
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7898
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7903
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7916
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7921
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7930
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7931
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7932
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7949
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7953
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7981
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7996
		{
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8000
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8087
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.str = ""
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8113
		{

		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8128
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.str = ""
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.str = ""
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.str = ""
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.str = ""
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8183
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8196
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8197
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8244
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8248
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8257
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8333
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8337
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8428
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8443
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8622
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8623
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8624
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8685
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8745
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = true
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = false
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8798
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8799
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = nil
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8813
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = true
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = false
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = true
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8842
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8843
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8846
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8847
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8888
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8909
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8914
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8973
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9028
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9032
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9068
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9069
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9099
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9101
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9138
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9143
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9190
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9229
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9239
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9285
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9315
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9348
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = nil
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = true
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = false
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.str = tree.AstFull
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.str = tree.AstRight
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.str = tree.AstInner
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9467
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9468
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.str = tree.AstHash
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.str = ""
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9537
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9560
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9566
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9572
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9582
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = true
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = false
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = true
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = false
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9631
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9644
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9652
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9653
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9671
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9681
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9701
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9762
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9763
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = types.Geography
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9812
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9820
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9854
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = nil
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = types.Int2
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = types.Int
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = types.Float4
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = types.Float
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9897
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9905
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9913
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = types.Bool
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = types.Float
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9946
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9952
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9974
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = types.String
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = false
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = types.Date
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10023
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10031
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10045
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10054
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10062
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10079
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = true
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = false
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = false
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = types.Interval
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10103
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10187
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10202
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = nil
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10232
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10292
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10441
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10449
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10628
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10758
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10862
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10867
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10917
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10947
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10958
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10959
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10983
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11049
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11188
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11215
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11220
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11244
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11245
		{
			return unimplemented(sqllex, "treat")
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11266
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11271
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.str = ""
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11407
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11420
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11517
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = tree.Any
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = tree.Some
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = tree.All
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = tree.Div
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = tree.LT
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = tree.GT
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = tree.LE
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = tree.GE
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = tree.NE
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = tree.JSONExists
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = tree.Contains
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = tree.ContainedBy
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = tree.LShift
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = tree.RShift
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = tree.Concat
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = tree.JSONFetchVal
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = tree.JSONFetchText
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = tree.JSONFetchValPath
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = tree.JSONFetchTextPath
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = tree.JSONSomeExists
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = tree.JSONAllExists
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = tree.NotRegMatch
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = tree.RegIMatch
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = tree.NotRegIMatch
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = tree.Overlaps
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = tree.UnaryComplement
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = tree.UnarySqrt
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = tree.UnaryCbrt
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = tree.Like
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11933
		{
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11934
		{
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12006
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12014
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12087
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12103
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12112
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12123
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12132
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12152
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12378
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12385
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.str = ""
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
