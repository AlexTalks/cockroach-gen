// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:719
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const STREAM = lex.STREAM
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"STREAM",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12786

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1469,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	257, 377,
	-2, 0,
	-1, 73,
	239, 225,
	503, 225,
	-2, 0,
	-1, 84,
	227, 1217,
	241, 1217,
	257, 373,
	383, 373,
	393, 987,
	429, 373,
	441, 987,
	487, 987,
	514, 373,
	540, 987,
	-2, 0,
	-1, 90,
	132, 1469,
	234, 1469,
	525, 1469,
	526, 1469,
	-2, 0,
	-1, 106,
	150, 1440,
	169, 1440,
	182, 1440,
	237, 1440,
	270, 1440,
	335, 1440,
	345, 1440,
	520, 1440,
	-2, 1411,
	-1, 145,
	158, 848,
	256, 848,
	386, 815,
	446, 815,
	486, 815,
	506, 848,
	508, 815,
	-2, 0,
	-1, 147,
	4, 1471,
	21, 1471,
	22, 1471,
	23, 1471,
	24, 1471,
	25, 1471,
	26, 1471,
	27, 1471,
	28, 1471,
	30, 1471,
	31, 1471,
	37, 1471,
	42, 1471,
	43, 1471,
	45, 1471,
	46, 1471,
	47, 1471,
	48, 1471,
	49, 1471,
	50, 1471,
	51, 1471,
	52, 1471,
	54, 1471,
	55, 1471,
	56, 1471,
	57, 1471,
	59, 1471,
	60, 1471,
	61, 1471,
	62, 1471,
	63, 1471,
	64, 1471,
	65, 1471,
	69, 1471,
	70, 1471,
	71, 1471,
	72, 1471,
	74, 1471,
	75, 1471,
	76, 1471,
	80, 1471,
	81, 1471,
	82, 1471,
	83, 1471,
	84, 1471,
	85, 1471,
	86, 1471,
	89, 1471,
	90, 1471,
	91, 1471,
	92, 1471,
	93, 1471,
	95, 1471,
	97, 1471,
	98, 1471,
	99, 1471,
	100, 1471,
	101, 1471,
	102, 1471,
	104, 1471,
	105, 1471,
	106, 1471,
	108, 1471,
	109, 1471,
	110, 1471,
	118, 1471,
	119, 1471,
	120, 1471,
	121, 1471,
	123, 1471,
	124, 1471,
	125, 1471,
	127, 1471,
	128, 1471,
	129, 1471,
	131, 1471,
	132, 1471,
	133, 1471,
	135, 1471,
	136, 1471,
	137, 1471,
	140, 1471,
	141, 1471,
	142, 1471,
	144, 1471,
	145, 1471,
	147, 1471,
	148, 1471,
	149, 1471,
	151, 1471,
	152, 1471,
	153, 1471,
	154, 1471,
	155, 1471,
	156, 1471,
	157, 1471,
	158, 1471,
	159, 1471,
	160, 1471,
	161, 1471,
	162, 1471,
	163, 1471,
	164, 1471,
	165, 1471,
	166, 1471,
	168, 1471,
	174, 1471,
	175, 1471,
	176, 1471,
	177, 1471,
	181, 1471,
	183, 1471,
	187, 1471,
	188, 1471,
	189, 1471,
	190, 1471,
	191, 1471,
	192, 1471,
	193, 1471,
	194, 1471,
	195, 1471,
	196, 1471,
	197, 1471,
	198, 1471,
	199, 1471,
	201, 1471,
	202, 1471,
	204, 1471,
	205, 1471,
	207, 1471,
	208, 1471,
	209, 1471,
	210, 1471,
	211, 1471,
	212, 1471,
	213, 1471,
	214, 1471,
	215, 1471,
	217, 1471,
	218, 1471,
	220, 1471,
	221, 1471,
	222, 1471,
	223, 1471,
	227, 1471,
	228, 1471,
	229, 1471,
	230, 1471,
	231, 1471,
	234, 1471,
	235, 1471,
	236, 1471,
	238, 1471,
	240, 1471,
	241, 1471,
	243, 1471,
	245, 1471,
	246, 1471,
	247, 1471,
	249, 1471,
	253, 1471,
	254, 1471,
	255, 1471,
	256, 1471,
	257, 1471,
	258, 1471,
	260, 1471,
	261, 1471,
	262, 1471,
	264, 1471,
	265, 1471,
	267, 1471,
	268, 1471,
	271, 1471,
	275, 1471,
	276, 1471,
	277, 1471,
	280, 1471,
	281, 1471,
	282, 1471,
	283, 1471,
	285, 1471,
	286, 1471,
	287, 1471,
	288, 1471,
	289, 1471,
	290, 1471,
	291, 1471,
	292, 1471,
	293, 1471,
	294, 1471,
	295, 1471,
	296, 1471,
	297, 1471,
	298, 1471,
	299, 1471,
	300, 1471,
	301, 1471,
	302, 1471,
	303, 1471,
	304, 1471,
	305, 1471,
	306, 1471,
	308, 1471,
	310, 1471,
	311, 1471,
	312, 1471,
	313, 1471,
	314, 1471,
	315, 1471,
	316, 1471,
	317, 1471,
	318, 1471,
	319, 1471,
	320, 1471,
	321, 1471,
	323, 1471,
	325, 1471,
	327, 1471,
	328, 1471,
	330, 1471,
	331, 1471,
	332, 1471,
	333, 1471,
	334, 1471,
	337, 1471,
	340, 1471,
	341, 1471,
	342, 1471,
	343, 1471,
	346, 1471,
	347, 1471,
	348, 1471,
	350, 1471,
	352, 1471,
	353, 1471,
	354, 1471,
	355, 1471,
	356, 1471,
	357, 1471,
	358, 1471,
	359, 1471,
	360, 1471,
	361, 1471,
	362, 1471,
	363, 1471,
	365, 1471,
	366, 1471,
	367, 1471,
	368, 1471,
	369, 1471,
	370, 1471,
	371, 1471,
	372, 1471,
	373, 1471,
	374, 1471,
	375, 1471,
	376, 1471,
	377, 1471,
	378, 1471,
	379, 1471,
	381, 1471,
	382, 1471,
	384, 1471,
	385, 1471,
	386, 1471,
	387, 1471,
	388, 1471,
	389, 1471,
	390, 1471,
	391, 1471,
	392, 1471,
	393, 1471,
	394, 1471,
	395, 1471,
	397, 1471,
	399, 1471,
	400, 1471,
	401, 1471,
	406, 1471,
	408, 1471,
	409, 1471,
	410, 1471,
	411, 1471,
	412, 1471,
	413, 1471,
	414, 1471,
	415, 1471,
	416, 1471,
	418, 1471,
	419, 1471,
	420, 1471,
	422, 1471,
	423, 1471,
	424, 1471,
	425, 1471,
	426, 1471,
	427, 1471,
	429, 1471,
	430, 1471,
	431, 1471,
	432, 1471,
	433, 1471,
	434, 1471,
	435, 1471,
	436, 1471,
	437, 1471,
	438, 1471,
	439, 1471,
	441, 1471,
	442, 1471,
	443, 1471,
	444, 1471,
	445, 1471,
	446, 1471,
	448, 1471,
	449, 1471,
	450, 1471,
	451, 1471,
	452, 1471,
	453, 1471,
	455, 1471,
	456, 1471,
	457, 1471,
	458, 1471,
	459, 1471,
	460, 1471,
	461, 1471,
	463, 1471,
	465, 1471,
	466, 1471,
	467, 1471,
	468, 1471,
	469, 1471,
	470, 1471,
	471, 1471,
	472, 1471,
	473, 1471,
	474, 1471,
	475, 1471,
	476, 1471,
	477, 1471,
	478, 1471,
	479, 1471,
	480, 1471,
	482, 1471,
	483, 1471,
	485, 1471,
	486, 1471,
	488, 1471,
	489, 1471,
	490, 1471,
	491, 1471,
	492, 1471,
	493, 1471,
	494, 1471,
	495, 1471,
	496, 1471,
	498, 1471,
	499, 1471,
	500, 1471,
	501, 1471,
	502, 1471,
	504, 1471,
	506, 1471,
	507, 1471,
	508, 1471,
	509, 1471,
	510, 1471,
	511, 1471,
	513, 1471,
	514, 1471,
	515, 1471,
	516, 1471,
	518, 1471,
	519, 1471,
	522, 1471,
	523, 1471,
	524, 1471,
	525, 1471,
	526, 1471,
	527, 1471,
	528, 1471,
	530, 1471,
	533, 1471,
	534, 1471,
	535, 1471,
	536, 1471,
	537, 1471,
	538, 1471,
	540, 1471,
	541, 1471,
	542, 1471,
	543, 1471,
	549, 1471,
	550, 1471,
	551, 1471,
	552, 1471,
	553, 1471,
	554, 1471,
	-2, 0,
	-1, 148,
	1, 1326,
	130, 1326,
	245, 1326,
	324, 1326,
	381, 1326,
	390, 1326,
	558, 1326,
	582, 1326,
	-2, 0,
	-1, 150,
	1, 1326,
	582, 1326,
	-2, 0,
	-1, 151,
	1, 1326,
	582, 1326,
	-2, 0,
	-1, 152,
	1, 1326,
	503, 1326,
	582, 1326,
	-2, 0,
	-1, 181,
	150, 1439,
	169, 1439,
	182, 1439,
	237, 1439,
	270, 1439,
	335, 1439,
	345, 1439,
	520, 1439,
	-2, 1414,
	-1, 227,
	4, 1478,
	5, 1478,
	6, 1478,
	7, 1478,
	8, 1478,
	9, 1478,
	10, 1478,
	21, 1478,
	22, 1478,
	23, 1478,
	24, 1478,
	25, 1478,
	26, 1478,
	27, 1478,
	28, 1478,
	30, 1478,
	31, 1478,
	37, 1478,
	38, 1478,
	42, 1478,
	43, 1478,
	44, 1478,
	45, 1478,
	46, 1478,
	47, 1478,
	48, 1478,
	49, 1478,
	50, 1478,
	51, 1478,
	52, 1478,
	54, 1478,
	55, 1478,
	56, 1478,
	57, 1478,
	59, 1478,
	60, 1478,
	61, 1478,
	62, 1478,
	63, 1478,
	64, 1478,
	65, 1478,
	66, 1478,
	67, 1478,
	68, 1478,
	69, 1478,
	70, 1478,
	71, 1478,
	72, 1478,
	74, 1478,
	75, 1478,
	76, 1478,
	78, 1478,
	80, 1478,
	81, 1478,
	82, 1478,
	83, 1478,
	84, 1478,
	85, 1478,
	86, 1478,
	89, 1478,
	90, 1478,
	91, 1478,
	92, 1478,
	93, 1478,
	95, 1478,
	97, 1478,
	98, 1478,
	99, 1478,
	100, 1478,
	101, 1478,
	102, 1478,
	104, 1478,
	105, 1478,
	106, 1478,
	107, 1478,
	108, 1478,
	109, 1478,
	110, 1478,
	111, 1478,
	112, 1478,
	113, 1478,
	114, 1478,
	115, 1478,
	116, 1478,
	117, 1478,
	118, 1478,
	119, 1478,
	120, 1478,
	121, 1478,
	122, 1478,
	123, 1478,
	124, 1478,
	125, 1478,
	126, 1478,
	127, 1478,
	128, 1478,
	129, 1478,
	131, 1478,
	132, 1478,
	133, 1478,
	135, 1478,
	136, 1478,
	137, 1478,
	140, 1478,
	141, 1478,
	142, 1478,
	144, 1478,
	145, 1478,
	147, 1478,
	148, 1478,
	149, 1478,
	151, 1478,
	152, 1478,
	153, 1478,
	154, 1478,
	155, 1478,
	156, 1478,
	157, 1478,
	158, 1478,
	159, 1478,
	160, 1478,
	161, 1478,
	162, 1478,
	163, 1478,
	164, 1478,
	165, 1478,
	166, 1478,
	167, 1478,
	168, 1478,
	174, 1478,
	175, 1478,
	176, 1478,
	177, 1478,
	181, 1478,
	183, 1478,
	186, 1478,
	187, 1478,
	188, 1478,
	189, 1478,
	190, 1478,
	191, 1478,
	192, 1478,
	193, 1478,
	194, 1478,
	195, 1478,
	196, 1478,
	197, 1478,
	198, 1478,
	199, 1478,
	201, 1478,
	202, 1478,
	204, 1478,
	205, 1478,
	207, 1478,
	208, 1478,
	209, 1478,
	210, 1478,
	211, 1478,
	212, 1478,
	213, 1478,
	214, 1478,
	215, 1478,
	216, 1478,
	217, 1478,
	218, 1478,
	220, 1478,
	221, 1478,
	222, 1478,
	223, 1478,
	227, 1478,
	228, 1478,
	229, 1478,
	230, 1478,
	231, 1478,
	233, 1478,
	234, 1478,
	235, 1478,
	236, 1478,
	238, 1478,
	240, 1478,
	241, 1478,
	242, 1478,
	243, 1478,
	244, 1478,
	245, 1478,
	246, 1478,
	247, 1478,
	248, 1478,
	249, 1478,
	253, 1478,
	254, 1478,
	255, 1478,
	256, 1478,
	257, 1478,
	258, 1478,
	260, 1478,
	261, 1478,
	262, 1478,
	264, 1478,
	265, 1478,
	266, 1478,
	267, 1478,
	268, 1478,
	269, 1478,
	271, 1478,
	275, 1478,
	276, 1478,
	277, 1478,
	278, 1478,
	279, 1478,
	280, 1478,
	281, 1478,
	282, 1478,
	283, 1478,
	285, 1478,
	286, 1478,
	287, 1478,
	288, 1478,
	289, 1478,
	290, 1478,
	291, 1478,
	292, 1478,
	293, 1478,
	294, 1478,
	295, 1478,
	296, 1478,
	297, 1478,
	298, 1478,
	299, 1478,
	300, 1478,
	301, 1478,
	302, 1478,
	303, 1478,
	304, 1478,
	305, 1478,
	306, 1478,
	308, 1478,
	309, 1478,
	310, 1478,
	311, 1478,
	312, 1478,
	313, 1478,
	314, 1478,
	315, 1478,
	316, 1478,
	317, 1478,
	318, 1478,
	319, 1478,
	320, 1478,
	321, 1478,
	322, 1478,
	323, 1478,
	324, 1478,
	325, 1478,
	326, 1478,
	327, 1478,
	328, 1478,
	329, 1478,
	330, 1478,
	331, 1478,
	332, 1478,
	333, 1478,
	334, 1478,
	337, 1478,
	341, 1478,
	342, 1478,
	343, 1478,
	346, 1478,
	347, 1478,
	348, 1478,
	349, 1478,
	350, 1478,
	351, 1478,
	352, 1478,
	353, 1478,
	354, 1478,
	355, 1478,
	356, 1478,
	357, 1478,
	358, 1478,
	359, 1478,
	360, 1478,
	361, 1478,
	362, 1478,
	363, 1478,
	365, 1478,
	366, 1478,
	367, 1478,
	368, 1478,
	369, 1478,
	370, 1478,
	371, 1478,
	372, 1478,
	373, 1478,
	374, 1478,
	375, 1478,
	376, 1478,
	377, 1478,
	378, 1478,
	379, 1478,
	381, 1478,
	382, 1478,
	384, 1478,
	385, 1478,
	386, 1478,
	387, 1478,
	388, 1478,
	389, 1478,
	390, 1478,
	391, 1478,
	392, 1478,
	393, 1478,
	394, 1478,
	395, 1478,
	397, 1478,
	399, 1478,
	400, 1478,
	401, 1478,
	406, 1478,
	408, 1478,
	409, 1478,
	410, 1478,
	411, 1478,
	412, 1478,
	413, 1478,
	414, 1478,
	415, 1478,
	416, 1478,
	418, 1478,
	419, 1478,
	420, 1478,
	421, 1478,
	422, 1478,
	423, 1478,
	424, 1478,
	425, 1478,
	426, 1478,
	427, 1478,
	429, 1478,
	430, 1478,
	431, 1478,
	432, 1478,
	433, 1478,
	434, 1478,
	435, 1478,
	436, 1478,
	437, 1478,
	438, 1478,
	439, 1478,
	441, 1478,
	442, 1478,
	443, 1478,
	444, 1478,
	445, 1478,
	446, 1478,
	447, 1478,
	448, 1478,
	449, 1478,
	450, 1478,
	451, 1478,
	452, 1478,
	453, 1478,
	454, 1478,
	455, 1478,
	456, 1478,
	457, 1478,
	458, 1478,
	459, 1478,
	460, 1478,
	461, 1478,
	463, 1478,
	465, 1478,
	466, 1478,
	467, 1478,
	468, 1478,
	469, 1478,
	470, 1478,
	471, 1478,
	472, 1478,
	473, 1478,
	474, 1478,
	475, 1478,
	476, 1478,
	477, 1478,
	478, 1478,
	479, 1478,
	480, 1478,
	482, 1478,
	483, 1478,
	484, 1478,
	485, 1478,
	486, 1478,
	488, 1478,
	489, 1478,
	490, 1478,
	491, 1478,
	492, 1478,
	493, 1478,
	494, 1478,
	495, 1478,
	496, 1478,
	498, 1478,
	499, 1478,
	500, 1478,
	501, 1478,
	502, 1478,
	504, 1478,
	506, 1478,
	507, 1478,
	508, 1478,
	509, 1478,
	510, 1478,
	511, 1478,
	512, 1478,
	513, 1478,
	514, 1478,
	515, 1478,
	516, 1478,
	518, 1478,
	519, 1478,
	521, 1478,
	522, 1478,
	523, 1478,
	524, 1478,
	525, 1478,
	526, 1478,
	527, 1478,
	528, 1478,
	529, 1478,
	530, 1478,
	533, 1478,
	534, 1478,
	535, 1478,
	536, 1478,
	537, 1478,
	538, 1478,
	540, 1478,
	541, 1478,
	542, 1478,
	543, 1478,
	549, 1478,
	550, 1478,
	551, 1478,
	552, 1478,
	553, 1478,
	554, 1478,
	555, 1478,
	563, 1478,
	570, 1478,
	571, 1478,
	572, 1478,
	579, 1478,
	583, 1478,
	-2, 0,
	-1, 720,
	4, 1215,
	21, 1215,
	22, 1215,
	23, 1215,
	24, 1215,
	25, 1215,
	26, 1215,
	27, 1215,
	28, 1215,
	30, 1215,
	31, 1215,
	37, 1215,
	42, 1215,
	43, 1215,
	45, 1215,
	46, 1215,
	47, 1215,
	48, 1215,
	49, 1215,
	50, 1215,
	51, 1215,
	52, 1215,
	54, 1215,
	55, 1215,
	56, 1215,
	57, 1215,
	59, 1215,
	60, 1215,
	61, 1215,
	62, 1215,
	63, 1215,
	64, 1215,
	65, 1215,
	69, 1215,
	70, 1215,
	71, 1215,
	72, 1215,
	74, 1215,
	75, 1215,
	76, 1215,
	80, 1215,
	81, 1215,
	82, 1215,
	83, 1215,
	84, 1215,
	85, 1215,
	86, 1215,
	89, 1215,
	90, 1215,
	91, 1215,
	92, 1215,
	93, 1215,
	95, 1215,
	97, 1215,
	98, 1215,
	99, 1215,
	100, 1215,
	101, 1215,
	102, 1215,
	104, 1215,
	105, 1215,
	106, 1215,
	108, 1215,
	109, 1215,
	110, 1215,
	118, 1215,
	119, 1215,
	120, 1215,
	121, 1215,
	123, 1215,
	124, 1215,
	125, 1215,
	127, 1215,
	128, 1215,
	129, 1215,
	131, 1215,
	132, 1215,
	133, 1215,
	135, 1215,
	136, 1215,
	137, 1215,
	140, 1215,
	141, 1215,
	142, 1215,
	144, 1215,
	145, 1215,
	147, 1215,
	148, 1215,
	149, 1215,
	151, 1215,
	152, 1215,
	153, 1215,
	154, 1215,
	155, 1215,
	156, 1215,
	157, 1215,
	158, 1215,
	159, 1215,
	160, 1215,
	161, 1215,
	162, 1215,
	163, 1215,
	164, 1215,
	165, 1215,
	166, 1215,
	168, 1215,
	174, 1215,
	175, 1215,
	176, 1215,
	177, 1215,
	181, 1215,
	183, 1215,
	187, 1215,
	188, 1215,
	189, 1215,
	190, 1215,
	191, 1215,
	192, 1215,
	193, 1215,
	194, 1215,
	195, 1215,
	196, 1215,
	197, 1215,
	198, 1215,
	199, 1215,
	201, 1215,
	202, 1215,
	204, 1215,
	205, 1215,
	207, 1215,
	208, 1215,
	209, 1215,
	210, 1215,
	211, 1215,
	212, 1215,
	213, 1215,
	214, 1215,
	215, 1215,
	217, 1215,
	218, 1215,
	220, 1215,
	221, 1215,
	222, 1215,
	223, 1215,
	227, 1215,
	228, 1215,
	229, 1215,
	230, 1215,
	231, 1215,
	234, 1215,
	235, 1215,
	236, 1215,
	238, 1215,
	240, 1215,
	241, 1215,
	243, 1215,
	245, 1215,
	246, 1215,
	247, 1215,
	249, 1215,
	253, 1215,
	254, 1215,
	255, 1215,
	256, 1215,
	257, 1215,
	258, 1215,
	260, 1215,
	261, 1215,
	262, 1215,
	264, 1215,
	265, 1215,
	267, 1215,
	268, 1215,
	271, 1215,
	275, 1215,
	276, 1215,
	277, 1215,
	280, 1215,
	281, 1215,
	282, 1215,
	283, 1215,
	285, 1215,
	286, 1215,
	287, 1215,
	288, 1215,
	289, 1215,
	290, 1215,
	291, 1215,
	292, 1215,
	293, 1215,
	294, 1215,
	295, 1215,
	296, 1215,
	297, 1215,
	298, 1215,
	299, 1215,
	300, 1215,
	301, 1215,
	302, 1215,
	303, 1215,
	304, 1215,
	305, 1215,
	306, 1215,
	308, 1215,
	310, 1215,
	311, 1215,
	312, 1215,
	313, 1215,
	314, 1215,
	315, 1215,
	316, 1215,
	317, 1215,
	318, 1215,
	319, 1215,
	320, 1215,
	321, 1215,
	323, 1215,
	325, 1215,
	327, 1215,
	328, 1215,
	330, 1215,
	331, 1215,
	332, 1215,
	333, 1215,
	334, 1215,
	337, 1215,
	341, 1215,
	342, 1215,
	343, 1215,
	346, 1215,
	347, 1215,
	348, 1215,
	350, 1215,
	352, 1215,
	353, 1215,
	354, 1215,
	355, 1215,
	356, 1215,
	357, 1215,
	358, 1215,
	359, 1215,
	360, 1215,
	361, 1215,
	362, 1215,
	363, 1215,
	365, 1215,
	366, 1215,
	367, 1215,
	368, 1215,
	369, 1215,
	370, 1215,
	371, 1215,
	372, 1215,
	373, 1215,
	374, 1215,
	375, 1215,
	376, 1215,
	377, 1215,
	378, 1215,
	379, 1215,
	381, 1215,
	382, 1215,
	384, 1215,
	385, 1215,
	386, 1215,
	387, 1215,
	388, 1215,
	389, 1215,
	390, 1215,
	391, 1215,
	392, 1215,
	393, 1215,
	394, 1215,
	395, 1215,
	397, 1215,
	399, 1215,
	400, 1215,
	401, 1215,
	406, 1215,
	408, 1215,
	409, 1215,
	410, 1215,
	411, 1215,
	412, 1215,
	413, 1215,
	414, 1215,
	415, 1215,
	416, 1215,
	418, 1215,
	419, 1215,
	420, 1215,
	422, 1215,
	423, 1215,
	424, 1215,
	425, 1215,
	426, 1215,
	427, 1215,
	429, 1215,
	430, 1215,
	431, 1215,
	432, 1215,
	433, 1215,
	434, 1215,
	435, 1215,
	436, 1215,
	437, 1215,
	438, 1215,
	439, 1215,
	441, 1215,
	442, 1215,
	443, 1215,
	444, 1215,
	445, 1215,
	446, 1215,
	448, 1215,
	449, 1215,
	450, 1215,
	451, 1215,
	452, 1215,
	453, 1215,
	455, 1215,
	456, 1215,
	457, 1215,
	458, 1215,
	459, 1215,
	460, 1215,
	461, 1215,
	463, 1215,
	465, 1215,
	466, 1215,
	467, 1215,
	468, 1215,
	469, 1215,
	470, 1215,
	471, 1215,
	472, 1215,
	473, 1215,
	474, 1215,
	475, 1215,
	476, 1215,
	477, 1215,
	478, 1215,
	479, 1215,
	480, 1215,
	482, 1215,
	483, 1215,
	485, 1215,
	486, 1215,
	488, 1215,
	489, 1215,
	490, 1215,
	491, 1215,
	492, 1215,
	493, 1215,
	494, 1215,
	495, 1215,
	496, 1215,
	498, 1215,
	499, 1215,
	500, 1215,
	501, 1215,
	502, 1215,
	504, 1215,
	506, 1215,
	507, 1215,
	508, 1215,
	509, 1215,
	510, 1215,
	511, 1215,
	513, 1215,
	514, 1215,
	515, 1215,
	516, 1215,
	518, 1215,
	519, 1215,
	522, 1215,
	523, 1215,
	524, 1215,
	525, 1215,
	526, 1215,
	527, 1215,
	528, 1215,
	530, 1215,
	533, 1215,
	534, 1215,
	535, 1215,
	536, 1215,
	537, 1215,
	538, 1215,
	540, 1215,
	541, 1215,
	542, 1215,
	543, 1215,
	549, 1215,
	550, 1215,
	551, 1215,
	552, 1215,
	553, 1215,
	554, 1215,
	-2, 0,
	-1, 739,
	185, 2236,
	503, 2236,
	562, 2236,
	581, 2236,
	-2, 0,
	-1, 740,
	185, 2339,
	503, 2339,
	562, 2339,
	581, 2339,
	-2, 0,
	-1, 741,
	185, 2223,
	503, 2223,
	562, 2223,
	581, 2223,
	-2, 0,
	-1, 743,
	185, 2469,
	503, 2469,
	562, 2469,
	581, 2469,
	-2, 0,
	-1, 745,
	185, 2509,
	503, 2509,
	562, 2509,
	581, 2509,
	-2, 0,
	-1, 752,
	185, 2366,
	503, 2366,
	562, 2366,
	581, 2366,
	-2, 651,
	-1, 781,
	581, 2171,
	584, 2171,
	-2, 918,
	-1, 782,
	581, 2173,
	584, 2173,
	-2, 919,
	-1, 783,
	581, 2172,
	584, 2172,
	-2, 920,
	-1, 784,
	584, 2098,
	-2, 921,
	-1, 807,
	182, 239,
	-2, 0,
	-1, 830,
	44, 2145,
	-2, 0,
	-1, 831,
	540, 1193,
	-2, 988,
	-1, 847,
	4, 1607,
	21, 1607,
	22, 1607,
	23, 1607,
	24, 1607,
	25, 1607,
	26, 1607,
	27, 1607,
	28, 1607,
	30, 1607,
	31, 1607,
	37, 1607,
	42, 1607,
	43, 1607,
	45, 1607,
	46, 1607,
	47, 1607,
	48, 1607,
	49, 1607,
	50, 1607,
	51, 1607,
	52, 1607,
	54, 1607,
	55, 1607,
	56, 1607,
	57, 1607,
	59, 1607,
	60, 1607,
	61, 1607,
	62, 1607,
	63, 1607,
	64, 1607,
	65, 1607,
	69, 1607,
	70, 1607,
	71, 1607,
	72, 1607,
	74, 1607,
	75, 1607,
	76, 1607,
	80, 1607,
	81, 1607,
	82, 1607,
	83, 1607,
	84, 1607,
	85, 1607,
	86, 1607,
	89, 1607,
	90, 1607,
	91, 1607,
	92, 1607,
	93, 1607,
	95, 1607,
	97, 1607,
	98, 1607,
	99, 1607,
	100, 1607,
	101, 1607,
	102, 1607,
	104, 1607,
	105, 1607,
	106, 1607,
	108, 1607,
	109, 1607,
	110, 1607,
	118, 1607,
	119, 1607,
	120, 1607,
	121, 1607,
	123, 1607,
	124, 1607,
	125, 1607,
	127, 1607,
	128, 1607,
	129, 1607,
	131, 1607,
	132, 1607,
	133, 1607,
	135, 1607,
	136, 1607,
	137, 1607,
	140, 1607,
	141, 1607,
	142, 1607,
	144, 1607,
	145, 1607,
	147, 1607,
	148, 1607,
	149, 1607,
	151, 1607,
	152, 1607,
	153, 1607,
	154, 1607,
	155, 1607,
	156, 1607,
	157, 1607,
	158, 1607,
	159, 1607,
	160, 1607,
	161, 1607,
	162, 1607,
	163, 1607,
	164, 1607,
	165, 1607,
	166, 1607,
	168, 1607,
	174, 1607,
	175, 1607,
	176, 1607,
	177, 1607,
	181, 1607,
	183, 1607,
	187, 1607,
	188, 1607,
	189, 1607,
	190, 1607,
	191, 1607,
	192, 1607,
	193, 1607,
	194, 1607,
	195, 1607,
	196, 1607,
	197, 1607,
	198, 1607,
	199, 1607,
	201, 1607,
	202, 1607,
	204, 1607,
	205, 1607,
	207, 1607,
	208, 1607,
	209, 1607,
	210, 1607,
	211, 1607,
	212, 1607,
	213, 1607,
	214, 1607,
	215, 1607,
	217, 1607,
	218, 1607,
	220, 1607,
	221, 1607,
	222, 1607,
	223, 1607,
	227, 1607,
	228, 1607,
	229, 1607,
	230, 1607,
	231, 1607,
	234, 1607,
	235, 1607,
	236, 1607,
	238, 1607,
	240, 1607,
	241, 1607,
	243, 1607,
	245, 1607,
	246, 1607,
	247, 1607,
	249, 1607,
	253, 1607,
	254, 1607,
	255, 1607,
	256, 1607,
	257, 1607,
	258, 1607,
	260, 1607,
	261, 1607,
	262, 1607,
	264, 1607,
	265, 1607,
	267, 1607,
	268, 1607,
	271, 1607,
	275, 1607,
	276, 1607,
	277, 1607,
	280, 1607,
	281, 1607,
	282, 1607,
	283, 1607,
	285, 1607,
	286, 1607,
	287, 1607,
	288, 1607,
	289, 1607,
	290, 1607,
	291, 1607,
	292, 1607,
	293, 1607,
	294, 1607,
	295, 1607,
	296, 1607,
	297, 1607,
	298, 1607,
	299, 1607,
	300, 1607,
	301, 1607,
	302, 1607,
	303, 1607,
	304, 1607,
	305, 1607,
	306, 1607,
	308, 1607,
	310, 1607,
	311, 1607,
	312, 1607,
	313, 1607,
	314, 1607,
	315, 1607,
	316, 1607,
	317, 1607,
	318, 1607,
	319, 1607,
	320, 1607,
	321, 1607,
	323, 1607,
	325, 1607,
	327, 1607,
	328, 1607,
	330, 1607,
	331, 1607,
	332, 1607,
	333, 1607,
	334, 1607,
	337, 1607,
	341, 1607,
	342, 1607,
	343, 1607,
	346, 1607,
	347, 1607,
	348, 1607,
	350, 1607,
	352, 1607,
	353, 1607,
	354, 1607,
	355, 1607,
	356, 1607,
	357, 1607,
	358, 1607,
	359, 1607,
	360, 1607,
	361, 1607,
	362, 1607,
	363, 1607,
	365, 1607,
	366, 1607,
	367, 1607,
	368, 1607,
	369, 1607,
	370, 1607,
	371, 1607,
	372, 1607,
	373, 1607,
	374, 1607,
	375, 1607,
	376, 1607,
	377, 1607,
	378, 1607,
	379, 1607,
	381, 1607,
	382, 1607,
	384, 1607,
	385, 1607,
	386, 1607,
	387, 1607,
	388, 1607,
	389, 1607,
	390, 1607,
	391, 1607,
	392, 1607,
	393, 1607,
	394, 1607,
	395, 1607,
	397, 1607,
	399, 1607,
	400, 1607,
	401, 1607,
	406, 1607,
	408, 1607,
	409, 1607,
	410, 1607,
	411, 1607,
	412, 1607,
	413, 1607,
	414, 1607,
	415, 1607,
	416, 1607,
	418, 1607,
	419, 1607,
	420, 1607,
	422, 1607,
	423, 1607,
	424, 1607,
	425, 1607,
	426, 1607,
	427, 1607,
	429, 1607,
	430, 1607,
	431, 1607,
	432, 1607,
	433, 1607,
	434, 1607,
	435, 1607,
	436, 1607,
	437, 1607,
	438, 1607,
	439, 1607,
	441, 1607,
	442, 1607,
	443, 1607,
	444, 1607,
	445, 1607,
	446, 1607,
	448, 1607,
	449, 1607,
	450, 1607,
	451, 1607,
	452, 1607,
	453, 1607,
	455, 1607,
	456, 1607,
	457, 1607,
	458, 1607,
	459, 1607,
	460, 1607,
	461, 1607,
	463, 1607,
	465, 1607,
	466, 1607,
	467, 1607,
	468, 1607,
	469, 1607,
	470, 1607,
	471, 1607,
	472, 1607,
	473, 1607,
	474, 1607,
	475, 1607,
	476, 1607,
	477, 1607,
	478, 1607,
	479, 1607,
	480, 1607,
	482, 1607,
	483, 1607,
	485, 1607,
	486, 1607,
	488, 1607,
	489, 1607,
	490, 1607,
	491, 1607,
	492, 1607,
	493, 1607,
	494, 1607,
	495, 1607,
	496, 1607,
	498, 1607,
	499, 1607,
	500, 1607,
	501, 1607,
	502, 1607,
	504, 1607,
	506, 1607,
	507, 1607,
	508, 1607,
	509, 1607,
	510, 1607,
	511, 1607,
	513, 1607,
	514, 1607,
	515, 1607,
	516, 1607,
	518, 1607,
	519, 1607,
	522, 1607,
	523, 1607,
	524, 1607,
	525, 1607,
	526, 1607,
	527, 1607,
	528, 1607,
	530, 1607,
	533, 1607,
	534, 1607,
	535, 1607,
	536, 1607,
	537, 1607,
	538, 1607,
	540, 1607,
	541, 1607,
	542, 1607,
	543, 1607,
	549, 1607,
	550, 1607,
	551, 1607,
	552, 1607,
	553, 1607,
	554, 1607,
	-2, 0,
	-1, 855,
	257, 377,
	-2, 0,
	-1, 925,
	386, 816,
	446, 816,
	486, 816,
	508, 816,
	-2, 0,
	-1, 926,
	386, 815,
	446, 815,
	486, 815,
	508, 815,
	-2, 755,
	-1, 930,
	1, 862,
	578, 862,
	580, 862,
	582, 862,
	-2, 0,
	-1, 931,
	1, 790,
	578, 790,
	580, 790,
	582, 790,
	-2, 0,
	-1, 932,
	1, 794,
	578, 794,
	580, 794,
	582, 794,
	-2, 0,
	-1, 933,
	1, 917,
	182, 917,
	578, 917,
	580, 917,
	582, 917,
	-2, 0,
	-1, 941,
	1, 821,
	578, 821,
	580, 821,
	582, 821,
	-2, 0,
	-1, 947,
	1, 862,
	578, 862,
	580, 862,
	582, 862,
	-2, 0,
	-1, 948,
	1, 864,
	578, 864,
	580, 864,
	582, 864,
	-2, 0,
	-1, 949,
	1, 867,
	578, 867,
	580, 867,
	582, 867,
	-2, 0,
	-1, 955,
	1, 885,
	578, 885,
	580, 885,
	582, 885,
	-2, 0,
	-1, 956,
	1, 887,
	578, 887,
	580, 887,
	582, 887,
	-2, 0,
	-1, 961,
	1, 912,
	578, 912,
	580, 912,
	582, 912,
	-2, 0,
	-1, 1007,
	169, 1482,
	182, 1482,
	270, 1482,
	335, 1482,
	-2, 1418,
	-1, 1022,
	169, 1481,
	182, 1481,
	270, 1481,
	335, 1481,
	-2, 1415,
	-1, 1048,
	581, 2170,
	-2, 659,
	-1, 1076,
	5, 2162,
	579, 2160,
	-2, 2151,
	-1, 1084,
	5, 2183,
	579, 2180,
	-2, 2171,
	-1, 1085,
	5, 2184,
	579, 2181,
	-2, 2172,
	-1, 1093,
	581, 2168,
	-2, 2150,
	-1, 1094,
	579, 2591,
	-2, 2169,
	-1, 1117,
	579, 2590,
	-2, 2185,
	-1, 1118,
	5, 1682,
	-2, 2561,
	-1, 1119,
	5, 1683,
	-2, 2562,
	-1, 1120,
	5, 1684,
	-2, 2576,
	-1, 1121,
	5, 1685,
	-2, 2540,
	-1, 1122,
	5, 1686,
	-2, 2574,
	-1, 1123,
	5, 1694,
	-2, 2553,
	-1, 1124,
	5, 1681,
	-2, 2549,
	-1, 1125,
	5, 1681,
	-2, 2548,
	-1, 1126,
	5, 1681,
	-2, 2567,
	-1, 1127,
	5, 1692,
	-2, 2542,
	-1, 1128,
	5, 1697,
	-2, 2541,
	-1, 1129,
	5, 1699,
	-2, 2586,
	-1, 1132,
	5, 1721,
	-2, 2579,
	-1, 1133,
	5, 1713,
	-2, 2580,
	-1, 1134,
	5, 1721,
	-2, 2581,
	-1, 1135,
	5, 1717,
	-2, 2582,
	-1, 1136,
	5, 1667,
	-2, 2554,
	-1, 1137,
	5, 1668,
	-2, 2555,
	-1, 1138,
	5, 1669,
	-2, 2543,
	-1, 1166,
	5, 1704,
	-2, 2587,
	-1, 1167,
	5, 1705,
	-2, 2577,
	-1, 1168,
	5, 1706,
	541, 1706,
	-2, 2544,
	-1, 1169,
	5, 1707,
	541, 1707,
	-2, 2545,
	-1, 1206,
	579, 2180,
	-2, 2171,
	-1, 1207,
	579, 2181,
	-2, 2172,
	-1, 1306,
	185, 2509,
	503, 2509,
	562, 2509,
	581, 2509,
	-2, 0,
	-1, 1309,
	1, 637,
	582, 637,
	-2, 1334,
	-1, 1437,
	354, 2146,
	408, 2146,
	448, 2146,
	572, 2146,
	-2, 2136,
	-1, 1448,
	583, 2146,
	-2, 2147,
	-1, 1453,
	1, 1190,
	578, 1190,
	580, 1190,
	582, 1190,
	-2, 1467,
	-1, 1501,
	393, 987,
	540, 987,
	-2, 372,
	-1, 1517,
	44, 2144,
	-2, 953,
	-1, 1524,
	1, 1190,
	578, 1190,
	580, 1190,
	582, 1190,
	-2, 1467,
	-1, 1532,
	4, 1215,
	21, 1215,
	22, 1215,
	23, 1215,
	24, 1215,
	25, 1215,
	26, 1215,
	27, 1215,
	28, 1215,
	30, 1215,
	31, 1215,
	37, 1215,
	42, 1215,
	43, 1215,
	45, 1215,
	46, 1215,
	47, 1215,
	48, 1215,
	49, 1215,
	50, 1215,
	51, 1215,
	52, 1215,
	54, 1215,
	55, 1215,
	56, 1215,
	57, 1215,
	59, 1215,
	60, 1215,
	61, 1215,
	62, 1215,
	63, 1215,
	64, 1215,
	65, 1215,
	69, 1215,
	70, 1215,
	71, 1215,
	72, 1215,
	74, 1215,
	75, 1215,
	76, 1215,
	80, 1215,
	81, 1215,
	82, 1215,
	83, 1215,
	84, 1215,
	85, 1215,
	86, 1215,
	89, 1215,
	90, 1215,
	91, 1215,
	92, 1215,
	93, 1215,
	95, 1215,
	97, 1215,
	98, 1215,
	99, 1215,
	100, 1215,
	101, 1215,
	102, 1215,
	104, 1215,
	105, 1215,
	106, 1215,
	108, 1215,
	109, 1215,
	110, 1215,
	118, 1215,
	119, 1215,
	120, 1215,
	121, 1215,
	123, 1215,
	124, 1215,
	125, 1215,
	127, 1215,
	128, 1215,
	129, 1215,
	131, 1215,
	132, 1215,
	133, 1215,
	135, 1215,
	136, 1215,
	137, 1215,
	140, 1215,
	141, 1215,
	142, 1215,
	144, 1215,
	145, 1215,
	147, 1215,
	148, 1215,
	149, 1215,
	151, 1215,
	152, 1215,
	153, 1215,
	154, 1215,
	155, 1215,
	156, 1215,
	157, 1215,
	158, 1215,
	159, 1215,
	160, 1215,
	161, 1215,
	162, 1215,
	163, 1215,
	164, 1215,
	165, 1215,
	166, 1215,
	174, 1215,
	175, 1215,
	176, 1215,
	177, 1215,
	181, 1215,
	183, 1215,
	187, 1215,
	188, 1215,
	189, 1215,
	190, 1215,
	191, 1215,
	192, 1215,
	193, 1215,
	194, 1215,
	195, 1215,
	196, 1215,
	197, 1215,
	198, 1215,
	199, 1215,
	201, 1215,
	202, 1215,
	204, 1215,
	205, 1215,
	207, 1215,
	208, 1215,
	209, 1215,
	210, 1215,
	211, 1215,
	212, 1215,
	213, 1215,
	214, 1215,
	215, 1215,
	217, 1215,
	218, 1215,
	220, 1215,
	221, 1215,
	222, 1215,
	223, 1215,
	228, 1215,
	229, 1215,
	230, 1215,
	231, 1215,
	234, 1215,
	235, 1215,
	236, 1215,
	238, 1215,
	240, 1215,
	241, 1215,
	243, 1215,
	245, 1215,
	246, 1215,
	247, 1215,
	249, 1215,
	253, 1215,
	254, 1215,
	255, 1215,
	256, 1215,
	257, 1215,
	258, 1215,
	260, 1215,
	261, 1215,
	262, 1215,
	264, 1215,
	265, 1215,
	267, 1215,
	268, 1215,
	271, 1215,
	275, 1215,
	276, 1215,
	277, 1215,
	280, 1215,
	281, 1215,
	282, 1215,
	283, 1215,
	285, 1215,
	286, 1215,
	287, 1215,
	288, 1215,
	289, 1215,
	290, 1215,
	291, 1215,
	292, 1215,
	293, 1215,
	294, 1215,
	295, 1215,
	296, 1215,
	297, 1215,
	298, 1215,
	299, 1215,
	300, 1215,
	301, 1215,
	302, 1215,
	303, 1215,
	304, 1215,
	305, 1215,
	306, 1215,
	308, 1215,
	310, 1215,
	311, 1215,
	312, 1215,
	313, 1215,
	314, 1215,
	315, 1215,
	316, 1215,
	317, 1215,
	318, 1215,
	319, 1215,
	320, 1215,
	321, 1215,
	323, 1215,
	327, 1215,
	328, 1215,
	330, 1215,
	331, 1215,
	332, 1215,
	333, 1215,
	334, 1215,
	337, 1215,
	339, 1215,
	341, 1215,
	342, 1215,
	343, 1215,
	346, 1215,
	347, 1215,
	348, 1215,
	350, 1215,
	352, 1215,
	353, 1215,
	354, 1215,
	355, 1215,
	356, 1215,
	357, 1215,
	358, 1215,
	359, 1215,
	360, 1215,
	361, 1215,
	362, 1215,
	363, 1215,
	365, 1215,
	366, 1215,
	367, 1215,
	368, 1215,
	369, 1215,
	370, 1215,
	371, 1215,
	372, 1215,
	373, 1215,
	374, 1215,
	375, 1215,
	376, 1215,
	377, 1215,
	378, 1215,
	379, 1215,
	381, 1215,
	382, 1215,
	384, 1215,
	385, 1215,
	386, 1215,
	387, 1215,
	388, 1215,
	389, 1215,
	390, 1215,
	391, 1215,
	392, 1215,
	393, 1215,
	394, 1215,
	395, 1215,
	397, 1215,
	399, 1215,
	400, 1215,
	401, 1215,
	406, 1215,
	408, 1215,
	409, 1215,
	410, 1215,
	411, 1215,
	412, 1215,
	413, 1215,
	414, 1215,
	415, 1215,
	416, 1215,
	418, 1215,
	419, 1215,
	420, 1215,
	422, 1215,
	423, 1215,
	424, 1215,
	425, 1215,
	426, 1215,
	427, 1215,
	429, 1215,
	430, 1215,
	431, 1215,
	432, 1215,
	433, 1215,
	434, 1215,
	435, 1215,
	436, 1215,
	437, 1215,
	438, 1215,
	439, 1215,
	441, 1215,
	442, 1215,
	443, 1215,
	444, 1215,
	445, 1215,
	446, 1215,
	448, 1215,
	449, 1215,
	450, 1215,
	451, 1215,
	452, 1215,
	453, 1215,
	455, 1215,
	456, 1215,
	457, 1215,
	458, 1215,
	459, 1215,
	460, 1215,
	461, 1215,
	463, 1215,
	465, 1215,
	466, 1215,
	467, 1215,
	468, 1215,
	469, 1215,
	470, 1215,
	471, 1215,
	472, 1215,
	473, 1215,
	474, 1215,
	475, 1215,
	476, 1215,
	477, 1215,
	478, 1215,
	479, 1215,
	480, 1215,
	482, 1215,
	483, 1215,
	485, 1215,
	486, 1215,
	488, 1215,
	489, 1215,
	490, 1215,
	491, 1215,
	492, 1215,
	493, 1215,
	494, 1215,
	495, 1215,
	496, 1215,
	498, 1215,
	499, 1215,
	500, 1215,
	501, 1215,
	502, 1215,
	504, 1215,
	506, 1215,
	507, 1215,
	508, 1215,
	509, 1215,
	510, 1215,
	511, 1215,
	513, 1215,
	514, 1215,
	515, 1215,
	516, 1215,
	518, 1215,
	519, 1215,
	522, 1215,
	523, 1215,
	524, 1215,
	525, 1215,
	526, 1215,
	527, 1215,
	528, 1215,
	530, 1215,
	533, 1215,
	534, 1215,
	535, 1215,
	536, 1215,
	537, 1215,
	538, 1215,
	540, 1215,
	541, 1215,
	542, 1215,
	543, 1215,
	549, 1215,
	550, 1215,
	551, 1215,
	552, 1215,
	553, 1215,
	554, 1215,
	-2, 0,
	-1, 1555,
	1, 510,
	578, 510,
	580, 510,
	582, 510,
	-2, 1438,
	-1, 1558,
	4, 2585,
	11, 2585,
	12, 2585,
	14, 2585,
	15, 2585,
	16, 2585,
	17, 2585,
	18, 2585,
	19, 2585,
	21, 2585,
	22, 2585,
	23, 2585,
	24, 2585,
	25, 2585,
	26, 2585,
	27, 2585,
	28, 2585,
	30, 2585,
	31, 2585,
	34, 2585,
	35, 2585,
	37, 2585,
	39, 2585,
	42, 2585,
	43, 2585,
	45, 2585,
	46, 2585,
	47, 2585,
	48, 2585,
	49, 2585,
	50, 2585,
	51, 2585,
	52, 2585,
	54, 2585,
	55, 2585,
	56, 2585,
	57, 2585,
	59, 2585,
	60, 2585,
	61, 2585,
	62, 2585,
	63, 2585,
	64, 2585,
	65, 2585,
	69, 2585,
	70, 2585,
	71, 2585,
	72, 2585,
	74, 2585,
	75, 2585,
	76, 2585,
	77, 2585,
	80, 2585,
	81, 2585,
	82, 2585,
	83, 2585,
	84, 2585,
	85, 2585,
	86, 2585,
	87, 2585,
	89, 2585,
	90, 2585,
	91, 2585,
	92, 2585,
	93, 2585,
	95, 2585,
	96, 2585,
	97, 2585,
	98, 2585,
	99, 2585,
	100, 2585,
	101, 2585,
	102, 2585,
	104, 2585,
	105, 2585,
	106, 2585,
	107, 2585,
	108, 2585,
	109, 2585,
	110, 2585,
	118, 2585,
	119, 2585,
	120, 2585,
	121, 2585,
	123, 2585,
	124, 2585,
	125, 2585,
	127, 2585,
	128, 2585,
	129, 2585,
	131, 2585,
	132, 2585,
	133, 2585,
	135, 2585,
	136, 2585,
	137, 2585,
	140, 2585,
	141, 2585,
	142, 2585,
	144, 2585,
	145, 2585,
	147, 2585,
	148, 2585,
	149, 2585,
	151, 2585,
	152, 2585,
	153, 2585,
	154, 2585,
	155, 2585,
	156, 2585,
	157, 2585,
	158, 2585,
	159, 2585,
	160, 2585,
	161, 2585,
	162, 2585,
	163, 2585,
	164, 2585,
	165, 2585,
	166, 2585,
	170, 2585,
	171, 2585,
	172, 2585,
	173, 2585,
	174, 2585,
	175, 2585,
	176, 2585,
	177, 2585,
	180, 2585,
	181, 2585,
	183, 2585,
	186, 2585,
	187, 2585,
	188, 2585,
	189, 2585,
	190, 2585,
	191, 2585,
	192, 2585,
	193, 2585,
	194, 2585,
	195, 2585,
	196, 2585,
	197, 2585,
	198, 2585,
	199, 2585,
	201, 2585,
	202, 2585,
	204, 2585,
	205, 2585,
	207, 2585,
	208, 2585,
	209, 2585,
	210, 2585,
	211, 2585,
	212, 2585,
	213, 2585,
	214, 2585,
	215, 2585,
	216, 2585,
	217, 2585,
	218, 2585,
	219, 2585,
	220, 2585,
	221, 2585,
	222, 2585,
	223, 2585,
	225, 2585,
	226, 2585,
	228, 2585,
	229, 2585,
	230, 2585,
	231, 2585,
	233, 2585,
	234, 2585,
	235, 2585,
	236, 2585,
	238, 2585,
	240, 2585,
	241, 2585,
	242, 2585,
	243, 2585,
	244, 2585,
	245, 2585,
	246, 2585,
	247, 2585,
	248, 2585,
	249, 2585,
	251, 2585,
	252, 2585,
	253, 2585,
	254, 2585,
	255, 2585,
	256, 2585,
	257, 2585,
	258, 2585,
	260, 2585,
	261, 2585,
	262, 2585,
	264, 2585,
	265, 2585,
	266, 2585,
	267, 2585,
	268, 2585,
	269, 2585,
	271, 2585,
	275, 2585,
	276, 2585,
	277, 2585,
	280, 2585,
	281, 2585,
	282, 2585,
	283, 2585,
	284, 2585,
	285, 2585,
	286, 2585,
	287, 2585,
	288, 2585,
	289, 2585,
	290, 2585,
	291, 2585,
	292, 2585,
	293, 2585,
	294, 2585,
	295, 2585,
	296, 2585,
	297, 2585,
	298, 2585,
	299, 2585,
	300, 2585,
	301, 2585,
	302, 2585,
	303, 2585,
	304, 2585,
	305, 2585,
	306, 2585,
	308, 2585,
	309, 2585,
	310, 2585,
	311, 2585,
	312, 2585,
	313, 2585,
	314, 2585,
	315, 2585,
	316, 2585,
	317, 2585,
	318, 2585,
	319, 2585,
	320, 2585,
	321, 2585,
	323, 2585,
	326, 2585,
	327, 2585,
	328, 2585,
	330, 2585,
	331, 2585,
	332, 2585,
	333, 2585,
	334, 2585,
	337, 2585,
	341, 2585,
	342, 2585,
	343, 2585,
	344, 2585,
	346, 2585,
	347, 2585,
	348, 2585,
	350, 2585,
	352, 2585,
	353, 2585,
	354, 2585,
	355, 2585,
	356, 2585,
	357, 2585,
	358, 2585,
	359, 2585,
	360, 2585,
	361, 2585,
	362, 2585,
	363, 2585,
	365, 2585,
	366, 2585,
	367, 2585,
	368, 2585,
	369, 2585,
	370, 2585,
	371, 2585,
	372, 2585,
	373, 2585,
	374, 2585,
	375, 2585,
	376, 2585,
	377, 2585,
	378, 2585,
	379, 2585,
	381, 2585,
	382, 2585,
	384, 2585,
	385, 2585,
	386, 2585,
	387, 2585,
	388, 2585,
	389, 2585,
	390, 2585,
	391, 2585,
	392, 2585,
	393, 2585,
	394, 2585,
	395, 2585,
	397, 2585,
	399, 2585,
	400, 2585,
	401, 2585,
	406, 2585,
	407, 2585,
	408, 2585,
	409, 2585,
	410, 2585,
	411, 2585,
	412, 2585,
	413, 2585,
	414, 2585,
	415, 2585,
	416, 2585,
	418, 2585,
	419, 2585,
	420, 2585,
	421, 2585,
	422, 2585,
	423, 2585,
	424, 2585,
	425, 2585,
	426, 2585,
	427, 2585,
	428, 2585,
	429, 2585,
	430, 2585,
	431, 2585,
	432, 2585,
	433, 2585,
	434, 2585,
	435, 2585,
	436, 2585,
	437, 2585,
	438, 2585,
	439, 2585,
	441, 2585,
	442, 2585,
	443, 2585,
	444, 2585,
	445, 2585,
	446, 2585,
	448, 2585,
	449, 2585,
	450, 2585,
	451, 2585,
	452, 2585,
	453, 2585,
	454, 2585,
	455, 2585,
	456, 2585,
	457, 2585,
	458, 2585,
	459, 2585,
	460, 2585,
	461, 2585,
	463, 2585,
	465, 2585,
	466, 2585,
	467, 2585,
	468, 2585,
	469, 2585,
	470, 2585,
	471, 2585,
	472, 2585,
	473, 2585,
	474, 2585,
	475, 2585,
	476, 2585,
	477, 2585,
	478, 2585,
	479, 2585,
	480, 2585,
	482, 2585,
	483, 2585,
	485, 2585,
	486, 2585,
	488, 2585,
	489, 2585,
	490, 2585,
	491, 2585,
	492, 2585,
	493, 2585,
	494, 2585,
	495, 2585,
	496, 2585,
	498, 2585,
	499, 2585,
	500, 2585,
	501, 2585,
	502, 2585,
	504, 2585,
	506, 2585,
	507, 2585,
	508, 2585,
	509, 2585,
	510, 2585,
	511, 2585,
	513, 2585,
	514, 2585,
	515, 2585,
	516, 2585,
	518, 2585,
	519, 2585,
	522, 2585,
	523, 2585,
	524, 2585,
	525, 2585,
	526, 2585,
	527, 2585,
	528, 2585,
	530, 2585,
	533, 2585,
	534, 2585,
	535, 2585,
	536, 2585,
	537, 2585,
	538, 2585,
	540, 2585,
	541, 2585,
	542, 2585,
	543, 2585,
	549, 2585,
	550, 2585,
	551, 2585,
	552, 2585,
	553, 2585,
	554, 2585,
	555, 2585,
	557, 2585,
	560, 2585,
	561, 2585,
	562, 2585,
	563, 2585,
	564, 2585,
	565, 2585,
	567, 2585,
	568, 2585,
	569, 2585,
	570, 2585,
	571, 2585,
	572, 2585,
	573, 2585,
	574, 2585,
	575, 2585,
	577, 2585,
	580, 2585,
	581, 2585,
	583, 2585,
	584, 2585,
	-2, 0,
	-1, 1563,
	185, 2469,
	503, 2469,
	562, 2469,
	581, 2469,
	-2, 0,
	-1, 1612,
	386, 816,
	446, 816,
	486, 816,
	508, 816,
	-2, 0,
	-1, 1639,
	1, 811,
	578, 811,
	580, 811,
	582, 811,
	-2, 0,
	-1, 1640,
	1, 849,
	578, 849,
	580, 849,
	582, 849,
	-2, 0,
	-1, 1641,
	1, 857,
	578, 857,
	580, 857,
	582, 857,
	-2, 0,
	-1, 1644,
	1, 820,
	578, 820,
	580, 820,
	582, 820,
	-2, 0,
	-1, 1646,
	1, 824,
	578, 824,
	580, 824,
	582, 824,
	-2, 0,
	-1, 1652,
	1, 831,
	578, 831,
	580, 831,
	582, 831,
	-2, 0,
	-1, 1681,
	1, 2531,
	578, 2531,
	580, 2531,
	581, 2531,
	582, 2531,
	-2, 883,
	-1, 1682,
	1, 2466,
	578, 2466,
	580, 2466,
	581, 2466,
	582, 2466,
	-2, 884,
	-1, 1700,
	1, 1329,
	582, 1329,
	-2, 1334,
	-1, 1703,
	169, 1481,
	182, 1481,
	270, 1481,
	335, 1481,
	-2, 1419,
	-1, 1797,
	150, 1440,
	169, 1440,
	182, 1440,
	237, 1440,
	270, 1440,
	335, 1440,
	345, 1440,
	520, 1440,
	-2, 1882,
	-1, 1857,
	580, 2032,
	-2, 0,
	-1, 1892,
	150, 1440,
	169, 1440,
	182, 1440,
	237, 1440,
	270, 1440,
	335, 1440,
	345, 1440,
	520, 1440,
	-2, 1568,
	-1, 1941,
	579, 1709,
	-2, 1697,
	-1, 2019,
	1, 639,
	582, 639,
	-2, 1334,
	-1, 2145,
	219, 240,
	-2, 2179,
	-1, 2146,
	219, 241,
	-2, 285,
	-1, 2249,
	1, 813,
	578, 813,
	580, 813,
	582, 813,
	-2, 0,
	-1, 2250,
	1, 851,
	578, 851,
	580, 851,
	582, 851,
	-2, 0,
	-1, 2251,
	1, 859,
	578, 859,
	580, 859,
	582, 859,
	-2, 0,
	-1, 2285,
	1, 833,
	578, 833,
	580, 833,
	582, 833,
	-2, 0,
	-1, 2338,
	426, 1508,
	427, 1508,
	-2, 1742,
	-1, 2369,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1762,
	-1, 2370,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1763,
	-1, 2371,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1764,
	-1, 2372,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1765,
	-1, 2373,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1766,
	-1, 2374,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1767,
	-1, 2375,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1768,
	-1, 2376,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1769,
	-1, 2388,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1781,
	-1, 2389,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1782,
	-1, 2390,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1783,
	-1, 2393,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1788,
	-1, 2399,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1792,
	-1, 2401,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1800,
	-1, 2402,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1801,
	-1, 2403,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1802,
	-1, 2404,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1803,
	-1, 2540,
	5, 2183,
	185, 2043,
	579, 2180,
	-2, 2171,
	-1, 2541,
	185, 2044,
	-2, 2536,
	-1, 2542,
	185, 2045,
	-2, 2365,
	-1, 2543,
	185, 2046,
	-2, 2253,
	-1, 2544,
	185, 2047,
	-2, 2306,
	-1, 2545,
	185, 2048,
	-2, 2350,
	-1, 2546,
	185, 2049,
	-2, 2464,
	-1, 2547,
	185, 2050,
	-2, 1865,
	-1, 2617,
	1, 1569,
	2, 1569,
	107, 1569,
	150, 1569,
	169, 1569,
	182, 1569,
	186, 1569,
	203, 1569,
	206, 1569,
	233, 1569,
	237, 1569,
	248, 1569,
	266, 1569,
	270, 1569,
	309, 1569,
	335, 1569,
	339, 1569,
	345, 1569,
	417, 1569,
	421, 1569,
	520, 1569,
	531, 1569,
	546, 1569,
	547, 1569,
	548, 1569,
	558, 1569,
	578, 1569,
	580, 1569,
	582, 1569,
	584, 1569,
	-2, 1568,
	-1, 2630,
	579, 2152,
	-2, 2166,
	-1, 2632,
	1, 301,
	546, 301,
	-2, 1467,
	-1, 2657,
	579, 1708,
	-2, 1698,
	-1, 2834,
	1, 1190,
	578, 1190,
	580, 1190,
	582, 1190,
	-2, 1467,
	-1, 3001,
	340, 1511,
	-2, 2575,
	-1, 3002,
	340, 1512,
	-2, 2450,
	-1, 3006,
	426, 2109,
	427, 2109,
	-2, 1863,
	-1, 3007,
	426, 2113,
	427, 2113,
	-2, 1864,
	-1, 3008,
	426, 2110,
	427, 2110,
	-2, 1863,
	-1, 3009,
	426, 2114,
	427, 2114,
	-2, 1864,
	-1, 3022,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1790,
	-1, 3023,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1794,
	-1, 3029,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1796,
	-1, 3269,
	1, 636,
	578, 636,
	580, 636,
	582, 636,
	-2, 1334,
	-1, 3422,
	44, 2144,
	-2, 954,
	-1, 3427,
	1, 1190,
	578, 1190,
	580, 1190,
	582, 1190,
	-2, 1467,
	-1, 3532,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1798,
	-1, 3539,
	242, 0,
	244, 0,
	326, 0,
	-2, 1817,
	-1, 3606,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1846,
	-1, 3607,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1847,
	-1, 3608,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1848,
	-1, 3612,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1852,
	-1, 3613,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1853,
	-1, 3614,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1854,
	-1, 3660,
	579, 2153,
	-2, 2167,
	-1, 3824,
	581, 2693,
	-2, 1393,
	-1, 3882,
	242, 0,
	244, 0,
	326, 0,
	-2, 1818,
	-1, 3885,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1821,
	-1, 3886,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1823,
	-1, 3983,
	581, 2168,
	-2, 1225,
	-1, 4118,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1822,
	-1, 4119,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1824,
	-1, 4130,
	242, 0,
	-2, 1855,
	-1, 4298,
	242, 0,
	-2, 1856,
	-1, 4483,
	51, 0,
	216, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 2539,
}

const sqlPrivate = 57344

const sqlLast = 122677

var sqlAct = [...]int{
	263, 4665, 3412, 4223, 4330, 4579, 3180, 4535, 2898, 4476,
	4176, 4360, 2911, 4338, 4482, 4464, 4475, 3411, 4606, 2067,
	4493, 3979, 2142, 4378, 4452, 4356, 4436, 4416, 4494, 1199,
	4433, 4495, 4548, 4162, 4251, 2784, 4230, 3571, 1465, 4302,
	4075, 1210, 4070, 4041, 3524, 4022, 4181, 4139, 1032, 4481,
	1278, 4107, 2348, 3816, 3808, 4239, 3015, 4055, 2764, 1271,
	3865, 3755, 3444, 1076, 3980, 3295, 3964, 1928, 2572, 2225,
	4265, 2001, 3407, 1282, 783, 2416, 3353, 2796, 4080, 3791,
	3777, 3438, 2356, 3298, 3775, 2349, 2722, 3397, 3483, 2189,
	1264, 1712, 1579, 2920, 3280, 750, 4135, 2933, 783, 3485,
	2887, 2868, 1898, 2858, 2922, 1342, 3223, 3663, 3203, 3864,
	1434, 3921, 2075, 2913, 857, 3195, 2930, 3163, 3184, 2882,
	2223, 1023, 3186, 1031, 172, 2899, 2919, 2137, 1867, 2136,
	2884, 4, 2086, 4580, 3317, 2724, 3631, 2353, 3162, 1843,
	4303, 2458, 1805, 2429, 2610, 3292, 1441, 2929, 778, 1519,
	2811, 1276, 1190, 2113, 1620, 2609, 2132, 2120, 2999, 1325,
	2763, 2869, 2059, 1083, 1080, 2055, 1700, 2569, 2590, 2612,
	257, 1999, 1868, 1250, 2449, 3230, 2460, 2413, 2045, 2318,
	2320, 2642, 2337, 2892, 3409, 1085, 1556, 1261, 1976, 1273,
	1082, 2923, 1577, 256, 2177, 4379, 1522, 2706, 1036, 1311,
	784, 1059, 2641, 2452, 785, 681, 1193, 1838, 2599, 1877,
	2580, 1172, 2536, 2502, 172, 105, 2430, 1790, 1884, 667,
	1713, 181, 850, 689, 732, 1714, 1652, 2319, 1639, 182,
	1207, 1887, 1460, 2321, 2176, 1189, 780, 744, 2202, 2074,
	1547, 4536, 1974, 1554, 789, 2342, 1061, 684, 1977, 44,
	43, 41, 32, 30, 28, 1719, 919, 1170, 1284, 1195,
	692, 3050, 1699, 1471, 707, 939, 3046, 792, 789, 3645,
	2216, 3646, 3182, 831, 1990, 1990, 1990, 1990, 4678, 1027,
	3135, 3136, 2589, 3153, 3154, 3155, 1990, 1027, 1990, 3454,
	4668, 792, 4653, 1205, 3463, 4652, 2589, 4642, 4624, 2589,
	4622, 2151, 4180, 3880, 4180, 4567, 3253, 4524, 4517, 2151,
	3453, 4525, 2589, 4515, 4512, 4509, 4479, 2589, 4513, 4510,
	2151, 4478, 4477, 1727, 1728, 2151, 2011, 4472, 4471, 4462,
	3252, 2011, 2011, 4180, 872, 4460, 4431, 4403, 4396, 4180,
	4180, 2648, 2589, 3463, 4395, 4390, 4389, 1758, 2589, 4180,
	4180, 4383, 1187, 4352, 1730, 2151, 3150, 4033, 4300, 4282,
	4279, 4276, 2648, 3851, 2151, 4180, 4232, 4196, 4195, 4187,
	4233, 2151, 2151, 2151, 3135, 3136, 4186, 1464, 4179, 1929,
	4180, 4146, 4180, 4120, 4099, 2151, 4088, 2648, 2011, 1729,
	3463, 1173, 1173, 1202, 1008, 1320, 4017, 4002, 3238, 1028,
	2589, 2589, 1007, 3884, 1320, 3059, 3832, 2648, 1727, 1728,
	3480, 3060, 2582, 3826, 1770, 1771, 1772, 3480, 3789, 3655,
	1201, 2224, 3790, 3656, 3653, 3638, 2667, 1228, 3654, 2589,
	3635, 1203, 1758, 1221, 3555, 2151, 3551, 1017, 2151, 1730,
	2589, 3479, 3470, 3179, 1022, 3480, 3471, 2589, 1776, 3141,
	3150, 3174, 3173, 3126, 3100, 2589, 2589, 3127, 3101, 1727,
	1728, 2644, 1760, 1761, 1762, 1770, 1771, 1772, 3092, 3090,
	2792, 3061, 3093, 2589, 1729, 2589, 1176, 2937, 1177, 2008,
	1174, 2011, 1763, 1758, 1749, 2909, 3014, 2908, 2589, 2212,
	1730, 2212, 1735, 1746, 2690, 2748, 2647, 2151, 2589, 1776,
	2648, 2639, 2633, 4404, 2588, 2589, 2151, 2666, 2589, 2211,
	4304, 3156, 4295, 2212, 1222, 4283, 2011, 3635, 2589, 2581,
	4068, 1645, 4033, 4003, 3851, 1729, 3049, 3471, 2787, 2705,
	90, 2024, 2079, 3135, 3136, 1749, 1989, 1757, 1759, 2005,
	2008, 2864, 2150, 3141, 1746, 2455, 2806, 2703, 227, 1863,
	1459, 3740, 3527, 3151, 3503, 1885, 2125, 3455, 2626, 3135,
	3136, 1622, 3153, 3154, 3155, 2625, 2624, 1752, 1753, 1754,
	1755, 2623, 2622, 1178, 1175, 1016, 3456, 1735, 1015, 1014,
	1013, 1012, 3879, 227, 1011, 1010, 1006, 3135, 3136, 1005,
	3153, 3154, 3155, 1004, 2976, 229, 1750, 3135, 3136, 1003,
	1002, 1001, 1000, 1727, 1728, 999, 998, 997, 996, 995,
	3542, 994, 993, 1767, 992, 991, 1777, 990, 1752, 1753,
	1754, 1755, 1757, 1759, 1991, 1991, 1991, 1991, 1735, 917,
	229, 916, 2456, 915, 1730, 3150, 1991, 914, 1991, 913,
	912, 911, 910, 909, 228, 908, 227, 3151, 1744, 1745,
	907, 906, 905, 904, 903, 902, 221, 901, 900, 899,
	898, 897, 896, 3150, 1767, 222, 1765, 1777, 1586, 1729,
	895, 227, 894, 1757, 1759, 893, 892, 891, 890, 228,
	889, 1750, 888, 887, 886, 885, 1485, 183, 3453, 875,
	1773, 874, 1774, 229, 870, 869, 863, 3152, 862, 1744,
	1745, 1473, 3141, 4500, 849, 1222, 1988, 848, 806, 805,
	804, 803, 795, 2457, 794, 2454, 793, 1765, 229, 765,
	756, 755, 183, 754, 738, 1287, 1085, 3937, 3141, 2008,
	251, 250, 1750, 249, 1572, 248, 247, 246, 245, 244,
	1751, 243, 228, 242, 241, 1479, 240, 239, 238, 1085,
	237, 236, 235, 1085, 221, 234, 3141, 233, 232, 231,
	230, 1472, 3896, 222, 3676, 3649, 3141, 228, 3481, 1345,
	3226, 1464, 1735, 1345, 1775, 3072, 3055, 1287, 3177, 221,
	2959, 2845, 2652, 2631, 2616, 183, 2485, 2471, 222, 2469,
	3156, 3152, 1764, 2677, 1989, 2008, 2005, 1324, 1085, 4082,
	1085, 1329, 1085, 2053, 1756, 2666, 3151, 2313, 1287, 227,
	183, 2581, 2877, 2010, 1911, 1315, 3178, 1846, 3156, 1816,
	1846, 1467, 145, 4480, 1845, 1751, 1222, 1845, 1331, 3147,
	3148, 3149, 3151, 1287, 1449, 1209, 3146, 3144, 3145, 3137,
	3138, 3139, 3140, 3142, 3143, 1444, 1849, 2219, 1473, 1844,
	1888, 1768, 4459, 1287, 1807, 1756, 229, 4367, 1287, 4307,
	3151, 2459, 1439, 4292, 4134, 4286, 1085, 4284, 1085, 4089,
	3151, 4067, 1287, 1726, 3946, 3919, 1751, 3918, 1085, 4174,
	1085, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 3912, 3911,
	1463, 3910, 1255, 1258, 1528, 1531, 1484, 3903, 3902, 3900,
	3895, 3892, 1768, 3891, 1268, 228, 3788, 1590, 3680, 3679,
	3794, 3678, 1309, 3659, 1473, 2895, 3626, 221, 1727, 1728,
	1338, 3625, 1431, 1436, 3624, 1287, 222, 1451, 1534, 2218,
	3146, 3144, 3145, 3137, 3138, 3139, 3140, 3142, 3143, 3547,
	3543, 1473, 1758, 1085, 3135, 3136, 1085, 3221, 183, 1730,
	3152, 3170, 1766, 3161, 3134, 1478, 3131, 789, 3130, 227,
	1769, 1747, 1743, 3128, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 3099, 3098, 2453, 3152, 172, 172, 3097,
	792, 1304, 1517, 3094, 1729, 1559, 1561, 1462, 3091, 1809,
	1814, 1461, 3071, 3054, 1749, 3047, 1591, 2910, 1576, 4084,
	2617, 2661, 1186, 1766, 3152, 1808, 229, 1806, 1741, 1742,
	1748, 1769, 1747, 1743, 3152, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 3738, 3135, 3136, 2442, 3906, 1726,
	1725, 1807, 3905, 2192, 2158, 2156, 4672, 4616, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 4615, 1315, 3795, 4581, 1315,
	4534, 4532, 1211, 2879, 3573, 228, 1295, 3135, 3136, 4423,
	4359, 4348, 4345, 4344, 1647, 4343, 4324, 221, 1028, 1085,
	4306, 3175, 4305, 4280, 4264, 1085, 222, 1752, 1753, 1754,
	1755, 4263, 1030, 1550, 2419, 4249, 4246, 1735, 4245, 3146,
	3144, 3145, 3137, 3138, 3139, 3140, 3142, 3143, 183, 4192,
	4170, 3244, 1661, 4132, 4115, 4114, 227, 4096, 3147, 3148,
	3149, 1557, 4095, 3141, 4058, 3146, 3144, 3145, 3137, 3138,
	3139, 3140, 3142, 3143, 227, 4034, 1698, 3135, 3136, 1704,
	1571, 3936, 1757, 1759, 3917, 3852, 3147, 3148, 3149, 3846,
	3843, 3726, 1585, 3146, 3144, 3145, 3137, 3138, 3139, 3140,
	3142, 3143, 3795, 229, 3144, 3145, 3137, 3138, 3139, 3140,
	3142, 3143, 1731, 1732, 1733, 1734, 1736, 1737, 3725, 1796,
	3711, 229, 227, 3710, 3708, 3641, 3629, 1596, 3538, 1794,
	1085, 1085, 1085, 227, 2425, 3482, 1085, 3464, 3430, 3366,
	3328, 1750, 1613, 1207, 3141, 1207, 3297, 3246, 3076, 227,
	3075, 3070, 228, 3038, 2857, 1648, 1852, 1851, 1850, 1847,
	1345, 1839, 1837, 2659, 221, 1865, 2658, 3151, 1085, 229,
	228, 783, 2628, 222, 1727, 1728, 3141, 1946, 783, 227,
	229, 1287, 221, 1727, 1728, 2621, 2587, 2467, 1910, 4083,
	1866, 222, 1701, 1861, 2878, 183, 229, 1860, 1859, 1858,
	1914, 1709, 1857, 1008, 1874, 1730, 1205, 1708, 1205, 1856,
	1925, 1007, 1855, 183, 1730, 1854, 1853, 1972, 228, 1703,
	1834, 1833, 1832, 1831, 1848, 1705, 229, 1830, 1918, 228,
	221, 1722, 1723, 1829, 1028, 1828, 1921, 1919, 1827, 222,
	1729, 221, 1826, 1825, 1824, 228, 3141, 1287, 3151, 1729,
	222, 1823, 1822, 1915, 1085, 1821, 1820, 221, 1287, 1871,
	1872, 183, 1809, 1795, 1756, 1793, 222, 1895, 1788, 1548,
	172, 1303, 183, 2220, 1226, 228, 1085, 1217, 4308, 4061,
	3942, 3888, 1345, 1840, 1841, 1751, 3675, 221, 183, 3652,
	3644, 1173, 3058, 3218, 2650, 227, 222, 2619, 2069, 4150,
	3944, 3135, 3136, 3674, 1808, 3242, 1202, 1553, 1202, 1791,
	3459, 3152, 1906, 1328, 2484, 2470, 4613, 2468, 2894, 4605,
	2785, 4346, 2017, 4005, 2051, 4235, 1315, 2044, 4234, 1917,
	4087, 4036, 2042, 1201, 4035, 1201, 4004, 3939, 3855, 3854,
	3853, 789, 229, 1735, 1203, 3647, 1203, 2016, 789, 3466,
	1320, 1893, 2036, 2035, 2044, 3465, 2044, 2046, 2455, 1886,
	1028, 1846, 4240, 3798, 792, 4287, 1888, 4285, 1845, 2044,
	3525, 792, 1327, 1320, 3331, 3750, 1612, 1896, 1993, 1864,
	3096, 2030, 3095, 3020, 3135, 3136, 227, 3153, 3154, 3155,
	2750, 228, 3152, 1323, 1321, 3723, 1905, 1904, 1903, 1901,
	1900, 1899, 1890, 221, 2122, 988, 4173, 1922, 1287, 1287,
	1829, 1829, 222, 1696, 1969, 3299, 1320, 2079, 1345, 2241,
	1926, 1326, 2768, 2019, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 229, 183, 3414, 2015, 3413, 3475, 1980,
	1662, 1818, 3360, 1621, 227, 2456, 4166, 4546, 2217, 989,
	4231, 4520, 3145, 3137, 3138, 3139, 3140, 3142, 3143, 4505,
	3150, 4492, 3398, 2934, 1622, 2138, 3752, 3747, 3731, 3500,
	227, 3267, 4136, 3182, 2039, 3575, 3064, 2450, 2657, 1862,
	4501, 1842, 228, 3405, 3703, 2186, 2800, 1527, 1456, 2013,
	4514, 229, 1298, 1254, 221, 2803, 4511, 3449, 2798, 4339,
	2143, 2148, 2107, 222, 2112, 1980, 2022, 2117, 4071, 1317,
	4430, 1287, 4321, 1287, 1815, 1287, 1980, 229, 3302, 2047,
	2037, 2020, 3718, 2193, 2917, 183, 2457, 3390, 2454, 1185,
	2891, 1287, 1287, 4565, 3137, 3138, 3139, 3140, 3142, 3143,
	228, 4595, 1287, 4564, 1552, 844, 2085, 3519, 4502, 3765,
	1600, 4213, 221, 3141, 1287, 3992, 1287, 1287, 1287, 2140,
	1495, 222, 1659, 1503, 2691, 3271, 228, 2328, 3139, 3140,
	3142, 3143, 4667, 1457, 4206, 4198, 986, 969, 221, 783,
	789, 2227, 2182, 183, 984, 2105, 2041, 222, 1322, 982,
	4157, 980, 3157, 2031, 1026, 977, 2709, 2291, 2289, 4031,
	4030, 3763, 3762, 792, 2187, 1310, 3754, 1553, 3746, 183,
	1462, 2707, 2199, 3745, 1461, 3156, 3764, 3743, 2709, 3742,
	3273, 3243, 3730, 1660, 2040, 3690, 2326, 3689, 3394, 3393,
	3237, 2104, 2222, 2707, 2116, 2233, 3137, 3138, 3139, 3140,
	3142, 3143, 2149, 3069, 3068, 1318, 3067, 845, 1504, 1321,
	3066, 3024, 2809, 2808, 1319, 2245, 2805, 3151, 2794, 2783,
	1658, 4167, 2782, 2778, 2777, 2776, 1085, 2755, 1085, 2207,
	2196, 2754, 2717, 2640, 2459, 1085, 2400, 1702, 1946, 1946,
	1345, 1025, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 2169, 1085, 2209,
	1085, 1085, 1085, 1085, 2228, 2168, 1028, 1550, 1028, 2204,
	1598, 2204, 2201, 1321, 2205, 1733, 1734, 1736, 1737, 1328,
	1328, 4596, 1085, 2498, 2497, 1085, 1085, 1737, 2217, 789,
	2358, 1304, 2317, 1085, 2213, 2330, 2214, 1085, 2076, 1085,
	1085, 3299, 3976, 1540, 1317, 1539, 2327, 1345, 3330, 1557,
	2167, 1557, 792, 1085, 1085, 1085, 1085, 2232, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 2888, 2298, 2453, 1027,
	3501, 2072, 2249, 2311, 2237, 3358, 3972, 1499, 1327, 1327,
	1538, 3152, 1537, 3951, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 2431, 2432, 2267, 763, 1085, 1593, 1512,
	2077, 2078, 1320, 1240, 4113, 2240, 2698, 2431, 2447, 1207,
	2110, 2285, 2940, 2651, 974, 2632, 1345, 1458, 2740, 2325,
	2295, 2415, 3012, 1322, 1552, 1207, 2341, 2415, 1317, 3973,
	2073, 2306, 2997, 2493, 1087, 1614, 4626, 2752, 3035, 3509,
	1643, 1085, 1345, 4332, 3950, 3143, 2338, 2772, 4600, 2739,
	2303, 1671, 2539, 2539, 2553, 2254, 2431, 2314, 2450, 2573,
	2575, 2248, 2316, 2329, 1707, 2579, 2322, 3033, 2315, 2765,
	2766, 1008, 1205, 4006, 1008, 1008, 1302, 2555, 1906, 2345,
	1318, 2446, 2346, 2347, 2079, 2206, 3508, 2257, 1205, 1319,
	1657, 2973, 1995, 2604, 1610, 1997, 2765, 2766, 2048, 2049,
	2250, 2002, 2459, 761, 4029, 2004, 4564, 1322, 883, 2629,
	2007, 2765, 2766, 3147, 3148, 3149, 1594, 1523, 847, 846,
	3146, 3144, 3145, 3137, 3138, 3139, 3140, 3142, 3143, 1130,
	3359, 2596, 4609, 679, 4498, 2802, 2726, 2427, 2305, 1028,
	1642, 4601, 1287, 1287, 1024, 1695, 2495, 1895, 1028, 3988,
	3011, 2496, 1028, 1078, 2499, 2444, 2500, 2501, 2799, 1654,
	674, 4334, 2251, 1173, 1318, 1521, 1622, 2801, 3744, 1622,
	2797, 3714, 1202, 1319, 2411, 1876, 2595, 1727, 1728, 2087,
	3270, 172, 2618, 2423, 1345, 2556, 3741, 3564, 1202, 2645,
	2421, 3392, 3561, 2686, 2258, 2680, 2535, 2548, 4576, 1201,
	3727, 1758, 2091, 2409, 2564, 2577, 3030, 1597, 1730, 964,
	1203, 3976, 2585, 2586, 3706, 1201, 3356, 1643, 1946, 2597,
	2601, 2602, 2708, 1315, 2679, 2804, 1203, 3968, 2775, 3031,
	1848, 1893, 3969, 3036, 1021, 2688, 2753, 2354, 2355, 2653,
	1028, 1727, 1728, 1729, 2643, 3972, 2603, 2729, 2608, 3965,
	4603, 2614, 2615, 842, 1880, 841, 1345, 1320, 2088, 1599,
	2328, 978, 4584, 1214, 4112, 1758, 3963, 2155, 2154, 978,
	1287, 2979, 1730, 3562, 978, 3967, 979, 1640, 2660, 4583,
	978, 2290, 2288, 3971, 2718, 4629, 1085, 1085, 2638, 1085,
	2682, 2664, 2712, 1840, 1841, 4553, 2671, 2751, 3973, 3974,
	2674, 1883, 2675, 2663, 1212, 4499, 2689, 1729, 3955, 2665,
	2302, 762, 1287, 3870, 3772, 3869, 1878, 1642, 2681, 2326,
	4656, 2711, 3347, 3446, 964, 965, 2795, 2714, 1990, 2683,
	1501, 2060, 1675, 3339, 1881, 2459, 3282, 2061, 2773, 1641,
	3966, 1320, 2405, 1287, 2861, 1498, 1735, 3986, 2757, 1021,
	3700, 2123, 3447, 2692, 2743, 1287, 3699, 1287, 876, 764,
	2406, 2875, 2092, 760, 864, 2407, 3285, 2756, 3773, 2412,
	4412, 1239, 1287, 1019, 4410, 964, 3348, 1879, 2982, 4607,
	2774, 2836, 2721, 2767, 2769, 2770, 2771, 3340, 2135, 2731,
	2734, 1757, 1759, 4400, 2840, 2694, 4154, 2324, 2304, 2842,
	1021, 2119, 3956, 4497, 2397, 2786, 2871, 3197, 3771, 2780,
	1735, 1215, 3032, 1085, 2696, 2713, 3346, 4333, 3004, 3005,
	2779, 2459, 3034, 2902, 3970, 2118, 2099, 3338, 2093, 2094,
	3446, 2960, 2781, 2961, 4340, 2837, 4602, 2712, 2931, 4354,
	965, 2716, 2134, 2728, 1523, 3272, 1020, 2935, 2697, 2062,
	1750, 789, 2089, 1669, 2256, 1757, 1759, 1224, 2114, 2327,
	2957, 3026, 3977, 2916, 1085, 172, 2066, 2414, 2695, 2082,
	1085, 1085, 2714, 2906, 792, 2835, 884, 3715, 2956, 2938,
	2100, 1462, 4608, 1595, 2943, 2843, 2944, 2077, 2078, 1882,
	2965, 965, 2967, 2090, 2969, 2855, 3968, 675, 3987, 975,
	2867, 3969, 2715, 2865, 2253, 2984, 2712, 2986, 2904, 2981,
	2247, 2123, 1706, 966, 1750, 4610, 2886, 2115, 1670, 2897,
	2098, 2111, 2060, 2083, 1301, 1085, 1085, 2987, 2061, 2907,
	2989, 1085, 2325, 728, 2312, 2918, 2063, 2068, 3283, 2978,
	2954, 2714, 1609, 1611, 1085, 1085, 4050, 1835, 2408, 2936,
	1085, 1085, 3971, 2964, 4552, 2966, 1085, 2968, 2410, 2905,
	2713, 3369, 4466, 2081, 4467, 1085, 1085, 1085, 3974, 2395,
	1980, 1085, 2398, 676, 3314, 1672, 4398, 2977, 2963, 3240,
	4527, 1085, 2123, 2102, 2727, 2962, 2716, 3318, 4109, 1880,
	4528, 3780, 2070, 3866, 1751, 3728, 2992, 2758, 1085, 3196,
	3778, 1557, 877, 878, 3027, 4125, 4575, 2095, 865, 866,
	3057, 1787, 4450, 4441, 4014, 4399, 2709, 697, 2422, 2064,
	2441, 677, 2394, 678, 3074, 2993, 3003, 2994, 966, 2713,
	3313, 2732, 2941, 2942, 3052, 3053, 1883, 3320, 2980, 3056,
	2062, 2600, 2341, 2948, 2949, 2950, 2998, 2715, 3013, 4630,
	2079, 2598, 967, 1027, 3780, 2716, 2613, 2066, 1751, 2108,
	796, 3324, 3000, 3778, 2710, 2070, 3577, 4617, 3493, 1881,
	4657, 1213, 4060, 4361, 3860, 3671, 2126, 3486, 1991, 966,
	1229, 3871, 2133, 2096, 3048, 3521, 2995, 3493, 1085, 1085,
	1085, 1627, 1716, 3970, 4496, 3793, 3486, 1085, 1085, 1085,
	3319, 2103, 1085, 4563, 968, 3025, 4561, 4377, 4248, 3814,
	3781, 1673, 1085, 1207, 1345, 3322, 2715, 1717, 1085, 3434,
	1085, 4108, 3189, 3190, 2175, 1873, 1227, 2063, 2068, 1207,
	1220, 3977, 666, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 2556, 2556, 3867, 2344, 2080, 1345, 2032, 4551,
	3915, 4189, 3231, 3063, 4635, 3323, 4188, 4257, 4051, 1207,
	4320, 3815, 1345, 1044, 3615, 1028, 3758, 967, 3702, 3293,
	3172, 3435, 3488, 3781, 3426, 3289, 1205, 2876, 2870, 1946,
	2859, 2200, 2194, 1345, 3211, 2188, 3191, 3487, 3224, 879,
	880, 3488, 1205, 1715, 2127, 867, 868, 1287, 1287, 1674,
	1731, 1732, 1733, 1734, 1736, 1737, 3487, 2396, 2180, 3236,
	2064, 2161, 3560, 4417, 4274, 1492, 1018, 1231, 967, 968,
	1085, 3991, 1205, 2029, 1882, 3630, 3205, 4526, 3990, 2334,
	2672, 3250, 737, 3522, 1085, 4380, 2676, 4362, 3201, 4155,
	3957, 2065, 3686, 3287, 3286, 2069, 1716, 2296, 1287, 4076,
	2687, 3199, 2058, 1946, 3220, 2025, 2070, 4110, 1717, 1711,
	1716, 3776, 3817, 2856, 3167, 3168, 3169, 4266, 3268, 4229,
	968, 1085, 4227, 3872, 3779, 3484, 1202, 1242, 4169, 3261,
	4267, 3225, 3274, 2069, 3183, 1287, 2556, 2556, 2556, 3200,
	3229, 1315, 1202, 3305, 3209, 3217, 3198, 2759, 2027, 3301,
	3212, 3213, 3300, 1201, 797, 798, 2056, 1287, 3018, 1287,
	2996, 3210, 4268, 2101, 1203, 2238, 3643, 2733, 3194, 1201,
	3206, 3193, 1202, 3277, 3278, 1345, 1644, 2122, 3304, 2637,
	1203, 3309, 1787, 3785, 3311, 2122, 1287, 3779, 2028, 2111,
	1287, 3233, 3234, 3235, 3290, 3916, 2057, 1715, 3303, 1201,
	3616, 3307, 3361, 2636, 3333, 3873, 1918, 4634, 2635, 3617,
	1203, 1715, 2634, 1287, 2335, 3247, 3248, 2109, 3249, 3204,
	1287, 3665, 1287, 4270, 1546, 3337, 1345, 3258, 3335, 3215,
	3262, 3216, 2863, 783, 1544, 3254, 3255, 3355, 3269, 3489,
	3490, 3491, 3492, 1025, 1287, 4327, 4269, 2591, 3275, 4177,
	3349, 3208, 3367, 4224, 3357, 1287, 2130, 2106, 3489, 3490,
	3491, 3492, 1717, 4271, 882, 3372, 4042, 3374, 3351, 3401,
	3378, 2737, 1207, 1876, 3384, 3666, 3989, 3442, 1628, 3379,
	4363, 2594, 2065, 3385, 3709, 3687, 3288, 1532, 2110, 3321,
	3329, 3476, 2198, 3425, 800, 799, 4093, 1287, 1287, 4420,
	3667, 1533, 3664, 4572, 3440, 1980, 1980, 3342, 4358, 3343,
	2128, 4152, 3396, 3344, 3399, 3345, 2939, 2760, 2761, 2841,
	1287, 3433, 2593, 3336, 3410, 3362, 3232, 2592, 2839, 3368,
	2226, 1603, 4164, 4427, 4414, 1205, 3370, 3922, 4328, 3632,
	3451, 3387, 2466, 3381, 3391, 3350, 1691, 3352, 4445, 2465,
	2129, 4178, 1880, 801, 802, 2301, 1980, 3207, 2300, 1345,
	3441, 2931, 1345, 4574, 4516, 4092, 736, 1693, 1690, 4347,
	2931, 3395, 1688, 1666, 3380, 4131, 4165, 1664, 3386, 1638,
	3914, 3403, 2757, 3784, 1636, 4421, 3436, 3164, 1634, 1632,
	3443, 3537, 3165, 1980, 1630, 1085, 3423, 1624, 3422, 1883,
	3498, 1085, 1085, 789, 3497, 1085, 1085, 1085, 3241, 1085,
	1619, 1617, 172, 172, 1878, 1980, 3495, 1980, 1085, 1946,
	3460, 3461, 3448, 2060, 4329, 3474, 792, 1085, 1542, 2061,
	1085, 3457, 1881, 3251, 3515, 1202, 1345, 3494, 3129, 3478,
	3037, 2860, 2793, 2749, 1980, 1085, 3450, 3517, 1980, 3472,
	3512, 2662, 2307, 1345, 1913, 1909, 1694, 1581, 3516, 3518,
	2287, 1545, 1201, 1946, 1946, 1085, 1085, 3514, 1085, 1085,
	1085, 1543, 1711, 1203, 2975, 1879, 2974, 2946, 2323, 1653,
	3523, 2262, 3294, 2160, 1973, 1819, 3540, 1592, 1516, 4491,
	1028, 4015, 3749, 3748, 4016, 4001, 3668, 4413, 4074, 4021,
	3505, 881, 3506, 4272, 3507, 3511, 3961, 3813, 4273, 3804,
	1085, 1940, 3496, 3419, 1085, 976, 1946, 1946, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 3520, 1085, 4549,
	3589, 2062, 3761, 3371, 3721, 1085, 1085, 1946, 4069, 3719,
	1692, 1689, 1085, 3549, 3550, 1687, 1665, 3701, 2066, 3429,
	1663, 3462, 1637, 1085, 3424, 3415, 3590, 1635, 2889, 2881,
	3545, 1633, 1631, 2874, 1207, 1207, 2866, 1629, 1085, 3557,
	1623, 2853, 2838, 3556, 2678, 2673, 255, 1882, 2159, 3563,
	3565, 3566, 2157, 1618, 1616, 3572, 2139, 2124, 3502, 2097,
	3579, 2084, 2071, 2012, 2556, 2556, 1943, 1345, 2009, 2006,
	2003, 1541, 1998, 1996, 3587, 3661, 1992, 1983, 3588, 3439,
	3627, 4540, 1920, 4565, 2033, 3382, 1720, 3567, 2063, 2068,
	1934, 2133, 3648, 2990, 2988, 4455, 1182, 1205, 1205, 4098,
	2286, 4091, 4090, 4028, 3947, 3016, 2932, 2052, 1497, 2709,
	3586, 3592, 4259, 3594, 1085, 2738, 3669, 3670, 2310, 2709,
	3619, 4252, 2079, 1183, 2707, 3825, 981, 983, 985, 2252,
	3681, 3682, 3683, 2197, 2735, 1685, 1686, 1262, 1085, 172,
	1263, 2282, 3620, 4454, 2281, 3634, 3993, 3628, 2259, 1727,
	1728, 4023, 1615, 4294, 724, 680, 3639, 3640, 3923, 3901,
	3691, 3316, 2742, 2762, 2308, 1724, 3636, 3637, 1296, 1085,
	1085, 2064, 2741, 1230, 1727, 1728, 2556, 2556, 2556, 2556,
	2556, 2556, 2556, 2556, 2556, 2556, 2556, 2556, 2556, 2556,
	2556, 2556, 2556, 2556, 2556, 1721, 2556, 1202, 1202, 3017,
	3650, 3695, 4568, 3383, 2742, 1730, 1093, 1085, 4559, 2309,
	691, 3757, 3651, 4521, 2852, 1729, 2284, 2070, 3257, 1263,
	3801, 3259, 3260, 1263, 1201, 1201, 3263, 776, 3264, 252,
	3265, 1287, 1184, 3756, 1287, 1203, 1203, 3732, 2181, 832,
	1729, 1307, 2800, 2798, 2807, 2790, 2788, 2744, 4405, 4371,
	4368, 1946, 259, 259, 259, 2746, 669, 670, 2789, 685,
	669, 685, 695, 3677, 4326, 735, 3736, 3276, 2745, 753,
	4313, 3705, 3759, 4243, 759, 3753, 663, 4222, 3751, 4158,
	259, 1287, 4156, 4153, 3811, 3737, 3739, 1085, 3803, 3792,
	3658, 3724, 3428, 2896, 2578, 1207, 1085, 3729, 861, 3827,
	2018, 1927, 2354, 3580, 259, 4604, 1287, 1287, 1287, 4175,
	3959, 4447, 3958, 3698, 3284, 3818, 4448, 3834, 2757, 3239,
	4633, 3135, 3136, 1287, 3770, 4370, 3799, 3768, 3783, 1727,
	1728, 4447, 2701, 2702, 3810, 3786, 4448, 4578, 1287, 2699,
	2700, 1602, 1464, 3893, 1345, 2461, 3673, 1601, 3822, 2701,
	2699, 2494, 4244, 4207, 3819, 2354, 3595, 3774, 1205, 3807,
	3782, 3800, 1668, 4025, 4020, 1667, 4019, 3889, 1345, 3672,
	3568, 1085, 1085, 3850, 3376, 3802, 3373, 1085, 1085, 1946,
	2902, 1813, 1085, 1085, 1812, 1085, 3623, 4619, 4585, 1085,
	4409, 4408, 4407, 2065, 4309, 4225, 4202, 3805, 4151, 4148,
	1085, 4053, 3943, 3849, 3821, 3831, 3787, 2931, 3717, 3820,
	3712, 3432, 3431, 3829, 3310, 3823, 1085, 3833, 3256, 3828,
	3125, 3124, 3769, 3874, 3839, 3840, 3123, 3122, 669, 669,
	3858, 3121, 3856, 3120, 3847, 3844, 259, 3848, 3841, 3119,
	3118, 3117, 3116, 3115, 3114, 3875, 3883, 3845, 3113, 3112,
	3111, 3110, 3109, 3887, 3108, 3107, 3106, 3857, 1202, 3105,
	3104, 3103, 3102, 2972, 2953, 3868, 2952, 2951, 2880, 2854,
	2736, 2669, 1940, 1940, 2655, 2654, 1207, 2426, 2283, 2280,
	2279, 2278, 2277, 2276, 1207, 1201, 2195, 2170, 1345, 2166,
	1345, 2165, 1980, 2164, 2163, 2162, 1203, 1207, 1986, 1985,
	1984, 1982, 1684, 1683, 1625, 3863, 1511, 1510, 1287, 1287,
	1509, 1508, 1507, 1506, 1505, 1500, 1496, 1345, 1494, 1493,
	3928, 1336, 1335, 1334, 1333, 1332, 3224, 1300, 1299, 1249,
	1248, 1247, 1246, 1245, 1244, 1243, 1241, 1236, 1235, 1205,
	1234, 1233, 1799, 1232, 1165, 2023, 1804, 1205, 987, 1207,
	3913, 1207, 973, 4331, 3975, 2299, 1677, 89, 1502, 819,
	1205, 83, 2131, 3716, 944, 3931, 4444, 1943, 1943, 1486,
	4353, 1287, 3984, 827, 4429, 3312, 2810, 2261, 3981, 3838,
	3981, 1345, 1626, 1287, 2263, 3219, 1287, 2620, 3925, 3926,
	3985, 1934, 1934, 172, 3930, 1345, 3927, 3934, 3924, 4397,
	3897, 3920, 3073, 3935, 3996, 3997, 3929, 4301, 4124, 3953,
	3938, 2464, 1205, 1817, 1205, 3176, 3948, 3949, 85, 1069,
	1115, 4049, 4048, 3962, 3704, 1287, 1287, 3995, 2921, 4046,
	3294, 4045, 1931, 1933, 1035, 3960, 1348, 4465, 2034, 1202,
	1075, 2050, 1287, 2043, 2656, 2538, 3994, 1202, 1092, 1089,
	1935, 1937, 1091, 1090, 1345, 1936, 1836, 1088, 1930, 1287,
	1202, 3809, 2862, 3999, 4027, 2900, 1201, 3458, 4040, 1551,
	1549, 946, 4018, 4010, 1201, 4038, 4008, 1203, 2038, 4011,
	2420, 2448, 3062, 1810, 1207, 1203, 1050, 1201, 4024, 4066,
	4026, 1071, 2445, 4077, 1287, 1287, 1287, 4013, 1203, 1225,
	1060, 1049, 4032, 3202, 3181, 4094, 3445, 1345, 3657, 2333,
	4037, 836, 1202, 3981, 1202, 3132, 2451, 4043, 4039, 1085,
	1085, 1085, 1216, 2561, 2554, 4097, 2550, 3266, 2890, 1697,
	4138, 4072, 4078, 1789, 4065, 4044, 2901, 1345, 1330, 1201,
	4059, 1201, 1085, 1053, 4063, 1085, 1085, 1205, 2418, 1801,
	1203, 3042, 1203, 4081, 2343, 1085, 3452, 3222, 1946, 4000,
	2649, 4079, 4451, 1085, 1085, 3576, 2174, 1181, 1180, 1272,
	1223, 4009, 4116, 1179, 4012, 4435, 4432, 2121, 1345, 3842,
	1287, 4101, 3408, 2026, 2693, 1779, 3416, 4103, 1065, 4086,
	1447, 4100, 3187, 3477, 1513, 4105, 758, 4182, 1077, 1778,
	2831, 2830, 4323, 1316, 1314, 3684, 1345, 1313, 1312, 3685,
	4592, 4655, 4111, 3713, 1085, 226, 3010, 1437, 1718, 1710,
	1448, 1272, 223, 1085, 225, 4133, 224, 4127, 4054, 1980,
	4062, 1085, 1940, 1946, 3662, 3228, 4519, 3734, 3400, 23,
	22, 1980, 1085, 21, 1980, 1085, 109, 1202, 42, 20,
	125, 144, 4121, 143, 3720, 117, 3722, 1085, 142, 141,
	140, 139, 4144, 4145, 1345, 146, 138, 137, 132, 4160,
	4185, 1287, 136, 135, 1201, 4147, 1287, 1287, 1218, 134,
	133, 1272, 1272, 131, 129, 1203, 130, 124, 4161, 128,
	127, 126, 123, 4201, 4168, 4159, 122, 121, 120, 119,
	1980, 118, 116, 115, 114, 113, 112, 111, 110, 749,
	39, 1238, 746, 4212, 61, 1345, 60, 4237, 1287, 108,
	107, 3760, 2147, 259, 4228, 259, 259, 1943, 1267, 259,
	1277, 19, 40, 14, 65, 66, 1207, 1207, 18, 4199,
	13, 1297, 35, 88, 99, 4204, 4209, 4242, 98, 36,
	753, 1934, 4253, 2556, 4217, 1085, 1085, 4277, 4278, 4218,
	4203, 4216, 4258, 4226, 4214, 3981, 3981, 4221, 96, 4220,
	4241, 4236, 1085, 1946, 259, 95, 259, 259, 1267, 34,
	259, 259, 1277, 4256, 17, 3410, 16, 15, 93, 92,
	33, 4254, 4250, 259, 31, 1466, 11, 9, 8, 1205,
	1205, 4255, 37, 4261, 4275, 4260, 1897, 12, 5, 177,
	176, 1085, 2556, 179, 1085, 175, 1490, 178, 4081, 87,
	174, 1207, 173, 4290, 4291, 4289, 86, 29, 10, 169,
	4238, 3797, 80, 1207, 171, 1515, 170, 1277, 4319, 168,
	4299, 259, 259, 167, 1267, 166, 81, 78, 165, 82,
	3981, 164, 79, 163, 4342, 27, 6, 64, 7, 4215,
	4106, 3499, 3981, 753, 102, 259, 259, 4318, 103, 4310,
	38, 76, 75, 2069, 4315, 1085, 1085, 4341, 74, 4336,
	26, 63, 25, 4357, 1205, 4335, 4293, 1207, 861, 210,
	1207, 209, 208, 207, 1287, 206, 1205, 205, 204, 1202,
	1202, 203, 198, 197, 1287, 1287, 202, 200, 4374, 4349,
	199, 4376, 201, 4351, 196, 213, 3981, 212, 218, 3981,
	217, 1287, 216, 4365, 4366, 215, 1201, 1201, 214, 1980,
	4388, 4364, 211, 220, 4369, 1085, 1085, 1203, 1203, 195,
	4373, 194, 193, 191, 187, 1085, 186, 190, 4241, 4382,
	1205, 192, 189, 1205, 4386, 4387, 188, 185, 219, 161,
	162, 259, 71, 4385, 4393, 4384, 4394, 4381, 160, 159,
	2556, 4391, 158, 157, 4422, 4392, 156, 155, 154, 70,
	259, 24, 4426, 2, 1202, 1, 1085, 1085, 4402, 1085,
	0, 0, 4406, 0, 0, 0, 1202, 0, 0, 0,
	4262, 3039, 3040, 4401, 0, 0, 0, 0, 0, 0,
	4281, 1201, 4191, 0, 4449, 0, 0, 4446, 0, 0,
	0, 4424, 1203, 1201, 4425, 0, 0, 0, 0, 0,
	4470, 0, 0, 4473, 1203, 4439, 0, 4443, 2607, 1085,
	1085, 1085, 0, 4474, 4434, 4437, 0, 0, 0, 0,
	1202, 4456, 0, 1202, 4438, 0, 4468, 4442, 4461, 0,
	0, 2424, 1448, 4469, 0, 0, 0, 0, 0, 0,
	0, 1085, 0, 0, 0, 0, 1799, 1201, 0, 4503,
	1201, 0, 0, 4490, 4489, 4508, 4453, 0, 1203, 4487,
	4488, 1203, 0, 0, 0, 0, 0, 0, 0, 0,
	4529, 4522, 4504, 0, 0, 0, 0, 4533, 1448, 0,
	4506, 0, 0, 0, 4531, 0, 0, 4543, 4545, 4544,
	0, 766, 0, 0, 1085, 0, 0, 0, 0, 0,
	2560, 0, 0, 0, 4530, 0, 0, 0, 4550, 0,
	0, 4537, 0, 0, 4539, 3158, 3159, 3160, 0, 0,
	0, 0, 4570, 0, 4566, 0, 0, 0, 0, 0,
	4556, 4557, 0, 0, 4562, 4558, 4560, 4538, 0, 0,
	0, 0, 0, 1207, 4569, 1207, 4588, 4590, 669, 2069,
	4573, 4571, 4587, 0, 4577, 0, 0, 0, 4598, 4357,
	4582, 0, 4599, 1940, 4589, 4586, 4591, 0, 0, 259,
	4597, 259, 3981, 4594, 3981, 259, 0, 0, 0, 0,
	0, 4434, 0, 4612, 4437, 0, 4593, 0, 1466, 1267,
	259, 0, 259, 0, 4611, 0, 0, 259, 1466, 685,
	4614, 0, 4621, 0, 259, 1466, 1205, 0, 1205, 771,
	4627, 0, 0, 0, 4620, 1085, 1085, 4623, 0, 1987,
	4625, 0, 4453, 0, 1085, 4628, 1085, 1085, 0, 4631,
	4618, 259, 0, 0, 0, 4637, 4646, 1940, 259, 4647,
	4640, 4651, 4643, 4648, 4650, 4649, 4645, 0, 4644, 0,
	0, 0, 0, 0, 0, 0, 0, 4659, 1943, 4658,
	4660, 4662, 0, 4661, 4654, 0, 4663, 0, 4664, 0,
	0, 0, 4666, 0, 4670, 0, 4669, 0, 753, 0,
	0, 0, 1934, 1085, 4674, 0, 4676, 0, 0, 4671,
	4680, 4677, 730, 4679, 4638, 4639, 0, 4673, 4666, 0,
	0, 0, 0, 0, 0, 0, 1202, 0, 1202, 0,
	0, 4193, 4194, 0, 0, 0, 773, 0, 0, 0,
	0, 0, 0, 2902, 0, 0, 0, 0, 0, 0,
	0, 0, 1943, 1201, 0, 1201, 0, 0, 2185, 4208,
	0, 4210, 0, 4211, 1203, 0, 1203, 0, 0, 0,
	0, 4675, 4541, 4542, 0, 0, 1934, 0, 4547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1727, 1728, 777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 1294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 259, 0, 0, 1729,
	0, 0, 0, 0, 0, 0, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1453,
	0, 0, 0, 0, 0, 0, 0, 772, 261, 1470,
	0, 1477, 0, 1483, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 259, 0, 0, 0, 0, 259, 0,
	1488, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 259, 0, 775, 1524, 669, 0, 259, 4350,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 1735, 0, 861, 0, 0, 1570, 0, 1575,
	1565, 0, 0, 1940, 0, 0, 0, 0, 0, 1584,
	0, 1589, 0, 0, 1578, 0, 0, 0, 0, 259,
	0, 1267, 259, 0, 0, 0, 767, 2560, 0, 0,
	0, 0, 0, 3533, 3534, 0, 753, 1757, 1759, 0,
	0, 0, 0, 259, 0, 0, 0, 1940, 1940, 0,
	2260, 0, 0, 0, 774, 259, 259, 0, 259, 0,
	259, 0, 259, 0, 259, 0, 0, 1604, 731, 0,
	0, 0, 1646, 0, 0, 0, 0, 0, 0, 769,
	0, 0, 0, 0, 0, 0, 0, 2292, 0, 0,
	2293, 0, 2294, 0, 0, 0, 1750, 0, 1943, 0,
	1940, 1940, 0, 0, 259, 0, 0, 2560, 2560, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 735,
	0, 1940, 0, 753, 0, 0, 0, 0, 0, 0,
	0, 0, 1943, 1943, 0, 3596, 3597, 3598, 3599, 3600,
	3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610,
	3611, 3612, 3613, 3614, 0, 3618, 1934, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 1943, 1943, 0, 1727, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4518, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	1934, 0, 1758, 0, 0, 0, 1943, 1343, 0, 1730,
	0, 1442, 0, 0, 0, 0, 0, 1272, 0, 0,
	1751, 0, 3135, 3136, 0, 3153, 3154, 3155, 0, 0,
	1934, 2560, 2560, 2560, 0, 0, 0, 0, 3135, 3136,
	0, 3153, 3154, 3155, 1729, 3541, 0, 0, 0, 0,
	0, 0, 1272, 1272, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2826, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 3150, 0,
	0, 259, 0, 669, 0, 0, 0, 1902, 0, 0,
	0, 0, 0, 0, 3150, 259, 3878, 2818, 2816, 0,
	0, 0, 0, 0, 2820, 2822, 2812, 0, 0, 0,
	259, 1277, 0, 0, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 1437, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 1727, 1728,
	1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0,
	0, 1448, 0, 0, 0, 0, 0, 259, 1277, 0,
	685, 0, 1758, 0, 0, 0, 0, 0, 0, 1730,
	2668, 3141, 1757, 1759, 0, 0, 259, 0, 0, 259,
	0, 0, 0, 259, 0, 259, 0, 3141, 0, 0,
	1267, 0, 259, 259, 0, 1277, 1277, 2684, 1744, 1745,
	0, 0, 259, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	1943, 1750, 0, 3156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2725, 0, 3156,
	0, 0, 0, 0, 1934, 0, 0, 0, 259, 0,
	0, 0, 0, 1940, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 3151, 3536, 0, 0, 0,
	0, 2814, 0, 0, 259, 1448, 0, 0, 0, 0,
	0, 3151, 2828, 1272, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 259, 0, 2827, 2819, 2817, 2821, 2823, 2813, 2815,
	2829, 0, 0, 0, 0, 0, 0, 2825, 0, 0,
	1448, 0, 1448, 0, 0, 0, 0, 259, 2844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 1757, 1759, 1756, 0, 0, 0, 1943, 0,
	2832, 0, 1466, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 1751, 0, 0, 1744, 1745,
	0, 0, 1934, 2885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2725, 0, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 2914, 861, 0, 2725, 2725, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 3152,
	0, 0, 0, 0, 259, 0, 0, 0, 1912, 0,
	0, 0, 0, 0, 0, 3152, 0, 1048, 0, 0,
	0, 1048, 0, 259, 1267, 259, 0, 0, 0, 1466,
	0, 1466, 1277, 259, 0, 0, 1267, 1429, 1267, 0,
	1267, 1429, 0, 0, 0, 0, 0, 2215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2560,
	2560, 0, 0, 1281, 2229, 0, 0, 0, 0, 259,
	259, 259, 259, 1267, 2231, 0, 1267, 0, 259, 0,
	259, 0, 0, 0, 0, 0, 2239, 0, 2242, 2243,
	2244, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 2833, 1756, 0, 1034, 0, 0, 259,
	72, 0, 2824, 0, 0, 0, 0, 0, 0, 0,
	2054, 3147, 3148, 3149, 0, 1751, 0, 73, 3146, 3144,
	3145, 3137, 3138, 3139, 3140, 3142, 3143, 3147, 3148, 3149,
	0, 0, 0, 77, 3146, 3144, 3145, 3137, 3138, 3139,
	3140, 3142, 3143, 0, 0, 0, 0, 0, 0, 0,
	0, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560,
	2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560,
	0, 2560, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 90, 101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4130, 0, 3135, 3136, 2152, 3153, 3154, 3155,
	0, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 1448, 1448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	1727, 1728, 0, 0, 0, 0, 0, 0, 91, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 4171, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	3150, 1934, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 0, 0, 0, 0, 259, 1729, 0, 0, 0,
	669, 0, 0, 0, 0, 669, 1749, 0, 669, 0,
	0, 669, 669, 0, 2185, 1746, 0, 669, 0, 0,
	0, 0, 1943, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1466, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1466,
	0, 2646, 0, 3141, 0, 0, 0, 1940, 3531, 0,
	259, 0, 0, 0, 259, 259, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 1752,
	1753, 1754, 1755, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 2725, 2725, 259, 0, 3281, 1429, 4298,
	0, 0, 0, 0, 0, 0, 0, 2725, 1272, 0,
	3296, 0, 0, 0, 2685, 1281, 0, 0, 2725, 3296,
	0, 2725, 3296, 180, 97, 3296, 100, 0, 0, 0,
	0, 0, 0, 0, 1757, 1759, 0, 0, 259, 259,
	3281, 0, 259, 0, 0, 0, 0, 0, 2357, 0,
	227, 0, 1943, 0, 0, 0, 0, 3151, 856, 0,
	1744, 1745, 3281, 145, 259, 2747, 3354, 3354, 0, 0,
	1267, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 2725, 0, 2725, 0, 3377,
	2725, 3281, 0, 1750, 2725, 3281, 0, 229, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 2791, 0, 1448,
	0, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	1429, 0, 0, 147, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2462, 0, 0, 184, 259,
	3404, 0, 2834, 3406, 2725, 2846, 228, 259, 2849, 0,
	2851, 259, 0, 1277, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 259, 0,
	0, 0, 0, 2885, 0, 0, 1267, 1292, 259, 0,
	0, 2725, 0, 669, 0, 0, 0, 0, 0, 183,
	2725, 0, 0, 2893, 0, 0, 2893, 0, 0, 0,
	1034, 3152, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 259, 2885, 0, 0, 2885, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2630, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 2947, 0, 3504, 0, 0, 1468,
	0, 1474, 0, 1480, 0, 0, 1429, 0, 0, 0,
	0, 0, 0, 3510, 0, 0, 1267, 259, 0, 259,
	0, 0, 2970, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 1568, 0, 1573,
	0, 1730, 0, 0, 0, 0, 0, 0, 1208, 1582,
	0, 1587, 0, 3147, 3148, 3149, 0, 0, 0, 0,
	3146, 3144, 3145, 3137, 3138, 3139, 3140, 3142, 3143, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 3574, 0, 0, 0, 0, 1749, 0, 0, 0,
	0, 0, 2704, 1747, 1743, 1746, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	1753, 1754, 1755, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 2560, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 259, 1727, 1728, 0, 0, 0, 0, 0, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 0, 0, 0, 1272,
	0, 0, 669, 669, 1757, 1759, 1758, 0, 0, 0,
	0, 0, 0, 1730, 0, 0, 0, 0, 1429, 0,
	1798, 0, 0, 0, 1466, 1466, 1811, 2560, 0, 0,
	1744, 1745, 0, 0, 0, 0, 0, 0, 1466, 1466,
	1466, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	0, 2185, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 1750, 0, 0, 0, 1746, 0, 0,
	0, 3354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 1728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1429, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 1730, 0, 753, 0, 0,
	3028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 1869, 1869, 0, 0, 0, 0, 0, 0,
	0, 1752, 1753, 1754, 1755, 0, 0, 0, 3354, 0,
	1729, 1735, 0, 0, 0, 0, 0, 0, 0, 259,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 3281,
	0, 259, 0, 0, 0, 2560, 1756, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 1757, 1759, 0, 0,
	1429, 0, 259, 0, 0, 0, 0, 1751, 0, 0,
	0, 259, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 259, 1744, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3325, 3326, 0, 0, 3327,
	2725, 259, 0, 1752, 1753, 1754, 1755, 0, 0, 0,
	2914, 2914, 0, 1735, 0, 1750, 861, 861, 2725, 0,
	0, 0, 2885, 2885, 0, 0, 861, 2725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1034, 0, 3363,
	3364, 0, 0, 3365, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 1744, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3388, 0, 0, 0, 0,
	0, 0, 1429, 1747, 1743, 0, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 0, 0, 1750, 0, 0,
	3898, 0, 0, 0, 0, 0, 3420, 1208, 0, 0,
	0, 1208, 0, 2185, 0, 1208, 0, 3427, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 3188, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 3468,
	3469, 0, 259, 0, 0, 0, 0, 0, 1466, 0,
	259, 1208, 0, 0, 0, 3214, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	3227, 1208, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 3245, 0, 0, 0, 0, 2725, 2725, 0, 3354,
	1756, 0, 0, 0, 0, 0, 0, 0, 2725, 0,
	0, 0, 0, 0, 0, 3983, 0, 3983, 1466, 0,
	0, 1751, 0, 0, 0, 0, 2725, 0, 3296, 0,
	0, 0, 1466, 1466, 259, 3281, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 3281, 0,
	259, 3281, 0, 259, 0, 1747, 1743, 0, 1740, 1738,
	1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 2725, 0,
	2725, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2725, 0, 0,
	0, 0, 4056, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3983, 0, 0, 1466, 0, 0, 0, 1747, 1743, 0,
	1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3227, 0, 0, 2332, 0, 2336,
	0, 0, 0, 0, 0, 0, 2350, 0, 0, 0,
	0, 0, 0, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 0, 2399,
	0, 2401, 2402, 2403, 2404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1448, 0, 0, 2428, 0, 0, 0, 0, 2725, 0,
	3296, 0, 0, 4163, 1798, 0, 0, 0, 2443, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 4183, 0,
	4183, 0, 0, 0, 2473, 2476, 2479, 2482, 0, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 0, 0, 0, 0,
	753, 1208, 0, 1208, 0, 0, 0, 1442, 0, 0,
	1343, 1267, 0, 0, 0, 0, 0, 2552, 1208, 2563,
	2565, 2570, 0, 0, 0, 0, 3281, 0, 259, 0,
	0, 0, 0, 0, 0, 1947, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 0, 0, 4163, 0, 0,
	1272, 0, 0, 0, 0, 2725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1466, 0, 1429, 0, 3553, 0, 0, 0, 0, 0,
	0, 0, 3983, 3983, 0, 0, 0, 0, 0, 0,
	0, 3569, 0, 3766, 0, 1208, 0, 0, 0, 259,
	259, 0, 0, 0, 0, 1429, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3806,
	1429, 0, 0, 3574, 0, 0, 0, 0, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 3354,
	4312, 1429, 0, 4314, 3354, 4317, 0, 0, 0, 0,
	0, 4163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3983, 3835, 3836,
	3837, 0, 0, 0, 0, 0, 0, 0, 1048, 3983,
	0, 0, 0, 0, 0, 1281, 0, 0, 0, 3859,
	0, 0, 1048, 0, 0, 0, 0, 0, 153, 0,
	259, 0, 0, 0, 0, 0, 0, 72, 0, 46,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4056, 0, 0, 0, 73, 0, 0, 148, 0, 0,
	0, 0, 0, 3983, 0, 259, 3983, 0, 0, 0,
	77, 0, 0, 0, 0, 3660, 3296, 0, 0, 0,
	0, 67, 0, 0, 0, 0, 1208, 1208, 48, 0,
	150, 0, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 1466, 0, 1466, 0, 0, 0, 47, 0,
	84, 0, 0, 1429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4411, 0, 0, 0, 0, 50, 68, 2847, 2848, 0,
	2850, 4418, 0, 0, 51, 0, 0, 0, 0, 57,
	0, 0, 0, 151, 4183, 0, 0, 259, 0, 0,
	0, 49, 0, 104, 1429, 0, 0, 0, 90, 101,
	0, 0, 0, 0, 0, 0, 2725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1208,
	0, 1208, 0, 1208, 259, 0, 0, 0, 0, 0,
	3940, 3941, 0, 0, 0, 0, 0, 52, 0, 1208,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 3574, 0, 0, 0, 91, 0, 0, 0, 0,
	0, 0, 1208, 0, 1208, 1208, 1208, 0, 0, 0,
	1466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2971, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1429, 0, 0,
	1429, 0, 0, 0, 0, 0, 0, 0, 4163, 0,
	0, 0, 0, 4052, 0, 0, 0, 1281, 0, 0,
	0, 1780, 1781, 0, 4064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2725, 0, 0, 0, 0, 4085, 0, 3983,
	0, 3983, 0, 0, 1466, 0, 1947, 1947, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 1429, 0, 3022, 3023, 0, 0,
	0, 0, 3029, 0, 0, 53, 4102, 0, 4104, 0,
	0, 1429, 0, 0, 0, 0, 0, 0, 1466, 56,
	0, 3043, 3044, 0, 59, 0, 0, 2443, 0, 0,
	0, 0, 0, 69, 0, 0, 3051, 0, 0, 58,
	180, 97, 0, 100, 0, 0, 0, 54, 0, 0,
	0, 152, 3065, 0, 2914, 0, 0, 0, 55, 0,
	0, 0, 0, 2725, 0, 1208, 0, 227, 0, 3077,
	0, 0, 0, 0, 0, 62, 0, 0, 2914, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4149, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 3933, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 1208, 0, 0, 0, 0, 0,
	147, 0, 0, 1208, 0, 3945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	1208, 0, 0, 228, 0, 1429, 0, 0, 2570, 2570,
	2570, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 1869, 222, 0, 1727, 1728, 4219, 0,
	0, 3192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 3,
	1758, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 0, 0,
	1208, 1208, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 254, 665, 0, 0, 0, 0,
	0, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 0, 1034, 0, 0, 0, 0,
	1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 0,
	0, 0, 0, 0, 3021, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 1758, 1343, 1947, 0, 0, 0,
	0, 1730, 3315, 0, 0, 1752, 1753, 1754, 1755, 0,
	1776, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 4355, 0, 4122, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 4372, 0, 1749, 0, 1208, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	1757, 1759, 0, 0, 0, 0, 4122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 1744, 1745, 0, 0,
	1208, 0, 0, 1281, 2357, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 1208, 0, 0, 0, 0, 1429, 0, 0, 1752,
	1753, 1754, 1755, 1208, 0, 1208, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 2357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4457,
	0, 0, 4458, 0, 0, 1767, 0, 0, 1777, 0,
	0, 0, 0, 0, 1757, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 1774, 0, 0, 0, 0, 0, 0,
	1744, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 1750, 0, 0, 1429, 0, 1429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1429, 2350, 0, 0, 0,
	0, 0, 3528, 3529, 0, 1775, 3532, 0, 0, 0,
	3535, 0, 0, 0, 0, 0, 0, 0, 0, 3539,
	0, 0, 0, 1764, 0, 0, 0, 0, 3546, 0,
	0, 3192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1429,
	0, 0, 0, 0, 0, 0, 3581, 3582, 0, 3583,
	3584, 3585, 0, 1429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 2531, 2532, 2533,
	2534, 2527, 2528, 2529, 2530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 3591, 0, 0, 0, 3593, 0, 0, 0, 1747,
	1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736,
	1737, 0, 1429, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3621, 3622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3633, 0, 0, 0, 2507, 2508,
	2509, 2510, 0, 0, 0, 0, 0, 0, 0, 3642,
	0, 0, 0, 0, 0, 1429, 0, 0, 0, 0,
	0, 2519, 2520, 2521, 2522, 2515, 2516, 2517, 2518, 2523,
	2524, 2525, 2526, 0, 0, 0, 0, 0, 0, 0,
	0, 1208, 1208, 0, 0, 1429, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 1741,
	1742, 1748, 1769, 1747, 1743, 1208, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 3688, 1429, 1208, 0, 3086,
	1208, 0, 0, 3087, 2503, 2504, 2505, 2506, 2511, 2512,
	2513, 2514, 0, 0, 0, 0, 0, 1947, 0, 3707,
	0, 1208, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1208, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1253, 0, 1253, 1253, 0, 851,
	0, 0, 1429, 0, 0, 0, 1208, 0, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 72, 0, 854,
	853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 73, 1340, 0, 0, 0, 0,
	0, 1446, 0, 1429, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 1208, 0, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 1208, 0, 0, 3830, 1208, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 1208, 0,
	1208, 0, 0, 0, 1208, 0, 1566, 1567, 0, 855,
	0, 0, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 104, 0, 0, 0, 0, 90, 101,
	73, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 3876, 3877, 0, 0, 77, 0, 3881, 3882,
	1208, 0, 0, 3885, 3886, 0, 0, 0, 0, 0,
	3890, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3894, 0, 0, 0, 1208, 1208, 0, 0, 0,
	0, 0, 0, 1048, 1048, 91, 84, 3899, 0, 0,
	0, 72, 0, 0, 0, 0, 0, 0, 1208, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 104,
	1208, 0, 0, 0, 90, 101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 0,
	0, 0, 0, 0, 84, 0, 0, 1727, 1728, 0,
	1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1758, 0, 0, 0, 1048, 0, 1947, 1730, 0,
	0, 91, 0, 855, 260, 260, 260, 1776, 0, 0,
	0, 0, 0, 0, 1208, 0, 0, 104, 0, 0,
	0, 0, 90, 101, 0, 0, 0, 0, 94, 0,
	0, 1208, 260, 1729, 0, 0, 0, 0, 0, 0,
	0, 1947, 1947, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	180, 97, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 1947, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 1947, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 1907, 0, 0, 0,
	0, 0, 1208, 1208, 229, 0, 0, 0, 0, 0,
	0, 1916, 0, 1446, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 1777, 0, 0, 0, 0,
	147, 1757, 1759, 0, 0, 1208, 0, 0, 0, 0,
	4117, 4118, 4119, 0, 0, 184, 180, 97, 1773, 100,
	1774, 0, 1253, 228, 0, 0, 0, 1744, 1745, 1446,
	0, 0, 0, 2350, 0, 221, 4128, 4129, 0, 0,
	0, 0, 94, 227, 222, 1765, 0, 0, 0, 0,
	0, 856, 0, 0, 4137, 4140, 145, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 180, 97, 0, 100, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4184, 0, 147, 0, 0, 0,
	1764, 227, 4190, 0, 0, 0, 0, 0, 0, 856,
	0, 184, 0, 4197, 145, 0, 1034, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 4205, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 229, 1208,
	0, 0, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 1756, 0, 0, 0, 0, 0, 1947,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	1768, 0, 0, 1208, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 1208, 1208, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1562, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 0, 0, 0,
	2172, 0, 1208, 0, 2179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2191, 0, 0, 0, 0,
	0, 0, 4322, 0, 0, 4325, 1208, 0, 0, 0,
	0, 2203, 0, 2203, 0, 0, 0, 1947, 0, 2210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 0, 0, 4419, 0, 0, 0,
	2179, 0, 0, 2235, 0, 0, 1034, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2268, 0, 2270,
	0, 2272, 0, 2274, 0, 2275, 0, 0, 72, 0,
	0, 0, 0, 0, 1208, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 0, 73, 1208, 2350, 1208, 0,
	0, 0, 0, 0, 0, 1208, 4140, 0, 0, 0,
	0, 77, 0, 0, 0, 2297, 1208, 1208, 0, 0,
	0, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 84, 0, 0, 0, 0, 0, 1208, 0, 1208,
	0, 0, 0, 0, 0, 260, 0, 260, 260, 0,
	0, 260, 0, 1290, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1208,
	855, 1208, 0, 0, 1208, 0, 0, 0, 0, 0,
	4486, 4486, 4486, 1208, 104, 0, 0, 0, 0, 90,
	101, 0, 0, 0, 0, 0, 260, 1290, 260, 260,
	0, 1290, 260, 260, 0, 1290, 0, 0, 0, 0,
	0, 0, 4507, 1208, 1208, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 0, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 1208, 0, 0, 0, 91, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1290, 0, 260, 260, 4486, 0, 0, 0, 0,
	0, 0, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 1290, 1208, 1208, 1208, 0, 1290, 260, 260, 0,
	0, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1208, 2627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 0, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 4486, 4632, 0, 94,
	0, 0, 0, 0, 1208, 4636, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 2670, 0, 0,
	1253, 0, 0, 0, 1253, 0, 1253, 0, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2191, 0, 0, 0, 0, 0, 0,
	0, 180, 97, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 1208, 1208, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 856, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 1208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 1446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 1947, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 1727, 1728, 0, 1760,
	1761, 1762, 1770, 1771, 1772, 0, 2179, 0, 0, 0,
	0, 0, 0, 0, 2191, 0, 0, 1560, 0, 1208,
	1758, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 1208, 0, 0, 0, 0, 1776, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1290, 0,
	0, 0, 260, 260, 260, 0, 0, 0, 0, 260,
	0, 0, 1729, 0, 0, 2945, 260, 0, 0, 1290,
	0, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 2955, 1208, 2958, 0, 1208, 0,
	0, 0, 1208, 260, 0, 0, 0, 0, 0, 0,
	260, 0, 1208, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1208,
	0, 1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772,
	2983, 1446, 2985, 1446, 0, 1290, 0, 0, 0, 2991,
	0, 0, 0, 0, 1763, 1758, 1290, 0, 0, 0,
	0, 0, 1730, 0, 0, 1752, 1753, 1754, 1755, 0,
	0, 1776, 0, 0, 0, 1735, 0, 0, 0, 0,
	1290, 0, 1253, 0, 0, 0, 0, 0, 0, 0,
	3019, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	0, 1767, 0, 0, 1777, 0, 1746, 0, 0, 0,
	1757, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 1774,
	0, 0, 0, 0, 0, 0, 1744, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1752, 1753, 1754, 1755, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 260, 1290, 1290, 260, 0,
	0, 0, 0, 0, 0, 0, 1290, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 1777,
	0, 0, 0, 0, 0, 1757, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 1773, 0, 1774, 260, 0, 0, 1081, 0,
	260, 1744, 1745, 0, 0, 0, 260, 0, 0, 0,
	0, 1208, 0, 1208, 0, 0, 0, 0, 0, 1765,
	0, 0, 260, 0, 260, 0, 0, 0, 0, 0,
	260, 0, 1756, 0, 1750, 0, 0, 0, 0, 1290,
	0, 1290, 0, 1290, 258, 258, 258, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 1290,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1290, 260, 790, 0, 260, 0, 1775, 0, 0, 1768,
	0, 0, 1290, 0, 1290, 1290, 1290, 0, 0, 0,
	0, 0, 0, 0, 1764, 260, 790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 260, 0,
	260, 0, 260, 0, 260, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1253, 0, 0, 0, 1446, 1446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3279, 0, 1751, 0,
	1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747,
	1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736,
	1737, 0, 0, 0, 1768, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3332,
	3334, 0, 0, 2191, 0, 0, 0, 0, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 0, 0, 0,
	1741, 1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739,
	1731, 1732, 1733, 1734, 1736, 1737, 0, 0, 3417, 0,
	2439, 0, 3421, 0, 2440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 1728, 0, 1760, 1761, 1762,
	1770, 1771, 1772, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1758, 0,
	0, 0, 0, 0, 0, 1730, 0, 260, 0, 0,
	1290, 0, 3473, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 3513, 260,
	1446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 260, 0, 0, 0, 260, 0, 260, 0, 0,
	0, 0, 0, 0, 260, 260, 3526, 0, 0, 0,
	1290, 1290, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 1753, 1754, 1755, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 1777, 260, 0, 0, 715, 0, 1757, 1759,
	0, 1070, 106, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 698, 1774, 0, 0,
	0, 0, 699, 0, 1744, 1745, 0, 0, 0, 0,
	0, 0, 0, 260, 1290, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 260,
	0, 700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	1290, 0, 106, 702, 0, 260, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 721, 0, 0, 1764, 0, 0,
	0, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1290, 703, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 260, 258, 258, 0,
	1290, 258, 0, 0, 0, 0, 0, 704, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 260, 715, 0,
	0, 0, 0, 0, 1009, 260, 0, 0, 705, 0,
	1756, 706, 0, 0, 0, 1029, 0, 0, 698, 0,
	0, 0, 0, 0, 699, 0, 258, 730, 258, 258,
	0, 1751, 258, 258, 0, 0, 0, 0, 0, 0,
	0, 260, 260, 260, 260, 790, 0, 0, 0, 0,
	260, 720, 260, 0, 0, 0, 0, 1768, 0, 0,
	0, 1191, 0, 700, 0, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 1763, 1758,
	0, 260, 0, 258, 258, 702, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 0, 721, 258, 258, 0,
	0, 0, 2191, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 2191, 0, 0, 703, 0, 0, 0,
	0, 1749, 0, 3796, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 2191, 1766, 704,
	0, 0, 3812, 1741, 1742, 1748, 1769, 1747, 1743, 0,
	1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 708,
	705, 0, 0, 706, 0, 0, 0, 3904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 709,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 1752, 1753, 1754, 1755, 0, 3861,
	0, 0, 258, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 725, 726, 723,
	0, 0, 0, 0, 0, 718, 0, 0, 711, 0,
	1767, 0, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 1774, 0,
	0, 0, 0, 0, 0, 1744, 1745, 0, 0, 712,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 1290, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 1750, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 708, 0, 731, 0, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	1775, 709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1290, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 1290, 1290, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 260, 260, 729, 0,
	0, 0, 0, 0, 0, 710, 0, 0, 0, 725,
	726, 723, 0, 0, 0, 0, 0, 718, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 1891, 0, 1204, 0, 3998, 1290, 258, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2191, 258, 1891, 258, 0, 0, 0, 0, 790,
	0, 712, 1751, 719, 0, 0, 790, 0, 0, 0,
	260, 260, 713, 1290, 260, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 714, 0, 1768, 0,
	0, 722, 0, 258, 0, 1290, 260, 1290, 0, 0,
	258, 0, 0, 0, 0, 731, 0, 0, 0, 0,
	0, 0, 2191, 1290, 0, 0, 716, 0, 0, 0,
	0, 0, 4073, 0, 1290, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1290, 0, 0, 0, 0, 0, 260, 1290, 0,
	1290, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 264, 0, 0, 260,
	0, 0, 1290, 260, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 1290, 1741, 1742, 1748, 1769, 1747, 1743,
	260, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	106, 0, 106, 0, 106, 0, 0, 0, 3544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1290, 1290, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	782, 0, 0, 0, 0, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 1029, 106, 106, 0, 0, 0,
	0, 0, 0, 0, 782, 0, 0, 0, 106, 0,
	106, 0, 4172, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 106, 0, 0, 258, 0, 1290, 790, 260,
	1290, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 2191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 106, 0, 258, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 808, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 258, 0, 0, 0, 0, 0,
	258, 1290, 810, 0, 0, 0, 0, 0, 811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4288, 1446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 258, 0, 0, 812, 0, 829,
	0, 0, 0, 1009, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 1792, 813, 0, 0, 790, 258, 814,
	258, 0, 258, 0, 258, 0, 258, 0, 0, 0,
	1797, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	837, 0, 0, 0, 0, 0, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	835, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 816, 1086, 4375, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 839, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1889, 0, 1892, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 838, 0, 4428, 0,
	0, 0, 0, 0, 0, 0, 833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4463, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1290,
	0, 0, 1290, 260, 818, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 260, 820, 0, 0, 0, 0,
	0, 0, 0, 1204, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 258, 260, 0,
	0, 0, 0, 260, 0, 821, 0, 0, 4523, 1290,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 1290, 1290, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 1290, 0, 807, 0, 830, 0, 0, 0, 258,
	0, 0, 0, 0, 822, 0, 1290, 0, 0, 0,
	260, 0, 1290, 0, 0, 0, 0, 0, 258, 0,
	0, 258, 0, 0, 0, 258, 0, 258, 828, 0,
	0, 0, 0, 0, 258, 258, 1290, 0, 0, 0,
	0, 0, 0, 0, 258, 823, 0, 0, 0, 824,
	842, 0, 841, 0, 0, 0, 825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 0, 0, 0, 0, 834, 0, 0, 0, 0,
	0, 843, 0, 840, 0, 0, 0, 0, 0, 731,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 1346,
	0, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 1290, 0, 1290, 0,
	0, 0, 1029, 0, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 0, 1290, 1290, 0, 790,
	0, 0, 0, 0, 0, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 1288,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 1288, 1290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1290,
	0, 1290, 260, 0, 1290, 260, 0, 0, 0, 0,
	0, 0, 0, 1290, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 258, 0, 0,
	0, 1288, 0, 1290, 1290, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1290, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 1009, 1290, 260, 1009, 1009, 0, 1290, 0, 0,
	0, 258, 258, 258, 258, 0, 0, 0, 0, 0,
	258, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1290, 1290, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 1290, 0, 0, 0, 2417,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1029, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1290, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1290, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	1191, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 1347, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 1290, 0, 0, 0, 0, 0, 0, 1290,
	260, 0, 0, 0, 1290, 1290, 0, 0, 0, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 1289, 0,
	0, 0, 0, 1290, 0, 0, 1290, 782, 0, 0,
	0, 0, 0, 0, 782, 0, 0, 1288, 1289, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 1204, 0, 0, 0, 0, 0, 1289, 0, 0,
	0, 260, 260, 0, 0, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1891, 0, 0,
	0, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 0, 1288, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 258, 0, 0, 0, 258, 258, 0, 1727,
	1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 106, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 1758, 0, 0, 0, 258, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 106, 260, 0, 106,
	0, 106, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1290, 1290, 0, 1729, 0, 0, 0, 0,
	258, 258, 0, 0, 258, 1749, 0, 0, 0, 1290,
	0, 1891, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 258, 106, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 790, 0, 106, 0, 0, 260, 0, 0, 258,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 1767, 0, 0, 1777, 0, 0,
	1204, 0, 0, 1757, 1759, 0, 0, 1288, 0, 1288,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 1774, 0, 0, 0, 0, 1288, 1288, 1744,
	1745, 0, 0, 258, 0, 1347, 0, 0, 1288, 260,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	1288, 0, 1288, 1288, 1288, 0, 1289, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 782, 0, 0, 0, 0,
	2417, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 1758, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 1346, 1191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1191, 0, 0, 1289, 1289, 0, 1729, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 1749, 0, 0, 0,
	0, 0, 1204, 1204, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 1766, 0, 0, 0, 0, 1741, 1742,
	1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	1753, 1754, 1755, 0, 0, 0, 1289, 0, 1289, 1735,
	1289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1289, 1289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1289, 0, 0,
	0, 0, 0, 0, 0, 1767, 106, 106, 1777, 1289,
	106, 1289, 1289, 1289, 1757, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 1774, 0, 0, 0, 0, 1288, 1288,
	1744, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 106, 0, 0, 106, 0, 0, 0, 1765, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 1775, 0, 0, 258, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 1191, 0, 0, 1029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	106, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 1204, 0, 0, 0, 0, 0,
	0, 0, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 1891, 0, 0, 0, 1741,
	1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 3089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1891, 0, 1891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 1289, 1289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 258, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 1191, 1191, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 1289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 1289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 1288, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1191, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 1728, 0, 1760, 1761, 1762,
	1770, 1771, 1772, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1758, 0,
	106, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 1288, 0, 0, 1891, 1891, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 258, 258, 1288, 0, 1288, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1288, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 1288, 0, 1288, 1891,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 782,
	0, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 106, 0, 1752, 1753, 1754, 1755, 1191, 0, 0,
	0, 1288, 258, 1735, 0, 1191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1891, 0, 258, 1891, 1767,
	0, 0, 1777, 1288, 1288, 0, 0, 0, 1757, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1288, 1774, 0, 0,
	0, 0, 0, 0, 1744, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 1750, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 106, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 106, 258, 1764, 0, 0,
	0, 0, 1289, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 0, 0, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 0, 0, 0, 1768, 0, 0,
	0, 0, 1289, 0, 1289, 0, 0, 0, 1763, 1758,
	0, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	1347, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 1289, 0, 0, 0, 1289, 0, 0, 0, 0,
	0, 1891, 0, 1891, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 1289, 0,
	0, 1749, 0, 0, 0, 1289, 0, 1289, 0, 0,
	1746, 1347, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	1289, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0,
	1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 3088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1289, 1289, 1752, 1753, 1754, 1755, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1289, 0, 0, 0, 2417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 0, 0, 0, 1347, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 1774, 0,
	0, 0, 0, 0, 0, 1744, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 0, 0,
	1288, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	1775, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 1288, 1288, 1288, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 1347, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 1288, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 3085, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 1288,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1289, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 1288, 1289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1289, 1289, 1289, 0, 0, 0, 0, 0, 0,
	1288, 1288, 1288, 0, 0, 0, 0, 0, 1289, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1727, 1728,
	0, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 1288, 0, 0, 0,
	0, 1763, 1758, 0, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 1727, 1728, 0, 1760,
	1761, 1762, 1770, 1771, 1772, 0, 0, 0, 0, 0,
	1346, 0, 0, 1347, 0, 1347, 0, 1288, 0, 1763,
	1758, 0, 1288, 1288, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 1289, 1289, 0, 1776, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 1729, 0, 1288, 0, 0, 1752, 1753, 1754,
	1755, 0, 1749, 0, 0, 0, 0, 1735, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 1289, 0,
	0, 1289, 0, 1767, 0, 0, 1777, 0, 0, 0,
	1347, 0, 1757, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 1774, 0, 0, 0, 0, 0, 0, 1744, 1745,
	1289, 1289, 0, 0, 0, 1752, 1753, 1754, 1755, 0,
	0, 0, 0, 0, 0, 1735, 1765, 1289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 1750, 0, 0, 1289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 1777, 0, 0, 0, 0, 0,
	1757, 1759, 0, 0, 0, 0, 0, 0, 0, 1289,
	1289, 1289, 0, 1775, 0, 0, 0, 1773, 0, 1774,
	0, 0, 1347, 0, 0, 0, 1744, 1745, 0, 0,
	1288, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 1288, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 1288, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 1756, 1289, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 1764,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 0, 1756, 0, 0, 0, 1289, 0, 0, 0,
	0, 1289, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	1347, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 3084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747,
	1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 3083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1289,
	1289, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	1349, 276, 277, 1350, 1351, 1352, 1289, 1353, 611, 1354,
	1355, 1356, 1357, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 1358,
	616, 288, 289, 290, 291, 292, 293, 1359, 1360, 0,
	294, 617, 618, 619, 1361, 295, 296, 620, 1362, 1291,
	1363, 297, 298, 299, 300, 301, 302, 303, 0, 1364,
	305, 306, 307, 304, 308, 1365, 309, 0, 310, 311,
	312, 313, 314, 315, 1366, 316, 317, 318, 1149, 319,
	320, 321, 1367, 1368, 1370, 1369, 1371, 1372, 1373, 322,
	323, 324, 325, 0, 326, 621, 622, 1374, 330, 327,
	328, 1375, 331, 329, 332, 1376, 333, 334, 335, 1377,
	1378, 336, 337, 338, 1379, 339, 340, 1380, 341, 342,
	343, 1381, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 1382, 265,
	1383, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 1384, 362, 1385, 1386, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 1387, 374, 629, 1388, 630, 375, 1389, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	1390, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 1391, 1151, 390, 634, 635, 1392, 636,
	1393, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	1394, 404, 406, 405, 1395, 407, 638, 1156, 408, 409,
	1157, 1396, 410, 0, 0, 0, 411, 412, 415, 1397,
	1398, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 1399, 267, 1160, 454, 455,
	1400, 639, 456, 640, 458, 459, 1401, 0, 460, 0,
	1402, 1403, 462, 463, 464, 1404, 1405, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 1406, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 1407, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 1408, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 1409, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 1410, 539, 540, 538, 541, 542, 543, 1411, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 1412, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 1413, 570, 571, 0, 567, 558, 1414, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 1415, 580,
	652, 653, 654, 655, 1416, 589, 1417, 581, 582, 583,
	656, 584, 657, 1418, 585, 586, 587, 588, 0, 590,
	591, 1419, 1420, 592, 593, 594, 596, 597, 595, 598,
	1421, 599, 1422, 0, 600, 601, 602, 658, 659, 660,
	1423, 604, 603, 605, 661, 1424, 1425, 1426, 1427, 1428,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 2605, 0,
	0, 0, 0, 0, 0, 0, 2606, 268, 270, 269,
	271, 272, 273, 274, 275, 1349, 276, 277, 1350, 1351,
	1352, 0, 1353, 611, 1354, 1355, 1356, 1357, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 1358, 616, 288, 289, 290, 291,
	292, 293, 1359, 1360, 0, 294, 617, 618, 619, 1361,
	295, 296, 620, 1362, 1291, 1363, 297, 298, 299, 300,
	301, 302, 303, 0, 1364, 305, 306, 307, 304, 308,
	1365, 309, 0, 310, 311, 312, 313, 314, 315, 1366,
	316, 317, 318, 1149, 319, 320, 321, 1367, 1368, 1370,
	1369, 1371, 1372, 1373, 322, 323, 324, 325, 0, 326,
	621, 622, 1374, 330, 327, 328, 1375, 331, 329, 332,
	1376, 333, 334, 335, 1377, 1378, 336, 337, 338, 1379,
	339, 340, 1380, 341, 342, 343, 1381, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 1382, 265, 1383, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 1384, 362,
	1385, 1386, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 1387, 374, 629, 1388,
	630, 375, 1389, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 1390, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 1391, 1151,
	390, 634, 635, 1392, 636, 1393, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 1394, 404, 406, 405, 1395,
	407, 638, 1156, 408, 409, 1157, 1396, 410, 0, 0,
	0, 411, 412, 415, 1397, 1398, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1399, 267, 1160, 454, 455, 1400, 639, 456, 640, 458,
	459, 1401, 0, 460, 0, 1402, 1403, 462, 463, 464,
	1404, 1405, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	1406, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 1407, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 1408, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 1409, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 1410, 539, 540, 538,
	541, 542, 543, 1411, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	1412, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 1413, 570, 571,
	0, 567, 558, 1414, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 1415, 580, 652, 653, 654, 655, 1416,
	589, 1417, 581, 582, 583, 656, 584, 657, 1418, 585,
	586, 587, 588, 0, 590, 591, 1419, 1420, 592, 593,
	594, 596, 597, 595, 598, 1421, 599, 1422, 0, 600,
	601, 602, 658, 659, 660, 1423, 604, 603, 605, 661,
	1424, 1425, 1426, 1427, 1428, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 3552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3554,
	268, 270, 269, 271, 272, 273, 274, 275, 1349, 276,
	277, 1350, 1351, 1352, 0, 1353, 611, 1354, 1355, 1356,
	1357, 278, 279, 1148, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 1358, 616, 288,
	289, 290, 291, 292, 293, 1359, 1360, 0, 294, 617,
	618, 619, 1361, 295, 296, 620, 1362, 1291, 1363, 297,
	298, 299, 300, 301, 302, 303, 0, 1364, 305, 306,
	307, 304, 308, 1365, 309, 0, 310, 311, 312, 313,
	314, 315, 1366, 316, 317, 318, 1149, 319, 320, 321,
	1367, 1368, 1370, 1369, 1371, 1372, 1373, 322, 323, 324,
	325, 0, 326, 621, 622, 1374, 330, 327, 328, 1375,
	331, 329, 332, 1376, 333, 334, 335, 1377, 1378, 336,
	337, 338, 1379, 339, 340, 1380, 341, 342, 343, 1381,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 1382, 265, 1383, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 1384, 362, 1385, 1386, 1150, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 1387,
	374, 629, 1388, 630, 375, 1389, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 1152, 381, 382, 1390, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 1391, 1151, 390, 634, 635, 1392, 636, 1393, 392,
	393, 1153, 637, 1154, 394, 395, 396, 1155, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 1394, 404,
	406, 405, 1395, 407, 638, 1156, 408, 409, 1157, 1396,
	410, 0, 0, 0, 411, 412, 415, 1397, 1398, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 1158, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 1159, 444, 1399, 267, 1160, 454, 455, 1400, 639,
	456, 640, 458, 459, 1401, 0, 460, 0, 1402, 1403,
	462, 463, 464, 1404, 1405, 465, 466, 641, 1161, 467,
	1162, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 1406, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 1407,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 1408, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 1409, 516, 517, 518,
	1163, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 1410,
	539, 540, 538, 541, 542, 543, 1411, 544, 545, 528,
	529, 546, 547, 1164, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 1412, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	1413, 570, 571, 0, 567, 558, 1414, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 1415, 580, 652, 653,
	654, 655, 1416, 589, 1417, 581, 582, 583, 656, 584,
	657, 1418, 585, 586, 587, 588, 0, 590, 591, 1419,
	1420, 592, 593, 594, 596, 597, 595, 598, 1421, 599,
	1422, 0, 600, 601, 602, 658, 659, 660, 1423, 604,
	603, 605, 661, 1424, 1425, 1426, 1427, 1428, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3932, 268, 270, 269,
	271, 272, 273, 274, 275, 1349, 276, 277, 1350, 1351,
	1352, 0, 1353, 611, 1354, 1355, 1356, 1357, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 1358, 616, 288, 289, 290, 291,
	292, 293, 1359, 1360, 0, 294, 617, 618, 619, 1361,
	295, 296, 620, 1362, 1291, 1363, 297, 298, 299, 300,
	301, 302, 303, 0, 1364, 305, 306, 307, 304, 308,
	1365, 309, 0, 310, 311, 312, 313, 314, 315, 1366,
	316, 317, 318, 1149, 319, 320, 321, 1367, 1368, 1370,
	1369, 1371, 1372, 1373, 322, 323, 324, 325, 0, 326,
	621, 622, 1374, 330, 327, 328, 1375, 331, 329, 332,
	1376, 333, 334, 335, 1377, 1378, 336, 337, 338, 1379,
	339, 340, 1380, 341, 342, 343, 1381, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 1382, 265, 1383, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 1384, 362,
	1385, 1386, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 1387, 374, 629, 1388,
	630, 375, 1389, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 1390, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 1391, 1151,
	390, 634, 635, 1392, 636, 1393, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 1394, 404, 406, 405, 1395,
	407, 638, 1156, 408, 409, 1157, 1396, 410, 0, 0,
	0, 411, 412, 415, 1397, 1398, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1399, 267, 1160, 454, 455, 1400, 639, 456, 640, 458,
	459, 1401, 0, 460, 0, 1402, 1403, 462, 463, 464,
	1404, 1405, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	1406, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 1407, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 1408, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 1409, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 1410, 539, 540, 538,
	541, 542, 543, 1411, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	1412, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 1413, 570, 571,
	0, 567, 558, 1414, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 1415, 580, 652, 653, 654, 655, 1416,
	589, 1417, 581, 582, 583, 656, 584, 657, 1418, 585,
	586, 587, 588, 0, 590, 591, 1419, 1420, 592, 593,
	594, 596, 597, 595, 598, 1421, 599, 1422, 0, 600,
	601, 602, 658, 659, 660, 1423, 604, 603, 605, 661,
	1424, 1425, 1426, 1427, 1428, 606, 607, 662, 608, 609,
	610, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4123, 268,
	270, 269, 271, 272, 273, 274, 275, 1349, 276, 277,
	1350, 1351, 1352, 0, 1353, 611, 1354, 1355, 1356, 1357,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 1358, 616, 288, 289,
	290, 291, 292, 293, 1359, 1360, 0, 294, 617, 618,
	619, 1361, 295, 296, 620, 1362, 1291, 1363, 297, 298,
	299, 300, 301, 302, 303, 0, 1364, 305, 306, 307,
	304, 308, 1365, 309, 0, 310, 311, 312, 313, 314,
	315, 1366, 316, 317, 318, 1149, 319, 320, 321, 1367,
	1368, 1370, 1369, 1371, 1372, 1373, 322, 323, 324, 325,
	0, 326, 621, 622, 1374, 330, 327, 328, 1375, 331,
	329, 332, 1376, 333, 334, 335, 1377, 1378, 336, 337,
	338, 1379, 339, 340, 1380, 341, 342, 343, 1381, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 1382, 265, 1383, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	1384, 362, 1385, 1386, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 1387, 374,
	629, 1388, 630, 375, 1389, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 1390, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	1391, 1151, 390, 634, 635, 1392, 636, 1393, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 1394, 404, 406,
	405, 1395, 407, 638, 1156, 408, 409, 1157, 1396, 410,
	0, 0, 0, 411, 412, 415, 1397, 1398, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1399, 267, 1160, 454, 455, 1400, 639, 456,
	640, 458, 459, 1401, 0, 460, 0, 1402, 1403, 462,
	463, 464, 1404, 1405, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 1406, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 1407, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 1408, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 1409, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 1410, 539,
	540, 538, 541, 542, 543, 1411, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 1412, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 1413,
	570, 571, 0, 567, 558, 1414, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 1415, 580, 652, 653, 654,
	655, 1416, 589, 1417, 581, 582, 583, 656, 584, 657,
	1418, 585, 586, 587, 588, 0, 590, 591, 1419, 1420,
	592, 593, 594, 596, 597, 595, 598, 1421, 599, 1422,
	0, 600, 601, 602, 658, 659, 660, 1423, 604, 603,
	605, 661, 1424, 1425, 1426, 1427, 1428, 606, 607, 662,
	608, 609, 610, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4007, 268, 270, 269, 271, 272, 273, 274, 275, 1349,
	276, 277, 1350, 1351, 1352, 0, 1353, 611, 1354, 1355,
	1356, 1357, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 1358, 616,
	288, 289, 290, 291, 292, 293, 1359, 1360, 0, 294,
	617, 618, 619, 1361, 295, 296, 620, 1362, 1291, 1363,
	297, 298, 299, 300, 301, 302, 303, 0, 1364, 305,
	306, 307, 304, 308, 1365, 309, 0, 310, 311, 312,
	313, 314, 315, 1366, 316, 317, 318, 1149, 319, 320,
	321, 1367, 1368, 1370, 1369, 1371, 1372, 1373, 322, 323,
	324, 325, 0, 326, 621, 622, 1374, 330, 327, 328,
	1375, 331, 329, 332, 1376, 333, 334, 335, 1377, 1378,
	336, 337, 338, 1379, 339, 340, 1380, 341, 342, 343,
	1381, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 1382, 265, 1383,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 1384, 362, 1385, 1386, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	1387, 374, 629, 1388, 630, 375, 1389, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 1390,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 1391, 1151, 390, 634, 635, 1392, 636, 1393,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 1394,
	404, 406, 405, 1395, 407, 638, 1156, 408, 409, 1157,
	1396, 410, 0, 0, 0, 411, 412, 415, 1397, 1398,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1399, 267, 1160, 454, 455, 1400,
	639, 456, 640, 458, 459, 1401, 0, 460, 0, 1402,
	1403, 462, 463, 464, 1404, 1405, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 1406, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	1407, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 1408, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 1409, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	1410, 539, 540, 538, 541, 542, 543, 1411, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 1412, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 1413, 570, 571, 0, 567, 558, 1414, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 1415, 580, 652,
	653, 654, 655, 1416, 589, 1417, 581, 582, 583, 656,
	584, 657, 1418, 585, 586, 587, 588, 0, 590, 591,
	1419, 1420, 592, 593, 594, 596, 597, 595, 598, 1421,
	599, 1422, 0, 600, 601, 602, 658, 659, 660, 1423,
	604, 603, 605, 661, 1424, 1425, 1426, 1427, 1428, 606,
	607, 662, 608, 609, 610, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3862, 268, 270, 269, 271, 272, 273, 274,
	275, 1349, 276, 277, 1350, 1351, 1352, 0, 1353, 611,
	1354, 1355, 1356, 1357, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	1358, 616, 288, 289, 290, 291, 292, 293, 1359, 1360,
	0, 294, 617, 618, 619, 1361, 295, 296, 620, 1362,
	1291, 1363, 297, 298, 299, 300, 301, 302, 303, 0,
	1364, 305, 306, 307, 304, 308, 1365, 309, 0, 310,
	311, 312, 313, 314, 315, 1366, 316, 317, 318, 1149,
	319, 320, 321, 1367, 1368, 1370, 1369, 1371, 1372, 1373,
	322, 323, 324, 325, 0, 326, 621, 622, 1374, 330,
	327, 328, 1375, 331, 329, 332, 1376, 333, 334, 335,
	1377, 1378, 336, 337, 338, 1379, 339, 340, 1380, 341,
	342, 343, 1381, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 1382,
	265, 1383, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 1384, 362, 1385, 1386, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 1387, 374, 629, 1388, 630, 375, 1389, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 1152, 381,
	382, 1390, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 1391, 1151, 390, 634, 635, 1392,
	636, 1393, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 1394, 404, 406, 405, 1395, 407, 638, 1156, 408,
	409, 1157, 1396, 410, 0, 0, 0, 411, 412, 415,
	1397, 1398, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1399, 267, 1160, 454,
	455, 1400, 639, 456, 640, 458, 459, 1401, 0, 460,
	0, 1402, 1403, 462, 463, 464, 1404, 1405, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 1406, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 1407, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 1408, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 1409,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 1410, 539, 540, 538, 541, 542, 543, 1411,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 1412, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 1413, 570, 571, 0, 567, 558, 1414,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 1415,
	580, 652, 653, 654, 655, 1416, 589, 1417, 581, 582,
	583, 656, 584, 657, 1418, 585, 586, 587, 588, 0,
	590, 591, 1419, 1420, 592, 593, 594, 596, 597, 595,
	598, 1421, 599, 1422, 0, 600, 601, 602, 658, 659,
	660, 1423, 604, 603, 605, 661, 1424, 1425, 1426, 1427,
	1428, 606, 607, 662, 608, 609, 610, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3570, 268, 270, 269, 271, 272,
	273, 274, 275, 1349, 276, 277, 1350, 1351, 1352, 0,
	1353, 611, 1354, 1355, 1356, 1357, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 1358, 616, 288, 289, 290, 291, 292, 293,
	1359, 1360, 0, 294, 617, 618, 619, 1361, 295, 296,
	620, 1362, 1291, 1363, 297, 298, 299, 300, 301, 302,
	303, 0, 1364, 305, 306, 307, 304, 308, 1365, 309,
	0, 310, 311, 312, 313, 314, 315, 1366, 316, 317,
	318, 1149, 319, 320, 321, 1367, 1368, 1370, 1369, 1371,
	1372, 1373, 322, 323, 324, 325, 0, 326, 621, 622,
	1374, 330, 327, 328, 1375, 331, 329, 332, 1376, 333,
	334, 335, 1377, 1378, 336, 337, 338, 1379, 339, 340,
	1380, 341, 342, 343, 1381, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 1382, 265, 1383, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 1384, 362, 1385, 1386,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 1387, 374, 629, 1388, 630, 375,
	1389, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	1152, 381, 382, 1390, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 1391, 1151, 390, 634,
	635, 1392, 636, 1393, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 1394, 404, 406, 405, 1395, 407, 638,
	1156, 408, 409, 1157, 1396, 410, 0, 0, 0, 411,
	412, 415, 1397, 1398, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1399, 267,
	1160, 454, 455, 1400, 639, 456, 640, 458, 459, 1401,
	0, 460, 0, 1402, 1403, 462, 463, 464, 1404, 1405,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 1406, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 1407, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	1408, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 1409, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 1410, 539, 540, 538, 541, 542,
	543, 1411, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 1412, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 1413, 570, 571, 0, 567,
	558, 1414, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 1415, 580, 652, 653, 654, 655, 1416, 589, 1417,
	581, 582, 583, 656, 584, 657, 1418, 585, 586, 587,
	588, 0, 590, 591, 1419, 1420, 592, 593, 594, 596,
	597, 595, 598, 1421, 599, 1422, 0, 600, 601, 602,
	658, 659, 660, 1423, 604, 603, 605, 661, 1424, 1425,
	1426, 1427, 1428, 606, 607, 662, 608, 609, 610, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3402, 268, 270, 269,
	271, 272, 273, 274, 275, 1349, 276, 277, 1350, 1351,
	1352, 0, 1353, 611, 1354, 1355, 1356, 1357, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 1358, 616, 288, 289, 290, 291,
	292, 293, 1359, 1360, 0, 294, 617, 618, 619, 1361,
	295, 296, 620, 1362, 1291, 1363, 297, 298, 299, 300,
	301, 302, 303, 0, 1364, 305, 306, 307, 304, 308,
	1365, 309, 0, 310, 311, 312, 313, 314, 315, 1366,
	316, 317, 318, 1149, 319, 320, 321, 1367, 1368, 1370,
	1369, 1371, 1372, 1373, 322, 323, 324, 325, 0, 326,
	621, 622, 1374, 330, 327, 328, 1375, 331, 329, 332,
	1376, 333, 334, 335, 1377, 1378, 336, 337, 338, 1379,
	339, 340, 1380, 341, 342, 343, 1381, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 1382, 265, 1383, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 1384, 362,
	1385, 1386, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 1387, 374, 629, 1388,
	630, 375, 1389, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 1390, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 1391, 1151,
	390, 634, 635, 1392, 636, 1393, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 1394, 404, 406, 405, 1395,
	407, 638, 1156, 408, 409, 1157, 1396, 410, 0, 0,
	0, 411, 412, 415, 1397, 1398, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1399, 267, 1160, 454, 455, 1400, 639, 456, 640, 458,
	459, 1401, 0, 460, 0, 1402, 1403, 462, 463, 464,
	1404, 1405, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	1406, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 1407, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 1408, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 1409, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 1410, 539, 540, 538,
	541, 542, 543, 1411, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	1412, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 1413, 570, 571,
	0, 567, 558, 1414, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 1415, 580, 652, 653, 654, 655, 1416,
	589, 1417, 581, 582, 583, 656, 584, 657, 1418, 585,
	586, 587, 588, 0, 590, 591, 1419, 1420, 592, 593,
	594, 596, 597, 595, 598, 1421, 599, 1422, 0, 600,
	601, 602, 658, 659, 660, 1423, 604, 603, 605, 661,
	1424, 1425, 1426, 1427, 1428, 606, 607, 662, 608, 609,
	610, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2463, 268,
	270, 269, 271, 272, 273, 274, 275, 1349, 276, 277,
	1350, 1351, 1352, 0, 1353, 611, 1354, 1355, 1356, 1357,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 1358, 616, 288, 289,
	290, 291, 292, 293, 1359, 1360, 0, 294, 617, 618,
	619, 1361, 295, 296, 620, 1362, 1291, 1363, 297, 298,
	299, 300, 301, 302, 303, 0, 1364, 305, 306, 307,
	304, 308, 1365, 309, 0, 310, 311, 312, 313, 314,
	315, 1366, 316, 317, 318, 1149, 319, 320, 321, 1367,
	1368, 1370, 1369, 1371, 1372, 1373, 322, 323, 324, 325,
	0, 326, 621, 622, 1374, 330, 327, 328, 1375, 331,
	329, 332, 1376, 333, 334, 335, 1377, 1378, 336, 337,
	338, 1379, 339, 340, 1380, 341, 342, 343, 1381, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 1382, 265, 1383, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	1384, 362, 1385, 1386, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 1387, 374,
	629, 1388, 630, 375, 1389, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 1390, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	1391, 1151, 390, 634, 635, 1392, 636, 1393, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 1394, 404, 406,
	405, 1395, 407, 638, 1156, 408, 409, 1157, 1396, 410,
	0, 0, 0, 411, 412, 415, 1397, 1398, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1399, 267, 1160, 454, 455, 1400, 639, 456,
	640, 458, 459, 1401, 0, 460, 0, 1402, 1403, 462,
	463, 464, 1404, 1405, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 1406, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 1407, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 1408, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 1409, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 1410, 539,
	540, 538, 541, 542, 543, 1411, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 1412, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 1413,
	570, 571, 0, 567, 558, 1414, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 1415, 580, 652, 653, 654,
	655, 1416, 589, 1417, 581, 582, 583, 656, 584, 657,
	1418, 585, 586, 587, 588, 0, 590, 591, 1419, 1420,
	592, 593, 594, 596, 597, 595, 598, 1421, 599, 1422,
	0, 600, 601, 602, 658, 659, 660, 1423, 604, 603,
	605, 661, 1424, 1425, 1426, 1427, 1428, 606, 607, 662,
	608, 609, 610, 1440, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2153, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	1349, 276, 277, 1350, 1351, 1352, 0, 1353, 611, 1354,
	1355, 1356, 1357, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 1358,
	616, 288, 289, 290, 291, 292, 293, 1359, 1360, 0,
	294, 617, 618, 619, 1361, 295, 296, 620, 1362, 1291,
	1363, 297, 298, 299, 300, 301, 302, 303, 0, 1364,
	305, 306, 307, 304, 308, 1365, 309, 0, 310, 311,
	312, 313, 314, 315, 1366, 316, 317, 318, 1149, 319,
	320, 321, 1367, 1368, 1370, 1369, 1371, 1372, 1373, 322,
	323, 324, 325, 0, 326, 621, 622, 1374, 330, 327,
	328, 1375, 331, 329, 332, 1376, 333, 334, 335, 1377,
	1378, 336, 337, 338, 1379, 339, 340, 1380, 341, 342,
	343, 1381, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 1382, 265,
	1383, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 1384, 362, 1385, 1386, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 1387, 374, 629, 1388, 630, 375, 1389, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	1390, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 1391, 1151, 390, 634, 635, 1392, 636,
	1393, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	1394, 404, 406, 405, 1395, 407, 638, 1156, 408, 409,
	1157, 1396, 410, 0, 0, 0, 411, 412, 415, 1397,
	1398, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 1399, 267, 1160, 454, 455,
	1400, 639, 456, 640, 458, 459, 1401, 0, 460, 0,
	1402, 1403, 462, 463, 464, 1404, 1405, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 1406, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 1407, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 1408, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 1409, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 1410, 539, 540, 538, 541, 542, 543, 1411, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 1412, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 1413, 570, 571, 0, 567, 558, 1414, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 1415, 580,
	652, 653, 654, 655, 1416, 589, 1417, 581, 582, 583,
	656, 584, 657, 1418, 585, 586, 587, 588, 0, 590,
	591, 1419, 1420, 592, 593, 594, 596, 597, 595, 598,
	1421, 599, 1422, 0, 600, 601, 602, 658, 659, 660,
	1423, 604, 603, 605, 661, 1424, 1425, 1426, 1427, 1428,
	606, 607, 662, 608, 609, 610, 1341, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 1349, 276, 277, 1350, 1351, 1352, 0,
	1353, 611, 1354, 1355, 1356, 1357, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 1358, 616, 288, 289, 290, 291, 292, 293,
	1359, 1360, 0, 294, 617, 618, 619, 1361, 295, 296,
	620, 1362, 1291, 1363, 297, 298, 299, 300, 301, 302,
	303, 0, 1364, 305, 306, 307, 304, 308, 1365, 309,
	0, 310, 311, 312, 313, 314, 315, 1366, 316, 317,
	318, 1149, 319, 320, 321, 1367, 1368, 1370, 1369, 1371,
	1372, 1373, 322, 323, 324, 325, 0, 326, 621, 622,
	1374, 330, 327, 328, 1375, 331, 329, 332, 1376, 333,
	334, 335, 1377, 1378, 336, 337, 338, 1379, 339, 340,
	1380, 341, 342, 343, 1381, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 1382, 265, 1383, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 1384, 362, 1385, 1386,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 1387, 374, 629, 1388, 630, 375,
	1389, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	1152, 381, 382, 1390, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 1391, 1151, 390, 634,
	635, 1392, 636, 1393, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 1394, 404, 406, 405, 1395, 407, 638,
	1156, 408, 409, 1157, 1396, 410, 0, 0, 0, 411,
	412, 415, 1397, 1398, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1399, 267,
	1160, 454, 455, 1400, 639, 456, 640, 458, 459, 1401,
	0, 460, 0, 1402, 1403, 462, 463, 464, 1404, 1405,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 1406, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 1407, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	1408, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 1409, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 1410, 539, 540, 538, 541, 542,
	543, 1411, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 1412, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 1413, 570, 571, 0, 567,
	558, 1414, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 1415, 580, 652, 653, 654, 655, 1416, 589, 1417,
	581, 582, 583, 656, 584, 657, 1418, 585, 586, 587,
	588, 0, 590, 591, 1419, 1420, 592, 593, 594, 596,
	597, 595, 598, 1421, 599, 1422, 0, 600, 601, 602,
	658, 659, 660, 1423, 604, 603, 605, 661, 1424, 1425,
	1426, 1427, 1428, 606, 607, 662, 608, 609, 610, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 1349, 276, 277, 1350, 1351, 1352,
	0, 1353, 611, 1354, 1355, 1356, 1357, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 1358, 616, 288, 289, 290, 291, 292,
	293, 1359, 1360, 0, 294, 617, 618, 619, 1361, 295,
	296, 620, 1362, 1291, 1363, 297, 298, 299, 300, 301,
	302, 303, 0, 1364, 305, 306, 307, 304, 308, 1365,
	309, 0, 310, 311, 312, 313, 314, 315, 1366, 316,
	317, 318, 1149, 319, 320, 321, 1367, 1368, 1370, 1369,
	1371, 1372, 1373, 322, 323, 324, 325, 0, 326, 621,
	622, 1374, 330, 327, 328, 1375, 331, 329, 332, 1376,
	333, 334, 335, 1377, 1378, 336, 337, 338, 1379, 339,
	340, 1380, 341, 342, 343, 1381, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 1382, 265, 1383, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 1384, 362, 1385,
	1386, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 1387, 374, 629, 1388, 630,
	375, 1389, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 1390, 383, 384, 385, 386, 0,
	0, 0, 266, 387, 388, 389, 391, 1391, 1151, 390,
	634, 635, 1392, 636, 1393, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 1394, 404, 406, 405, 1395, 407,
	638, 1156, 408, 409, 1157, 1396, 410, 0, 0, 0,
	411, 412, 415, 1397, 1398, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 1399,
	267, 1160, 454, 455, 1400, 639, 456, 640, 458, 459,
	1401, 0, 460, 0, 1402, 1403, 462, 463, 464, 1404,
	1405, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 1406,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 1407, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 1408, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 1409, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 1410, 539, 540, 538, 541,
	542, 543, 1411, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 1412,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 1413, 570, 571, 0,
	567, 558, 1414, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 1415, 580, 652, 653, 654, 655, 1416, 589,
	1417, 581, 582, 583, 656, 584, 657, 1418, 585, 586,
	587, 588, 0, 590, 591, 1419, 1420, 592, 593, 594,
	596, 597, 595, 598, 1421, 599, 1422, 0, 600, 601,
	602, 658, 659, 660, 1423, 604, 603, 605, 661, 1424,
	1425, 1426, 1427, 1428, 606, 607, 662, 608, 609, 610,
	2438, 0, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 2435, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 2436, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 2434, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	2437, 0, 0, 0, 0, 0, 0, 1068, 2433, 0,
	1030, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 227, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 229, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 1558, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 221, 606, 607, 662,
	608, 609, 610, 1043, 0, 222, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1802, 1800, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 227, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 229, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 1558, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 221, 606, 607, 662, 608, 609,
	610, 1043, 0, 222, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1802, 3041, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 227, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 229, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	1558, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 221, 606, 607, 662, 608, 609, 610, 1043,
	0, 222, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1802, 1800, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	2566, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 2571, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 2567, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 2568, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 2483, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 2481, 0, 2480, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 2478, 0, 2477, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 2475, 0, 2474, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 2472, 0, 1651, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 1650, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 0, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 1033, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 1047, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 4440, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 1047,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 2352, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 2351, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 1047, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 4200, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 1047, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 3824, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1870, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 0, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 3548, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1870, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 0, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 2571, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 1800, 0,
	2576, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	2574, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	2562, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	2551, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	2549, 1066, 2540, 2547, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 2543, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 2544, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 2545,
	425, 2542, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 2546, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 2541, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	2537, 1066, 2540, 2547, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 2543, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 2544, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 2545,
	425, 2542, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 2546, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 2541, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 1808, 0, 1068, 0, 0, 0, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 2331, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1656, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1588, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1583, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1574, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1569, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1482, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1481, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1476, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1475, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1469, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 1293, 1066,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 4485, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	4484, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 4483, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	4485, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 4484, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 4142, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 4143, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 4141, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 3008, 3009, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 3006, 3007, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 2339, 2340, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 0, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 2559, 0, 0, 0, 0, 0, 0,
	2557, 2558, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 0, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 0, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 3001, 3002, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2048, 2049,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 0, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 4485, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 0, 1111,
	0, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 0, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 4484, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 1206, 0, 0, 1037, 1038, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 0, 1066,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1108, 0, 0, 0,
	0, 278, 279, 1148, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 1107, 0, 294, 617,
	618, 619, 0, 295, 296, 1114, 0, 1095, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1149, 319, 320, 321,
	1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 1139, 1140, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 1150, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 1146, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 1109, 1110, 1113, 457, 1152, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 1151, 390, 634, 635, 0, 636, 0, 392,
	393, 1153, 1111, 1154, 394, 395, 396, 1155, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 1192, 404,
	406, 405, 0, 407, 1147, 1156, 408, 409, 1157, 0,
	410, 0, 0, 0, 411, 412, 415, 1102, 1101, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 1158, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 1159, 444, 0, 267, 1160, 454, 455, 0, 1112,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 1198,
	462, 463, 464, 0, 0, 465, 466, 641, 1161, 467,
	1162, 1141, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 1142, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	1163, 519, 520, 521, 522, 648, 1200, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 227,
	539, 540, 538, 541, 542, 543, 1105, 544, 545, 528,
	529, 546, 547, 1164, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 1143, 568, 569,
	0, 570, 571, 0, 567, 558, 229, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 1144, 584,
	1145, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 1106, 599,
	0, 0, 600, 601, 602, 1558, 659, 660, 0, 604,
	603, 605, 661, 0, 1206, 0, 0, 221, 606, 607,
	662, 608, 609, 610, 0, 0, 222, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 1196, 1108, 1894, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 1107, 0, 294,
	617, 618, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 1192,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 267, 1160, 454, 455, 0,
	1112, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	1198, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 1200, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	227, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 0, 567, 558, 229, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 1558, 659, 660, 0,
	604, 603, 605, 661, 0, 3185, 0, 1206, 221, 606,
	607, 662, 608, 609, 610, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 1196, 0, 1894,
	1108, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	1107, 0, 294, 617, 618, 619, 0, 295, 296, 1114,
	0, 1095, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099,
	1103, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 1139, 1140, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 1146, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 1109, 1110, 1113, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 1111, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 1192, 404, 406, 405, 0, 407, 1147, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 1102, 1101, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 267, 1160,
	454, 455, 0, 1112, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 1198, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 1141, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 1142, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	1200, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	1105, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 1143, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 1144, 584, 1145, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 1106, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 0, 1188, 0,
	1206, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	1196, 0, 1194, 1108, 0, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 1107, 0, 294, 617, 618, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 634, 635, 0, 636, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 1192, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	0, 267, 1160, 454, 455, 0, 1112, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 1198, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 1200, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	0, 1206, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 1196, 1108, 1194, 0, 0, 0, 278,
	279, 1148, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 1107, 0, 294, 617, 618, 619,
	0, 295, 296, 1114, 0, 1095, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1149, 319, 320, 321, 1098, 1096,
	1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 1139, 1140, 357, 0, 265, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 1150, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 1146,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 1109,
	1110, 1113, 457, 1152, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 266, 387, 388, 389, 391, 0,
	1151, 390, 634, 635, 0, 636, 0, 392, 393, 1153,
	1111, 1154, 394, 395, 396, 1155, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 1192, 404, 406, 405,
	0, 407, 1147, 1156, 408, 409, 1157, 0, 410, 0,
	0, 0, 411, 412, 415, 1102, 1101, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 1158, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 1159,
	444, 0, 267, 1160, 454, 455, 0, 1112, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 1198, 462, 463,
	464, 0, 0, 465, 466, 641, 1161, 467, 1162, 1141,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 1142, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 1163, 519,
	520, 521, 522, 648, 1200, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 1105, 544, 545, 528, 529, 546,
	547, 1164, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 1143, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 1144, 584, 1145, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 1106, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 0, 1206, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 1196, 1108, 1194, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 1107, 0, 294, 617, 618,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 634, 635, 0, 636, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 0, 267, 1160, 454, 455, 0, 1112, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1206, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 0, 3982, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 1107, 0, 294, 617, 618,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 634, 635, 0, 636, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 0, 267, 1160, 454, 455, 0, 1112, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 1200, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 0, 1030, 0, 1286, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 1793, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 227, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 229, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 1558, 659, 660,
	0, 604, 603, 605, 661, 0, 1555, 0, 1286, 221,
	606, 607, 662, 608, 609, 610, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	183, 611, 0, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 1291, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 1151, 390, 634,
	635, 0, 636, 0, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 0, 0,
	1160, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 227, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 229, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	1558, 659, 660, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 221, 606, 607, 662, 608, 609, 610, 0,
	0, 222, 0, 0, 0, 0, 0, 1286, 1285, 0,
	0, 0, 0, 1283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 1286, 1285, 0, 0,
	0, 0, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1580, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	1291, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 1151, 390, 634, 635, 0,
	636, 0, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 0, 1160, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 1286, 1285, 0, 0, 0,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3467, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 2230, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 1286, 2145, 0, 0, 0, 0,
	2146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1580, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 1291, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	2144, 406, 405, 0, 407, 638, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 0, 1160, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 1286, 1285, 0, 0, 0, 0, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1580,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 1148, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 1291, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1149, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 1150, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 1152, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 1151, 390, 634, 635, 0, 636, 0, 392,
	393, 1153, 637, 1154, 394, 395, 396, 1155, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 1156, 408, 409, 1157, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 1158, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 1159, 444, 0, 0, 1160, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 1161, 467,
	1162, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	1163, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 1164, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 1206, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1108, 0, 1564, 0,
	0, 278, 279, 1148, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 1107, 0, 294, 617,
	618, 619, 0, 295, 296, 1114, 0, 1095, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1149, 319, 320, 321,
	1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 1139, 1140, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 1150, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 1146, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 1109, 1110, 1113, 457, 1152, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 1151, 390, 634, 635, 0, 636, 0, 392,
	393, 1153, 1111, 1154, 394, 395, 396, 1155, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 1147, 1156, 408, 409, 1157, 0,
	410, 0, 0, 0, 411, 412, 415, 1102, 1101, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 1158, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 1159, 444, 0, 267, 1160, 454, 455, 0, 1112,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 1161, 467,
	1162, 1141, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 1142, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	1163, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 1105, 544, 545, 528,
	529, 546, 547, 1164, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 1143, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 1144, 584,
	1145, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 1106, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 1030, 0, 262, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 227, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 229, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 1558, 659, 660,
	0, 604, 603, 605, 661, 262, 0, 0, 0, 221,
	606, 607, 662, 608, 609, 610, 0, 0, 222, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	183, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 262, 2915, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	1908, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	4641, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	0, 262, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 3418, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 265, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 266, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 267, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 0, 262, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 1552, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 262, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 2903, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 0, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 0, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 3573, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 0, 873, 0, 781, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 2221, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 788, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 871, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 786, 572,
	573, 574, 575, 576, 787, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 0, 779, 0, 781, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 791, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 788, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 786, 572, 573, 574, 575, 576, 787, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 1945, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 791, 0, 0, 0,
	0, 278, 279, 1148, 280, 281, 282, 283, 284, 285,
	0, 1951, 0, 286, 1941, 287, 1957, 0, 1964, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 1967,
	1968, 0, 0, 295, 296, 0, 0, 1291, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1149, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 1131, 326, 1955, 1954, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	1116, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 0, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 1953, 0, 0, 0,
	361, 0, 362, 0, 0, 1150, 363, 364, 1962, 1963,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 0, 376, 377, 378, 379,
	380, 0, 0, 0, 457, 1152, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 1151, 390, 1948, 1949, 0, 1944, 0, 392,
	393, 1153, 0, 1154, 394, 395, 396, 1155, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 0, 1156, 408, 409, 1157, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 1158, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 1159, 444, 0, 0, 1160, 454, 455, 0, 0,
	456, 1956, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 0, 1161, 467,
	1162, 0, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 1938, 480, 481, 482,
	1939, 483, 484, 485, 0, 486, 0, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1952, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	1163, 519, 520, 521, 522, 0, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 1164, 548, 549, 550, 551, 552, 553,
	1950, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 1966, 561, 562, 563, 564, 565, 0, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 1958, 1959,
	1960, 1961, 0, 589, 0, 581, 582, 583, 0, 584,
	0, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 0, 1942, 1965, 0, 604,
	603, 605, 781, 0, 0, 0, 0, 0, 606, 607,
	0, 608, 609, 610, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 1932, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 788, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 786, 572, 573, 574, 575,
	576, 787, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 781, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	791, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 788, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	2264, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 2265, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 786, 572, 573, 574, 575,
	576, 787, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 2266, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 0, 2014, 0, 1286, 1981, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	791, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 1978, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 1979, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 1975, 0, 1286, 1981, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	1978, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	1979, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 781, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 788, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 1971, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 786, 572, 573, 574, 575,
	576, 787, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 1970, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 781, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	791, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 788, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 1924, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 786, 572, 573, 574, 575,
	576, 787, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 1923, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1286, 1981, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	791, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 1291, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 1978, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 1151, 390, 634, 635, 0, 636, 0, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 0, 0, 1160, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1979, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1286, 1285, 0, 0, 0, 0, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 1148, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 1291, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1149, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 1150, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 1152, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 1151, 390, 634, 635, 0, 636, 0, 392,
	393, 1153, 637, 1154, 394, 395, 396, 1155, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 1156, 408, 409, 1157, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 1158, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 1159, 444, 0, 0, 1160, 454, 455, 3767, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 1161, 467,
	1162, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	1163, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 1164, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 1286, 1285, 0, 0, 0, 0,
	1283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 1291, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 0, 1160, 454, 455, 3389,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 262,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 266, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	267, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	1608, 0, 1286, 1285, 0, 0, 0, 0, 1283, 0,
	0, 0, 0, 0, 0, 0, 0, 791, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 1291, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 1607, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 1151, 390, 634, 635, 0, 636, 0, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 0, 0, 1160, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 1606, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 1605, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1526, 0, 1286, 1285, 0, 0, 0,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 1525, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 1487, 0, 1286, 1285,
	0, 0, 0, 0, 1283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 1291, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 1151, 390, 634,
	635, 0, 636, 0, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 0, 0,
	1160, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1455,
	0, 1286, 1285, 0, 0, 0, 0, 1283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 1148, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 1291, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1149, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 265, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 1150, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 1454,
	632, 633, 457, 1152, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	1151, 390, 634, 635, 0, 636, 0, 392, 393, 1153,
	637, 1154, 394, 395, 396, 1155, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 1156, 408, 409, 1157, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 1158, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 1159,
	444, 0, 0, 1160, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 1161, 467, 1162, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 1163, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 1164, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 1280, 0, 1286, 1285, 0, 0, 0, 0,
	1283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 1291, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1279, 632, 633, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 0, 1160, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1286, 1285, 0, 0, 0,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 1286, 1981, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 2021, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 1286, 1285, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	1286, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 1291, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 1151,
	390, 634, 635, 0, 636, 0, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	0, 0, 1160, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 2726, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 2723, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 2730, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 2928,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 2729, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 2925, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 2927, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	2924, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 2728, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 2926, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 2726,
	295, 296, 620, 0, 0, 2720, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	2723, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 2730, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	2729, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 2719, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 2728, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 2727, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1679, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 1678, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 1682,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 1680, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 1681, 603,
	605, 661, 1433, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1435, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	1198, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1430, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1432, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 1198, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1337, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1339, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 1198, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 694, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 693, 273, 274, 275, 683, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 686,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 687, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 688, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	682, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 683, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 686, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 687, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 688, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 262, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 267, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 1198, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	3341, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 2873, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 2872, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 2236, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 265, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 266, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 267, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 2178, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 2184, 0, 262, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 2183, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 267, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 2171, 0, 262, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 2173, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 2141, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 1198, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1530, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1529, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1450, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1443, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1445, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1270, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1269, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 1260, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1259, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1257, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1256, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1252, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1251, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 664, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 253, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 267, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 3693, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 3694, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 3696, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	3697, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 3692, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 686, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 687,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 688,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 2273, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 2271,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 267, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 2269, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 2190, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 267, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 2000, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 1994, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 267, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 860, 0, 262, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	859, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 858, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 2928, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 4047, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 3952, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 3954, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 751, 0, 262, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1307, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 1305, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 0, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 752, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 0, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 748, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 1308, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 747, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 751, 0, 262,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1307,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 1305, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 0, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 752, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	0, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	748, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	1308, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 747, 653, 654, 655, 0, 589,
	0, 581, 1306, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 673,
	0, 262, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 672, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 671, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 262, 2915, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 262, 4057, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 4316, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 4311, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 3735, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 2611, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 262, 2915, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	2912, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 2246, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 2234, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 751, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 741, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 752, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 748, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 1563, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 747, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1536, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1535, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1520, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1518, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1514, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1491, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1489, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 1452, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1438, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1275, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1274, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1266, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1265, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 1219, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 757, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 751, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 741,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 739,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	740, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 752, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	742, 523, 0, 524, 525, 531, 532, 526, 527, 748,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 743,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 747, 653, 654, 655, 0, 589, 0,
	581, 745, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 733, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 734, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	696, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 690, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 668, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 3437, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 3375,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 3308, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 3306,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 3291, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 2883,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 734, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 2208, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 0, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1237, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	1171, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 262, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 0, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	0, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	0, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 0,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1727, 1728, 0,
	1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1758, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 0, 1727, 1728, 1776, 1760, 1761,
	1762, 1770, 1771, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1758,
	0, 0, 0, 1729, 1727, 1728, 1730, 1760, 1761, 1762,
	1770, 1771, 1772, 1749, 0, 1776, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 1763, 1758, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 1729, 1727, 1728, 1776, 1760, 1761, 1762, 1770, 1771,
	1772, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 1763, 1758, 0, 0, 0,
	1729, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	1749, 0, 1776, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 1735, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 1752, 1753, 1754, 1755, 0, 0,
	0, 0, 1767, 0, 1735, 1777, 0, 0, 0, 0,
	0, 1757, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 1753, 1754, 1755, 0, 1773, 0,
	1774, 0, 0, 1735, 0, 0, 0, 1744, 1745, 0,
	1767, 0, 0, 1777, 0, 0, 0, 0, 0, 1757,
	1759, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 1752, 1753, 1754, 1755, 0, 1773, 0, 1774, 1767,
	1750, 1735, 1777, 0, 0, 1744, 1745, 0, 1757, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 1773, 0, 1774, 0, 0,
	0, 0, 0, 0, 1744, 1745, 0, 1767, 1750, 0,
	1777, 0, 1775, 0, 0, 0, 1757, 1759, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 1773, 0, 1774, 0, 1750, 0, 0,
	0, 0, 1744, 1745, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 1764, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 1768, 1741, 1742, 1748, 1769,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	2440, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 0, 0, 0, 4415, 0, 0, 0, 1766, 0,
	0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0,
	1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0,
	0, 0, 0, 4337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740, 1738,
	1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0, 1727,
	1728, 4297, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 1758, 0, 0, 0, 0, 1727, 1728,
	1730, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 1758, 0, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 1729, 1727, 1728, 1776, 1760,
	1761, 1762, 1770, 1771, 1772, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 1763,
	1758, 0, 0, 0, 1729, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 1749, 0, 1776, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 1777, 0, 0,
	0, 0, 0, 1757, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 1753, 1754, 1755, 0,
	1773, 0, 1774, 1767, 0, 1735, 1777, 0, 0, 1744,
	1745, 0, 1757, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 1773,
	0, 1774, 0, 0, 0, 0, 0, 0, 1744, 1745,
	0, 1767, 1750, 0, 1777, 0, 0, 0, 0, 0,
	1757, 1759, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 1774,
	0, 1750, 0, 0, 0, 0, 1744, 1745, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 1727, 1728,
	0, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 1763, 1758, 0, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 1741, 1742,
	1748, 1769, 1747, 1743, 1729, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 1749, 0, 0, 0, 4296, 0,
	0, 0, 1766, 1746, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 4126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747,
	1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736,
	1737, 0, 0, 0, 0, 3978, 0, 0, 1727, 1728,
	0, 1760, 1761, 1762, 1770, 1771, 1772, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 1763, 1758, 0, 0, 0, 0, 1727, 1728, 1730,
	1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1758, 0, 1767, 0, 0, 1777, 0, 1730, 0,
	0, 0, 1757, 1759, 1729, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 1773,
	0, 1774, 0, 1746, 0, 0, 0, 0, 1744, 1745,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 0, 0, 1765, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 1775, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 1777, 0, 0, 0,
	0, 0, 1757, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 1774, 1767, 0, 0, 1777, 0, 0, 1744, 1745,
	0, 1757, 1759, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 1773, 0,
	1774, 0, 0, 0, 0, 1751, 0, 1744, 1745, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 1756, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 1751, 0, 3909, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 1727, 1728, 1751, 1760, 1761, 1762, 1770, 1771,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1758, 0, 0, 0,
	1768, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 3908, 0, 0,
	0, 1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 0, 0, 3907, 0, 0, 0,
	0, 1752, 1753, 1754, 1755, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 1758, 0, 0, 1767, 0, 0,
	1777, 1730, 0, 0, 0, 0, 1757, 1759, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 1774, 0, 0, 0, 0,
	0, 0, 1744, 1745, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 0, 0, 0,
	1765, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 1752,
	1753, 1754, 1755, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 1728, 0, 1760,
	1761, 1762, 1770, 1771, 1772, 1767, 0, 0, 1777, 0,
	0, 0, 0, 0, 1757, 1759, 0, 0, 1756, 1763,
	1758, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 1773, 0, 1774, 0, 0, 1776, 0, 0, 1751,
	1744, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 1729, 1727, 1728, 1768, 1760, 1761, 1762, 1770,
	1771, 1772, 1749, 1750, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 1763, 1758, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 1752, 1753, 1754, 1755, 0,
	0, 0, 0, 0, 0, 1735, 1766, 0, 0, 0,
	0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740, 1738,
	1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0, 0,
	0, 3578, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 1767, 0, 0, 1777, 0, 0, 0, 0, 0,
	1757, 1759, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 1752, 1753, 1754, 1755, 0, 1773, 0, 1774,
	0, 0, 1735, 0, 0, 0, 1744, 1745, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 1727, 1728, 0,
	1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 1767, 1750,
	0, 1777, 0, 0, 0, 0, 0, 1757, 1759, 0,
	1763, 1758, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 1773, 0, 1774, 1776, 0, 0,
	0, 0, 0, 1744, 1745, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 1729, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 1749, 0, 0, 1750, 0, 0, 0,
	0, 0, 1746, 0, 1766, 0, 0, 0, 0, 1741,
	1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 0, 0, 0, 0, 3081,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 1728, 1768,
	1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	1763, 1758, 1767, 0, 0, 1777, 0, 0, 1730, 0,
	0, 1757, 1759, 0, 0, 0, 0, 1776, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	1774, 0, 0, 0, 0, 0, 0, 1744, 1745, 0,
	0, 0, 0, 1729, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 1749, 0, 1765, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747,
	1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736,
	1737, 0, 0, 0, 0, 3080, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 0, 0, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 1735, 1766, 0, 0,
	0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740,
	1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0,
	0, 0, 3079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 1777, 0, 0, 0, 0,
	0, 1757, 1759, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	1774, 0, 0, 0, 1751, 0, 0, 1744, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 1727, 1728,
	1768, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 1758, 0, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 0, 0, 3078, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 4555, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1727, 1728,
	1768, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 1758, 1767, 0, 0, 1777, 0, 0, 1730,
	0, 0, 1757, 1759, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 1774, 0, 0, 0, 0, 0, 0, 1744, 1745,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 1765, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 3045, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 1752, 1753, 1754,
	1755, 0, 0, 0, 0, 0, 0, 1735, 0, 3165,
	0, 0, 3164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4554, 0, 0, 0, 1727, 1728, 0,
	1760, 1761, 1762, 1770, 1771, 1772, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 1777, 0, 0, 0,
	1763, 1758, 1757, 1759, 1756, 0, 3016, 0, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 1773,
	0, 1774, 0, 0, 0, 1751, 0, 0, 1744, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 0, 0, 1765, 0, 0, 0,
	0, 1768, 0, 1749, 0, 0, 0, 0, 0, 0,
	0, 1750, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3017, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 1756, 1777, 0, 0, 0, 0,
	0, 1757, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 1773, 0,
	1774, 0, 0, 0, 0, 0, 0, 1744, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2584,
	0, 1768, 0, 0, 0, 1765, 1727, 1728, 0, 1760,
	1761, 1762, 1770, 1771, 1772, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	1758, 0, 0, 0, 2583, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 1741, 1742, 1748,
	1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733,
	1734, 1736, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 1752, 1753, 1754, 1755, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 1727, 1728, 0, 1760, 1761, 1762, 1770,
	1771, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 1777, 0, 1763, 1758, 0, 0,
	1757, 1759, 0, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 1773, 0, 1774,
	0, 0, 0, 0, 0, 0, 1744, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769,
	1747, 1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734,
	1736, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 1753, 1754, 1755, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 1728, 0, 1760, 1761, 1762, 1770, 1771,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1758, 0, 1767, 0,
	0, 1777, 1756, 1730, 0, 0, 0, 1757, 1759, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 1773, 0, 1774, 0, 0, 0,
	0, 0, 0, 1744, 1745, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 1768,
	0, 1765, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 1027, 0, 0,
	0, 1752, 1753, 1754, 1755, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747,
	1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736,
	1737, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	1777, 0, 0, 0, 0, 0, 1757, 1759, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 1774, 0, 0, 0, 0,
	1751, 0, 1744, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 1727, 1728, 1768, 1760, 1761, 1762,
	1770, 1771, 1772, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1758, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740,
	1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 1752, 1753, 1754, 1755, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 3171, 0,
	0, 0, 0, 1727, 1728, 1768, 1760, 1761, 1762, 1770,
	1771, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 1758, 0, 1767,
	0, 3166, 1777, 0, 1730, 0, 0, 0, 1757, 1759,
	0, 0, 0, 1776, 0, 0, 0, 0, 3559, 0,
	0, 0, 0, 0, 0, 1773, 0, 1774, 0, 0,
	0, 0, 0, 0, 1744, 1745, 0, 0, 0, 1729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	0, 0, 1765, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740, 1738,
	1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 1752, 1753, 1754, 1755, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 1777, 0, 1763, 1758, 0, 0, 1757, 1759, 0,
	1756, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 1773, 0, 1774, 0, 0, 0,
	0, 1751, 0, 1744, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 1749, 1768, 0, 0,
	0, 0, 0, 0, 0, 1746, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	1753, 1754, 1755, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0,
	1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 1777, 1756,
	0, 0, 0, 0, 1757, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 1773, 0, 1774, 0, 0, 0, 0, 0, 0,
	1744, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 1765, 1727,
	1728, 0, 1760, 1761, 1762, 1770, 1771, 1772, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 1758, 0, 0, 0, 3082, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1729, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 3133, 0, 0, 0, 1766, 0, 0,
	0, 0, 1741, 1742, 1748, 1769, 1747, 1743, 0, 1740,
	1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 1752, 1753,
	1754, 1755, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 1727, 1728, 0, 1760,
	1761, 1762, 1770, 1771, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 1777, 0, 1763,
	1758, 0, 0, 1757, 1759, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	1773, 0, 1774, 0, 0, 0, 0, 0, 0, 1744,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 1741,
	1742, 1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731,
	1732, 1733, 1734, 1736, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 1753, 1754, 1755, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1727, 1728, 0, 1760, 1761,
	1762, 1770, 1771, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 1767, 0, 0, 1777, 1756, 1730, 0, 0, 0,
	1757, 1759, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 1773, 0, 1774,
	0, 0, 0, 0, 0, 0, 1744, 1745, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1768, 0, 1765, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 1752, 1753, 1754, 1755, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 1741, 1742,
	1748, 1769, 1747, 1743, 0, 1740, 1738, 1739, 1731, 1732,
	1733, 1734, 1736, 1737, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 1777, 918, 0, 964, 0, 0, 1757,
	1759, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 926, 0, 1751, 0, 1744, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 940, 0, 924,
	923, 0, 0, 1765, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 925, 0, 0,
	0, 0, 928, 0, 0, 0, 0, 972, 0, 0,
	0, 0, 0, 0, 0, 0, 937, 938, 0, 0,
	0, 0, 0, 0, 0, 954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 965, 930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	931, 0, 0, 0, 0, 0, 0, 0, 0, 963,
	1766, 0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747,
	1743, 0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	0, 922, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 934,
	935, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 942, 941,
	0, 0, 0, 0, 0, 0, 936, 0, 0, 0,
	951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 969, 962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 1741, 1742, 1748, 1769, 1747, 1743,
	0, 1740, 1738, 1739, 1731, 1732, 1733, 1734, 1736, 1737,
	0, 929, 0, 0, 971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 927, 0, 0, 0,
	958, 959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 956, 0, 0, 0, 0,
	0, 0, 970, 952, 0, 945, 943, 0, 948, 0,
	0, 0, 0, 0, 949, 0, 0, 920, 0, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 960, 0, 950, 0, 0, 0, 0, 0,
	947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 968, 0, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 0, 0, 932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 957,
}

var sqlPact = [...]int{
	7557, -1000, -1000, -1000, -1000, 178, -1000, -1000, 177, 176,
	175, 173, 170, 169, 168, 166, 165, 164, 162, -1000,
	-1000, -1000, -1000, -1000, -1000, 161, -1000, -1000, 159, -1000,
	157, 156, 155, -1000, -1000, 154, -1000, 153, -1000, -1000,
	-1000, -1000, 151, 149, 148, 88314, 87772, 88849, 2263, 109862,
	96367, 2001, 79128, 109320, 78586, 108778, 2134, 11436, 108236, 2700,
	142, -1000, 107694, 141, 139, 138, -1000, 107152, -1000, 1746,
	-1000, 137, 4479, 63924, 134, 132, 130, 2528, 129, -1000,
	128, 127, 126, -1000, 12230, 1463, -1000, 125, 122, -1000,
	8887, 93671, 116, 114, 2232, 113, 112, 63381, 109, 107,
	2226, 2882, -1000, -1000, 1909, -1000, -1000, 103, 102, 101,
	100, 98, 96, 95, 94, 93, 90, 88, -1000, 80,
	79, 78, 77, 76, -1000, 75, 73, 72, -1000, 71,
	-1000, 70, 69, 68, 63, 61, 60, 59, 58, 57,
	55, 51, 49, 47, -1000, 122122, -1000, 1882, 1643, 1639,
	1637, 1632, 1624, 948, 35, 33, 32, 30, 29, 27,
	26, 25, 24, -1000, 23, 20, 19, 18, 17, 11,
	7, 4, 143, 3, 2, -1, -2, -3, -4, -7,
	2241, -1000, 1494, 1080, 29632, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 115747, 110397, -8, -106, -9, -1000, 3254, 1000, 52486,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 254, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 473, 2054, 748, -1000, -1000,
	-1000, 106617, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2261, -70, -1000, 1945, -1000, -1000, -1000, -1000, -1000, 745,
	-1000, 2257, 242, 2208, -1000, -1000, -1000, 3272, 2397, 3701,
	3699, 3698, 3696, 3695, 115212, 1754, 3694, 2490, 3693, 3692,
	3691, 3690, 3689, 3688, 3687, -1000, 87230, 1003, 86688, 86146,
	3295, 106082, 85604, 105540, 72640, 44616, 1054, 3267, -1000, -1000,
	-1000, -1000, -1000, -1000, 110397, -1000, 1002, -1000, -1000, 3686,
	3685, 1944, 742, 95825, -1000, 1653, -1000, 889, 31336, -1000,
	1286, -1000, 31336, 247, -1000, -1000, -1000, -1000, -1000, -1000,
	3683, 3682, 3681, 3680, 3679, -1000, -1000, 78044, 22764, 77502,
	76960, 104998, 22211, 85062, 84520, 104456, 72087, 998, 1384, -1000,
	-1000, -1000, -1000, -1000, -1000, -34, 69875, 3494, 110397, -1000,
	240, -1000, -1000, -1000, -1000, -1000, -1000, 44036, 759, 43456,
	743, 42876, 684, -1000, -1000, -1000, -1000, 71534, -1000, 103914,
	2395, 3677, 3676, 1100, 3674, 3169, 1728, 3673, 1790, 1184,
	3672, 3671, 3670, 3669, 3668, 3665, 3664, 1382, 103372, 2926,
	102830, 1594, 70981, 997, 83978, 88849, 2680, 102288, 1360, 1323,
	-1000, -1000, -1000, -1000, 3046, 2852, 2842, 1317, -1000, -1000,
	-1000, -1000, 55194, 9778, 9081, 11264, 101746, 57989, 88849, 88849,
	-1000, -1000, -1000, -1000, -1000, 42296, 732, 41716, 996, -1000,
	-1000, 55753, 2892, -1000, -1000, -1000, -1000, 41136, 666, 40556,
	905, 110397, -1000, 2925, 1866, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2075, 1598, 3499, 2732, 70428, 1962, 1351, 3237, 3029, 3028,
	1491, 3015, 3662, 2559, 3012, 3007, 3006, 3002, 2997, 1701,
	2549, 519, 29052, 2917, 1595, 39976, 1454, 1488, 2995, 2991,
	3520, 1936, 1919, 2200, 76418, 3661, 3660, 3206, 2990, 2986,
	2767, 2985, -1000, 2891, -1000, -1000, -1000, -1000, 1461, -1000,
	-1000, -1000, -1000, 79663, -1000, -1000, 1314, -1000, -1000, 1314,
	-1000, -1000, -1000, -1000, -1000, 1224, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1494, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2190, -1000,
	1932, -1000, -1000, 2547, 3217, 3217, 3217, 3264, 450, 449,
	-1000, 143, -1000, -1000, 121725, -1000, -1000, 45184, 45184, 45184,
	45184, 45184, 45184, 45184, 2130, -1000, 739, -1000, -1000, 782,
	-1000, 736, 600, -1000, -1000, -1000, -1000, -1000, -1000, 734,
	-1000, -1000, -1000, -1000, -1000, -1000, 3494, -1000, 25584, -1000,
	-1000, -1000, 428, 733, 45184, -1000, -1000, 3539, 3536, 985,
	-1000, 238, 942, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2923, 727, 726, -1000, 723,
	722, 715, 714, 713, -1000, -1000, -1000, 709, 706, 704,
	698, 694, 693, 692, 691, -1000, 2040, -1000, -1000, -1000,
	-1000, -1000, -1000, 633, 632, 632, 632, -1000, 990, -1000,
	-1000, -1000, 270, 630, 267, 629, 628, 627, -1000, 687,
	686, 683, 680, 673, 670, 669, 668, 664, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 988, -1000, -1000, -1000, -1000,
	-35, 110397, -1000, 473, -35, -1000, -1000, 661, -1000, 33620,
	33620, 33620, -1000, -1000, 2256, 45184, -1000, 2786, -1000, -28,
	-28, 859, 54108, -1000, 51400, 859, 369, 790, 59611, -1000,
	2890, -1000, -1000, 659, 233, -1000, -1000, -1000, -1000, 23315,
	2889, 110397, 110397, 88849, 88849, 88849, 3105, 45184, -1000, -1000,
	67698, 110397, 89919, -1000, -1000, 3422, 64459, 67158, 110397, 2922,
	66623, 3659, -1000, -1000, -1000, -1000, -1000, 3084, 3658, 3657,
	3656, -1000, 110397, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	210, 3083, -1000, -1000, 93129, 210, 3080, -1000, 210, 3079,
	-1000, 92594, -1000, -1000, 2133, 3077, -1000, -1000, 212, 3076,
	-1000, -1000, -1000, 211, 3075, -1000, -1000, 232, -68, 3070,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 121725, -1000, -1000, -1000, 66081, -1000, 3212, -1000,
	-1000, 110397, -1000, 45184, -1000, 3421, 1569, 73731, 3357, -53,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2457, 2485, 1091,
	2285, -1000, 3114, 1398, -1000, 31336, 3157, -1000, -1000, -1000,
	222, 23315, -1000, -1000, -1000, -1000, -1000, -1000, 2368, 3069,
	1376, -1000, 2283, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1985, 3068, -1000, 2010, 3066, 1942, -1000, -1000, 2429,
	-1000, 3191, -1000, -1000, 1863, 3064, -27, -1000, -1000, 2522,
	-1000, 1904, -1000, 967, 3063, -1000, 83436, 57430, 55753, 69875,
	-42, -1000, -1000, -1000, -1000, -149, -1000, 21658, 121725, -1000,
	-1000, -1000, -1000, 1704, 121725, 882, -1000, -1000, 3059, -1000,
	121725, 881, -1000, -1000, 3055, -1000, 2921, -1000, -1000, 2357,
	-1000, -1000, 3653, -1000, -1000, 3652, -1000, 3651, 3649, 3647,
	-1000, 1633, 2020, 3645, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 82901, 2255, -1000, -1000, 81817, -1000, 2354, 3354,
	-1000, 82359, 995, -1000, 967, 2331, -1000, 92059, 994, 2328,
	-1000, 3644, 3291, 2685, 967, 2327, -1000, -1000, -1000, -1000,
	-1000, 1017, -1000, 61227, -1000, 61227, -1000, 1507, -1000, 114677,
	-28, 88849, 3494, -1000, -71, -1000, -1000, -1000, 1000, -1000,
	54651, -1000, 54651, 95283, 73191, 950, 744, 62838, 121725, -1000,
	-1000, -1000, -1000, 121725, -1000, -1000, -1000, -163, 2731, -1000,
	73191, 56871, 121725, -1000, -1000, -1000, -1000, 121725, -1000, -1000,
	-1000, 73191, 81817, -1000, 101204, 81282, -1000, -1000, 1357, 2536,
	-1000, -1000, -1000, 73191, 1250, 73191, 73191, 73191, -1000, 100662,
	-1000, -1000, 1929, 1524, 3199, 1923, 88849, -1000, 1837, -1000,
	-1000, -1000, 3227, 110397, -1000, -1000, 2919, -1000, 65538, 91524,
	-1000, 90989, -1000, 90454, -1000, 88849, -1000, 88849, -1000, 3641,
	3640, 3639, -1000, -1000, 3638, -1000, 3637, 3218, -1000, 121725,
	3215, -1000, 3636, 3329, 2917, 121725, -1000, 3078, 1646, 1645,
	110397, -1000, -1000, 110397, -1000, 110397, -1000, -1000, -1000, 1422,
	-1000, -1000, 2449, -1000, -1000, -1000, -1000, 88849, 1349, -1000,
	-1000, -1000, -1000, -1000, -1000, 2793, -1000, 1693, -1000, 1781,
	-1000, 2887, 3249, -1000, 1356, -1000, -1000, 223, -1000, -1000,
	-53, -1000, 114142, -1000, 2547, -1000, 110397, -1000, 2393, 2910,
	2916, 1877, 2252, 2561, -1000, 39396, 2523, 48592, 2282, 143,
	-1000, -1000, 143, 143, 30768, -1000, -1000, 64459, 64459, 23315,
	1301, 45184, 45184, 45184, 45184, 45184, 45184, 45184, 45184, 45184,
	45184, 45184, 45184, 45184, 45184, 45184, 45184, 45184, 45184, 45184,
	45184, 45184, 45184, 45184, 45184, 45184, 45184, 45184, 45184, 45184,
	45184, 45184, 45184, 45184, 45184, 45184, 2223, 45184, 1223, 45184,
	45184, 45184, 45184, 1906, -1000, -1000, 1856, 505, 2024, -1000,
	3478, 3478, 3478, 592, 592, 10325, 10325, 605, 3635, 782,
	-1000, 45184, -1000, 108, 45184, 23868, -1000, 449, 10450, 2451,
	-1000, 447, 24448, -1000, -1000, -1000, 25584, 600, 38816, 45184,
	982, 121725, -1000, -1000, 1285, 3497, 21106, 2794, 2759, 658,
	787, 785, 28472, 27892, 27312, 26732, 784, 45184, 45184, 45184,
	45184, 45184, 45184, 45184, 45184, -1000, -1000, 3503, -1000, 3497,
	-1000, -1000, -1000, -1000, 3497, 1295, 1294, 3497, -1000, 3497,
	3497, 8447, 8447, 38248, 37668, 37088, 49160, 36508, 45184, 26152,
	35928, 35348, -1000, 110397, -35, 3415, 45184, 227, -1000, 120285,
	-1000, 227, 227, 657, -76, 121725, 2660, 2660, 53027, 2273,
	2162, 2162, 2162, -1000, 859, 16661, 859, 99587, 2180, 859,
	859, 203, 293, 420, 50859, 2786, 99587, 769, 656, -10,
	-11, -16, -1000, -1000, -17, -24, -1000, -1000, 88849, 643,
	23868, 23315, 202, 1415, -78, 2590, 2586, 2581, -1000, 2557,
	1731, -79, 1220, 88849, 110397, -87, -1000, 5690, -84, -1000,
	1306, 201, 3497, -1000, -1000, -1000, -1000, -1000, 3633, 3632,
	-1000, 987, 637, 634, 422, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 633, 632, 632, 632, -1000, 270, 630,
	267, 629, 628, 627, -1000, -1000, -1000, -1000, -1000, 2886,
	88849, 110397, -149, 89919, -77, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 110397, -1000, -1000, -1000, 3629, -1000, 88849,
	-1000, -1000, 88849, 210, 3052, -1000, 88849, -1000, 88849, 209,
	3051, -1000, -1000, 110397, -1000, 88849, 88849, -1000, 110397, 110397,
	110397, 73191, 73191, 221, -1000, 88849, 860, -86, 1107, -53,
	-1000, -1000, -1000, 1314, -1000, 1875, -1000, -1000, -1000, -1000,
	-1000, -1000, 1393, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 985, -1000, -1000, -1000, -1000, -1000, -1000, 3491, 3484,
	-37, -1000, -1000, 23315, -1000, -55, 1589, 2099, 1219, -1000,
	75876, 2407, 3200, 3628, 2662, 3181, 1471, -1000, 1420, -1000,
	3303, 79663, 3365, 3386, 231, -1000, 2878, -1000, -1000, 886,
	1680, 1671, 1218, 1214, 79663, 2010, -1000, 64459, -1000, 2649,
	3262, 1396, 1411, 1396, 1396, 1369, -1000, 79663, 1663, 1212,
	1211, 1210, 1891, 1880, -1000, -1000, 2011, -1000, 1209, 1206,
	808, 1876, -1000, -56, 3364, 3376, 206, -1000, 2877, 1205,
	-1000, -1000, -1000, 3261, 88849, 23315, 1505, 1493, 1502, 1660,
	1203, -38, -1000, 3361, 1200, 1199, -1000, 5180, -1000, 73191,
	1897, 3049, 2729, 842, 2720, -1000, -1000, -1000, 842, -42,
	69875, 110397, 200, -1000, 108, 45184, 45184, 108, 45184, 108,
	3327, 3048, -1000, -1000, -1000, -1000, -1000, 3627, 1921, 2476,
	-1000, -1000, 625, 2326, 2876, 110397, 2613, -43, 88849, -1000,
	3043, 68238, 2010, 2324, -1000, -1000, 80740, -1000, 3040, 473,
	2323, -1000, 665, 3626, 3036, -1000, 113607, -1000, 3212, 1345,
	3035, 1049, 789, 3414, -1000, 789, 61768, -1000, 110397, -1000,
	-28, 9003, 74806, -93, -95, 417, -1000, 100127, 110397, 1043,
	75341, 110397, 3147, 965, 55753, -1000, 55753, -103, -163, 2717,
	1405, 950, 950, 842, -1000, 842, -1000, 88849, 2915, -1000,
	-1000, 73191, 950, 950, 950, -1000, -1000, -1000, -1000, 3625,
	3624, 3622, -1000, -1000, -1000, 966, 88849, 110397, 88849, -1000,
	199, -1000, 110397, -1000, 110397, 110397, 88849, -1000, 966, 110397,
	966, 110397, 966, 110397, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 108, 45184, -1000, -1000, 3621, 1516, -1000, 2914, -1000,
	2912, -1000, 13, -1000, -1000, -1000, -1000, -1000, -1000, 2021,
	-1000, -1000, 88849, 88849, 88849, 88849, 110397, 3134, -1000, 110397,
	3132, 88849, -1000, 79663, -1000, 2393, 2910, -1000, -1000, -1000,
	-1000, -1000, -1000, 1364, 2216, -1000, 2527, -1000, 1450, -1000,
	-1000, -1000, 121725, 49728, -1000, -1000, 121725, 1862, -1000, 48024,
	47456, -1000, -1000, 1564, 88849, 2626, -1000, 2626, -98, -1000,
	120026, 2525, 88849, -1000, -1000, -1000, -1000, -1000, 879, 1213,
	1213, 1222, 1222, 1222, 1222, 3323, 312, 2100, 4752, 397,
	397, 907, 907, 907, 907, 907, 397, 2036, 592, 592,
	2036, 2036, 2036, 2036, 2036, 592, 592, 592, 397, 397,
	397, 10325, 13368, 8105, 45184, 45184, 1198, 1850, 505, 6551,
	45184, 6653, 6653, 6653, 6653, -1000, 1770, -1000, -1000, -1000,
	-1000, 2875, 624, 49160, 49160, -1000, -1000, -1000, -1000, 25016,
	45184, -1000, -1000, -1000, -1000, 34768, -1000, -1000, 119396, -321,
	415, -96, -58, -1000, 45184, 45184, 45184, 413, -1000, 195,
	45184, 110397, -1000, 116826, 764, -173, -1000, -109, 1383, -1000,
	45184, -1000, -1000, 1197, -1000, 1193, 1191, 1190, -1000, 622,
	412, -1000, 194, -1000, 2144, 621, 619, 45184, -1000, -1000,
	-1000, -1000, -1000, 119216, -1000, -1000, 119022, -1000, -1000, 118955,
	-1000, -1000, 118759, -1000, -1000, -1000, 121538, 16035, 15947, 15164,
	8229, 14733, 13799, -111, 408, -112, 403, 878, 876, 399,
	394, 393, -126, -1000, 3620, 3619, 3618, -1000, 3617, 3614,
	3613, -1000, 3612, 3610, 3609, -1000, 3608, 3607, 3606, -1000,
	3602, 3601, 3600, -1000, 3599, 3598, 3597, -1000, 3591, 3589,
	3585, -1000, 3584, 3579, 3578, -127, 383, -1000, 2873, -96,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 378, -1000,
	376, -1000, 121279, -96, 374, 1423, -1000, 49160, 49160, 49160,
	-1000, 373, -1000, 119837, -1000, 121092, 34200, 34200, 34200, 371,
	120913, 45184, -96, -128, -1000, -129, -1000, -1000, 492, -137,
	977, 33620, 51943, 23315, -1000, 977, 977, 45184, -1000, 45184,
	2543, -1000, -1000, -1000, -1000, 2540, 1938, 2660, 53027, -1000,
	-1000, -1000, -1000, 99587, -1000, 3494, 2656, -1000, 99587, -1000,
	-1000, 110397, 473, -1000, 99587, 99587, 23315, 859, -1000, 859,
	99587, 763, -1000, -1000, -1000, -1000, -1000, 367, 58529, -58,
	189, 23315, 967, -1000, 2617, 2617, 2617, 2617, -1000, -1000,
	110397, 1177, -45, -105, 3454, -1000, 2084, -1000, 64459, -1000,
	778, 1093, 23315, -1000, -1000, -1000, 618, -1000, 3497, 3497,
	-1000, 3497, 110397, 2868, 145, 121, 68238, 68238, 3576, -1000,
	-1000, 210, -1000, 88849, 210, 210, -1000, 88849, 88849, 2133,
	-1000, 212, -1000, 211, -1000, -1000, -68, -1000, 973, 31336,
	-1000, 1314, -1000, -1000, 1531, -1000, 1925, -1000, 1171, -1000,
	-1000, -1000, -1000, 31336, -1000, 3019, 110397, 110397, 88849, -1000,
	110397, -1000, 2008, 3448, 1836, 2446, 2445, 68238, -1000, 2321,
	113072, 2315, 64459, 110397, -1000, -1000, 617, 915, 2519, 2516,
	1037, 110397, 110397, 2510, 112537, 112002, -1000, 3572, 110397, 2110,
	45184, 3260, 2182, 2177, 108, 108, -1000, -1000, 108, 611,
	1287, 88849, 88849, 110397, 68238, 88849, 1849, -1000, -1000, -1000,
	-1000, -1000, 80198, -1000, -1000, 3502, 3501, -1000, 1396, -1000,
	-1000, -1000, 1396, 2010, 1838, 110397, 68238, 88849, 68238, 110397,
	110397, -1000, 1651, 110397, 1446, -1000, 808, 2094, 108, 108,
	-1000, -1000, 108, 610, 23315, 2023, -1000, 2951, 110397, 3531,
	111467, 3529, 110397, 110397, 110397, 68238, 3221, 110397, 110397, 68238,
	5180, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 69340, 1050, 967, 1626, 1176, 1175, 79663, 55753,
	964, 55753, 2666, -1000, -1000, 20554, -1000, 121725, 121725, -1000,
	121725, -1000, 64998, 110397, -1000, 993, 110397, 75341, 937, 3032,
	60686, -149, 950, 73191, 88849, -43, 110397, -1000, -1000, 2010,
	3031, 473, 2320, -1000, 73191, 3413, 3026, 609, 3570, 3569,
	-1000, 88849, 2250, 2317, -1000, -1000, 110932, 3095, 808, 110397,
	977, 53027, 1883, -1000, 59071, 1011, 110397, 1776, 104, -1000,
	-1000, -1000, -5, 110397, -1000, 788, -1000, -1000, 9003, 9003,
	950, -241, 608, -1000, 843, 837, 56312, 73191, -138, -1000,
	-1000, -1000, -1000, 2315, 88849, 110397, 1261, 2684, 110397, -139,
	-1000, 187, 606, -1000, 2402, -1000, -163, -1000, 965, 55753,
	2839, 2835, -1000, -1000, 971, -1000, 1353, 950, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -29, 110397,
	-149, -149, -44, -45, -1000, 966, -1000, 966, -1000, 966,
	-1000, 121725, -1000, -1000, 1511, 1464, 110397, -1000, 23315, 110397,
	88849, 23315, 88849, 2896, 2885, -1000, -1000, -1000, 110397, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1072, -1000, 1862, 2215,
	-1000, 600, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2423, -1000, -48, 30768, 864, -1000, -1000, 88849, -31,
	45184, 45184, 6359, 5889, 45184, 49160, 49160, -1000, 45184, 5307,
	-1000, -1000, -1000, -1000, -1000, 2826, 599, 45184, 64459, 5171,
	576, -1000, 360, 11494, 2036, -1000, 45184, -1000, 359, 33052,
	-1000, 120472, -66, -144, -1000, 17226, -96, -146, -1000, -1000,
	777, -1000, 3053, -1000, 45184, 120651, 2389, 1852, 1766, 1533,
	3497, 3525, 20002, -1000, 62303, 979, 2191, 118581, -1000, -1000,
	-1000, -1000, 64459, 64459, 45184, 45184, -1000, 45184, 45184, 45184,
	-1000, -1000, -1000, 3497, 861, -1000, -1000, -1000, 861, -1000,
	-1000, 1396, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1396, -1000, 45184,
	-1000, -1000, 2822, 45184, -1000, 64459, 64459, 49160, 49160, 49160,
	49160, 49160, 49160, 49160, 49160, 49160, 49160, 49160, 49160, 49160,
	49160, 49160, 49160, 49160, 49160, 49160, 2496, 49160, 3470, 3470,
	3470, -1000, 2830, 2822, 45184, 45184, 64459, 344, 341, 336,
	-1000, 45184, -96, -1000, -1000, 9003, 597, -1000, 2409, -1000,
	2756, -1000, 45184, -1000, -154, -1000, 2786, -1000, -1000, 2756,
	2756, -155, 121725, 53027, 53027, -1000, 596, 45184, 2538, -1000,
	-1000, 762, -315, -1000, 833, -1000, -1000, -1000, -1000, -1000,
	473, -1000, -1000, -1000, 184, 99587, 99587, 761, -1000, -156,
	-1000, -1000, -161, -1000, 3411, 333, 23315, -1000, 977, 2787,
	-1000, -1000, -1000, -1000, -1000, -1000, -149, 110397, 110397, 2203,
	3524, -1000, 3498, 776, 758, 183, 3497, 331, 329, 328,
	-149, 110397, 110397, 110397, -1000, -1000, -1000, -1000, 210, -1000,
	-1000, -1000, 209, -1000, -1000, -1000, -1000, 2593, -1000, -53,
	-1000, -1000, -1000, 45184, -1000, -1000, 3190, 1174, 1172, -1000,
	-1000, -1000, -1000, 3259, 89384, 3447, 1826, 1820, -1000, 3024,
	-1000, 2314, -1000, 1001, -1000, 1933, -1000, 45184, 595, 2677,
	594, 591, 3568, 1899, 3566, 1041, 3016, 2133, 3011, 2133,
	-1000, -1000, -1000, 893, -1000, 121725, 2182, -1000, 589, 562,
	-1000, -55, 1567, 2030, 1169, 970, -1000, -1000, 45184, 45184,
	99052, -1000, 441, 3191, -32, -1000, -1000, -1000, 1621, 1166,
	1164, -1000, -1000, -1000, -1000, 2010, 1603, 1160, 1155, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 969, -1000, 2947, 2946,
	871, 110397, -1000, 968, -1000, -1000, 45184, -1000, -56, 1153,
	3344, 2312, 88849, -1000, 2133, 3009, 1149, -1000, 1148, -1000,
	-1000, -1000, 3360, 3359, 1151, -1000, -1000, -1000, -1000, -1000,
	68789, -1000, 110397, 68238, 88849, 1830, 842, -1000, 2388, 842,
	964, 2818, -1000, 2564, -1000, 88849, 3564, 326, -162, -57,
	64459, 3410, -1000, 2228, 573, 88849, 865, -1000, 3494, -1000,
	-1000, -1000, -1000, 3336, 88849, 3409, 2976, 967, 108, 88849,
	3489, -1000, -1000, 3405, 88849, 2974, 2240, 2307, 2470, 808,
	74271, 967, 2178, -67, -1000, 1776, 32472, 3193, -167, -1000,
	-1000, -1000, 977, 61768, 53027, 45184, 3563, -174, -1000, -1000,
	-1000, -1000, -1000, 96907, 96907, 73191, 73191, 73191, 950, 110397,
	110397, 75341, -1000, -1000, 561, 110397, 110397, 560, -1000, 110397,
	110397, 3561, 73191, -60, 556, -1000, 828, 827, 826, -1000,
	-1000, -1000, -1000, -1000, 965, -1000, -163, 55753, 108, -1000,
	2201, 88849, -1000, 19450, -1000, -1000, -1000, -1000, -1000, -1000,
	966, -1000, -1000, 2105, 2281, 2105, 1759, 1757, -1000, -1000,
	2211, -1000, -1000, -1000, -1000, 2567, 3225, 23315, 3298, 6653,
	45184, 45184, 5127, 548, 269, 6653, 45184, 45184, 64459, 121904,
	-177, 45184, 45184, -1000, 45184, 753, 121725, 3522, 45184, 323,
	321, -1000, -1000, -1000, 3495, -1000, -1000, -1000, 121725, 45184,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 320, -1000, 181,
	-1000, -1000, -1000, 116282, -1000, 45184, 319, 3258, -1000, 318,
	317, 11043, 448, 118166, 118137, 117987, 311, -1000, -1000, 309,
	308, 121725, 2830, 121725, -1000, -1000, 1046, 1046, 1340, 1340,
	1340, 1340, 3470, 933, 1014, 586, 363, 363, 363, 522,
	1116, 1116, 363, 363, 363, 2815, 2482, 555, 5187, -1000,
	-1000, 121725, 121725, 297, -1000, -1000, -1000, -96, 295, 9003,
	-1000, 2751, 3257, 121725, -1000, 53027, 2751, 2751, -1000, -1000,
	1938, 110397, 121725, 53027, -1000, 2656, -1000, 17789, -1000, 23315,
	-1000, -1000, -1000, -1000, 3494, -1000, 58529, -1000, 552, -1000,
	146, -1000, 2787, -1000, 825, -1000, -1000, 73191, 73191, -149,
	-149, -1000, -1000, 752, 3560, 773, 23315, 294, -1000, -1000,
	-1000, -149, -149, -149, -1000, -1000, -1000, 3145, 121725, 110397,
	110397, 1427, 94741, 1752, -1000, -1000, 1873, 2442, -1000, 3446,
	3444, 110397, 2973, -1000, 2042, -1000, 1037, 117565, 53568, -1000,
	53568, 110397, -1000, -1000, 1893, 2572, 1090, -1000, 3226, 110397,
	-1000, 110397, -1000, -1000, -1000, 110397, 110397, 88849, 110397, -1000,
	68238, 2955, -183, 121725, -61, -1000, 824, -1000, 1371, -1000,
	18898, 110397, 68238, 88849, 110397, 68238, 88849, 2128, -1000, -1000,
	2945, -1000, 2954, -184, 23315, -1000, 3521, 3519, 2966, 3234,
	-1000, 110397, 3518, 110397, 88849, 3144, -1000, -1000, -1000, -1000,
	-1000, 1539, 1147, 1146, 964, -62, 546, -1000, 822, -1000,
	-1000, 819, 964, -1000, 73191, 55753, 473, -1000, 2657, -1000,
	94206, 2248, 108, -1000, 3559, 97447, 535, -1000, 2199, -1000,
	751, 68238, 2010, 108, 88849, -1000, -1000, 473, 291, -64,
	-1000, 3021, 1027, 23315, 88849, 2965, 2458, 808, 74271, -1000,
	1345, 2561, -1000, -65, -1000, 660, 108, 2178, -1000, -67,
	121725, -1000, 818, -1000, -194, -1000, -1000, 289, -1000, 3143,
	3142, -1000, 2764, 53568, 533, 528, 110397, 3140, -1000, -1000,
	-196, 2421, 2421, 73191, 55753, 73191, -1000, 965, -1000, -1000,
	2364, -1000, -1000, -1000, -1000, -1000, 23315, 1647, -1000, 526,
	525, -1000, -1000, -1000, -1000, 3225, 6653, 6653, 45184, 45184,
	45184, 6653, 121904, -197, -1000, 6653, 6653, -96, -1000, -1000,
	120472, -1000, -1000, -1000, 121725, -1000, 18346, 2117, -1000, 117527,
	-1000, 30768, -1000, -1000, 45184, 45184, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 49160, 2810, 524, 64459, -1000, -1000,
	284, 975, 45184, 46888, 2786, 975, 975, -1000, -199, -1000,
	-1000, -1000, 3494, 146, -1000, -1000, 3557, 23315, -1000, 73191,
	-1000, -1000, 772, -1000, 3556, -1000, -1000, -1000, -1000, -1000,
	2712, 3404, -1000, -1000, 1867, 2441, -1000, 3403, 1137, 3400,
	-1000, 110397, -1000, 110397, -1000, 23315, 110397, 2784, 1167, -1000,
	915, 2495, 521, 49160, 88849, 877, -1000, 3438, 2739, -202,
	-1000, 110397, 45184, 110397, -204, -211, 2297, -1000, -1000, 2292,
	45184, -1000, 64459, 520, 2133, 2133, -212, -213, -1000, -1000,
	-1000, 45184, 1122, 110397, 31904, -1000, 3554, 3191, -1000, -1000,
	-1000, -1000, -1000, -1000, 110397, -1000, 45184, 1121, -1000, -1000,
	-1000, 3508, 2133, 23315, 2133, -1000, 2133, 3234, 1086, 110397,
	68238, 88849, -1000, 2325, 2325, 73191, 55753, -1000, -68, 964,
	3398, 2642, 3553, -1000, -1000, -1000, -1000, 2489, -1000, -1000,
	110397, 2486, 952, -1000, -214, -1000, 816, 813, 75341, 937,
	908, -1000, -1000, -1000, -1000, 473, 3394, -1000, 3507, 509,
	507, 110397, 2239, 506, 23315, 3188, 808, 74271, -1000, 3095,
	1776, -1000, 2302, 110397, 3178, -1000, 2561, 505, -1000, 950,
	502, 495, 2655, 2655, -219, 53568, 53568, -220, 494, 950,
	-1000, -221, -1000, -1000, -1000, -1000, -69, -1000, 838, 836,
	-1000, -1000, 88849, 88849, 45184, 45184, -1000, 6653, 6653, 6653,
	-1000, 283, -1000, -1000, 2178, 3252, -1000, -72, 117498, 116931,
	5853, 49160, 64459, -222, -1000, -1000, 110397, 121725, -74, -1000,
	121725, 493, 491, 410, -1000, -1000, -1000, 750, -1000, -1000,
	3552, -1000, 98517, 110397, -1000, 3391, 110397, 97982, 110397, -1000,
	1773, -1000, -1000, -1000, 110397, 2306, -1000, -1000, -1000, 1031,
	45184, 5187, 487, 45184, -1000, 3385, -1000, 2633, 2827, 1811,
	53568, -1000, 3225, -1000, 116893, -1000, 1018, 1908, -1000, -1000,
	121725, 3234, 53568, -1000, -1000, 486, 484, 121725, 483, 809,
	2804, -1000, -1000, -1000, -1000, 121725, 482, 3344, -1000, -1000,
	-1000, -1000, 2133, 88849, -1000, -1000, -1000, -1000, -227, -1000,
	-1000, 1915, 108, 2104, 2709, -1000, 2248, 481, -1000, -1000,
	2204, 2588, -1000, 97447, 31336, 31336, 277, 3371, 908, -1000,
	3476, -1000, 3370, 108, -1000, 3489, 53568, -1000, 88849, 53568,
	2238, 2011, 2435, 74271, -1000, 2470, -1000, -1000, -229, 110397,
	1776, -1000, -1000, 73191, 73191, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1018, -234, -235, -1000,
	73191, -1000, -1000, 2364, -1000, 110397, -1000, 110397, -1000, -1000,
	-236, -242, -1000, 2058, 45184, 30768, -1000, -1000, 5853, -243,
	-1000, -81, -1000, 3369, 46888, 3550, 3549, 3548, -1000, -1000,
	-1000, 1845, -1000, 110397, -1000, -1000, 1841, -1000, -1000, -1000,
	2964, 2747, 116864, 2398, 110397, 9176, -1000, 2788, -1000, -1000,
	2642, 480, -1000, -1000, -1000, -1000, 864, 110397, 2642, 2746,
	88849, 1029, -244, 2105, 2105, 45184, 30200, 2127, 45184, -1000,
	-1000, 3234, -1000, 2782, 3486, -1000, 937, -1000, 2126, 110397,
	-1000, 3220, -1000, 3136, -1000, -1000, -1000, 2657, 108, -1000,
	-1000, 108, -1000, 272, -245, 1027, -251, 88849, 2033, -1000,
	808, -1000, 2458, 977, -1000, -1000, -252, -253, 1811, 1018,
	2094, -258, -1000, -259, -264, -1000, -1000, 243, 46320, 46320,
	46320, -96, -98, -1000, 110397, 475, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2941, 963, -1000, 2225, 1818, 123, 1055,
	-1000, -1000, 2094, 110397, -1000, -1000, -1000, 961, 473, -1000,
	45184, 1018, -265, -1000, 1010, -266, -1000, 1004, -267, -1000,
	2799, -1000, -272, 2133, 953, 3326, -1000, -1000, -1000, 2204,
	88849, -273, -1000, -1000, 2318, -1000, 2642, 952, -1000, -1000,
	1018, 472, 1811, 471, 1401, 808, -1000, -1000, 1396, 3188,
	3102, 950, 950, 2642, 1811, 949, -1000, 950, -1000, -1000,
	-1000, 3008, -1000, 50296, 2243, 1739, 119657, 3008, 3008, -1000,
	-1000, 110397, 3312, -1000, 2237, 2234, 1451, -1000, -1000, -1000,
	-1000, -1000, -1000, 2739, -275, 3306, 2398, 121725, 2642, -1000,
	2105, 2704, -1000, 2105, 2798, -1000, 2120, -1000, -1000, -1000,
	1635, 3466, 1885, 469, -1000, 110397, 1722, 1705, 3546, 2104,
	2204, 1811, 53568, 2642, 53568, -1000, -1000, 110397, -1000, 2011,
	1266, -1000, -1000, 2094, 2642, 977, 468, -1000, -1000, 1808,
	3431, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 807,
	-1000, 3111, -1000, 1068, 1937, 1937, 977, -1000, 804, 2225,
	-1000, -1000, 466, -1000, 458, -1000, 2194, -1000, -1000, -1000,
	-1000, 110397, -1000, -1000, 3545, -1000, 937, -1000, 2642, -280,
	2094, -282, -1000, -149, 2033, -1000, 1458, 949, 2094, -1000,
	1729, -1000, -1000, 2172, 45752, 45184, -1000, 3457, -1000, -1000,
	2498, -1000, -1000, 45184, 2739, 45184, 45184, 60151, -283, -1000,
	2204, 2094, 1018, 949, 1811, 1401, 61768, 977, 949, -1000,
	-1000, -1000, 121725, -1000, -1000, -1000, 121725, -1000, -285, -288,
	-241, 96907, 2125, 1885, 949, 1811, 977, 2642, -1000, -274,
	-1000, 977, 2094, 1119, -290, -1000, -1000, -1000, -1000, 977,
	2642, -1000, 2094, -1000, -1000, -1000, -1000, 457, -1000, -1000,
	2094, 949, 45184, 949, 977, -302, 977, -1000, 2094, -1000,
	-1000,
}

var sqlPgo = [...]int{
	0, 4345, 4343, 4341, 4339, 4338, 4337, 4336, 4333, 4332,
	4329, 4328, 4322, 4320, 4319, 4318, 4317, 4316, 4312, 4311,
	4307, 4306, 4304, 4303, 4302, 4301, 4299, 4293, 4292, 4288,
	4285, 4282, 4280, 4278, 4277, 4275, 4274, 4272, 4270, 4267,
	4266, 4263, 4262, 4261, 4258, 4257, 4255, 4253, 4252, 4251,
	4249, 4242, 4241, 4240, 4238, 4232, 4231, 4230, 4228, 4224,
	4221, 4220, 51, 4218, 4217, 4216, 4215, 4213, 4212, 4211,
	4209, 4208, 4207, 4206, 4205, 4203, 4199, 4196, 4194, 4192,
	4191, 4190, 55, 4189, 254, 4188, 4187, 4186, 4182, 4180,
	4179, 4177, 4175, 4173, 4170, 4169, 4168, 253, 4167, 131,
	4166, 4162, 4158, 4157, 4156, 252, 4154, 4150, 4149, 4148,
	263, 4147, 4146, 4144, 4139, 4135, 4128, 4109, 4108, 4104,
	4103, 4102, 92, 192, 4100, 4098, 4070, 4095, 4094, 4093,
	4092, 4091, 4080, 4079, 4076, 4074, 4072, 237, 4069, 251,
	4068, 4067, 4066, 4065, 4064, 4063, 4062, 4061, 4059, 4058,
	4057, 4056, 4052, 4051, 4050, 4049, 4047, 4046, 4044, 4043,
	4040, 4039, 4033, 4032, 4028, 4027, 4026, 4025, 4021, 4020,
	4019, 4018, 4015, 4013, 4011, 4010, 228, 256, 175, 4009,
	4008, 250, 249, 4006, 4003, 4000, 3999, 3998, 113, 12,
	270, 3997, 3996, 87, 80, 84, 97, 99, 88, 3995,
	107, 3994, 114, 57, 3988, 17, 2, 215, 229, 11271,
	221, 3986, 3984, 3982, 233, 180, 3979, 225, 3978, 3976,
	3975, 3973, 56, 44, 162, 165, 157, 153, 706, 3971,
	145, 100, 81, 53, 40, 15, 76, 195, 23, 3970,
	241, 7, 133, 5, 34, 3968, 3967, 3964, 3963, 3366,
	130, 3962, 247, 224, 150, 3961, 3960, 3959, 201, 3958,
	3957, 45, 3956, 90, 77, 119, 86, 116, 3954, 140,
	33, 3953, 169, 65, 3952, 146, 105, 82, 10698, 8167,
	3950, 110, 59, 89, 3206, 193, 170, 181, 94, 151,
	149, 189, 204, 200, 164, 63, 3948, 238, 3946, 3389,
	71, 171, 3945, 3944, 3943, 72, 184, 103, 3942, 3939,
	70, 11, 3, 1, 9, 134, 25, 19, 16, 3937,
	60, 109, 43, 30, 3936, 26, 3935, 3933, 3930, 3928,
	3927, 41, 147, 3926, 261, 3925, 121, 52, 21, 3922,
	38, 205, 3920, 210, 118, 3917, 3916, 232, 194, 173,
	3914, 68, 216, 3911, 3909, 3908, 3903, 3898, 128, 8,
	125, 3896, 3893, 136, 3890, 47, 227, 179, 3889, 62,
	3888, 3887, 161, 101, 132, 255, 154, 208, 115, 209,
	168, 212, 3886, 3884, 3883, 167, 3882, 3876, 203, 141,
	3875, 3871, 187, 265, 83, 42, 91, 220, 78, 182,
	158, 3869, 183, 3868, 3866, 262, 166, 199, 13, 4,
	93, 126, 3864, 6, 217, 143, 218, 108, 3863, 5531,
	1947, 198, 3861, 3860, 138, 117, 75, 111, 142, 246,
	67, 3859, 3852, 2633, 3851, 3846, 3843, 3842, 174, 3841,
	3840, 3838, 144, 155, 231, 3831, 85, 64, 46, 24,
	122, 235, 259, 106, 206, 152, 240, 3830, 3829, 3827,
	172, 3825, 69, 120, 3822, 186, 243, 54, 3821, 379,
	3818, 137, 2023, 61, 139, 3817, 207, 3816, 3815, 3813,
	3812, 3811, 3810, 3809, 1999, 213, 3808, 3805, 3804, 58,
	178, 3803, 245, 176, 160, 102, 48, 3801, 95, 4398,
	3800, 1904, 258, 73, 248, 188, 242, 3798, 4082, 50,
	3797, 0, 12415, 6178, 9178, 12036, 3796, 4868, 3794, 3793,
	3792, 191, 135, 3791, 3789, 3788, 104, 3784, 79, 3783,
	3782, 66, 3781, 27, 20, 18, 31, 28, 190, 163,
	3780, 3779, 29, 127, 123, 3778, 257, 211, 3775, 3773,
	3771, 3768, 96, 3767, 39, 3762, 37, 3760, 3759, 49,
	14, 32, 3747, 3745, 236, 3744, 202, 234, 3742, 148,
	3737, 3315, 129, 3736, 3735, 239, 112, 3734, 273, 3733,
	3314, 3730, 3729, 22, 3726, 3724, 226, 159, 197, 3723,
	3722, 156, 3721, 3719, 3718, 264, 3717, 3716, 3715, 36,
	3714, 10, 3713, 3712, 196, 3135, 3708, 3705, 35, 3704,
	177,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	11, 11, 7, 7, 7, 7, 8, 8, 8, 8,
	8, 48, 48, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 35, 30, 31, 32, 33, 33, 10, 10,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 16,
	16, 36, 36, 17, 17, 38, 38, 18, 18, 39,
	39, 575, 575, 21, 41, 22, 42, 15, 576, 576,
	576, 576, 34, 23, 43, 27, 27, 27, 27, 27,
	191, 191, 191, 191, 20, 20, 37, 37, 225, 225,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 574, 574, 227, 227, 226, 221,
	221, 577, 577, 228, 228, 228, 230, 230, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 473, 473,
	473, 506, 506, 505, 505, 505, 504, 504, 590, 590,
	591, 591, 591, 591, 591, 125, 125, 371, 371, 371,
	51, 51, 51, 51, 51, 569, 569, 193, 193, 193,
	195, 195, 194, 194, 194, 194, 73, 73, 582, 582,
	583, 583, 581, 584, 584, 584, 192, 192, 192, 121,
	121, 121, 121, 121, 121, 122, 122, 123, 123, 196,
	196, 196, 198, 198, 197, 197, 197, 197, 197, 197,
	197, 197, 202, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 101, 101, 508, 508, 509, 509, 187, 187,
	188, 188, 188, 188, 189, 189, 190, 190, 190, 65,
	199, 199, 201, 201, 200, 200, 200, 200, 200, 53,
	53, 53, 53, 53, 53, 53, 54, 54, 54, 54,
	54, 55, 55, 55, 55, 55, 55, 56, 56, 56,
	56, 56, 56, 63, 63, 63, 63, 178, 178, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	70, 70, 70, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 593, 593, 594, 594, 595, 595, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 79, 79, 333, 333, 298,
	298, 80, 80, 80, 81, 81, 82, 82, 67, 67,
	567, 567, 348, 348, 464, 464, 84, 84, 370, 370,
	85, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	86, 86, 86, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 94, 94, 94,
	94, 94, 95, 95, 95, 92, 92, 92, 89, 89,
	89, 88, 88, 88, 93, 93, 93, 566, 287, 287,
	91, 91, 91, 90, 90, 90, 349, 349, 96, 96,
	96, 96, 299, 97, 97, 97, 97, 97, 97, 97,
	97, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 466, 466, 98, 98, 98, 431,
	431, 102, 102, 102, 386, 386, 103, 103, 103, 103,
	103, 104, 104, 104, 104, 104, 104, 124, 124, 124,
	124, 124, 124, 571, 571, 341, 341, 252, 252, 252,
	252, 114, 114, 114, 114, 115, 115, 115, 116, 116,
	183, 183, 131, 131, 131, 131, 131, 130, 130, 130,
	130, 130, 130, 57, 57, 57, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 62, 62, 62, 133,
	133, 587, 587, 135, 132, 132, 132, 134, 134, 134,
	134, 136, 137, 137, 137, 137, 137, 137, 137, 137,
	138, 138, 498, 498, 357, 357, 496, 496, 518, 518,
	497, 497, 303, 303, 303, 303, 303, 304, 304, 304,
	507, 507, 507, 507, 507, 507, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 184, 184, 185, 186, 186, 186, 186,
	186, 162, 162, 162, 177, 177, 177, 177, 177, 177,
	177, 165, 165, 165, 149, 149, 140, 140, 140, 140,
	140, 140, 140, 144, 144, 144, 144, 144, 144, 144,
	144, 141, 141, 151, 151, 151, 151, 151, 145, 145,
	146, 146, 146, 146, 172, 172, 148, 148, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 142, 142, 142,
	142, 153, 153, 153, 153, 393, 393, 393, 176, 176,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 175, 175, 175, 175, 175, 175, 585, 585, 586,
	586, 169, 169, 169, 169, 169, 169, 445, 445, 163,
	163, 163, 163, 168, 168, 168, 168, 171, 171, 171,
	171, 376, 376, 160, 160, 160, 161, 161, 161, 166,
	166, 167, 164, 164, 170, 170, 170, 170, 143, 143,
	143, 143, 597, 597, 597, 173, 173, 159, 159, 174,
	174, 174, 174, 174, 174, 174, 174, 598, 598, 155,
	155, 155, 154, 154, 154, 154, 157, 157, 158, 158,
	158, 158, 158, 158, 156, 147, 568, 568, 564, 564,
	564, 564, 564, 564, 564, 564, 565, 565, 565, 565,
	570, 570, 107, 107, 107, 107, 107, 117, 117, 117,
	117, 117, 108, 108, 108, 108, 108, 110, 110, 109,
	109, 109, 109, 74, 74, 74, 74, 74, 14, 14,
	14, 75, 75, 243, 243, 205, 205, 205, 322, 322,
	206, 206, 311, 311, 311, 311, 203, 203, 204, 204,
	76, 76, 599, 599, 599, 578, 578, 578, 579, 579,
	579, 579, 579, 579, 305, 305, 306, 306, 411, 411,
	411, 411, 411, 309, 309, 309, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 312, 312, 229, 229, 229,
	320, 321, 321, 313, 313, 319, 318, 318, 317, 317,
	316, 316, 314, 315, 315, 315, 324, 324, 323, 326,
	326, 325, 410, 527, 527, 529, 529, 529, 529, 529,
	529, 529, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 394, 394, 600, 600, 525, 525,
	525, 526, 521, 521, 522, 522, 522, 522, 522, 307,
	307, 308, 308, 308, 308, 523, 524, 339, 339, 449,
	528, 528, 530, 530, 532, 601, 601, 601, 601, 601,
	601, 602, 602, 602, 409, 409, 408, 408, 331, 331,
	533, 533, 533, 533, 534, 534, 534, 534, 534, 537,
	536, 535, 535, 535, 535, 535, 78, 78, 78, 373,
	373, 372, 372, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 180, 180,
	255, 255, 72, 72, 72, 12, 12, 12, 580, 580,
	580, 77, 77, 77, 77, 77, 77, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 573, 573, 572,
	572, 256, 256, 604, 604, 83, 83, 83, 83, 83,
	83, 83, 83, 467, 467, 468, 468, 71, 71, 71,
	71, 71, 395, 395, 392, 392, 391, 391, 338, 338,
	447, 447, 447, 448, 260, 260, 261, 261, 222, 222,
	222, 29, 28, 19, 19, 24, 24, 25, 25, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	26, 26, 45, 45, 45, 45, 46, 46, 46, 46,
	49, 49, 50, 50, 44, 44, 44, 44, 47, 47,
	40, 40, 588, 588, 589, 589, 113, 113, 118, 118,
	118, 118, 118, 119, 119, 119, 119, 120, 120, 120,
	120, 129, 129, 179, 179, 179, 179, 179, 179, 179,
	52, 52, 52, 52, 64, 64, 64, 64, 127, 606,
	606, 606, 128, 128, 128, 605, 605, 253, 253, 405,
	405, 406, 406, 607, 607, 407, 407, 407, 407, 407,
	246, 245, 247, 247, 248, 248, 69, 69, 69, 238,
	238, 237, 235, 235, 510, 510, 240, 240, 240, 241,
	241, 231, 231, 232, 232, 233, 233, 234, 234, 244,
	244, 608, 608, 105, 105, 105, 182, 182, 297, 297,
	297, 402, 402, 402, 332, 332, 267, 267, 404, 404,
	404, 404, 369, 369, 369, 181, 181, 346, 346, 359,
	359, 360, 360, 461, 461, 361, 111, 111, 112, 112,
	126, 126, 209, 209, 207, 207, 207, 207, 207, 207,
	207, 207, 214, 214, 215, 215, 216, 216, 217, 218,
	218, 218, 218, 350, 350, 219, 219, 219, 208, 208,
	208, 210, 210, 210, 210, 210, 210, 210, 213, 213,
	213, 213, 220, 220, 220, 212, 212, 544, 544, 544,
	546, 546, 548, 548, 547, 547, 543, 543, 545, 545,
	603, 603, 375, 375, 375, 329, 330, 327, 327, 328,
	328, 336, 336, 334, 335, 335, 337, 337, 446, 446,
	446, 223, 223, 223, 366, 366, 366, 366, 367, 367,
	398, 398, 396, 396, 396, 396, 397, 397, 399, 399,
	399, 400, 400, 401, 401, 363, 363, 364, 364, 365,
	365, 365, 365, 427, 427, 211, 211, 211, 343, 343,
	343, 344, 344, 417, 417, 417, 417, 417, 417, 418,
	418, 416, 416, 416, 416, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 451, 452, 452, 345, 345, 453,
	403, 403, 562, 562, 562, 563, 563, 444, 444, 454,
	454, 454, 454, 454, 454, 442, 442, 443, 443, 462,
	463, 463, 379, 379, 379, 379, 377, 377, 380, 380,
	380, 380, 380, 378, 378, 455, 455, 455, 455, 368,
	368, 456, 456, 456, 456, 457, 458, 458, 459, 459,
	412, 413, 413, 469, 469, 469, 469, 471, 342, 342,
	342, 342, 342, 520, 519, 519, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 486, 486, 486,
	486, 486, 486, 486, 472, 472, 472, 472, 472, 476,
	476, 476, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 477, 477, 482, 482, 483, 483, 483,
	478, 479, 484, 484, 484, 484, 609, 609, 488, 488,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 474,
	474, 474, 481, 481, 481, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 387, 387,
	389, 389, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 421,
	421, 421, 421, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 538, 538,
	538, 538, 538, 538, 538, 538, 423, 423, 541, 541,
	542, 542, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 549, 549, 550, 550, 552, 552, 553, 553, 554,
	555, 555, 555, 556, 557, 557, 551, 551, 558, 558,
	558, 558, 559, 559, 560, 560, 560, 560, 560, 561,
	561, 561, 561, 561, 433, 433, 434, 434, 440, 440,
	440, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 257, 257, 257,
	257, 257, 355, 355, 353, 353, 353, 356, 356, 354,
	354, 352, 352, 351, 351, 430, 430, 428, 428, 432,
	432, 381, 381, 487, 487, 487, 487, 487, 487, 487,
	487, 382, 382, 382, 390, 383, 383, 384, 384, 384,
	384, 384, 424, 425, 385, 385, 385, 426, 426, 435,
	439, 439, 438, 437, 437, 436, 436, 414, 414, 415,
	415, 362, 362, 610, 610, 358, 358, 460, 460, 460,
	460, 301, 301, 347, 347, 300, 300, 292, 292, 293,
	293, 293, 293, 340, 340, 441, 441, 489, 489, 490,
	490, 491, 491, 492, 492, 493, 494, 495, 429, 429,
	277, 276, 264, 265, 275, 274, 273, 263, 266, 270,
	271, 272, 268, 269, 283, 282, 281, 236, 239, 288,
	289, 289, 291, 291, 290, 290, 279, 280, 465, 262,
	294, 294, 295, 295, 295, 296, 296, 296, 296, 258,
	258, 259, 259, 284, 284, 285, 286, 286, 278, 278,
	278, 249, 249, 249, 250, 250, 251, 251, 503, 503,
	500, 500, 500, 501, 501, 501, 502, 502, 502, 502,
	499, 499, 499, 499, 499, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	512, 512, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	514, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 517, 517,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 6, 6, 6, 4, 4, 5, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 5, 5, 6, 6, 4, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 6, 5, 6,
	6, 4, 8, 3, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 3, 1, 1, 1, 1, 1, 1, 3,
	6, 4, 6, 7, 9, 6, 2, 2, 3, 0,
	8, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 1, 3, 12, 3, 1, 0,
	1, 1, 2, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 7, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	2, 0, 1, 2, 3, 1, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 6, 6, 6, 6, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	6, 3, 3, 4, 3, 3, 4, 3, 4, 4,
	4, 3, 5, 7, 3, 3, 4, 3, 3, 3,
	3, 3, 2, 0, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 6, 4, 7, 7, 7, 2, 6, 4, 7,
	7, 7, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 3, 4, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 13, 16, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 2, 8, 4, 2,
	5, 5, 5, 2, 2, 0, 1, 3, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 3, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 17, 20, 16,
	19, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 6, 4, 4, 5, 5, 7,
	3, 3, 4, 4, 6, 3, 6, 7, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 12, 15, 3, 1,
	0, 4, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 5, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 5, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 582, -99, -96, -65, -63, -102, -103,
	-85, -104, -98, -124, -129, -111, -112, -113, -125, -131,
	-179, -184, -185, -186, -3, -51, -53, -66, -84, -86,
	-97, -106, -105, -107, -114, -121, -117, -101, -57, -126,
	-130, -139, -180, -181, -182, 33, 32, 101, 81, 154,
	128, 137, 200, 378, 420, 431, 392, 142, 412, 397,
	-134, -135, 448, -52, -64, -128, -127, 74, 129, 406,
	-4, -12, 30, 47, -54, -55, -56, 63, -72, -68,
	-79, -73, -70, -592, 103, -545, -87, -90, -120, -596,
	161, 218, -108, -109, 361, -115, -116, 414, -118, -119,
	416, 162, -59, -58, 156, -207, -209, -132, -133, -183,
	-140, -141, -142, -143, -144, -145, -146, -172, -147, -148,
	-149, -150, -151, -152, -156, -175, -153, -154, -155, -158,
	-157, -159, -164, -160, -161, -162, -163, -165, -166, -168,
	-169, -170, -171, -173, -174, 453, -167, 513, 50, 467,
	83, 146, 424, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -67, -69, -71, -74, -75, -76, -83,
	-77, -78, -544, -88, -89, -92, -94, -95, -91, -93,
	413, -210, -208, 579, 528, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -26, -36, -41, -42, -38,
	-39, -37, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -28, -34, -35, -29, -30, -31, -32, -33, -15,
	-27, 548, 557, -213, -211, -212, -220, 440, 536, 487,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, -299, 2, -279, -284, -285, -286, -278, -249,
	-514, -517, 4, -511, -515, 168, 227, 325, 21, 23,
	22, 24, 25, 26, 27, 28, 30, 31, 42, 43,
	45, 46, 47, 48, 49, 50, 54, 56, 60, 61,
	62, 63, 64, 65, 69, 74, 75, 80, 81, 82,
	83, 84, 85, 86, 92, 89, 90, 91, 93, 95,
	97, 98, 99, 100, 101, 102, 104, 105, 106, 108,
	109, 110, 118, 119, 120, 121, 123, 128, 129, 132,
	127, 131, 133, 135, 136, 137, 140, 141, 142, 144,
	145, 147, 148, 149, 151, 152, 154, 155, 156, 159,
	157, 495, 158, 160, 161, 162, 163, 166, 174, 175,
	176, 181, 183, 187, 188, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 201, 205, 207, 208, 209, 210,
	211, 217, 218, 220, 221, 222, 223, 228, 229, 230,
	234, 231, 240, 241, 245, 246, 247, 249, 253, 254,
	255, 256, 257, 258, 260, 262, 261, 264, 267, 268,
	271, 275, 276, 280, 281, 277, 282, 283, 285, 286,
	289, 287, 290, 291, 288, 292, 294, 295, 296, 297,
	298, 299, 300, 301, 302, 303, 304, 305, 293, 308,
	306, 310, 311, 312, 323, 321, 316, 317, 313, 318,
	314, 315, 319, 320, 327, 328, 331, 215, 333, 334,
	337, 355, 341, 342, 343, 346, 347, 350, 353, 354,
	356, 357, 358, 359, 360, 361, 362, 363, 365, 366,
	368, 369, 370, 372, 373, 374, 376, 378, 379, 381,
	382, 384, 385, 386, 387, 388, 389, 390, 392, 394,
	393, 395, 397, 399, 400, 401, 406, 412, 408, 409,
	410, 411, 413, 414, 415, 416, 418, 419, 420, 422,
	423, 424, 425, 427, 429, 430, 433, 434, 450, 451,
	469, 431, 432, 435, 436, 437, 438, 439, 443, 441,
	442, 444, 445, 446, 448, 449, 452, 453, 455, 456,
	457, 458, 459, 460, 463, 465, 466, 467, 486, 468,
	470, 473, 474, 475, 476, 477, 471, 485, 479, 480,
	482, 483, 488, 489, 490, 491, 492, 493, 494, 496,
	498, 506, 507, 508, 510, 513, 514, 515, 516, 504,
	518, 519, 522, 523, 524, 527, 525, 526, 528, 530,
	533, 534, 535, 541, 540, 542, 549, 550, 552, 553,
	554, 37, 51, 52, 55, 57, 59, 70, 71, 72,
	76, 124, 125, 153, 164, 165, 177, 189, 190, 202,
	204, 212, 213, 214, 235, 236, 238, 243, 265, 330,
	332, 348, 352, 367, 371, 375, 377, 391, 426, 461,
	472, 478, 499, 500, 501, 502, 509, 511, 536, 537,
	538, 543, 551, -299, 2, -279, 339, -272, 2, -249,
	-249, 378, 29, 2, 29, 366, 442, 490, 492, 2,
	-571, -341, 2, 29, -252, -249, 103, 200, 440, -272,
	2, -571, -341, 25, 2, -249, 2, 353, 22, 28,
	67, 78, 99, 140, 163, 184, 187, -595, 355, 385,
	429, 444, 485, 496, 510, 2, 540, 286, 441, 487,
	227, 120, 515, 435, -580, 433, 434, 353, 383, 422,
	203, 529, -253, 2, 431, -249, 286, 2, 582, 95,
	276, 75, 426, 445, -137, 507, -136, 499, 435, -138,
	-498, 2, 308, -249, 582, 582, 582, 29, -262, -249,
	487, 227, 435, 120, 483, 582, 2, 487, 358, 540,
	441, 120, 388, 227, 515, 435, -580, 286, -569, 2,
	-564, 4, -515, -511, -293, -292, 487, 493, 120, -286,
	-278, 572, -285, 582, 582, 582, 2, 246, 247, 387,
	386, 445, 446, 582, 582, 582, 582, 433, 2, 163,
	22, 28, 67, 94, 99, 126, 184, 187, 344, -593,
	355, 385, 444, 485, 489, 496, 510, -579, 468, 69,
	435, -578, -580, 286, 515, 140, -391, 120, 276, 198,
	523, 492, 490, 521, 132, 234, 526, 525, 582, 582,
	-99, 2, 579, 33, 32, 142, 448, -202, 487, 239,
	2, -249, 582, 582, 2, 246, 247, 433, 434, 582,
	582, 185, -564, 2, 582, 582, 2, 246, 247, 433,
	434, 239, 2, 69, 437, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 2, -177,
	445, 468, 209, 48, 47, 75, 29, 384, 80, 359,
	121, 148, 516, 201, 227, 228, 254, 94, 95, -393,
	45, 247, 246, 434, -585, 433, -445, 488, 436, 442,
	482, 258, 431, 507, 103, 530, 423, 554, 388, 389,
	480, 401, 277, 157, 4, 120, 308, 447, 499, 276,
	430, 362, 85, -603, 2, 487, -605, 2, 507, 507,
	2, -605, 2, -605, 2, -605, 2, -606, 507, 551,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, -208, -210, -209,
	582, 582, 582, 582, 582, 582, 582, -177, 445, 2,
	75, 29, -334, -336, 520, 237, 150, 345, -207, -209,
	2, -544, -496, 2, -419, -518, -421, 570, 571, 563,
	484, 68, 324, 555, -433, 126, 521, 339, -517, -422,
	-435, 153, 426, -356, 8, 9, 5, 6, 7, -258,
	-423, -429, 512, 167, 329, -296, 583, 10, 579, -541,
	-209, -434, 38, 204, 66, -500, -295, -259, -472, 238,
	-294, -278, -538, -539, 4, -511, -512, -501, -475, -483,
	-479, -480, -486, -249, -514, 78, 112, 113, 111, 116,
	115, 279, 278, 117, 114, 447, 529, 67, 37, 212,
	213, 243, 330, 214, 76, -540, 141, -513, 235, 236,
	461, 52, 391, 177, 125, 124, 332, 57, 55, 537,
	-484, 122, 499, 500, 501, 502, 189, 190, 59, 164,
	165, 352, 375, 478, 509, 511, 202, 265, 44, 107,
	186, 233, 216, 242, 244, 248, 266, 269, 309, 322,
	326, 349, 351, 421, 454, -609, 538, 472, 70, 71,
	-546, 393, -547, -272, -546, 582, 582, 584, 582, -327,
	-329, -330, 2, 29, 138, 579, 2, -450, 2, -451,
	-455, -209, 259, -454, 579, -452, 577, -279, 340, -542,
	427, -538, -539, -258, -278, -295, 4, -511, -513, 581,
	-331, 579, 120, 487, 79, 227, -386, 579, -249, 29,
	339, 503, 584, -328, 382, -431, 579, 339, 185, 342,
	61, 290, 2, 2, 2, 2, 2, 212, -249, 487,
	119, 2, 257, 2, 2, 2, 2, 2, 2, 2,
	-349, 212, 2, -279, 540, -349, 212, 2, -349, 212,
	2, -392, 2, 88, -263, 212, 2, -249, -287, 212,
	2, -282, -284, -291, 212, 2, -289, -249, -509, 212,
	2, -508, -503, 10, -502, 5, 4, -511, -515, -512,
	-514, 78, -419, 2, -126, 2, 61, -249, 540, 2,
	2, 450, 2, 579, -137, 72, 507, 44, 445, -406,
	2, -407, -245, -246, -247, -462, -248, 245, 381, 390,
	558, 130, 324, 554, -496, -587, 185, 562, 503, -496,
	-357, 581, 2, 2, 2, 2, 2, 2, -455, 212,
	-279, 2, -276, -499, 4, -511, -515, -512, -516, 29,
	32, 33, 34, 36, 38, 39, 40, 41, 58, 66,
	67, 73, 77, 79, 88, 94, 103, 111, 112, 114,
	113, 115, 116, 117, 126, 130, 134, 138, 139, 143,
	146, 150, 167, 169, 182, 184, 185, 200, 203, 206,
	219, 232, 237, 239, 259, 263, 270, 278, 279, 324,
	329, 335, 339, 340, 344, 345, 364, 380, 396, 417,
	440, 447, 464, 481, 487, 497, 503, 505, 512, 520,
	521, 529, 531, 539, 544, 545, 546, 547, 548, -517,
	2, -455, 212, 2, -281, 212, -455, -284, 2, -263,
	2, -275, -499, 2, -300, 212, -279, -280, -284, -282,
	2, -289, 2, -508, 212, 2, 540, 239, 503, 584,
	-347, -292, -293, -495, 8, -340, -249, 581, -419, 2,
	-126, -110, 2, 182, -419, 212, 2, -126, 212, 2,
	-419, 212, 2, -126, 212, 2, -582, 2, -508, 212,
	-249, 2, 290, 2, 2, 510, 2, 99, 487, 119,
	2, 410, -594, 429, 514, 2, 2, 2, 2, 2,
	2, 2, 487, -268, 2, -249, 182, -289, 212, -290,
	2, 441, -604, 393, -508, 212, 2, 540, -282, 212,
	2, -282, 227, 241, -263, 212, 2, 492, 490, 492,
	490, 185, 2, 239, 2, 239, 2, -456, 2, -457,
	-451, -458, 577, 340, -466, 2, -465, -502, 536, -99,
	579, -99, 579, 445, 579, -508, -279, -279, -419, 2,
	-126, -110, 2, -419, 2, -126, 2, -123, -508, -122,
	579, 185, -419, 2, -126, -110, 2, -419, 2, -126,
	2, -202, 182, 2, 120, 487, -177, 2, 182, 531,
	2, 8, 2, 219, -508, 436, 389, 174, 2, 450,
	2, 451, 75, -393, 554, 75, 185, 2, 185, 2,
	-376, 2, 548, 185, 2, 2, -568, 2, 339, 185,
	2, 185, 2, 185, 2, 185, 2, 185, 2, -176,
	446, 508, 486, 386, 247, 2, -126, 545, -110, -419,
	545, 2, -586, 182, 434, -419, 2, 506, 256, 158,
	185, -376, 2, 185, 2, 185, 2, 5, 2, 387,
	469, 2, 245, 381, 469, 2, -279, -597, 29, 2,
	487, 540, 441, 2, 2, 89, 90, 185, 2, 185,
	2, 199, 185, 2, 185, 554, 2, -368, -455, -405,
	-406, -405, 503, -334, -336, -177, 450, 2, -214, -366,
	-216, 182, -396, -397, -217, 270, 169, 335, -218, -375,
	29, 138, -375, -375, 61, 580, 580, 11, 12, 77,
	42, 570, 571, 572, 573, 180, 574, 575, 568, 569,
	567, 560, 561, 565, 251, 252, 96, 564, 562, 87,
	284, 428, 170, 171, 172, 173, 407, 225, 35, 226,
	14, 15, 16, 34, 344, 269, 555, 216, 454, 563,
	17, 18, 19, 242, 244, 326, 51, 219, -257, -302,
	-419, -419, -419, -419, -419, -419, -419, 351, 579, -362,
	-414, 577, -209, 579, 579, 579, -495, -209, -419, -433,
	580, -354, 579, -209, -433, -428, 579, 426, 577, 579,
	-436, -419, 5, 5, 5, 579, 581, -549, 549, 182,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 377, -477, 579, -476, 579,
	-476, -476, 541, -474, 579, 557, 550, 579, -474, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 541, 584, -546, -331, 579, -358, -460, -419,
	572, -358, -358, 339, -351, -419, 107, -379, 248, 309,
	186, 266, 421, 233, -416, 583, -416, -444, 557, -209,
	-452, -278, -209, -454, 579, -450, -444, -100, -495, -84,
	-97, -105, -126, -139, -181, -182, 572, -279, 579, 185,
	579, 581, -499, 185, -340, -263, -279, -294, -295, -300,
	137, -351, -564, 515, 435, -340, -252, 39, -430, -469,
	-470, -520, 583, -519, -472, -482, -478, -481, 367, 371,
	-501, 55, 537, -484, 238, 4, -511, -513, 235, 236,
	461, 52, 391, 177, 125, 124, 332, 57, 499, 500,
	501, 502, 189, 190, 59, 538, 472, 70, 71, -564,
	515, 435, -340, 182, -506, 2, -505, -504, 117, 447,
	-502, 5, 2, 153, 2, 2, 2, -249, -228, 584,
	65, 415, 153, -349, 212, -228, 153, -228, 153, -301,
	212, -300, -228, 153, -228, 584, 153, -228, 584, 153,
	581, 584, 153, -506, 2, -392, -498, -351, 39, -406,
	2, 126, -504, -607, 584, 268, -304, 283, 323, 208,
	340, 552, 333, 130, -507, 5, 4, -429, -441, 126,
	276, 238, -489, -491, 8, -490, 9, -492, 570, 571,
	-497, -496, 110, 581, -499, -225, 408, 448, 354, -224,
	24, 30, 142, 229, 312, 534, 159, -317, 230, -314,
	358, 153, 465, 524, -575, -576, 432, 494, 495, 91,
	333, 448, 354, 408, 153, -372, -374, 39, 118, 312,
	353, 62, 222, 288, 289, 467, 543, 153, 448, 354,
	408, 354, 24, 142, -240, -237, 448, -576, 100, 408,
	479, 380, -576, -227, 465, 524, -575, -576, 432, 408,
	-226, -319, -314, 358, 153, 583, 24, 142, 408, 448,
	354, -590, -591, 30, 408, 354, -572, -543, 548, 153,
	-455, 212, -583, -122, 260, 5, 10, -508, -122, -347,
	584, 584, -499, 572, 434, 433, 153, 153, 153, 153,
	182, 324, 2, 2, 2, 2, 2, 187, -578, -595,
	2, 2, -279, 212, -333, 339, -567, -348, 487, -279,
	324, 44, -281, 212, 2, -284, 540, -572, 324, -283,
	212, -279, 39, 579, 324, 2, -392, 2, 227, -543,
	324, -456, -297, -279, -451, -297, 448, -272, 39, -416,
	-279, 580, 584, -466, -466, -508, -190, 548, 185, 103,
	579, 579, -202, -463, 584, -462, 219, -509, -123, -508,
	411, -508, -567, -263, 2, -279, 2, 487, 249, -508,
	-190, 219, -508, -508, -508, -498, 29, 451, 2, -176,
	446, 508, 90, 451, 2, -279, 487, 120, 227, 81,
	-249, -570, 182, -565, 422, 435, 515, -564, -279, 120,
	-279, 120, -279, 120, -279, -279, 2, 2, 2, 2,
	2, 86, 86, 2, 47, -586, 182, 2, 506, 2,
	506, 2, -249, -249, -249, 468, 268, -279, 488, -598,
	185, 182, 487, 227, 487, 227, 120, 185, 75, 120,
	29, 487, -228, 584, -253, -214, -366, -498, -367, -366,
	-215, -214, -217, 182, 390, 525, 312, 452, 253, -397,
	-396, 29, -419, -401, 176, 311, -419, -399, -421, 570,
	571, -490, -492, -350, 333, -208, -208, -208, -337, -446,
	-419, 380, 227, -471, -469, -469, -277, -499, 499, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, 269, 216, 454, 51, 219, -419,
	503, -419, -419, -419, -419, 306, 324, 329, 512, 167,
	522, 138, 333, -610, 481, 41, -426, -209, -355, 579,
	-440, 36, 464, 29, -433, 579, 2, -414, -419, -415,
	-352, -351, -351, 580, 539, 29, 138, 572, 2, 580,
	584, 39, 580, -419, -352, -432, -428, -351, -439, -438,
	545, -387, -388, 553, 293, 123, 210, 291, -389, 439,
	-493, 8, -499, 572, -550, 175, 203, 579, 580, 2,
	580, 2, 580, -419, 2, 580, -419, 2, 580, -419,
	2, 580, -419, 2, 580, 2, -419, -419, -419, -419,
	-419, -419, -419, -351, 8, -493, -493, 499, 499, -493,
	-493, -493, -485, 367, 368, 369, 370, 271, 272, 273,
	274, 371, 372, 373, 374, 298, 299, 300, 301, 294,
	295, 296, 297, 302, 303, 304, 305, 194, 195, 196,
	197, 190, 191, 192, 193, -485, -381, 2, -487, -351,
	4, 553, 293, 123, 210, 291, 439, 5, -381, 2,
	-382, 2, -419, -351, -383, -420, -421, 570, 571, 563,
	-433, -384, 2, -419, -352, -419, 58, 263, 505, -385,
	-419, 185, -351, -351, 2, -351, 2, -547, 39, -351,
	-343, 584, 185, 39, 4, -343, -343, 579, 580, 584,
	-380, 207, 287, 282, 241, -380, -450, -379, 248, -377,
	349, -377, -377, -444, -264, 577, 585, -499, -444, -443,
	-442, 39, -272, 346, -444, -444, 581, 580, -443, 578,
	-562, 579, 582, 582, 582, 582, 582, -279, 579, -351,
	-499, 581, 470, 580, 242, 242, 242, 242, 427, 580,
	503, -566, -287, -291, 548, -99, 341, 580, 584, -342,
	38, 577, 581, -493, 2, 2, -488, 541, 579, 579,
	-388, 579, 185, -566, -291, -341, 584, 503, -249, 2,
	-279, -349, -228, 153, -349, -349, -228, 584, 153, -263,
	-282, -287, -289, -291, -249, -508, -509, -228, -283, -587,
	580, 507, -407, -303, 390, 463, 409, 443, 483, 8,
	9, 8, 9, 584, -499, 584, -588, 94, 503, 79,
	435, -242, 277, 400, 312, 487, 426, 503, -410, 212,
	79, -521, -266, 94, -522, -249, 73, 521, 380, 184,
	151, -588, 94, 380, -588, 94, 2, 229, 94, 448,
	468, 29, 61, -455, 42, 42, 29, -126, 264, 185,
	554, 487, 227, 435, 503, 503, -455, -374, -469, 118,
	288, 289, 61, -494, -489, 570, 571, -494, 61, -494,
	-494, -494, 548, -281, -455, 435, 503, 503, 503, 399,
	399, -237, 503, 503, -608, 562, 399, 584, 42, 42,
	29, -126, 264, 185, 503, -300, -264, 535, 43, 535,
	43, 535, 503, 43, 435, 503, 584, 43, 503, 503,
	-573, -254, 106, 318, 281, 319, 98, 315, 97, 314,
	104, 316, 105, 317, 542, 327, 64, 313, 292, 320,
	-255, -256, 360, 533, -508, 448, 354, 408, 153, 219,
	-463, 219, -463, -292, -249, 581, -126, -419, -419, -126,
	-419, -126, 47, 153, 2, -604, 257, 579, -307, 324,
	185, -340, -464, 239, 584, -348, 153, -505, -373, -372,
	324, -283, 212, 2, 153, -331, 324, 147, 579, 388,
	2, 153, -265, 212, -250, -249, -392, -231, 491, 153,
	-370, 531, -402, -126, 579, 126, 39, -402, -359, -360,
	-461, -361, -266, 579, -272, -416, -99, -465, 580, 580,
	580, -189, 343, -188, -249, 5, -202, 531, -306, -411,
	-410, -525, -526, -521, 269, 227, 521, 241, 168, -332,
	-267, -266, 119, -196, 548, -122, -123, 580, -463, 219,
	477, -190, -190, -463, -463, -279, 182, -508, -190, -190,
	-190, 2, 2, 2, -376, -279, -263, -300, -279, 581,
	-340, -340, -291, -287, -376, -263, -376, -263, -376, -263,
	-126, -419, 2, 445, 182, 182, 581, -376, 388, 120,
	487, 358, 227, -279, -300, -279, -300, -263, 120, -263,
	121, -279, -455, -367, -215, 340, 253, 452, -399, -400,
	-421, 426, 427, -400, 426, 427, 8, 9, 8, 9,
	-219, 456, 328, -349, 584, -222, 40, 134, 253, -279,
	554, 149, -419, -419, 503, -610, 481, -426, 149, -419,
	306, 329, 512, 167, 522, 138, 333, 185, 579, -420,
	-420, 580, -353, -419, -419, 578, 587, 580, -336, 584,
	-334, -419, -351, -351, 580, 581, -351, -340, 578, 578,
	584, 580, -437, -438, 143, -419, 503, 503, 503, 503,
	579, 580, 581, -555, 350, 579, 579, -419, 580, 580,
	580, 580, 39, 584, 584, 584, 580, 584, 584, 584,
	580, 580, 580, 584, 580, 554, 554, 580, 580, 580,
	580, 584, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 580, 584, 580, 185,
	580, 580, -390, 364, 580, 11, 12, 570, 571, 572,
	573, 180, 574, 575, 568, 569, 567, 560, 561, 562,
	87, 284, 428, 14, 15, 16, 242, 219, -420, -420,
	-420, 580, -424, -425, 185, 182, 39, -385, -385, -385,
	580, 185, -351, 580, 580, 579, -548, 286, 324, 580,
	-413, -412, 546, -460, -344, 2, -450, -274, -499, -413,
	-413, -351, -419, 248, 248, -378, 531, 339, -380, -450,
	-443, -495, -418, -417, 183, 40, 134, 321, 215, -443,
	-272, -331, -443, -443, -499, -444, -444, -442, 580, -563,
	-495, 580, -345, -453, -542, -336, 581, -499, -199, -543,
	-178, 5, 329, -178, -178, -178, -340, 503, 503, 25,
	365, -469, 577, 578, 8, -499, 579, -493, -493, -493,
	-340, 185, 185, 185, -505, -505, 2, -228, -349, -228,
	-228, -300, -301, -228, -228, -228, -371, 548, -496, -406,
	519, 84, 390, 499, -496, -224, 408, -266, -266, -279,
	-288, -249, 198, 400, 26, 400, 268, 268, -505, 324,
	-410, 212, -230, 324, -469, -273, -249, 579, -394, 550,
	253, 253, 531, -266, -273, 253, 212, -266, 212, -273,
	2, -273, -574, 390, 334, -419, 61, -315, 275, 388,
	325, -225, 408, 448, 354, -126, -126, -126, 579, -587,
	531, 137, -279, -300, -279, -288, -505, -283, 448, 354,
	408, 322, -294, -494, -494, -372, 448, 354, 408, -288,
	-505, -281, -505, -236, -249, -236, 435, -263, 399, 554,
	46, -608, -226, -126, -126, -126, 579, -264, -227, 408,
	5, 212, -266, 5, -266, 212, 5, -249, -266, -288,
	-505, -591, 24, 142, -266, -288, -505, -254, -508, 329,
	527, -572, 435, 503, 503, -455, -122, -193, 548, -122,
	-187, 223, 572, -569, -249, 540, -249, -305, -308, -306,
	-266, -205, -206, 550, 548, 153, -298, -279, 577, -190,
	-508, -279, -289, -290, 153, -331, 324, -508, 39, 153,
	579, 2, 2, -282, 339, 324, -265, 212, -232, 144,
	-608, -263, -413, -344, -369, -404, 417, 339, -332, 536,
	-272, -369, -346, 584, 185, 562, 581, -332, -459, 572,
	-99, -99, -190, 584, 579, 562, 562, 579, -508, -508,
	580, 584, -230, -279, -265, 227, 227, -271, -250, 580,
	584, 581, 579, -198, 343, -197, 145, 255, 240, 457,
	458, 459, 460, 136, -463, -196, -123, 185, 185, -60,
	548, 487, -190, 583, -249, -376, -376, -376, 445, 445,
	-249, -275, -263, -279, -276, -300, 182, 182, -263, 525,
	-400, 340, 280, -446, -223, 556, -279, 583, -419, -419,
	149, 149, -419, -420, -420, -419, 149, 185, 579, -419,
	-430, 34, 34, 580, 584, -415, -419, 580, 539, -336,
	-336, 580, 572, -499, 583, 580, -428, 146, -419, 497,
	293, 210, 291, -389, 291, -389, -389, -493, 5, -499,
	572, -556, -269, 579, -249, 546, -335, 345, 580, -471,
	-469, -419, -419, -419, -419, -419, -493, -474, -474, -489,
	-489, -419, -424, -419, -471, -469, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, 138, 324, 333, -420, -425,
	-424, -419, -419, -469, 580, 580, 580, -351, -99, 579,
	286, -363, 203, -419, -463, 584, -363, -363, 580, -450,
	-450, 579, -419, 248, 578, 584, 586, 562, -331, 581,
	-442, -443, 578, 580, 584, 580, 584, -403, 39, 580,
	-499, -413, -201, -200, 135, 54, 108, 133, 329, -340,
	-340, 342, 5, 8, 577, 578, 581, -493, 580, 580,
	580, -340, -340, -340, -228, -228, 119, 312, -419, 503,
	503, 61, 503, 42, 322, -236, 380, 426, 26, 400,
	400, 153, 324, 533, -527, -522, 151, -419, 579, 227,
	579, 579, 2, -221, 142, 448, -589, 2, 531, 153,
	-228, 153, -228, 552, -315, 579, 579, 503, 435, -242,
	503, 548, -351, -419, -191, 126, -498, -576, 583, -576,
	583, 435, 503, 503, 435, 503, 503, 548, 166, 166,
	554, -236, 548, -351, 503, -473, 49, 27, 324, -282,
	-228, 153, 503, 503, 515, 448, -508, 329, -288, -505,
	-283, 448, 354, 408, -463, -195, 343, -194, 145, 419,
	136, 255, -463, -193, 185, 239, -283, 2, 580, 580,
	584, -528, 39, 337, 337, 579, -279, -80, 548, -462,
	-495, 44, -281, 39, 153, -572, -126, -283, -467, -468,
	5, 39, -279, 153, 339, 324, -233, 262, -608, -503,
	-543, -336, -369, -358, 325, 92, 580, -413, -360, -344,
	-419, 2, 580, -188, -189, -508, -508, -508, -190, -202,
	-202, -411, -309, 579, -265, -250, 579, -202, -267, 2,
	-509, 584, 579, 562, 562, 562, -196, -463, -122, -126,
	343, -279, 572, -376, -321, -320, 358, 333, -321, 426,
	426, 340, 176, 258, -222, -264, -419, -419, 149, 34,
	34, -419, -419, -430, 580, -419, -419, -351, 578, 5,
	-419, 580, 580, 8, -419, 580, 581, -557, -249, -419,
	580, 61, 580, 580, 584, 584, 580, 580, 580, 580,
	580, 580, 580, -425, 185, 138, 333, 579, 580, 580,
	-99, -427, 206, 61, -450, -427, -427, -378, -340, -450,
	-417, -264, 577, -499, -495, -453, 579, 581, -200, 562,
	-508, -508, 578, 2, 577, -499, 580, 119, -266, -266,
	487, 426, 322, -236, 380, 426, 399, 268, 26, 26,
	-410, 153, -529, 94, -531, 77, 168, 103, 324, 329,
	521, 380, 73, 126, 396, -600, 39, 559, 580, -338,
	-447, -542, 579, -249, -338, -340, 324, 475, 126, 324,
	126, 119, 515, 80, -266, -273, -340, -340, -279, -288,
	-505, 160, 580, 584, 562, 2, 572, 572, -288, -505,
	-283, -288, -505, -281, 356, 166, 160, 580, -264, 5,
	5, 153, -261, 77, -266, 5, -266, -282, 119, 435,
	503, 503, -193, 584, 579, 562, 562, -193, -509, -122,
	-331, -322, 229, -266, -526, -523, -524, 380, -530, -532,
	168, 380, -126, 2, -204, -203, -249, 5, 579, -307,
	343, 578, -505, -373, -126, -283, -331, 580, 584, 147,
	-395, 531, -264, -279, 153, -234, 261, -608, -503, -231,
	-398, -396, 139, 579, 339, -126, -336, 562, 580, 580,
	119, 119, 221, 152, -338, 579, 579, -340, 119, 580,
	-197, -198, -508, -122, -508, -196, -61, -62, 227, 94,
	363, -276, 487, 227, 579, 579, -222, -419, -419, -419,
	580, -336, -499, 572, -551, 358, 580, -446, -419, -419,
	-420, 185, 579, -430, 580, -552, 547, -419, -364, -365,
	-419, 425, 109, 204, -552, -552, 580, -495, 2, -508,
	577, 2, 219, 39, 399, 268, 39, 503, 39, -410,
	-273, -277, -270, -249, 168, 212, 329, 544, -394, 253,
	579, -420, -279, 579, 2, 31, -601, 130, 232, 580,
	584, -448, -260, -249, -419, -448, 580, 580, 329, 329,
	-419, -469, 579, -228, -228, 580, 580, -419, 503, -498,
	101, -496, 2, -576, -263, -419, 503, 5, -228, -277,
	-228, -228, -261, 515, -288, -505, -283, -194, -195, -508,
	-122, -193, 39, -312, 231, 2, -528, 253, -270, 253,
	-599, 548, 580, 584, 562, 562, -305, -205, -81, -82,
	504, -462, -331, 39, 5, 579, 579, -249, 339, 579,
	-264, -244, 93, -608, -503, -232, -369, 325, -340, 94,
	-398, -426, -190, 579, 579, -310, 82, 95, 127, 211,
	188, 228, 468, 473, 29, -310, 580, -338, -338, 580,
	579, -190, 580, 584, 29, 579, 29, 579, -279, -300,
	-351, -351, 580, -336, 61, 584, 580, 580, -420, -430,
	580, -553, -554, -269, 584, 579, 579, 449, 578, 2,
	-236, 380, -249, 39, -249, -236, 380, -249, -531, -270,
	324, 531, -419, -251, 579, -419, 39, 232, 131, 217,
	-409, -602, 102, 476, 220, -447, -222, 580, -408, 531,
	396, -261, -338, 579, 579, 579, 562, 185, 579, -473,
	-228, -282, 580, -581, 394, -126, -316, -317, 219, 579,
	-311, 339, 119, 312, -203, -496, -496, 580, 39, -82,
	9, 39, -126, -467, -338, -279, -338, 339, -238, -237,
	270, -503, -233, 580, -273, -369, -509, -509, -408, 580,
	580, -509, -62, -340, -340, 580, 580, -558, 388, 427,
	205, -351, -337, 580, 584, 39, -365, 2, 2, 2,
	399, -249, 399, 153, 207, 580, -533, 285, -249, 580,
	131, 217, -312, 579, -223, -448, -312, 207, -279, -577,
	531, 580, -324, -323, -320, -326, -325, -320, -351, -496,
	101, 356, -351, -261, -584, 186, -583, 5, 10, -205,
	356, -339, -449, -266, 83, 119, -322, -126, -126, 580,
	580, -395, 580, -279, -235, -510, 399, 401, -608, -234,
	-413, 580, 580, -409, -408, -318, -314, 580, 580, 580,
	580, -559, -560, 51, 518, 110, -419, -559, -559, -554,
	-556, 168, 548, -534, -537, -536, 339, 455, 186, 357,
	580, 475, 543, -318, -340, 548, -331, -419, -408, 580,
	584, 536, 580, 584, 536, 580, 185, 580, -228, -192,
	548, 47, -311, -279, 580, 584, 379, 132, 142, -312,
	-599, -408, 579, -409, 579, -241, -240, -608, -489, -244,
	139, -190, -190, -312, -409, -206, 548, -190, -561, 151,
	-560, 376, 181, 426, 376, 181, -561, -561, -270, 56,
	-536, 339, -537, 339, 525, 132, -601, 580, 56, -533,
	-312, -323, 219, -325, 185, 356, 433, -583, 31, -243,
	-242, 579, -449, 427, 427, 2, -316, -311, -409, -338,
	-312, -338, -239, -340, -238, 325, 525, -318, -312, -413,
	110, 203, 498, 312, 34, 562, -535, 312, 415, 65,
	448, -535, -413, 562, -534, 579, 579, 343, -340, 2,
	-205, -312, 580, -318, 580, -235, 448, -206, -318, 426,
	347, -560, -419, 23, 329, 126, -419, -601, -351, -351,
	-189, 579, 580, -311, -318, -408, -206, -409, -241, -359,
	-413, -206, 580, 580, -189, -229, 65, 415, -243, -206,
	-409, -413, -312, -413, -413, -313, -314, 503, 580, -413,
	-312, -318, 579, -318, -206, -351, -206, -413, 580, -413,
	-313,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 511, 512, 514, 515, 516, 518,
	519, 521, 523, 525, 526, 527, 529, 530, 532, 533,
	534, 535, 536, 538, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	602, 604, 0, 1303, 1305, 1307, 1309, 0, 745, 0,
	36, 37, 0, -2, 309, 311, 313, 0, 339, 341,
	342, 344, 346, 348, -2, 0, 446, 447, 449, 451,
	-2, 0, 932, 934, 0, 591, 593, 0, 937, 939,
	0, 0, 613, 614, 0, 1410, -2, 607, 609, 611,
	676, 678, 680, 682, 684, 686, 688, 690, 692, 693,
	695, 697, 699, 701, 703, 704, 706, 708, 710, 711,
	713, 714, 716, 718, 720, 722, 724, 726, 728, 730,
	732, 734, 736, 738, 740, -2, 742, -2, -2, 0,
	-2, -2, -2, 1321, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 397, 398, 400, 402, 404, 406, 409,
	411, 413, 1468, 453, 455, 457, 459, 461, 463, 465,
	0, -2, 1482, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 100, 101, 102, 103,
	104, 105, 106, 107, 72, 73, 74, 76, 77, 78,
	79, 83, 84, 85, 86, 87, 88, 89, 90, 98,
	70, 0, 0, 1441, 1443, 1445, 1447, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 513, 517, 520, 522, 524, 528, 531, 537,
	539, 541, 498, 499, 502, 2146, 2163, 2164, 2165, 2168,
	2169, 2170, 2171, 2172, 2173, 2610, 2692, 2693, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 500, 501, 1109, 0, 565, 563, 2131,
	566, 2414, 568, 570, 440, 441, 442, 443, 444, 445,
	0, 584, 576, 1480, 585, 587, 588, 589, 590, 560,
	558, 0, 584, 2199, 582, 1301, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 376, 1158,
	1159, 1160, 1286, 1287, 2458, 1328, 0, 216, 603, -2,
	-2, -2, 2575, -2, 635, -2, 642, 2579, 2460, 647,
	0, 649, -2, 652, 1304, 1306, 1308, 743, 744, 2149,
	0, 0, 0, 0, 0, 38, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	226, -2, -2, -2, -2, 0, 0, 2504, 2251, 2099,
	2165, 2102, 2097, 310, 312, 314, 315, 0, 0, 0,
	0, 0, 0, 340, 343, 345, 347, -2, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	993, 985, 986, 1216, 0, 0, 0, -2, 448, 450,
	503, 504, 0, 1469, 1469, -2, 0, 0, 0, 0,
	281, 272, 933, 935, 936, 0, 0, 0, 0, 592,
	594, 0, 0, 254, 938, 940, 941, 0, 0, 0,
	0, 0, 283, 0, 0, 608, 610, 612, 677, 679,
	681, 683, 685, 687, 689, 691, 694, 696, 698, 700,
	702, 705, 707, 709, 712, 715, 717, 719, 721, 723,
	725, 727, 729, 731, 733, 735, 737, 739, 741, 751,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 839, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 914, 0, 754, 756, 757, 758, 0, 817,
	837, 838, 847, 0, 1149, 1470, 1330, 1311, 1325, 1330,
	1313, 1314, 1315, 1316, 1317, 1322, 1324, 1318, 1319, 1320,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 399,
	401, 403, 405, 407, 410, 412, 414, -2, 1439, 1440,
	454, 456, 458, 460, 462, 464, 466, 595, 0, 597,
	0, 755, -2, 0, 1474, 1474, 1474, 0, 0, 1440,
	1438, 0, 600, 601, 656, 657, 1742, 0, 0, 0,
	0, 0, 0, 0, 1996, 1828, 0, 658, -2, 1859,
	1861, 2550, 2575, 1995, 1863, 1864, 1865, 1866, 1867, 0,
	1869, 1870, 1871, 1872, 1873, 1874, 0, 1876, 0, 1881,
	1882, 1883, 0, 2557, 2076, 2159, -2, 0, 0, 2563,
	2155, 0, 1962, 1899, -2, -2, 2182, 2161, 1674, 1675,
	1676, 1677, 1678, -2, -2, 2593, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 0, 2538, 2558,
	2559, 2564, 2566, 2560, 2547, 1924, 2264, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1701, 1710, -2, -2, -2, -2, -2, -2, -2, 2551,
	2552, 2569, 2572, 2578, 2583, 2584, 2556, 2565, 2592, 2594,
	2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604,
	2605, 2606, 2607, 2608, 2609, 1702, -2, -2, -2, -2,
	1457, 2427, 1460, 1109, 1458, 1442, 1444, 0, 1446, 0,
	0, 0, 1451, 1477, 1475, 0, 1526, 1455, 1456, 1544,
	1544, 1568, 0, 1549, 0, 1568, 1469, 1595, 0, 1555,
	2450, 1900, 1901, 0, 2165, 2160, -2, -2, 2590, 0,
	0, 0, 0, 0, 0, 0, 561, 0, 567, 569,
	0, 0, 0, 583, 1479, 0, 0, 0, 0, 0,
	0, 0, 379, 380, 381, 382, 383, 2558, 0, 0,
	0, 388, 0, 390, 391, 392, 393, 394, 395, 396,
	185, 2558, 471, 496, 0, 185, 2558, 474, 185, 2558,
	477, 0, 480, 1214, 185, 2558, 483, 2127, 185, 2558,
	486, 488, 2135, 185, 2558, 492, 2142, 2140, 493, 2558,
	495, 286, 284, 285, 2178, 2179, 2186, 2187, 2188, 2189,
	2591, 2593, 1297, 1298, 1299, 1300, 0, 1327, 1215, 605,
	606, 0, 630, 0, 634, 2546, -2, 0, 2469, -2,
	638, 1331, 1335, 1336, 1337, 1338, 1339, 0, 0, 0,
	0, 1344, 0, 0, 644, 0, 0, 631, 632, 650,
	653, 0, 746, 747, 748, 749, 750, 69, 0, 2558,
	1595, 71, 0, 2121, 2190, 2191, 2192, 2193, 2194, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	75, 0, 2558, 80, 0, 2558, 0, -2, 91, 0,
	99, 0, 2124, 108, 0, 2558, 0, 2096, -2, 0,
	197, 0, 960, -2, 2558, 1157, 0, 0, 0, 0,
	923, 2093, 2098, 924, 2117, 925, 2103, 0, 316, 317,
	318, 319, 320, 0, 321, 2558, 323, 324, 0, 326,
	327, 2558, 329, 330, 0, 332, 0, 237, 238, 2558,
	351, 352, 0, 354, 355, 0, 357, 0, 0, 0,
	361, -2, 377, 0, 374, 364, 365, 367, 368, 369,
	370, 371, 0, 418, 416, 2132, 0, -2, 2558, 0,
	957, 0, 0, 1194, -2, 2558, 1154, 0, 1201, 2558,
	1197, 0, -2, 0, 1467, 2558, 1348, 989, 990, 991,
	992, 1607, 437, 0, 1375, 0, 1377, 0, 1396, 1601,
	1544, 0, 0, 1606, 0, -2, 554, 2148, -2, 506,
	0, 507, 0, -2, 0, 298, 0, 0, 942, 943,
	944, 945, 946, 949, 950, 951, 952, 1581, 255, 257,
	0, 0, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 0, 0, 615, 0, 0, 752, 753, 0, 0,
	763, 764, 765, 0, 298, 2461, 2423, 2285, 772, 0,
	775, 778, -2, 0, 0, 0, 0, 782, 0, 787,
	788, 789, 0, 0, 793, 795, 931, 797, 0, 0,
	799, 0, 803, 0, 806, 0, 808, 0, 810, -2,
	-2, -2, 818, 819, -2, 823, -2, 0, 826, 828,
	0, 830, -2, 0, 839, 835, 836, 0, 0, 0,
	0, 855, 856, 0, 865, 0, 868, 869, 870, 0,
	872, 873, 0, 875, 876, 877, 878, 0, 0, 881,
	882, -2, -2, 886, 888, 0, 895, 0, 901, 0,
	905, 0, 0, 913, 0, 759, 760, 185, 1599, 1310,
	-2, 1312, 0, -2, 0, 596, 0, 599, 1499, 1425,
	1422, 0, 1496, 1497, 1426, 0, 0, 0, 1433, 0,
	1472, 1473, 0, 0, 0, 1412, 1413, 0, 0, 0,
	0, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010, 2007,
	2008, 2011, 2012, 0, 0, 0, 0, 0, 2013, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 2015, 2016, 0, 0, 2018, 0, 2020, 0, 0,
	0, 0, 0, 0, 1807, 1809, 2084, 0, 0, 2017,
	1747, 1748, 1749, 1750, 1751, 1786, 1787, 0, 0, 1860,
	2081, 2080, 1862, 0, 2032, 0, 1875, -2, 0, 1996,
	2027, 0, 0, 1884, 1885, 1886, 0, 0, 2032, 0,
	0, 2075, 1896, 1897, 1739, 0, 0, 1964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1688, 1687, 0, 1689, 0,
	1690, 1691, 1698, 1711, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 2056, -2, 0, 0,
	0, 0, 1703, 0, 1459, 0, 0, 1530, 2085, 2089,
	2090, 1530, 1530, 0, 0, 2033, 1592, 1592, 0, 0,
	1587, 1587, 1587, 1585, 1568, 0, 1568, 1578, 0, 1568,
	1568, 0, -2, 1549, 0, 0, 1578, 0, 1562, 542,
	544, 546, 548, 549, 550, 552, 1596, 1597, 0, 0,
	0, 0, 2166, 0, 0, 0, 0, 0, 2151, 0,
	0, 0, 0, 2514, 2460, 572, 586, 1469, 0, 2035,
	1622, 1626, 0, 1628, 1629, 1630, 1631, 1632, 0, 0,
	1623, -2, 1699, 1701, 1722, 2183, 2184, 2185, 1682, 1683,
	1684, 1685, 1686, 1694, 1681, 1681, 1681, 1692, 1721, 1713,
	1721, 1717, 1667, 1668, 1669, 1704, 1705, 1706, 1707, 0,
	2514, 2460, 578, 0, 0, 1407, 201, 203, 204, 205,
	206, 207, 378, 0, 385, 386, 387, 0, 467, 0,
	183, 184, 0, 185, 2558, 472, 0, 475, 0, 185,
	2558, 2091, 481, 0, 484, 0, 0, 490, 0, 0,
	0, 0, 0, 185, 1409, 0, 0, 0, 0, -2,
	640, 645, 646, 0, 1333, 0, 1340, 667, 668, 669,
	1342, 1343, 0, 1345, 643, 670, 671, 672, 673, 674,
	675, 0, 2105, 2106, 2107, 2108, 2111, 2112, 0, 0,
	641, 660, 648, 0, 654, 109, 1283, 0, 0, 148,
	0, 1283, 1283, 0, 0, 0, 0, 172, 0, 1028,
	0, 0, 0, 0, 0, 133, 144, 121, 122, 0,
	0, 0, 0, 0, 0, 81, 1131, 0, 1134, 0,
	0, 0, 0, 0, 0, 0, 1147, 0, 0, 0,
	0, 0, 0, 0, 95, 96, 0, 132, 0, 0,
	1372, 0, 127, 111, 0, 0, 0, 134, 146, 0,
	176, 178, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 208, 0, 0, 0, 1155, 0, 1466, 0,
	0, 2558, 0, 1581, 2331, -2, -2, 255, 1581, 922,
	0, 0, 2166, 2101, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 356, 358, 359, 360, 0, 1193, 0,
	366, 408, 1080, 2558, 0, 0, 435, 430, 0, 432,
	0, 0, 1130, 2558, 1128, 2136, 0, 1152, 0, 1109,
	2558, 2134, 0, 0, 0, 1202, 2175, 1211, 1215, 1362,
	0, 439, 0, 1378, 1380, 0, 0, 1602, 0, 1604,
	1544, 1469, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 261, 0, 1580, 0, 0, 1581, 255,
	2438, 298, 298, 1581, 617, 1581, 619, 0, 0, 766,
	767, 0, 298, 298, 298, 773, 774, 776, 777, -2,
	-2, -2, 896, 779, 780, 862, 0, 0, 0, 861,
	792, 796, 0, 916, 2446, 2460, 2514, 929, 862, 2251,
	862, 2251, 862, 2251, 807, 809, 812, 850, 858, 822,
	827, 0, 0, 832, 840, -2, 0, 842, 0, 844,
	0, 846, 862, 863, 866, 871, 874, 879, 880, 0,
	897, 898, 0, 0, 0, 0, 0, 0, 908, 909,
	0, 0, 1148, 0, 1323, 1499, 1425, 598, 1416, 1498,
	1417, 1424, 1427, 0, 0, 1429, 0, 1431, 0, 1494,
	1495, 1502, 1503, 0, 1513, 1514, 1506, 0, -2, 0,
	0, 1509, 1510, 1435, 0, 1452, 1453, 1454, 1483, 1486,
	1230, 0, 2692, 1743, 1617, 1744, 1745, 2120, 0, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, -2,
	-2, -2, -2, -2, -2, -2, -2, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, -2, -2,
	-2, 1784, 1785, -2, 2019, 2021, 0, 2084, 0, -2,
	0, -2, -2, -2, -2, 1804, 0, 1806, 1811, 1813,
	1815, 0, 0, 0, 0, 2083, 1825, 2067, 2068, 0,
	0, 1998, 1999, 2000, 1810, 0, 1829, 2082, 2079, 0,
	0, 2031, 1482, 1888, 0, 0, 0, 0, 1895, 1880,
	2029, 0, 2028, 0, 0, 0, 2039, 0, 2074, 2070,
	0, 2118, 1738, 1725, 1726, 1727, 1728, 1729, 1730, 1740,
	0, 2115, 2152, 2158, 1972, 0, 0, 0, 1925, 1926,
	1927, 1928, 1929, 0, 1931, 1932, 0, 1934, 1935, 0,
	1937, 1938, 0, 1940, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 1639, 0, 0,
	0, 1643, 0, 0, 0, 1647, 0, 0, 0, 1651,
	0, 0, 0, 1655, 0, 0, 0, 1659, 0, 0,
	0, 1663, 0, 0, 0, 0, 0, 1944, 0, 2042,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 1946,
	0, 1948, 2033, 2053, 0, 0, 1830, 0, 0, 0,
	1996, 0, 1951, 2033, 2061, 0, 0, 0, 0, 0,
	2033, 0, 2066, 0, 1958, 0, 1960, 1461, 0, 0,
	1612, 0, 0, 0, 2088, 1612, 1612, 0, 1525, 0,
	0, 1588, 1589, 1590, 1591, 0, 0, 1592, 0, 1582,
	1586, 1583, 1584, 1578, 1541, 0, 0, 2122, 1578, 1547,
	1577, 0, 1109, 1567, 1578, 1578, 0, -2, 1551, 1568,
	0, 0, 543, 545, 547, 551, 553, 0, 0, 1482,
	-2, 0, -2, 1108, 0, 0, 0, 0, 562, 564,
	0, 0, 487, 0, 0, 556, 0, 559, 0, 1613,
	1616, 0, 0, 1627, 1633, 1634, 0, -2, 0, 0,
	1723, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	497, 185, 469, 0, 185, 185, 478, 0, 0, 185,
	489, 185, 2143, 185, 2141, 287, 494, 1408, 219, 0,
	633, 0, 1332, 1341, 0, 664, 0, 666, 0, 2109,
	2113, 2110, 2114, 0, 655, 0, 0, 0, 0, 1282,
	0, 1237, 0, 0, 0, 0, 0, 0, 152, 2558,
	0, 187, 0, 0, 1073, 2128, 0, 1065, 0, 0,
	2271, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1132, 1133, 1135,
	1142, 1144, 0, 1138, 2116, 0, 0, 1139, 0, 1141,
	1143, 1145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 1371, 1372, 0, 0, 0,
	120, 124, 0, 0, 0, 0, 2095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1189, 1187, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 0, 0, -2, 0, 0, 0, 0, 0,
	229, 0, 289, 2094, 2104, 0, 947, 948, 322, 325,
	328, 331, 225, 0, 362, 0, 0, 995, 970, 0,
	0, 417, 298, 0, 0, 431, 2145, 955, 1126, 1129,
	0, 1109, 2558, 1166, 0, 0, 0, 0, 0, 0,
	1200, 0, 0, 2558, 2123, 2174, 2175, 1364, 1372, 0,
	1612, 0, 1394, 1381, 0, 0, 0, 1394, 1398, 1399,
	1401, 1402, 0, 0, 1603, 1609, 505, 555, 1469, 1469,
	298, 296, 2391, 294, 291, 293, 0, 0, 0, 996,
	998, 999, 1000, 187, 0, 2175, 1065, 2320, 2175, 0,
	1384, 1386, 0, 249, 0, 258, 1581, 256, 261, 0,
	0, 0, 429, 616, 621, 761, 0, 298, 769, 770,
	771, 814, 852, 860, 781, 783, 784, 785, 0, 0,
	930, 926, 927, 928, 798, 862, 801, 862, 804, 862,
	825, 829, 834, 841, 0, 0, 0, 854, 0, 0,
	0, 0, 0, 0, 0, 902, 903, 904, 906, 911,
	910, 915, 1600, 1420, 1421, 1423, 0, 1432, 0, 0,
	1508, -2, -2, 1507, 1511, 1512, -2, -2, -2, -2,
	1428, 0, 1437, 1434, 0, 1493, 1228, 1229, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1826, 0, -2,
	1805, 1808, 1812, 1814, 1816, 0, 0, 0, 0, 0,
	0, 2022, 0, 2024, 1827, 2077, 2080, 1994, 0, 0,
	1481, 1482, 1482, 0, 1894, 0, 2030, 0, 2037, 2038,
	0, 1887, 0, 2071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1898, 0, 0, 0, 0, 1930, 1933,
	1936, 1939, 0, 0, 0, 0, 1919, 0, 0, 0,
	1923, 1693, 1679, 0, 1721, 1719, 1720, 1714, 1721, 1718,
	1671, 0, 1636, 1637, 1638, 1640, 1641, 1642, 1644, 1645,
	1646, 1648, 1649, 1650, 1652, 1653, 1654, 1656, 1657, 1658,
	1660, 1661, 1662, 1664, 1665, 1666, 1670, 0, 1943, 0,
	1945, 1947, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1834,
	1835, 1950, 2059, 2060, 0, 0, 0, 0, 0, 0,
	1956, 0, 2065, 1957, 1959, 1469, 0, 1462, 0, 1527,
	1516, 1611, 0, 2086, 1581, 1529, 1531, 2087, 2125, 1516,
	1516, 0, 2034, 0, 0, 1572, 0, 0, 0, 1574,
	1545, 0, 0, 1539, 0, 1535, 1536, 1537, 1538, 1546,
	1109, 1576, 1548, 1552, 2152, 0, 1578, 0, 1563, 0,
	1565, 1598, 0, 1557, 1560, 0, 0, 2167, 1612, 0,
	333, 337, 338, 334, 335, 336, 571, 0, 0, 0,
	0, 2036, 0, 1618, 0, 1624, 0, 0, 0, 0,
	577, 0, 0, 0, 202, 1406, 384, 468, 185, 473,
	476, 2092, 185, 482, 485, 491, 215, 0, 629, -2,
	662, 663, 665, 0, 661, 149, 1283, 0, 0, 1233,
	1235, 2139, 1239, 0, 0, 0, 0, 0, 1260, 0,
	154, 2558, 163, 0, 1044, 0, 2126, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 2558, 185, 2558, 185,
	166, 168, 171, 0, 175, 173, 0, 1032, 0, 0,
	1035, 110, 1283, 0, 0, 113, 117, 125, 0, 0,
	0, 131, 0, 0, 0, 1262, 1266, 1274, 0, 0,
	0, 1136, 1137, 1140, 1146, 82, 0, 0, 0, 1270,
	1272, 1278, 92, 93, 2137, 94, 0, 1232, 0, 0,
	0, 0, 177, 115, 119, 126, 0, 1280, 112, 0,
	200, 0, 0, 190, 185, 2558, 0, 192, 0, 193,
	194, 209, 0, 0, 0, 958, 959, 1188, 1150, 1151,
	0, 1156, 0, 0, 0, 0, 1581, 221, 0, 1581,
	229, 0, 2100, 0, 350, 0, 0, 0, 0, 994,
	1091, 0, 965, 0, 0, 0, 423, 419, 0, 428,
	434, 433, -2, 0, 0, 0, 0, -2, 0, 0,
	1204, 1198, 1199, 0, 0, 0, 0, 2558, 1366, 1372,
	0, 1467, 1482, 438, 1373, 1394, 0, 0, 0, 1383,
	1379, 1376, 1612, 0, 0, 0, 0, 0, 1605, 1608,
	508, 509, 273, 0, 0, 0, 0, 0, 298, 0,
	0, 0, 1001, 1005, 0, 2175, 2175, 0, 2130, 0,
	0, 0, 0, 259, 0, 262, 0, 0, 0, 267,
	268, 269, 270, 271, 261, 251, 1581, 0, 0, 618,
	0, 0, 768, 0, 791, 800, 802, 805, 843, 845,
	862, 889, 890, 1022, 0, 1022, 0, 0, 907, 1430,
	0, 1505, 1436, 1487, 1488, 0, 1230, 0, 1746, 1789,
	0, 0, -2, 0, 0, 1793, 0, 0, 0, -2,
	0, 0, 0, 2023, 2025, 0, 2079, 1889, 0, 0,
	0, 1893, 1877, 1878, 0, 1997, 2040, 2069, 2073, 0,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 0, 2119, 2153,
	2157, 1970, 1971, 1975, 2133, 0, 0, 0, 1902, 0,
	0, 0, 0, 0, 0, 0, 0, 1712, 1716, 0,
	0, 2041, 2052, 2054, 1831, 1832, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, -2, -2, -2, 1849,
	1850, 1851, -2, -2, -2, 0, 0, 0, 2055, 2057,
	2058, 2062, 2063, 0, 1953, 1954, 1955, 2064, 0, 1469,
	1463, 1524, 0, 1610, 1528, 0, 1524, 1524, 1476, 1570,
	0, 0, 1594, 0, 1542, 0, 1543, 0, 1575, 0,
	1550, 1553, 1554, 1564, 0, 1556, 0, 1559, 0, 1889,
	-2, 299, 300, 302, 0, 305, 306, 0, 0, 574,
	575, 573, 557, 0, 0, 1620, 0, 0, 1696, 1700,
	1724, 580, 581, 579, 470, 479, 217, 0, 1579, 0,
	0, 0, 0, 2205, 1250, 1251, 0, 2575, 1255, 0,
	0, 0, 0, 186, 1042, 1072, 0, 0, 0, 1064,
	0, 0, 1078, 156, 0, 0, 0, 164, 0, 0,
	161, 0, 170, 174, 1029, 0, 0, 0, 0, 1238,
	0, 0, 0, 128, 129, 130, 0, 135, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 1357,
	0, 1351, 0, 0, 0, 188, 0, 0, 0, 1227,
	211, 0, 0, 0, 0, 0, 1191, 1192, 1263, 1267,
	1275, 0, 0, 0, 229, 227, 0, 230, 0, 233,
	234, 0, 229, 223, 0, 0, 1109, 363, 968, 1079,
	0, 1081, 0, 966, 0, 0, 1080, 415, 0, 422,
	0, 0, 1130, 0, 0, 1153, 1164, 1109, 0, 1203,
	1205, 0, 1213, 0, 0, 0, 1368, 1372, 0, 1361,
	1362, 1501, 1374, 1392, -2, 0, 0, 1482, 1400, 1397,
	1403, 1404, 0, 295, 0, 290, 292, 0, 276, 0,
	0, 997, 1002, 0, 0, 0, 0, 0, 1385, 1387,
	0, 0, 0, 0, 0, 0, 250, 261, 253, 282,
	0, 762, 786, 853, 891, 1021, 0, 0, 893, 0,
	0, 1504, 1491, 1492, 1489, 1230, 1791, 1795, 0, 0,
	0, 1797, -2, 0, 1819, -2, -2, 2026, 2078, 1868,
	1482, 1890, 1892, 1879, 2072, 1741, 0, 1977, 1974, 0,
	1961, 0, 1914, 1915, 0, 0, 1918, 1920, 1921, 1922,
	1680, 1673, 1672, 2051, 0, 0, 0, 0, 1952, 1464,
	0, 1966, 0, 0, 1532, 1966, 1966, 1571, 0, 1573,
	1540, 1533, 0, 2153, 1566, 1558, 0, 0, 303, 0,
	307, 308, 1614, 1619, 0, 1625, 1695, 218, 150, 151,
	1242, 1243, 1245, 1246, 0, 0, 1252, 1253, 0, 1258,
	153, 0, 1043, 0, 1046, 0, 0, 0, 0, 1053,
	1065, 0, 0, 0, 0, 0, 1066, 0, 1095, 0,
	1218, 1225, 0, -2, 0, 0, 0, 158, 180, 0,
	0, 1284, 0, 0, 185, 185, 0, 0, 1234, 1236,
	1261, 0, 0, 0, 0, 138, 0, 0, 1264, 1268,
	1276, 1271, 1273, 1279, 0, 1358, 0, 0, 1281, 198,
	199, 0, 185, 0, 185, 191, 185, 1227, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 222, 288, 229,
	0, 1016, 0, 1091, 1083, 1084, 1085, 0, 1090, 1092,
	0, 0, 982, 967, 0, 978, 0, 0, 995, 970,
	0, 420, 956, 1127, 1161, 1109, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 1370, 1372, 0, 1363, 1364,
	1394, 1500, 0, 0, 0, 1382, 1501, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	263, 0, 264, 265, 266, 252, 620, 622, 0, 0,
	628, 1020, 0, 0, 0, 0, 1490, 1799, -2, -2,
	1820, 0, 2154, 2156, 1482, 0, 1963, 1484, 0, 0,
	-2, 0, 0, 0, 1465, 1448, 0, 1523, 1515, 1517,
	1519, 2449, 2247, 2557, 1449, 1450, 1593, 0, 1561, 304,
	0, 1621, 0, 0, 1247, 1248, 0, 0, 0, 155,
	0, 1047, 1048, 2129, 1050, 0, 1052, 1054, 1055, 1056,
	0, 1059, 2177, 0, 1063, 0, 1074, 1096, 0, 1105,
	0, 1220, 1230, 1224, 0, 1222, 1107, 0, 157, 159,
	179, 1227, 0, 160, 169, 0, 0, 114, 0, 0,
	2241, 141, 139, 137, 1231, 116, 0, 200, 210, 1226,
	212, 195, 185, 0, 1265, 1269, 1277, 231, 0, 232,
	235, 0, 0, 1031, 0, 969, 1082, 0, 1093, 1094,
	972, 0, 971, 0, 0, 0, 0, 0, 421, 424,
	0, 427, 0, 0, 1206, 1204, 0, 1212, 0, 0,
	0, 1350, 0, 0, 1365, 1366, 436, 1388, 0, 0,
	1394, 1405, 275, 0, 0, 1003, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1004, 1107, 0, 0, 1071,
	0, 280, 260, 0, 624, 0, 626, 0, 892, 894,
	0, 0, 1891, 1981, 0, 0, 1916, 1917, -2, 0,
	1857, 1965, 1967, 0, 0, 0, 0, 0, 1534, 1615,
	1240, 0, 1244, 0, 1254, 1256, 0, 1259, 1045, 1049,
	0, 0, 0, 1113, 0, 0, 1067, 0, 1099, 1100,
	1016, 0, 1101, 1102, 1103, 1219, 1493, 1225, 1016, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 189,
	213, 1227, 228, 245, 0, 1162, 970, 1030, 0, 0,
	980, 0, 983, 0, 979, 976, 977, 968, 0, 425,
	426, 0, 1165, 0, 0, 1213, 0, 0, 1353, 1349,
	1372, 1367, 1368, 1612, 1391, 1395, 0, 0, 1105, 1107,
	1027, 0, 623, 0, 0, 899, 900, 0, 0, 0,
	0, 1976, 1485, 1858, 0, 0, 1518, 1520, 1521, 1522,
	1241, 1249, 1257, 0, 0, 1058, 1118, 0, 0, 0,
	1097, 1098, 1027, 0, 1223, 1221, 1076, 0, 1109, 162,
	0, 1107, 0, 1036, 0, 0, 1039, 0, 0, 142,
	2241, 140, 0, 185, 248, 0, 242, 240, 241, 972,
	0, 0, 1087, 1089, 0, 984, 1016, 982, 1163, 1196,
	1107, 0, 1105, 0, 1360, 1372, 1354, 1355, 0, 1370,
	0, 298, 298, 1016, 1105, 970, 1026, 298, 625, 627,
	1973, 1993, 1982, -2, 2517, 2248, 0, 1993, 1993, 1968,
	1969, 0, 0, 1060, 1114, 1115, 0, 1110, 1111, 1112,
	2176, 1061, 1062, 1095, 0, 0, 1113, 181, 1016, 1033,
	0, 0, 1034, 0, 0, 145, 0, 147, 214, 236,
	0, 0, 964, 0, 1086, 0, 0, 0, 0, 1031,
	972, 1105, 0, 1016, 0, 1346, 1359, 0, 1369, 1350,
	0, 277, 278, 1027, 1016, 1612, 0, 279, 1978, 0,
	0, 1984, 1985, 1986, 1987, 1988, 1979, 1980, 1051, 0,
	1116, 0, 1117, 0, 0, 0, 1612, 1104, 0, 1118,
	167, 1037, 0, 1040, 0, 143, 0, 243, 244, 961,
	963, 0, 1088, 973, 0, 975, 970, 981, 1016, 0,
	1027, 0, 1352, 2138, 1353, 1389, 0, 970, 1027, 1070,
	0, 1990, 1991, 0, 0, 0, 1119, 0, 1122, 1123,
	0, 1120, 1075, 0, 1095, 0, 0, 0, 0, 974,
	972, 1027, 1107, 970, 1105, 1360, 0, 1612, 970, 1989,
	1992, 1983, 1057, 1121, 1124, 1125, 1106, 1077, 0, 0,
	246, 0, 1019, 964, 970, 1105, 1612, 1016, 1347, 1612,
	1068, 1612, 1024, 0, 0, 1015, 1017, 1018, 962, 1612,
	1016, 1209, 1027, 1390, 1069, 1038, 1023, 0, 247, 1207,
	1027, 970, 0, 970, 1612, 0, 1612, 1210, 1024, 1208,
	1041,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 568, 3, 574, 569, 3,
	579, 580, 572, 570, 584, 571, 581, 573, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 587, 3,
	560, 562, 561, 565, 583, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 577, 3, 578, 575, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 585, 567, 586, 563,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 564, 57903, 566, 57904, 576,
	57905, 582, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1294
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1304
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1321
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1330
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1401
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1427
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1441
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1459
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1463
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1562
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1598
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1602
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1612
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1618
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1638
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1648
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1656
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1680
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1691
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1698
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1725
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1753
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1774
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1784
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1793
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1804
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1810
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1841
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1961
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1964
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1970
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1985
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1992
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2022
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = nil
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = nil
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2088
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2185
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2189
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2192
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2227
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2232
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2239
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2247
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2278
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 220:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2361
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2369
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2396
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = nil
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2524
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = nil
		}
	case 249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2763
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2772
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2778
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2783
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2788
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2793
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2798
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2802
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2821
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2829
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2847
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = nil
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2905
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2967
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2968
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2969
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2970
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3060
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3105
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3122
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			return helpWith(sqllex, "CREATE")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3139
		{
			return unimplemented(sqllex, "create access method")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplemented(sqllex, "create cast")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3146
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3149
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			return unimplemented(sqllex, "create operator")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3151
		{
			return unimplemented(sqllex, "create publication")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplemented(sqllex, "create rule")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			return unimplemented(sqllex, "create server")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3161
		{
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3164
		{
		}
	case 375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3165
		{
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3168
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3169
		{
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3172
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3180
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3181
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3183
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3185
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3186
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			return unimplemented(sqllex, "drop server")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3190
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3194
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3196
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3197
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3198
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3200
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3271
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3310
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3345
		{

			sqlVAL.union.val = nil
		}
	case 436:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "DELETE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3373
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3399
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "DROP")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3405
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3535
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3599
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3665
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3689
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3697
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3715
		{
			return helpWith(sqllex, "DELETE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			return helpWith(sqllex, "INSERT")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "DELETE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "INSERT")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3774
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3807
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			return helpWith(sqllex, "GRANT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3951
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3979
		{
			return helpWith(sqllex, "RESET")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "RESET")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "USE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4025
		{
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4026
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4032
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4033
		{
			return helpWith(sqllex, "USE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4254
		{
			return unimplemented(sqllex, "set from current")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4268
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = tree.Low
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = tree.Normal
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = tree.High
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4428
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4435
		{
			return helpWith(sqllex, "SHOW")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4445
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4481
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.str = "client_encoding"
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.str = "timezone"
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4514
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4577
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4586
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4670
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4723
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4742
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = true
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = true
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = false
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4828
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4929
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4931
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = true
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = false
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = true
		}
	case 862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = false
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5048
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5074
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5144
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5152
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5184
		{
		}
	case 899:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5193
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5216
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5297
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5437
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5489
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5538
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5540
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5552
		{
			return helpWith(sqllex, "RESUME")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5570
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5721
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5737
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5766
		{

			sqlVAL.union.val = nil
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.str = ""
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = nil
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5805
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5809
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 980:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5835
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5849
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5864
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5865
		{
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5921
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5947
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5958
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5961
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5964
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5965
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5971
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5987
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5992
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.str = ""
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6235
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = true
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = false
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6270
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6271
		{
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6372
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6410
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6490
		{
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6492
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6493
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6494
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6567
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6651
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6660
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6668
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6679
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6684
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6694
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6697
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6699
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6701
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6704
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6707
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6709
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6722
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6762
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = true
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{

			sqlVAL.union.val = true
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = false
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6787
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6801
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6813
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6825
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6835
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6845
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = nil
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6955
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6956
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6981
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6983
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6985
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6987
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6991
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7029
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7047
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7066
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7083
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7100
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7104
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = false
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = true
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = false
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = true
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = false
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7158
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7164
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7178
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.str = ""
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.str = ""
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7237
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7243
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7545
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7551
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7563
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7569
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7583
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7589
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7607
		{
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7610
		{
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7611
		{
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7622
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7640
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7649
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7670
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7678
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7699
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7707
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7718
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7722
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7723
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7724
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7743
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7748
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7761
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7776
		{
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7777
		{
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7797
		{
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7798
		{
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7826
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7839
		{
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7841
		{
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7845
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.str = ""
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7958
		{

		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7973
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.str = ""
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.str = ""
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.str = ""
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.str = ""
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8028
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8041
		{
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8089
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8093
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8178
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8252
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8273
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8288
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8432
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8467
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8469
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8574
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = true
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = false
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8644
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = nil
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8658
		{
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = true
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = false
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = false
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = true
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8687
		{
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8688
		{
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8691
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8692
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8733
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8759
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8788
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8821
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8876
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8877
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8880
		{
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8881
		{
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8915
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8916
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8917
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8947
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8949
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8964
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8986
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8996
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9007
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9038
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9077
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9087
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9133
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9163
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9196
		{
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = nil
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = true
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = false
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.str = tree.AstFull
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.str = tree.AstRight
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.str = tree.AstInner
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9315
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9316
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.str = tree.AstHash
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.str = ""
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9385
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9390
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9408
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9414
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9420
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9430
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = true
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = false
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = true
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = false
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9479
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9492
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9500
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9501
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9519
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9521
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9529
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9549
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9558
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9598
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9610
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9611
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9615
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9616
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9617
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9619
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9620
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9621
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9623
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9624
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9625
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9627
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9628
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9629
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9631
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9632
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9633
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9635
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9636
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9637
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9639
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9640
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9641
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9643
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9644
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9645
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = types.Geography
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9660
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9668
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9702
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = nil
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = types.Int2
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = types.Int
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = types.Float4
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = types.Float
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9745
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9753
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9761
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = types.Bool
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = types.Float
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9794
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9800
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9822
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = types.String
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = true
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = false
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = types.Date
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9871
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9879
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9893
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9902
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9910
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9927
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = true
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = false
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = false
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = types.Interval
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9951
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10035
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10050
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = nil
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10080
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10140
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10392
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10458
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10679
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10705
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10714
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10729
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10759
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10770
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10771
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10795
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10861
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10986
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11056
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11057
		{
			return unimplemented(sqllex, "treat")
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.str = ""
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11219
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11232
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11300
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11329
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = tree.Any
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = tree.Some
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = tree.All
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = tree.Div
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = tree.LT
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = tree.GT
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = tree.LE
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = tree.GE
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = tree.NE
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = tree.Like
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11690
		{
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11691
		{
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11763
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11771
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11844
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11860
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11869
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11880
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11889
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11909
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12122
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12135
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12142
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.str = ""
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
